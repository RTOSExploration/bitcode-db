; ModuleID = 'build/adafruit_itsybitsy_m4_express/basic/sys_heap/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type { [2 x i32], i32, i32, i32, i32, i32, [0 x %struct.z_heap_bucket] }
%struct.z_heap_bucket = type { i32 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.z_heap_bucket }
%struct.arm_mpu_region = type { i32, i8*, %struct.z_heap_bucket }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.sam0_eic_data = type { [2 x %struct.sam0_eic_port_data], [16 x %struct.anon.11.12] }
%struct.sam0_eic_port_data = type { void (i32, i8*)*, i8* }
%struct.anon.11.12 = type { i8 }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.uart_sam0_dev_cfg = type { %struct.SercomUsart*, i32, i32, i8, i32*, i32, i16, void (%struct.device*)*, %struct.pinctrl_dev_config* }
%struct.SercomUsart = type { %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.SERCOM_USART_BAUD_Type, %union.PORT_PMUX_Type, [5 x i8], %union.PORT_PMUX_Type, [1 x i8], %union.PORT_PMUX_Type, [1 x i8], %union.PORT_PMUX_Type, [1 x i8], %union.SERCOM_USART_BAUD_Type, %union.PORT_DIR_Type, %struct.anon.11.12, [1 x i8], %union.SERCOM_USART_BAUD_Type, [4 x i8], %union.PORT_DIR_Type, [4 x i8], %union.PORT_PMUX_Type }
%union.SERCOM_USART_BAUD_Type = type { %union.anon.2 }
%union.anon.2 = type { i16 }
%union.PORT_DIR_Type = type { %struct.z_heap_bucket }
%union.PORT_PMUX_Type = type { %struct.anon.11.12 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { i32*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_sam0_dev_data = type { %struct.uart_config, void (%struct.device*, i8*)*, i8* }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, i32, %struct.sys_memory_stats, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon = type { %struct._dnode }
%struct.sys_memory_stats = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.k_spinlock = type {}
%struct._thread_arch = type { i32, i32 }
%struct._static_thread_data = type { %struct.k_thread*, %struct.anon.11.12*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.str_context = type { i8*, i32, i32 }
%struct.chunk_unit_t = type { [8 x i8] }
%struct.z_heap_stress_result = type { i32, i32, i32, i64 }
%struct.z_heap_stress_rec = type { i8* (i8*, i32)*, void (i8*, i8*)*, i8*, i32, %struct.z_heap_stress_block*, i32, i32, i32, i32 }
%struct.z_heap_stress_block = type { i8*, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.z_heap_bucket, %struct.z_heap_bucket }
%struct.PortGroup = type { %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.PORT_DIR_Type, [16 x %union.PORT_PMUX_Type], [32 x %union.PORT_PMUX_Type], [32 x i8] }
%struct.soc_port_pin = type { %struct.PortGroup*, i32, i32 }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %struct.z_heap_bucket*, %struct.z_heap_bucket* }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [137 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [137 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 28084 to i8*), void (i8*)* inttoptr (i32 22233 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 28084 to i8*), void (i8*)* inttoptr (i32 22233 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 28084 to i8*), void (i8*)* inttoptr (i32 22233 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 28084 to i8*), void (i8*)* inttoptr (i32 22233 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 28084 to i8*), void (i8*)* inttoptr (i32 22233 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 28084 to i8*), void (i8*)* inttoptr (i32 22233 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 28084 to i8*), void (i8*)* inttoptr (i32 22233 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 28084 to i8*), void (i8*)* inttoptr (i32 22233 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 28084 to i8*), void (i8*)* inttoptr (i32 22233 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 28084 to i8*), void (i8*)* inttoptr (i32 22233 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 28084 to i8*), void (i8*)* inttoptr (i32 22233 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 28084 to i8*), void (i8*)* inttoptr (i32 22233 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 28084 to i8*), void (i8*)* inttoptr (i32 22233 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 28084 to i8*), void (i8*)* inttoptr (i32 22233 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 28084 to i8*), void (i8*)* inttoptr (i32 22233 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 28084 to i8*), void (i8*)* inttoptr (i32 22233 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 28108 to i8*), void (i8*)* inttoptr (i32 27253 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 28108 to i8*), void (i8*)* inttoptr (i32 27253 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 28108 to i8*), void (i8*)* inttoptr (i32 27253 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 28108 to i8*), void (i8*)* inttoptr (i32 27253 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@.str = private unnamed_addr constant [21 x i8] c"System heap sample\0A\0A\00", align 1
@heap = internal global %struct.sys_heap zeroinitializer, align 4, !dbg !25
@heap_mem = internal global [256 x i8] zeroinitializer, align 1, !dbg !105
@.str.1 = private unnamed_addr constant [58 x i8] c"allocated %zu, free %zu, max allocated %zu, heap size %u\0A\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !122
@.str.24 = private unnamed_addr constant [45 x i8] c"Heap at %p contains %d units in %d buckets\0A\0A\00", align 1
@.str.1.25 = private unnamed_addr constant [187 x i8] c"  bucket#    min units        total      largest      largest\0A             threshold       chunks      (units)      (bytes)\0A  -----------------------------------------------------------\0A\00", align 1
@.str.2 = private unnamed_addr constant [26 x i8] c"%9d %12d %12d %12d %12zd\0A\00", align 1
@.str.3 = private unnamed_addr constant [14 x i8] c"\0AChunk dump:\0A\00", align 1
@.str.4 = private unnamed_addr constant [46 x i8] c"chunk %4d: [%c] size=%-4d left=%-4d right=%d\0A\00", align 1
@.str.5 = private unnamed_addr constant [72 x i8] c"\0A%zd free bytes, %zd allocated bytes, overhead = %zd bytes (%zd.%zd%%)\0A\00", align 1
@rand32.state = internal unnamed_addr global i64 123456789, align 8, !dbg !131
@.str.28 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@llvm.compiler.used = appending global [27 x i8*] [i8* bitcast (%struct.init_entry* @__init_atmel_samd_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_22 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_22 to i8*), i8* bitcast (%struct._isr_list* @sam0_eic_init.__isr_sam0_eic_isr_irq_0 to i8*), i8* bitcast (%struct._isr_list* @sam0_eic_init.__isr_sam0_eic_isr_irq_1 to i8*), i8* bitcast (%struct._isr_list* @sam0_eic_init.__isr_sam0_eic_isr_irq_10 to i8*), i8* bitcast (%struct._isr_list* @sam0_eic_init.__isr_sam0_eic_isr_irq_11 to i8*), i8* bitcast (%struct._isr_list* @sam0_eic_init.__isr_sam0_eic_isr_irq_12 to i8*), i8* bitcast (%struct._isr_list* @sam0_eic_init.__isr_sam0_eic_isr_irq_13 to i8*), i8* bitcast (%struct._isr_list* @sam0_eic_init.__isr_sam0_eic_isr_irq_14 to i8*), i8* bitcast (%struct._isr_list* @sam0_eic_init.__isr_sam0_eic_isr_irq_15 to i8*), i8* bitcast (%struct._isr_list* @sam0_eic_init.__isr_sam0_eic_isr_irq_2 to i8*), i8* bitcast (%struct._isr_list* @sam0_eic_init.__isr_sam0_eic_isr_irq_3 to i8*), i8* bitcast (%struct._isr_list* @sam0_eic_init.__isr_sam0_eic_isr_irq_4 to i8*), i8* bitcast (%struct._isr_list* @sam0_eic_init.__isr_sam0_eic_isr_irq_5 to i8*), i8* bitcast (%struct._isr_list* @sam0_eic_init.__isr_sam0_eic_isr_irq_6 to i8*), i8* bitcast (%struct._isr_list* @sam0_eic_init.__isr_sam0_eic_isr_irq_7 to i8*), i8* bitcast (%struct._isr_list* @sam0_eic_init.__isr_sam0_eic_isr_irq_8 to i8*), i8* bitcast (%struct._isr_list* @sam0_eic_init.__isr_sam0_eic_isr_irq_9 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_36 to i8*), i8* bitcast (%struct._isr_list* @uart_sam0_irq_config_0.__isr_uart_sam0_isr_irq_0 to i8*), i8* bitcast (%struct._isr_list* @uart_sam0_irq_config_0.__isr_uart_sam0_isr_irq_1 to i8*), i8* bitcast (%struct._isr_list* @uart_sam0_irq_config_0.__isr_uart_sam0_isr_irq_2 to i8*), i8* bitcast (%struct._isr_list* @uart_sam0_irq_config_0.__isr_uart_sam0_isr_irq_3 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*)], section "llvm.metadata"
@__init_atmel_samd_init = internal constant %struct.init_entry { i32 (%struct.device*)* @atmel_samd_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !165
@_vector_start = external dso_local global [0 x i8], align 1
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.z_heap_bucket { i32 101384192 } }], align 4, !dbg !740
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [0 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !746
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !884
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !919
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.48, i32 0, i32 0), %struct.z_heap_bucket { i32 117571620 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.49, i32 0, i32 0), %struct.z_heap_bucket { i32 285933602 } }], align 4, !dbg !929
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !934
@.str.48 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.49 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@__device_dts_ord_22 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.50, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_22, i8* bitcast (%struct.sam0_eic_data* @eic_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_22, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !954
@__devicehdl_dts_ord_22 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1492
@.str.50 = private unnamed_addr constant [13 x i8] c"eic@40002800\00", align 1
@__devstate_dts_ord_22 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1441
@eic_data = internal global %struct.sam0_eic_data zeroinitializer, align 4, !dbg !1418
@__init___device_dts_ord_22 = internal constant %struct.init_entry { i32 (%struct.device*)* @sam0_eic_init, %struct.device* @__device_dts_ord_22 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1393
@sam0_eic_channels = internal unnamed_addr constant [2 x [32 x i8]] [[32 x i8] c"\00\01\02\03\04\05\06\07\FF\09\0A\0B\0C\0D\0E\0F\00\01\02\03\04\05\06\07\08\09\FF\0B\FF\FF\0E\0F", [32 x i8] c"\FF\FF\02\03\FF\FF\FF\FF\08\09\0A\0B\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\06\07\FF\FF\FF\FF\FF\FF\FF\FF"], align 1, !dbg !1443
@sam0_eic_init.__isr_sam0_eic_isr_irq_0 = internal global %struct._isr_list { i32 12, i32 0, i8* bitcast (void (%struct.device*)* @sam0_eic_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_22 to i8*) }, section ".intList", align 4, !dbg !1450
@sam0_eic_init.__isr_sam0_eic_isr_irq_1 = internal global %struct._isr_list { i32 13, i32 0, i8* bitcast (void (%struct.device*)* @sam0_eic_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_22 to i8*) }, section ".intList", align 4, !dbg !1462
@sam0_eic_init.__isr_sam0_eic_isr_irq_2 = internal global %struct._isr_list { i32 14, i32 0, i8* bitcast (void (%struct.device*)* @sam0_eic_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_22 to i8*) }, section ".intList", align 4, !dbg !1464
@sam0_eic_init.__isr_sam0_eic_isr_irq_3 = internal global %struct._isr_list { i32 15, i32 0, i8* bitcast (void (%struct.device*)* @sam0_eic_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_22 to i8*) }, section ".intList", align 4, !dbg !1466
@sam0_eic_init.__isr_sam0_eic_isr_irq_4 = internal global %struct._isr_list { i32 16, i32 0, i8* bitcast (void (%struct.device*)* @sam0_eic_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_22 to i8*) }, section ".intList", align 4, !dbg !1468
@sam0_eic_init.__isr_sam0_eic_isr_irq_5 = internal global %struct._isr_list { i32 17, i32 0, i8* bitcast (void (%struct.device*)* @sam0_eic_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_22 to i8*) }, section ".intList", align 4, !dbg !1470
@sam0_eic_init.__isr_sam0_eic_isr_irq_6 = internal global %struct._isr_list { i32 18, i32 0, i8* bitcast (void (%struct.device*)* @sam0_eic_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_22 to i8*) }, section ".intList", align 4, !dbg !1472
@sam0_eic_init.__isr_sam0_eic_isr_irq_7 = internal global %struct._isr_list { i32 19, i32 0, i8* bitcast (void (%struct.device*)* @sam0_eic_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_22 to i8*) }, section ".intList", align 4, !dbg !1474
@sam0_eic_init.__isr_sam0_eic_isr_irq_8 = internal global %struct._isr_list { i32 20, i32 0, i8* bitcast (void (%struct.device*)* @sam0_eic_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_22 to i8*) }, section ".intList", align 4, !dbg !1476
@sam0_eic_init.__isr_sam0_eic_isr_irq_9 = internal global %struct._isr_list { i32 21, i32 0, i8* bitcast (void (%struct.device*)* @sam0_eic_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_22 to i8*) }, section ".intList", align 4, !dbg !1478
@sam0_eic_init.__isr_sam0_eic_isr_irq_10 = internal global %struct._isr_list { i32 22, i32 0, i8* bitcast (void (%struct.device*)* @sam0_eic_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_22 to i8*) }, section ".intList", align 4, !dbg !1480
@sam0_eic_init.__isr_sam0_eic_isr_irq_11 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @sam0_eic_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_22 to i8*) }, section ".intList", align 4, !dbg !1482
@sam0_eic_init.__isr_sam0_eic_isr_irq_12 = internal global %struct._isr_list { i32 24, i32 0, i8* bitcast (void (%struct.device*)* @sam0_eic_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_22 to i8*) }, section ".intList", align 4, !dbg !1484
@sam0_eic_init.__isr_sam0_eic_isr_irq_13 = internal global %struct._isr_list { i32 25, i32 0, i8* bitcast (void (%struct.device*)* @sam0_eic_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_22 to i8*) }, section ".intList", align 4, !dbg !1486
@sam0_eic_init.__isr_sam0_eic_isr_irq_14 = internal global %struct._isr_list { i32 26, i32 0, i8* bitcast (void (%struct.device*)* @sam0_eic_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_22 to i8*) }, section ".intList", align 4, !dbg !1488
@sam0_eic_init.__isr_sam0_eic_isr_irq_15 = internal global %struct._isr_list { i32 27, i32 0, i8* bitcast (void (%struct.device*)* @sam0_eic_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_22 to i8*) }, section ".intList", align 4, !dbg !1490
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !1501
@__devicehdl_dts_ord_36 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1497
@.str.55 = private unnamed_addr constant [16 x i8] c"sercom@41014000\00", align 1
@uart_sam0_config_0 = internal constant %struct.uart_sam0_dev_cfg { %struct.SercomUsart* inttoptr (i32 1090600960 to %struct.SercomUsart*), i32 115200, i32 1048576, i8 0, i32* inttoptr (i32 1073743896 to i32*), i32 1024, i16 24, void (%struct.device*)* @uart_sam0_irq_config_0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_36 }, align 4, !dbg !1600
@uart_sam0_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_sam0_poll_in, void (%struct.device*, i8)* @uart_sam0_poll_out, i32 (%struct.device*)* @uart_sam0_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_sam0_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_sam0_config_get, i32 (%struct.device*, i8*, i32)* @uart_sam0_fifo_fill, i32 (%struct.device*, i8*, i32)* @uart_sam0_fifo_read, void (%struct.device*)* @uart_sam0_irq_tx_enable, void (%struct.device*)* @uart_sam0_irq_tx_disable, i32 (%struct.device*)* @uart_sam0_irq_tx_ready, void (%struct.device*)* @uart_sam0_irq_rx_enable, void (%struct.device*)* @uart_sam0_irq_rx_disable, i32 (%struct.device*)* @uart_sam0_irq_tx_complete, i32 (%struct.device*)* @uart_sam0_irq_rx_ready, void (%struct.device*)* @uart_sam0_irq_err_enable, void (%struct.device*)* @uart_sam0_irq_err_disable, i32 (%struct.device*)* @uart_sam0_irq_is_pending, i32 (%struct.device*)* @uart_sam0_irq_update, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* @uart_sam0_irq_callback_set }, align 4, !dbg !1976
@__devstate_dts_ord_36 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1932
@uart_sam0_data_0 = internal global %struct.uart_sam0_dev_data zeroinitializer, align 4, !dbg !1925
@__device_dts_ord_36 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.55, i32 0, i32 0), i8* bitcast (%struct.uart_sam0_dev_cfg* @uart_sam0_config_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_sam0_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_36, i8* bitcast (%struct.uart_sam0_dev_data* @uart_sam0_data_0 to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_36, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1916
@__init___device_dts_ord_36 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_sam0_init, %struct.device* @__device_dts_ord_36 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1918
@__pinctrl_dev_config__device_dts_ord_36 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_36, i32 0, i32 0), i8 1 }, align 4, !dbg !1951
@uart_sam0_irq_config_0.__isr_uart_sam0_isr_irq_0 = internal global %struct._isr_list { i32 58, i32 0, i8* bitcast (void (%struct.device*)* @uart_sam0_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !1934
@uart_sam0_irq_config_0.__isr_uart_sam0_isr_irq_1 = internal global %struct._isr_list { i32 59, i32 0, i8* bitcast (void (%struct.device*)* @uart_sam0_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !1945
@uart_sam0_irq_config_0.__isr_uart_sam0_isr_irq_2 = internal global %struct._isr_list { i32 60, i32 0, i8* bitcast (void (%struct.device*)* @uart_sam0_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !1947
@uart_sam0_irq_config_0.__isr_uart_sam0_isr_irq_3 = internal global %struct._isr_list { i32 61, i32 0, i8* bitcast (void (%struct.device*)* @uart_sam0_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !1949
@__pinctrl_states__device_dts_ord_36 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { i32* getelementptr inbounds ([2 x i32], [2 x i32]* @__pinctrl_state_pins_0__device_dts_ord_36, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1970
@__pinctrl_state_pins_0__device_dts_ord_36 = internal constant [2 x i32] [i32 855638016, i32 856686592], align 4, !dbg !1973
@overflow_cyc = internal global i32 0, align 4, !dbg !2218
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !2447
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !2449
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !2445
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !2416
@sam_port_addrs = internal unnamed_addr constant [4 x i32] [i32 1090551808, i32 1090551936, i32 1090552064, i32 1090552192], align 4, !dbg !2451
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !2634
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2048 x %struct.anon.11.12]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 8, !dbg !2640
@z_main_stack = dso_local global [1024 x %struct.anon.11.12] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 8, !dbg !2850
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2859
@z_idle_stacks = internal global [1 x [320 x %struct.anon.11.12]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 8, !dbg !2866
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2871
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.80 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.81, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.82, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.83, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.84, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.85, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.86, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i32 0, i32 0)], align 4, !dbg !2899
@.str.81 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.82 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.83 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.84 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.85 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.86 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !3011
@.str.8 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !3025
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !3133
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !3136
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !3138
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2864
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2861
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !3140
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !3176
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2728
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !3174
@.str.139 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3596 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #23, !dbg !3600, !srcloc !3601
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #23, !dbg !3602, !srcloc !3603
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #23, !dbg !3604, !srcloc !3605
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #23, !dbg !3606, !srcloc !3607
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3608, !srcloc !3609
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #23, !dbg !3610, !srcloc !3611
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #23, !dbg !3612, !srcloc !3613
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #23, !dbg !3614, !srcloc !3615
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #23, !dbg !3616, !srcloc !3617
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #23, !dbg !3618, !srcloc !3619
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #23, !dbg !3620, !srcloc !3621
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #23, !dbg !3622, !srcloc !3623
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #23, !dbg !3624, !srcloc !3625
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #23, !dbg !3626, !srcloc !3627
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #23, !dbg !3628, !srcloc !3629
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #23, !dbg !3630, !srcloc !3631
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #23, !dbg !3632, !srcloc !3633
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #23, !dbg !3634, !srcloc !3635
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3636, !srcloc !3637
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #23, !dbg !3638, !srcloc !3639
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #23, !dbg !3640, !srcloc !3641
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #23, !dbg !3642, !srcloc !3643
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2049) #23, !dbg !3644, !srcloc !3645
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3646, !srcloc !3647
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #23, !dbg !3648, !srcloc !3649
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #23, !dbg !3650, !srcloc !3651
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #23, !dbg !3652, !srcloc !3653
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #23, !dbg !3654, !srcloc !3657
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #23, !dbg !3658, !srcloc !3659
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3660, !srcloc !3661
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3662, !srcloc !3663
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3664, !srcloc !3665
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3666, !srcloc !3667
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #23, !dbg !3668, !srcloc !3669
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #23, !dbg !3670, !srcloc !3671
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #23, !dbg !3672, !srcloc !3673
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #23, !dbg !3674, !srcloc !3675
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3676, !srcloc !3677
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3678, !srcloc !3679
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3680, !srcloc !3681
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3682, !srcloc !3683
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3684, !srcloc !3685
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3686, !srcloc !3687
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #23, !dbg !3688, !srcloc !3689
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #23, !dbg !3690, !srcloc !3691
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #23, !dbg !3692, !srcloc !3693
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #23, !dbg !3694, !srcloc !3695
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #23, !dbg !3696, !srcloc !3697
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #23, !dbg !3698, !srcloc !3699
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3700, !srcloc !3701
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #23, !dbg !3702, !srcloc !3703
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #23, !dbg !3704, !srcloc !3705
  ret void, !dbg !3706
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !3709 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i32 0, i32 0)) #24, !dbg !3712
  tail call void @sys_heap_init(%struct.sys_heap* noundef nonnull @heap, i8* noundef getelementptr inbounds ([256 x i8], [256 x i8]* @heap_mem, i32 0, i32 0), i32 noundef 256) #24, !dbg !3713
  tail call void @print_sys_memory_stats() #25, !dbg !3714
  %1 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull @heap, i32 noundef 150) #24, !dbg !3715
  call void @llvm.dbg.value(metadata i8* %1, metadata !3711, metadata !DIExpression()), !dbg !3716
  tail call void @print_sys_memory_stats() #25, !dbg !3717
  %2 = tail call i8* @sys_heap_aligned_realloc(%struct.sys_heap* noundef nonnull @heap, i8* noundef %1, i32 noundef 0, i32 noundef 100) #24, !dbg !3718
  call void @llvm.dbg.value(metadata i8* %2, metadata !3711, metadata !DIExpression()), !dbg !3716
  tail call void @print_sys_memory_stats() #25, !dbg !3719
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull @heap, i8* noundef %2) #24, !dbg !3720
  tail call void @print_sys_memory_stats() #25, !dbg !3721
  ret void, !dbg !3722
}

; Function Attrs: noinline nounwind optsize
define dso_local void @print_sys_memory_stats() local_unnamed_addr #1 !dbg !3723 {
  %1 = alloca %struct.sys_memory_stats, align 4
  %2 = bitcast %struct.sys_memory_stats* %1 to i8*, !dbg !3732
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %2) #23, !dbg !3732
  call void @llvm.dbg.declare(metadata %struct.sys_memory_stats* %1, metadata !3725, metadata !DIExpression()), !dbg !3733
  %3 = call i32 @sys_heap_runtime_stats_get(%struct.sys_heap* noundef nonnull @heap, %struct.sys_memory_stats* noundef nonnull %1) #24, !dbg !3734
  %4 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 1, !dbg !3735
  %5 = load i32, i32* %4, align 4, !dbg !3735
  %6 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 0, !dbg !3736
  %7 = load i32, i32* %6, align 4, !dbg !3736
  %8 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 2, !dbg !3737
  %9 = load i32, i32* %8, align 4, !dbg !3737
  call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i32 0, i32 0), i32 noundef %5, i32 noundef %7, i32 noundef %9, i32 noundef 256) #24, !dbg !3738
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %2) #23, !dbg !3739
  ret void, !dbg !3739
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !3740 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3742, metadata !DIExpression()), !dbg !3743
  ret i32 0, !dbg !3744
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !3745 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !3749, metadata !DIExpression()), !dbg !3750
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !3751
  ret void, !dbg !3752
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #5 !dbg !3753 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !3756
  ret i8* %1, !dbg !3757
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !3758 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3770, metadata !DIExpression()), !dbg !3779
  call void @llvm.dbg.value(metadata i8* %0, metadata !3769, metadata !DIExpression()), !dbg !3779
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #25, !dbg !3780
  ret void, !dbg !3782
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !3783 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3787, metadata !DIExpression()), !dbg !3789
  call void @llvm.dbg.value(metadata i8* %1, metadata !3788, metadata !DIExpression()), !dbg !3789
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3790
  %4 = tail call i32 %3(i32 noundef %0) #24, !dbg !3790
  ret i32 %4, !dbg !3791
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !3792 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3804, metadata !DIExpression()), !dbg !3805
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3801, metadata !DIExpression()), !dbg !3805
  call void @llvm.dbg.value(metadata i8* %1, metadata !3802, metadata !DIExpression()), !dbg !3805
  call void @llvm.dbg.value(metadata i8* %2, metadata !3803, metadata !DIExpression()), !dbg !3805
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #24, !dbg !3806
  ret void, !dbg !3807
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !3808 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3812, metadata !DIExpression()), !dbg !3815
  call void @llvm.dbg.value(metadata i32 %1, metadata !3813, metadata !DIExpression()), !dbg !3815
  call void @llvm.dbg.value(metadata i32 0, metadata !3814, metadata !DIExpression()), !dbg !3815
  %3 = icmp eq i32 %1, 0, !dbg !3816
  br i1 %3, label %13, label %4, !dbg !3819

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3814, metadata !DIExpression()), !dbg !3815
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3820
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !3822
  %8 = load i8, i8* %7, align 1, !dbg !3822
  %9 = zext i8 %8 to i32, !dbg !3822
  %10 = tail call i32 %6(i32 noundef %9) #24, !dbg !3820
  %11 = add nuw i32 %5, 1, !dbg !3823
  call void @llvm.dbg.value(metadata i32 %11, metadata !3814, metadata !DIExpression()), !dbg !3815
  %12 = icmp eq i32 %11, %1, !dbg !3816
  br i1 %12, label %13, label %4, !dbg !3819, !llvm.loop !3824

13:                                               ; preds = %4, %2
  ret void, !dbg !3826
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !3827 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3831, metadata !DIExpression()), !dbg !3833
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !3834
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !3834
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !3832, metadata !DIExpression()), !dbg !3835
  call void @llvm.va_start(i8* nonnull %3), !dbg !3836
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !3837
  %5 = load i32, i32* %4, align 4, !dbg !3837
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !3837
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !3837
  call void @llvm.va_end(i8* nonnull %3), !dbg !3838
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !3839
  ret void, !dbg !3839
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #6

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !3840 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3844, metadata !DIExpression()), !dbg !3849
  call void @llvm.dbg.value(metadata i32 %1, metadata !3845, metadata !DIExpression()), !dbg !3849
  call void @llvm.dbg.value(metadata i8* %2, metadata !3846, metadata !DIExpression()), !dbg !3849
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !3850
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !3850
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !3847, metadata !DIExpression()), !dbg !3851
  call void @llvm.va_start(i8* nonnull %5), !dbg !3852
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !3853
  %7 = load i32, i32* %6, align 4, !dbg !3853
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !3853
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #25, !dbg !3853
  call void @llvm.dbg.value(metadata i32 %9, metadata !3848, metadata !DIExpression()), !dbg !3849
  call void @llvm.va_end(i8* nonnull %5), !dbg !3854
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !3855
  ret i32 %9, !dbg !3856
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !3857 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3864, metadata !DIExpression()), !dbg !3871
  call void @llvm.dbg.value(metadata i8* %0, metadata !3861, metadata !DIExpression()), !dbg !3871
  call void @llvm.dbg.value(metadata i32 %1, metadata !3862, metadata !DIExpression()), !dbg !3871
  call void @llvm.dbg.value(metadata i8* %2, metadata !3863, metadata !DIExpression()), !dbg !3871
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !3872
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #23, !dbg !3872
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !3865, metadata !DIExpression()), !dbg !3873
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !3874
  store i8* %0, i8** %7, align 4, !dbg !3874
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !3874
  store i32 %1, i32* %8, align 4, !dbg !3874
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !3874
  store i32 0, i32* %9, align 4, !dbg !3874
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #25, !dbg !3875
  %10 = load i32, i32* %9, align 4, !dbg !3876
  %11 = load i32, i32* %8, align 4, !dbg !3878
  %12 = icmp slt i32 %10, %11, !dbg !3879
  br i1 %12, label %13, label %15, !dbg !3880

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !3881
  store i8 0, i8* %14, align 1, !dbg !3883
  br label %15, !dbg !3884

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #23, !dbg !3885
  ret i32 %10, !dbg !3886
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #7 !dbg !3887 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3892, metadata !DIExpression()), !dbg !3894
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !3893, metadata !DIExpression()), !dbg !3894
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !3895
  %4 = load i8*, i8** %3, align 4, !dbg !3895
  %5 = icmp eq i8* %4, null, !dbg !3897
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !3898
  br i1 %5, label %12, label %8, !dbg !3899

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !3900
  %10 = load i32, i32* %9, align 4, !dbg !3900
  %11 = icmp slt i32 %7, %10, !dbg !3901
  br i1 %11, label %15, label %12, !dbg !3902

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !3903
  %14 = add nsw i32 %7, 1, !dbg !3905
  store i32 %14, i32* %13, align 4, !dbg !3905
  br label %25, !dbg !3906

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !3907
  %17 = icmp eq i32 %7, %16, !dbg !3909
  br i1 %17, label %18, label %21, !dbg !3910

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !3911
  store i32 %19, i32* %6, align 4, !dbg !3911
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3913
  store i8 0, i8* %20, align 1, !dbg !3914
  br label %25, !dbg !3915

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !3916
  %23 = add nsw i32 %7, 1, !dbg !3918
  store i32 %23, i32* %6, align 4, !dbg !3918
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3919
  store i8 %22, i8* %24, align 1, !dbg !3920
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !3921
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #8 !dbg !3922 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !3932, metadata !DIExpression()), !dbg !3936
  call void @llvm.dbg.value(metadata i8* %1, metadata !3933, metadata !DIExpression()), !dbg !3936
  call void @llvm.dbg.value(metadata i8* %2, metadata !3934, metadata !DIExpression()), !dbg !3936
  call void @llvm.dbg.value(metadata i8* %3, metadata !3935, metadata !DIExpression()), !dbg !3936
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #24, !dbg !3937
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #26, !dbg !3938
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #25, !dbg !3939
  unreachable, !dbg !3940
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #9 !dbg !3941 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #26, !dbg !4045
  ret %struct.k_thread* %1, !dbg !4046
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !4047 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !4052, metadata !DIExpression()), !dbg !4053
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4054, !srcloc !4056
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #24, !dbg !4057
  ret void, !dbg !4058
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #9 !dbg !4059 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4060, !srcloc !4062
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #24, !dbg !4063
  ret %struct.k_thread* %1, !dbg !4064
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define dso_local void @sys_heap_free(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #10 !dbg !4065 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4076, metadata !DIExpression()), !dbg !4080
  call void @llvm.dbg.value(metadata i8* %1, metadata !4077, metadata !DIExpression()), !dbg !4080
  %3 = icmp eq i8* %1, null, !dbg !4081
  br i1 %3, label %13, label %4, !dbg !4083

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4084
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !4084
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !4078, metadata !DIExpression()), !dbg !4080
  %7 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #25, !dbg !4085, !range !4086
  call void @llvm.dbg.value(metadata i32 %7, metadata !4079, metadata !DIExpression()), !dbg !4080
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %7, i1 noundef zeroext false) #25, !dbg !4087
  %8 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %7) #25, !dbg !4088, !range !4089
  %9 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %8) #25, !dbg !4090
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %6, i32 0, i32 4, !dbg !4091
  %11 = load i32, i32* %10, align 4, !dbg !4092
  %12 = sub i32 %11, %9, !dbg !4092
  store i32 %12, i32* %10, align 4, !dbg !4092
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #25, !dbg !4093
  br label %13

13:                                               ; preds = %2, %4
  ret void, !dbg !4094
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !4095 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4099, metadata !DIExpression()), !dbg !4103
  call void @llvm.dbg.value(metadata i8* %1, metadata !4100, metadata !DIExpression()), !dbg !4103
  call void @llvm.dbg.value(metadata i8* %1, metadata !4101, metadata !DIExpression()), !dbg !4103
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #25, !dbg !4104
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !4102, metadata !DIExpression()), !dbg !4103
  %4 = getelementptr inbounds i8, i8* %1, i32 -4, !dbg !4105
  %5 = ptrtoint i8* %4 to i32, !dbg !4106
  %6 = ptrtoint %struct.chunk_unit_t* %3 to i32, !dbg !4106
  %7 = sub i32 %5, %6, !dbg !4106
  %8 = lshr i32 %7, 3, !dbg !4107
  ret i32 %8, !dbg !4108
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #7 !dbg !4109 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4113, metadata !DIExpression()), !dbg !4118
  call void @llvm.dbg.value(metadata i32 %1, metadata !4114, metadata !DIExpression()), !dbg !4118
  call void @llvm.dbg.value(metadata i1 %2, metadata !4115, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4118
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #25, !dbg !4119
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !4116, metadata !DIExpression()), !dbg !4118
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4117, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4118
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !4120
  %6 = bitcast i8* %5 to i16*, !dbg !4120
  %7 = load i16, i16* %6, align 2, !dbg !4120
  %8 = and i16 %7, -2, !dbg !4124
  %9 = zext i1 %2 to i16, !dbg !4124
  %10 = or i16 %8, %9, !dbg !4124
  store i16 %10, i16* %6, align 2, !dbg !4120
  ret void, !dbg !4125
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !4126 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4131, metadata !DIExpression()), !dbg !4133
  call void @llvm.dbg.value(metadata i32 %1, metadata !4132, metadata !DIExpression()), !dbg !4133
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #25, !dbg !4134
  %4 = lshr i32 %3, 1, !dbg !4135
  ret i32 %4, !dbg !4136
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4137 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4141, metadata !DIExpression()), !dbg !4143
  call void @llvm.dbg.value(metadata i32 %1, metadata !4142, metadata !DIExpression()), !dbg !4143
  %3 = shl i32 %1, 3, !dbg !4144
  %4 = add i32 %3, -4, !dbg !4145
  ret i32 %4, !dbg !4146
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !4147 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4151, metadata !DIExpression()), !dbg !4153
  call void @llvm.dbg.value(metadata i32 %1, metadata !4152, metadata !DIExpression()), !dbg !4153
  %3 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !4154
  %4 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %3) #25, !dbg !4156
  br i1 %4, label %7, label %5, !dbg !4157

5:                                                ; preds = %2
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %3) #25, !dbg !4158
  %6 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !4160
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #25, !dbg !4161
  br label %7, !dbg !4162

7:                                                ; preds = %5, %2
  %8 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !4163, !range !4165
  %9 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %8) #25, !dbg !4166
  br i1 %9, label %13, label %10, !dbg !4167

10:                                               ; preds = %7
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %8) #25, !dbg !4168
  %11 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !4170, !range !4165
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %11, i32 noundef %1) #25, !dbg !4171
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !4172
  call void @llvm.dbg.value(metadata i32 %12, metadata !4152, metadata !DIExpression()), !dbg !4153
  br label %13, !dbg !4173

13:                                               ; preds = %10, %7
  %14 = phi i32 [ %1, %7 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !4152, metadata !DIExpression()), !dbg !4153
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %14) #25, !dbg !4174
  ret void, !dbg !4175
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !4176 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4180, metadata !DIExpression()), !dbg !4182
  call void @llvm.dbg.value(metadata i32 %1, metadata !4181, metadata !DIExpression()), !dbg !4182
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !4183
  %4 = add i32 %3, %1, !dbg !4184
  ret i32 %4, !dbg !4185
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !4186 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4190, metadata !DIExpression()), !dbg !4192
  call void @llvm.dbg.value(metadata i32 %1, metadata !4191, metadata !DIExpression()), !dbg !4192
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #25, !dbg !4193
  %4 = and i32 %3, 1, !dbg !4194
  %5 = icmp ne i32 %4, 0, !dbg !4193
  ret i1 %5, !dbg !4195
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !4196 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4198, metadata !DIExpression()), !dbg !4203
  call void @llvm.dbg.value(metadata i32 %1, metadata !4199, metadata !DIExpression()), !dbg !4203
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !4204, !range !4089
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #25, !dbg !4205
  call void @llvm.dbg.value(metadata i32 %4, metadata !4200, metadata !DIExpression()), !dbg !4206
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #25, !dbg !4207
  ret void, !dbg !4208
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !4209 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4213, metadata !DIExpression()), !dbg !4217
  call void @llvm.dbg.value(metadata i32 %1, metadata !4214, metadata !DIExpression()), !dbg !4217
  call void @llvm.dbg.value(metadata i32 %2, metadata !4215, metadata !DIExpression()), !dbg !4217
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !4218
  %5 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %2) #25, !dbg !4219
  %6 = add i32 %5, %4, !dbg !4220
  call void @llvm.dbg.value(metadata i32 %6, metadata !4216, metadata !DIExpression()), !dbg !4217
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #25, !dbg !4221
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #25, !dbg !4222
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #25, !dbg !4223
  ret void, !dbg !4224
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !4225 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4227, metadata !DIExpression()), !dbg !4229
  call void @llvm.dbg.value(metadata i32 %1, metadata !4228, metadata !DIExpression()), !dbg !4229
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #25, !dbg !4230
  %4 = sub i32 %1, %3, !dbg !4231
  ret i32 %4, !dbg !4232
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !4233 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4235, metadata !DIExpression()), !dbg !4240
  call void @llvm.dbg.value(metadata i32 %1, metadata !4236, metadata !DIExpression()), !dbg !4240
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !4241, !range !4089
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #25, !dbg !4242
  call void @llvm.dbg.value(metadata i32 %4, metadata !4237, metadata !DIExpression()), !dbg !4243
  tail call fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #25, !dbg !4244
  ret void, !dbg !4245
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #9 !dbg !4246 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4250, metadata !DIExpression()), !dbg !4253
  call void @llvm.dbg.value(metadata i32 %1, metadata !4251, metadata !DIExpression()), !dbg !4253
  %3 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %0) #25, !dbg !4254
  %4 = add i32 %1, 1, !dbg !4255
  %5 = sub i32 %4, %3, !dbg !4256
  call void @llvm.dbg.value(metadata i32 %5, metadata !4252, metadata !DIExpression()), !dbg !4253
  %6 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 false), !dbg !4257, !range !4258
  %7 = sub nsw i32 31, %6, !dbg !4259
  ret i32 %7, !dbg !4260
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !4261 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4265, metadata !DIExpression()), !dbg !4274
  call void @llvm.dbg.value(metadata i32 %1, metadata !4266, metadata !DIExpression()), !dbg !4274
  call void @llvm.dbg.value(metadata i32 %2, metadata !4267, metadata !DIExpression()), !dbg !4274
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %2), metadata !4268, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 28, DW_OP_stack_value)), !dbg !4274
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 6, i32 %2, i32 0, !dbg !4275
  %5 = load i32, i32* %4, align 4, !dbg !4275
  %6 = icmp eq i32 %5, 0, !dbg !4276
  br i1 %6, label %7, label %12, !dbg !4277

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !4278
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4280
  %10 = load i32, i32* %9, align 4, !dbg !4281
  %11 = or i32 %10, %8, !dbg !4281
  store i32 %11, i32* %9, align 4, !dbg !4281
  store i32 %1, i32* %4, align 4, !dbg !4282
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #25, !dbg !4283
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #25, !dbg !4284
  br label %14, !dbg !4285

12:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %5, metadata !4270, metadata !DIExpression()), !dbg !4286
  %13 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5) #25, !dbg !4287, !range !4288
  call void @llvm.dbg.value(metadata i32 %13, metadata !4273, metadata !DIExpression()), !dbg !4286
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %13) #25, !dbg !4289
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %5) #25, !dbg !4290
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %13, i32 noundef %1) #25, !dbg !4291
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5, i32 noundef %1) #25, !dbg !4292
  br label %14

14:                                               ; preds = %12, %7
  %15 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #25, !dbg !4293, !range !4089
  %16 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef nonnull %0, i32 noundef %15) #25, !dbg !4294
  %17 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, !dbg !4295
  %18 = load i32, i32* %17, align 4, !dbg !4296
  %19 = add i32 %18, %16, !dbg !4296
  store i32 %19, i32* %17, align 4, !dbg !4296
  ret void, !dbg !4297
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !4298 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4300, metadata !DIExpression()), !dbg !4303
  call void @llvm.dbg.value(metadata i32 %1, metadata !4301, metadata !DIExpression()), !dbg !4303
  call void @llvm.dbg.value(metadata i32 %2, metadata !4302, metadata !DIExpression()), !dbg !4303
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2, i32 noundef %2) #25, !dbg !4304
  ret void, !dbg !4305
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !4306 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4308, metadata !DIExpression()), !dbg !4311
  call void @llvm.dbg.value(metadata i32 %1, metadata !4309, metadata !DIExpression()), !dbg !4311
  call void @llvm.dbg.value(metadata i32 %2, metadata !4310, metadata !DIExpression()), !dbg !4311
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3, i32 noundef %2) #25, !dbg !4312
  ret void, !dbg !4313
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4314 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4316, metadata !DIExpression()), !dbg !4318
  call void @llvm.dbg.value(metadata i32 %1, metadata !4317, metadata !DIExpression()), !dbg !4318
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #25, !dbg !4319
  ret i32 %3, !dbg !4320
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #5 !dbg !4321 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4325, metadata !DIExpression()), !dbg !4330
  call void @llvm.dbg.value(metadata i32 %1, metadata !4326, metadata !DIExpression()), !dbg !4330
  call void @llvm.dbg.value(metadata i32 %2, metadata !4327, metadata !DIExpression()), !dbg !4330
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #25, !dbg !4331
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !4328, metadata !DIExpression()), !dbg !4330
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4329, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4330
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4329, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4330
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !4332
  call void @llvm.dbg.value(metadata i8* %5, metadata !4329, metadata !DIExpression()), !dbg !4330
  %6 = bitcast i8* %5 to i16*, !dbg !4333
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !4336
  %8 = load i16, i16* %7, align 2, !dbg !4336
  %9 = zext i16 %8 to i32, !dbg !4336
  ret i32 %9, !dbg !4337
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef readnone %0) unnamed_addr #11 !dbg !4338 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4342, metadata !DIExpression()), !dbg !4343
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !4344
  ret %struct.chunk_unit_t* %2, !dbg !4345
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @chunk_set(%struct.z_heap* noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #4 !dbg !4346 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4350, metadata !DIExpression()), !dbg !4356
  call void @llvm.dbg.value(metadata i32 %1, metadata !4351, metadata !DIExpression()), !dbg !4356
  call void @llvm.dbg.value(metadata i32 %2, metadata !4352, metadata !DIExpression()), !dbg !4356
  call void @llvm.dbg.value(metadata i32 %3, metadata !4353, metadata !DIExpression()), !dbg !4356
  %5 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #25, !dbg !4357
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %5, metadata !4354, metadata !DIExpression()), !dbg !4356
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %5, i32 %1), metadata !4355, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4356
  %6 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %5, i32 %1, i32 0, i32 0, !dbg !4358
  call void @llvm.dbg.value(metadata i8* %6, metadata !4355, metadata !DIExpression()), !dbg !4356
  %7 = trunc i32 %3 to i16, !dbg !4359
  %8 = bitcast i8* %6 to i16*, !dbg !4362
  %9 = getelementptr inbounds i16, i16* %8, i32 %2, !dbg !4363
  store i16 %7, i16* %9, align 2, !dbg !4364
  ret void, !dbg !4365
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @min_chunk_size(%struct.z_heap* nocapture noundef readnone %0) unnamed_addr #11 !dbg !4366 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4370, metadata !DIExpression()), !dbg !4371
  %2 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %0, i32 noundef 1) #25, !dbg !4372
  ret i32 %2, !dbg !4373
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bytes_to_chunksz(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4374 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4378, metadata !DIExpression()), !dbg !4380
  call void @llvm.dbg.value(metadata i32 %1, metadata !4379, metadata !DIExpression()), !dbg !4380
  %3 = add i32 %1, 4, !dbg !4381
  %4 = tail call fastcc i32 @chunksz(i32 noundef %3) #25, !dbg !4382
  ret i32 %4, !dbg !4383
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz(i32 noundef %0) unnamed_addr #11 !dbg !4384 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4388, metadata !DIExpression()), !dbg !4389
  %2 = add i32 %0, 7, !dbg !4390
  %3 = lshr i32 %2, 3, !dbg !4391
  ret i32 %3, !dbg !4392
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !4393 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4397, metadata !DIExpression()), !dbg !4400
  call void @llvm.dbg.value(metadata i32 %1, metadata !4398, metadata !DIExpression()), !dbg !4400
  call void @llvm.dbg.value(metadata i32 %2, metadata !4399, metadata !DIExpression()), !dbg !4400
  %4 = shl i32 %2, 1, !dbg !4401
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1, i32 noundef %4) #25, !dbg !4402
  ret void, !dbg !4403
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !4404 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4406, metadata !DIExpression()), !dbg !4409
  call void @llvm.dbg.value(metadata i32 %1, metadata !4407, metadata !DIExpression()), !dbg !4409
  call void @llvm.dbg.value(metadata i32 %2, metadata !4408, metadata !DIExpression()), !dbg !4409
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef %2) #25, !dbg !4410
  ret void, !dbg !4411
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !4412 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4414, metadata !DIExpression()), !dbg !4422
  call void @llvm.dbg.value(metadata i32 %1, metadata !4415, metadata !DIExpression()), !dbg !4422
  call void @llvm.dbg.value(metadata i32 %2, metadata !4416, metadata !DIExpression()), !dbg !4422
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 6, i32 %2, !dbg !4423
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %4, metadata !4417, metadata !DIExpression()), !dbg !4422
  %5 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !4424
  %6 = icmp eq i32 %5, %1, !dbg !4425
  br i1 %6, label %7, label %14, !dbg !4426

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !4427
  %9 = xor i32 %8, -1, !dbg !4429
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4430
  %11 = load i32, i32* %10, align 4, !dbg !4431
  %12 = and i32 %11, %9, !dbg !4431
  store i32 %12, i32* %10, align 4, !dbg !4431
  %13 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !4432
  store i32 0, i32* %13, align 4, !dbg !4433
  br label %17, !dbg !4434

14:                                               ; preds = %3
  %15 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !4435
  call void @llvm.dbg.value(metadata i32 %15, metadata !4418, metadata !DIExpression()), !dbg !4436
  call void @llvm.dbg.value(metadata i32 %5, metadata !4421, metadata !DIExpression()), !dbg !4436
  %16 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !4437
  store i32 %5, i32* %16, align 4, !dbg !4438
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %15, i32 noundef %5) #25, !dbg !4439
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %5, i32 noundef %15) #25, !dbg !4440
  br label %17

17:                                               ; preds = %14, %7
  %18 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #25, !dbg !4441, !range !4089
  %19 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef nonnull %0, i32 noundef %18) #25, !dbg !4442
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, !dbg !4443
  %21 = load i32, i32* %20, align 4, !dbg !4444
  %22 = sub i32 %21, %19, !dbg !4444
  store i32 %22, i32* %20, align 4, !dbg !4444
  ret void, !dbg !4445
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4446 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4448, metadata !DIExpression()), !dbg !4450
  call void @llvm.dbg.value(metadata i32 %1, metadata !4449, metadata !DIExpression()), !dbg !4450
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #25, !dbg !4451
  ret i32 %3, !dbg !4452
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @sys_heap_usable_size(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #5 !dbg !4453 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4457, metadata !DIExpression()), !dbg !4464
  call void @llvm.dbg.value(metadata i8* %1, metadata !4458, metadata !DIExpression()), !dbg !4464
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4465
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !4465
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !4459, metadata !DIExpression()), !dbg !4464
  %5 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %4, i8* noundef %1) #25, !dbg !4466
  call void @llvm.dbg.value(metadata i32 %5, metadata !4460, metadata !DIExpression()), !dbg !4464
  %6 = ptrtoint i8* %1 to i32, !dbg !4467
  call void @llvm.dbg.value(metadata i32 %6, metadata !4461, metadata !DIExpression()), !dbg !4464
  %7 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %4) #25, !dbg !4468
  %8 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %7, i32 %5, !dbg !4468
  %9 = ptrtoint %struct.chunk_unit_t* %8 to i32, !dbg !4469
  call void @llvm.dbg.value(metadata i32 %9, metadata !4462, metadata !DIExpression()), !dbg !4464
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %5) #25, !dbg !4470
  %11 = shl i32 %10, 3, !dbg !4471
  call void @llvm.dbg.value(metadata i32 %11, metadata !4463, metadata !DIExpression()), !dbg !4464
  %12 = sub i32 %9, %6, !dbg !4472
  %13 = add i32 %12, %11, !dbg !4473
  ret i32 %13, !dbg !4474
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 !dbg !4475 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4479, metadata !DIExpression()), !dbg !4485
  call void @llvm.dbg.value(metadata i32 %1, metadata !4480, metadata !DIExpression()), !dbg !4485
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4486
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !4486
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !4481, metadata !DIExpression()), !dbg !4485
  %5 = icmp eq i32 %1, 0, !dbg !4487
  br i1 %5, label %21, label %6, !dbg !4489

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %4, i32 noundef %1) #25, !dbg !4490
  br i1 %7, label %21, label %8, !dbg !4491

8:                                                ; preds = %6
  %9 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %4, i32 noundef %1) #25, !dbg !4492, !range !4086
  call void @llvm.dbg.value(metadata i32 %9, metadata !4483, metadata !DIExpression()), !dbg !4485
  %10 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %4, i32 noundef %9) #25, !dbg !4493
  call void @llvm.dbg.value(metadata i32 %10, metadata !4484, metadata !DIExpression()), !dbg !4485
  %11 = icmp eq i32 %10, 0, !dbg !4494
  br i1 %11, label %21, label %12, !dbg !4496

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #25, !dbg !4497
  %14 = icmp ugt i32 %13, %9, !dbg !4499
  br i1 %14, label %15, label %17, !dbg !4500

15:                                               ; preds = %12
  %16 = add i32 %10, %9, !dbg !4501
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %4, i32 noundef %10, i32 noundef %16) #25, !dbg !4503
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %4, i32 noundef %16) #25, !dbg !4504
  br label %17, !dbg !4505

17:                                               ; preds = %15, %12
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %4, i32 noundef %10, i1 noundef zeroext true) #25, !dbg !4506
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %4, i32 noundef %10) #25, !dbg !4507
  call void @llvm.dbg.value(metadata i8* %18, metadata !4482, metadata !DIExpression()), !dbg !4485
  %19 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #25, !dbg !4508, !range !4089
  %20 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %4, i32 noundef %19) #25, !dbg !4509, !range !4510
  tail call fastcc void @increase_allocated_bytes(%struct.z_heap* noundef %4, i32 noundef %20) #25, !dbg !4511
  br label %21, !dbg !4512

21:                                               ; preds = %17, %8, %2, %6
  %22 = phi i8* [ null, %6 ], [ null, %2 ], [ %18, %17 ], [ null, %8 ], !dbg !4485
  ret i8* %22, !dbg !4513
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @size_too_big(%struct.z_heap* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4514 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4518, metadata !DIExpression()), !dbg !4520
  call void @llvm.dbg.value(metadata i32 %1, metadata !4519, metadata !DIExpression()), !dbg !4520
  %3 = lshr i32 %1, 3, !dbg !4521
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !4522
  %5 = load i32, i32* %4, align 4, !dbg !4522
  %6 = icmp uge i32 %3, %5, !dbg !4523
  ret i1 %6, !dbg !4524
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @alloc_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !4525 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4529, metadata !DIExpression()), !dbg !4544
  call void @llvm.dbg.value(metadata i32 %1, metadata !4530, metadata !DIExpression()), !dbg !4544
  %3 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !4545
  call void @llvm.dbg.value(metadata i32 %3, metadata !4531, metadata !DIExpression()), !dbg !4544
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %3), metadata !4532, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 28, DW_OP_stack_value)), !dbg !4544
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 6, i32 %3, i32 0, !dbg !4546
  %5 = load i32, i32* %4, align 4, !dbg !4546
  %6 = icmp eq i32 %5, 0, !dbg !4547
  br i1 %6, label %19, label %7, !dbg !4548

7:                                                ; preds = %2, %13
  %8 = phi i32 [ %14, %13 ], [ %5, %2 ], !dbg !4549
  %9 = phi i32 [ %15, %13 ], [ 3, %2 ], !dbg !4550
  call void @llvm.dbg.value(metadata i32 %9, metadata !4536, metadata !DIExpression()), !dbg !4550
  call void @llvm.dbg.value(metadata i32 %8, metadata !4537, metadata !DIExpression()), !dbg !4551
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #25, !dbg !4552
  %11 = icmp ult i32 %10, %1, !dbg !4554
  br i1 %11, label %13, label %12, !dbg !4555

12:                                               ; preds = %7
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %8, i32 noundef %3) #25, !dbg !4556
  br label %30

13:                                               ; preds = %7
  %14 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #25, !dbg !4558
  store i32 %14, i32* %4, align 4, !dbg !4559
  %15 = add nsw i32 %9, -1, !dbg !4560
  call void @llvm.dbg.value(metadata i32 %15, metadata !4536, metadata !DIExpression()), !dbg !4550
  %16 = icmp eq i32 %15, 0, !dbg !4560
  %17 = icmp eq i32 %14, %5
  %18 = select i1 %16, i1 true, i1 %17, !dbg !4561
  br i1 %18, label %19, label %7, !dbg !4561, !llvm.loop !4562

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4565
  %21 = load i32, i32* %20, align 4, !dbg !4565
  %22 = add nsw i32 %3, 1, !dbg !4566
  %23 = shl nsw i32 -1, %22, !dbg !4566
  %24 = and i32 %21, %23, !dbg !4567
  call void @llvm.dbg.value(metadata i32 %24, metadata !4539, metadata !DIExpression()), !dbg !4544
  %25 = icmp eq i32 %24, 0, !dbg !4568
  br i1 %25, label %30, label %26, !dbg !4569

26:                                               ; preds = %19
  %27 = tail call i32 @llvm.cttz.i32(i32 %24, i1 true), !dbg !4570, !range !4258
  call void @llvm.dbg.value(metadata i32 %27, metadata !4540, metadata !DIExpression()), !dbg !4571
  %28 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 6, i32 %27, i32 0, !dbg !4572
  %29 = load i32, i32* %28, align 4, !dbg !4572
  call void @llvm.dbg.value(metadata i32 %29, metadata !4543, metadata !DIExpression()), !dbg !4571
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %29, i32 noundef %27) #25, !dbg !4573
  br label %30

30:                                               ; preds = %12, %26, %19
  %31 = phi i32 [ %29, %26 ], [ 0, %19 ], [ %8, %12 ], !dbg !4544
  ret i32 %31, !dbg !4574
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @split_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !4575 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4577, metadata !DIExpression()), !dbg !4583
  call void @llvm.dbg.value(metadata i32 %1, metadata !4578, metadata !DIExpression()), !dbg !4583
  call void @llvm.dbg.value(metadata i32 %2, metadata !4579, metadata !DIExpression()), !dbg !4583
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !4584
  call void @llvm.dbg.value(metadata i32 %4, metadata !4580, metadata !DIExpression()), !dbg !4583
  %5 = sub i32 %2, %1, !dbg !4585
  call void @llvm.dbg.value(metadata i32 %5, metadata !4581, metadata !DIExpression()), !dbg !4583
  %6 = sub i32 %4, %5, !dbg !4586
  call void @llvm.dbg.value(metadata i32 %6, metadata !4582, metadata !DIExpression()), !dbg !4583
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %5) #25, !dbg !4587
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %6) #25, !dbg !4588
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %5) #25, !dbg !4589
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #25, !dbg !4590
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #25, !dbg !4591
  ret void, !dbg !4592
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @chunk_mem(%struct.z_heap* noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4593 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4597, metadata !DIExpression()), !dbg !4601
  call void @llvm.dbg.value(metadata i32 %1, metadata !4598, metadata !DIExpression()), !dbg !4601
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #25, !dbg !4602
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !4599, metadata !DIExpression()), !dbg !4601
  %4 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %3, i32 %1, i32 0, i32 4, !dbg !4603
  call void @llvm.dbg.value(metadata i8* %4, metadata !4600, metadata !DIExpression()), !dbg !4601
  ret i8* %4, !dbg !4604
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @increase_allocated_bytes(%struct.z_heap* nocapture noundef %0, i32 noundef %1) unnamed_addr #7 !dbg !4605 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4609, metadata !DIExpression()), !dbg !4611
  call void @llvm.dbg.value(metadata i32 %1, metadata !4610, metadata !DIExpression()), !dbg !4611
  %3 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 4, !dbg !4612
  %4 = load i32, i32* %3, align 4, !dbg !4613
  %5 = add i32 %4, %1, !dbg !4613
  store i32 %5, i32* %3, align 4, !dbg !4613
  %6 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 5, !dbg !4614
  %7 = load i32, i32* %6, align 4, !dbg !4614
  %8 = icmp ugt i32 %7, %5, !dbg !4614
  %9 = select i1 %8, i32 %7, i32 %5, !dbg !4614
  store i32 %9, i32* %6, align 4, !dbg !4615
  ret void, !dbg !4616
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_aligned_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !4617 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4621, metadata !DIExpression()), !dbg !4633
  call void @llvm.dbg.value(metadata i32 %1, metadata !4622, metadata !DIExpression()), !dbg !4633
  call void @llvm.dbg.value(metadata i32 %2, metadata !4623, metadata !DIExpression()), !dbg !4633
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4634
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !4634
  call void @llvm.dbg.value(metadata %struct.z_heap* %5, metadata !4624, metadata !DIExpression()), !dbg !4633
  %6 = sub i32 0, %1, !dbg !4635
  %7 = and i32 %6, %1, !dbg !4636
  call void @llvm.dbg.value(metadata i32 %7, metadata !4626, metadata !DIExpression()), !dbg !4633
  %8 = icmp eq i32 %7, %1, !dbg !4637
  br i1 %8, label %13, label %9, !dbg !4639

9:                                                ; preds = %3
  %10 = sub i32 %1, %7, !dbg !4640
  call void @llvm.dbg.value(metadata i32 %10, metadata !4622, metadata !DIExpression()), !dbg !4633
  %11 = icmp ult i32 %7, 4, !dbg !4642
  %12 = select i1 %11, i32 %7, i32 4, !dbg !4642
  br label %17, !dbg !4642

13:                                               ; preds = %3
  %14 = icmp ult i32 %1, 5, !dbg !4643
  br i1 %14, label %15, label %17, !dbg !4646

15:                                               ; preds = %13
  %16 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2) #25, !dbg !4647
  br label %59, !dbg !4649

17:                                               ; preds = %9, %13
  %18 = phi i32 [ 0, %13 ], [ %7, %9 ], !dbg !4633
  %19 = phi i32 [ 4, %13 ], [ %12, %9 ], !dbg !4650
  %20 = phi i32 [ %1, %13 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !4622, metadata !DIExpression()), !dbg !4633
  call void @llvm.dbg.value(metadata i32 %19, metadata !4625, metadata !DIExpression()), !dbg !4633
  call void @llvm.dbg.value(metadata i32 %18, metadata !4626, metadata !DIExpression()), !dbg !4633
  %21 = icmp eq i32 %2, 0, !dbg !4651
  br i1 %21, label %59, label %22, !dbg !4653

22:                                               ; preds = %17
  %23 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %5, i32 noundef %2) #25, !dbg !4654
  br i1 %23, label %59, label %24, !dbg !4655

24:                                               ; preds = %22
  %25 = sub i32 %2, %19, !dbg !4656
  %26 = add i32 %25, %20, !dbg !4657
  %27 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %5, i32 noundef %26) #25, !dbg !4658, !range !4086
  call void @llvm.dbg.value(metadata i32 %27, metadata !4627, metadata !DIExpression()), !dbg !4633
  %28 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %5, i32 noundef %27) #25, !dbg !4659
  call void @llvm.dbg.value(metadata i32 %28, metadata !4628, metadata !DIExpression()), !dbg !4633
  %29 = icmp eq i32 %28, 0, !dbg !4660
  br i1 %29, label %59, label %30, !dbg !4662

30:                                               ; preds = %24
  %31 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %5, i32 noundef %28) #25, !dbg !4663
  call void @llvm.dbg.value(metadata i8* %31, metadata !4629, metadata !DIExpression()), !dbg !4633
  %32 = getelementptr inbounds i8, i8* %31, i32 %18, !dbg !4664
  %33 = ptrtoint i8* %32 to i32, !dbg !4664
  %34 = add i32 %20, -1, !dbg !4664
  %35 = add i32 %34, %33, !dbg !4664
  %36 = sub i32 0, %20, !dbg !4664
  %37 = and i32 %35, %36, !dbg !4664
  %38 = inttoptr i32 %37 to i8*, !dbg !4665
  %39 = sub i32 0, %18, !dbg !4666
  %40 = getelementptr inbounds i8, i8* %38, i32 %39, !dbg !4666
  call void @llvm.dbg.value(metadata i8* %40, metadata !4629, metadata !DIExpression()), !dbg !4633
  %41 = getelementptr inbounds i8, i8* %40, i32 %2, !dbg !4667
  %42 = ptrtoint i8* %41 to i32, !dbg !4667
  %43 = add i32 %42, 7, !dbg !4667
  %44 = and i32 %43, -8, !dbg !4667
  call void @llvm.dbg.value(metadata i32 %44, metadata !4630, metadata !DIExpression()), !dbg !4633
  %45 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %5, i8* noundef %40) #25, !dbg !4668
  call void @llvm.dbg.value(metadata i32 %45, metadata !4631, metadata !DIExpression()), !dbg !4633
  %46 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %5) #25, !dbg !4669
  %47 = ptrtoint %struct.chunk_unit_t* %46 to i32, !dbg !4670
  %48 = sub i32 %44, %47, !dbg !4670
  %49 = ashr exact i32 %48, 3, !dbg !4670
  call void @llvm.dbg.value(metadata i32 %49, metadata !4632, metadata !DIExpression()), !dbg !4633
  %50 = icmp ugt i32 %45, %28, !dbg !4671
  br i1 %50, label %51, label %52, !dbg !4673

51:                                               ; preds = %30
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %28, i32 noundef %45) #25, !dbg !4674
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %28) #25, !dbg !4676
  br label %52, !dbg !4677

52:                                               ; preds = %51, %30
  %53 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %5, i32 noundef %45) #25, !dbg !4678
  %54 = icmp ugt i32 %53, %49, !dbg !4680
  br i1 %54, label %55, label %56, !dbg !4681

55:                                               ; preds = %52
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %45, i32 noundef %49) #25, !dbg !4682
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %49) #25, !dbg !4684
  br label %56, !dbg !4685

56:                                               ; preds = %55, %52
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %5, i32 noundef %45, i1 noundef zeroext true) #25, !dbg !4686
  %57 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %5, i32 noundef %45) #25, !dbg !4687, !range !4089
  %58 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %5, i32 noundef %57) #25, !dbg !4688, !range !4510
  tail call fastcc void @increase_allocated_bytes(%struct.z_heap* noundef %5, i32 noundef %58) #25, !dbg !4689
  br label %59

59:                                               ; preds = %56, %24, %17, %22, %15
  %60 = phi i8* [ %16, %15 ], [ null, %22 ], [ null, %17 ], [ %40, %56 ], [ null, %24 ], !dbg !4633
  ret i8* %60, !dbg !4690
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_realloc(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !4691 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4695, metadata !DIExpression()), !dbg !4714
  call void @llvm.dbg.value(metadata i8* %1, metadata !4696, metadata !DIExpression()), !dbg !4714
  call void @llvm.dbg.value(metadata i32 %2, metadata !4697, metadata !DIExpression()), !dbg !4714
  call void @llvm.dbg.value(metadata i32 %3, metadata !4698, metadata !DIExpression()), !dbg !4714
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4715
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !4715
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !4699, metadata !DIExpression()), !dbg !4714
  %7 = icmp eq i8* %1, null, !dbg !4716
  br i1 %7, label %8, label %10, !dbg !4718

8:                                                ; preds = %4
  %9 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #25, !dbg !4719
  br label %65, !dbg !4721

10:                                               ; preds = %4
  %11 = icmp eq i32 %3, 0, !dbg !4722
  br i1 %11, label %12, label %13, !dbg !4724

12:                                               ; preds = %10
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #25, !dbg !4725
  br label %65, !dbg !4727

13:                                               ; preds = %10
  %14 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %6, i32 noundef %3) #25, !dbg !4728
  br i1 %14, label %65, label %15, !dbg !4730

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #25, !dbg !4731, !range !4086
  call void @llvm.dbg.value(metadata i32 %16, metadata !4700, metadata !DIExpression()), !dbg !4714
  %17 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %16) #25, !dbg !4732
  call void @llvm.dbg.value(metadata i32 %17, metadata !4701, metadata !DIExpression()), !dbg !4714
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %6, i32 noundef %16) #25, !dbg !4733
  %19 = ptrtoint i8* %1 to i32, !dbg !4734
  %20 = ptrtoint i8* %18 to i32, !dbg !4734
  %21 = sub i32 %19, %20, !dbg !4734
  call void @llvm.dbg.value(metadata i32 %21, metadata !4702, metadata !DIExpression()), !dbg !4714
  %22 = add i32 %21, %3, !dbg !4735
  %23 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %6, i32 noundef %22) #25, !dbg !4736
  call void @llvm.dbg.value(metadata i32 %23, metadata !4703, metadata !DIExpression()), !dbg !4714
  %24 = icmp eq i32 %2, 0, !dbg !4737
  br i1 %24, label %29, label %25, !dbg !4738

25:                                               ; preds = %15
  %26 = add i32 %2, -1, !dbg !4739
  %27 = and i32 %26, %19, !dbg !4740
  %28 = icmp eq i32 %27, 0, !dbg !4740
  br i1 %28, label %29, label %55, !dbg !4741

29:                                               ; preds = %25, %15
  %30 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #25, !dbg !4742
  %31 = icmp eq i32 %23, %30, !dbg !4743
  br i1 %31, label %65, label %32, !dbg !4744

32:                                               ; preds = %29
  %33 = icmp ult i32 %23, %30, !dbg !4745
  br i1 %33, label %34, label %41, !dbg !4746

34:                                               ; preds = %32
  %35 = sub i32 %23, %30, !dbg !4747
  %36 = shl i32 %35, 3, !dbg !4749
  %37 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %6, i32 0, i32 4, !dbg !4750
  %38 = load i32, i32* %37, align 4, !dbg !4751
  %39 = add i32 %38, %36, !dbg !4751
  store i32 %39, i32* %37, align 4, !dbg !4751
  %40 = add i32 %23, %16, !dbg !4752
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %40) #25, !dbg !4753
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #25, !dbg !4754
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %40) #25, !dbg !4755
  br label %65, !dbg !4756

41:                                               ; preds = %32
  %42 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %17) #25, !dbg !4757
  br i1 %42, label %55, label %43, !dbg !4758

43:                                               ; preds = %41
  %44 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #25, !dbg !4759
  %45 = add i32 %44, %30, !dbg !4760
  %46 = icmp ult i32 %45, %23, !dbg !4761
  br i1 %46, label %55, label %47, !dbg !4762

47:                                               ; preds = %43
  %48 = sub i32 %23, %30, !dbg !4763
  call void @llvm.dbg.value(metadata i32 %48, metadata !4704, metadata !DIExpression()), !dbg !4764
  %49 = shl i32 %48, 3, !dbg !4765
  tail call fastcc void @increase_allocated_bytes(%struct.z_heap* noundef %6, i32 noundef %49) #25, !dbg !4766
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %6, i32 noundef %17) #25, !dbg !4767
  %50 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #25, !dbg !4768
  %51 = icmp ult i32 %48, %50, !dbg !4770
  br i1 %51, label %52, label %54, !dbg !4771

52:                                               ; preds = %47
  %53 = add i32 %48, %17, !dbg !4772
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %17, i32 noundef %53) #25, !dbg !4774
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %6, i32 noundef %53) #25, !dbg !4775
  br label %54, !dbg !4776

54:                                               ; preds = %52, %47
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %17) #25, !dbg !4777
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #25, !dbg !4778
  br label %65

55:                                               ; preds = %43, %41, %25
  %56 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #25, !dbg !4779
  call void @llvm.dbg.value(metadata i8* %56, metadata !4710, metadata !DIExpression()), !dbg !4714
  %57 = icmp eq i8* %56, null, !dbg !4780
  br i1 %57, label %65, label %58, !dbg !4781

58:                                               ; preds = %55
  %59 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #25, !dbg !4782, !range !4089
  %60 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %59) #25, !dbg !4783
  %61 = sub i32 %60, %21, !dbg !4784
  call void @llvm.dbg.value(metadata i32 %61, metadata !4711, metadata !DIExpression()), !dbg !4785
  %62 = icmp ult i32 %61, %3, !dbg !4786
  %63 = select i1 %62, i32 %61, i32 %3, !dbg !4786
  %64 = tail call i8* @memcpy(i8* noundef nonnull %56, i8* noundef nonnull %1, i32 noundef %63) #24, !dbg !4787
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #25, !dbg !4788
  br label %65, !dbg !4789

65:                                               ; preds = %34, %54, %29, %58, %55, %13, %12, %8
  %66 = phi i8* [ %9, %8 ], [ null, %12 ], [ null, %13 ], [ %1, %34 ], [ %1, %54 ], [ %1, %29 ], [ %56, %58 ], [ null, %55 ], !dbg !4714
  ret i8* %66, !dbg !4790
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local void @sys_heap_init(%struct.sys_heap* nocapture noundef writeonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !4791 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4795, metadata !DIExpression()), !dbg !4806
  call void @llvm.dbg.value(metadata i8* %1, metadata !4796, metadata !DIExpression()), !dbg !4806
  call void @llvm.dbg.value(metadata i32 %2, metadata !4797, metadata !DIExpression()), !dbg !4806
  %4 = add i32 %2, -4, !dbg !4807
  call void @llvm.dbg.value(metadata i32 %4, metadata !4797, metadata !DIExpression()), !dbg !4806
  %5 = ptrtoint i8* %1 to i32, !dbg !4808
  %6 = add i32 %5, 7, !dbg !4808
  %7 = and i32 %6, -8, !dbg !4808
  call void @llvm.dbg.value(metadata i32 %7, metadata !4798, metadata !DIExpression()), !dbg !4806
  %8 = getelementptr inbounds i8, i8* %1, i32 %4, !dbg !4809
  %9 = ptrtoint i8* %8 to i32, !dbg !4809
  %10 = and i32 %9, -8, !dbg !4809
  call void @llvm.dbg.value(metadata i32 %10, metadata !4799, metadata !DIExpression()), !dbg !4806
  %11 = sub i32 %10, %7, !dbg !4810
  %12 = lshr exact i32 %11, 3, !dbg !4811
  call void @llvm.dbg.value(metadata i32 %12, metadata !4800, metadata !DIExpression()), !dbg !4806
  %13 = inttoptr i32 %7 to %struct.z_heap*, !dbg !4812
  call void @llvm.dbg.value(metadata %struct.z_heap* %13, metadata !4801, metadata !DIExpression()), !dbg !4806
  %14 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4813
  store %struct.z_heap* %13, %struct.z_heap** %14, align 4, !dbg !4814
  %15 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 1, !dbg !4815
  store i32 %12, i32* %15, align 8, !dbg !4816
  %16 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 2, !dbg !4817
  store i32 0, i32* %16, align 4, !dbg !4818
  %17 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 3, !dbg !4819
  store i32 0, i32* %17, align 8, !dbg !4820
  %18 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 4, !dbg !4821
  store i32 0, i32* %18, align 4, !dbg !4822
  %19 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 5, !dbg !4823
  store i32 0, i32* %19, align 8, !dbg !4824
  %20 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %13, i32 noundef %12) #25, !dbg !4825
  call void @llvm.dbg.value(metadata i32 %20, metadata !4802, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4806
  %21 = shl i32 %20, 2, !dbg !4826
  %22 = add i32 %21, 32, !dbg !4827
  %23 = tail call fastcc i32 @chunksz(i32 noundef %22) #25, !dbg !4828
  call void @llvm.dbg.value(metadata i32 %23, metadata !4803, metadata !DIExpression()), !dbg !4806
  call void @llvm.dbg.value(metadata i32 0, metadata !4804, metadata !DIExpression()), !dbg !4829
  %24 = icmp slt i32 %20, 0, !dbg !4830
  br i1 %24, label %25, label %27, !dbg !4832

25:                                               ; preds = %27, %3
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef %23) #25, !dbg !4833
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef 0) #25, !dbg !4834
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i1 noundef zeroext true) #25, !dbg !4835
  %26 = sub i32 %12, %23, !dbg !4836
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %23, i32 noundef %26) #25, !dbg !4837
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %23, i32 noundef %23) #25, !dbg !4838
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef 0) #25, !dbg !4839
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef %26) #25, !dbg !4840
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i1 noundef zeroext true) #25, !dbg !4841
  tail call fastcc void @free_list_add(%struct.z_heap* noundef nonnull %13, i32 noundef %23) #25, !dbg !4842
  ret void, !dbg !4843

27:                                               ; preds = %3, %27
  %28 = phi i32 [ %30, %27 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %28, metadata !4804, metadata !DIExpression()), !dbg !4829
  %29 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 6, i32 %28, i32 0, !dbg !4844
  store i32 0, i32* %29, align 4, !dbg !4846
  %30 = add nuw i32 %28, 1, !dbg !4847
  call void @llvm.dbg.value(metadata i32 %30, metadata !4804, metadata !DIExpression()), !dbg !4829
  %31 = icmp eq i32 %28, %20, !dbg !4830
  br i1 %31, label %25, label %27, !dbg !4832, !llvm.loop !4848
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local zeroext i1 @sys_heap_validate(%struct.sys_heap* noundef %0) local_unnamed_addr #12 !dbg !4850 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.sys_memory_stats, align 4
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4874, metadata !DIExpression()), !dbg !4900
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4901
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !4901
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !4875, metadata !DIExpression()), !dbg !4900
  %7 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef %6, i32 noundef 0) #25, !dbg !4902
  call void @llvm.dbg.value(metadata i32 %7, metadata !4876, metadata !DIExpression()), !dbg !4900
  %8 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %6, i32 0, i32 1
  %9 = load i32, i32* %8, align 4
  call void @llvm.dbg.value(metadata i32 %7, metadata !4876, metadata !DIExpression()), !dbg !4900
  %10 = icmp ult i32 %7, %9, !dbg !4904
  br i1 %10, label %11, label %17, !dbg !4906

11:                                               ; preds = %1, %14
  %12 = phi i32 [ %15, %14 ], [ %7, %1 ]
  call void @llvm.dbg.value(metadata i32 %12, metadata !4876, metadata !DIExpression()), !dbg !4900
  %13 = tail call fastcc zeroext i1 @valid_chunk(%struct.z_heap* noundef nonnull %6, i32 noundef %12) #25, !dbg !4907
  br i1 %13, label %14, label %138, !dbg !4910

14:                                               ; preds = %11
  %15 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef %6, i32 noundef %12) #25, !dbg !4911
  call void @llvm.dbg.value(metadata i32 %15, metadata !4876, metadata !DIExpression()), !dbg !4900
  %16 = icmp ult i32 %15, %9, !dbg !4904
  br i1 %16, label %11, label %17, !dbg !4906, !llvm.loop !4912

17:                                               ; preds = %14, %1
  %18 = phi i32 [ %7, %1 ], [ %15, %14 ], !dbg !4914
  %19 = icmp eq i32 %18, %9, !dbg !4915
  br i1 %19, label %20, label %138, !dbg !4917

20:                                               ; preds = %17
  %21 = bitcast i32* %2 to i8*, !dbg !4918
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21) #23, !dbg !4918
  %22 = bitcast i32* %3 to i8*, !dbg !4918
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %22) #23, !dbg !4918
  %23 = bitcast %struct.sys_memory_stats* %4 to i8*, !dbg !4919
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %23) #23, !dbg !4919
  call void @llvm.dbg.declare(metadata %struct.sys_memory_stats* %4, metadata !4879, metadata !DIExpression()), !dbg !4920
  call void @llvm.dbg.value(metadata i32* %2, metadata !4877, metadata !DIExpression(DW_OP_deref)), !dbg !4900
  call void @llvm.dbg.value(metadata i32* %3, metadata !4878, metadata !DIExpression(DW_OP_deref)), !dbg !4900
  call fastcc void @get_alloc_info(%struct.z_heap* noundef nonnull %6, i32* noundef nonnull %2, i32* noundef nonnull %3) #25, !dbg !4921
  %24 = call i32 @sys_heap_runtime_stats_get(%struct.sys_heap* noundef %0, %struct.sys_memory_stats* noundef nonnull %4) #25, !dbg !4922
  %25 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %4, i32 0, i32 1, !dbg !4923
  %26 = load i32, i32* %25, align 4, !dbg !4923
  %27 = load i32, i32* %2, align 4, !dbg !4925
  call void @llvm.dbg.value(metadata i32 %27, metadata !4877, metadata !DIExpression()), !dbg !4900
  %28 = icmp eq i32 %26, %27, !dbg !4926
  br i1 %28, label %29, label %136, !dbg !4927

29:                                               ; preds = %20
  %30 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %4, i32 0, i32 0, !dbg !4928
  %31 = load i32, i32* %30, align 4, !dbg !4928
  %32 = load i32, i32* %3, align 4, !dbg !4929
  call void @llvm.dbg.value(metadata i32 %32, metadata !4878, metadata !DIExpression()), !dbg !4900
  %33 = icmp eq i32 %31, %32, !dbg !4930
  br i1 %33, label %34, label %136, !dbg !4931

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 0, metadata !4885, metadata !DIExpression()), !dbg !4932
  %35 = load i32, i32* %8, align 4, !dbg !4933
  %36 = call fastcc i32 @bucket_idx.14(%struct.z_heap* noundef nonnull %6, i32 noundef %35) #25, !dbg !4934
  %37 = icmp slt i32 %36, 0, !dbg !4935
  br i1 %37, label %84, label %38, !dbg !4936

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %6, i32 0, i32 2
  br label %40, !dbg !4936

40:                                               ; preds = %38, %79
  %41 = phi i32 [ 0, %38 ], [ %80, %79 ]
  call void @llvm.dbg.value(metadata i32 %41, metadata !4885, metadata !DIExpression()), !dbg !4932
  %42 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %6, i32 0, i32 6, i32 %41, i32 0, !dbg !4937
  %43 = load i32, i32* %42, align 4, !dbg !4937
  call void @llvm.dbg.value(metadata i32 %43, metadata !4887, metadata !DIExpression()), !dbg !4938
  call void @llvm.dbg.value(metadata i32 0, metadata !4890, metadata !DIExpression()), !dbg !4938
  call void @llvm.dbg.value(metadata i32 %43, metadata !4876, metadata !DIExpression()), !dbg !4900
  %44 = icmp eq i32 %43, 0, !dbg !4939
  br i1 %44, label %45, label %50, !dbg !4942

45:                                               ; preds = %40
  %46 = load i32, i32* %39, align 4, !dbg !4943
  %47 = shl nuw i32 1, %41, !dbg !4944
  %48 = and i32 %46, %47, !dbg !4945
  %49 = icmp eq i32 %48, 0, !dbg !4946
  call void @llvm.dbg.value(metadata i1 %71, metadata !4891, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4938
  call void @llvm.dbg.value(metadata i1 %72, metadata !4892, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4938
  br i1 %49, label %76, label %136, !dbg !4947

50:                                               ; preds = %40, %63
  %51 = phi i32 [ %65, %63 ], [ %43, %40 ]
  %52 = phi i32 [ %64, %63 ], [ 0, %40 ]
  call void @llvm.dbg.value(metadata i32 %51, metadata !4876, metadata !DIExpression()), !dbg !4900
  call void @llvm.dbg.value(metadata i32 %52, metadata !4890, metadata !DIExpression()), !dbg !4938
  %53 = icmp eq i32 %52, 0, !dbg !4948
  %54 = icmp ne i32 %51, %43, !dbg !4949
  %55 = select i1 %53, i1 true, i1 %54, !dbg !4949
  br i1 %55, label %61, label %56, !dbg !4950

56:                                               ; preds = %50
  %57 = load i32, i32* %39, align 4, !dbg !4943
  %58 = shl nuw i32 1, %41, !dbg !4944
  %59 = and i32 %57, %58, !dbg !4945
  %60 = icmp eq i32 %59, 0, !dbg !4946
  call void @llvm.dbg.value(metadata i1 %71, metadata !4891, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4938
  call void @llvm.dbg.value(metadata i1 %72, metadata !4892, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4938
  br i1 %60, label %136, label %74, !dbg !4947

61:                                               ; preds = %50
  %62 = call fastcc zeroext i1 @valid_chunk(%struct.z_heap* noundef %6, i32 noundef %51) #25, !dbg !4951
  br i1 %62, label %63, label %136, !dbg !4954

63:                                               ; preds = %61
  call fastcc void @set_chunk_used.15(%struct.z_heap* noundef %6, i32 noundef %51, i1 noundef zeroext true) #25, !dbg !4955
  %64 = add i32 %52, 1, !dbg !4956
  call void @llvm.dbg.value(metadata i32 %64, metadata !4890, metadata !DIExpression()), !dbg !4938
  %65 = call fastcc i32 @next_free_chunk.16(%struct.z_heap* noundef %6, i32 noundef %51) #25, !dbg !4957
  call void @llvm.dbg.value(metadata i32 %65, metadata !4876, metadata !DIExpression()), !dbg !4900
  %66 = icmp eq i32 %65, 0, !dbg !4939
  br i1 %66, label %67, label %50, !dbg !4942, !llvm.loop !4958

67:                                               ; preds = %63
  %68 = load i32, i32* %39, align 4, !dbg !4943
  %69 = shl nuw i32 1, %41, !dbg !4944
  %70 = and i32 %68, %69, !dbg !4945
  %71 = icmp eq i32 %70, 0, !dbg !4946
  call void @llvm.dbg.value(metadata i1 %71, metadata !4891, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4938
  %72 = icmp ne i32 %64, 0, !dbg !4960
  call void @llvm.dbg.value(metadata i1 %72, metadata !4892, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4938
  %73 = xor i1 %72, %71, !dbg !4961
  br i1 %73, label %74, label %136, !dbg !4947

74:                                               ; preds = %56, %67
  %75 = phi i1 [ %71, %67 ], [ %60, %56 ]
  br i1 %75, label %76, label %79, !dbg !4963

76:                                               ; preds = %45, %74
  %77 = load i32, i32* %42, align 4, !dbg !4965
  %78 = icmp eq i32 %77, 0, !dbg !4966
  br i1 %78, label %79, label %136, !dbg !4967

79:                                               ; preds = %76, %74
  %80 = add nuw nsw i32 %41, 1, !dbg !4968
  call void @llvm.dbg.value(metadata i32 %80, metadata !4885, metadata !DIExpression()), !dbg !4932
  %81 = load i32, i32* %8, align 4, !dbg !4933
  %82 = call fastcc i32 @bucket_idx.14(%struct.z_heap* noundef nonnull %6, i32 noundef %81) #25, !dbg !4934
  %83 = icmp slt i32 %41, %82, !dbg !4935
  br i1 %83, label %40, label %84, !dbg !4936, !llvm.loop !4969

84:                                               ; preds = %79, %34
  %85 = phi i32 [ %35, %34 ], [ %81, %79 ], !dbg !4971
  call void @llvm.dbg.value(metadata i32 0, metadata !4893, metadata !DIExpression()), !dbg !4900
  %86 = call fastcc i32 @right_chunk.11(%struct.z_heap* noundef nonnull %6, i32 noundef 0) #25, !dbg !4974
  call void @llvm.dbg.value(metadata i32 %86, metadata !4876, metadata !DIExpression()), !dbg !4900
  %87 = icmp ult i32 %86, %85, !dbg !4975
  br i1 %87, label %88, label %99, !dbg !4976

88:                                               ; preds = %84, %95
  %89 = phi i32 [ %90, %95 ], [ 0, %84 ]
  %90 = phi i32 [ %96, %95 ], [ %86, %84 ]
  call void @llvm.dbg.value(metadata i32 %89, metadata !4893, metadata !DIExpression()), !dbg !4900
  call void @llvm.dbg.value(metadata i32 %90, metadata !4876, metadata !DIExpression()), !dbg !4900
  %91 = call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef nonnull %6, i32 noundef %90) #25, !dbg !4977
  br i1 %91, label %92, label %136, !dbg !4980

92:                                               ; preds = %88
  %93 = call fastcc i32 @left_chunk.18(%struct.z_heap* noundef nonnull %6, i32 noundef %90) #25, !dbg !4981
  %94 = icmp eq i32 %93, %89, !dbg !4983
  br i1 %94, label %95, label %136, !dbg !4984

95:                                               ; preds = %92
  call void @llvm.dbg.value(metadata i32 %90, metadata !4893, metadata !DIExpression()), !dbg !4900
  call fastcc void @set_chunk_used.15(%struct.z_heap* noundef %6, i32 noundef %90, i1 noundef zeroext false) #25, !dbg !4985
  %96 = call fastcc i32 @right_chunk.11(%struct.z_heap* noundef %6, i32 noundef %90) #25, !dbg !4986
  call void @llvm.dbg.value(metadata i32 %96, metadata !4876, metadata !DIExpression()), !dbg !4900
  %97 = load i32, i32* %8, align 4, !dbg !4971
  %98 = icmp ult i32 %96, %97, !dbg !4975
  br i1 %98, label %88, label %99, !dbg !4976, !llvm.loop !4987

99:                                               ; preds = %95, %84
  %100 = phi i32 [ %86, %84 ], [ %96, %95 ], !dbg !4989
  %101 = phi i32 [ %85, %84 ], [ %97, %95 ], !dbg !4971
  %102 = icmp eq i32 %100, %101, !dbg !4990
  br i1 %102, label %103, label %136, !dbg !4992

103:                                              ; preds = %99
  call void @llvm.dbg.value(metadata i32 0, metadata !4894, metadata !DIExpression()), !dbg !4993
  %104 = call fastcc i32 @bucket_idx.14(%struct.z_heap* noundef nonnull %6, i32 noundef %100) #25, !dbg !4994
  %105 = icmp slt i32 %104, 0, !dbg !4995
  br i1 %105, label %125, label %106, !dbg !4996

106:                                              ; preds = %103, %120
  %107 = phi i32 [ %121, %120 ], [ %100, %103 ]
  %108 = phi i32 [ %122, %120 ], [ 0, %103 ]
  call void @llvm.dbg.value(metadata i32 %108, metadata !4894, metadata !DIExpression()), !dbg !4993
  %109 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %6, i32 0, i32 6, i32 %108, i32 0, !dbg !4997
  %110 = load i32, i32* %109, align 4, !dbg !4997
  call void @llvm.dbg.value(metadata i32 %110, metadata !4896, metadata !DIExpression()), !dbg !4998
  call void @llvm.dbg.value(metadata i32 0, metadata !4899, metadata !DIExpression()), !dbg !4998
  %111 = icmp eq i32 %110, 0, !dbg !4999
  br i1 %111, label %120, label %112, !dbg !5001

112:                                              ; preds = %106, %115
  %113 = phi i32 [ %116, %115 ], [ %110, %106 ]
  call void @llvm.dbg.value(metadata i32 poison, metadata !4899, metadata !DIExpression()), !dbg !4998
  call void @llvm.dbg.value(metadata i32 %113, metadata !4876, metadata !DIExpression()), !dbg !4900
  %114 = call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef %6, i32 noundef %113) #25, !dbg !5002
  br i1 %114, label %136, label %115, !dbg !5007

115:                                              ; preds = %112
  call fastcc void @set_chunk_used.15(%struct.z_heap* noundef %6, i32 noundef %113, i1 noundef zeroext true) #25, !dbg !5008
  call void @llvm.dbg.value(metadata i32 poison, metadata !4899, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4998
  %116 = call fastcc i32 @next_free_chunk.16(%struct.z_heap* noundef %6, i32 noundef %113) #25, !dbg !5009
  call void @llvm.dbg.value(metadata i32 %116, metadata !4876, metadata !DIExpression()), !dbg !4900
  %117 = icmp eq i32 %116, %110, !dbg !5010
  br i1 %117, label %118, label %112, !dbg !5011, !llvm.loop !5012

118:                                              ; preds = %115
  %119 = load i32, i32* %8, align 4, !dbg !5014
  br label %120, !dbg !5015

120:                                              ; preds = %118, %106
  %121 = phi i32 [ %119, %118 ], [ %107, %106 ], !dbg !5014
  %122 = add nuw nsw i32 %108, 1, !dbg !5015
  call void @llvm.dbg.value(metadata i32 %122, metadata !4894, metadata !DIExpression()), !dbg !4993
  %123 = call fastcc i32 @bucket_idx.14(%struct.z_heap* noundef nonnull %6, i32 noundef %121) #25, !dbg !4994
  %124 = icmp slt i32 %108, %123, !dbg !4995
  br i1 %124, label %106, label %125, !dbg !4996, !llvm.loop !5016

125:                                              ; preds = %120, %103
  %126 = phi i32 [ %100, %103 ], [ %121, %120 ], !dbg !5018
  %127 = call fastcc i32 @right_chunk.11(%struct.z_heap* noundef nonnull %6, i32 noundef 0) #25, !dbg !5021
  call void @llvm.dbg.value(metadata i32 %127, metadata !4876, metadata !DIExpression()), !dbg !4900
  %128 = icmp ult i32 %127, %126, !dbg !5022
  br i1 %128, label %129, label %136, !dbg !5023

129:                                              ; preds = %125, %129
  %130 = phi i32 [ %133, %129 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i32 %130, metadata !4876, metadata !DIExpression()), !dbg !4900
  %131 = call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef nonnull %6, i32 noundef %130) #25, !dbg !5024
  %132 = xor i1 %131, true, !dbg !5026
  call fastcc void @set_chunk_used.15(%struct.z_heap* noundef nonnull %6, i32 noundef %130, i1 noundef zeroext %132) #25, !dbg !5027
  %133 = call fastcc i32 @right_chunk.11(%struct.z_heap* noundef nonnull %6, i32 noundef %130) #25, !dbg !5028
  call void @llvm.dbg.value(metadata i32 %133, metadata !4876, metadata !DIExpression()), !dbg !4900
  %134 = load i32, i32* %8, align 4, !dbg !5018
  %135 = icmp ult i32 %133, %134, !dbg !5022
  br i1 %135, label %129, label %136, !dbg !5023, !llvm.loop !5029

136:                                              ; preds = %76, %67, %45, %56, %61, %88, %92, %112, %129, %125, %99, %20, %29
  %137 = phi i1 [ false, %29 ], [ false, %20 ], [ false, %99 ], [ true, %125 ], [ true, %129 ], [ false, %112 ], [ false, %92 ], [ false, %88 ], [ false, %61 ], [ false, %56 ], [ false, %45 ], [ false, %67 ], [ false, %76 ], !dbg !4900
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %23) #23, !dbg !5031
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22) #23, !dbg !5031
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21) #23, !dbg !5031
  br label %138

138:                                              ; preds = %11, %17, %136
  %139 = phi i1 [ %137, %136 ], [ false, %17 ], [ false, %11 ], !dbg !4900
  ret i1 %139, !dbg !5031
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk.11(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !5032 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5036, metadata !DIExpression()), !dbg !5038
  call void @llvm.dbg.value(metadata i32 %1, metadata !5037, metadata !DIExpression()), !dbg !5038
  %3 = tail call fastcc i32 @chunk_size.21(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !5039
  %4 = add i32 %3, %1, !dbg !5040
  ret i32 %4, !dbg !5041
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @valid_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !5042 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5046, metadata !DIExpression()), !dbg !5048
  call void @llvm.dbg.value(metadata i32 %1, metadata !5047, metadata !DIExpression()), !dbg !5048
  %3 = tail call fastcc i32 @chunk_size.21(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !5049
  %4 = icmp eq i32 %3, 0, !dbg !5049
  br i1 %4, label %33, label %5, !dbg !5052

5:                                                ; preds = %2
  %6 = add i32 %3, %1, !dbg !5053
  %7 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !5053
  %8 = load i32, i32* %7, align 4, !dbg !5053
  %9 = icmp ugt i32 %6, %8, !dbg !5053
  br i1 %9, label %33, label %10, !dbg !5056

10:                                               ; preds = %5
  %11 = tail call fastcc zeroext i1 @in_bounds(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #25, !dbg !5057
  br i1 %11, label %12, label %33, !dbg !5060

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @left_chunk.18(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #25, !dbg !5061
  %14 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef nonnull %0, i32 noundef %13) #25, !dbg !5061
  %15 = icmp eq i32 %14, %1, !dbg !5061
  br i1 %15, label %16, label %33, !dbg !5064

16:                                               ; preds = %12
  %17 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #25, !dbg !5065
  %18 = tail call fastcc i32 @left_chunk.18(%struct.z_heap* noundef nonnull %0, i32 noundef %17) #25, !dbg !5065
  %19 = icmp eq i32 %18, %1, !dbg !5065
  br i1 %19, label %20, label %33, !dbg !5068

20:                                               ; preds = %16
  %21 = tail call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #25, !dbg !5069
  br i1 %21, label %32, label %22, !dbg !5071

22:                                               ; preds = %20
  %23 = tail call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef nonnull %0, i32 noundef %13) #25, !dbg !5072
  br i1 %23, label %24, label %33, !dbg !5076

24:                                               ; preds = %22
  %25 = tail call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef nonnull %0, i32 noundef %17) #25, !dbg !5077
  br i1 %25, label %26, label %33, !dbg !5080

26:                                               ; preds = %24
  %27 = tail call fastcc i32 @prev_free_chunk.23(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #25, !dbg !5081, !range !4288
  %28 = tail call fastcc zeroext i1 @in_bounds(%struct.z_heap* noundef nonnull %0, i32 noundef %27) #25, !dbg !5081
  br i1 %28, label %29, label %33, !dbg !5086

29:                                               ; preds = %26
  %30 = tail call fastcc i32 @next_free_chunk.16(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #25, !dbg !5087, !range !4288
  %31 = tail call fastcc zeroext i1 @in_bounds(%struct.z_heap* noundef nonnull %0, i32 noundef %30) #25, !dbg !5087
  br i1 %31, label %32, label %33, !dbg !5090

32:                                               ; preds = %20, %29
  br label %33, !dbg !5091

33:                                               ; preds = %29, %26, %24, %22, %16, %12, %10, %5, %2, %32
  %34 = phi i1 [ true, %32 ], [ false, %2 ], [ false, %5 ], [ false, %10 ], [ false, %12 ], [ false, %16 ], [ false, %22 ], [ false, %24 ], [ false, %26 ], [ false, %29 ], !dbg !5048
  ret i1 %34, !dbg !5092
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc void @get_alloc_info(%struct.z_heap* noundef %0, i32* nocapture noundef %1, i32* nocapture noundef %2) unnamed_addr #13 !dbg !5093 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5097, metadata !DIExpression()), !dbg !5101
  call void @llvm.dbg.value(metadata i32* %1, metadata !5098, metadata !DIExpression()), !dbg !5101
  call void @llvm.dbg.value(metadata i32* %2, metadata !5099, metadata !DIExpression()), !dbg !5101
  store i32 0, i32* %1, align 4, !dbg !5102
  store i32 0, i32* %2, align 4, !dbg !5103
  %4 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef %0, i32 noundef 0) #25, !dbg !5104
  call void @llvm.dbg.value(metadata i32 %4, metadata !5100, metadata !DIExpression()), !dbg !5101
  %5 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1
  call void @llvm.dbg.value(metadata i32 %4, metadata !5100, metadata !DIExpression()), !dbg !5101
  %6 = load i32, i32* %5, align 4, !dbg !5106
  %7 = icmp ult i32 %4, %6, !dbg !5108
  br i1 %7, label %8, label %19, !dbg !5109

8:                                                ; preds = %3, %8
  %9 = phi i32 [ %16, %8 ], [ %4, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5100, metadata !DIExpression()), !dbg !5101
  %10 = tail call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef nonnull %0, i32 noundef %9) #25, !dbg !5110
  %11 = tail call fastcc i32 @chunk_size.21(%struct.z_heap* noundef nonnull %0, i32 noundef %9) #25, !dbg !5113, !range !4089
  %12 = tail call fastcc i32 @chunksz_to_bytes.22(%struct.z_heap* noundef nonnull %0, i32 noundef %11) #25, !dbg !5113
  %13 = select i1 %10, i32* %1, i32* %2, !dbg !5113
  %14 = load i32, i32* %13, align 4, !dbg !5113
  %15 = add i32 %14, %12, !dbg !5113
  store i32 %15, i32* %13, align 4, !dbg !5113
  %16 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef %0, i32 noundef %9) #25, !dbg !5114
  call void @llvm.dbg.value(metadata i32 %16, metadata !5100, metadata !DIExpression()), !dbg !5101
  %17 = load i32, i32* %5, align 4, !dbg !5106
  %18 = icmp ult i32 %16, %17, !dbg !5108
  br i1 %18, label %8, label %19, !dbg !5109, !llvm.loop !5115

19:                                               ; preds = %8, %3
  ret void, !dbg !5117
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @sys_heap_runtime_stats_get(%struct.sys_heap* noundef readonly %0, %struct.sys_memory_stats* noundef writeonly %1) local_unnamed_addr #7 !dbg !5118 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5123, metadata !DIExpression()), !dbg !5125
  call void @llvm.dbg.value(metadata %struct.sys_memory_stats* %1, metadata !5124, metadata !DIExpression()), !dbg !5125
  %3 = icmp eq %struct.sys_heap* %0, null, !dbg !5126
  %4 = icmp eq %struct.sys_memory_stats* %1, null
  %5 = or i1 %3, %4, !dbg !5128
  br i1 %5, label %20, label %6, !dbg !5128

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5129
  %8 = load %struct.z_heap*, %struct.z_heap** %7, align 4, !dbg !5129
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %8, i32 0, i32 3, !dbg !5130
  %10 = load i32, i32* %9, align 4, !dbg !5130
  %11 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 0, !dbg !5131
  store i32 %10, i32* %11, align 4, !dbg !5132
  %12 = load %struct.z_heap*, %struct.z_heap** %7, align 4, !dbg !5133
  %13 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %12, i32 0, i32 4, !dbg !5134
  %14 = load i32, i32* %13, align 4, !dbg !5134
  %15 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 1, !dbg !5135
  store i32 %14, i32* %15, align 4, !dbg !5136
  %16 = load %struct.z_heap*, %struct.z_heap** %7, align 4, !dbg !5137
  %17 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %16, i32 0, i32 5, !dbg !5138
  %18 = load i32, i32* %17, align 4, !dbg !5138
  %19 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 2, !dbg !5139
  store i32 %18, i32* %19, align 4, !dbg !5140
  br label %20, !dbg !5141

20:                                               ; preds = %2, %6
  %21 = phi i32 [ 0, %6 ], [ -22, %2 ], !dbg !5125
  ret i32 %21, !dbg !5142
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx.14(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #9 !dbg !5143 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5147, metadata !DIExpression()), !dbg !5150
  call void @llvm.dbg.value(metadata i32 %1, metadata !5148, metadata !DIExpression()), !dbg !5150
  call void @llvm.dbg.value(metadata i32 %1, metadata !5149, metadata !DIExpression()), !dbg !5150
  %3 = tail call i32 @llvm.ctlz.i32(i32 %1, i1 false), !dbg !5151, !range !4258
  %4 = sub nsw i32 31, %3, !dbg !5152
  ret i32 %4, !dbg !5153
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used.15(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #7 !dbg !5154 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5158, metadata !DIExpression()), !dbg !5163
  call void @llvm.dbg.value(metadata i32 %1, metadata !5159, metadata !DIExpression()), !dbg !5163
  call void @llvm.dbg.value(metadata i1 %2, metadata !5160, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5163
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf.20(%struct.z_heap* noundef %0) #25, !dbg !5164
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !5161, metadata !DIExpression()), !dbg !5163
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !5162, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5163
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !5165
  %6 = bitcast i8* %5 to i16*, !dbg !5165
  %7 = load i16, i16* %6, align 2, !dbg !5165
  %8 = and i16 %7, -2, !dbg !5169
  %9 = zext i1 %2 to i16, !dbg !5169
  %10 = or i16 %8, %9, !dbg !5169
  store i16 %10, i16* %6, align 2, !dbg !5165
  ret void, !dbg !5170
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk.16(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !5171 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5173, metadata !DIExpression()), !dbg !5175
  call void @llvm.dbg.value(metadata i32 %1, metadata !5174, metadata !DIExpression()), !dbg !5175
  %3 = tail call fastcc i32 @chunk_field.19(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #25, !dbg !5176
  ret i32 %3, !dbg !5177
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !5178 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5180, metadata !DIExpression()), !dbg !5182
  call void @llvm.dbg.value(metadata i32 %1, metadata !5181, metadata !DIExpression()), !dbg !5182
  %3 = tail call fastcc i32 @chunk_field.19(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #25, !dbg !5183
  %4 = and i32 %3, 1, !dbg !5184
  %5 = icmp ne i32 %4, 0, !dbg !5183
  ret i1 %5, !dbg !5185
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk.18(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !5186 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5188, metadata !DIExpression()), !dbg !5190
  call void @llvm.dbg.value(metadata i32 %1, metadata !5189, metadata !DIExpression()), !dbg !5190
  %3 = tail call fastcc i32 @chunk_field.19(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #25, !dbg !5191
  %4 = sub i32 %1, %3, !dbg !5192
  ret i32 %4, !dbg !5193
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field.19(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #5 !dbg !5194 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5198, metadata !DIExpression()), !dbg !5203
  call void @llvm.dbg.value(metadata i32 %1, metadata !5199, metadata !DIExpression()), !dbg !5203
  call void @llvm.dbg.value(metadata i32 %2, metadata !5200, metadata !DIExpression()), !dbg !5203
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf.20(%struct.z_heap* noundef %0) #25, !dbg !5204
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !5201, metadata !DIExpression()), !dbg !5203
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !5202, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5203
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !5202, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5203
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !5205
  call void @llvm.dbg.value(metadata i8* %5, metadata !5202, metadata !DIExpression()), !dbg !5203
  %6 = bitcast i8* %5 to i16*, !dbg !5206
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !5209
  %8 = load i16, i16* %7, align 2, !dbg !5209
  %9 = zext i16 %8 to i32, !dbg !5209
  ret i32 %9, !dbg !5210
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf.20(%struct.z_heap* noundef readnone %0) unnamed_addr #11 !dbg !5211 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5215, metadata !DIExpression()), !dbg !5216
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !5217
  ret %struct.chunk_unit_t* %2, !dbg !5218
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size.21(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !5219 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5223, metadata !DIExpression()), !dbg !5225
  call void @llvm.dbg.value(metadata i32 %1, metadata !5224, metadata !DIExpression()), !dbg !5225
  %3 = tail call fastcc i32 @chunk_field.19(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #25, !dbg !5226
  %4 = lshr i32 %3, 1, !dbg !5227
  ret i32 %4, !dbg !5228
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes.22(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !5229 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5233, metadata !DIExpression()), !dbg !5235
  call void @llvm.dbg.value(metadata i32 %1, metadata !5234, metadata !DIExpression()), !dbg !5235
  %3 = shl i32 %1, 3, !dbg !5236
  %4 = add i32 %3, -4, !dbg !5237
  ret i32 %4, !dbg !5238
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @in_bounds(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !5239 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5241, metadata !DIExpression()), !dbg !5243
  call void @llvm.dbg.value(metadata i32 %1, metadata !5242, metadata !DIExpression()), !dbg !5243
  %3 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef %0, i32 noundef 0) #25, !dbg !5244
  %4 = icmp ugt i32 %3, %1, !dbg !5244
  br i1 %4, label %12, label %5, !dbg !5247

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !5248
  %7 = load i32, i32* %6, align 4, !dbg !5248
  %8 = icmp ugt i32 %7, %1, !dbg !5248
  br i1 %8, label %9, label %12, !dbg !5251

9:                                                ; preds = %5
  %10 = tail call fastcc i32 @chunk_size.21(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #25, !dbg !5252
  %11 = icmp ult i32 %10, %7, !dbg !5252
  br label %12, !dbg !5243

12:                                               ; preds = %9, %5, %2
  %13 = phi i1 [ false, %2 ], [ false, %5 ], [ %11, %9 ], !dbg !5243
  ret i1 %13, !dbg !5255
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk.23(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !5256 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5258, metadata !DIExpression()), !dbg !5260
  call void @llvm.dbg.value(metadata i32 %1, metadata !5259, metadata !DIExpression()), !dbg !5260
  %3 = tail call fastcc i32 @chunk_field.19(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #25, !dbg !5261
  ret i32 %3, !dbg !5262
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_heap_stress(i8* (i8*, i32)* noundef %0, void (i8*, i8*)* noundef %1, i8* noundef %2, i32 noundef %3, i32 noundef %4, i8* noundef %5, i32 noundef %6, i32 noundef %7, %struct.z_heap_stress_result* nocapture noundef %8) local_unnamed_addr #1 !dbg !5263 {
  %10 = alloca %struct.z_heap_stress_rec, align 4
  call void @llvm.dbg.value(metadata i8* (i8*, i32)* %0, metadata !5280, metadata !DIExpression()), !dbg !5318
  call void @llvm.dbg.value(metadata void (i8*, i8*)* %1, metadata !5281, metadata !DIExpression()), !dbg !5318
  call void @llvm.dbg.value(metadata i8* %2, metadata !5282, metadata !DIExpression()), !dbg !5318
  call void @llvm.dbg.value(metadata i32 %3, metadata !5283, metadata !DIExpression()), !dbg !5318
  call void @llvm.dbg.value(metadata i32 %4, metadata !5284, metadata !DIExpression()), !dbg !5318
  call void @llvm.dbg.value(metadata i8* %5, metadata !5285, metadata !DIExpression()), !dbg !5318
  call void @llvm.dbg.value(metadata i32 %6, metadata !5286, metadata !DIExpression()), !dbg !5318
  call void @llvm.dbg.value(metadata i32 %7, metadata !5287, metadata !DIExpression()), !dbg !5318
  call void @llvm.dbg.value(metadata %struct.z_heap_stress_result* %8, metadata !5288, metadata !DIExpression()), !dbg !5318
  %11 = bitcast %struct.z_heap_stress_rec* %10 to i8*, !dbg !5319
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %11) #23, !dbg !5319
  call void @llvm.dbg.declare(metadata %struct.z_heap_stress_rec* %10, metadata !5289, metadata !DIExpression()), !dbg !5320
  %12 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 0, !dbg !5321
  store i8* (i8*, i32)* %0, i8* (i8*, i32)** %12, align 4, !dbg !5321
  %13 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 1, !dbg !5321
  store void (i8*, i8*)* %1, void (i8*, i8*)** %13, align 4, !dbg !5321
  %14 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 2, !dbg !5321
  store i8* %2, i8** %14, align 4, !dbg !5321
  %15 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 3, !dbg !5321
  store i32 %3, i32* %15, align 4, !dbg !5321
  %16 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 4, !dbg !5321
  %17 = bitcast %struct.z_heap_stress_block** %16 to i8**, !dbg !5321
  store i8* %5, i8** %17, align 4, !dbg !5321
  %18 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 5, !dbg !5321
  %19 = lshr i32 %6, 3, !dbg !5322
  store i32 %19, i32* %18, align 4, !dbg !5321
  %20 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 6, !dbg !5321
  store i32 0, i32* %20, align 4, !dbg !5321
  %21 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 7, !dbg !5321
  store i32 0, i32* %21, align 4, !dbg !5321
  %22 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 8, !dbg !5321
  store i32 %7, i32* %22, align 4, !dbg !5321
  %23 = bitcast %struct.z_heap_stress_result* %8 to i8*, !dbg !5323
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %23, i8 0, i32 24, i1 false), !dbg !5323
  call void @llvm.dbg.value(metadata i32 0, metadata !5306, metadata !DIExpression()), !dbg !5324
  %24 = icmp eq i32 %4, 0, !dbg !5325
  %25 = bitcast i8* %5 to %struct.z_heap_stress_block*, !dbg !5326
  br i1 %24, label %31, label %26, !dbg !5326

26:                                               ; preds = %9
  %27 = getelementptr inbounds %struct.z_heap_stress_result, %struct.z_heap_stress_result* %8, i32 0, i32 2
  %28 = getelementptr inbounds %struct.z_heap_stress_result, %struct.z_heap_stress_result* %8, i32 0, i32 0
  %29 = getelementptr inbounds %struct.z_heap_stress_result, %struct.z_heap_stress_result* %8, i32 0, i32 1
  %30 = getelementptr inbounds %struct.z_heap_stress_result, %struct.z_heap_stress_result* %8, i32 0, i32 3
  br label %32, !dbg !5326

31:                                               ; preds = %65, %9
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %11) #23, !dbg !5327
  ret void, !dbg !5327

32:                                               ; preds = %26, %65
  %33 = phi i32 [ 0, %26 ], [ %66, %65 ]
  %34 = phi i32 [ 0, %26 ], [ %67, %65 ]
  %35 = phi i32 [ 0, %26 ], [ %71, %65 ]
  call void @llvm.dbg.value(metadata i32 %35, metadata !5306, metadata !DIExpression()), !dbg !5324
  %36 = call fastcc zeroext i1 @rand_alloc_choice(%struct.z_heap_stress_rec* noundef nonnull %10) #25, !dbg !5328
  br i1 %36, label %37, label %50, !dbg !5329

37:                                               ; preds = %32
  %38 = tail call fastcc i32 @rand_alloc_size() #25, !dbg !5330
  call void @llvm.dbg.value(metadata i32 %38, metadata !5308, metadata !DIExpression()), !dbg !5331
  %39 = tail call i8* %0(i8* noundef %2, i32 noundef %38) #24, !dbg !5332
  call void @llvm.dbg.value(metadata i8* %39, metadata !5313, metadata !DIExpression()), !dbg !5331
  %40 = load i32, i32* %28, align 8, !dbg !5333
  %41 = add i32 %40, 1, !dbg !5333
  store i32 %41, i32* %28, align 8, !dbg !5333
  %42 = icmp eq i8* %39, null, !dbg !5334
  br i1 %42, label %65, label %43, !dbg !5336

43:                                               ; preds = %37
  %44 = load i32, i32* %29, align 4, !dbg !5337
  %45 = add i32 %44, 1, !dbg !5337
  store i32 %45, i32* %29, align 4, !dbg !5337
  %46 = getelementptr inbounds %struct.z_heap_stress_block, %struct.z_heap_stress_block* %25, i32 %34, i32 0, !dbg !5339
  store i8* %39, i8** %46, align 4, !dbg !5340
  %47 = getelementptr inbounds %struct.z_heap_stress_block, %struct.z_heap_stress_block* %25, i32 %34, i32 1, !dbg !5341
  store i32 %38, i32* %47, align 4, !dbg !5342
  %48 = add i32 %34, 1, !dbg !5343
  store i32 %48, i32* %20, align 4, !dbg !5343
  %49 = add i32 %33, %38, !dbg !5344
  store i32 %49, i32* %21, align 4, !dbg !5344
  br label %65, !dbg !5345

50:                                               ; preds = %32
  %51 = call fastcc i32 @rand_free_choice(%struct.z_heap_stress_rec* noundef nonnull %10) #25, !dbg !5346
  call void @llvm.dbg.value(metadata i32 %51, metadata !5314, metadata !DIExpression()), !dbg !5347
  %52 = getelementptr inbounds %struct.z_heap_stress_block, %struct.z_heap_stress_block* %25, i32 %51, i32 0, !dbg !5348
  %53 = load i8*, i8** %52, align 4, !dbg !5348
  call void @llvm.dbg.value(metadata i8* %53, metadata !5316, metadata !DIExpression()), !dbg !5347
  %54 = getelementptr inbounds %struct.z_heap_stress_block, %struct.z_heap_stress_block* %25, i32 %51, i32 1, !dbg !5349
  %55 = load i32, i32* %54, align 4, !dbg !5349
  call void @llvm.dbg.value(metadata i32 %55, metadata !5317, metadata !DIExpression()), !dbg !5347
  %56 = load i32, i32* %27, align 8, !dbg !5350
  %57 = add i32 %56, 1, !dbg !5350
  store i32 %57, i32* %27, align 8, !dbg !5350
  %58 = getelementptr inbounds %struct.z_heap_stress_block, %struct.z_heap_stress_block* %25, i32 %51, !dbg !5351
  %59 = add i32 %34, -1, !dbg !5352
  %60 = getelementptr inbounds %struct.z_heap_stress_block, %struct.z_heap_stress_block* %25, i32 %59, !dbg !5353
  %61 = bitcast %struct.z_heap_stress_block* %60 to i64*, !dbg !5353
  %62 = bitcast %struct.z_heap_stress_block* %58 to i64*, !dbg !5353
  %63 = load i64, i64* %61, align 4, !dbg !5353
  store i64 %63, i64* %62, align 4, !dbg !5353
  store i32 %59, i32* %20, align 4, !dbg !5354
  %64 = sub i32 %33, %55, !dbg !5355
  store i32 %64, i32* %21, align 4, !dbg !5355
  tail call void %1(i8* noundef %2, i8* noundef %53) #24, !dbg !5356
  br label %65

65:                                               ; preds = %37, %43, %50
  %66 = phi i32 [ %33, %37 ], [ %49, %43 ], [ %64, %50 ], !dbg !5357
  %67 = phi i32 [ %34, %37 ], [ %48, %43 ], [ %59, %50 ]
  %68 = zext i32 %66 to i64, !dbg !5358
  %69 = load i64, i64* %30, align 8, !dbg !5359
  %70 = add i64 %69, %68, !dbg !5359
  store i64 %70, i64* %30, align 8, !dbg !5359
  %71 = add nuw i32 %35, 1, !dbg !5360
  call void @llvm.dbg.value(metadata i32 %71, metadata !5306, metadata !DIExpression()), !dbg !5324
  %72 = icmp eq i32 %71, %4, !dbg !5325
  br i1 %72, label %31, label %32, !dbg !5326, !llvm.loop !5361
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #14

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc zeroext i1 @rand_alloc_choice(%struct.z_heap_stress_rec* nocapture noundef readonly %0) unnamed_addr #7 !dbg !5363 {
  call void @llvm.dbg.value(metadata %struct.z_heap_stress_rec* %0, metadata !5368, metadata !DIExpression()), !dbg !5375
  %2 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %0, i32 0, i32 6, !dbg !5376
  %3 = load i32, i32* %2, align 4, !dbg !5376
  %4 = icmp eq i32 %3, 0, !dbg !5377
  br i1 %4, label %26, label %5, !dbg !5378

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %0, i32 0, i32 5, !dbg !5379
  %7 = load i32, i32* %6, align 4, !dbg !5379
  %8 = icmp ult i32 %3, %7, !dbg !5380
  br i1 %8, label %9, label %26, !dbg !5381

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %0, i32 0, i32 7, !dbg !5382
  %11 = load i32, i32* %10, align 4, !dbg !5382
  %12 = mul i32 %11, 100, !dbg !5383
  %13 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %0, i32 0, i32 3, !dbg !5384
  %14 = load i32, i32* %13, align 4, !dbg !5384
  %15 = udiv i32 %12, %14, !dbg !5385
  call void @llvm.dbg.value(metadata i32 %15, metadata !5369, metadata !DIExpression()), !dbg !5386
  %16 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %0, i32 0, i32 8, !dbg !5387
  %17 = load i32, i32* %16, align 4, !dbg !5387
  call void @llvm.dbg.value(metadata i32 undef, metadata !5373, metadata !DIExpression()), !dbg !5386
  call void @llvm.dbg.value(metadata i32 -1, metadata !5374, metadata !DIExpression()), !dbg !5386
  %18 = icmp ult i32 %15, %17, !dbg !5388
  br i1 %18, label %19, label %22, !dbg !5390

19:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %17, metadata !5373, metadata !DIExpression()), !dbg !5386
  %20 = udiv i32 -2147483648, %17, !dbg !5391
  %21 = mul i32 %20, %15, !dbg !5393
  call void @llvm.dbg.value(metadata i32 %21, metadata !5374, metadata !DIExpression()), !dbg !5386
  br label %22, !dbg !5394

22:                                               ; preds = %19, %9
  %23 = phi i32 [ %21, %19 ], [ -1, %9 ], !dbg !5386
  call void @llvm.dbg.value(metadata i32 %23, metadata !5374, metadata !DIExpression()), !dbg !5386
  %24 = tail call fastcc i32 @rand32() #25, !dbg !5395
  %25 = icmp ugt i32 %24, %23, !dbg !5396
  br label %26

26:                                               ; preds = %5, %1, %22
  %27 = phi i1 [ %25, %22 ], [ true, %1 ], [ false, %5 ], !dbg !5397
  ret i1 %27, !dbg !5398
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc i32 @rand_alloc_size() unnamed_addr #10 !dbg !5399 {
  call void @llvm.dbg.value(metadata %struct.z_heap_stress_rec* undef, metadata !5403, metadata !DIExpression()), !dbg !5405
  %1 = tail call fastcc i32 @rand32() #25, !dbg !5406
  %2 = tail call i32 @llvm.ctlz.i32(i32 %1, i1 false), !dbg !5407, !range !4258
  call void @llvm.dbg.value(metadata i32 %2, metadata !5404, metadata !DIExpression(DW_OP_plus_uconst, 4, DW_OP_stack_value)), !dbg !5405
  %3 = tail call fastcc i32 @rand32() #25, !dbg !5408
  %4 = shl i32 16, %2, !dbg !5409
  %5 = add i32 %4, -1, !dbg !5409
  %6 = and i32 %5, %3, !dbg !5410
  ret i32 %6, !dbg !5411
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @rand_free_choice(%struct.z_heap_stress_rec* nocapture noundef readonly %0) unnamed_addr #7 !dbg !5412 {
  call void @llvm.dbg.value(metadata %struct.z_heap_stress_rec* %0, metadata !5414, metadata !DIExpression()), !dbg !5415
  %2 = tail call fastcc i32 @rand32() #25, !dbg !5416
  %3 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %0, i32 0, i32 6, !dbg !5417
  %4 = load i32, i32* %3, align 4, !dbg !5417
  %5 = urem i32 %2, %4, !dbg !5418
  ret i32 %5, !dbg !5419
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @rand32() unnamed_addr #7 !dbg !133 {
  %1 = load i64, i64* @rand32.state, align 8, !dbg !5420
  %2 = mul i64 %1, 2862933555777941757, !dbg !5421
  %3 = add i64 %2, 3037000493, !dbg !5422
  store i64 %3, i64* @rand32.state, align 8, !dbg !5423
  %4 = lshr i64 %3, 32, !dbg !5424
  %5 = trunc i64 %4 to i32, !dbg !5425
  ret i32 %5, !dbg !5426
}

; Function Attrs: noinline nounwind optsize
define dso_local void @heap_print_info(%struct.z_heap* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !5427 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5431, metadata !DIExpression()), !dbg !5452
  call void @llvm.dbg.value(metadata i1 %1, metadata !5432, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5452
  %5 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !5453
  %6 = load i32, i32* %5, align 4, !dbg !5453
  %7 = tail call fastcc i32 @bucket_idx.14(%struct.z_heap* noundef %0, i32 noundef %6) #25, !dbg !5454
  %8 = add i32 %7, 1, !dbg !5455
  call void @llvm.dbg.value(metadata i32 %8, metadata !5434, metadata !DIExpression()), !dbg !5452
  %9 = bitcast i32* %3 to i8*, !dbg !5456
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #23, !dbg !5456
  %10 = bitcast i32* %4 to i8*, !dbg !5456
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #23, !dbg !5456
  %11 = tail call fastcc %struct.chunk_unit_t* @chunk_buf.20(%struct.z_heap* noundef %0) #25, !dbg !5457
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.24, i32 0, i32 0), %struct.chunk_unit_t* noundef %11, i32 noundef %6, i32 noundef %8) #24, !dbg !5458
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([187 x i8], [187 x i8]* @.str.1.25, i32 0, i32 0)) #24, !dbg !5459
  call void @llvm.dbg.value(metadata i32 0, metadata !5433, metadata !DIExpression()), !dbg !5452
  %12 = icmp slt i32 %7, 0, !dbg !5460
  br i1 %12, label %34, label %13, !dbg !5461

13:                                               ; preds = %2, %31
  %14 = phi i32 [ %32, %31 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !5433, metadata !DIExpression()), !dbg !5452
  %15 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 6, i32 %14, i32 0, !dbg !5462
  %16 = load i32, i32* %15, align 4, !dbg !5462
  call void @llvm.dbg.value(metadata i32 %16, metadata !5439, metadata !DIExpression()), !dbg !5463
  call void @llvm.dbg.value(metadata i32 0, metadata !5443, metadata !DIExpression()), !dbg !5463
  call void @llvm.dbg.value(metadata i32 0, metadata !5444, metadata !DIExpression()), !dbg !5463
  %17 = icmp eq i32 %16, 0, !dbg !5464
  br i1 %17, label %31, label %18, !dbg !5465

18:                                               ; preds = %13, %18
  %19 = phi i32 [ %25, %18 ], [ 0, %13 ], !dbg !5463
  %20 = phi i32 [ %22, %18 ], [ 0, %13 ], !dbg !5463
  %21 = phi i32 [ %26, %18 ], [ %16, %13 ], !dbg !5466
  call void @llvm.dbg.value(metadata i32 %21, metadata !5445, metadata !DIExpression()), !dbg !5466
  call void @llvm.dbg.value(metadata i32 %20, metadata !5444, metadata !DIExpression()), !dbg !5463
  call void @llvm.dbg.value(metadata i32 %19, metadata !5443, metadata !DIExpression()), !dbg !5463
  %22 = add nuw nsw i32 %20, 1, !dbg !5467
  call void @llvm.dbg.value(metadata i32 %22, metadata !5444, metadata !DIExpression()), !dbg !5463
  %23 = tail call fastcc i32 @chunk_size.21(%struct.z_heap* noundef %0, i32 noundef %21) #25, !dbg !5469
  %24 = icmp ugt i32 %19, %23, !dbg !5469
  %25 = select i1 %24, i32 %19, i32 %23, !dbg !5469
  call void @llvm.dbg.value(metadata i32 %25, metadata !5443, metadata !DIExpression()), !dbg !5463
  %26 = tail call fastcc i32 @next_free_chunk.16(%struct.z_heap* noundef %0, i32 noundef %21) #25, !dbg !5470
  call void @llvm.dbg.value(metadata i32 %26, metadata !5445, metadata !DIExpression()), !dbg !5466
  %27 = icmp eq i32 %26, %16, !dbg !5471
  br i1 %27, label %28, label %18, !dbg !5472, !llvm.loop !5473

28:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %22, metadata !5444, metadata !DIExpression()), !dbg !5463
  call void @llvm.dbg.value(metadata i32 %25, metadata !5443, metadata !DIExpression()), !dbg !5463
  %29 = shl nuw i32 1, %14, !dbg !5476
  %30 = tail call fastcc i32 @chunksz_to_bytes.22(%struct.z_heap* noundef %0, i32 noundef %25) #25, !dbg !5479, !range !4510
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2, i32 0, i32 0), i32 noundef %14, i32 noundef %29, i32 noundef %22, i32 noundef %25, i32 noundef %30) #24, !dbg !5480
  br label %31, !dbg !5481

31:                                               ; preds = %13, %28
  %32 = add nuw i32 %14, 1, !dbg !5482
  call void @llvm.dbg.value(metadata i32 %32, metadata !5433, metadata !DIExpression()), !dbg !5452
  %33 = icmp eq i32 %14, %7, !dbg !5460
  br i1 %33, label %34, label %13, !dbg !5461, !llvm.loop !5483

34:                                               ; preds = %31, %2
  br i1 %1, label %35, label %47, !dbg !5485

35:                                               ; preds = %34
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i32 0, i32 0)) #24, !dbg !5486
  call void @llvm.dbg.value(metadata i32 0, metadata !5448, metadata !DIExpression()), !dbg !5487
  br label %36, !dbg !5488

36:                                               ; preds = %45, %35
  %37 = phi i32 [ 0, %35 ], [ %46, %45 ], !dbg !5487
  call void @llvm.dbg.value(metadata i32 %37, metadata !5448, metadata !DIExpression()), !dbg !5487
  %38 = tail call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef %0, i32 noundef %37) #25, !dbg !5489
  %39 = select i1 %38, i32 42, i32 45, !dbg !5489
  %40 = tail call fastcc i32 @chunk_size.21(%struct.z_heap* noundef %0, i32 noundef %37) #25, !dbg !5492
  %41 = tail call fastcc i32 @left_chunk.18(%struct.z_heap* noundef %0, i32 noundef %37) #25, !dbg !5493
  %42 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef %0, i32 noundef %37) #25, !dbg !5494
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([46 x i8], [46 x i8]* @.str.4, i32 0, i32 0), i32 noundef %37, i32 noundef %39, i32 noundef %40, i32 noundef %41, i32 noundef %42) #24, !dbg !5495
  %43 = load i32, i32* %5, align 4, !dbg !5496
  %44 = icmp eq i32 %37, %43, !dbg !5498
  br i1 %44, label %47, label %45, !dbg !5499

45:                                               ; preds = %36
  %46 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef nonnull %0, i32 noundef %37) #25, !dbg !5500
  call void @llvm.dbg.value(metadata i32 %46, metadata !5448, metadata !DIExpression()), !dbg !5487
  br label %36, !dbg !5501, !llvm.loop !5502

47:                                               ; preds = %36, %34
  call void @llvm.dbg.value(metadata i32* %3, metadata !5435, metadata !DIExpression(DW_OP_deref)), !dbg !5452
  call void @llvm.dbg.value(metadata i32* %4, metadata !5436, metadata !DIExpression(DW_OP_deref)), !dbg !5452
  call fastcc void @get_alloc_info(%struct.z_heap* noundef %0, i32* noundef nonnull %4, i32* noundef nonnull %3) #25, !dbg !5505
  %48 = load i32, i32* %5, align 4, !dbg !5506
  %49 = shl i32 %48, 3, !dbg !5507
  %50 = or i32 %49, 4, !dbg !5508
  call void @llvm.dbg.value(metadata i32 %50, metadata !5437, metadata !DIExpression()), !dbg !5452
  %51 = load i32, i32* %3, align 4, !dbg !5509
  call void @llvm.dbg.value(metadata i32 %51, metadata !5435, metadata !DIExpression()), !dbg !5452
  %52 = load i32, i32* %4, align 4, !dbg !5510
  call void @llvm.dbg.value(metadata i32 %52, metadata !5436, metadata !DIExpression()), !dbg !5452
  %53 = add i32 %52, %51, !dbg !5511
  %54 = sub i32 %50, %53, !dbg !5511
  call void @llvm.dbg.value(metadata i32 %54, metadata !5438, metadata !DIExpression()), !dbg !5452
  %55 = mul i32 %54, 1000, !dbg !5512
  %56 = lshr exact i32 %50, 1, !dbg !5513
  %57 = add i32 %55, %56, !dbg !5514
  %58 = udiv i32 %57, %50, !dbg !5515
  %59 = freeze i32 %58
  %60 = udiv i32 %59, 10, !dbg !5516
  %61 = mul i32 %60, 10
  %62 = sub i32 %59, %61
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([72 x i8], [72 x i8]* @.str.5, i32 0, i32 0), i32 noundef %51, i32 noundef %52, i32 noundef %54, i32 noundef %60, i32 noundef %62) #24, !dbg !5517
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #23, !dbg !5518
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #23, !dbg !5518
  ret void, !dbg !5518
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_heap_print_info(%struct.sys_heap* nocapture noundef readonly %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !5519 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5523, metadata !DIExpression()), !dbg !5525
  call void @llvm.dbg.value(metadata i1 %1, metadata !5524, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5525
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5526
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !5526
  tail call void @heap_print_info(%struct.z_heap* noundef %4, i1 noundef zeroext %1) #25, !dbg !5527
  ret void, !dbg !5528
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @sys_heap_runtime_stats_reset_max(%struct.sys_heap* noundef readonly %0) local_unnamed_addr #7 !dbg !5529 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5533, metadata !DIExpression()), !dbg !5534
  %2 = icmp eq %struct.sys_heap* %0, null, !dbg !5535
  br i1 %2, label %9, label %3, !dbg !5537

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5538
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !5538
  %6 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %5, i32 0, i32 4, !dbg !5539
  %7 = load i32, i32* %6, align 4, !dbg !5539
  %8 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %5, i32 0, i32 5, !dbg !5540
  store i32 %7, i32* %8, align 4, !dbg !5541
  br label %9, !dbg !5542

9:                                                ; preds = %1, %3
  %10 = phi i32 [ 0, %3 ], [ -22, %1 ], !dbg !5534
  ret i32 %10, !dbg !5543
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !5544 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !5557, metadata !DIExpression()), !dbg !5685
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5554, metadata !DIExpression()), !dbg !5685
  call void @llvm.dbg.value(metadata i8* %1, metadata !5555, metadata !DIExpression()), !dbg !5685
  call void @llvm.dbg.value(metadata i8* %2, metadata !5556, metadata !DIExpression()), !dbg !5685
  call void @llvm.dbg.value(metadata i32 %4, metadata !5558, metadata !DIExpression()), !dbg !5685
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !5686
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #23, !dbg !5686
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !5559, metadata !DIExpression()), !dbg !5687
  call void @llvm.dbg.value(metadata i32 0, metadata !5563, metadata !DIExpression()), !dbg !5685
  call void @llvm.dbg.value(metadata i1 undef, metadata !5565, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5685
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !5688

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !5688

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !5689
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !5557, metadata !DIExpression()), !dbg !5685
  call void @llvm.dbg.value(metadata i8* %30, metadata !5556, metadata !DIExpression()), !dbg !5685
  call void @llvm.dbg.value(metadata i32 %29, metadata !5563, metadata !DIExpression()), !dbg !5685
  %31 = load i8, i8* %30, align 1, !dbg !5690
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !5688

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !5690
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !5691
  call void @llvm.dbg.value(metadata i8* %34, metadata !5556, metadata !DIExpression()), !dbg !5685
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #24, !dbg !5691
  call void @llvm.dbg.value(metadata i32 %35, metadata !5567, metadata !DIExpression()), !dbg !5692
  %36 = icmp slt i32 %35, 0, !dbg !5693
  %37 = add i32 %29, 1, !dbg !5691
  call void @llvm.dbg.value(metadata i32 undef, metadata !5563, metadata !DIExpression()), !dbg !5685
  br i1 %36, label %365, label %28, !llvm.loop !5695

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #23, !dbg !5697
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !5572, metadata !DIExpression()), !dbg !5698
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !5698
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !5617, metadata !DIExpression()), !dbg !5699
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !5620, metadata !DIExpression()), !dbg !5699
  call void @llvm.dbg.value(metadata i8* %30, metadata !5623, metadata !DIExpression()), !dbg !5699
  call void @llvm.dbg.value(metadata i32 -1, metadata !5624, metadata !DIExpression()), !dbg !5699
  call void @llvm.dbg.value(metadata i32 -1, metadata !5625, metadata !DIExpression()), !dbg !5699
  call void @llvm.dbg.value(metadata i8* null, metadata !5626, metadata !DIExpression()), !dbg !5699
  call void @llvm.dbg.value(metadata i8* %14, metadata !5627, metadata !DIExpression()), !dbg !5699
  call void @llvm.dbg.value(metadata i8 0, metadata !5628, metadata !DIExpression()), !dbg !5699
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #25, !dbg !5700
  call void @llvm.dbg.value(metadata i8* %39, metadata !5556, metadata !DIExpression()), !dbg !5685
  %40 = load i24, i24* %15, align 8, !dbg !5701
  %41 = and i24 %40, 256, !dbg !5701
  %42 = icmp eq i24 %41, 0, !dbg !5701
  br i1 %42, label %51, label %43, !dbg !5703

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !5704
  call void @llvm.dbg.value(metadata i8* %44, metadata !5557, metadata !DIExpression()), !dbg !5685
  %45 = bitcast i8* %27 to i32*, !dbg !5704
  %46 = load i32, i32* %45, align 4, !dbg !5704
  call void @llvm.dbg.value(metadata i32 %46, metadata !5624, metadata !DIExpression()), !dbg !5699
  %47 = icmp slt i32 %46, 0, !dbg !5706
  br i1 %47, label %48, label %56, !dbg !5708

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !5709
  store i24 %49, i24* %15, align 8, !dbg !5709
  %50 = sub nsw i32 0, %46, !dbg !5711
  call void @llvm.dbg.value(metadata i32 %50, metadata !5624, metadata !DIExpression()), !dbg !5699
  br label %56, !dbg !5712

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !5713
  %53 = icmp eq i24 %52, 0, !dbg !5713
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !5715
  br label %56, !dbg !5715

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !5716
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !5699
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !5557, metadata !DIExpression()), !dbg !5685
  call void @llvm.dbg.value(metadata i32 %58, metadata !5624, metadata !DIExpression()), !dbg !5699
  %60 = and i24 %57, 1024, !dbg !5716
  %61 = icmp eq i24 %60, 0, !dbg !5716
  br i1 %61, label %69, label %62, !dbg !5717

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !5718
  call void @llvm.dbg.value(metadata i8* %63, metadata !5557, metadata !DIExpression()), !dbg !5685
  %64 = bitcast i8* %59 to i32*, !dbg !5718
  %65 = load i32, i32* %64, align 4, !dbg !5718
  call void @llvm.dbg.value(metadata i32 %65, metadata !5629, metadata !DIExpression()), !dbg !5719
  %66 = icmp slt i32 %65, 0, !dbg !5720
  br i1 %66, label %67, label %74, !dbg !5722

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !5723
  store i24 %68, i24* %15, align 8, !dbg !5723
  br label %74, !dbg !5725

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !5726
  %71 = icmp eq i24 %70, 0, !dbg !5726
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !5728
  br label %74, !dbg !5728

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !5729
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !5699
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !5699
  call void @llvm.dbg.value(metadata i8* %77, metadata !5557, metadata !DIExpression()), !dbg !5685
  call void @llvm.dbg.value(metadata i32 %76, metadata !5625, metadata !DIExpression()), !dbg !5699
  store i32 0, i32* %16, align 4, !dbg !5730
  store i32 0, i32* %17, align 8, !dbg !5731
  %78 = lshr i24 %75, 16, !dbg !5729
  call void @llvm.dbg.value(metadata i24 %78, metadata !5632, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5699
  %79 = lshr i24 %75, 11, !dbg !5732
  %80 = and i24 %79, 15, !dbg !5732
  %81 = zext i24 %80 to i32, !dbg !5732
  call void @llvm.dbg.value(metadata i32 %81, metadata !5633, metadata !DIExpression()), !dbg !5699
  %82 = trunc i24 %78 to i3, !dbg !5733
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !5733

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !5734

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5737
  call void @llvm.dbg.value(metadata i8* %85, metadata !5557, metadata !DIExpression()), !dbg !5685
  %86 = bitcast i8* %77 to i32*, !dbg !5737
  %87 = load i32, i32* %86, align 4, !dbg !5737
  %88 = sext i32 %87 to i64, !dbg !5737
  store i64 %88, i64* %20, align 8, !dbg !5739
  br label %115, !dbg !5740

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5741
  call void @llvm.dbg.value(metadata i8* %90, metadata !5557, metadata !DIExpression()), !dbg !5685
  %91 = bitcast i8* %77 to i32*, !dbg !5741
  %92 = load i32, i32* %91, align 4, !dbg !5741
  %93 = sext i32 %92 to i64, !dbg !5741
  store i64 %93, i64* %20, align 8, !dbg !5744
  br label %115, !dbg !5745

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !5746
  %96 = add i32 %95, 7, !dbg !5746
  %97 = and i32 %96, -8, !dbg !5746
  %98 = inttoptr i32 %97 to i8*, !dbg !5746
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !5746
  call void @llvm.dbg.value(metadata i8* %99, metadata !5557, metadata !DIExpression()), !dbg !5685
  %100 = inttoptr i32 %97 to i64*, !dbg !5746
  %101 = load i64, i64* %100, align 8, !dbg !5746
  store i64 %101, i64* %20, align 8, !dbg !5747
  br label %115, !dbg !5748

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !5749
  %104 = add i32 %103, 7, !dbg !5749
  %105 = and i32 %104, -8, !dbg !5749
  %106 = inttoptr i32 %105 to i8*, !dbg !5749
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !5749
  call void @llvm.dbg.value(metadata i8* %107, metadata !5557, metadata !DIExpression()), !dbg !5685
  %108 = inttoptr i32 %105 to i64*, !dbg !5749
  %109 = load i64, i64* %108, align 8, !dbg !5749
  store i64 %109, i64* %20, align 8, !dbg !5750
  br label %115, !dbg !5751

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5752
  call void @llvm.dbg.value(metadata i8* %111, metadata !5557, metadata !DIExpression()), !dbg !5685
  %112 = bitcast i8* %77 to i32*, !dbg !5752
  %113 = load i32, i32* %112, align 4, !dbg !5752
  %114 = sext i32 %113 to i64, !dbg !5753
  store i64 %114, i64* %20, align 8, !dbg !5754
  br label %115, !dbg !5755

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !5756
  call void @llvm.dbg.value(metadata i8* %117, metadata !5557, metadata !DIExpression()), !dbg !5685
  %118 = trunc i24 %79 to i4, !dbg !5757
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !5757

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !5758
  %121 = ashr exact i64 %120, 56, !dbg !5758
  store i64 %121, i64* %20, align 8, !dbg !5761
  br label %177, !dbg !5762

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !5763
  %124 = ashr exact i64 %123, 48, !dbg !5763
  store i64 %124, i64* %20, align 8, !dbg !5766
  br label %177, !dbg !5767

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !5768

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5771
  call void @llvm.dbg.value(metadata i8* %127, metadata !5557, metadata !DIExpression()), !dbg !5685
  %128 = bitcast i8* %77 to i32*, !dbg !5771
  %129 = load i32, i32* %128, align 4, !dbg !5771
  %130 = zext i32 %129 to i64, !dbg !5771
  store i64 %130, i64* %20, align 8, !dbg !5773
  br label %157, !dbg !5774

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5775
  call void @llvm.dbg.value(metadata i8* %132, metadata !5557, metadata !DIExpression()), !dbg !5685
  call void @llvm.dbg.value(metadata i8* %132, metadata !5557, metadata !DIExpression()), !dbg !5685
  %133 = bitcast i8* %77 to i32*, !dbg !5775
  %134 = load i32, i32* %133, align 4, !dbg !5775
  %135 = zext i32 %134 to i64, !dbg !5775
  store i64 %135, i64* %20, align 8, !dbg !5775
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !5777
  %138 = add i32 %137, 7, !dbg !5777
  %139 = and i32 %138, -8, !dbg !5777
  %140 = inttoptr i32 %139 to i8*, !dbg !5777
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !5777
  call void @llvm.dbg.value(metadata i8* %141, metadata !5557, metadata !DIExpression()), !dbg !5685
  %142 = inttoptr i32 %139 to i64*, !dbg !5777
  %143 = load i64, i64* %142, align 8, !dbg !5777
  store i64 %143, i64* %20, align 8, !dbg !5778
  br label %157, !dbg !5779

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !5780
  %146 = add i32 %145, 7, !dbg !5780
  %147 = and i32 %146, -8, !dbg !5780
  %148 = inttoptr i32 %147 to i8*, !dbg !5780
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !5780
  call void @llvm.dbg.value(metadata i8* %149, metadata !5557, metadata !DIExpression()), !dbg !5685
  %150 = inttoptr i32 %147 to i64*, !dbg !5780
  %151 = load i64, i64* %150, align 8, !dbg !5780
  store i64 %151, i64* %20, align 8, !dbg !5781
  br label %157, !dbg !5782

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5783
  call void @llvm.dbg.value(metadata i8* %153, metadata !5557, metadata !DIExpression()), !dbg !5685
  %154 = bitcast i8* %77 to i32*, !dbg !5783
  %155 = load i32, i32* %154, align 4, !dbg !5783
  %156 = zext i32 %155 to i64, !dbg !5784
  store i64 %156, i64* %20, align 8, !dbg !5785
  br label %157, !dbg !5786

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !5787
  call void @llvm.dbg.value(metadata i8* %159, metadata !5557, metadata !DIExpression()), !dbg !5685
  %160 = trunc i24 %79 to i4, !dbg !5788
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !5788

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !5789
  store i64 %162, i64* %20, align 8, !dbg !5792
  br label %177, !dbg !5793

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !5794
  store i64 %164, i64* %20, align 8, !dbg !5797
  br label %177, !dbg !5798

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !5799
  %167 = add i32 %166, 7, !dbg !5799
  %168 = and i32 %167, -8, !dbg !5799
  %169 = inttoptr i32 %168 to i8*, !dbg !5799
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !5799
  call void @llvm.dbg.value(metadata i8* %170, metadata !5557, metadata !DIExpression()), !dbg !5685
  call void @llvm.dbg.value(metadata i8* %170, metadata !5557, metadata !DIExpression()), !dbg !5685
  %171 = inttoptr i32 %168 to double*, !dbg !5799
  %172 = load double, double* %171, align 8, !dbg !5799
  store double %172, double* %19, align 8, !dbg !5799
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5803
  call void @llvm.dbg.value(metadata i8* %174, metadata !5557, metadata !DIExpression()), !dbg !5685
  %175 = bitcast i8* %77 to i8**, !dbg !5803
  %176 = load i8*, i8** %175, align 4, !dbg !5803
  store i8* %176, i8** %18, align 8, !dbg !5806
  br label %177, !dbg !5807

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !5699
  call void @llvm.dbg.value(metadata i8* %178, metadata !5557, metadata !DIExpression()), !dbg !5685
  %179 = and i24 %75, 3, !dbg !5808
  %180 = icmp eq i24 %179, 0, !dbg !5808
  br i1 %180, label %185, label %181, !dbg !5808

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #25, !dbg !5809
  call void @llvm.dbg.value(metadata i32 %182, metadata !5634, metadata !DIExpression()), !dbg !5810
  %183 = icmp slt i32 %182, 0, !dbg !5811
  %184 = add i32 %182, %29, !dbg !5809
  call void @llvm.dbg.value(metadata i32 undef, metadata !5563, metadata !DIExpression()), !dbg !5685
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !5813
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !5814

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #24, !dbg !5815
  call void @llvm.dbg.value(metadata i32 %188, metadata !5638, metadata !DIExpression()), !dbg !5816
  %189 = icmp slt i32 %188, 0, !dbg !5817
  %190 = add i32 %29, 1, !dbg !5815
  call void @llvm.dbg.value(metadata i32 undef, metadata !5563, metadata !DIExpression()), !dbg !5685
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !5819
  call void @llvm.dbg.value(metadata i8* %192, metadata !5626, metadata !DIExpression()), !dbg !5699
  %193 = icmp sgt i32 %76, -1, !dbg !5820
  br i1 %193, label %194, label %196, !dbg !5822

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #24, !dbg !5823
  call void @llvm.dbg.value(metadata i32 %195, metadata !5641, metadata !DIExpression()), !dbg !5825
  br label %241, !dbg !5826

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #24, !dbg !5827
  call void @llvm.dbg.value(metadata i32 %197, metadata !5641, metadata !DIExpression()), !dbg !5825
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !5626, metadata !DIExpression()), !dbg !5699
  %199 = load i64, i64* %20, align 8, !dbg !5829
  %200 = trunc i64 %199 to i8, !dbg !5830
  store i8 %200, i8* %10, align 1, !dbg !5831
  call void @llvm.dbg.value(metadata i8* %23, metadata !5627, metadata !DIExpression()), !dbg !5699
  br label %245, !dbg !5832

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !5833
  %203 = icmp eq i24 %202, 0, !dbg !5833
  %204 = trunc i24 %75 to i8, !dbg !5835
  %205 = shl i8 %204, 1, !dbg !5835
  %206 = and i8 %205, 32, !dbg !5835
  %207 = select i1 %203, i8 %206, i8 43, !dbg !5835
  call void @llvm.dbg.value(metadata i8 %207, metadata !5628, metadata !DIExpression()), !dbg !5699
  %208 = load i64, i64* %20, align 8, !dbg !5836
  call void @llvm.dbg.value(metadata i64 %208, metadata !5564, metadata !DIExpression()), !dbg !5685
  %209 = icmp slt i64 %208, 0, !dbg !5837
  br i1 %209, label %210, label %212, !dbg !5839

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !5628, metadata !DIExpression()), !dbg !5699
  %211 = sub nsw i64 0, %208, !dbg !5840
  store i64 %211, i64* %20, align 8, !dbg !5842
  br label %212, !dbg !5843

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !5699
  call void @llvm.dbg.value(metadata i8 %213, metadata !5628, metadata !DIExpression()), !dbg !5699
  %214 = load i64, i64* %20, align 8, !dbg !5844
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #25, !dbg !5845
  call void @llvm.dbg.value(metadata i8* %215, metadata !5626, metadata !DIExpression()), !dbg !5699
  br label %216, !dbg !5846

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !5847
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !5848
  call void @llvm.dbg.value(metadata i8* %218, metadata !5626, metadata !DIExpression()), !dbg !5699
  call void @llvm.dbg.value(metadata i8 %217, metadata !5628, metadata !DIExpression()), !dbg !5699
  call void @llvm.dbg.label(metadata !5684), !dbg !5849
  %219 = icmp sgt i32 %76, -1, !dbg !5850
  br i1 %219, label %222, label %220, !dbg !5851

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !5852
  br label %245, !dbg !5851

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !5854
  %224 = sub i32 %22, %223, !dbg !5854
  call void @llvm.dbg.value(metadata i32 %224, metadata !5643, metadata !DIExpression()), !dbg !5855
  %225 = load i24, i24* %15, align 8, !dbg !5856
  %226 = and i24 %225, -65, !dbg !5856
  store i24 %226, i24* %15, align 8, !dbg !5856
  %227 = icmp ugt i32 %76, %224, !dbg !5857
  br i1 %227, label %228, label %245, !dbg !5859

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !5860
  store i32 %229, i32* %16, align 4, !dbg !5862
  br label %245, !dbg !5863

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !5864
  %232 = icmp eq i8* %231, null, !dbg !5866
  br i1 %232, label %245, label %233, !dbg !5867

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !5868
  %235 = zext i32 %234 to i64, !dbg !5868
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #25, !dbg !5870
  call void @llvm.dbg.value(metadata i8* %236, metadata !5626, metadata !DIExpression()), !dbg !5699
  %237 = load i24, i24* %15, align 8, !dbg !5871
  %238 = or i24 %237, 1048576, !dbg !5871
  store i24 %238, i24* %15, align 8, !dbg !5871
  store i8 120, i8* %21, align 1, !dbg !5872
  br label %216, !dbg !5873

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !5874
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #25, !dbg !5877
  br label %363, !dbg !5878

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !5879
  call void @llvm.dbg.value(metadata i32 %242, metadata !5641, metadata !DIExpression()), !dbg !5825
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !5880
  call void @llvm.dbg.value(metadata i32 -1, metadata !5625, metadata !DIExpression()), !dbg !5699
  call void @llvm.dbg.value(metadata i32 %29, metadata !5563, metadata !DIExpression()), !dbg !5685
  call void @llvm.dbg.value(metadata i8* %192, metadata !5626, metadata !DIExpression()), !dbg !5699
  call void @llvm.dbg.value(metadata i8* %243, metadata !5627, metadata !DIExpression()), !dbg !5699
  call void @llvm.dbg.value(metadata i8 0, metadata !5628, metadata !DIExpression()), !dbg !5699
  %244 = icmp eq i8* %192, null, !dbg !5881
  br i1 %244, label %363, label %245, !dbg !5883, !llvm.loop !5695

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !5852
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !5646, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5699
  call void @llvm.dbg.value(metadata i32 0, metadata !5647, metadata !DIExpression()), !dbg !5699
  %250 = zext i8 %249 to i32, !dbg !5884
  %251 = icmp eq i8 %249, 0, !dbg !5886
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !5646, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5699
  call void @llvm.dbg.value(metadata i32 undef, metadata !5646, metadata !DIExpression()), !dbg !5699
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !5646, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5699
  call void @llvm.dbg.value(metadata i32 undef, metadata !5646, metadata !DIExpression()), !dbg !5699
  %252 = icmp sgt i32 %58, 0, !dbg !5887
  br i1 %252, label %253, label %302, !dbg !5888

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !5852
  %255 = icmp eq i24 %254, 0, !dbg !5852
  %256 = ptrtoint i8* %248 to i32, !dbg !5889
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !5646, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5699
  %257 = ptrtoint i8* %247 to i32, !dbg !5889
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !5646, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5699
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !5646, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5699
  %258 = xor i1 %251, true, !dbg !5890
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !5646, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5699
  %259 = sext i1 %258 to i32, !dbg !5890
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !5646, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5699
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !5646, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5699
  %260 = lshr i24 %246, 19, !dbg !5891
  %261 = and i24 %260, 1, !dbg !5891
  %262 = select i1 %255, i24 %261, i24 2, !dbg !5891
  %263 = zext i24 %262 to i32, !dbg !5891
  %264 = add i32 %257, %259, !dbg !5891
  %265 = add i32 %256, %263, !dbg !5891
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !5646, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5699
  %266 = and i24 %246, 4194304, !dbg !5892
  %267 = icmp eq i24 %266, 0, !dbg !5892
  %268 = load i32, i32* %16, align 4, !dbg !5894
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !5646, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5699
  call void @llvm.dbg.value(metadata i32 undef, metadata !5646, metadata !DIExpression()), !dbg !5699
  %269 = load i32, i32* %17, align 8, !dbg !5895
  %270 = select i1 %267, i32 0, i32 %269, !dbg !5895
  call void @llvm.dbg.value(metadata i32 undef, metadata !5646, metadata !DIExpression()), !dbg !5699
  %271 = add i32 %264, %58, !dbg !5895
  %272 = add i32 %265, %268, !dbg !5895
  %273 = add i32 %272, %270, !dbg !5896
  %274 = sub i32 %271, %273, !dbg !5896
  call void @llvm.dbg.value(metadata i32 %274, metadata !5624, metadata !DIExpression()), !dbg !5699
  %275 = and i24 %246, 4, !dbg !5897
  %276 = icmp eq i24 %275, 0, !dbg !5897
  br i1 %276, label %277, label %302, !dbg !5898

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !5648, metadata !DIExpression()), !dbg !5899
  %278 = and i24 %246, 64, !dbg !5900
  %279 = icmp eq i24 %278, 0, !dbg !5900
  %280 = select i1 %279, i1 true, i1 %251, !dbg !5901
  %281 = select i1 %279, i8 %249, i8 0, !dbg !5901
  %282 = select i1 %279, i32 32, i32 48, !dbg !5901
  br i1 %280, label %287, label %283, !dbg !5901

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #24, !dbg !5902
  call void @llvm.dbg.value(metadata i32 %284, metadata !5653, metadata !DIExpression()), !dbg !5903
  %285 = icmp slt i32 %284, 0, !dbg !5904
  %286 = add i32 %29, 1, !dbg !5902
  call void @llvm.dbg.value(metadata i32 undef, metadata !5563, metadata !DIExpression()), !dbg !5685
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !5699
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !5689
  call void @llvm.dbg.value(metadata i32 %290, metadata !5563, metadata !DIExpression()), !dbg !5685
  call void @llvm.dbg.value(metadata i8 undef, metadata !5648, metadata !DIExpression()), !dbg !5899
  call void @llvm.dbg.value(metadata i8 %288, metadata !5628, metadata !DIExpression()), !dbg !5699
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !5906
  %292 = add i32 %291, -1, !dbg !5906
  br label %293, !dbg !5906

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !5907
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !5689
  call void @llvm.dbg.value(metadata i32 %295, metadata !5563, metadata !DIExpression()), !dbg !5685
  call void @llvm.dbg.value(metadata i32 %294, metadata !5624, metadata !DIExpression()), !dbg !5699
  call void @llvm.dbg.value(metadata i32 %294, metadata !5624, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5699
  %296 = icmp sgt i32 %294, 0, !dbg !5908
  br i1 %296, label %297, label %302, !dbg !5906

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !5909
  call void @llvm.dbg.value(metadata i32 %298, metadata !5624, metadata !DIExpression()), !dbg !5699
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #24, !dbg !5910
  call void @llvm.dbg.value(metadata i32 %299, metadata !5659, metadata !DIExpression()), !dbg !5911
  %300 = icmp slt i32 %299, 0, !dbg !5912
  %301 = add i32 %295, 1, !dbg !5910
  call void @llvm.dbg.value(metadata i32 undef, metadata !5563, metadata !DIExpression()), !dbg !5685
  br i1 %300, label %361, label %293, !llvm.loop !5914

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !5699
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !5699
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !5689
  call void @llvm.dbg.value(metadata i32 %305, metadata !5563, metadata !DIExpression()), !dbg !5685
  call void @llvm.dbg.value(metadata i32 %304, metadata !5624, metadata !DIExpression()), !dbg !5699
  call void @llvm.dbg.value(metadata i8 %303, metadata !5628, metadata !DIExpression()), !dbg !5699
  %306 = icmp eq i8 %303, 0, !dbg !5916
  br i1 %306, label %312, label %307, !dbg !5917

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !5918
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #24, !dbg !5919
  call void @llvm.dbg.value(metadata i32 %309, metadata !5662, metadata !DIExpression()), !dbg !5920
  %310 = icmp slt i32 %309, 0, !dbg !5921
  %311 = add i32 %305, 1, !dbg !5919
  call void @llvm.dbg.value(metadata i32 undef, metadata !5563, metadata !DIExpression()), !dbg !5685
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !5689
  call void @llvm.dbg.value(metadata i32 %313, metadata !5563, metadata !DIExpression()), !dbg !5685
  %314 = lshr i24 %246, 20, !dbg !5923
  %315 = lshr i24 %246, 19, !dbg !5924
  %316 = or i24 %314, %315, !dbg !5925
  %317 = and i24 %316, 1, !dbg !5925
  %318 = icmp eq i24 %317, 0, !dbg !5925
  br i1 %318, label %323, label %319, !dbg !5926

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #24, !dbg !5927
  call void @llvm.dbg.value(metadata i32 %320, metadata !5666, metadata !DIExpression()), !dbg !5928
  %321 = icmp slt i32 %320, 0, !dbg !5929
  %322 = add i32 %313, 1, !dbg !5927
  call void @llvm.dbg.value(metadata i32 undef, metadata !5563, metadata !DIExpression()), !dbg !5685
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !5689
  call void @llvm.dbg.value(metadata i32 %324, metadata !5563, metadata !DIExpression()), !dbg !5685
  %325 = and i24 %246, 1048576, !dbg !5931
  %326 = icmp eq i24 %325, 0, !dbg !5931
  br i1 %326, label %333, label %327, !dbg !5932

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !5933
  %329 = zext i8 %328 to i32, !dbg !5933
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #24, !dbg !5933
  call void @llvm.dbg.value(metadata i32 %330, metadata !5672, metadata !DIExpression()), !dbg !5934
  %331 = icmp slt i32 %330, 0, !dbg !5935
  %332 = add i32 %324, 1, !dbg !5933
  call void @llvm.dbg.value(metadata i32 undef, metadata !5563, metadata !DIExpression()), !dbg !5685
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !5689
  call void @llvm.dbg.value(metadata i32 %334, metadata !5563, metadata !DIExpression()), !dbg !5685
  %335 = load i32, i32* %16, align 4, !dbg !5937
  call void @llvm.dbg.value(metadata i32 %335, metadata !5647, metadata !DIExpression()), !dbg !5699
  br label %336, !dbg !5938

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !5939
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !5689
  call void @llvm.dbg.value(metadata i32 %338, metadata !5563, metadata !DIExpression()), !dbg !5685
  call void @llvm.dbg.value(metadata i32 %337, metadata !5647, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5699
  %339 = icmp sgt i32 %337, 0, !dbg !5940
  br i1 %339, label %340, label %345, !dbg !5938

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !5941
  call void @llvm.dbg.value(metadata i32 %341, metadata !5647, metadata !DIExpression()), !dbg !5699
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #24, !dbg !5942
  call void @llvm.dbg.value(metadata i32 %342, metadata !5676, metadata !DIExpression()), !dbg !5943
  %343 = icmp slt i32 %342, 0, !dbg !5944
  %344 = add i32 %338, 1, !dbg !5942
  call void @llvm.dbg.value(metadata i32 undef, metadata !5563, metadata !DIExpression()), !dbg !5685
  br i1 %343, label %361, label %336, !llvm.loop !5946

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #25, !dbg !5948
  call void @llvm.dbg.value(metadata i32 %346, metadata !5679, metadata !DIExpression()), !dbg !5949
  %347 = icmp slt i32 %346, 0, !dbg !5950
  call void @llvm.dbg.value(metadata i32 undef, metadata !5563, metadata !DIExpression()), !dbg !5685
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !5948
  call void @llvm.dbg.value(metadata i32 %349, metadata !5563, metadata !DIExpression()), !dbg !5685
  call void @llvm.dbg.value(metadata i32 %304, metadata !5624, metadata !DIExpression()), !dbg !5699
  %350 = icmp sgt i32 %304, 0, !dbg !5952
  br i1 %350, label %351, label %363, !dbg !5953

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !5953
  %353 = add i32 %352, %338, !dbg !5953
  br label %354, !dbg !5953

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !5563, metadata !DIExpression()), !dbg !5685
  call void @llvm.dbg.value(metadata i32 %355, metadata !5624, metadata !DIExpression()), !dbg !5699
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #24, !dbg !5954
  call void @llvm.dbg.value(metadata i32 %356, metadata !5681, metadata !DIExpression()), !dbg !5955
  %357 = icmp slt i32 %356, 0, !dbg !5956
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !5958
  call void @llvm.dbg.value(metadata i32 undef, metadata !5563, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5685
  call void @llvm.dbg.value(metadata i32 %359, metadata !5624, metadata !DIExpression()), !dbg !5699
  %360 = icmp sgt i32 %355, 1, !dbg !5952
  br i1 %360, label %354, label %363, !dbg !5953, !llvm.loop !5959

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !5563, metadata !DIExpression()), !dbg !5685
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !5696
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !5689
  call void @llvm.dbg.value(metadata i32 %364, metadata !5563, metadata !DIExpression()), !dbg !5685
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !5696
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !5685
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #23, !dbg !5961
  ret i32 %366, !dbg !5961
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5962 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5966, metadata !DIExpression()), !dbg !5968
  call void @llvm.dbg.value(metadata i8* %1, metadata !5967, metadata !DIExpression()), !dbg !5968
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !5969
  store i24 0, i24* %3, align 4, !dbg !5969
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5969
  store i8 0, i8* %4, align 1, !dbg !5969
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5969
  store i32 0, i32* %5, align 4, !dbg !5969
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5969
  store i32 0, i32* %6, align 4, !dbg !5969
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5970
  call void @llvm.dbg.value(metadata i8* %7, metadata !5967, metadata !DIExpression()), !dbg !5968
  %8 = load i8, i8* %7, align 1, !dbg !5971
  %9 = icmp eq i8 %8, 37, !dbg !5973
  br i1 %9, label %10, label %12, !dbg !5974

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5975
  call void @llvm.dbg.value(metadata i8* %11, metadata !5967, metadata !DIExpression()), !dbg !5968
  store i8 37, i8* %4, align 1, !dbg !5977
  br label %18, !dbg !5978

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #25, !dbg !5979
  call void @llvm.dbg.value(metadata i8* %13, metadata !5967, metadata !DIExpression()), !dbg !5968
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #25, !dbg !5980
  call void @llvm.dbg.value(metadata i8* %14, metadata !5967, metadata !DIExpression()), !dbg !5968
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #25, !dbg !5981
  call void @llvm.dbg.value(metadata i8* %15, metadata !5967, metadata !DIExpression()), !dbg !5968
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #25, !dbg !5982
  call void @llvm.dbg.value(metadata i8* %16, metadata !5967, metadata !DIExpression()), !dbg !5968
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #25, !dbg !5983
  call void @llvm.dbg.value(metadata i8* %17, metadata !5967, metadata !DIExpression()), !dbg !5968
  br label %18, !dbg !5984

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !5968
  ret i8* %19, !dbg !5985
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !5986 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5990, metadata !DIExpression()), !dbg !5997
  call void @llvm.dbg.value(metadata i8* %1, metadata !5991, metadata !DIExpression()), !dbg !5997
  call void @llvm.dbg.value(metadata i8* %2, metadata !5992, metadata !DIExpression()), !dbg !5997
  call void @llvm.dbg.value(metadata i8* %3, metadata !5993, metadata !DIExpression()), !dbg !5997
  call void @llvm.dbg.value(metadata i32 0, metadata !5994, metadata !DIExpression()), !dbg !5997
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !5998

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !5999
  call void @llvm.dbg.value(metadata i32 %9, metadata !5994, metadata !DIExpression()), !dbg !5997
  call void @llvm.dbg.value(metadata i8* %8, metadata !5992, metadata !DIExpression()), !dbg !5997
  %10 = icmp ult i8* %8, %3, !dbg !6000
  br i1 %10, label %11, label %13, !dbg !6001

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !6002
  br label %17, !dbg !6001

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !6003

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !6004
  %16 = icmp eq i8 %15, 0, !dbg !6003
  br i1 %16, label %24, label %17, !dbg !5998

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !6002
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6005
  call void @llvm.dbg.value(metadata i8* %19, metadata !5992, metadata !DIExpression()), !dbg !5997
  %20 = zext i8 %18 to i32, !dbg !6006
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #24, !dbg !6007
  call void @llvm.dbg.value(metadata i32 %21, metadata !5995, metadata !DIExpression()), !dbg !6008
  %22 = icmp slt i32 %21, 0, !dbg !6009
  %23 = add i32 %9, 1, !dbg !6011
  call void @llvm.dbg.value(metadata i32 undef, metadata !5994, metadata !DIExpression()), !dbg !5997
  br i1 %22, label %24, label %7, !llvm.loop !6012

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !5997
  ret i32 %25, !dbg !6014
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #13 !dbg !6015 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !6019, metadata !DIExpression()), !dbg !6029
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !6020, metadata !DIExpression()), !dbg !6029
  call void @llvm.dbg.value(metadata i8* %2, metadata !6021, metadata !DIExpression()), !dbg !6029
  call void @llvm.dbg.value(metadata i8* %3, metadata !6022, metadata !DIExpression()), !dbg !6029
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !6030
  %6 = load i8, i8* %5, align 1, !dbg !6030
  %7 = zext i8 %6 to i32, !dbg !6031
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #25, !dbg !6032
  %9 = icmp eq i32 %8, 0, !dbg !6032
  call void @llvm.dbg.value(metadata i1 %9, metadata !6023, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6029
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #25, !dbg !6033
  call void @llvm.dbg.value(metadata i32 %10, metadata !6024, metadata !DIExpression()), !dbg !6029
  %11 = ptrtoint i8* %3 to i32, !dbg !6034
  %12 = ptrtoint i8* %2 to i32, !dbg !6034
  %13 = sub i32 %11, %12, !dbg !6034
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !6035
  call void @llvm.dbg.value(metadata i8* %14, metadata !6026, metadata !DIExpression()), !dbg !6029
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !6036

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !6029
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !6019, metadata !DIExpression()), !dbg !6029
  call void @llvm.dbg.value(metadata i8* %18, metadata !6026, metadata !DIExpression()), !dbg !6029
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !6037
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !6038
  call void @llvm.dbg.value(metadata i32 %25, metadata !6027, metadata !DIExpression()), !dbg !6039
  %26 = icmp ult i32 %25, 10, !dbg !6040
  %27 = select i1 %26, i32 48, i32 %16, !dbg !6041
  %28 = add i32 %27, %25, !dbg !6039
  %29 = trunc i32 %28 to i8, !dbg !6041
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !6042
  call void @llvm.dbg.value(metadata i8* %30, metadata !6026, metadata !DIExpression()), !dbg !6029
  store i8 %29, i8* %30, align 1, !dbg !6043
  call void @llvm.dbg.value(metadata i64 %22, metadata !6019, metadata !DIExpression()), !dbg !6029
  %31 = icmp uge i64 %19, %15, !dbg !6044
  %32 = icmp ugt i8* %30, %2, !dbg !6045
  %33 = and i1 %31, %32, !dbg !6045
  br i1 %33, label %17, label %34, !dbg !6046, !llvm.loop !6047

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !6049
  %36 = load i24, i24* %35, align 4, !dbg !6049
  %37 = and i24 %36, 32, !dbg !6049
  %38 = icmp eq i24 %37, 0, !dbg !6049
  br i1 %38, label %44, label %39, !dbg !6051

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !6052

40:                                               ; preds = %39
  br label %41, !dbg !6054

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !6058
  store i24 %43, i24* %35, align 4, !dbg !6058
  br label %44, !dbg !6059

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !6059
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #7 !dbg !6060 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6066, metadata !DIExpression()), !dbg !6069
  call void @llvm.dbg.value(metadata i8* %1, metadata !6067, metadata !DIExpression()), !dbg !6069
  call void @llvm.dbg.value(metadata i32 %2, metadata !6068, metadata !DIExpression()), !dbg !6069
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !6070
  %5 = load i24, i24* %4, align 4, !dbg !6070
  %6 = lshr i24 %5, 11, !dbg !6070
  %7 = and i24 %6, 15, !dbg !6070
  %8 = zext i24 %7 to i32, !dbg !6070
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !6071

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !6072
  store i32 %2, i32* %10, align 4, !dbg !6074
  br label %28, !dbg !6075

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !6076
  store i8 %12, i8* %1, align 1, !dbg !6077
  br label %28, !dbg !6078

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !6079
  %15 = bitcast i8* %1 to i16*, !dbg !6080
  store i16 %14, i16* %15, align 2, !dbg !6081
  br label %28, !dbg !6082

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !6083
  store i32 %2, i32* %17, align 4, !dbg !6084
  br label %28, !dbg !6085

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !6086
  %20 = bitcast i8* %1 to i64*, !dbg !6087
  store i64 %19, i64* %20, align 8, !dbg !6088
  br label %28, !dbg !6089

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !6090
  %23 = bitcast i8* %1 to i64*, !dbg !6091
  store i64 %22, i64* %23, align 8, !dbg !6092
  br label %28, !dbg !6093

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !6094
  store i32 %2, i32* %25, align 4, !dbg !6095
  br label %28, !dbg !6096

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !6097
  store i32 %2, i32* %27, align 4, !dbg !6098
  br label %28, !dbg !6099

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !6100
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #11 !dbg !6101 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6104, metadata !DIExpression()), !dbg !6105
  %2 = add i32 %0, -65, !dbg !6106
  %3 = icmp ult i32 %2, 26, !dbg !6107
  %4 = zext i1 %3 to i32, !dbg !6107
  ret i32 %4, !dbg !6108
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #11 !dbg !6109 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !6113, metadata !DIExpression()), !dbg !6114
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !6115

2:                                                ; preds = %1
  br label %4, !dbg !6116

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !6118

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !6119
  ret i32 %5, !dbg !6120
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #13 !dbg !6121 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6123, metadata !DIExpression()), !dbg !6126
  call void @llvm.dbg.value(metadata i8* %1, metadata !6124, metadata !DIExpression()), !dbg !6126
  call void @llvm.dbg.value(metadata i8 1, metadata !6125, metadata !DIExpression()), !dbg !6126
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !6127

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !6125, metadata !DIExpression()), !dbg !6126
  call void @llvm.dbg.value(metadata i8* %5, metadata !6124, metadata !DIExpression()), !dbg !6126
  %6 = load i8, i8* %5, align 1, !dbg !6128
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !6130

7:                                                ; preds = %4
  br label %11, !dbg !6131

8:                                                ; preds = %4
  br label %11, !dbg !6133

9:                                                ; preds = %4
  br label %11, !dbg !6134

10:                                               ; preds = %4
  br label %11, !dbg !6135

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !6136
  %14 = or i24 %13, %12, !dbg !6136
  store i24 %14, i24* %3, align 4, !dbg !6136
  call void @llvm.dbg.value(metadata i8 poison, metadata !6125, metadata !DIExpression()), !dbg !6126
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !6124, metadata !DIExpression()), !dbg !6126
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !6125, metadata !DIExpression()), !dbg !6126
  call void @llvm.dbg.value(metadata i8* %15, metadata !6124, metadata !DIExpression()), !dbg !6126
  %17 = load i24, i24* %3, align 4, !dbg !6137
  %18 = and i24 %17, 68, !dbg !6139
  %19 = icmp eq i24 %18, 68, !dbg !6139
  br i1 %19, label %20, label %22, !dbg !6139

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !6140
  store i24 %21, i24* %3, align 4, !dbg !6140
  br label %22, !dbg !6142

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !6143
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !6144 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6146, metadata !DIExpression()), !dbg !6150
  call void @llvm.dbg.value(metadata i8* %1, metadata !6147, metadata !DIExpression()), !dbg !6150
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !6151
  %5 = load i24, i24* %4, align 4, !dbg !6152
  %6 = or i24 %5, 128, !dbg !6152
  store i24 %6, i24* %4, align 4, !dbg !6152
  call void @llvm.dbg.value(metadata i8* %1, metadata !6147, metadata !DIExpression()), !dbg !6150
  %7 = load i8, i8* %1, align 1, !dbg !6153
  %8 = icmp eq i8 %7, 42, !dbg !6155
  br i1 %8, label %9, label %12, !dbg !6156

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !6157
  store i24 %10, i24* %4, align 4, !dbg !6157
  call void @llvm.dbg.value(metadata i8* %1, metadata !6147, metadata !DIExpression()), !dbg !6150
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6159
  call void @llvm.dbg.value(metadata i8* %11, metadata !6147, metadata !DIExpression()), !dbg !6150
  store i8* %11, i8** %3, align 4, !dbg !6159
  br label %29, !dbg !6160

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !6148, metadata !DIExpression()), !dbg !6150
  call void @llvm.dbg.value(metadata i8** %3, metadata !6147, metadata !DIExpression(DW_OP_deref)), !dbg !6150
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #25, !dbg !6161
  call void @llvm.dbg.value(metadata i32 %13, metadata !6149, metadata !DIExpression()), !dbg !6150
  %14 = load i8*, i8** %3, align 4, !dbg !6162
  call void @llvm.dbg.value(metadata i8* %14, metadata !6147, metadata !DIExpression()), !dbg !6150
  %15 = icmp eq i8* %14, %1, !dbg !6164
  br i1 %15, label %29, label %16, !dbg !6165

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !6166
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !6168
  store i32 %13, i32* %18, align 4, !dbg !6169
  %19 = lshr i32 %13, 31, !dbg !6170
  %20 = lshr i24 %17, 1, !dbg !6171
  %21 = and i24 %20, 1, !dbg !6171
  %22 = zext i24 %21 to i32, !dbg !6171
  %23 = or i32 %19, %22, !dbg !6171
  %24 = trunc i32 %23 to i24, !dbg !6171
  %25 = shl nuw nsw i24 %24, 1, !dbg !6171
  %26 = and i24 %17, -131, !dbg !6171
  %27 = or i24 %26, 128, !dbg !6171
  %28 = or i24 %25, %27, !dbg !6171
  store i24 %28, i24* %4, align 4, !dbg !6171
  br label %29, !dbg !6172

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !6150
  ret i8* %30, !dbg !6173
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !6174 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6176, metadata !DIExpression()), !dbg !6179
  call void @llvm.dbg.value(metadata i8* %1, metadata !6177, metadata !DIExpression()), !dbg !6179
  %4 = load i8, i8* %1, align 1, !dbg !6180
  %5 = icmp eq i8 %4, 46, !dbg !6181
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !6182
  %7 = load i24, i24* %6, align 4, !dbg !6183
  %8 = select i1 %5, i24 512, i24 0, !dbg !6183
  %9 = and i24 %7, -513, !dbg !6183
  %10 = or i24 %9, %8, !dbg !6183
  store i24 %10, i24* %6, align 4, !dbg !6183
  br i1 %5, label %11, label %32, !dbg !6184

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !6177, metadata !DIExpression()), !dbg !6179
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6185
  call void @llvm.dbg.value(metadata i8* %12, metadata !6177, metadata !DIExpression()), !dbg !6179
  store i8* %12, i8** %3, align 4, !dbg !6185
  %13 = load i8, i8* %12, align 1, !dbg !6186
  %14 = icmp eq i8 %13, 42, !dbg !6188
  br i1 %14, label %15, label %18, !dbg !6189

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !6190
  store i24 %16, i24* %6, align 4, !dbg !6190
  call void @llvm.dbg.value(metadata i8* %12, metadata !6177, metadata !DIExpression()), !dbg !6179
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6192
  call void @llvm.dbg.value(metadata i8* %17, metadata !6177, metadata !DIExpression()), !dbg !6179
  store i8* %17, i8** %3, align 4, !dbg !6192
  br label %32, !dbg !6193

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !6177, metadata !DIExpression(DW_OP_deref)), !dbg !6179
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #25, !dbg !6194
  call void @llvm.dbg.value(metadata i32 %19, metadata !6178, metadata !DIExpression()), !dbg !6179
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !6195
  store i32 %19, i32* %20, align 4, !dbg !6196
  %21 = lshr i32 %19, 31, !dbg !6197
  %22 = load i24, i24* %6, align 4, !dbg !6198
  %23 = lshr i24 %22, 1, !dbg !6198
  %24 = and i24 %23, 1, !dbg !6198
  %25 = zext i24 %24 to i32, !dbg !6198
  %26 = or i32 %21, %25, !dbg !6198
  %27 = trunc i32 %26 to i24, !dbg !6198
  %28 = shl nuw nsw i24 %27, 1, !dbg !6198
  %29 = and i24 %22, -3, !dbg !6198
  %30 = or i24 %28, %29, !dbg !6198
  store i24 %30, i24* %6, align 4, !dbg !6198
  %31 = load i8*, i8** %3, align 4, !dbg !6199
  call void @llvm.dbg.value(metadata i8* %31, metadata !6177, metadata !DIExpression()), !dbg !6179
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !6179
  ret i8* %33, !dbg !6200
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #7 !dbg !6201 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6203, metadata !DIExpression()), !dbg !6205
  call void @llvm.dbg.value(metadata i8* %1, metadata !6204, metadata !DIExpression()), !dbg !6205
  %3 = load i8, i8* %1, align 1, !dbg !6206
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !6207

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6208
  call void @llvm.dbg.value(metadata i8* %5, metadata !6204, metadata !DIExpression()), !dbg !6205
  %6 = load i8, i8* %5, align 1, !dbg !6211
  %7 = icmp eq i8 %6, 104, !dbg !6212
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6213
  %9 = load i24, i24* %8, align 4, !dbg !6213
  %10 = and i24 %9, -30721, !dbg !6213
  br i1 %7, label %11, label %14, !dbg !6214

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !6215
  store i24 %12, i24* %8, align 4, !dbg !6215
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6217
  call void @llvm.dbg.value(metadata i8* %13, metadata !6204, metadata !DIExpression()), !dbg !6205
  br label %56, !dbg !6218

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !6219
  store i24 %15, i24* %8, align 4, !dbg !6219
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6221
  call void @llvm.dbg.value(metadata i8* %17, metadata !6204, metadata !DIExpression()), !dbg !6205
  %18 = load i8, i8* %17, align 1, !dbg !6223
  %19 = icmp eq i8 %18, 108, !dbg !6224
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !6225
  %21 = load i24, i24* %20, align 4, !dbg !6225
  %22 = and i24 %21, -30721, !dbg !6225
  br i1 %19, label %23, label %26, !dbg !6226

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !6227
  store i24 %24, i24* %20, align 4, !dbg !6227
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6229
  call void @llvm.dbg.value(metadata i8* %25, metadata !6204, metadata !DIExpression()), !dbg !6205
  br label %56, !dbg !6230

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !6231
  store i24 %27, i24* %20, align 4, !dbg !6231
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !6233
  %30 = load i24, i24* %29, align 4, !dbg !6234
  %31 = and i24 %30, -30721, !dbg !6234
  %32 = or i24 %31, 10240, !dbg !6234
  store i24 %32, i24* %29, align 4, !dbg !6234
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6235
  call void @llvm.dbg.value(metadata i8* %33, metadata !6204, metadata !DIExpression()), !dbg !6205
  br label %56, !dbg !6236

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !6237
  %36 = load i24, i24* %35, align 4, !dbg !6238
  %37 = and i24 %36, -30721, !dbg !6238
  %38 = or i24 %37, 12288, !dbg !6238
  store i24 %38, i24* %35, align 4, !dbg !6238
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6239
  call void @llvm.dbg.value(metadata i8* %39, metadata !6204, metadata !DIExpression()), !dbg !6205
  br label %56, !dbg !6240

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !6241
  %42 = load i24, i24* %41, align 4, !dbg !6242
  %43 = and i24 %42, -30721, !dbg !6242
  %44 = or i24 %43, 14336, !dbg !6242
  store i24 %44, i24* %41, align 4, !dbg !6242
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6243
  call void @llvm.dbg.value(metadata i8* %45, metadata !6204, metadata !DIExpression()), !dbg !6205
  br label %56, !dbg !6244

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !6245
  %48 = load i24, i24* %47, align 4, !dbg !6246
  %49 = and i24 %48, -30723, !dbg !6246
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6247
  call void @llvm.dbg.value(metadata i8* %50, metadata !6204, metadata !DIExpression()), !dbg !6205
  %51 = or i24 %49, 16386, !dbg !6248
  store i24 %51, i24* %47, align 4, !dbg !6248
  br label %56, !dbg !6249

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !6250
  %54 = load i24, i24* %53, align 4, !dbg !6251
  %55 = and i24 %54, -30721, !dbg !6251
  store i24 %55, i24* %53, align 4, !dbg !6251
  br label %56, !dbg !6252

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !6204, metadata !DIExpression()), !dbg !6205
  ret i8* %57, !dbg !6253
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #7 !dbg !6254 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6256, metadata !DIExpression()), !dbg !6261
  call void @llvm.dbg.value(metadata i8* %1, metadata !6257, metadata !DIExpression()), !dbg !6261
  call void @llvm.dbg.value(metadata i8 0, metadata !6258, metadata !DIExpression()), !dbg !6261
  call void @llvm.dbg.value(metadata i8* %1, metadata !6257, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6261
  %3 = load i8, i8* %1, align 1, !dbg !6262
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !6263
  store i8 %3, i8* %4, align 1, !dbg !6264
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !6265

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !6266

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6267
  %9 = load i24, i24* %8, align 4, !dbg !6267
  %10 = and i24 %9, -458753, !dbg !6267
  %11 = or i24 %10, %7, !dbg !6267
  call void @llvm.dbg.label(metadata !6259), !dbg !6268
  %12 = and i24 %9, 30720, !dbg !6269
  %13 = icmp eq i24 %12, 16384, !dbg !6269
  %14 = zext i1 %13 to i24, !dbg !6271
  %15 = or i24 %11, %14, !dbg !6271
  %16 = icmp eq i8 %3, 99, !dbg !6272
  br i1 %16, label %17, label %43, !dbg !6274

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !6275
  %19 = icmp ne i24 %18, 0, !dbg !6275
  call void @llvm.dbg.value(metadata i1 %19, metadata !6258, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6261
  br label %43, !dbg !6277

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !6278
  %22 = load i24, i24* %21, align 4, !dbg !6279
  %23 = and i24 %22, -458753, !dbg !6279
  %24 = or i24 %23, 262144, !dbg !6279
  call void @llvm.dbg.value(metadata i8 1, metadata !6258, metadata !DIExpression()), !dbg !6261
  br label %43, !dbg !6280

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !6283
  %27 = load i24, i24* %26, align 4, !dbg !6284
  %28 = and i24 %27, -458753, !dbg !6284
  %29 = or i24 %28, 196608, !dbg !6284
  %30 = and i24 %27, 30720, !dbg !6285
  %31 = icmp eq i24 %30, 16384, !dbg !6285
  br label %43, !dbg !6287

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !6288
  %34 = load i24, i24* %33, align 4, !dbg !6289
  %35 = and i24 %34, -458753, !dbg !6289
  %36 = or i24 %35, 196608, !dbg !6289
  %37 = and i24 %34, 30720, !dbg !6290
  %38 = icmp ne i24 %37, 0, !dbg !6290
  br label %43, !dbg !6292

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !6293
  %41 = load i24, i24* %40, align 4, !dbg !6294
  %42 = or i24 %41, 1, !dbg !6294
  br label %43, !dbg !6295

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !6296
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !6297
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6298
  call void @llvm.dbg.value(metadata i8* %48, metadata !6257, metadata !DIExpression()), !dbg !6261
  call void @llvm.dbg.value(metadata i8 poison, metadata !6258, metadata !DIExpression()), !dbg !6261
  %49 = lshr i24 %44, 1, !dbg !6296
  %50 = and i24 %49, 1, !dbg !6296
  %51 = zext i24 %50 to i32, !dbg !6296
  %52 = or i32 %51, %47, !dbg !6296
  %53 = trunc i32 %52 to i24, !dbg !6296
  %54 = shl nuw nsw i24 %53, 1, !dbg !6296
  %55 = and i24 %44, -3, !dbg !6296
  %56 = or i24 %54, %55, !dbg !6296
  store i24 %56, i24* %46, align 4, !dbg !6296
  ret i8* %48, !dbg !6299
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #13 !dbg !6300 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !6305, metadata !DIExpression()), !dbg !6308
  %2 = load i8*, i8** %0, align 4, !dbg !6309
  call void @llvm.dbg.value(metadata i8* %2, metadata !6306, metadata !DIExpression()), !dbg !6308
  call void @llvm.dbg.value(metadata i32 0, metadata !6307, metadata !DIExpression()), !dbg !6308
  %3 = load i8, i8* %2, align 1, !dbg !6310
  %4 = zext i8 %3 to i32, !dbg !6311
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #25, !dbg !6312
  %6 = icmp eq i32 %5, 0, !dbg !6313
  br i1 %6, label %19, label %7, !dbg !6313

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6307, metadata !DIExpression()), !dbg !6308
  call void @llvm.dbg.value(metadata i8* %10, metadata !6306, metadata !DIExpression()), !dbg !6308
  %11 = mul i32 %9, 10, !dbg !6314
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6316
  call void @llvm.dbg.value(metadata i8* %12, metadata !6306, metadata !DIExpression()), !dbg !6308
  %13 = add i32 %11, -48, !dbg !6317
  %14 = add i32 %13, %8, !dbg !6318
  call void @llvm.dbg.value(metadata i32 %14, metadata !6307, metadata !DIExpression()), !dbg !6308
  %15 = load i8, i8* %12, align 1, !dbg !6310
  %16 = zext i8 %15 to i32, !dbg !6311
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #25, !dbg !6312
  %18 = icmp eq i32 %17, 0, !dbg !6313
  br i1 %18, label %19, label %7, !dbg !6313, !llvm.loop !6319

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !6308
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !6308
  store i8* %20, i8** %0, align 4, !dbg !6321
  ret i32 %21, !dbg !6322
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #11 !dbg !6323 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6325, metadata !DIExpression()), !dbg !6326
  %2 = add i32 %0, -48, !dbg !6327
  %3 = icmp ult i32 %2, 10, !dbg !6328
  %4 = zext i1 %3 to i32, !dbg !6328
  ret i32 %4, !dbg !6329
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !6330 {
  tail call void asm sideeffect ".globl\09CONFIG_UART_INTERRUPT_DRIVEN\0A\09.equ\09CONFIG_UART_INTERRUPT_DRIVEN,1\0A\09.type\09CONFIG_UART_INTERRUPT_DRIVEN,%object", ""() #23, !dbg !6332, !srcloc !6333
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #23, !dbg !6334, !srcloc !6335
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #23, !dbg !6336, !srcloc !6337
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,137\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #23, !dbg !6338, !srcloc !6339
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,120000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #23, !dbg !6340, !srcloc !6341
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,512\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #23, !dbg !6342, !srcloc !6343
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x0\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #23, !dbg !6344, !srcloc !6345
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #23, !dbg !6346, !srcloc !6347
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #23, !dbg !6348, !srcloc !6349
  tail call void asm sideeffect ".globl\09CONFIG_SOC_PART_NUMBER\0A\09.equ\09CONFIG_SOC_PART_NUMBER,1\0A\09.type\09CONFIG_SOC_PART_NUMBER,%object", ""() #23, !dbg !6350, !srcloc !6351
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #23, !dbg !6352, !srcloc !6353
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #23, !dbg !6354, !srcloc !6355
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #23, !dbg !6356, !srcloc !6357
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #23, !dbg !6358, !srcloc !6359
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #23, !dbg !6360, !srcloc !6361
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #23, !dbg !6362, !srcloc !6363
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #23, !dbg !6364, !srcloc !6365
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #23, !dbg !6366, !srcloc !6367
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #23, !dbg !6368, !srcloc !6369
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #23, !dbg !6370, !srcloc !6371
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_MPU_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_MPU_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_MPU_ENABLED,%object", ""() #23, !dbg !6372, !srcloc !6373
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #23, !dbg !6374, !srcloc !6375
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #23, !dbg !6376, !srcloc !6377
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #23, !dbg !6378, !srcloc !6379
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM_TRNG_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM_TRNG_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM_TRNG_ENABLED,%object", ""() #23, !dbg !6380, !srcloc !6381
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM0_ADC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM0_ADC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM0_ADC_ENABLED,%object", ""() #23, !dbg !6382, !srcloc !6383
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM0_DMAC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM0_DMAC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM0_DMAC_ENABLED,%object", ""() #23, !dbg !6384, !srcloc !6385
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM0_EIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM0_EIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM0_EIC_ENABLED,%object", ""() #23, !dbg !6386, !srcloc !6387
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM0_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM0_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM0_GPIO_ENABLED,%object", ""() #23, !dbg !6388, !srcloc !6389
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM0_ID_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM0_ID_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM0_ID_ENABLED,%object", ""() #23, !dbg !6390, !srcloc !6391
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM0_NVMCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM0_NVMCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM0_NVMCTRL_ENABLED,%object", ""() #23, !dbg !6392, !srcloc !6393
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM0_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM0_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM0_PINCTRL_ENABLED,%object", ""() #23, !dbg !6394, !srcloc !6395
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM0_PINMUX_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM0_PINMUX_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM0_PINMUX_ENABLED,%object", ""() #23, !dbg !6396, !srcloc !6397
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM0_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM0_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM0_SPI_ENABLED,%object", ""() #23, !dbg !6398, !srcloc !6399
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM0_TC32_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM0_TC32_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM0_TC32_ENABLED,%object", ""() #23, !dbg !6400, !srcloc !6401
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM0_TCC_PWM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM0_TCC_PWM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM0_TCC_PWM_ENABLED,%object", ""() #23, !dbg !6402, !srcloc !6403
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM0_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM0_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM0_UART_ENABLED,%object", ""() #23, !dbg !6404, !srcloc !6405
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM0_USB_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM0_USB_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM0_USB_ENABLED,%object", ""() #23, !dbg !6406, !srcloc !6407
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM0_WATCHDOG_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM0_WATCHDOG_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM0_WATCHDOG_ENABLED,%object", ""() #23, !dbg !6408, !srcloc !6409
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAMD5X_GCLK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAMD5X_GCLK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAMD5X_GCLK_ENABLED,%object", ""() #23, !dbg !6410, !srcloc !6411
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAMD5X_MCLK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAMD5X_MCLK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAMD5X_MCLK_ENABLED,%object", ""() #23, !dbg !6412, !srcloc !6413
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_PARTITIONS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_PARTITIONS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_PARTITIONS_ENABLED,%object", ""() #23, !dbg !6414, !srcloc !6415
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #23, !dbg !6416, !srcloc !6417
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #23, !dbg !6418, !srcloc !6419
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_PWM_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_PWM_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_PWM_LEDS_ENABLED,%object", ""() #23, !dbg !6420, !srcloc !6421
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #23, !dbg !6422, !srcloc !6423
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #23, !dbg !6424, !srcloc !6425
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #23, !dbg !6426, !srcloc !6427
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #23, !dbg !6428, !srcloc !6429
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #23, !dbg !6430, !srcloc !6431
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #23, !dbg !6432, !srcloc !6433
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #23, !dbg !6434, !srcloc !6435
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #23, !dbg !6436, !srcloc !6437
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #23, !dbg !6438, !srcloc !6439
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #23, !dbg !6440, !srcloc !6441
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #23, !dbg !6442, !srcloc !6443
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #23, !dbg !6444, !srcloc !6445
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #23, !dbg !6446, !srcloc !6447
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #23, !dbg !6448, !srcloc !6449
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #23, !dbg !6450, !srcloc !6451
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #23, !dbg !6452, !srcloc !6453
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #23, !dbg !6454, !srcloc !6455
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #23, !dbg !6456, !srcloc !6457
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #23, !dbg !6458, !srcloc !6459
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #23, !dbg !6460, !srcloc !6461
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #23, !dbg !6462, !srcloc !6463
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #23, !dbg !6464, !srcloc !6465
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #23, !dbg !6466, !srcloc !6467
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #23, !dbg !6468, !srcloc !6469
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #23, !dbg !6470, !srcloc !6471
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #23, !dbg !6472, !srcloc !6473
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #23, !dbg !6474, !srcloc !6475
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #23, !dbg !6476, !srcloc !6477
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #23, !dbg !6478, !srcloc !6479
  tail call void asm sideeffect ".globl\09CONFIG_ASF\0A\09.equ\09CONFIG_ASF,1\0A\09.type\09CONFIG_ASF,%object", ""() #23, !dbg !6480, !srcloc !6481
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #23, !dbg !6482, !srcloc !6483
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #23, !dbg !6484, !srcloc !6485
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #23, !dbg !6486, !srcloc !6487
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_ADAFRUIT_ITSYBITSY_M4_EXPRESS\0A\09.equ\09CONFIG_BOARD_ADAFRUIT_ITSYBITSY_M4_EXPRESS,1\0A\09.type\09CONFIG_BOARD_ADAFRUIT_ITSYBITSY_M4_EXPRESS,%object", ""() #23, !dbg !6488, !srcloc !6489
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_SAMD51\0A\09.equ\09CONFIG_SOC_SERIES_SAMD51,1\0A\09.type\09CONFIG_SOC_SERIES_SAMD51,%object", ""() #23, !dbg !6490, !srcloc !6491
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #23, !dbg !6492, !srcloc !6493
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #23, !dbg !6494, !srcloc !6495
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_SAM0\0A\09.equ\09CONFIG_SOC_FAMILY_SAM0,1\0A\09.type\09CONFIG_SOC_FAMILY_SAM0,%object", ""() #23, !dbg !6496, !srcloc !6497
  tail call void asm sideeffect ".globl\09CONFIG_SOC_ATMEL_SAMD5X_OSCULP32K_AS_MAIN\0A\09.equ\09CONFIG_SOC_ATMEL_SAMD5X_OSCULP32K_AS_MAIN,1\0A\09.type\09CONFIG_SOC_ATMEL_SAMD5X_OSCULP32K_AS_MAIN,%object", ""() #23, !dbg !6498, !srcloc !6499
  tail call void asm sideeffect ".globl\09CONFIG_SOC_PART_NUMBER_SAMD51G19A\0A\09.equ\09CONFIG_SOC_PART_NUMBER_SAMD51G19A,1\0A\09.type\09CONFIG_SOC_PART_NUMBER_SAMD51G19A,%object", ""() #23, !dbg !6500, !srcloc !6501
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_REVISION\0A\09.equ\09CONFIG_SOC_SERIES_REVISION,1\0A\09.type\09CONFIG_SOC_SERIES_REVISION,%object", ""() #23, !dbg !6502, !srcloc !6503
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #23, !dbg !6504, !srcloc !6505
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #23, !dbg !6506, !srcloc !6507
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #23, !dbg !6508, !srcloc !6509
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #23, !dbg !6510, !srcloc !6511
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #23, !dbg !6512, !srcloc !6513
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #23, !dbg !6514, !srcloc !6515
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #23, !dbg !6516, !srcloc !6517
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #23, !dbg !6518, !srcloc !6519
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #23, !dbg !6520, !srcloc !6521
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #23, !dbg !6522, !srcloc !6523
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #23, !dbg !6524, !srcloc !6525
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #23, !dbg !6526, !srcloc !6527
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #23, !dbg !6528, !srcloc !6529
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #23, !dbg !6530, !srcloc !6531
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #23, !dbg !6532, !srcloc !6533
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #23, !dbg !6534, !srcloc !6535
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #23, !dbg !6536, !srcloc !6537
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #23, !dbg !6538, !srcloc !6539
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #23, !dbg !6540, !srcloc !6541
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #23, !dbg !6542, !srcloc !6543
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #23, !dbg !6544, !srcloc !6545
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #23, !dbg !6546, !srcloc !6547
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #23, !dbg !6548, !srcloc !6549
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #23, !dbg !6550, !srcloc !6551
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #23, !dbg !6552, !srcloc !6553
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #23, !dbg !6554, !srcloc !6555
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #23, !dbg !6556, !srcloc !6557
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,192\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #23, !dbg !6558, !srcloc !6559
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #23, !dbg !6560, !srcloc !6561
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #23, !dbg !6562, !srcloc !6563
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #23, !dbg !6564, !srcloc !6565
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #23, !dbg !6566, !srcloc !6567
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #23, !dbg !6568, !srcloc !6569
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #23, !dbg !6570, !srcloc !6571
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #23, !dbg !6572, !srcloc !6573
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #23, !dbg !6574, !srcloc !6575
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #23, !dbg !6576, !srcloc !6577
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #23, !dbg !6578, !srcloc !6579
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #23, !dbg !6580, !srcloc !6581
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #23, !dbg !6582, !srcloc !6583
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #23, !dbg !6584, !srcloc !6585
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #23, !dbg !6586, !srcloc !6587
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #23, !dbg !6588, !srcloc !6589
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #23, !dbg !6590, !srcloc !6591
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #23, !dbg !6592, !srcloc !6593
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #23, !dbg !6594, !srcloc !6595
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #23, !dbg !6596, !srcloc !6597
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #23, !dbg !6598, !srcloc !6599
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #23, !dbg !6600, !srcloc !6601
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !6602, !srcloc !6603
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #23, !dbg !6604, !srcloc !6605
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #23, !dbg !6606, !srcloc !6607
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #23, !dbg !6608, !srcloc !6609
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #23, !dbg !6610, !srcloc !6611
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #23, !dbg !6612, !srcloc !6613
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #23, !dbg !6614, !srcloc !6615
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #23, !dbg !6616, !srcloc !6617
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #23, !dbg !6618, !srcloc !6619
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #23, !dbg !6620, !srcloc !6621
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #23, !dbg !6622, !srcloc !6623
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #23, !dbg !6624, !srcloc !6625
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #23, !dbg !6626, !srcloc !6627
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #23, !dbg !6628, !srcloc !6629
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #23, !dbg !6630, !srcloc !6631
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #23, !dbg !6632, !srcloc !6633
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #23, !dbg !6634, !srcloc !6635
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #23, !dbg !6636, !srcloc !6637
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #23, !dbg !6638, !srcloc !6639
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #23, !dbg !6640, !srcloc !6641
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #23, !dbg !6642, !srcloc !6643
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #23, !dbg !6644, !srcloc !6645
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #23, !dbg !6646, !srcloc !6647
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #23, !dbg !6648, !srcloc !6649
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #23, !dbg !6650, !srcloc !6651
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #23, !dbg !6652, !srcloc !6653
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #23, !dbg !6654, !srcloc !6655
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #23, !dbg !6656, !srcloc !6657
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #23, !dbg !6658, !srcloc !6659
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #23, !dbg !6660, !srcloc !6661
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #23, !dbg !6662, !srcloc !6663
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #23, !dbg !6664, !srcloc !6665
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #23, !dbg !6666, !srcloc !6667
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #23, !dbg !6668, !srcloc !6669
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #23, !dbg !6670, !srcloc !6671
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #23, !dbg !6672, !srcloc !6673
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #23, !dbg !6674, !srcloc !6675
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #23, !dbg !6676, !srcloc !6677
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #23, !dbg !6678, !srcloc !6679
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #23, !dbg !6680, !srcloc !6681
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #23, !dbg !6682, !srcloc !6683
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #23, !dbg !6684, !srcloc !6685
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #23, !dbg !6686, !srcloc !6687
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #23, !dbg !6688, !srcloc !6689
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #23, !dbg !6690, !srcloc !6691
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #23, !dbg !6692, !srcloc !6693
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !6694, !srcloc !6695
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #23, !dbg !6696, !srcloc !6697
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #23, !dbg !6698, !srcloc !6699
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #23, !dbg !6700, !srcloc !6701
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #23, !dbg !6702, !srcloc !6703
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #23, !dbg !6704, !srcloc !6705
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #23, !dbg !6706, !srcloc !6707
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #23, !dbg !6708, !srcloc !6709
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #23, !dbg !6710, !srcloc !6711
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_ASYNC\0A\09.equ\09CONFIG_SERIAL_SUPPORT_ASYNC,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_ASYNC,%object", ""() #23, !dbg !6712, !srcloc !6713
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #23, !dbg !6714, !srcloc !6715
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #23, !dbg !6716, !srcloc !6717
  tail call void asm sideeffect ".globl\09CONFIG_UART_SAM0\0A\09.equ\09CONFIG_UART_SAM0,1\0A\09.type\09CONFIG_UART_SAM0,%object", ""() #23, !dbg !6718, !srcloc !6719
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #23, !dbg !6720, !srcloc !6721
  tail call void asm sideeffect ".globl\09CONFIG_SAM0_EIC\0A\09.equ\09CONFIG_SAM0_EIC,1\0A\09.type\09CONFIG_SAM0_EIC,%object", ""() #23, !dbg !6722, !srcloc !6723
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #23, !dbg !6724, !srcloc !6725
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #23, !dbg !6726, !srcloc !6727
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #23, !dbg !6728, !srcloc !6729
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #23, !dbg !6730, !srcloc !6731
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_SAM0\0A\09.equ\09CONFIG_PINCTRL_SAM0,1\0A\09.type\09CONFIG_PINCTRL_SAM0,%object", ""() #23, !dbg !6732, !srcloc !6733
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #23, !dbg !6734, !srcloc !6735
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #23, !dbg !6736, !srcloc !6737
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #23, !dbg !6738, !srcloc !6739
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #23, !dbg !6740, !srcloc !6741
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #23, !dbg !6742, !srcloc !6743
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #23, !dbg !6744, !srcloc !6745
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #23, !dbg !6746, !srcloc !6747
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #23, !dbg !6748, !srcloc !6749
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #23, !dbg !6750, !srcloc !6751
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #23, !dbg !6752, !srcloc !6753
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #23, !dbg !6754, !srcloc !6755
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #23, !dbg !6756, !srcloc !6757
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #23, !dbg !6758, !srcloc !6759
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #23, !dbg !6760, !srcloc !6761
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #23, !dbg !6762, !srcloc !6763
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #23, !dbg !6764, !srcloc !6765
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #23, !dbg !6766, !srcloc !6767
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #23, !dbg !6768, !srcloc !6769
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_RUNTIME_STATS\0A\09.equ\09CONFIG_SYS_HEAP_RUNTIME_STATS,1\0A\09.type\09CONFIG_SYS_HEAP_RUNTIME_STATS,%object", ""() #23, !dbg !6770, !srcloc !6771
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #23, !dbg !6772, !srcloc !6773
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #23, !dbg !6774, !srcloc !6775
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #23, !dbg !6776, !srcloc !6777
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #23, !dbg !6778, !srcloc !6779
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #23, !dbg !6780, !srcloc !6781
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #23, !dbg !6782, !srcloc !6783
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #23, !dbg !6784, !srcloc !6785
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #23, !dbg !6786, !srcloc !6787
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !6788, !srcloc !6789
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #23, !dbg !6790, !srcloc !6791
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !6792, !srcloc !6793
  tail call void asm sideeffect ".globl\09CONFIG_USE_DT_CODE_PARTITION\0A\09.equ\09CONFIG_USE_DT_CODE_PARTITION,1\0A\09.type\09CONFIG_USE_DT_CODE_PARTITION,%object", ""() #23, !dbg !6794, !srcloc !6795
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x4000\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !6796, !srcloc !6797
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x78000\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #23, !dbg !6798, !srcloc !6799
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #23, !dbg !6800, !srcloc !6801
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #23, !dbg !6802, !srcloc !6803
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #23, !dbg !6804, !srcloc !6805
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #23, !dbg !6806, !srcloc !6807
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #23, !dbg !6808, !srcloc !6809
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #23, !dbg !6810, !srcloc !6811
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #23, !dbg !6812, !srcloc !6813
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #23, !dbg !6814, !srcloc !6815
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #23, !dbg !6816, !srcloc !6817
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #23, !dbg !6818, !srcloc !6819
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #23, !dbg !6820, !srcloc !6821
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #23, !dbg !6822, !srcloc !6823
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #23, !dbg !6824, !srcloc !6825
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #23, !dbg !6826, !srcloc !6827
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #23, !dbg !6828, !srcloc !6829
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #23, !dbg !6830, !srcloc !6831
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #23, !dbg !6832, !srcloc !6833
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #23, !dbg !6834, !srcloc !6835
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #23, !dbg !6836, !srcloc !6837
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #23, !dbg !6838, !srcloc !6839
  tail call void asm sideeffect ".globl\09CONFIG_BOOTLOADER_BOSSA\0A\09.equ\09CONFIG_BOOTLOADER_BOSSA,1\0A\09.type\09CONFIG_BOOTLOADER_BOSSA,%object", ""() #23, !dbg !6840, !srcloc !6841
  tail call void asm sideeffect ".globl\09CONFIG_BOOTLOADER_BOSSA_ADAFRUIT_UF2\0A\09.equ\09CONFIG_BOOTLOADER_BOSSA_ADAFRUIT_UF2,1\0A\09.type\09CONFIG_BOOTLOADER_BOSSA_ADAFRUIT_UF2,%object", ""() #23, !dbg !6842, !srcloc !6843
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #23, !dbg !6844, !srcloc !6845
  ret void, !dbg !6846
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @soc_port_pinmux_set(%struct.PortGroup* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !6847 {
  call void @llvm.dbg.value(metadata %struct.PortGroup* %0, metadata !7023, metadata !DIExpression()), !dbg !7028
  call void @llvm.dbg.value(metadata i32 %1, metadata !7024, metadata !DIExpression()), !dbg !7028
  call void @llvm.dbg.value(metadata i32 %2, metadata !7025, metadata !DIExpression()), !dbg !7028
  %4 = and i32 %1, 1, !dbg !7029
  %5 = icmp eq i32 %4, 0, !dbg !7030
  call void @llvm.dbg.value(metadata i1 %5, metadata !7026, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7028
  %6 = lshr i32 %1, 1, !dbg !7031
  call void @llvm.dbg.value(metadata i32 %6, metadata !7027, metadata !DIExpression()), !dbg !7028
  %7 = trunc i32 %2 to i8, !dbg !7032
  %8 = getelementptr inbounds %struct.PortGroup, %struct.PortGroup* %0, i32 0, i32 12, i32 %6, i32 0, i32 0, !dbg !7032
  %9 = load volatile i8, i8* %8, align 1, !dbg !7032
  %10 = and i8 %7, 15, !dbg !7034
  %11 = shl i8 %7, 4, !dbg !7034
  %12 = select i1 %5, i8 -16, i8 15, !dbg !7034
  %13 = select i1 %5, i8 %10, i8 %11, !dbg !7034
  %14 = and i8 %9, %12, !dbg !7032
  %15 = or i8 %14, %13, !dbg !7032
  store volatile i8 %15, i8* %8, align 1, !dbg !7032
  %16 = getelementptr inbounds %struct.PortGroup, %struct.PortGroup* %0, i32 0, i32 13, i32 %1, i32 0, i32 0, !dbg !7035
  %17 = load volatile i8, i8* %16, align 1, !dbg !7036
  %18 = or i8 %17, 1, !dbg !7036
  store volatile i8 %18, i8* %16, align 1, !dbg !7036
  ret i32 0, !dbg !7037
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @soc_port_configure(%struct.soc_port_pin* nocapture noundef readonly %0) local_unnamed_addr #16 !dbg !7038 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %2, metadata !7054, metadata !DIExpression()), !dbg !7055
  call void @llvm.dbg.value(metadata %struct.soc_port_pin* %0, metadata !7050, metadata !DIExpression()), !dbg !7056
  %3 = getelementptr inbounds %struct.soc_port_pin, %struct.soc_port_pin* %0, i32 0, i32 0, !dbg !7057
  %4 = load %struct.PortGroup*, %struct.PortGroup** %3, align 4, !dbg !7057
  call void @llvm.dbg.value(metadata %struct.PortGroup* %4, metadata !7051, metadata !DIExpression()), !dbg !7056
  %5 = getelementptr inbounds %struct.soc_port_pin, %struct.soc_port_pin* %0, i32 0, i32 2, !dbg !7058
  %6 = load i32, i32* %5, align 4, !dbg !7058
  call void @llvm.dbg.value(metadata i32 %6, metadata !7052, metadata !DIExpression()), !dbg !7056
  call void @llvm.dbg.value(metadata i32 %6, metadata !7053, metadata !DIExpression(DW_OP_constu, 983040, DW_OP_and, DW_OP_constu, 16, DW_OP_shr, DW_OP_stack_value)), !dbg !7056
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2), !dbg !7059
  store i8 0, i8* %2, align 1, !dbg !7055
  %7 = getelementptr inbounds %struct.soc_port_pin, %struct.soc_port_pin* %0, i32 0, i32 1, !dbg !7060
  %8 = load i32, i32* %7, align 4, !dbg !7060
  %9 = getelementptr inbounds %struct.PortGroup, %struct.PortGroup* %4, i32 0, i32 13, i32 %8, i32 0, i32 0, !dbg !7061
  %10 = load volatile i8, i8* %2, align 1, !dbg !7061
  store volatile i8 %10, i8* %9, align 1, !dbg !7061
  %11 = load i32, i32* %7, align 4, !dbg !7062
  %12 = shl nuw i32 1, %11, !dbg !7063
  %13 = getelementptr inbounds %struct.PortGroup, %struct.PortGroup* %4, i32 0, i32 1, i32 0, i32 0, !dbg !7064
  store volatile i32 %12, i32* %13, align 4, !dbg !7065
  %14 = load i32, i32* %7, align 4, !dbg !7066
  %15 = shl nuw i32 1, %14, !dbg !7067
  %16 = getelementptr inbounds %struct.PortGroup, %struct.PortGroup* %4, i32 0, i32 5, i32 0, i32 0, !dbg !7068
  store volatile i32 %15, i32* %16, align 4, !dbg !7069
  %17 = and i32 %6, 64, !dbg !7070
  %18 = icmp eq i32 %17, 0, !dbg !7070
  br i1 %18, label %24, label %19, !dbg !7072

19:                                               ; preds = %1
  %20 = lshr i32 %6, 16, !dbg !7073
  %21 = and i32 %20, 15, !dbg !7073
  call void @llvm.dbg.value(metadata i32 %21, metadata !7053, metadata !DIExpression()), !dbg !7056
  %22 = load i32, i32* %7, align 4, !dbg !7074
  %23 = tail call i32 @soc_port_pinmux_set(%struct.PortGroup* noundef nonnull %4, i32 noundef %22, i32 noundef %21) #25, !dbg !7076
  br label %60, !dbg !7077

24:                                               ; preds = %1
  %25 = and i32 %6, 3, !dbg !7078
  %26 = icmp eq i32 %25, 0, !dbg !7078
  br i1 %26, label %37, label %27, !dbg !7080

27:                                               ; preds = %24
  %28 = and i32 %6, 1, !dbg !7081
  %29 = icmp eq i32 %28, 0, !dbg !7081
  br i1 %29, label %34, label %30, !dbg !7084

30:                                               ; preds = %27
  %31 = load i32, i32* %7, align 4, !dbg !7085
  %32 = shl nuw i32 1, %31, !dbg !7087
  %33 = getelementptr inbounds %struct.PortGroup, %struct.PortGroup* %4, i32 0, i32 6, i32 0, i32 0, !dbg !7088
  store volatile i32 %32, i32* %33, align 4, !dbg !7089
  br label %34, !dbg !7090

34:                                               ; preds = %30, %27
  %35 = load i8, i8* %2, align 1, !dbg !7091
  %36 = or i8 %35, 4, !dbg !7091
  store i8 %36, i8* %2, align 1, !dbg !7091
  br label %37, !dbg !7092

37:                                               ; preds = %34, %24
  %38 = and i32 %6, 8, !dbg !7093
  %39 = icmp eq i32 %38, 0, !dbg !7093
  br i1 %39, label %43, label %40, !dbg !7095

40:                                               ; preds = %37
  %41 = load i8, i8* %2, align 1, !dbg !7096
  %42 = or i8 %41, 2, !dbg !7096
  store i8 %42, i8* %2, align 1, !dbg !7096
  br label %43, !dbg !7098

43:                                               ; preds = %40, %37
  %44 = and i32 %6, 16, !dbg !7099
  %45 = icmp eq i32 %44, 0, !dbg !7099
  br i1 %45, label %50, label %46, !dbg !7101

46:                                               ; preds = %43
  %47 = load i32, i32* %7, align 4, !dbg !7102
  %48 = shl nuw i32 1, %47, !dbg !7104
  %49 = getelementptr inbounds %struct.PortGroup, %struct.PortGroup* %4, i32 0, i32 2, i32 0, i32 0, !dbg !7105
  store volatile i32 %48, i32* %49, align 4, !dbg !7106
  br label %50, !dbg !7107

50:                                               ; preds = %46, %43
  %51 = and i32 %6, 32, !dbg !7108
  %52 = icmp eq i32 %51, 0, !dbg !7108
  br i1 %52, label %56, label %53, !dbg !7110

53:                                               ; preds = %50
  %54 = load i8, i8* %2, align 1, !dbg !7111
  %55 = or i8 %54, 64, !dbg !7111
  store i8 %55, i8* %2, align 1, !dbg !7111
  br label %56, !dbg !7113

56:                                               ; preds = %53, %50
  %57 = load i32, i32* %7, align 4, !dbg !7114
  %58 = getelementptr inbounds %struct.PortGroup, %struct.PortGroup* %4, i32 0, i32 13, i32 %57, i32 0, i32 0, !dbg !7115
  %59 = load volatile i8, i8* %2, align 1, !dbg !7115
  store volatile i8 %59, i8* %58, align 1, !dbg !7115
  br label %60, !dbg !7116

60:                                               ; preds = %56, %19
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2), !dbg !7116
  ret void, !dbg !7116
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @soc_port_list_configure(%struct.soc_port_pin* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #16 !dbg !7117 {
  call void @llvm.dbg.value(metadata %struct.soc_port_pin* %0, metadata !7121, metadata !DIExpression()), !dbg !7125
  call void @llvm.dbg.value(metadata i32 %1, metadata !7122, metadata !DIExpression()), !dbg !7125
  call void @llvm.dbg.value(metadata i32 0, metadata !7123, metadata !DIExpression()), !dbg !7126
  %3 = icmp eq i32 %1, 0, !dbg !7127
  br i1 %3, label %4, label %5, !dbg !7129

4:                                                ; preds = %5, %2
  ret void, !dbg !7130

5:                                                ; preds = %2, %5
  %6 = phi i32 [ %8, %5 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !7123, metadata !DIExpression()), !dbg !7126
  %7 = getelementptr inbounds %struct.soc_port_pin, %struct.soc_port_pin* %0, i32 %6, !dbg !7131
  tail call void @soc_port_configure(%struct.soc_port_pin* noundef %7) #25, !dbg !7133
  %8 = add nuw i32 %6, 1, !dbg !7134
  call void @llvm.dbg.value(metadata i32 %8, metadata !7123, metadata !DIExpression()), !dbg !7126
  %9 = icmp eq i32 %8, %1, !dbg !7127
  br i1 %9, label %4, label %5, !dbg !7129, !llvm.loop !7135
}

; Function Attrs: noinline nounwind optsize
define internal i32 @atmel_samd_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !7137 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7139, metadata !DIExpression()), !dbg !7142
  call void @llvm.dbg.value(metadata i8 1, metadata !7141, metadata !DIExpression()), !dbg !7142
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #23, !dbg !7143, !srcloc !7152
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !7143
  call void @llvm.dbg.value(metadata i32 %3, metadata !7149, metadata !DIExpression()) #23, !dbg !7153
  call void @llvm.dbg.value(metadata i32 undef, metadata !7150, metadata !DIExpression()) #23, !dbg !7153
  call void @llvm.dbg.value(metadata i32 %3, metadata !7140, metadata !DIExpression()), !dbg !7142
  %4 = load volatile i32, i32* inttoptr (i32 1090543624 to i32*), align 8, !dbg !7154
  %5 = or i32 %4, 1, !dbg !7154
  store volatile i32 %5, i32* inttoptr (i32 1090543624 to i32*), align 8, !dbg !7154
  tail call fastcc void @gclk_reset() #25, !dbg !7155
  tail call fastcc void @osc32k_init() #25, !dbg !7156
  tail call fastcc void @dfll_init() #25, !dbg !7157
  tail call fastcc void @dpll_init() #25, !dbg !7158
  tail call fastcc void @gclk_connect(i8 noundef zeroext 0, i8 noundef zeroext 7, i8 noundef zeroext 1) #25, !dbg !7159
  tail call fastcc void @gclk_connect(i8 noundef zeroext 2, i8 noundef zeroext 6, i8 noundef zeroext 0) #25, !dbg !7160
  call void @llvm.dbg.value(metadata i32 %3, metadata !7161, metadata !DIExpression()) #23, !dbg !7166
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !7168, !srcloc !7169
  ret i32 0, !dbg !7170
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @gclk_reset() unnamed_addr #15 !dbg !7171 {
  %1 = load volatile i8, i8* inttoptr (i32 1073748992 to i8*), align 1024, !dbg !7172
  %2 = or i8 %1, 1, !dbg !7172
  store volatile i8 %2, i8* inttoptr (i32 1073748992 to i8*), align 1024, !dbg !7172
  br label %3, !dbg !7173

3:                                                ; preds = %3, %0
  %4 = load volatile i32, i32* inttoptr (i32 1073748996 to i32*), align 4, !dbg !7174
  %5 = and i32 %4, 1, !dbg !7174
  %6 = icmp eq i32 %5, 0, !dbg !7173
  br i1 %6, label %7, label %3, !dbg !7173, !llvm.loop !7175

7:                                                ; preds = %3
  ret void, !dbg !7177
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @osc32k_init() unnamed_addr #15 !dbg !7178 {
  store volatile i32 8452, i32* inttoptr (i32 1073749028 to i32*), align 4, !dbg !7179
  ret void, !dbg !7180
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @dfll_init() unnamed_addr #15 !dbg !7181 {
  call void @llvm.dbg.value(metadata i32 160, metadata !7183, metadata !DIExpression()), !dbg !7184
  store volatile i8 -96, i8* inttoptr (i32 1073745952 to i8*), align 32, !dbg !7185
  store volatile i8 2, i8* inttoptr (i32 1073745948 to i8*), align 4, !dbg !7186
  br label %1, !dbg !7187

1:                                                ; preds = %1, %0
  %2 = load volatile i32, i32* inttoptr (i32 1073745936 to i32*), align 16, !dbg !7188
  %3 = and i32 %2, 256, !dbg !7189
  %4 = icmp eq i32 %3, 0, !dbg !7189
  br i1 %4, label %1, label %5, !dbg !7187, !llvm.loop !7190

5:                                                ; preds = %1
  ret void, !dbg !7192
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @dpll_init() unnamed_addr #15 !dbg !7193 {
  call void @llvm.dbg.value(metadata i8 0, metadata !7197, metadata !DIExpression()), !dbg !7200
  call void @llvm.dbg.value(metadata i32 120000000, metadata !7198, metadata !DIExpression()), !dbg !7200
  call void @llvm.dbg.value(metadata i32 117187, metadata !7199, metadata !DIExpression()), !dbg !7200
  %1 = load volatile i8, i8* inttoptr (i32 1073745968 to i8*), align 16, !dbg !7201
  %2 = and i8 %1, -3, !dbg !7201
  store volatile i8 %2, i8* inttoptr (i32 1073745968 to i8*), align 16, !dbg !7201
  br label %3, !dbg !7202

3:                                                ; preds = %3, %0
  %4 = load volatile i32, i32* inttoptr (i32 1073745980 to i32*), align 4, !dbg !7203
  %5 = icmp eq i32 %4, 0, !dbg !7202
  br i1 %5, label %6, label %3, !dbg !7202, !llvm.loop !7204

6:                                                ; preds = %3
  store volatile i32 65, i32* inttoptr (i32 1073749124 to i32*), align 4, !dbg !7206
  br label %7, !dbg !7207

7:                                                ; preds = %7, %6
  %8 = load volatile i32, i32* inttoptr (i32 1073749124 to i32*), align 4, !dbg !7208
  %9 = and i32 %8, 64, !dbg !7209
  %10 = icmp eq i32 %9, 0, !dbg !7210
  br i1 %10, label %7, label %11, !dbg !7207, !llvm.loop !7211

11:                                               ; preds = %7
  store volatile i32 200269, i32* inttoptr (i32 1073745972 to i32*), align 4, !dbg !7213
  store volatile i32 2064, i32* inttoptr (i32 1073745976 to i32*), align 8, !dbg !7214
  store volatile i8 2, i8* inttoptr (i32 1073745968 to i8*), align 16, !dbg !7215
  br label %12, !dbg !7216

12:                                               ; preds = %12, %11
  %13 = load volatile i32, i32* inttoptr (i32 1073745980 to i32*), align 4, !dbg !7217
  %14 = icmp eq i32 %13, 0, !dbg !7216
  br i1 %14, label %15, label %12, !dbg !7216, !llvm.loop !7218

15:                                               ; preds = %12, %23
  %16 = load volatile i32, i32* inttoptr (i32 1073745984 to i32*), align 64, !dbg !7220
  %17 = and i32 %16, 2, !dbg !7221
  %18 = icmp eq i32 %17, 0, !dbg !7221
  br i1 %18, label %23, label %19, !dbg !7222

19:                                               ; preds = %15
  %20 = load volatile i32, i32* inttoptr (i32 1073745984 to i32*), align 64, !dbg !7223
  %21 = and i32 %20, 1, !dbg !7223
  %22 = icmp eq i32 %21, 0, !dbg !7222
  br i1 %22, label %23, label %24, !dbg !7224

23:                                               ; preds = %19, %15
  br label %15, !dbg !7220, !llvm.loop !7225

24:                                               ; preds = %19
  ret void, !dbg !7227
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @gclk_connect(i8 noundef zeroext %0, i8 noundef zeroext %1, i8 noundef zeroext %2) unnamed_addr #15 !dbg !7228 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7232, metadata !DIExpression()), !dbg !7235
  call void @llvm.dbg.value(metadata i8 %1, metadata !7233, metadata !DIExpression()), !dbg !7235
  call void @llvm.dbg.value(metadata i8 %2, metadata !7234, metadata !DIExpression()), !dbg !7235
  %4 = and i8 %1, 15, !dbg !7236
  %5 = zext i8 %4 to i32, !dbg !7236
  %6 = zext i8 %2 to i32, !dbg !7237
  %7 = shl nuw nsw i32 %6, 16, !dbg !7237
  %8 = or i32 %7, %5, !dbg !7238
  %9 = or i32 %8, 256, !dbg !7239
  %10 = zext i8 %0 to i32, !dbg !7240
  %11 = getelementptr inbounds [12 x %union.PORT_DIR_Type], [12 x %union.PORT_DIR_Type]* inttoptr (i32 1073749024 to [12 x %union.PORT_DIR_Type]*), i32 0, i32 %10, i32 0, i32 0, !dbg !7241
  store volatile i32 %9, i32* %11, align 4, !dbg !7242
  ret void, !dbg !7243
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !7244 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7293, metadata !DIExpression()), !dbg !7295
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !7294, metadata !DIExpression()), !dbg !7295
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #24, !dbg !7296
  ret void, !dbg !7297
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !7298 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7315, metadata !DIExpression()), !dbg !7318
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !7316, metadata !DIExpression()), !dbg !7318
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7319
  %4 = load i32, i32* %3, align 4, !dbg !7319
  call void @llvm.dbg.value(metadata i32 %4, metadata !7317, metadata !DIExpression()), !dbg !7318
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #25, !dbg !7320
  ret void, !dbg !7321
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !7322 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7326, metadata !DIExpression()), !dbg !7329
  call void @llvm.dbg.value(metadata i8* %0, metadata !7327, metadata !DIExpression()), !dbg !7329
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !7330
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #23, !dbg !7330
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !7328, metadata !DIExpression()), !dbg !7331
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !7331
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7332
  %5 = bitcast i8* %4 to i32*, !dbg !7332
  %6 = load i32, i32* %5, align 4, !dbg !7332
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !7333
  store i32 %6, i32* %7, align 4, !dbg !7334
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #25, !dbg !7335
  unreachable, !dbg !7336
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !7337 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7340, metadata !DIExpression()), !dbg !7341
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #25, !dbg !7342
  ret void, !dbg !7343
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !7344 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7348, metadata !DIExpression()), !dbg !7349
  %2 = icmp sgt i32 %0, -1, !dbg !7350
  br i1 %2, label %3, label %8, !dbg !7352

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7353, !srcloc !7355
  %4 = and i32 %0, 31, !dbg !7356
  %5 = shl nuw i32 1, %4, !dbg !7357
  %6 = lshr i32 %0, 5, !dbg !7358
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !7359
  store volatile i32 %5, i32* %7, align 4, !dbg !7360
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7361, !srcloc !7362
  br label %8, !dbg !7363

8:                                                ; preds = %3, %1
  ret void, !dbg !7364
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !7365 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7367, metadata !DIExpression()), !dbg !7368
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #25, !dbg !7369
  ret void, !dbg !7370
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !7371 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7373, metadata !DIExpression()), !dbg !7374
  %2 = icmp sgt i32 %0, -1, !dbg !7375
  br i1 %2, label %3, label %8, !dbg !7377

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !7378
  %5 = shl nuw i32 1, %4, !dbg !7380
  %6 = lshr i32 %0, 5, !dbg !7381
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !7382
  store volatile i32 %5, i32* %7, align 4, !dbg !7383
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7384, !srcloc !7388
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7389, !srcloc !7392
  br label %8, !dbg !7393

8:                                                ; preds = %3, %1
  ret void, !dbg !7394
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #17 !dbg !7395 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7399, metadata !DIExpression()), !dbg !7400
  %2 = lshr i32 %0, 5, !dbg !7401
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !7402
  %4 = load volatile i32, i32* %3, align 4, !dbg !7402
  %5 = and i32 %0, 31, !dbg !7403
  %6 = shl nuw i32 1, %5, !dbg !7403
  %7 = and i32 %4, %6, !dbg !7404
  ret i32 %7, !dbg !7405
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !7406 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7410, metadata !DIExpression()), !dbg !7413
  call void @llvm.dbg.value(metadata i32 %1, metadata !7411, metadata !DIExpression()), !dbg !7413
  call void @llvm.dbg.value(metadata i32 %2, metadata !7412, metadata !DIExpression()), !dbg !7413
  %4 = add i32 %1, 1, !dbg !7414
  call void @llvm.dbg.value(metadata i32 %4, metadata !7411, metadata !DIExpression()), !dbg !7413
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #25, !dbg !7417
  ret void, !dbg !7418
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !7419 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7423, metadata !DIExpression()), !dbg !7425
  call void @llvm.dbg.value(metadata i32 %1, metadata !7424, metadata !DIExpression()), !dbg !7425
  %3 = trunc i32 %1 to i8, !dbg !7426
  %4 = shl i8 %3, 5, !dbg !7426
  %5 = and i32 %0, 15, !dbg !7428
  %6 = add nsw i32 %5, -4, !dbg !7428
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !7428
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7428
  %9 = icmp slt i32 %0, 0, !dbg !7428
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !7428
  store volatile i8 %4, i8* %10, align 1, !dbg !7426
  ret void, !dbg !7429
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !7430 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7432, metadata !DIExpression()), !dbg !7433
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #24, !dbg !7434
  ret void, !dbg !7435
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !7436 {
  tail call void @z_SysNmiOnReset() #24, !dbg !7438
  tail call void @z_arm_int_exit() #24, !dbg !7439
  ret void, !dbg !7440
}

; Function Attrs: optsize
declare !dbg !7441 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !7442 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #8 !dbg !7444 {
  tail call fastcc void @relocate_vector_table() #25, !dbg !7446
  tail call fastcc void @z_arm_floating_point_init() #25, !dbg !7447
  tail call void @z_bss_zero() #24, !dbg !7448
  tail call void @z_data_copy() #24, !dbg !7449
  tail call void @z_arm_interrupt_init() #24, !dbg !7450
  tail call void @z_cstart() #27, !dbg !7451
  unreachable, !dbg !7451
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !7452 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !7453
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7454, !srcloc !7457
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7458, !srcloc !7461
  ret void, !dbg !7462
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !7463 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !7464
  %2 = and i32 %1, -15728641, !dbg !7464
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !7464
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #23, !dbg !7465, !srcloc !7470
  call void @llvm.dbg.value(metadata i32 %3, metadata !7468, metadata !DIExpression()) #23, !dbg !7471
  %4 = and i32 %3, -5, !dbg !7472
  call void @llvm.dbg.value(metadata i32 %4, metadata !7473, metadata !DIExpression()) #23, !dbg !7478
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #23, !dbg !7480, !srcloc !7481
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7482, !srcloc !7461
  ret void, !dbg !7484
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !7485 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7488, metadata !DIExpression()), !dbg !7489
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7490
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !7491
  store i32 %0, i32* %3, align 4, !dbg !7492
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !7493
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !7494
  store i32 %4, i32* %5, align 4, !dbg !7495
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7496
  %7 = or i32 %6, 268435456, !dbg !7496
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7496
  call void @llvm.dbg.value(metadata i32 0, metadata !7497, metadata !DIExpression()) #23, !dbg !7500
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !7502, !srcloc !7503
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7504
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !7505
  %10 = load i32, i32* %9, align 4, !dbg !7505
  ret i32 %10, !dbg !7506
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.anon.11.12* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #4 !dbg !7507 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7617, metadata !DIExpression()), !dbg !7625
  call void @llvm.dbg.value(metadata %struct.anon.11.12* %1, metadata !7618, metadata !DIExpression()), !dbg !7625
  call void @llvm.dbg.value(metadata i8* %2, metadata !7619, metadata !DIExpression()), !dbg !7625
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !7620, metadata !DIExpression()), !dbg !7625
  call void @llvm.dbg.value(metadata i8* %4, metadata !7621, metadata !DIExpression()), !dbg !7625
  call void @llvm.dbg.value(metadata i8* %5, metadata !7622, metadata !DIExpression()), !dbg !7625
  call void @llvm.dbg.value(metadata i8* %6, metadata !7623, metadata !DIExpression()), !dbg !7625
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !7626
  call void @llvm.dbg.value(metadata i8* %8, metadata !7624, metadata !DIExpression()), !dbg !7625
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !7627
  %10 = bitcast i8* %9 to i32*, !dbg !7627
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !7628
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !7629
  %12 = bitcast i8* %8 to i32*, !dbg !7630
  store i32 %11, i32* %12, align 4, !dbg !7631
  %13 = ptrtoint i8* %4 to i32, !dbg !7632
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !7633
  %15 = bitcast i8* %14 to i32*, !dbg !7633
  store i32 %13, i32* %15, align 4, !dbg !7634
  %16 = ptrtoint i8* %5 to i32, !dbg !7635
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !7636
  %18 = bitcast i8* %17 to i32*, !dbg !7636
  store i32 %16, i32* %18, align 4, !dbg !7637
  %19 = ptrtoint i8* %6 to i32, !dbg !7638
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !7639
  %21 = bitcast i8* %20 to i32*, !dbg !7639
  store i32 %19, i32* %21, align 4, !dbg !7640
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !7641
  %23 = bitcast i8* %22 to i32*, !dbg !7641
  store i32 16777216, i32* %23, align 4, !dbg !7642
  %24 = ptrtoint i8* %8 to i32, !dbg !7643
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !7644
  store i32 %24, i32* %25, align 8, !dbg !7645
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !7646
  store i32 0, i32* %26, align 4, !dbg !7647
  ret void, !dbg !7648
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #8 !dbg !7649 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7653, metadata !DIExpression()), !dbg !7656
  call void @llvm.dbg.value(metadata i8* %1, metadata !7654, metadata !DIExpression()), !dbg !7656
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !7655, metadata !DIExpression()), !dbg !7656
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7657
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #23, !dbg !7658, !srcloc !7659
  unreachable, !dbg !7660
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !7661 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7679, metadata !DIExpression()), !dbg !7689
  call void @llvm.dbg.value(metadata i32 %1, metadata !7680, metadata !DIExpression()), !dbg !7689
  call void @llvm.dbg.value(metadata i32 %2, metadata !7681, metadata !DIExpression()), !dbg !7689
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !7682, metadata !DIExpression()), !dbg !7689
  call void @llvm.dbg.value(metadata i32 0, metadata !7683, metadata !DIExpression()), !dbg !7689
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7690
  %9 = and i32 %8, 511, !dbg !7691
  call void @llvm.dbg.value(metadata i32 %9, metadata !7684, metadata !DIExpression()), !dbg !7689
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #23, !dbg !7692
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !7692
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !7693
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #23, !dbg !7693
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !7688, metadata !DIExpression()), !dbg !7694
  call void @llvm.dbg.value(metadata i32 0, metadata !7695, metadata !DIExpression()) #23, !dbg !7698
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !7700, !srcloc !7701
  call void @llvm.dbg.value(metadata i8* %6, metadata !7686, metadata !DIExpression(DW_OP_deref)), !dbg !7689
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #25, !dbg !7702
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !7687, metadata !DIExpression()), !dbg !7689
  call void @llvm.dbg.value(metadata i8* %5, metadata !7685, metadata !DIExpression(DW_OP_deref)), !dbg !7689
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #25, !dbg !7703
  call void @llvm.dbg.value(metadata i32 %12, metadata !7683, metadata !DIExpression()), !dbg !7689
  %13 = load i8, i8* %5, align 1, !dbg !7704, !range !7706
  call void @llvm.dbg.value(metadata i8 %13, metadata !7685, metadata !DIExpression()), !dbg !7689
  %14 = icmp eq i8 %13, 0, !dbg !7704
  br i1 %14, label %15, label %32, !dbg !7707

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !7708
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #24, !dbg !7709
  %18 = load i8, i8* %6, align 1, !dbg !7710, !range !7706
  call void @llvm.dbg.value(metadata i8 %18, metadata !7686, metadata !DIExpression()), !dbg !7689
  %19 = icmp eq i8 %18, 0, !dbg !7710
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !7712
  %21 = load i32, i32* %20, align 4, !dbg !7712
  br i1 %19, label %27, label %22, !dbg !7713

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !7714
  %24 = icmp eq i32 %23, 0, !dbg !7717
  br i1 %24, label %25, label %31, !dbg !7718

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !7719
  br label %29, !dbg !7721

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !7722
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !7712
  br label %31, !dbg !7724

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #24, !dbg !7724
  br label %32, !dbg !7725

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #23, !dbg !7725
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !7725
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #23, !dbg !7725
  ret void, !dbg !7725
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #4 !dbg !7726 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7731, metadata !DIExpression()), !dbg !7737
  call void @llvm.dbg.value(metadata i32 %1, metadata !7732, metadata !DIExpression()), !dbg !7737
  call void @llvm.dbg.value(metadata i32 %2, metadata !7733, metadata !DIExpression()), !dbg !7737
  call void @llvm.dbg.value(metadata i8* %3, metadata !7734, metadata !DIExpression()), !dbg !7737
  call void @llvm.dbg.value(metadata i8 0, metadata !7735, metadata !DIExpression()), !dbg !7737
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !7736, metadata !DIExpression()), !dbg !7737
  store i8 0, i8* %3, align 1, !dbg !7738
  %5 = icmp ult i32 %2, -16777216, !dbg !7739
  %6 = and i32 %2, 12
  %7 = icmp eq i32 %6, 8
  %8 = or i1 %5, %7, !dbg !7741
  br i1 %8, label %16, label %9, !dbg !7741

9:                                                ; preds = %4
  %10 = and i32 %2, 8, !dbg !7742
  %11 = icmp eq i32 %10, 0, !dbg !7742
  br i1 %11, label %12, label %13, !dbg !7744

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %0, metadata !7736, metadata !DIExpression()), !dbg !7737
  store i8 1, i8* %3, align 1, !dbg !7747
  br label %13

13:                                               ; preds = %9, %12
  %14 = phi i32 [ %0, %12 ], [ %1, %9 ]
  %15 = inttoptr i32 %14 to %struct.__esf*, !dbg !7737
  call void @llvm.dbg.value(metadata %struct.__esf* %15, metadata !7736, metadata !DIExpression()), !dbg !7737
  br label %16, !dbg !7750

16:                                               ; preds = %4, %13
  %17 = phi %struct.__esf* [ %15, %13 ], [ null, %4 ], !dbg !7737
  ret %struct.__esf* %17, !dbg !7751
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* nocapture noundef readonly %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !7752 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7756, metadata !DIExpression()), !dbg !7760
  call void @llvm.dbg.value(metadata i32 %1, metadata !7757, metadata !DIExpression()), !dbg !7760
  call void @llvm.dbg.value(metadata i8* %2, metadata !7758, metadata !DIExpression()), !dbg !7760
  call void @llvm.dbg.value(metadata i32 0, metadata !7759, metadata !DIExpression()), !dbg !7760
  store i8 0, i8* %2, align 1, !dbg !7761
  switch i32 %1, label %10 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %7
    i32 6, label %8
    i32 12, label %9
  ], !dbg !7762

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #25, !dbg !7763
  call void @llvm.dbg.value(metadata i32 %5, metadata !7759, metadata !DIExpression()), !dbg !7760
  br label %10, !dbg !7765

6:                                                ; preds = %3
  tail call fastcc void @mem_manage_fault(i32 noundef 0, i8* noundef nonnull %2) #25, !dbg !7766
  call void @llvm.dbg.value(metadata i32 0, metadata !7759, metadata !DIExpression()), !dbg !7760
  br label %10, !dbg !7767

7:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #25, !dbg !7768
  call void @llvm.dbg.value(metadata i32 0, metadata !7759, metadata !DIExpression()), !dbg !7760
  br label %10, !dbg !7769

8:                                                ; preds = %3
  tail call fastcc void @usage_fault() #25, !dbg !7770
  call void @llvm.dbg.value(metadata i32 0, metadata !7759, metadata !DIExpression()), !dbg !7760
  br label %10, !dbg !7771

9:                                                ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #25, !dbg !7772
  br label %10, !dbg !7773

10:                                               ; preds = %4, %6, %7, %8, %9, %3
  %11 = phi i32 [ 0, %3 ], [ %5, %4 ], [ 0, %6 ], [ 0, %7 ], [ 0, %8 ], [ 0, %9 ]
  ret i32 %11, !dbg !7774
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !7775 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7779, metadata !DIExpression()), !dbg !7782
  call void @llvm.dbg.value(metadata i8* %1, metadata !7780, metadata !DIExpression()), !dbg !7782
  call void @llvm.dbg.value(metadata i32 0, metadata !7781, metadata !DIExpression()), !dbg !7782
  store i8 0, i8* %1, align 1, !dbg !7783
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7784
  %4 = and i32 %3, 2, !dbg !7786
  %5 = icmp eq i32 %4, 0, !dbg !7787
  br i1 %5, label %6, label %32, !dbg !7788

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7789
  %8 = icmp sgt i32 %7, -1, !dbg !7791
  br i1 %8, label %9, label %32, !dbg !7792

9:                                                ; preds = %6
  %10 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7793
  %11 = and i32 %10, 1073741824, !dbg !7795
  %12 = icmp eq i32 %11, 0, !dbg !7796
  br i1 %12, label %32, label %13, !dbg !7797

13:                                               ; preds = %9
  %14 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #25, !dbg !7798
  br i1 %14, label %15, label %18, !dbg !7801

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7802
  %17 = load i32, i32* %16, align 4, !dbg !7802
  call void @llvm.dbg.value(metadata i32 %17, metadata !7781, metadata !DIExpression()), !dbg !7782
  br label %32, !dbg !7804

18:                                               ; preds = %13
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7805
  %20 = and i32 %19, 255, !dbg !7807
  %21 = icmp eq i32 %20, 0, !dbg !7808
  br i1 %21, label %23, label %22, !dbg !7809

22:                                               ; preds = %18
  tail call fastcc void @mem_manage_fault(i32 noundef 1, i8* noundef nonnull %1) #25, !dbg !7810
  call void @llvm.dbg.value(metadata i32 0, metadata !7781, metadata !DIExpression()), !dbg !7782
  br label %32, !dbg !7812

23:                                               ; preds = %18
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7813
  %25 = and i32 %24, 65280, !dbg !7815
  %26 = icmp eq i32 %25, 0, !dbg !7816
  br i1 %26, label %28, label %27, !dbg !7817

27:                                               ; preds = %23
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #25, !dbg !7818
  call void @llvm.dbg.value(metadata i32 0, metadata !7781, metadata !DIExpression()), !dbg !7782
  br label %32, !dbg !7820

28:                                               ; preds = %23
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7821
  %30 = icmp ult i32 %29, 65536, !dbg !7823
  br i1 %30, label %32, label %31, !dbg !7824

31:                                               ; preds = %28
  tail call fastcc void @usage_fault() #25, !dbg !7825
  call void @llvm.dbg.value(metadata i32 0, metadata !7781, metadata !DIExpression()), !dbg !7782
  br label %32, !dbg !7827

32:                                               ; preds = %6, %9, %15, %27, %28, %31, %22, %2
  %33 = phi i32 [ 0, %2 ], [ 0, %6 ], [ %17, %15 ], [ 0, %22 ], [ 0, %27 ], [ 0, %31 ], [ 0, %28 ], [ 0, %9 ], !dbg !7782
  call void @llvm.dbg.value(metadata i32 %33, metadata !7781, metadata !DIExpression()), !dbg !7782
  ret i32 %33, !dbg !7828
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @mem_manage_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !7829 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7831, metadata !DIExpression()), !dbg !7839
  call void @llvm.dbg.value(metadata i32 %0, metadata !7832, metadata !DIExpression()), !dbg !7839
  call void @llvm.dbg.value(metadata i8* %1, metadata !7833, metadata !DIExpression()), !dbg !7839
  call void @llvm.dbg.value(metadata i32 0, metadata !7834, metadata !DIExpression()), !dbg !7839
  call void @llvm.dbg.value(metadata i32 -22, metadata !7835, metadata !DIExpression()), !dbg !7839
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7840
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7842
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7844
  %6 = and i32 %5, 2, !dbg !7845
  %7 = icmp eq i32 %6, 0, !dbg !7846
  br i1 %7, label %18, label %8, !dbg !7847

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !7848
  call void @llvm.dbg.value(metadata i32 %9, metadata !7836, metadata !DIExpression()), !dbg !7849
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7850
  %11 = and i32 %10, 128, !dbg !7852
  %12 = icmp eq i32 %11, 0, !dbg !7853
  %13 = icmp eq i32 %0, 0
  %14 = or i1 %13, %12, !dbg !7854
  call void @llvm.dbg.value(metadata i32 %9, metadata !7835, metadata !DIExpression()), !dbg !7839
  br i1 %14, label %18, label %15, !dbg !7854

15:                                               ; preds = %8
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7855
  %17 = and i32 %16, -129, !dbg !7855
  store volatile i32 %17, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7855
  br label %18, !dbg !7859

18:                                               ; preds = %8, %15, %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !7835, metadata !DIExpression()), !dbg !7839
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7860
  %20 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7862
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7864
  %22 = and i32 %21, 16, !dbg !7866
  %23 = icmp eq i32 %22, 0, !dbg !7866
  br i1 %23, label %24, label %26, !dbg !7867

24:                                               ; preds = %18
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7868
  br label %26, !dbg !7869

26:                                               ; preds = %24, %18
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7870
  %28 = and i32 %27, 32, !dbg !7872
  %29 = icmp eq i32 %28, 0, !dbg !7873
  br i1 %29, label %33, label %30, !dbg !7874

30:                                               ; preds = %26
  %31 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7875
  %32 = and i32 %31, -8193, !dbg !7875
  store volatile i32 %32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7875
  br label %33, !dbg !7877

33:                                               ; preds = %30, %26
  %34 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7878
  %35 = or i32 %34, 255, !dbg !7878
  store volatile i32 %35, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7878
  store i8 0, i8* %1, align 1, !dbg !7879
  ret void, !dbg !7880
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !7881 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7885, metadata !DIExpression()), !dbg !7892
  call void @llvm.dbg.value(metadata i32 %0, metadata !7886, metadata !DIExpression()), !dbg !7892
  call void @llvm.dbg.value(metadata i8* %1, metadata !7887, metadata !DIExpression()), !dbg !7892
  call void @llvm.dbg.value(metadata i32 0, metadata !7888, metadata !DIExpression()), !dbg !7892
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7893
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7895
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7897
  %6 = and i32 %5, 512, !dbg !7898
  %7 = icmp eq i32 %6, 0, !dbg !7898
  br i1 %7, label %18, label %8, !dbg !7899

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !7900
  call void @llvm.dbg.value(metadata i32 %9, metadata !7889, metadata !DIExpression()), !dbg !7901
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7902
  %11 = and i32 %10, 32768, !dbg !7904
  %12 = icmp ne i32 %11, 0, !dbg !7905
  %13 = icmp ne i32 %0, 0
  %14 = and i1 %13, %12, !dbg !7906
  br i1 %14, label %15, label %18, !dbg !7906

15:                                               ; preds = %8
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7907
  %17 = and i32 %16, -32769, !dbg !7907
  store volatile i32 %17, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7907
  br label %18, !dbg !7911

18:                                               ; preds = %8, %15, %2
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7912
  %20 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7914
  %21 = and i32 %20, 256, !dbg !7916
  %22 = icmp eq i32 %21, 0, !dbg !7917
  br i1 %22, label %23, label %25, !dbg !7918

23:                                               ; preds = %18
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7919
  br label %25

25:                                               ; preds = %18, %23
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7921
  %27 = or i32 %26, 65280, !dbg !7921
  store volatile i32 %27, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7921
  store i8 0, i8* %1, align 1, !dbg !7922
  ret void, !dbg !7923
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #15 !dbg !7924 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7930, metadata !DIExpression()), !dbg !7932
  call void @llvm.dbg.value(metadata i32 0, metadata !7931, metadata !DIExpression()), !dbg !7932
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7933
  %2 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7935
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7937
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7939
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7941
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7943
  %7 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7945
  %8 = or i32 %7, -65536, !dbg !7945
  store volatile i32 %8, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7945
  ret void, !dbg !7946
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !7947 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7951, metadata !DIExpression()), !dbg !7953
  call void @llvm.dbg.value(metadata i8* %0, metadata !7952, metadata !DIExpression()), !dbg !7953
  store i8 0, i8* %0, align 1, !dbg !7954
  ret void, !dbg !7955
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7956 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7960, metadata !DIExpression()), !dbg !7963
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7964
  %3 = load i32, i32* %2, align 4, !dbg !7964
  %4 = inttoptr i32 %3 to i16*, !dbg !7965
  call void @llvm.dbg.value(metadata i16* %4, metadata !7961, metadata !DIExpression()), !dbg !7963
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7966
  %6 = or i32 %5, 256, !dbg !7966
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7966
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7967, !srcloc !7970
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7971, !srcloc !7974
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !7975
  %8 = load i16, i16* %7, align 2, !dbg !7976
  call void @llvm.dbg.value(metadata i16 %8, metadata !7962, metadata !DIExpression()), !dbg !7963
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7977
  %10 = and i32 %9, -257, !dbg !7977
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7977
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7978, !srcloc !7970
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7980, !srcloc !7974
  %11 = icmp eq i16 %8, -8446, !dbg !7982
  ret i1 %11, !dbg !7984
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #15 !dbg !7985 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7986
  %2 = or i32 %1, 16, !dbg !7986
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7986
  ret void, !dbg !7987
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #15 !dbg !7988 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7991, metadata !DIExpression()), !dbg !7992
  br label %1, !dbg !7993

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7991, metadata !DIExpression()), !dbg !7992
  tail call fastcc void @__NVIC_SetPriority.33(i32 noundef %2) #25, !dbg !7995
  %3 = add nuw nsw i32 %2, 1, !dbg !7998
  call void @llvm.dbg.value(metadata i32 %3, metadata !7991, metadata !DIExpression()), !dbg !7992
  %4 = icmp eq i32 %3, 137, !dbg !7999
  br i1 %4, label %5, label %1, !dbg !7993, !llvm.loop !8000

5:                                                ; preds = %1
  ret void, !dbg !8002
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.33(i32 noundef %0) unnamed_addr #15 !dbg !8003 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8005, metadata !DIExpression()), !dbg !8007
  call void @llvm.dbg.value(metadata i32 1, metadata !8006, metadata !DIExpression()), !dbg !8007
  %2 = and i32 %0, 15, !dbg !8008
  %3 = add nsw i32 %2, -4, !dbg !8008
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !8008
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !8008
  %6 = icmp slt i32 %0, 0, !dbg !8008
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !8008
  store volatile i8 32, i8* %7, align 1, !dbg !8009
  ret void, !dbg !8011
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !8012 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8118, metadata !DIExpression()), !dbg !8119
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8120
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !8122
  br i1 %3, label %4, label %12, !dbg !8123

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !8124, !srcloc !8136
  call void @llvm.dbg.value(metadata i32 %5, metadata !8127, metadata !DIExpression()) #23, !dbg !8137
  %6 = icmp eq i32 %5, 0, !dbg !8138
  br i1 %6, label %12, label %7, !dbg !8139

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8140
  %9 = or i32 %8, 268435456, !dbg !8140
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8140
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8142
  %11 = and i32 %10, -32769, !dbg !8142
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8142
  br label %12, !dbg !8143

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #24, !dbg !8144
  ret void, !dbg !8145
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !8146 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #24, !dbg !8147
  ret void, !dbg !8148
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !748 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !864, metadata !DIExpression()), !dbg !8149
  call void @llvm.dbg.value(metadata i8 0, metadata !865, metadata !DIExpression()), !dbg !8149
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([0 x %struct.z_arm_mpu_partition], [0 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 0) #24, !dbg !8150
  ret void, !dbg !8151
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !8152 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !8153
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !8154, !srcloc !8157
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !8158, !srcloc !8161
  ret void, !dbg !8162
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !8163 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #23, !dbg !8164, !srcloc !8167
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !8168
  ret void, !dbg !8169
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #16 !dbg !8170 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8185, metadata !DIExpression()), !dbg !8189
  call void @llvm.dbg.value(metadata i8 %1, metadata !8186, metadata !DIExpression()), !dbg !8189
  call void @llvm.dbg.value(metadata i32 %2, metadata !8187, metadata !DIExpression()), !dbg !8189
  call void @llvm.dbg.value(metadata i32 %3, metadata !8188, metadata !DIExpression()), !dbg !8189
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #25, !dbg !8190
  ret void, !dbg !8192
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #16 !dbg !8193 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8198, metadata !DIExpression()), !dbg !8203
  call void @llvm.dbg.value(metadata i8 %1, metadata !8199, metadata !DIExpression()), !dbg !8203
  call void @llvm.dbg.value(metadata i32 undef, metadata !8200, metadata !DIExpression()), !dbg !8203
  call void @llvm.dbg.value(metadata i32 undef, metadata !8201, metadata !DIExpression()), !dbg !8203
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !8204
  call void @llvm.dbg.value(metadata i8 %3, metadata !8202, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8203
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #25, !dbg !8205
  call void @llvm.dbg.value(metadata i32 %4, metadata !8202, metadata !DIExpression()), !dbg !8203
  %5 = trunc i32 %4 to i8, !dbg !8206
  store i8 %5, i8* @static_regions_num, align 1, !dbg !8207
  ret void, !dbg !8208
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #16 !dbg !8209 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8213, metadata !DIExpression()), !dbg !8219
  call void @llvm.dbg.value(metadata i8 %1, metadata !8214, metadata !DIExpression()), !dbg !8219
  call void @llvm.dbg.value(metadata i8 %2, metadata !8215, metadata !DIExpression()), !dbg !8219
  call void @llvm.dbg.value(metadata i1 %3, metadata !8216, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8219
  %5 = zext i8 %2 to i32, !dbg !8220
  call void @llvm.dbg.value(metadata i32 %5, metadata !8218, metadata !DIExpression()), !dbg !8219
  call void @llvm.dbg.value(metadata i32 0, metadata !8217, metadata !DIExpression()), !dbg !8219
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !8218, metadata !DIExpression()), !dbg !8219
  call void @llvm.dbg.value(metadata i32 0, metadata !8217, metadata !DIExpression()), !dbg !8219
  %7 = icmp eq i8 %1, 0, !dbg !8221
  br i1 %7, label %29, label %8, !dbg !8224

8:                                                ; preds = %4, %25
  %9 = phi i32 [ %26, %25 ], [ %5, %4 ]
  %10 = phi i32 [ %27, %25 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8218, metadata !DIExpression()), !dbg !8219
  call void @llvm.dbg.value(metadata i32 %10, metadata !8217, metadata !DIExpression()), !dbg !8219
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !8225
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !8228
  %13 = load i32, i32* %12, align 4, !dbg !8228
  %14 = icmp eq i32 %13, 0, !dbg !8229
  br i1 %14, label %25, label %15, !dbg !8230

15:                                               ; preds = %8
  br i1 %3, label %16, label %19, !dbg !8231

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #25, !dbg !8233
  %18 = icmp eq i32 %17, 0, !dbg !8233
  br i1 %18, label %29, label %19, !dbg !8234

19:                                               ; preds = %16, %15
  %20 = trunc i32 %9 to i8, !dbg !8235
  %21 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %20, %struct.z_arm_mpu_partition* noundef nonnull %11) #25, !dbg !8236
  call void @llvm.dbg.value(metadata i32 %21, metadata !8218, metadata !DIExpression()), !dbg !8219
  %22 = icmp eq i32 %21, -22, !dbg !8237
  br i1 %22, label %29, label %23, !dbg !8239

23:                                               ; preds = %19
  %24 = add nsw i32 %21, 1, !dbg !8240
  call void @llvm.dbg.value(metadata i32 %24, metadata !8218, metadata !DIExpression()), !dbg !8219
  br label %25, !dbg !8241

25:                                               ; preds = %8, %23
  %26 = phi i32 [ %9, %8 ], [ %24, %23 ], !dbg !8219
  call void @llvm.dbg.value(metadata i32 %26, metadata !8218, metadata !DIExpression()), !dbg !8219
  %27 = add nuw nsw i32 %10, 1, !dbg !8242
  call void @llvm.dbg.value(metadata i32 %27, metadata !8217, metadata !DIExpression()), !dbg !8219
  %28 = icmp eq i32 %27, %6, !dbg !8221
  br i1 %28, label %29, label %8, !dbg !8224, !llvm.loop !8243

29:                                               ; preds = %16, %19, %25, %4
  %30 = phi i32 [ %5, %4 ], [ %26, %25 ], [ -22, %19 ], [ -22, %16 ], !dbg !8219
  ret i32 %30, !dbg !8245
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #18 !dbg !8246 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8250, metadata !DIExpression()), !dbg !8252
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !8253
  %3 = load i32, i32* %2, align 4, !dbg !8253
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !8254, !range !4258
  %5 = icmp ult i32 %4, 2, !dbg !8254
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !8255
  br i1 %7, label %8, label %15, !dbg !8255

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !8256
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !8257
  %11 = load i32, i32* %10, align 4, !dbg !8257
  %12 = and i32 %11, %9, !dbg !8258
  %13 = icmp eq i32 %12, 0, !dbg !8259
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !8251, metadata !DIExpression()), !dbg !8252
  ret i32 %16, !dbg !8260
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #16 !dbg !8261 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !8265, metadata !DIExpression()), !dbg !8268
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !8266, metadata !DIExpression()), !dbg !8268
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !8269
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #23, !dbg !8269
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !8267, metadata !DIExpression()), !dbg !8270
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !8271
  %6 = load i32, i32* %5, align 4, !dbg !8271
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !8272
  store i32 %6, i32* %7, align 4, !dbg !8273
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !8274
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !8275
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !8276
  %11 = load i32, i32* %10, align 4, !dbg !8276
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* noundef nonnull %8, %struct.z_heap_bucket* noundef nonnull %9, i32 noundef %11) #25, !dbg !8277
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #25, !dbg !8278
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #23, !dbg !8279
  ret i32 %12, !dbg !8280
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* nocapture noundef writeonly %0, %struct.z_heap_bucket* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #10 !dbg !8281 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !8288, metadata !DIExpression()), !dbg !8292
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !8289, metadata !DIExpression()), !dbg !8292
  call void @llvm.dbg.value(metadata i32 undef, metadata !8290, metadata !DIExpression()), !dbg !8292
  call void @llvm.dbg.value(metadata i32 %2, metadata !8291, metadata !DIExpression()), !dbg !8292
  %4 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %1, i32 0, i32 0, !dbg !8293
  %5 = load i32, i32* %4, align 4, !dbg !8293
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #25, !dbg !8294
  %7 = or i32 %6, %5, !dbg !8295
  %8 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !8296
  store i32 %7, i32* %8, align 4, !dbg !8297
  ret void, !dbg !8298
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !8299 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !8303, metadata !DIExpression()), !dbg !8305
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !8304, metadata !DIExpression()), !dbg !8305
  %3 = zext i8 %0 to i32, !dbg !8306
  %4 = icmp ugt i8 %0, 7, !dbg !8308
  br i1 %4, label %6, label %5, !dbg !8309

5:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #25, !dbg !8310
  br label %6, !dbg !8311

6:                                                ; preds = %2, %5
  %7 = phi i32 [ %3, %5 ], [ -22, %2 ], !dbg !8305
  ret i32 %7, !dbg !8312
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !8313 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8317, metadata !DIExpression()), !dbg !8319
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !8318, metadata !DIExpression()), !dbg !8319
  tail call fastcc void @set_region_number(i32 noundef %0) #25, !dbg !8320
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !8321
  %4 = load i32, i32* %3, align 4, !dbg !8321
  %5 = and i32 %4, -32, !dbg !8322
  %6 = or i32 %5, %0, !dbg !8323
  %7 = or i32 %6, 16, !dbg !8323
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !8324
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !8325
  %9 = load i32, i32* %8, align 4, !dbg !8325
  %10 = or i32 %9, 1, !dbg !8326
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !8327
  ret void, !dbg !8328
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #15 !dbg !8329 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8332, metadata !DIExpression()), !dbg !8333
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !8334
  ret void, !dbg !8335
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #9 !dbg !8336 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8340, metadata !DIExpression()), !dbg !8341
  %2 = icmp ult i32 %0, 33, !dbg !8342
  br i1 %2, label %11, label %3, !dbg !8344

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !8345
  br i1 %4, label %11, label %5, !dbg !8347

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !8348
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !8349, !range !4258
  %8 = mul nsw i32 %7, -2, !dbg !8350
  %9 = add nsw i32 %8, 62, !dbg !8350
  %10 = and i32 %9, 62, !dbg !8351
  br label %11, !dbg !8352

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !8341
  ret i32 %12, !dbg !8353
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #16 !dbg !8354 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8358, metadata !DIExpression()), !dbg !8360
  call void @llvm.dbg.value(metadata i8 %1, metadata !8359, metadata !DIExpression()), !dbg !8360
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #25, !dbg !8361
  ret void, !dbg !8363
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #16 !dbg !8364 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8368, metadata !DIExpression()), !dbg !8375
  call void @llvm.dbg.value(metadata i8 %1, metadata !8369, metadata !DIExpression()), !dbg !8375
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !8376
  call void @llvm.dbg.value(metadata i8 %3, metadata !8370, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8375
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #25, !dbg !8377
  call void @llvm.dbg.value(metadata i32 %4, metadata !8370, metadata !DIExpression()), !dbg !8375
  %5 = icmp ne i32 %4, -22, !dbg !8378
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !8379
  call void @llvm.dbg.value(metadata i32 %4, metadata !8371, metadata !DIExpression()), !dbg !8380
  br i1 %7, label %8, label %12, !dbg !8379

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8371, metadata !DIExpression()), !dbg !8380
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #25, !dbg !8381
  %10 = add i32 %9, 1, !dbg !8384
  call void @llvm.dbg.value(metadata i32 %10, metadata !8371, metadata !DIExpression()), !dbg !8380
  %11 = icmp eq i32 %10, 8, !dbg !8385
  br i1 %11, label %12, label %8, !dbg !8386, !llvm.loop !8387

12:                                               ; preds = %8, %2
  ret void, !dbg !8389
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #15 !dbg !8390 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8393, metadata !DIExpression()), !dbg !8394
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !8395
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !8396
  ret void, !dbg !8397
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !8398 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !8403
  %2 = icmp ugt i32 %1, 8, !dbg !8405
  br i1 %2, label %14, label %3, !dbg !8406

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #25, !dbg !8407
  call void @llvm.dbg.value(metadata i32 0, metadata !8402, metadata !DIExpression()), !dbg !8408
  %4 = icmp eq i32 %1, 0, !dbg !8409
  br i1 %4, label %12, label %5, !dbg !8412

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !8412

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8402, metadata !DIExpression()), !dbg !8408
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !8413
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #25, !dbg !8415
  %10 = add nuw i32 %8, 1, !dbg !8416
  call void @llvm.dbg.value(metadata i32 %10, metadata !8402, metadata !DIExpression()), !dbg !8408
  %11 = icmp eq i32 %10, %1, !dbg !8409
  br i1 %11, label %12, label %7, !dbg !8412, !llvm.loop !8417

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !8419
  store i8 %13, i8* @static_regions_num, align 1, !dbg !8420
  tail call void @arm_core_mpu_enable() #25, !dbg !8421
  br label %14, !dbg !8422

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !8408
  ret i32 %15, !dbg !8423
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !8424 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8431, metadata !DIExpression()), !dbg !8434
  call void @llvm.dbg.value(metadata i8* %1, metadata !8432, metadata !DIExpression()), !dbg !8434
  call void @llvm.dbg.value(metadata i8* %0, metadata !8433, metadata !DIExpression()), !dbg !8434
  %3 = load i8, i8* %1, align 1, !dbg !8435
  %4 = icmp eq i8 %3, 0, !dbg !8436
  br i1 %4, label %13, label %5, !dbg !8437

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !8431, metadata !DIExpression()), !dbg !8434
  call void @llvm.dbg.value(metadata i8* %8, metadata !8432, metadata !DIExpression()), !dbg !8434
  store i8 %6, i8* %7, align 1, !dbg !8438
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8440
  call void @llvm.dbg.value(metadata i8* %9, metadata !8431, metadata !DIExpression()), !dbg !8434
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8441
  call void @llvm.dbg.value(metadata i8* %10, metadata !8432, metadata !DIExpression()), !dbg !8434
  %11 = load i8, i8* %10, align 1, !dbg !8435
  %12 = icmp eq i8 %11, 0, !dbg !8436
  br i1 %12, label %13, label %5, !dbg !8437, !llvm.loop !8442

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !8444
  ret i8* %0, !dbg !8445
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !8446 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8450, metadata !DIExpression()), !dbg !8454
  call void @llvm.dbg.value(metadata i8* %1, metadata !8451, metadata !DIExpression()), !dbg !8454
  call void @llvm.dbg.value(metadata i32 %2, metadata !8452, metadata !DIExpression()), !dbg !8454
  call void @llvm.dbg.value(metadata i8* %0, metadata !8453, metadata !DIExpression()), !dbg !8454
  %4 = icmp eq i32 %2, 0, !dbg !8455
  br i1 %4, label %22, label %5, !dbg !8456

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8450, metadata !DIExpression()), !dbg !8454
  call void @llvm.dbg.value(metadata i32 %7, metadata !8452, metadata !DIExpression()), !dbg !8454
  call void @llvm.dbg.value(metadata i8* %8, metadata !8451, metadata !DIExpression()), !dbg !8454
  %9 = load i8, i8* %8, align 1, !dbg !8457
  %10 = icmp eq i8 %9, 0, !dbg !8458
  br i1 %10, label %16, label %11, !dbg !8459

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !8460
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8462
  call void @llvm.dbg.value(metadata i8* %12, metadata !8451, metadata !DIExpression()), !dbg !8454
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8463
  call void @llvm.dbg.value(metadata i8* %13, metadata !8450, metadata !DIExpression()), !dbg !8454
  %14 = add i32 %7, -1, !dbg !8464
  call void @llvm.dbg.value(metadata i32 %14, metadata !8452, metadata !DIExpression()), !dbg !8454
  %15 = icmp eq i32 %14, 0, !dbg !8455
  br i1 %15, label %22, label %5, !dbg !8456, !llvm.loop !8465

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !8450, metadata !DIExpression()), !dbg !8454
  call void @llvm.dbg.value(metadata i32 %18, metadata !8452, metadata !DIExpression()), !dbg !8454
  store i8 0, i8* %17, align 1, !dbg !8467
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8469
  call void @llvm.dbg.value(metadata i8* %19, metadata !8450, metadata !DIExpression()), !dbg !8454
  %20 = add i32 %18, -1, !dbg !8470
  call void @llvm.dbg.value(metadata i32 %20, metadata !8452, metadata !DIExpression()), !dbg !8454
  %21 = icmp eq i32 %20, 0, !dbg !8471
  br i1 %21, label %22, label %16, !dbg !8472, !llvm.loop !8473

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !8475
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !8476 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8480, metadata !DIExpression()), !dbg !8483
  call void @llvm.dbg.value(metadata i32 %1, metadata !8481, metadata !DIExpression()), !dbg !8483
  call void @llvm.dbg.value(metadata i32 %1, metadata !8482, metadata !DIExpression()), !dbg !8483
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !8484

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !8480, metadata !DIExpression()), !dbg !8483
  %6 = load i8, i8* %5, align 1, !dbg !8485
  %7 = icmp eq i8 %6, %3, !dbg !8486
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !8487
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !8488
  call void @llvm.dbg.value(metadata i8* %10, metadata !8480, metadata !DIExpression()), !dbg !8483
  br i1 %9, label %11, label %4, !dbg !8487, !llvm.loop !8490

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !8492
  ret i8* %12, !dbg !8493
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !8494 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8496, metadata !DIExpression()), !dbg !8499
  call void @llvm.dbg.value(metadata i32 %1, metadata !8497, metadata !DIExpression()), !dbg !8499
  call void @llvm.dbg.value(metadata i8* null, metadata !8498, metadata !DIExpression()), !dbg !8499
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !8500

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !8499
  call void @llvm.dbg.value(metadata i8* %6, metadata !8498, metadata !DIExpression()), !dbg !8499
  call void @llvm.dbg.value(metadata i8* %5, metadata !8496, metadata !DIExpression()), !dbg !8499
  %7 = load i8, i8* %5, align 1, !dbg !8501
  %8 = icmp eq i8 %7, %3, !dbg !8504
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !8505
  call void @llvm.dbg.value(metadata i8* %9, metadata !8498, metadata !DIExpression()), !dbg !8499
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !8506
  call void @llvm.dbg.value(metadata i8* %10, metadata !8496, metadata !DIExpression()), !dbg !8499
  %11 = icmp eq i8 %7, 0, !dbg !8507
  br i1 %11, label %12, label %4, !dbg !8507, !llvm.loop !8508

12:                                               ; preds = %4
  ret i8* %9, !dbg !8510
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #19 !dbg !8511 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8515, metadata !DIExpression()), !dbg !8517
  call void @llvm.dbg.value(metadata i32 0, metadata !8516, metadata !DIExpression()), !dbg !8517
  %2 = load i8, i8* %0, align 1, !dbg !8518
  %3 = icmp eq i8 %2, 0, !dbg !8519
  br i1 %3, label %11, label %4, !dbg !8520

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !8516, metadata !DIExpression()), !dbg !8517
  call void @llvm.dbg.value(metadata i8* %6, metadata !8515, metadata !DIExpression()), !dbg !8517
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8521
  call void @llvm.dbg.value(metadata i8* %7, metadata !8515, metadata !DIExpression()), !dbg !8517
  %8 = add i32 %5, 1, !dbg !8523
  call void @llvm.dbg.value(metadata i32 %8, metadata !8516, metadata !DIExpression()), !dbg !8517
  %9 = load i8, i8* %7, align 1, !dbg !8518
  %10 = icmp eq i8 %9, 0, !dbg !8519
  br i1 %10, label %11, label %4, !dbg !8520, !llvm.loop !8524

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !8517
  ret i32 %12, !dbg !8526
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !8527 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8531, metadata !DIExpression()), !dbg !8534
  call void @llvm.dbg.value(metadata i32 %1, metadata !8532, metadata !DIExpression()), !dbg !8534
  call void @llvm.dbg.value(metadata i32 0, metadata !8533, metadata !DIExpression()), !dbg !8534
  %3 = load i8, i8* %0, align 1, !dbg !8535
  %4 = icmp ne i8 %3, 0, !dbg !8536
  %5 = icmp ne i32 %1, 0, !dbg !8537
  %6 = and i1 %4, %5, !dbg !8537
  br i1 %6, label %7, label %16, !dbg !8538

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8533, metadata !DIExpression()), !dbg !8534
  call void @llvm.dbg.value(metadata i8* %9, metadata !8531, metadata !DIExpression()), !dbg !8534
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8539
  call void @llvm.dbg.value(metadata i8* %10, metadata !8531, metadata !DIExpression()), !dbg !8534
  %11 = add nuw i32 %8, 1, !dbg !8541
  call void @llvm.dbg.value(metadata i32 %11, metadata !8533, metadata !DIExpression()), !dbg !8534
  %12 = load i8, i8* %10, align 1, !dbg !8535
  %13 = icmp ne i8 %12, 0, !dbg !8536
  %14 = icmp ult i32 %11, %1, !dbg !8537
  %15 = select i1 %13, i1 %14, i1 false, !dbg !8537
  br i1 %15, label %7, label %16, !dbg !8538, !llvm.loop !8542

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !8534
  ret i32 %17, !dbg !8544
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #19 !dbg !8545 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8549, metadata !DIExpression()), !dbg !8551
  call void @llvm.dbg.value(metadata i8* %1, metadata !8550, metadata !DIExpression()), !dbg !8551
  %3 = load i8, i8* %0, align 1, !dbg !8552
  %4 = load i8, i8* %1, align 1, !dbg !8553
  %5 = icmp ne i8 %3, %4, !dbg !8554
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !8555
  br i1 %7, label %18, label %8, !dbg !8555

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !8550, metadata !DIExpression()), !dbg !8551
  call void @llvm.dbg.value(metadata i8* %10, metadata !8549, metadata !DIExpression()), !dbg !8551
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8556
  call void @llvm.dbg.value(metadata i8* %11, metadata !8549, metadata !DIExpression()), !dbg !8551
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8558
  call void @llvm.dbg.value(metadata i8* %12, metadata !8550, metadata !DIExpression()), !dbg !8551
  %13 = load i8, i8* %11, align 1, !dbg !8552
  %14 = load i8, i8* %12, align 1, !dbg !8553
  %15 = icmp ne i8 %13, %14, !dbg !8554
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !8555
  br i1 %17, label %18, label %8, !dbg !8555, !llvm.loop !8559

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !8552
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !8553
  %21 = zext i8 %19 to i32, !dbg !8562
  %22 = zext i8 %20 to i32, !dbg !8563
  %23 = sub nsw i32 %21, %22, !dbg !8564
  ret i32 %23, !dbg !8565
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !8566 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8570, metadata !DIExpression()), !dbg !8573
  call void @llvm.dbg.value(metadata i8* %1, metadata !8571, metadata !DIExpression()), !dbg !8573
  call void @llvm.dbg.value(metadata i32 %2, metadata !8572, metadata !DIExpression()), !dbg !8573
  %4 = icmp eq i32 %2, 0, !dbg !8574
  br i1 %4, label %23, label %5, !dbg !8574

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !8572, metadata !DIExpression()), !dbg !8573
  call void @llvm.dbg.value(metadata i8* %7, metadata !8571, metadata !DIExpression()), !dbg !8573
  call void @llvm.dbg.value(metadata i8* %8, metadata !8570, metadata !DIExpression()), !dbg !8573
  %9 = load i8, i8* %8, align 1, !dbg !8575
  %10 = load i8, i8* %7, align 1, !dbg !8576
  %11 = icmp ne i8 %9, %10, !dbg !8577
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !8578
  br i1 %13, label %19, label %14, !dbg !8578

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8579
  call void @llvm.dbg.value(metadata i8* %15, metadata !8570, metadata !DIExpression()), !dbg !8573
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8581
  call void @llvm.dbg.value(metadata i8* %16, metadata !8571, metadata !DIExpression()), !dbg !8573
  %17 = add i32 %6, -1, !dbg !8582
  call void @llvm.dbg.value(metadata i32 %17, metadata !8572, metadata !DIExpression()), !dbg !8573
  %18 = icmp eq i32 %17, 0, !dbg !8574
  br i1 %18, label %23, label %5, !dbg !8574, !llvm.loop !8583

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !8586
  %21 = zext i8 %10 to i32, !dbg !8587
  %22 = sub nsw i32 %20, %21, !dbg !8588
  br label %23, !dbg !8589

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !8589
  ret i32 %24, !dbg !8590
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #13 !dbg !8591 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8596, metadata !DIExpression()), !dbg !8601
  call void @llvm.dbg.value(metadata i8* %1, metadata !8597, metadata !DIExpression()), !dbg !8601
  call void @llvm.dbg.value(metadata i8** %2, metadata !8598, metadata !DIExpression()), !dbg !8601
  %4 = icmp eq i8* %0, null, !dbg !8602
  br i1 %4, label %5, label %7, !dbg !8602

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !8603
  br label %7, !dbg !8602

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !8602
  call void @llvm.dbg.value(metadata i8* %8, metadata !8599, metadata !DIExpression()), !dbg !8601
  %9 = load i8, i8* %8, align 1, !dbg !8604
  %10 = icmp eq i8 %9, 0, !dbg !8604
  br i1 %10, label %33, label %11, !dbg !8605

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8599, metadata !DIExpression()), !dbg !8601
  %14 = zext i8 %12 to i32, !dbg !8604
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #25, !dbg !8606
  %16 = icmp eq i8* %15, null, !dbg !8605
  br i1 %16, label %21, label %17, !dbg !8607

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8608
  call void @llvm.dbg.value(metadata i8* %18, metadata !8599, metadata !DIExpression()), !dbg !8601
  %19 = load i8, i8* %18, align 1, !dbg !8604
  %20 = icmp eq i8 %19, 0, !dbg !8604
  br i1 %20, label %33, label %11, !dbg !8605, !llvm.loop !8610

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !8600, metadata !DIExpression()), !dbg !8601
  %24 = zext i8 %22 to i32, !dbg !8612
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #25, !dbg !8613
  %26 = icmp eq i8* %25, null, !dbg !8614
  br i1 %26, label %27, label %31, !dbg !8615

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8616
  call void @llvm.dbg.value(metadata i8* %28, metadata !8600, metadata !DIExpression()), !dbg !8601
  %29 = load i8, i8* %28, align 1, !dbg !8612
  %30 = icmp eq i8 %29, 0, !dbg !8612
  br i1 %30, label %33, label %21, !dbg !8618, !llvm.loop !8619

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !8621
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8624
  br label %33, !dbg !8625

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !8601
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !8601
  store i8* %34, i8** %2, align 4, !dbg !8601
  ret i8* %35, !dbg !8626
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !8627 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8629, metadata !DIExpression()), !dbg !8631
  call void @llvm.dbg.value(metadata i8* %1, metadata !8630, metadata !DIExpression()), !dbg !8631
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !8632
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !8633
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #25, !dbg !8634
  ret i8* %0, !dbg !8635
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !8636 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8638, metadata !DIExpression()), !dbg !8643
  call void @llvm.dbg.value(metadata i8* %1, metadata !8639, metadata !DIExpression()), !dbg !8643
  call void @llvm.dbg.value(metadata i32 %2, metadata !8640, metadata !DIExpression()), !dbg !8643
  call void @llvm.dbg.value(metadata i8* %0, metadata !8641, metadata !DIExpression()), !dbg !8643
  %4 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !8644
  call void @llvm.dbg.value(metadata i32 %4, metadata !8642, metadata !DIExpression()), !dbg !8643
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !8645
  call void @llvm.dbg.value(metadata i8* %5, metadata !8638, metadata !DIExpression()), !dbg !8643
  call void @llvm.dbg.value(metadata i8* %1, metadata !8639, metadata !DIExpression()), !dbg !8643
  call void @llvm.dbg.value(metadata i32 %2, metadata !8640, metadata !DIExpression()), !dbg !8643
  call void @llvm.dbg.value(metadata i32 %2, metadata !8640, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8643
  %6 = icmp eq i32 %2, 0, !dbg !8646
  br i1 %6, label %18, label %7, !dbg !8647

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !8648
  call void @llvm.dbg.value(metadata i8* %9, metadata !8638, metadata !DIExpression()), !dbg !8643
  call void @llvm.dbg.value(metadata i8* %10, metadata !8639, metadata !DIExpression()), !dbg !8643
  %12 = load i8, i8* %10, align 1, !dbg !8649
  %13 = icmp eq i8 %12, 0, !dbg !8650
  br i1 %13, label %18, label %14, !dbg !8651

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8652
  call void @llvm.dbg.value(metadata i8* %15, metadata !8639, metadata !DIExpression()), !dbg !8643
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8654
  call void @llvm.dbg.value(metadata i8* %16, metadata !8638, metadata !DIExpression()), !dbg !8643
  store i8 %12, i8* %9, align 1, !dbg !8655
  call void @llvm.dbg.value(metadata i32 %11, metadata !8640, metadata !DIExpression()), !dbg !8643
  call void @llvm.dbg.value(metadata i32 %11, metadata !8640, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8643
  %17 = icmp eq i32 %11, 0, !dbg !8646
  br i1 %17, label %18, label %7, !dbg !8647, !llvm.loop !8656

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !8643
  store i8 0, i8* %19, align 1, !dbg !8658
  ret i8* %0, !dbg !8659
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !8660 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8664, metadata !DIExpression()), !dbg !8669
  call void @llvm.dbg.value(metadata i8* %1, metadata !8665, metadata !DIExpression()), !dbg !8669
  call void @llvm.dbg.value(metadata i32 %2, metadata !8666, metadata !DIExpression()), !dbg !8669
  call void @llvm.dbg.value(metadata i8* %0, metadata !8667, metadata !DIExpression()), !dbg !8669
  call void @llvm.dbg.value(metadata i8* %1, metadata !8668, metadata !DIExpression()), !dbg !8669
  %4 = icmp eq i32 %2, 0, !dbg !8670
  br i1 %4, label %31, label %5, !dbg !8672

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8668, metadata !DIExpression()), !dbg !8669
  call void @llvm.dbg.value(metadata i8* %0, metadata !8667, metadata !DIExpression()), !dbg !8669
  call void @llvm.dbg.value(metadata i32 %2, metadata !8666, metadata !DIExpression()), !dbg !8669
  %6 = add i32 %2, -1, !dbg !8673
  call void @llvm.dbg.value(metadata i32 %6, metadata !8666, metadata !DIExpression()), !dbg !8669
  %7 = icmp eq i32 %6, 0, !dbg !8674
  br i1 %7, label %23, label %8, !dbg !8675

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !8676
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !8676
  br label %11, !dbg !8676

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8668, metadata !DIExpression()), !dbg !8669
  call void @llvm.dbg.value(metadata i8* %14, metadata !8667, metadata !DIExpression()), !dbg !8669
  %15 = load i8, i8* %14, align 1, !dbg !8677
  %16 = load i8, i8* %13, align 1, !dbg !8678
  %17 = icmp eq i8 %15, %16, !dbg !8679
  br i1 %17, label %18, label %23, !dbg !8676

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !8680
  call void @llvm.dbg.value(metadata i8* %19, metadata !8667, metadata !DIExpression()), !dbg !8669
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8682
  call void @llvm.dbg.value(metadata i8* %20, metadata !8668, metadata !DIExpression()), !dbg !8669
  call void @llvm.dbg.value(metadata i32 %12, metadata !8666, metadata !DIExpression()), !dbg !8669
  %21 = add i32 %12, -1, !dbg !8673
  call void @llvm.dbg.value(metadata i32 %21, metadata !8666, metadata !DIExpression()), !dbg !8669
  %22 = icmp eq i32 %21, 0, !dbg !8674
  br i1 %22, label %23, label %11, !dbg !8675, !llvm.loop !8683

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !8669
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !8669
  %26 = load i8, i8* %24, align 1, !dbg !8685
  %27 = zext i8 %26 to i32, !dbg !8685
  %28 = load i8, i8* %25, align 1, !dbg !8686
  %29 = zext i8 %28 to i32, !dbg !8686
  %30 = sub nsw i32 %27, %29, !dbg !8687
  br label %31, !dbg !8688

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !8669
  ret i32 %32, !dbg !8689
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #13 !dbg !8690 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8694, metadata !DIExpression()), !dbg !8699
  call void @llvm.dbg.value(metadata i8* %1, metadata !8695, metadata !DIExpression()), !dbg !8699
  call void @llvm.dbg.value(metadata i32 %2, metadata !8696, metadata !DIExpression()), !dbg !8699
  call void @llvm.dbg.value(metadata i8* %0, metadata !8697, metadata !DIExpression()), !dbg !8699
  call void @llvm.dbg.value(metadata i8* %1, metadata !8698, metadata !DIExpression()), !dbg !8699
  %4 = ptrtoint i8* %0 to i32, !dbg !8700
  %5 = ptrtoint i8* %1 to i32, !dbg !8700
  %6 = sub i32 %4, %5, !dbg !8700
  %7 = icmp ult i32 %6, %2, !dbg !8702
  br i1 %7, label %10, label %8, !dbg !8703

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8698, metadata !DIExpression()), !dbg !8699
  call void @llvm.dbg.value(metadata i8* %0, metadata !8697, metadata !DIExpression()), !dbg !8699
  call void @llvm.dbg.value(metadata i32 %2, metadata !8696, metadata !DIExpression()), !dbg !8699
  %9 = icmp eq i32 %2, 0, !dbg !8704
  br i1 %9, label %26, label %17, !dbg !8706

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !8696, metadata !DIExpression()), !dbg !8699
  %12 = add i32 %11, -1, !dbg !8707
  call void @llvm.dbg.value(metadata i32 %12, metadata !8696, metadata !DIExpression()), !dbg !8699
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !8710
  %14 = load i8, i8* %13, align 1, !dbg !8710
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !8711
  store i8 %14, i8* %15, align 1, !dbg !8712
  %16 = icmp eq i32 %12, 0, !dbg !8713
  br i1 %16, label %26, label %10, !dbg !8714, !llvm.loop !8715

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !8698, metadata !DIExpression()), !dbg !8699
  call void @llvm.dbg.value(metadata i8* %19, metadata !8697, metadata !DIExpression()), !dbg !8699
  call void @llvm.dbg.value(metadata i32 %20, metadata !8696, metadata !DIExpression()), !dbg !8699
  %21 = load i8, i8* %18, align 1, !dbg !8717
  store i8 %21, i8* %19, align 1, !dbg !8719
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !8720
  call void @llvm.dbg.value(metadata i8* %22, metadata !8697, metadata !DIExpression()), !dbg !8699
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !8721
  call void @llvm.dbg.value(metadata i8* %23, metadata !8698, metadata !DIExpression()), !dbg !8699
  %24 = add i32 %20, -1, !dbg !8722
  call void @llvm.dbg.value(metadata i32 %24, metadata !8696, metadata !DIExpression()), !dbg !8699
  %25 = icmp eq i32 %24, 0, !dbg !8704
  br i1 %25, label %26, label %17, !dbg !8706, !llvm.loop !8723

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !8725
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !8726 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8732, metadata !DIExpression()), !dbg !8737
  call void @llvm.dbg.value(metadata i8* %1, metadata !8733, metadata !DIExpression()), !dbg !8737
  call void @llvm.dbg.value(metadata i32 %2, metadata !8734, metadata !DIExpression()), !dbg !8737
  call void @llvm.dbg.value(metadata i8* %0, metadata !8735, metadata !DIExpression()), !dbg !8737
  call void @llvm.dbg.value(metadata i8* %1, metadata !8736, metadata !DIExpression()), !dbg !8737
  %4 = icmp eq i32 %2, 0, !dbg !8738
  br i1 %4, label %14, label %5, !dbg !8739

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8736, metadata !DIExpression()), !dbg !8737
  call void @llvm.dbg.value(metadata i8* %7, metadata !8735, metadata !DIExpression()), !dbg !8737
  call void @llvm.dbg.value(metadata i32 %8, metadata !8734, metadata !DIExpression()), !dbg !8737
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8740
  call void @llvm.dbg.value(metadata i8* %9, metadata !8736, metadata !DIExpression()), !dbg !8737
  %10 = load i8, i8* %6, align 1, !dbg !8742
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8743
  call void @llvm.dbg.value(metadata i8* %11, metadata !8735, metadata !DIExpression()), !dbg !8737
  store i8 %10, i8* %7, align 1, !dbg !8744
  %12 = add i32 %8, -1, !dbg !8745
  call void @llvm.dbg.value(metadata i32 %12, metadata !8734, metadata !DIExpression()), !dbg !8737
  %13 = icmp eq i32 %12, 0, !dbg !8738
  br i1 %13, label %14, label %5, !dbg !8739, !llvm.loop !8746

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !8748
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #20 !dbg !8749 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8753, metadata !DIExpression()), !dbg !8758
  call void @llvm.dbg.value(metadata i32 %1, metadata !8754, metadata !DIExpression()), !dbg !8758
  call void @llvm.dbg.value(metadata i32 %2, metadata !8755, metadata !DIExpression()), !dbg !8758
  call void @llvm.dbg.value(metadata i8* %0, metadata !8756, metadata !DIExpression()), !dbg !8758
  %4 = trunc i32 %1 to i8, !dbg !8759
  call void @llvm.dbg.value(metadata i8 %4, metadata !8757, metadata !DIExpression()), !dbg !8758
  call void @llvm.dbg.value(metadata i32 %2, metadata !8755, metadata !DIExpression()), !dbg !8758
  call void @llvm.dbg.value(metadata i8* %0, metadata !8756, metadata !DIExpression()), !dbg !8758
  %5 = icmp eq i32 %2, 0, !dbg !8760
  br i1 %5, label %12, label %6, !dbg !8761

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !8755, metadata !DIExpression()), !dbg !8758
  call void @llvm.dbg.value(metadata i8* %8, metadata !8756, metadata !DIExpression()), !dbg !8758
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8762
  call void @llvm.dbg.value(metadata i8* %9, metadata !8756, metadata !DIExpression()), !dbg !8758
  store i8 %4, i8* %8, align 1, !dbg !8764
  %10 = add i32 %7, -1, !dbg !8765
  call void @llvm.dbg.value(metadata i32 %10, metadata !8755, metadata !DIExpression()), !dbg !8758
  %11 = icmp eq i32 %10, 0, !dbg !8760
  br i1 %11, label %12, label %6, !dbg !8761, !llvm.loop !8766

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !8768
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !8769 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8773, metadata !DIExpression()), !dbg !8779
  call void @llvm.dbg.value(metadata i32 %1, metadata !8774, metadata !DIExpression()), !dbg !8779
  call void @llvm.dbg.value(metadata i32 %2, metadata !8775, metadata !DIExpression()), !dbg !8779
  %4 = icmp eq i32 %2, 0, !dbg !8780
  br i1 %4, label %17, label %5, !dbg !8781

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !8782

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !8783
  call void @llvm.dbg.value(metadata i8* %9, metadata !8776, metadata !DIExpression()), !dbg !8783
  call void @llvm.dbg.value(metadata i32 %8, metadata !8775, metadata !DIExpression()), !dbg !8779
  call void @llvm.dbg.value(metadata i8* %9, metadata !8776, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8783
  %10 = load i8, i8* %9, align 1, !dbg !8784
  %11 = icmp eq i8 %10, %6, !dbg !8787
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !8788
  call void @llvm.dbg.value(metadata i8* %12, metadata !8776, metadata !DIExpression()), !dbg !8783
  call void @llvm.dbg.value(metadata i32 %13, metadata !8775, metadata !DIExpression()), !dbg !8779
  br i1 %15, label %16, label %7, !dbg !8788, !llvm.loop !8789

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !8791

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !8779
  ret i8* %19, !dbg !8792
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !8793 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !8795, metadata !DIExpression()), !dbg !8796
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !8797
  ret void, !dbg !8798
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #11 !dbg !8799 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8801, metadata !DIExpression()), !dbg !8802
  ret i32 -1, !dbg !8803
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8804 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8808, metadata !DIExpression()), !dbg !8810
  call void @llvm.dbg.value(metadata i32* %1, metadata !8809, metadata !DIExpression()), !dbg !8810
  %3 = ptrtoint i32* %1 to i32, !dbg !8811
  %4 = and i32 %3, -2, !dbg !8811
  %5 = icmp eq i32 %4, 2, !dbg !8811
  br i1 %5, label %6, label %9, !dbg !8811

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8812
  %8 = tail call i32 %7(i32 noundef %0) #24, !dbg !8812
  br label %9, !dbg !8813

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !8813
  ret i32 %10, !dbg !8814
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8815 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8817, metadata !DIExpression()), !dbg !8819
  call void @llvm.dbg.value(metadata i32* %1, metadata !8818, metadata !DIExpression()), !dbg !8819
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #25, !dbg !8820
  ret i32 %3, !dbg !8821
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !8822 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8825, metadata !DIExpression()), !dbg !8827
  call void @llvm.dbg.value(metadata i32* %1, metadata !8826, metadata !DIExpression()), !dbg !8827
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8828, !srcloc !8830
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #25, !dbg !8831
  ret i32 %3, !dbg !8832
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !8833 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8838, metadata !DIExpression()), !dbg !8842
  call void @llvm.dbg.value(metadata i32* %1, metadata !8839, metadata !DIExpression()), !dbg !8842
  %3 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !8843
  call void @llvm.dbg.value(metadata i32 %3, metadata !8840, metadata !DIExpression()), !dbg !8842
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #25, !dbg !8844
  call void @llvm.dbg.value(metadata i32 %4, metadata !8841, metadata !DIExpression()), !dbg !8842
  %5 = icmp ne i32 %3, %4, !dbg !8845
  %6 = sext i1 %5 to i32, !dbg !8846
  ret i32 %6, !dbg !8847
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !8848 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8852, metadata !DIExpression()), !dbg !8856
  call void @llvm.dbg.value(metadata i32 %1, metadata !8853, metadata !DIExpression()), !dbg !8856
  call void @llvm.dbg.value(metadata i32 %2, metadata !8854, metadata !DIExpression()), !dbg !8856
  call void @llvm.dbg.value(metadata i32* %3, metadata !8855, metadata !DIExpression()), !dbg !8856
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #25, !dbg !8857
  ret i32 %5, !dbg !8858
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !8859 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8861, metadata !DIExpression()), !dbg !8865
  call void @llvm.dbg.value(metadata i32 %1, metadata !8862, metadata !DIExpression()), !dbg !8865
  call void @llvm.dbg.value(metadata i32 %2, metadata !8863, metadata !DIExpression()), !dbg !8865
  call void @llvm.dbg.value(metadata i32* %3, metadata !8864, metadata !DIExpression()), !dbg !8865
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8866, !srcloc !8868
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #25, !dbg !8869
  ret i32 %5, !dbg !8870
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !8871 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8873, metadata !DIExpression()), !dbg !8881
  call void @llvm.dbg.value(metadata i32 %1, metadata !8874, metadata !DIExpression()), !dbg !8881
  call void @llvm.dbg.value(metadata i32 %2, metadata !8875, metadata !DIExpression()), !dbg !8881
  call void @llvm.dbg.value(metadata i32* %3, metadata !8876, metadata !DIExpression()), !dbg !8881
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !8882
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !8884
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !8884
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !8884
  br i1 %11, label %33, label %12, !dbg !8884

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !8881
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !8881
  call void @llvm.dbg.value(metadata i8* %14, metadata !8879, metadata !DIExpression()), !dbg !8881
  call void @llvm.dbg.value(metadata i32 %13, metadata !8877, metadata !DIExpression()), !dbg !8881
  call void @llvm.dbg.value(metadata i32 %1, metadata !8878, metadata !DIExpression()), !dbg !8881
  br label %15, !dbg !8885

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !8887
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !8881
  call void @llvm.dbg.value(metadata i8* %17, metadata !8879, metadata !DIExpression()), !dbg !8881
  call void @llvm.dbg.value(metadata i32 %16, metadata !8878, metadata !DIExpression()), !dbg !8881
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8888
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8891
  call void @llvm.dbg.value(metadata i8* %19, metadata !8879, metadata !DIExpression()), !dbg !8881
  %20 = load i8, i8* %17, align 1, !dbg !8892
  %21 = zext i8 %20 to i32, !dbg !8893
  %22 = tail call i32 %18(i32 noundef %21) #24, !dbg !8888
  %23 = icmp eq i32 %22, -1, !dbg !8894
  br i1 %23, label %30, label %24, !dbg !8895

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !8896
  call void @llvm.dbg.value(metadata i32 %25, metadata !8878, metadata !DIExpression()), !dbg !8881
  %26 = icmp eq i32 %25, 0, !dbg !8897
  br i1 %26, label %27, label %15, !dbg !8898, !llvm.loop !8899

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !8901
  call void @llvm.dbg.value(metadata i32 %28, metadata !8877, metadata !DIExpression()), !dbg !8881
  %29 = icmp eq i32 %28, 0, !dbg !8902
  br i1 %29, label %30, label %12, !dbg !8903, !llvm.loop !8904

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !8881
  call void @llvm.dbg.value(metadata i32 %31, metadata !8877, metadata !DIExpression()), !dbg !8881
  call void @llvm.dbg.label(metadata !8880), !dbg !8907
  %32 = sub i32 %2, %31, !dbg !8908
  br label %33, !dbg !8909

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !8881
  ret i32 %34, !dbg !8910
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !8911 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8915, metadata !DIExpression()), !dbg !8916
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #25, !dbg !8917
  %3 = icmp eq i32 %2, -1, !dbg !8919
  br i1 %3, label %8, label %4, !dbg !8920

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #25, !dbg !8921
  %6 = icmp eq i32 %5, -1, !dbg !8922
  %7 = sext i1 %6 to i32, !dbg !8921
  br label %8, !dbg !8923

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !8916
  ret i32 %9, !dbg !8924
}

; Function Attrs: noinline nounwind optsize
define internal void @sam0_eic_isr(%struct.device* nocapture noundef readonly %0) #1 !dbg !8925 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8929, metadata !DIExpression()), !dbg !8942
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8943
  %3 = bitcast i8** %2 to %struct.sam0_eic_data**, !dbg !8943
  %4 = load %struct.sam0_eic_data*, %struct.sam0_eic_data** %3, align 4, !dbg !8943
  call void @llvm.dbg.value(metadata %struct.sam0_eic_data* %4, metadata !8930, metadata !DIExpression()), !dbg !8942
  %5 = load volatile i32, i32* inttoptr (i32 1073752084 to i32*), align 4, !dbg !8944
  %6 = and i32 %5, 65535, !dbg !8945
  call void @llvm.dbg.value(metadata i32 %5, metadata !8933, metadata !DIExpression()), !dbg !8942
  store volatile i32 %6, i32* inttoptr (i32 1073752084 to i32*), align 4, !dbg !8946
  call void @llvm.dbg.value(metadata i32 %6, metadata !8947, metadata !DIExpression()) #23, !dbg !8951
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !8953, !srcloc !8954
  call void @llvm.dbg.value(metadata i32 %7, metadata !8950, metadata !DIExpression()) #23, !dbg !8951
  call void @llvm.dbg.value(metadata i32 %7, metadata !8955, metadata !DIExpression()) #23, !dbg !8960
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !8962, !range !4258
  call void @llvm.dbg.value(metadata i32 %8, metadata !8934, metadata !DIExpression()), !dbg !8942
  %9 = lshr i32 %6, %8, !dbg !8963
  call void @llvm.dbg.value(metadata i32 %9, metadata !8933, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8942
  %10 = trunc i32 %9 to i16, !dbg !8942
  call void @llvm.dbg.value(metadata i16 %10, metadata !8933, metadata !DIExpression()), !dbg !8942
  call void @llvm.dbg.value(metadata i32 %8, metadata !8934, metadata !DIExpression()), !dbg !8942
  %11 = icmp eq i16 %10, 0, !dbg !8964
  br i1 %11, label %35, label %12, !dbg !8964

12:                                               ; preds = %1, %30
  %13 = phi i32 [ %32, %30 ], [ %9, %1 ]
  %14 = phi i32 [ %33, %30 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !8934, metadata !DIExpression()), !dbg !8942
  %15 = and i32 %13, 1, !dbg !8965
  %16 = icmp eq i32 %15, 0, !dbg !8965
  br i1 %16, label %30, label %17, !dbg !8967

17:                                               ; preds = %12
  call void @llvm.dbg.value(metadata !DIArgList(%struct.sam0_eic_data* %4, i32 %14), metadata !8935, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !8968
  %18 = getelementptr inbounds %struct.sam0_eic_data, %struct.sam0_eic_data* %4, i32 0, i32 1, i32 %14, i32 0, !dbg !8969
  %19 = load i8, i8* %18, align 1, !dbg !8969
  %20 = lshr i8 %19, 5, !dbg !8969
  %21 = and i8 %20, 3, !dbg !8969
  %22 = zext i8 %21 to i32, !dbg !8970
  call void @llvm.dbg.value(metadata !DIArgList(%struct.sam0_eic_data* %4, i32 %22), metadata !8940, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !8968
  %23 = getelementptr inbounds %struct.sam0_eic_data, %struct.sam0_eic_data* %4, i32 0, i32 0, i32 %22, i32 0, !dbg !8971
  %24 = load void (i32, i8*)*, void (i32, i8*)** %23, align 4, !dbg !8971
  %25 = and i8 %19, 31, !dbg !8972
  %26 = zext i8 %25 to i32, !dbg !8972
  %27 = shl nuw i32 1, %26, !dbg !8972
  %28 = getelementptr inbounds %struct.sam0_eic_data, %struct.sam0_eic_data* %4, i32 0, i32 0, i32 %22, i32 1, !dbg !8973
  %29 = load i8*, i8** %28, align 4, !dbg !8973
  tail call void %24(i32 noundef %27, i8* noundef %29) #24, !dbg !8974
  br label %30, !dbg !8975

30:                                               ; preds = %12, %17
  %31 = lshr i32 %13, 1, !dbg !8976
  %32 = and i32 %31, 32767, !dbg !8976
  call void @llvm.dbg.value(metadata i32 %32, metadata !8933, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8942
  %33 = add i32 %14, 1, !dbg !8977
  call void @llvm.dbg.value(metadata i32 %33, metadata !8934, metadata !DIExpression()), !dbg !8942
  call void @llvm.dbg.value(metadata i32 %32, metadata !8933, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8942
  %34 = icmp eq i32 %32, 0, !dbg !8964
  br i1 %34, label %35, label %12, !dbg !8964, !llvm.loop !8978

35:                                               ; preds = %30, %1
  ret void, !dbg !8980
}

; Function Attrs: noinline nounwind optsize
define internal i32 @sam0_eic_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !1452 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1454, metadata !DIExpression()), !dbg !8981
  %2 = load volatile i32, i32* inttoptr (i32 1073743892 to i32*), align 4, !dbg !8982
  %3 = or i32 %2, 1024, !dbg !8982
  store volatile i32 %3, i32* inttoptr (i32 1073743892 to i32*), align 4, !dbg !8982
  store volatile i32 64, i32* inttoptr (i32 1073749136 to i32*), align 16, !dbg !8983
  tail call void @z_arm_irq_priority_set(i32 noundef 12, i32 noundef 0, i32 noundef 0) #24, !dbg !8984
  tail call void @arch_irq_enable(i32 noundef 12) #24, !dbg !8987
  tail call void @z_arm_irq_priority_set(i32 noundef 13, i32 noundef 0, i32 noundef 0) #24, !dbg !8988
  tail call void @arch_irq_enable(i32 noundef 13) #24, !dbg !8991
  tail call void @z_arm_irq_priority_set(i32 noundef 14, i32 noundef 0, i32 noundef 0) #24, !dbg !8992
  tail call void @arch_irq_enable(i32 noundef 14) #24, !dbg !8995
  tail call void @z_arm_irq_priority_set(i32 noundef 15, i32 noundef 0, i32 noundef 0) #24, !dbg !8996
  tail call void @arch_irq_enable(i32 noundef 15) #24, !dbg !8999
  tail call void @z_arm_irq_priority_set(i32 noundef 16, i32 noundef 0, i32 noundef 0) #24, !dbg !9000
  tail call void @arch_irq_enable(i32 noundef 16) #24, !dbg !9003
  tail call void @z_arm_irq_priority_set(i32 noundef 17, i32 noundef 0, i32 noundef 0) #24, !dbg !9004
  tail call void @arch_irq_enable(i32 noundef 17) #24, !dbg !9007
  tail call void @z_arm_irq_priority_set(i32 noundef 18, i32 noundef 0, i32 noundef 0) #24, !dbg !9008
  tail call void @arch_irq_enable(i32 noundef 18) #24, !dbg !9011
  tail call void @z_arm_irq_priority_set(i32 noundef 19, i32 noundef 0, i32 noundef 0) #24, !dbg !9012
  tail call void @arch_irq_enable(i32 noundef 19) #24, !dbg !9015
  tail call void @z_arm_irq_priority_set(i32 noundef 20, i32 noundef 0, i32 noundef 0) #24, !dbg !9016
  tail call void @arch_irq_enable(i32 noundef 20) #24, !dbg !9019
  tail call void @z_arm_irq_priority_set(i32 noundef 21, i32 noundef 0, i32 noundef 0) #24, !dbg !9020
  tail call void @arch_irq_enable(i32 noundef 21) #24, !dbg !9023
  tail call void @z_arm_irq_priority_set(i32 noundef 22, i32 noundef 0, i32 noundef 0) #24, !dbg !9024
  tail call void @arch_irq_enable(i32 noundef 22) #24, !dbg !9027
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #24, !dbg !9028
  tail call void @arch_irq_enable(i32 noundef 23) #24, !dbg !9031
  tail call void @z_arm_irq_priority_set(i32 noundef 24, i32 noundef 0, i32 noundef 0) #24, !dbg !9032
  tail call void @arch_irq_enable(i32 noundef 24) #24, !dbg !9035
  tail call void @z_arm_irq_priority_set(i32 noundef 25, i32 noundef 0, i32 noundef 0) #24, !dbg !9036
  tail call void @arch_irq_enable(i32 noundef 25) #24, !dbg !9039
  tail call void @z_arm_irq_priority_set(i32 noundef 26, i32 noundef 0, i32 noundef 0) #24, !dbg !9040
  tail call void @arch_irq_enable(i32 noundef 26) #24, !dbg !9043
  tail call void @z_arm_irq_priority_set(i32 noundef 27, i32 noundef 0, i32 noundef 0) #24, !dbg !9044
  tail call void @arch_irq_enable(i32 noundef 27) #24, !dbg !9047
  tail call fastcc void @set_eic_enable(i1 noundef zeroext true) #25, !dbg !9048
  tail call fastcc void @wait_synchronization() #25, !dbg !9049
  ret i32 0, !dbg !9050
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_eic_enable(i1 noundef zeroext %0) unnamed_addr #15 !dbg !9051 {
  call void @llvm.dbg.value(metadata i1 %0, metadata !9055, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9056
  %2 = load volatile i8, i8* inttoptr (i32 1073752064 to i8*), align 2048, !dbg !9057
  %3 = select i1 %0, i8 2, i8 0, !dbg !9057
  %4 = and i8 %2, -3, !dbg !9057
  %5 = or i8 %4, %3, !dbg !9057
  store volatile i8 %5, i8* inttoptr (i32 1073752064 to i8*), align 2048, !dbg !9057
  ret void, !dbg !9058
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @wait_synchronization() unnamed_addr #15 !dbg !9059 {
  br label %1, !dbg !9060

1:                                                ; preds = %1, %0
  %2 = load volatile i32, i32* inttoptr (i32 1073752068 to i32*), align 4, !dbg !9061
  %3 = icmp eq i32 %2, 0, !dbg !9060
  br i1 %3, label %4, label %1, !dbg !9060, !llvm.loop !9062

4:                                                ; preds = %1
  ret void, !dbg !9064
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sam0_eic_acquire(i32 noundef %0, i32 noundef %1, i32 noundef %2, i1 noundef zeroext %3, void (i32, i8*)* noundef %4, i8* noundef %5) local_unnamed_addr #1 !dbg !9065 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9069, metadata !DIExpression()), !dbg !9087
  call void @llvm.dbg.value(metadata i32 %1, metadata !9070, metadata !DIExpression()), !dbg !9087
  call void @llvm.dbg.value(metadata i32 %2, metadata !9071, metadata !DIExpression()), !dbg !9087
  call void @llvm.dbg.value(metadata i1 %3, metadata !9072, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9087
  call void @llvm.dbg.value(metadata void (i32, i8*)* %4, metadata !9073, metadata !DIExpression()), !dbg !9087
  call void @llvm.dbg.value(metadata i8* %5, metadata !9074, metadata !DIExpression()), !dbg !9087
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_22, metadata !9075, metadata !DIExpression()), !dbg !9087
  call void @llvm.dbg.value(metadata %struct.sam0_eic_data* @eic_data, metadata !9077, metadata !DIExpression()), !dbg !9087
  %7 = tail call fastcc i32 @sam0_eic_map_to_line(i32 noundef %0, i32 noundef %1) #25, !dbg !9088
  call void @llvm.dbg.value(metadata i32 %7, metadata !9081, metadata !DIExpression()), !dbg !9087
  %8 = icmp slt i32 %7, 0, !dbg !9089
  br i1 %8, label %63, label %9, !dbg !9091

9:                                                ; preds = %6
  %10 = shl nuw i32 1, %7, !dbg !9092
  call void @llvm.dbg.value(metadata i32 %10, metadata !9080, metadata !DIExpression()), !dbg !9087
  %11 = lshr i32 %7, 3, !dbg !9093
  call void @llvm.dbg.value(metadata i32 %11, metadata !9082, metadata !DIExpression()), !dbg !9087
  %12 = shl i32 %7, 2, !dbg !9094
  %13 = and i32 %12, 28, !dbg !9094
  call void @llvm.dbg.value(metadata i32 %13, metadata !9083, metadata !DIExpression()), !dbg !9087
  %14 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #23, !dbg !9095, !srcloc !9101
  %15 = extractvalue { i32, i32 } %14, 0, !dbg !9095
  call void @llvm.dbg.value(metadata i32 %15, metadata !9098, metadata !DIExpression()) #23, !dbg !9102
  call void @llvm.dbg.value(metadata i32 undef, metadata !9099, metadata !DIExpression()) #23, !dbg !9102
  call void @llvm.dbg.value(metadata i32 %15, metadata !9084, metadata !DIExpression()), !dbg !9087
  tail call fastcc void @set_eic_enable(i1 noundef zeroext false) #25, !dbg !9103
  call void @llvm.dbg.value(metadata !DIArgList(%struct.sam0_eic_data* @eic_data, i32 %7), metadata !9079, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !9087
  %16 = getelementptr inbounds %struct.sam0_eic_data, %struct.sam0_eic_data* @eic_data, i32 0, i32 1, i32 %7, i32 0, !dbg !9104
  %17 = load i8, i8* %16, align 1, !dbg !9104
  %18 = icmp sgt i8 %17, -1, !dbg !9106
  br i1 %18, label %28, label %19, !dbg !9107

19:                                               ; preds = %9
  %20 = lshr i8 %17, 5, !dbg !9108
  %21 = and i8 %20, 3, !dbg !9108
  %22 = zext i8 %21 to i32, !dbg !9111
  %23 = icmp eq i32 %22, %0, !dbg !9112
  br i1 %23, label %24, label %62, !dbg !9113

24:                                               ; preds = %19
  %25 = and i8 %17, 31, !dbg !9114
  %26 = zext i8 %25 to i32, !dbg !9115
  %27 = icmp eq i32 %26, %1, !dbg !9116
  br i1 %27, label %28, label %62, !dbg !9117

28:                                               ; preds = %24, %9
  call void @llvm.dbg.value(metadata !DIArgList(%struct.sam0_eic_data* @eic_data, i32 %0), metadata !9078, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !9087
  %29 = getelementptr inbounds %struct.sam0_eic_data, %struct.sam0_eic_data* @eic_data, i32 0, i32 0, i32 %0, i32 0, !dbg !9118
  store void (i32, i8*)* %4, void (i32, i8*)** %29, align 4, !dbg !9119
  %30 = getelementptr inbounds %struct.sam0_eic_data, %struct.sam0_eic_data* @eic_data, i32 0, i32 0, i32 %0, i32 1, !dbg !9120
  store i8* %5, i8** %30, align 4, !dbg !9121
  %31 = trunc i32 %1 to i8, !dbg !9122
  %32 = and i8 %31, 31, !dbg !9123
  %33 = trunc i32 %0 to i8, !dbg !9124
  %34 = shl i8 %33, 5, !dbg !9125
  %35 = or i8 %32, %34, !dbg !9126
  %36 = or i8 %35, -128, !dbg !9126
  store i8 %36, i8* %16, align 1, !dbg !9126
  %37 = getelementptr inbounds [2 x %union.PORT_DIR_Type], [2 x %union.PORT_DIR_Type]* inttoptr (i32 1073752092 to [2 x %union.PORT_DIR_Type]*), i32 0, i32 %11, i32 0, i32 0, !dbg !9127
  %38 = load volatile i32, i32* %37, align 4, !dbg !9127
  call void @llvm.dbg.value(metadata i32 %38, metadata !9085, metadata !DIExpression()), !dbg !9087
  %39 = shl nuw i32 15, %13, !dbg !9128
  %40 = xor i32 %39, -1, !dbg !9129
  %41 = and i32 %38, %40, !dbg !9130
  call void @llvm.dbg.value(metadata i32 %41, metadata !9085, metadata !DIExpression()), !dbg !9087
  switch i32 %2, label %57 [
    i32 0, label %42
    i32 1, label %45
    i32 2, label %48
    i32 3, label %51
    i32 4, label %54
  ], !dbg !9131

42:                                               ; preds = %28
  %43 = shl nuw nsw i32 1, %13, !dbg !9132
  %44 = or i32 %41, %43, !dbg !9134
  call void @llvm.dbg.value(metadata i32 %44, metadata !9085, metadata !DIExpression()), !dbg !9087
  br label %57, !dbg !9135

45:                                               ; preds = %28
  %46 = shl nuw nsw i32 2, %13, !dbg !9136
  %47 = or i32 %41, %46, !dbg !9137
  call void @llvm.dbg.value(metadata i32 %47, metadata !9085, metadata !DIExpression()), !dbg !9087
  br label %57, !dbg !9138

48:                                               ; preds = %28
  %49 = shl nuw nsw i32 3, %13, !dbg !9139
  %50 = or i32 %41, %49, !dbg !9140
  call void @llvm.dbg.value(metadata i32 %50, metadata !9085, metadata !DIExpression()), !dbg !9087
  br label %57, !dbg !9141

51:                                               ; preds = %28
  %52 = shl nuw nsw i32 4, %13, !dbg !9142
  %53 = or i32 %41, %52, !dbg !9143
  call void @llvm.dbg.value(metadata i32 %53, metadata !9085, metadata !DIExpression()), !dbg !9087
  br label %57, !dbg !9144

54:                                               ; preds = %28
  %55 = shl nuw nsw i32 5, %13, !dbg !9145
  %56 = or i32 %41, %55, !dbg !9146
  call void @llvm.dbg.value(metadata i32 %56, metadata !9085, metadata !DIExpression()), !dbg !9087
  br label %57, !dbg !9147

57:                                               ; preds = %28, %54, %51, %48, %45, %42
  %58 = phi i32 [ %41, %28 ], [ %56, %54 ], [ %53, %51 ], [ %50, %48 ], [ %47, %45 ], [ %44, %42 ], !dbg !9087
  call void @llvm.dbg.value(metadata i32 %58, metadata !9085, metadata !DIExpression()), !dbg !9087
  %59 = shl nuw i32 8, %13, !dbg !9148
  %60 = select i1 %3, i32 %59, i32 0, !dbg !9148
  %61 = or i32 %58, %60, !dbg !9148
  call void @llvm.dbg.value(metadata i32 %61, metadata !9085, metadata !DIExpression()), !dbg !9087
  store volatile i32 %61, i32* %37, align 4, !dbg !9149
  tail call fastcc void @set_eic_enable(i1 noundef zeroext true) #25, !dbg !9150
  tail call fastcc void @wait_synchronization() #25, !dbg !9151
  store volatile i32 %10, i32* inttoptr (i32 1073752084 to i32*), align 4, !dbg !9152
  call void @llvm.dbg.value(metadata i32 %15, metadata !9153, metadata !DIExpression()) #23, !dbg !9156
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !9158, !srcloc !9159
  br label %63, !dbg !9160

62:                                               ; preds = %19, %24
  call void @llvm.dbg.label(metadata !9086), !dbg !9161
  tail call fastcc void @set_eic_enable(i1 noundef zeroext true) #25, !dbg !9162
  tail call fastcc void @wait_synchronization() #25, !dbg !9163
  call void @llvm.dbg.value(metadata i32 %15, metadata !9153, metadata !DIExpression()) #23, !dbg !9164
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !9166, !srcloc !9159
  br label %63, !dbg !9167

63:                                               ; preds = %6, %62, %57
  %64 = phi i32 [ -16, %62 ], [ 0, %57 ], [ %7, %6 ], !dbg !9087
  ret i32 %64, !dbg !9168
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @sam0_eic_map_to_line(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !9169 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9173, metadata !DIExpression()), !dbg !9176
  call void @llvm.dbg.value(metadata i32 %1, metadata !9174, metadata !DIExpression()), !dbg !9176
  %3 = getelementptr inbounds [2 x [32 x i8]], [2 x [32 x i8]]* @sam0_eic_channels, i32 0, i32 %0, i32 %1, !dbg !9177
  %4 = load i8, i8* %3, align 1, !dbg !9177
  call void @llvm.dbg.value(metadata i8 %4, metadata !9175, metadata !DIExpression()), !dbg !9176
  %5 = icmp eq i8 %4, -1, !dbg !9178
  %6 = zext i8 %4 to i32, !dbg !9180
  %7 = select i1 %5, i32 -134, i32 %6, !dbg !9180
  ret i32 %7, !dbg !9181
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sam0_eic_release(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !9182 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9184, metadata !DIExpression()), !dbg !9194
  call void @llvm.dbg.value(metadata i32 %1, metadata !9185, metadata !DIExpression()), !dbg !9194
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_22, metadata !9186, metadata !DIExpression()), !dbg !9194
  call void @llvm.dbg.value(metadata %struct.sam0_eic_data* @eic_data, metadata !9187, metadata !DIExpression()), !dbg !9194
  %3 = tail call fastcc i32 @sam0_eic_map_to_line(i32 noundef %0, i32 noundef %1) #25, !dbg !9195
  call void @llvm.dbg.value(metadata i32 %3, metadata !9189, metadata !DIExpression()), !dbg !9194
  %4 = icmp slt i32 %3, 0, !dbg !9196
  br i1 %4, label %23, label %5, !dbg !9198

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %3, !dbg !9199
  call void @llvm.dbg.value(metadata i32 %6, metadata !9188, metadata !DIExpression()), !dbg !9194
  call void @llvm.dbg.value(metadata i32 %3, metadata !9190, metadata !DIExpression(DW_OP_constu, 8, DW_OP_div, DW_OP_stack_value)), !dbg !9194
  call void @llvm.dbg.value(metadata i32 %3, metadata !9191, metadata !DIExpression(DW_OP_constu, 8, DW_OP_mod, DW_OP_constu, 4, DW_OP_mul, DW_OP_stack_value)), !dbg !9194
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #23, !dbg !9200, !srcloc !9101
  %8 = extractvalue { i32, i32 } %7, 0, !dbg !9200
  call void @llvm.dbg.value(metadata i32 %8, metadata !9098, metadata !DIExpression()) #23, !dbg !9202
  call void @llvm.dbg.value(metadata i32 undef, metadata !9099, metadata !DIExpression()) #23, !dbg !9202
  call void @llvm.dbg.value(metadata i32 %8, metadata !9192, metadata !DIExpression()), !dbg !9194
  tail call fastcc void @set_eic_enable(i1 noundef zeroext false) #25, !dbg !9203
  tail call fastcc void @wait_synchronization() #25, !dbg !9204
  %9 = tail call fastcc zeroext i1 @sam0_eic_check_ownership(i32 noundef %0, i32 noundef %1, i32 noundef %3) #25, !dbg !9205
  br i1 %9, label %10, label %22, !dbg !9207

10:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !9191, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_constu, 4, DW_OP_mul, DW_OP_stack_value)), !dbg !9194
  %11 = shl i32 %3, 2, !dbg !9208
  %12 = and i32 %11, 28, !dbg !9208
  call void @llvm.dbg.value(metadata i32 %12, metadata !9191, metadata !DIExpression()), !dbg !9194
  %13 = lshr i32 %3, 3, !dbg !9209
  call void @llvm.dbg.value(metadata i32 %13, metadata !9190, metadata !DIExpression()), !dbg !9194
  %14 = getelementptr inbounds %struct.sam0_eic_data, %struct.sam0_eic_data* @eic_data, i32 0, i32 1, i32 %3, i32 0, !dbg !9210
  %15 = load i8, i8* %14, align 1, !dbg !9211
  %16 = and i8 %15, 127, !dbg !9211
  store i8 %16, i8* %14, align 1, !dbg !9211
  %17 = shl nuw i32 15, %12, !dbg !9212
  %18 = xor i32 %17, -1, !dbg !9213
  %19 = getelementptr inbounds [2 x %union.PORT_DIR_Type], [2 x %union.PORT_DIR_Type]* inttoptr (i32 1073752092 to [2 x %union.PORT_DIR_Type]*), i32 0, i32 %13, i32 0, i32 0, !dbg !9214
  %20 = load volatile i32, i32* %19, align 4, !dbg !9215
  %21 = and i32 %20, %18, !dbg !9215
  store volatile i32 %21, i32* %19, align 4, !dbg !9215
  store volatile i32 %6, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !9216
  store volatile i32 %6, i32* inttoptr (i32 1073752084 to i32*), align 4, !dbg !9217
  br label %22, !dbg !9218

22:                                               ; preds = %5, %10
  call void @llvm.dbg.label(metadata !9193), !dbg !9219
  tail call fastcc void @set_eic_enable(i1 noundef zeroext true) #25, !dbg !9220
  tail call fastcc void @wait_synchronization() #25, !dbg !9221
  call void @llvm.dbg.value(metadata i32 %8, metadata !9153, metadata !DIExpression()) #23, !dbg !9222
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !9224, !srcloc !9159
  br label %23, !dbg !9225

23:                                               ; preds = %2, %22
  %24 = phi i32 [ 0, %22 ], [ %3, %2 ], !dbg !9194
  ret i32 %24, !dbg !9226
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sam0_eic_check_ownership(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #5 !dbg !9227 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9231, metadata !DIExpression()), !dbg !9237
  call void @llvm.dbg.value(metadata i32 %1, metadata !9232, metadata !DIExpression()), !dbg !9237
  call void @llvm.dbg.value(metadata i32 %2, metadata !9233, metadata !DIExpression()), !dbg !9237
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_22, metadata !9234, metadata !DIExpression()), !dbg !9237
  call void @llvm.dbg.value(metadata %struct.sam0_eic_data* @eic_data, metadata !9235, metadata !DIExpression()), !dbg !9237
  call void @llvm.dbg.value(metadata !DIArgList(%struct.sam0_eic_data* @eic_data, i32 %2), metadata !9236, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !9237
  %4 = getelementptr inbounds %struct.sam0_eic_data, %struct.sam0_eic_data* @eic_data, i32 0, i32 1, i32 %2, i32 0, !dbg !9238
  %5 = load i8, i8* %4, align 1, !dbg !9238
  %6 = icmp sgt i8 %5, -1, !dbg !9240
  br i1 %6, label %16, label %7, !dbg !9241

7:                                                ; preds = %3
  %8 = lshr i8 %5, 5, !dbg !9242
  %9 = and i8 %8, 3, !dbg !9242
  %10 = zext i8 %9 to i32, !dbg !9244
  %11 = icmp eq i32 %10, %0, !dbg !9245
  br i1 %11, label %12, label %16, !dbg !9246

12:                                               ; preds = %7
  %13 = and i8 %5, 31, !dbg !9247
  %14 = zext i8 %13 to i32, !dbg !9248
  %15 = icmp eq i32 %14, %1, !dbg !9249
  br label %16, !dbg !9250

16:                                               ; preds = %12, %7, %3
  %17 = phi i1 [ false, %3 ], [ false, %7 ], [ %15, %12 ], !dbg !9237
  ret i1 %17, !dbg !9251
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @sam0_eic_enable_interrupt(i32 noundef %0, i32 noundef %1) local_unnamed_addr #15 !dbg !9252 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9254, metadata !DIExpression()), !dbg !9258
  call void @llvm.dbg.value(metadata i32 %1, metadata !9255, metadata !DIExpression()), !dbg !9258
  %3 = tail call fastcc i32 @sam0_eic_map_to_line(i32 noundef %0, i32 noundef %1) #25, !dbg !9259
  call void @llvm.dbg.value(metadata i32 %3, metadata !9257, metadata !DIExpression()), !dbg !9258
  %4 = icmp slt i32 %3, 0, !dbg !9260
  br i1 %4, label %9, label %5, !dbg !9262

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @sam0_eic_check_ownership(i32 noundef %0, i32 noundef %1, i32 noundef %3) #25, !dbg !9263
  br i1 %6, label %7, label %9, !dbg !9265

7:                                                ; preds = %5
  %8 = shl nuw i32 1, %3, !dbg !9266
  call void @llvm.dbg.value(metadata i32 %8, metadata !9256, metadata !DIExpression()), !dbg !9258
  store volatile i32 %8, i32* inttoptr (i32 1073752084 to i32*), align 4, !dbg !9267
  store volatile i32 %8, i32* inttoptr (i32 1073752080 to i32*), align 16, !dbg !9268
  br label %9, !dbg !9269

9:                                                ; preds = %5, %2, %7
  %10 = phi i32 [ 0, %7 ], [ %3, %2 ], [ -16, %5 ], !dbg !9258
  ret i32 %10, !dbg !9270
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @sam0_eic_disable_interrupt(i32 noundef %0, i32 noundef %1) local_unnamed_addr #15 !dbg !9271 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9273, metadata !DIExpression()), !dbg !9277
  call void @llvm.dbg.value(metadata i32 %1, metadata !9274, metadata !DIExpression()), !dbg !9277
  %3 = tail call fastcc i32 @sam0_eic_map_to_line(i32 noundef %0, i32 noundef %1) #25, !dbg !9278
  call void @llvm.dbg.value(metadata i32 %3, metadata !9276, metadata !DIExpression()), !dbg !9277
  %4 = icmp slt i32 %3, 0, !dbg !9279
  br i1 %4, label %9, label %5, !dbg !9281

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @sam0_eic_check_ownership(i32 noundef %0, i32 noundef %1, i32 noundef %3) #25, !dbg !9282
  br i1 %6, label %7, label %9, !dbg !9284

7:                                                ; preds = %5
  %8 = shl nuw i32 1, %3, !dbg !9285
  call void @llvm.dbg.value(metadata i32 %8, metadata !9275, metadata !DIExpression()), !dbg !9277
  store volatile i32 %8, i32* inttoptr (i32 1073752076 to i32*), align 4, !dbg !9286
  store volatile i32 %8, i32* inttoptr (i32 1073752084 to i32*), align 4, !dbg !9287
  br label %9, !dbg !9288

9:                                                ; preds = %5, %2, %7
  %10 = phi i32 [ 0, %7 ], [ %3, %2 ], [ -16, %5 ], !dbg !9277
  ret i32 %10, !dbg !9289
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @sam0_eic_interrupt_pending(i32 noundef %0) local_unnamed_addr #15 !dbg !9290 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9294, metadata !DIExpression()), !dbg !9302
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_22, metadata !9295, metadata !DIExpression()), !dbg !9302
  call void @llvm.dbg.value(metadata %struct.sam0_eic_data* @eic_data, metadata !9296, metadata !DIExpression()), !dbg !9302
  %2 = load volatile i32, i32* inttoptr (i32 1073752084 to i32*), align 4, !dbg !9303
  call void @llvm.dbg.value(metadata i32 %2, metadata !9298, metadata !DIExpression()), !dbg !9302
  call void @llvm.dbg.value(metadata i32 0, metadata !9299, metadata !DIExpression()), !dbg !9302
  call void @llvm.dbg.value(metadata i32 0, metadata !9300, metadata !DIExpression()), !dbg !9304
  br label %4, !dbg !9305

3:                                                ; preds = %24
  ret i32 %25, !dbg !9306

4:                                                ; preds = %1, %24
  %5 = phi i32 [ 0, %1 ], [ %26, %24 ]
  %6 = phi i32 [ 0, %1 ], [ %25, %24 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !9300, metadata !DIExpression()), !dbg !9304
  call void @llvm.dbg.value(metadata i32 %6, metadata !9299, metadata !DIExpression()), !dbg !9302
  call void @llvm.dbg.value(metadata !DIArgList(%struct.sam0_eic_data* @eic_data, i32 %5), metadata !9297, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !9302
  %7 = getelementptr inbounds %struct.sam0_eic_data, %struct.sam0_eic_data* @eic_data, i32 0, i32 1, i32 %5, i32 0, !dbg !9307
  %8 = load i8, i8* %7, align 1, !dbg !9307
  %9 = icmp sgt i8 %8, -1, !dbg !9311
  br i1 %9, label %24, label %10, !dbg !9312

10:                                               ; preds = %4
  %11 = lshr i8 %8, 5, !dbg !9313
  %12 = and i8 %11, 3, !dbg !9313
  %13 = zext i8 %12 to i32, !dbg !9315
  %14 = icmp eq i32 %13, %0, !dbg !9316
  br i1 %14, label %15, label %24, !dbg !9317

15:                                               ; preds = %10
  %16 = shl nuw nsw i32 1, %5, !dbg !9318
  %17 = and i32 %16, %2, !dbg !9320
  %18 = icmp eq i32 %17, 0, !dbg !9320
  br i1 %18, label %24, label %19, !dbg !9321

19:                                               ; preds = %15
  %20 = and i8 %8, 31, !dbg !9322
  %21 = zext i8 %20 to i32, !dbg !9322
  %22 = shl nuw i32 1, %21, !dbg !9322
  %23 = or i32 %22, %6, !dbg !9323
  call void @llvm.dbg.value(metadata i32 %23, metadata !9299, metadata !DIExpression()), !dbg !9302
  br label %24, !dbg !9324

24:                                               ; preds = %15, %10, %4, %19
  %25 = phi i32 [ %6, %10 ], [ %23, %19 ], [ %6, %15 ], [ %6, %4 ], !dbg !9302
  call void @llvm.dbg.value(metadata i32 %25, metadata !9299, metadata !DIExpression()), !dbg !9302
  %26 = add nuw nsw i32 %5, 1, !dbg !9325
  call void @llvm.dbg.value(metadata i32 %26, metadata !9300, metadata !DIExpression()), !dbg !9304
  %27 = icmp eq i32 %26, 16, !dbg !9326
  br i1 %27, label %3, label %4, !dbg !9305, !llvm.loop !9327
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !9329 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9331, metadata !DIExpression()), !dbg !9332
  %2 = tail call fastcc zeroext i1 @device_is_ready() #25, !dbg !9333
  br i1 %2, label %3, label %4, !dbg !9335

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #25, !dbg !9336
  br label %4, !dbg !9337

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !9332
  ret i32 %5, !dbg !9338
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !9339 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_36, metadata !9344, metadata !DIExpression()), !dbg !9345
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9346, !srcloc !9348
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #25, !dbg !9349
  ret i1 %1, !dbg !9350
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !9351 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #24, !dbg !9352
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #24, !dbg !9353
  ret void, !dbg !9354
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !9355 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9357, metadata !DIExpression()), !dbg !9358
  %2 = icmp eq i32 %0, 10, !dbg !9359
  br i1 %2, label %3, label %4, !dbg !9361

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #25, !dbg !9362
  br label %4, !dbg !9364

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !9365
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #25, !dbg !9366
  ret i32 %0, !dbg !9367
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9368 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_36, metadata !9371, metadata !DIExpression()), !dbg !9373
  call void @llvm.dbg.value(metadata i8 %0, metadata !9372, metadata !DIExpression()), !dbg !9373
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9374, !srcloc !9376
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #25, !dbg !9377
  ret void, !dbg !9378
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9379 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_36, metadata !9381, metadata !DIExpression()), !dbg !9384
  call void @llvm.dbg.value(metadata i8 %0, metadata !9382, metadata !DIExpression()), !dbg !9384
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_36, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9385
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !9383, metadata !DIExpression()), !dbg !9384
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !9386
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !9386
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_36, i8 noundef zeroext %0) #24, !dbg !9387
  ret void, !dbg !9388
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !9389 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_36, metadata !9391, metadata !DIExpression()), !dbg !9392
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_36) #24, !dbg !9393
  ret i1 %1, !dbg !9394
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #11 !dbg !9395 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !9442, metadata !DIExpression()), !dbg !9445
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !9443, metadata !DIExpression()), !dbg !9445
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !9444, metadata !DIExpression()), !dbg !9445
  ret void, !dbg !9446
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_sam0_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #17 !dbg !9447 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9449, metadata !DIExpression()), !dbg !9455
  call void @llvm.dbg.value(metadata i8* %1, metadata !9450, metadata !DIExpression()), !dbg !9455
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9456
  %4 = bitcast i8** %3 to %struct.uart_sam0_dev_cfg**, !dbg !9456
  %5 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %4, align 4, !dbg !9456
  call void @llvm.dbg.value(metadata %struct.uart_sam0_dev_cfg* %5, metadata !9451, metadata !DIExpression()), !dbg !9455
  %6 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %5, i32 0, i32 0, !dbg !9457
  %7 = load %struct.SercomUsart*, %struct.SercomUsart** %6, align 4, !dbg !9457
  call void @llvm.dbg.value(metadata %struct.SercomUsart* %7, metadata !9453, metadata !DIExpression()), !dbg !9455
  %8 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %7, i32 0, i32 10, i32 0, i32 0, !dbg !9458
  %9 = load volatile i8, i8* %8, align 4, !dbg !9458
  %10 = and i8 %9, 4, !dbg !9460
  %11 = icmp eq i8 %10, 0, !dbg !9460
  br i1 %11, label %16, label %12, !dbg !9461

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %7, i32 0, i32 18, i32 0, i32 0, !dbg !9462
  %14 = load volatile i32, i32* %13, align 4, !dbg !9462
  %15 = trunc i32 %14 to i8, !dbg !9463
  store i8 %15, i8* %1, align 1, !dbg !9464
  br label %16, !dbg !9465

16:                                               ; preds = %2, %12
  %17 = phi i32 [ 0, %12 ], [ -16, %2 ], !dbg !9455
  ret i32 %17, !dbg !9466
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal void @uart_sam0_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #15 !dbg !9467 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9469, metadata !DIExpression()), !dbg !9473
  call void @llvm.dbg.value(metadata i8 %1, metadata !9470, metadata !DIExpression()), !dbg !9473
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9474
  %4 = bitcast i8** %3 to %struct.uart_sam0_dev_cfg**, !dbg !9474
  %5 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %4, align 4, !dbg !9474
  call void @llvm.dbg.value(metadata %struct.uart_sam0_dev_cfg* %5, metadata !9471, metadata !DIExpression()), !dbg !9473
  %6 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %5, i32 0, i32 0, !dbg !9475
  %7 = load %struct.SercomUsart*, %struct.SercomUsart** %6, align 4, !dbg !9475
  call void @llvm.dbg.value(metadata %struct.SercomUsart* %7, metadata !9472, metadata !DIExpression()), !dbg !9473
  %8 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %7, i32 0, i32 10, i32 0, i32 0
  br label %9, !dbg !9476

9:                                                ; preds = %9, %2
  %10 = load volatile i8, i8* %8, align 4, !dbg !9477
  %11 = and i8 %10, 1, !dbg !9477
  %12 = icmp eq i8 %11, 0, !dbg !9478
  br i1 %12, label %9, label %13, !dbg !9476, !llvm.loop !9479

13:                                               ; preds = %9
  %14 = zext i8 %1 to i32, !dbg !9481
  %15 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %7, i32 0, i32 18, i32 0, i32 0, !dbg !9482
  store volatile i32 %14, i32* %15, align 4, !dbg !9483
  ret void, !dbg !9484
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @uart_sam0_err_check(%struct.device* nocapture noundef readonly %0) #15 !dbg !9485 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9487, metadata !DIExpression()), !dbg !9491
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9492
  %3 = bitcast i8** %2 to %struct.uart_sam0_dev_cfg**, !dbg !9492
  %4 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !9492
  call void @llvm.dbg.value(metadata %struct.uart_sam0_dev_cfg* %4, metadata !9488, metadata !DIExpression()), !dbg !9491
  %5 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %4, i32 0, i32 0, !dbg !9493
  %6 = load %struct.SercomUsart*, %struct.SercomUsart** %5, align 4, !dbg !9493
  call void @llvm.dbg.value(metadata %struct.SercomUsart* %6, metadata !9489, metadata !DIExpression()), !dbg !9491
  call void @llvm.dbg.value(metadata i32 0, metadata !9490, metadata !DIExpression()), !dbg !9491
  %7 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %6, i32 0, i32 12, i32 0, i32 0, !dbg !9494
  %8 = load volatile i16, i16* %7, align 2, !dbg !9494
  %9 = lshr i16 %8, 2, !dbg !9496
  %10 = and i16 %9, 1, !dbg !9496
  call void @llvm.dbg.value(metadata i16 %10, metadata !9490, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9491
  %11 = load volatile i16, i16* %7, align 2, !dbg !9497
  %12 = and i16 %11, 2, !dbg !9499
  %13 = or i16 %12, %10, !dbg !9500
  call void @llvm.dbg.value(metadata i16 %13, metadata !9490, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9491
  %14 = load volatile i16, i16* %7, align 2, !dbg !9501
  %15 = shl i16 %14, 2, !dbg !9503
  %16 = and i16 %15, 4, !dbg !9503
  %17 = or i16 %13, %16, !dbg !9503
  call void @llvm.dbg.value(metadata i16 %17, metadata !9490, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9491
  %18 = load volatile i16, i16* %7, align 2, !dbg !9504
  %19 = lshr i16 %18, 1, !dbg !9506
  %20 = and i16 %19, 8, !dbg !9506
  %21 = or i16 %17, %20, !dbg !9506
  call void @llvm.dbg.value(metadata i16 %21, metadata !9490, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9491
  %22 = load volatile i16, i16* %7, align 2, !dbg !9507
  %23 = lshr i16 %22, 1, !dbg !9509
  %24 = and i16 %23, 16, !dbg !9509
  %25 = or i16 %21, %24, !dbg !9509
  %26 = zext i16 %25 to i32, !dbg !9509
  call void @llvm.dbg.value(metadata i32 %26, metadata !9490, metadata !DIExpression()), !dbg !9491
  %27 = load volatile i16, i16* %7, align 2, !dbg !9510
  %28 = or i16 %27, 55, !dbg !9510
  store volatile i16 %28, i16* %7, align 2, !dbg !9510
  tail call fastcc void @wait_synchronization.56(%struct.SercomUsart* noundef %6) #25, !dbg !9511
  ret i32 %26, !dbg !9512
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_sam0_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #16 !dbg !9513 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !9524, metadata !DIExpression()), !dbg !9526
  %4 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !9525, metadata !DIExpression()), !dbg !9527
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9515, metadata !DIExpression()), !dbg !9528
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9516, metadata !DIExpression()), !dbg !9528
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9529
  %6 = bitcast i8** %5 to %struct.uart_sam0_dev_cfg**, !dbg !9529
  %7 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %6, align 4, !dbg !9529
  call void @llvm.dbg.value(metadata %struct.uart_sam0_dev_cfg* %7, metadata !9518, metadata !DIExpression()), !dbg !9528
  %8 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9530
  %9 = bitcast i8** %8 to %struct.uart_sam0_dev_data**, !dbg !9530
  %10 = load %struct.uart_sam0_dev_data*, %struct.uart_sam0_dev_data** %9, align 4, !dbg !9530
  call void @llvm.dbg.value(metadata %struct.uart_sam0_dev_data* %10, metadata !9520, metadata !DIExpression()), !dbg !9528
  %11 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %7, i32 0, i32 0, !dbg !9531
  %12 = load %struct.SercomUsart*, %struct.SercomUsart** %11, align 4, !dbg !9531
  call void @llvm.dbg.value(metadata %struct.SercomUsart* %12, metadata !9523, metadata !DIExpression()), !dbg !9528
  tail call fastcc void @wait_synchronization.56(%struct.SercomUsart* noundef %12) #25, !dbg !9532
  %13 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %12, i32 0, i32 0, i32 0, i32 0, !dbg !9533
  %14 = load volatile i32, i32* %13, align 4, !dbg !9534
  %15 = and i32 %14, -3, !dbg !9534
  store volatile i32 %15, i32* %13, align 4, !dbg !9534
  tail call fastcc void @wait_synchronization.56(%struct.SercomUsart* noundef %12) #25, !dbg !9535
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9536
  %17 = load i8, i8* %16, align 1, !dbg !9536
  %18 = icmp eq i8 %17, 0, !dbg !9538
  br i1 %18, label %19, label %87, !dbg !9539

19:                                               ; preds = %2
  %20 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %10, i32 0, i32 0, i32 4, !dbg !9540
  store i8 0, i8* %20, align 1, !dbg !9541
  %21 = bitcast i32* %3 to i8*, !dbg !9542
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21), !dbg !9542
  %22 = load volatile i32, i32* %13, align 4, !dbg !9543
  store volatile i32 %22, i32* %3, align 4, !dbg !9543
  %23 = bitcast i32* %4 to i8*, !dbg !9544
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %23), !dbg !9544
  %24 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %12, i32 0, i32 1, i32 0, i32 0, !dbg !9545
  %25 = load volatile i32, i32* %24, align 4, !dbg !9545
  store volatile i32 %25, i32* %4, align 4, !dbg !9545
  %26 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9546
  %27 = load i8, i8* %26, align 4, !dbg !9546
  switch i8 %27, label %85 [
    i8 0, label %28
    i8 1, label %30
    i8 2, label %34
  ], !dbg !9547

28:                                               ; preds = %19
  %29 = and i32 %22, -251658241, !dbg !9548
  store i32 %29, i32* %3, align 4, !dbg !9548
  br label %38, !dbg !9550

30:                                               ; preds = %19
  %31 = and i32 %22, -251658241, !dbg !9551
  %32 = or i32 %31, 16777216, !dbg !9551
  store i32 %32, i32* %3, align 4, !dbg !9551
  %33 = or i32 %25, 8192, !dbg !9552
  store i32 %33, i32* %4, align 4, !dbg !9552
  br label %38, !dbg !9553

34:                                               ; preds = %19
  %35 = and i32 %22, -251658241, !dbg !9554
  %36 = or i32 %35, 16777216, !dbg !9554
  store i32 %36, i32* %3, align 4, !dbg !9554
  %37 = and i32 %25, -8193, !dbg !9555
  store i32 %37, i32* %4, align 4, !dbg !9555
  br label %38, !dbg !9556

38:                                               ; preds = %34, %30, %28
  %39 = phi i32 [ %37, %34 ], [ %33, %30 ], [ %25, %28 ]
  %40 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %10, i32 0, i32 0, i32 1, !dbg !9557
  store i8 %27, i8* %40, align 4, !dbg !9558
  %41 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9559
  %42 = load i8, i8* %41, align 1, !dbg !9559
  switch i8 %42, label %85 [
    i8 1, label %43
    i8 3, label %45
  ], !dbg !9560

43:                                               ; preds = %38
  %44 = and i32 %39, -65, !dbg !9561
  br label %47, !dbg !9563

45:                                               ; preds = %38
  %46 = or i32 %39, 64, !dbg !9564
  br label %47, !dbg !9565

47:                                               ; preds = %45, %43
  %48 = phi i32 [ %46, %45 ], [ %44, %43 ], !dbg !9566
  %49 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %10, i32 0, i32 0, i32 2, !dbg !9567
  store i8 %42, i8* %49, align 1, !dbg !9568
  %50 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9569
  %51 = load i8, i8* %50, align 2, !dbg !9569
  switch i8 %51, label %85 [
    i8 0, label %52
    i8 1, label %55
    i8 2, label %58
    i8 3, label %60
    i8 4, label %62
  ], !dbg !9570

52:                                               ; preds = %47
  %53 = and i32 %48, -8, !dbg !9571
  %54 = or i32 %53, 5, !dbg !9571
  br label %65, !dbg !9573

55:                                               ; preds = %47
  %56 = and i32 %48, -8, !dbg !9574
  %57 = or i32 %56, 6, !dbg !9574
  br label %65, !dbg !9575

58:                                               ; preds = %47
  %59 = or i32 %48, 7, !dbg !9576
  br label %65, !dbg !9577

60:                                               ; preds = %47
  %61 = and i32 %48, -8, !dbg !9578
  br label %65, !dbg !9579

62:                                               ; preds = %47
  %63 = and i32 %48, -8, !dbg !9580
  %64 = or i32 %63, 1, !dbg !9580
  br label %65, !dbg !9581

65:                                               ; preds = %62, %60, %58, %55, %52
  %66 = phi i32 [ %64, %62 ], [ %61, %60 ], [ %59, %58 ], [ %57, %55 ], [ %54, %52 ], !dbg !9582
  %67 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %10, i32 0, i32 0, i32 3, !dbg !9583
  store i8 %51, i8* %67, align 2, !dbg !9584
  %68 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %7, i32 0, i32 2, !dbg !9585
  %69 = load i32, i32* %68, align 4, !dbg !9585
  %70 = shl i32 %69, 8, !dbg !9582
  %71 = and i32 %70, 256, !dbg !9582
  %72 = and i32 %66, -257, !dbg !9582
  %73 = or i32 %72, %71, !dbg !9582
  store i32 %73, i32* %4, align 4, !dbg !9582
  %74 = load volatile i32, i32* %3, align 4, !dbg !9586
  store volatile i32 %74, i32* %13, align 4, !dbg !9586
  tail call fastcc void @wait_synchronization.56(%struct.SercomUsart* noundef nonnull %12) #25, !dbg !9587
  %75 = load volatile i32, i32* %4, align 4, !dbg !9588
  store volatile i32 %75, i32* %24, align 4, !dbg !9588
  tail call fastcc void @wait_synchronization.56(%struct.SercomUsart* noundef nonnull %12) #25, !dbg !9589
  %76 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !9590
  %77 = load i32, i32* %76, align 4, !dbg !9590
  %78 = tail call fastcc i32 @uart_sam0_set_baudrate(%struct.SercomUsart* noundef nonnull %12, i32 noundef %77) #25, !dbg !9591
  call void @llvm.dbg.value(metadata i32 %78, metadata !9517, metadata !DIExpression()), !dbg !9528
  %79 = icmp eq i32 %78, 0, !dbg !9592
  br i1 %79, label %80, label %85, !dbg !9594

80:                                               ; preds = %65
  %81 = load i32, i32* %76, align 4, !dbg !9595
  %82 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %10, i32 0, i32 0, i32 0, !dbg !9596
  store i32 %81, i32* %82, align 4, !dbg !9597
  %83 = load volatile i32, i32* %13, align 4, !dbg !9598
  %84 = or i32 %83, 2, !dbg !9598
  store volatile i32 %84, i32* %13, align 4, !dbg !9598
  tail call fastcc void @wait_synchronization.56(%struct.SercomUsart* noundef nonnull %12) #25, !dbg !9599
  br label %85, !dbg !9600

85:                                               ; preds = %65, %47, %38, %19, %80
  %86 = phi i32 [ 0, %80 ], [ -134, %19 ], [ -134, %38 ], [ -134, %47 ], [ %78, %65 ], !dbg !9528
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %23), !dbg !9601
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21), !dbg !9601
  br label %87

87:                                               ; preds = %2, %85
  %88 = phi i32 [ %86, %85 ], [ -134, %2 ], !dbg !9528
  ret i32 %88, !dbg !9601
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_sam0_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* noundef %1) #1 !dbg !9602 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9604, metadata !DIExpression()), !dbg !9607
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9605, metadata !DIExpression()), !dbg !9607
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9608
  %4 = load i8*, i8** %3, align 4, !dbg !9608
  call void @llvm.dbg.value(metadata %struct.uart_sam0_dev_data* undef, metadata !9606, metadata !DIExpression()), !dbg !9607
  %5 = bitcast %struct.uart_config* %1 to i8*, !dbg !9609
  %6 = tail call i8* @memcpy(i8* noundef %5, i8* noundef %4, i32 noundef 8) #24, !dbg !9610
  ret i32 0, !dbg !9611
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @uart_sam0_fifo_fill(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) #15 !dbg !9612 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9614, metadata !DIExpression()), !dbg !9619
  call void @llvm.dbg.value(metadata i8* %1, metadata !9615, metadata !DIExpression()), !dbg !9619
  call void @llvm.dbg.value(metadata i32 %2, metadata !9616, metadata !DIExpression()), !dbg !9619
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9620
  %5 = bitcast i8** %4 to %struct.uart_sam0_dev_cfg**, !dbg !9620
  %6 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %5, align 4, !dbg !9620
  call void @llvm.dbg.value(metadata %struct.uart_sam0_dev_cfg* %6, metadata !9617, metadata !DIExpression()), !dbg !9619
  %7 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %6, i32 0, i32 0, !dbg !9621
  %8 = load %struct.SercomUsart*, %struct.SercomUsart** %7, align 4, !dbg !9621
  call void @llvm.dbg.value(metadata %struct.SercomUsart* %8, metadata !9618, metadata !DIExpression()), !dbg !9619
  %9 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %8, i32 0, i32 10, i32 0, i32 0, !dbg !9622
  %10 = load volatile i8, i8* %9, align 4, !dbg !9622
  %11 = and i8 %10, 1, !dbg !9622
  %12 = icmp ne i8 %11, 0, !dbg !9624
  %13 = icmp sgt i32 %2, 0
  %14 = and i1 %13, %12, !dbg !9625
  br i1 %14, label %15, label %19, !dbg !9625

15:                                               ; preds = %3
  %16 = load i8, i8* %1, align 1, !dbg !9626
  %17 = zext i8 %16 to i32, !dbg !9626
  %18 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %8, i32 0, i32 18, i32 0, i32 0, !dbg !9628
  store volatile i32 %17, i32* %18, align 4, !dbg !9629
  br label %19, !dbg !9630

19:                                               ; preds = %3, %15
  %20 = phi i32 [ 1, %15 ], [ 0, %3 ], !dbg !9631
  ret i32 %20, !dbg !9632
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_sam0_fifo_read(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) #17 !dbg !9633 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9635, metadata !DIExpression()), !dbg !9643
  call void @llvm.dbg.value(metadata i8* %1, metadata !9636, metadata !DIExpression()), !dbg !9643
  call void @llvm.dbg.value(metadata i32 %2, metadata !9637, metadata !DIExpression()), !dbg !9643
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9644
  %5 = bitcast i8** %4 to %struct.uart_sam0_dev_cfg**, !dbg !9644
  %6 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %5, align 4, !dbg !9644
  call void @llvm.dbg.value(metadata %struct.uart_sam0_dev_cfg* %6, metadata !9638, metadata !DIExpression()), !dbg !9643
  %7 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %6, i32 0, i32 0, !dbg !9645
  %8 = load %struct.SercomUsart*, %struct.SercomUsart** %7, align 4, !dbg !9645
  call void @llvm.dbg.value(metadata %struct.SercomUsart* %8, metadata !9639, metadata !DIExpression()), !dbg !9643
  %9 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %8, i32 0, i32 10, i32 0, i32 0, !dbg !9646
  %10 = load volatile i8, i8* %9, align 4, !dbg !9646
  %11 = and i8 %10, 4, !dbg !9647
  %12 = icmp eq i8 %11, 0, !dbg !9647
  br i1 %12, label %19, label %13, !dbg !9648

13:                                               ; preds = %3
  %14 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %8, i32 0, i32 18, i32 0, i32 0, !dbg !9649
  %15 = load volatile i32, i32* %14, align 4, !dbg !9649
  call void @llvm.dbg.value(metadata i32 %15, metadata !9640, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9650
  %16 = icmp sgt i32 %2, 0, !dbg !9651
  br i1 %16, label %17, label %19, !dbg !9653

17:                                               ; preds = %13
  %18 = trunc i32 %15 to i8, !dbg !9654
  call void @llvm.dbg.value(metadata i8 %18, metadata !9640, metadata !DIExpression()), !dbg !9650
  store i8 %18, i8* %1, align 1, !dbg !9655
  br label %19, !dbg !9657

19:                                               ; preds = %3, %17, %13
  %20 = phi i32 [ 1, %17 ], [ -22, %13 ], [ 0, %3 ], !dbg !9643
  ret i32 %20, !dbg !9658
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal void @uart_sam0_irq_tx_enable(%struct.device* nocapture noundef readonly %0) #15 !dbg !9659 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9661, metadata !DIExpression()), !dbg !9664
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9665
  %3 = bitcast i8** %2 to %struct.uart_sam0_dev_cfg**, !dbg !9665
  %4 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !9665
  call void @llvm.dbg.value(metadata %struct.uart_sam0_dev_cfg* %4, metadata !9662, metadata !DIExpression()), !dbg !9664
  %5 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %4, i32 0, i32 0, !dbg !9666
  %6 = load %struct.SercomUsart*, %struct.SercomUsart** %5, align 4, !dbg !9666
  call void @llvm.dbg.value(metadata %struct.SercomUsart* %6, metadata !9663, metadata !DIExpression()), !dbg !9664
  %7 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %6, i32 0, i32 8, i32 0, i32 0, !dbg !9667
  store volatile i8 3, i8* %7, align 2, !dbg !9668
  ret void, !dbg !9669
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal void @uart_sam0_irq_tx_disable(%struct.device* nocapture noundef readonly %0) #15 !dbg !9670 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9672, metadata !DIExpression()), !dbg !9675
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9676
  %3 = bitcast i8** %2 to %struct.uart_sam0_dev_cfg**, !dbg !9676
  %4 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !9676
  call void @llvm.dbg.value(metadata %struct.uart_sam0_dev_cfg* %4, metadata !9673, metadata !DIExpression()), !dbg !9675
  %5 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %4, i32 0, i32 0, !dbg !9677
  %6 = load %struct.SercomUsart*, %struct.SercomUsart** %5, align 4, !dbg !9677
  call void @llvm.dbg.value(metadata %struct.SercomUsart* %6, metadata !9674, metadata !DIExpression()), !dbg !9675
  %7 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %6, i32 0, i32 6, i32 0, i32 0, !dbg !9678
  store volatile i8 3, i8* %7, align 4, !dbg !9679
  ret void, !dbg !9680
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_sam0_irq_tx_ready(%struct.device* nocapture noundef readonly %0) #17 !dbg !9681 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9683, metadata !DIExpression()), !dbg !9686
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9687
  %3 = bitcast i8** %2 to %struct.uart_sam0_dev_cfg**, !dbg !9687
  %4 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !9687
  call void @llvm.dbg.value(metadata %struct.uart_sam0_dev_cfg* %4, metadata !9684, metadata !DIExpression()), !dbg !9686
  %5 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %4, i32 0, i32 0, !dbg !9688
  %6 = load %struct.SercomUsart*, %struct.SercomUsart** %5, align 4, !dbg !9688
  call void @llvm.dbg.value(metadata %struct.SercomUsart* %6, metadata !9685, metadata !DIExpression()), !dbg !9686
  %7 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %6, i32 0, i32 10, i32 0, i32 0, !dbg !9689
  %8 = load volatile i8, i8* %7, align 4, !dbg !9689
  %9 = and i8 %8, 1, !dbg !9689
  %10 = icmp eq i8 %9, 0, !dbg !9690
  br i1 %10, label %16, label %11, !dbg !9691

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %6, i32 0, i32 8, i32 0, i32 0, !dbg !9692
  %13 = load volatile i8, i8* %12, align 2, !dbg !9692
  %14 = and i8 %13, 1, !dbg !9692
  %15 = zext i8 %14 to i32, !dbg !9693
  br label %16

16:                                               ; preds = %11, %1
  %17 = phi i32 [ 0, %1 ], [ %15, %11 ]
  ret i32 %17, !dbg !9694
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal void @uart_sam0_irq_rx_enable(%struct.device* nocapture noundef readonly %0) #15 !dbg !9695 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9697, metadata !DIExpression()), !dbg !9700
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9701
  %3 = bitcast i8** %2 to %struct.uart_sam0_dev_cfg**, !dbg !9701
  %4 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !9701
  call void @llvm.dbg.value(metadata %struct.uart_sam0_dev_cfg* %4, metadata !9698, metadata !DIExpression()), !dbg !9700
  %5 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %4, i32 0, i32 0, !dbg !9702
  %6 = load %struct.SercomUsart*, %struct.SercomUsart** %5, align 4, !dbg !9702
  call void @llvm.dbg.value(metadata %struct.SercomUsart* %6, metadata !9699, metadata !DIExpression()), !dbg !9700
  %7 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %6, i32 0, i32 8, i32 0, i32 0, !dbg !9703
  store volatile i8 4, i8* %7, align 2, !dbg !9704
  ret void, !dbg !9705
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal void @uart_sam0_irq_rx_disable(%struct.device* nocapture noundef readonly %0) #15 !dbg !9706 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9708, metadata !DIExpression()), !dbg !9711
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9712
  %3 = bitcast i8** %2 to %struct.uart_sam0_dev_cfg**, !dbg !9712
  %4 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !9712
  call void @llvm.dbg.value(metadata %struct.uart_sam0_dev_cfg* %4, metadata !9709, metadata !DIExpression()), !dbg !9711
  %5 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %4, i32 0, i32 0, !dbg !9713
  %6 = load %struct.SercomUsart*, %struct.SercomUsart** %5, align 4, !dbg !9713
  call void @llvm.dbg.value(metadata %struct.SercomUsart* %6, metadata !9710, metadata !DIExpression()), !dbg !9711
  %7 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %6, i32 0, i32 6, i32 0, i32 0, !dbg !9714
  store volatile i8 4, i8* %7, align 4, !dbg !9715
  ret void, !dbg !9716
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_sam0_irq_tx_complete(%struct.device* nocapture noundef readonly %0) #17 !dbg !9717 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9719, metadata !DIExpression()), !dbg !9722
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9723
  %3 = bitcast i8** %2 to %struct.uart_sam0_dev_cfg**, !dbg !9723
  %4 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !9723
  call void @llvm.dbg.value(metadata %struct.uart_sam0_dev_cfg* %4, metadata !9720, metadata !DIExpression()), !dbg !9722
  %5 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %4, i32 0, i32 0, !dbg !9724
  %6 = load %struct.SercomUsart*, %struct.SercomUsart** %5, align 4, !dbg !9724
  call void @llvm.dbg.value(metadata %struct.SercomUsart* %6, metadata !9721, metadata !DIExpression()), !dbg !9722
  %7 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %6, i32 0, i32 10, i32 0, i32 0, !dbg !9725
  %8 = load volatile i8, i8* %7, align 4, !dbg !9725
  %9 = and i8 %8, 2, !dbg !9726
  %10 = icmp eq i8 %9, 0, !dbg !9726
  br i1 %10, label %17, label %11, !dbg !9727

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %6, i32 0, i32 8, i32 0, i32 0, !dbg !9728
  %13 = load volatile i8, i8* %12, align 2, !dbg !9728
  %14 = lshr i8 %13, 1, !dbg !9728
  %15 = and i8 %14, 1, !dbg !9728
  %16 = zext i8 %15 to i32, !dbg !9729
  br label %17

17:                                               ; preds = %11, %1
  %18 = phi i32 [ 0, %1 ], [ %16, %11 ]
  ret i32 %18, !dbg !9730
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_sam0_irq_rx_ready(%struct.device* nocapture noundef readonly %0) #17 !dbg !9731 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9733, metadata !DIExpression()), !dbg !9736
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9737
  %3 = bitcast i8** %2 to %struct.uart_sam0_dev_cfg**, !dbg !9737
  %4 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !9737
  call void @llvm.dbg.value(metadata %struct.uart_sam0_dev_cfg* %4, metadata !9734, metadata !DIExpression()), !dbg !9736
  %5 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %4, i32 0, i32 0, !dbg !9738
  %6 = load %struct.SercomUsart*, %struct.SercomUsart** %5, align 4, !dbg !9738
  call void @llvm.dbg.value(metadata %struct.SercomUsart* %6, metadata !9735, metadata !DIExpression()), !dbg !9736
  %7 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %6, i32 0, i32 10, i32 0, i32 0, !dbg !9739
  %8 = load volatile i8, i8* %7, align 4, !dbg !9739
  %9 = lshr i8 %8, 2, !dbg !9740
  %10 = and i8 %9, 1, !dbg !9740
  %11 = zext i8 %10 to i32, !dbg !9740
  ret i32 %11, !dbg !9741
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal void @uart_sam0_irq_err_enable(%struct.device* nocapture noundef readonly %0) #15 !dbg !9742 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9744, metadata !DIExpression()), !dbg !9747
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9748
  %3 = bitcast i8** %2 to %struct.uart_sam0_dev_cfg**, !dbg !9748
  %4 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !9748
  call void @llvm.dbg.value(metadata %struct.uart_sam0_dev_cfg* %4, metadata !9745, metadata !DIExpression()), !dbg !9747
  %5 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %4, i32 0, i32 0, !dbg !9749
  %6 = load %struct.SercomUsart*, %struct.SercomUsart** %5, align 4, !dbg !9749
  call void @llvm.dbg.value(metadata %struct.SercomUsart* %6, metadata !9746, metadata !DIExpression()), !dbg !9747
  %7 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %6, i32 0, i32 8, i32 0, i32 0, !dbg !9750
  %8 = load volatile i8, i8* %7, align 2, !dbg !9751
  %9 = or i8 %8, -128, !dbg !9751
  store volatile i8 %9, i8* %7, align 2, !dbg !9751
  tail call fastcc void @wait_synchronization.56(%struct.SercomUsart* noundef %6) #25, !dbg !9752
  ret void, !dbg !9753
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal void @uart_sam0_irq_err_disable(%struct.device* nocapture noundef readonly %0) #15 !dbg !9754 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9756, metadata !DIExpression()), !dbg !9759
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9760
  %3 = bitcast i8** %2 to %struct.uart_sam0_dev_cfg**, !dbg !9760
  %4 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !9760
  call void @llvm.dbg.value(metadata %struct.uart_sam0_dev_cfg* %4, metadata !9757, metadata !DIExpression()), !dbg !9759
  %5 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %4, i32 0, i32 0, !dbg !9761
  %6 = load %struct.SercomUsart*, %struct.SercomUsart** %5, align 4, !dbg !9761
  call void @llvm.dbg.value(metadata %struct.SercomUsart* %6, metadata !9758, metadata !DIExpression()), !dbg !9759
  %7 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %6, i32 0, i32 6, i32 0, i32 0, !dbg !9762
  %8 = load volatile i8, i8* %7, align 4, !dbg !9763
  %9 = or i8 %8, -128, !dbg !9763
  store volatile i8 %9, i8* %7, align 4, !dbg !9763
  tail call fastcc void @wait_synchronization.56(%struct.SercomUsart* noundef %6) #25, !dbg !9764
  ret void, !dbg !9765
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_sam0_irq_is_pending(%struct.device* nocapture noundef readonly %0) #17 !dbg !9766 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9768, metadata !DIExpression()), !dbg !9771
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9772
  %3 = bitcast i8** %2 to %struct.uart_sam0_dev_cfg**, !dbg !9772
  %4 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !9772
  call void @llvm.dbg.value(metadata %struct.uart_sam0_dev_cfg* %4, metadata !9769, metadata !DIExpression()), !dbg !9771
  %5 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %4, i32 0, i32 0, !dbg !9773
  %6 = load %struct.SercomUsart*, %struct.SercomUsart** %5, align 4, !dbg !9773
  call void @llvm.dbg.value(metadata %struct.SercomUsart* %6, metadata !9770, metadata !DIExpression()), !dbg !9771
  %7 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %6, i32 0, i32 8, i32 0, i32 0, !dbg !9774
  %8 = load volatile i8, i8* %7, align 2, !dbg !9774
  %9 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %6, i32 0, i32 10, i32 0, i32 0, !dbg !9775
  %10 = load volatile i8, i8* %9, align 4, !dbg !9775
  %11 = and i8 %10, %8, !dbg !9776
  %12 = icmp ne i8 %11, 0, !dbg !9777
  %13 = zext i1 %12 to i32, !dbg !9777
  ret i32 %13, !dbg !9778
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @uart_sam0_irq_update(%struct.device* nocapture noundef readonly %0) #15 !dbg !9779 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9781, metadata !DIExpression()), !dbg !9784
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9785
  %3 = bitcast i8** %2 to %struct.uart_sam0_dev_cfg**, !dbg !9785
  %4 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !9785
  call void @llvm.dbg.value(metadata %struct.uart_sam0_dev_cfg* %4, metadata !9782, metadata !DIExpression()), !dbg !9784
  %5 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %4, i32 0, i32 0, !dbg !9786
  %6 = load %struct.SercomUsart*, %struct.SercomUsart** %5, align 4, !dbg !9786
  call void @llvm.dbg.value(metadata %struct.SercomUsart* %6, metadata !9783, metadata !DIExpression()), !dbg !9784
  %7 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %6, i32 0, i32 10, i32 0, i32 0, !dbg !9787
  %8 = load volatile i8, i8* %7, align 4, !dbg !9788
  %9 = or i8 %8, -72, !dbg !9788
  store volatile i8 %9, i8* %7, align 4, !dbg !9788
  ret i32 1, !dbg !9789
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal void @uart_sam0_irq_callback_set(%struct.device* nocapture noundef readonly %0, void (%struct.device*, i8*)* noundef %1, i8* noundef %2) #7 !dbg !9790 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9792, metadata !DIExpression()), !dbg !9796
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* %1, metadata !9793, metadata !DIExpression()), !dbg !9796
  call void @llvm.dbg.value(metadata i8* %2, metadata !9794, metadata !DIExpression()), !dbg !9796
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9797
  %5 = bitcast i8** %4 to %struct.uart_sam0_dev_data**, !dbg !9797
  %6 = load %struct.uart_sam0_dev_data*, %struct.uart_sam0_dev_data** %5, align 4, !dbg !9797
  call void @llvm.dbg.value(metadata %struct.uart_sam0_dev_data* %6, metadata !9795, metadata !DIExpression()), !dbg !9796
  %7 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %6, i32 0, i32 1, !dbg !9798
  store void (%struct.device*, i8*)* %1, void (%struct.device*, i8*)** %7, align 4, !dbg !9799
  %8 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %6, i32 0, i32 2, !dbg !9800
  store i8* %2, i8** %8, align 4, !dbg !9801
  ret void, !dbg !9802
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @wait_synchronization.56(%struct.SercomUsart* noundef %0) unnamed_addr #15 !dbg !9803 {
  call void @llvm.dbg.value(metadata %struct.SercomUsart* %0, metadata !9807, metadata !DIExpression()), !dbg !9808
  %2 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %0, i32 0, i32 13, i32 0, i32 0
  br label %3, !dbg !9809

3:                                                ; preds = %3, %1
  %4 = load volatile i32, i32* %2, align 4, !dbg !9810
  %5 = and i32 %4, 31, !dbg !9811
  %6 = icmp eq i32 %5, 0, !dbg !9812
  br i1 %6, label %7, label %3, !dbg !9809, !llvm.loop !9813

7:                                                ; preds = %3
  ret void, !dbg !9815
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @uart_sam0_set_baudrate(%struct.SercomUsart* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9816 {
  call void @llvm.dbg.value(metadata %struct.SercomUsart* %0, metadata !9820, metadata !DIExpression()), !dbg !9825
  call void @llvm.dbg.value(metadata i32 %1, metadata !9821, metadata !DIExpression()), !dbg !9825
  call void @llvm.dbg.value(metadata i32 120000000, metadata !9822, metadata !DIExpression()), !dbg !9825
  call void @llvm.dbg.value(metadata i32 %1, metadata !9823, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_constu, 20, DW_OP_shl, DW_OP_stack_value)), !dbg !9825
  call void @llvm.dbg.value(metadata i64 undef, metadata !9823, metadata !DIExpression()), !dbg !9825
  %3 = add i32 %1, -7499943, !dbg !9826
  %4 = icmp ult i32 %3, -7499885, !dbg !9826
  br i1 %4, label %13, label %5, !dbg !9826

5:                                                ; preds = %2
  %6 = zext i32 %1 to i64, !dbg !9828
  call void @llvm.dbg.value(metadata i64 %6, metadata !9823, metadata !DIExpression(DW_OP_constu, 20, DW_OP_shl, DW_OP_stack_value)), !dbg !9825
  %7 = shl nuw nsw i64 %6, 20, !dbg !9829
  call void @llvm.dbg.value(metadata i64 %7, metadata !9823, metadata !DIExpression()), !dbg !9825
  %8 = add nuw nsw i64 %7, 60000000, !dbg !9830
  %9 = udiv i64 %8, 120000000, !dbg !9831
  call void @llvm.dbg.value(metadata i64 %9, metadata !9823, metadata !DIExpression()), !dbg !9825
  %10 = trunc i64 %9 to i16, !dbg !9832
  %11 = sub i16 0, %10, !dbg !9833
  call void @llvm.dbg.value(metadata i16 %11, metadata !9824, metadata !DIExpression()), !dbg !9825
  %12 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %0, i32 0, i32 3, i32 0, i32 0, !dbg !9834
  store volatile i16 %11, i16* %12, align 4, !dbg !9835
  tail call fastcc void @wait_synchronization.56(%struct.SercomUsart* noundef %0) #25, !dbg !9836
  br label %13, !dbg !9837

13:                                               ; preds = %2, %5
  %14 = phi i32 [ 0, %5 ], [ -34, %2 ], !dbg !9825
  ret i32 %14, !dbg !9838
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_sam0_irq_config_0(%struct.device* nocapture noundef readnone %0) #1 !dbg !1936 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1938, metadata !DIExpression()), !dbg !9839
  tail call void @z_arm_irq_priority_set(i32 noundef 58, i32 noundef 0, i32 noundef 0) #24, !dbg !9840
  tail call void @arch_irq_enable(i32 noundef 58) #24, !dbg !9843
  tail call void @z_arm_irq_priority_set(i32 noundef 59, i32 noundef 0, i32 noundef 0) #24, !dbg !9844
  tail call void @arch_irq_enable(i32 noundef 59) #24, !dbg !9847
  tail call void @z_arm_irq_priority_set(i32 noundef 60, i32 noundef 0, i32 noundef 0) #24, !dbg !9848
  tail call void @arch_irq_enable(i32 noundef 60) #24, !dbg !9851
  tail call void @z_arm_irq_priority_set(i32 noundef 61, i32 noundef 0, i32 noundef 0) #24, !dbg !9852
  tail call void @arch_irq_enable(i32 noundef 61) #24, !dbg !9855
  ret void, !dbg !9856
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_sam0_isr(%struct.device* noundef %0) #1 !dbg !9857 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9859, metadata !DIExpression()), !dbg !9861
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9862
  %3 = bitcast i8** %2 to %struct.uart_sam0_dev_data**, !dbg !9862
  %4 = load %struct.uart_sam0_dev_data*, %struct.uart_sam0_dev_data** %3, align 4, !dbg !9862
  call void @llvm.dbg.value(metadata %struct.uart_sam0_dev_data* %4, metadata !9860, metadata !DIExpression()), !dbg !9861
  %5 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %4, i32 0, i32 1, !dbg !9863
  %6 = load void (%struct.device*, i8*)*, void (%struct.device*, i8*)** %5, align 4, !dbg !9863
  %7 = icmp eq void (%struct.device*, i8*)* %6, null, !dbg !9865
  br i1 %7, label %11, label %8, !dbg !9866

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %4, i32 0, i32 2, !dbg !9867
  %10 = load i8*, i8** %9, align 4, !dbg !9867
  tail call void %6(%struct.device* noundef nonnull %0, i8* noundef %10) #24, !dbg !9869
  br label %11, !dbg !9870

11:                                               ; preds = %8, %1
  ret void, !dbg !9871
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_sam0_init(%struct.device* noundef %0) #1 !dbg !9872 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9874, metadata !DIExpression()), !dbg !9879
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9880
  %3 = bitcast i8** %2 to %struct.uart_sam0_dev_cfg**, !dbg !9880
  %4 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !9880
  call void @llvm.dbg.value(metadata %struct.uart_sam0_dev_cfg* %4, metadata !9876, metadata !DIExpression()), !dbg !9879
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9881
  %6 = bitcast i8** %5 to %struct.uart_sam0_dev_data**, !dbg !9881
  %7 = load %struct.uart_sam0_dev_data*, %struct.uart_sam0_dev_data** %6, align 4, !dbg !9881
  call void @llvm.dbg.value(metadata %struct.uart_sam0_dev_data* %7, metadata !9877, metadata !DIExpression()), !dbg !9879
  %8 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %4, i32 0, i32 0, !dbg !9882
  %9 = load %struct.SercomUsart*, %struct.SercomUsart** %8, align 4, !dbg !9882
  call void @llvm.dbg.value(metadata %struct.SercomUsart* %9, metadata !9878, metadata !DIExpression()), !dbg !9879
  %10 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %4, i32 0, i32 6, !dbg !9883
  %11 = load i16, i16* %10, align 4, !dbg !9883
  %12 = zext i16 %11 to i32, !dbg !9884
  %13 = getelementptr inbounds [48 x %union.PORT_DIR_Type], [48 x %union.PORT_DIR_Type]* inttoptr (i32 1073749120 to [48 x %union.PORT_DIR_Type]*), i32 0, i32 %12, i32 0, i32 0, !dbg !9885
  store volatile i32 64, i32* %13, align 4, !dbg !9886
  %14 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %4, i32 0, i32 5, !dbg !9887
  %15 = load i32, i32* %14, align 4, !dbg !9887
  %16 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %4, i32 0, i32 4, !dbg !9888
  %17 = load i32*, i32** %16, align 4, !dbg !9888
  %18 = load volatile i32, i32* %17, align 4, !dbg !9889
  %19 = or i32 %18, %15, !dbg !9889
  store volatile i32 %19, i32* %17, align 4, !dbg !9889
  %20 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %9, i32 0, i32 6, i32 0, i32 0, !dbg !9890
  store volatile i8 -65, i8* %20, align 4, !dbg !9891
  tail call fastcc void @wait_synchronization.56(%struct.SercomUsart* noundef %9) #25, !dbg !9892
  %21 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %4, i32 0, i32 2, !dbg !9893
  %22 = load i32, i32* %21, align 4, !dbg !9893
  %23 = or i32 %22, 1610612740, !dbg !9894
  %24 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %9, i32 0, i32 0, i32 0, i32 0, !dbg !9895
  store volatile i32 %23, i32* %24, align 4, !dbg !9896
  tail call fastcc void @wait_synchronization.56(%struct.SercomUsart* noundef %9) #25, !dbg !9897
  %25 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %4, i32 0, i32 8, !dbg !9898
  %26 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %25, align 4, !dbg !9898
  %27 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %26) #25, !dbg !9899
  call void @llvm.dbg.value(metadata i32 %27, metadata !9875, metadata !DIExpression()), !dbg !9879
  %28 = icmp slt i32 %27, 0, !dbg !9900
  br i1 %28, label %46, label %29, !dbg !9902

29:                                               ; preds = %1
  %30 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %7, i32 0, i32 0, i32 4, !dbg !9903
  store i8 0, i8* %30, align 1, !dbg !9904
  %31 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %7, i32 0, i32 0, i32 1, !dbg !9905
  store i8 0, i8* %31, align 4, !dbg !9906
  %32 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %7, i32 0, i32 0, i32 2, !dbg !9907
  store i8 1, i8* %32, align 1, !dbg !9908
  %33 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %7, i32 0, i32 0, i32 3, !dbg !9909
  store i8 3, i8* %33, align 2, !dbg !9910
  %34 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %9, i32 0, i32 1, i32 0, i32 0, !dbg !9911
  store volatile i32 196608, i32* %34, align 4, !dbg !9912
  tail call fastcc void @wait_synchronization.56(%struct.SercomUsart* noundef nonnull %9) #25, !dbg !9913
  %35 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %4, i32 0, i32 1, !dbg !9914
  %36 = load i32, i32* %35, align 4, !dbg !9914
  %37 = tail call fastcc i32 @uart_sam0_set_baudrate(%struct.SercomUsart* noundef nonnull %9, i32 noundef %36) #25, !dbg !9915
  call void @llvm.dbg.value(metadata i32 %37, metadata !9875, metadata !DIExpression()), !dbg !9879
  %38 = icmp eq i32 %37, 0, !dbg !9916
  br i1 %38, label %39, label %46, !dbg !9918

39:                                               ; preds = %29
  %40 = load i32, i32* %35, align 4, !dbg !9919
  %41 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %7, i32 0, i32 0, i32 0, !dbg !9920
  store i32 %40, i32* %41, align 4, !dbg !9921
  %42 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %4, i32 0, i32 7, !dbg !9922
  %43 = load void (%struct.device*)*, void (%struct.device*)** %42, align 4, !dbg !9922
  tail call void %43(%struct.device* noundef nonnull %0) #24, !dbg !9923
  %44 = load volatile i32, i32* %24, align 4, !dbg !9924
  %45 = or i32 %44, 2, !dbg !9924
  store volatile i32 %45, i32* %24, align 4, !dbg !9924
  tail call fastcc void @wait_synchronization.56(%struct.SercomUsart* noundef nonnull %9) #25, !dbg !9925
  br label %46, !dbg !9926

46:                                               ; preds = %29, %1, %39
  %47 = phi i32 [ 0, %39 ], [ %27, %1 ], [ %37, %29 ], !dbg !9879
  ret i32 %47, !dbg !9927
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !9928 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !9932, metadata !DIExpression()), !dbg !9936
  call void @llvm.dbg.value(metadata i8 0, metadata !9933, metadata !DIExpression()), !dbg !9936
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !9937
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !9937
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !9935, metadata !DIExpression(DW_OP_deref)), !dbg !9936
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #24, !dbg !9938
  call void @llvm.dbg.value(metadata i32 %4, metadata !9934, metadata !DIExpression()), !dbg !9936
  %5 = icmp slt i32 %4, 0, !dbg !9939
  br i1 %5, label %9, label %6, !dbg !9941

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !9942
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !9935, metadata !DIExpression()), !dbg !9936
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #25, !dbg !9943
  br label %9, !dbg !9944

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !9936
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !9945
  ret i32 %10, !dbg !9945
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !9946 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !9950, metadata !DIExpression()), !dbg !9953
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !9951, metadata !DIExpression()), !dbg !9953
  call void @llvm.dbg.value(metadata i32 0, metadata !9952, metadata !DIExpression()), !dbg !9953
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !9954
  %3 = load i32*, i32** %2, align 4, !dbg !9954
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !9955
  %5 = load i8, i8* %4, align 4, !dbg !9955
  %6 = tail call i32 @pinctrl_configure_pins(i32* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #24, !dbg !9956
  ret i32 %6, !dbg !9957
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #15 !dbg !9958 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9960, metadata !DIExpression()), !dbg !9961
  tail call fastcc void @__NVIC_SetPriority.59() #25, !dbg !9962
  store i32 11999, i32* @last_load, align 4, !dbg !9963
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !9964
  store volatile i32 11999, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !9965
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !9966
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9967
  %3 = or i32 %2, 7, !dbg !9967
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9967
  ret i32 0, !dbg !9968
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.59() unnamed_addr #15 !dbg !9969 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !9971, metadata !DIExpression()), !dbg !9973
  call void @llvm.dbg.value(metadata i32 1, metadata !9972, metadata !DIExpression()), !dbg !9973
  store volatile i8 32, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !9974
  ret void, !dbg !9977
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !9978 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9980, metadata !DIExpression()), !dbg !9982
  %2 = tail call fastcc i32 @elapsed() #25, !dbg !9983
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !9984
  %4 = load i32, i32* @cycle_count, align 4, !dbg !9985
  %5 = add i32 %4, %3, !dbg !9985
  store i32 %5, i32* @cycle_count, align 4, !dbg !9985
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !9986
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !9987
  %7 = sub i32 %5, %6, !dbg !9990
  %8 = udiv i32 %7, 12000, !dbg !9991
  call void @llvm.dbg.value(metadata i32 %8, metadata !9981, metadata !DIExpression()), !dbg !9982
  %9 = mul nuw i32 %8, 12000, !dbg !9992
  %10 = add i32 %9, %6, !dbg !9993
  store i32 %10, i32* @announced_cycles, align 4, !dbg !9993
  tail call void @sys_clock_announce(i32 noundef %8) #24, !dbg !9994
  tail call void @z_arm_int_exit() #24, !dbg !9995
  ret void, !dbg !9996
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #15 !dbg !9997 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10002
  call void @llvm.dbg.value(metadata i32 %1, metadata !9999, metadata !DIExpression()), !dbg !10003
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10004
  call void @llvm.dbg.value(metadata i32 %2, metadata !10000, metadata !DIExpression()), !dbg !10003
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10005
  call void @llvm.dbg.value(metadata i32 %3, metadata !10001, metadata !DIExpression()), !dbg !10003
  %4 = and i32 %2, 65536, !dbg !10006
  %5 = icmp ne i32 %4, 0, !dbg !10006
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !10008
  %8 = load i32, i32* @last_load, align 4, !dbg !10003
  br i1 %7, label %9, label %13, !dbg !10008

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10009
  %11 = add i32 %10, %8, !dbg !10009
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !10009
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10011
  br label %13, !dbg !10012

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !10013
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10014
  %16 = add i32 %14, %15, !dbg !10015
  ret i32 %16, !dbg !10016
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !10017 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10021, metadata !DIExpression()), !dbg !10034
  call void @llvm.dbg.value(metadata i1 %1, metadata !10022, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10034
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !10035
  br i1 %4, label %5, label %8, !dbg !10035

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10037
  %7 = and i32 %6, -2, !dbg !10037
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10037
  store i32 -16777216, i32* @last_load, align 4, !dbg !10039
  br label %54, !dbg !10040

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !10041
  call void @llvm.dbg.value(metadata i32 %9, metadata !10026, metadata !DIExpression()), !dbg !10034
  br i1 %3, label %18, label %10, !dbg !10042

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !10042
  call void @llvm.dbg.value(metadata i32 undef, metadata !10021, metadata !DIExpression()), !dbg !10034
  %12 = icmp slt i32 %11, 1, !dbg !10043
  br i1 %12, label %18, label %13, !dbg !10043

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1397, !dbg !10043
  %15 = select i1 %14, i32 %11, i32 1397, !dbg !10043
  %16 = mul nuw nsw i32 %15, 12000, !dbg !10043
  %17 = add nuw nsw i32 %16, 11999, !dbg !10043
  br label %18, !dbg !10043

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 11999, %10 ], [ 16763999, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !10021, metadata !DIExpression()), !dbg !10034
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10044, metadata !DIExpression()) #23, !dbg !10051
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #23, !dbg !10053, !srcloc !10059
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !10053
  call void @llvm.dbg.value(metadata i32 %21, metadata !10056, metadata !DIExpression()) #23, !dbg !10060
  call void @llvm.dbg.value(metadata i32 undef, metadata !10057, metadata !DIExpression()) #23, !dbg !10060
  call void @llvm.dbg.value(metadata i32 %21, metadata !10050, metadata !DIExpression()) #23, !dbg !10051
  call void @llvm.dbg.value(metadata i32 %21, metadata !10027, metadata !DIExpression()), !dbg !10034
  %22 = tail call fastcc i32 @elapsed() #25, !dbg !10061
  call void @llvm.dbg.value(metadata i32 %22, metadata !10032, metadata !DIExpression()), !dbg !10034
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10062
  call void @llvm.dbg.value(metadata i32 %23, metadata !10024, metadata !DIExpression()), !dbg !10034
  %24 = load i32, i32* @cycle_count, align 4, !dbg !10063
  %25 = add i32 %24, %22, !dbg !10063
  store i32 %25, i32* @cycle_count, align 4, !dbg !10063
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10064
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !10065
  %27 = sub i32 %25, %26, !dbg !10066
  call void @llvm.dbg.value(metadata i32 %27, metadata !10033, metadata !DIExpression()), !dbg !10034
  %28 = icmp slt i32 %27, 0, !dbg !10067
  br i1 %28, label %38, label %29, !dbg !10069

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !10023, metadata !DIExpression()), !dbg !10034
  call void @llvm.dbg.value(metadata i32 undef, metadata !10023, metadata !DIExpression()), !dbg !10034
  %30 = add nuw i32 %19, %27, !dbg !10070
  %31 = urem i32 %30, 12000, !dbg !10072
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !10023, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10034
  %32 = sub nuw nsw i32 %19, %31, !dbg !10073
  call void @llvm.dbg.value(metadata i32 %32, metadata !10023, metadata !DIExpression()), !dbg !10034
  %33 = icmp ugt i32 %32, 1024, !dbg !10074
  br i1 %33, label %34, label %36, !dbg !10074

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !10023, metadata !DIExpression()), !dbg !10034
  %35 = icmp ugt i32 %32, 16764000, !dbg !10075
  br i1 %35, label %38, label %36, !dbg !10077

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1024, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1024, %18 ], [ 16764000, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !10078
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10079
  call void @llvm.dbg.value(metadata i32 %40, metadata !10025, metadata !DIExpression()), !dbg !10034
  %41 = add nsw i32 %39, -1, !dbg !10080
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10081
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10082
  %42 = icmp ult i32 %23, %40, !dbg !10083
  br i1 %42, label %43, label %48, !dbg !10085

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !10086
  %45 = add i32 %23, %9, !dbg !10088
  %46 = sub i32 %45, %40, !dbg !10089
  %47 = add i32 %46, %44, !dbg !10086
  br label %52, !dbg !10090

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !10091
  %50 = load i32, i32* @cycle_count, align 4, !dbg !10093
  %51 = add i32 %49, %50, !dbg !10093
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !10094
  store i32 %53, i32* @cycle_count, align 4, !dbg !10094
  call void @llvm.dbg.value(metadata i32 %21, metadata !10095, metadata !DIExpression()) #23, !dbg !10101
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10100, metadata !DIExpression()) #23, !dbg !10101
  call void @llvm.dbg.value(metadata i32 %21, metadata !10103, metadata !DIExpression()) #23, !dbg !10106
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #23, !dbg !10108, !srcloc !10109
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !10110
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !10111 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10044, metadata !DIExpression()) #23, !dbg !10115
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #23, !dbg !10117, !srcloc !10059
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !10117
  call void @llvm.dbg.value(metadata i32 %2, metadata !10056, metadata !DIExpression()) #23, !dbg !10119
  call void @llvm.dbg.value(metadata i32 undef, metadata !10057, metadata !DIExpression()) #23, !dbg !10119
  call void @llvm.dbg.value(metadata i32 %2, metadata !10050, metadata !DIExpression()) #23, !dbg !10115
  call void @llvm.dbg.value(metadata i32 %2, metadata !10113, metadata !DIExpression()), !dbg !10120
  %3 = tail call fastcc i32 @elapsed() #25, !dbg !10121
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10122
  %5 = add i32 %4, %3, !dbg !10123
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !10124
  %7 = sub i32 %5, %6, !dbg !10125
  call void @llvm.dbg.value(metadata i32 %7, metadata !10114, metadata !DIExpression()), !dbg !10120
  call void @llvm.dbg.value(metadata i32 %2, metadata !10095, metadata !DIExpression()) #23, !dbg !10126
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10100, metadata !DIExpression()) #23, !dbg !10126
  call void @llvm.dbg.value(metadata i32 %2, metadata !10103, metadata !DIExpression()) #23, !dbg !10128
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !10130, !srcloc !10109
  %8 = udiv i32 %7, 12000, !dbg !10131
  ret i32 %8, !dbg !10132
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !10133 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10044, metadata !DIExpression()) #23, !dbg !10137
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #23, !dbg !10139, !srcloc !10059
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !10139
  call void @llvm.dbg.value(metadata i32 %2, metadata !10056, metadata !DIExpression()) #23, !dbg !10141
  call void @llvm.dbg.value(metadata i32 undef, metadata !10057, metadata !DIExpression()) #23, !dbg !10141
  call void @llvm.dbg.value(metadata i32 %2, metadata !10050, metadata !DIExpression()) #23, !dbg !10137
  call void @llvm.dbg.value(metadata i32 %2, metadata !10135, metadata !DIExpression()), !dbg !10142
  %3 = tail call fastcc i32 @elapsed() #25, !dbg !10143
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10144
  %5 = add i32 %4, %3, !dbg !10145
  call void @llvm.dbg.value(metadata i32 %5, metadata !10136, metadata !DIExpression()), !dbg !10142
  call void @llvm.dbg.value(metadata i32 %2, metadata !10095, metadata !DIExpression()) #23, !dbg !10146
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10100, metadata !DIExpression()) #23, !dbg !10146
  call void @llvm.dbg.value(metadata i32 %2, metadata !10103, metadata !DIExpression()) #23, !dbg !10148
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !10150, !srcloc !10109
  ret i32 %5, !dbg !10151
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #15 !dbg !10152 {
  %1 = load i32, i32* @last_load, align 4, !dbg !10153
  %2 = icmp eq i32 %1, -16777216, !dbg !10155
  br i1 %2, label %3, label %6, !dbg !10156

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10157
  %5 = or i32 %4, 1, !dbg !10157
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10157
  br label %6, !dbg !10159

6:                                                ; preds = %3, %0
  ret void, !dbg !10160
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #15 !dbg !10161 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10162
  %2 = and i32 %1, -2, !dbg !10162
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10162
  ret void, !dbg !10163
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #13 !dbg !10164 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10183, metadata !DIExpression()), !dbg !10186
  call void @llvm.dbg.value(metadata i8 %1, metadata !10184, metadata !DIExpression()), !dbg !10186
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10185, metadata !DIExpression()), !dbg !10186
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !10187
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10187
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !10186
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10188
  %8 = load i8, i8* %6, align 4, !dbg !10189
  %9 = zext i8 %8 to i32, !dbg !10190
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !10190
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !10191
  br i1 %11, label %18, label %24, !dbg !10192

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !10186
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10188
  %14 = load i8, i8* %6, align 4, !dbg !10189
  %15 = zext i8 %14 to i32, !dbg !10190
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !10190
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !10191
  br i1 %17, label %18, label %24, !dbg !10192, !llvm.loop !10193

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !10195
  %21 = load i8, i8* %20, align 1, !dbg !10195
  %22 = icmp eq i8 %21, %1, !dbg !10198
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !10199
  br i1 %22, label %24, label %12, !dbg !10200

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !10186
  ret i32 %25, !dbg !10201
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(i32* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !10202 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !10206, metadata !DIExpression()), !dbg !10211
  call void @llvm.dbg.value(metadata i8 %1, metadata !10207, metadata !DIExpression()), !dbg !10211
  call void @llvm.dbg.value(metadata i32 %2, metadata !10208, metadata !DIExpression()), !dbg !10211
  call void @llvm.dbg.value(metadata i8 0, metadata !10209, metadata !DIExpression()), !dbg !10212
  %4 = icmp eq i8 %1, 0, !dbg !10213
  br i1 %4, label %5, label %6, !dbg !10215

5:                                                ; preds = %6, %3
  ret i32 0, !dbg !10216

6:                                                ; preds = %3, %6
  %7 = phi i8 [ %11, %6 ], [ 0, %3 ]
  %8 = phi i32* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i8 %7, metadata !10209, metadata !DIExpression()), !dbg !10212
  call void @llvm.dbg.value(metadata i32* %8, metadata !10206, metadata !DIExpression()), !dbg !10211
  %9 = getelementptr inbounds i32, i32* %8, i32 1, !dbg !10217
  call void @llvm.dbg.value(metadata i32* %9, metadata !10206, metadata !DIExpression()), !dbg !10211
  %10 = load i32, i32* %8, align 4, !dbg !10219
  tail call fastcc void @pinctrl_configure_pin(i32 noundef %10) #25, !dbg !10220
  %11 = add nuw i8 %7, 1, !dbg !10221
  call void @llvm.dbg.value(metadata i8 %11, metadata !10209, metadata !DIExpression()), !dbg !10212
  %12 = icmp ult i8 %11, %1, !dbg !10213
  br i1 %12, label %6, label %5, !dbg !10215, !llvm.loop !10222
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pinctrl_configure_pin(i32 noundef %0) unnamed_addr #1 !dbg !10224 {
  %2 = alloca %struct.soc_port_pin, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !10228, metadata !DIExpression()), !dbg !10237
  %3 = bitcast %struct.soc_port_pin* %2 to i8*, !dbg !10238
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %3) #23, !dbg !10238
  call void @llvm.dbg.declare(metadata %struct.soc_port_pin* %2, metadata !10229, metadata !DIExpression()), !dbg !10239
  %4 = lshr i32 %0, 16, !dbg !10240
  %5 = and i32 %4, 15, !dbg !10240
  call void @llvm.dbg.value(metadata i32 %4, metadata !10235, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !10237
  call void @llvm.dbg.value(metadata i32 %0, metadata !10236, metadata !DIExpression(DW_OP_constu, 25, DW_OP_shr, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !10237
  %6 = getelementptr inbounds [4 x i32], [4 x i32]* @sam_port_addrs, i32 0, i32 %5, !dbg !10241
  %7 = load i32, i32* %6, align 4, !dbg !10241
  %8 = inttoptr i32 %7 to %struct.PortGroup*, !dbg !10242
  %9 = getelementptr inbounds %struct.soc_port_pin, %struct.soc_port_pin* %2, i32 0, i32 0, !dbg !10243
  store %struct.PortGroup* %8, %struct.PortGroup** %9, align 4, !dbg !10244
  %10 = lshr i32 %0, 20, !dbg !10245
  %11 = and i32 %10, 31, !dbg !10245
  %12 = getelementptr inbounds %struct.soc_port_pin, %struct.soc_port_pin* %2, i32 0, i32 1, !dbg !10246
  store i32 %11, i32* %12, align 4, !dbg !10247
  %13 = and i32 %0, 63, !dbg !10248
  %14 = and i32 %0, 234881024, !dbg !10249
  %15 = icmp eq i32 %14, 33554432, !dbg !10249
  %16 = lshr i32 %0, 12, !dbg !10251
  %17 = and i32 %16, 983040, !dbg !10251
  %18 = or i32 %17, 64, !dbg !10251
  %19 = select i1 %15, i32 %18, i32 0, !dbg !10251
  %20 = or i32 %19, %13, !dbg !10251
  %21 = getelementptr inbounds %struct.soc_port_pin, %struct.soc_port_pin* %2, i32 0, i32 2, !dbg !10252
  store i32 %20, i32* %21, align 4, !dbg !10237
  call void @soc_port_configure(%struct.soc_port_pin* noundef nonnull %2) #24, !dbg !10253
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %3) #23, !dbg !10254
  ret void, !dbg !10254
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #21 !dbg !10255 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !10258, metadata !DIExpression()), !dbg !10274
  call void @llvm.dbg.value(metadata i32 undef, metadata !10258, metadata !DIExpression()), !dbg !10274
  call void @llvm.dbg.value(metadata i32 undef, metadata !10258, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !10274
  ret void, !dbg !10275
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !10276 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10280, metadata !DIExpression()), !dbg !10282
  %2 = icmp eq i8* %0, null, !dbg !10283
  br i1 %2, label %29, label %3, !dbg !10285

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !10286
  %5 = icmp eq i8 %4, 0, !dbg !10287
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !10288
  br i1 %6, label %29, label %8, !dbg !10288

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !10281, metadata !DIExpression()), !dbg !10282
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !10289

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !10281, metadata !DIExpression()), !dbg !10282
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #25, !dbg !10291
  br i1 %10, label %11, label %15, !dbg !10296

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !10297
  %13 = load i8*, i8** %12, align 4, !dbg !10297
  %14 = icmp eq i8* %13, %0, !dbg !10298
  br i1 %14, label %29, label %15, !dbg !10299

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !10300
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !10281, metadata !DIExpression()), !dbg !10282
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !10301
  br i1 %17, label %7, label %8, !dbg !10302, !llvm.loop !10303

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !10281, metadata !DIExpression()), !dbg !10282
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #25, !dbg !10305
  br i1 %20, label %21, label %26, !dbg !10309

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !10310
  %23 = load i8*, i8** %22, align 4, !dbg !10310
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #24, !dbg !10311
  %25 = icmp eq i32 %24, 0, !dbg !10312
  br i1 %25, label %29, label %26, !dbg !10313

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !10314
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !10281, metadata !DIExpression()), !dbg !10282
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !10315
  br i1 %28, label %29, label %18, !dbg !10289, !llvm.loop !10316

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !10282
  ret %struct.device* %30, !dbg !10318
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #5 !dbg !10319 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10323, metadata !DIExpression()), !dbg !10324
  %2 = icmp eq %struct.device* %0, null, !dbg !10325
  br i1 %2, label %14, label %3, !dbg !10327

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !10328
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !10328
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !10329
  %7 = load i8, i8* %6, align 1, !dbg !10329
  %8 = and i8 %7, 1, !dbg !10329
  %9 = icmp eq i8 %8, 0, !dbg !10329
  br i1 %9, label %14, label %10, !dbg !10330

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !10331
  %12 = load i8, i8* %11, align 1, !dbg !10331
  %13 = icmp eq i8 %12, 0, !dbg !10332
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !10324
  ret i1 %15, !dbg !10333
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #4 !dbg !10334 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !10339, metadata !DIExpression()), !dbg !10340
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !10341
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !10342
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !10343 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10351, metadata !DIExpression()), !dbg !10356
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !10352, metadata !DIExpression()), !dbg !10356
  call void @llvm.dbg.value(metadata i8* %2, metadata !10353, metadata !DIExpression()), !dbg !10356
  %5 = bitcast i32* %4 to i8*, !dbg !10357
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !10357
  call void @llvm.dbg.value(metadata i32 0, metadata !10354, metadata !DIExpression()), !dbg !10356
  store i32 0, i32* %4, align 4, !dbg !10358
  call void @llvm.dbg.value(metadata i32* %4, metadata !10354, metadata !DIExpression(DW_OP_deref)), !dbg !10356
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #25, !dbg !10359
  call void @llvm.dbg.value(metadata i16* %6, metadata !10355, metadata !DIExpression()), !dbg !10356
  %7 = load i32, i32* %4, align 4, !dbg !10360
  call void @llvm.dbg.value(metadata i32 %7, metadata !10354, metadata !DIExpression()), !dbg !10356
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #25, !dbg !10361
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !10362
  ret i32 %8, !dbg !10363
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !10364 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10368, metadata !DIExpression()), !dbg !10374
  call void @llvm.dbg.value(metadata i32* %1, metadata !10369, metadata !DIExpression()), !dbg !10374
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !10375
  %4 = load i16*, i16** %3, align 4, !dbg !10375
  call void @llvm.dbg.value(metadata i16* %4, metadata !10370, metadata !DIExpression()), !dbg !10374
  %5 = icmp eq i16* %4, null, !dbg !10376
  br i1 %5, label %14, label %6, !dbg !10377

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !10378
  call void @llvm.dbg.value(metadata i32 %7, metadata !10371, metadata !DIExpression()), !dbg !10378
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !10379
  %9 = load i16, i16* %8, align 2, !dbg !10379
  %10 = add i16 %9, -32767, !dbg !10380
  %11 = icmp ult i16 %10, 2, !dbg !10380
  %12 = add i32 %7, 1, !dbg !10381
  call void @llvm.dbg.value(metadata i32 %12, metadata !10371, metadata !DIExpression()), !dbg !10378
  br i1 %11, label %13, label %6, !dbg !10380, !llvm.loop !10383

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !10386
  br label %14, !dbg !10387

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !10388
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !10389 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !10393, metadata !DIExpression()), !dbg !10404
  call void @llvm.dbg.value(metadata i32 %1, metadata !10394, metadata !DIExpression()), !dbg !10404
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !10395, metadata !DIExpression()), !dbg !10404
  call void @llvm.dbg.value(metadata i8* %3, metadata !10396, metadata !DIExpression()), !dbg !10404
  call void @llvm.dbg.value(metadata i32 0, metadata !10397, metadata !DIExpression()), !dbg !10405
  %5 = icmp eq i32 %1, 0, !dbg !10406
  br i1 %5, label %16, label %8, !dbg !10407

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !10397, metadata !DIExpression()), !dbg !10405
  %7 = icmp eq i32 %15, %1, !dbg !10406
  br i1 %7, label %16, label %8, !dbg !10407, !llvm.loop !10408

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !10397, metadata !DIExpression()), !dbg !10405
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !10410
  %11 = load i16, i16* %10, align 2, !dbg !10410
  call void @llvm.dbg.value(metadata i16 %11, metadata !10399, metadata !DIExpression()), !dbg !10411
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #25, !dbg !10412
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !10402, metadata !DIExpression()), !dbg !10411
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #24, !dbg !10413
  call void @llvm.dbg.value(metadata i32 %13, metadata !10403, metadata !DIExpression()), !dbg !10411
  %14 = icmp slt i32 %13, 0, !dbg !10414
  %15 = add nuw i32 %9, 1, !dbg !10416
  call void @llvm.dbg.value(metadata i32 %15, metadata !10397, metadata !DIExpression()), !dbg !10405
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !10417
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #11 !dbg !10418 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !10422, metadata !DIExpression()), !dbg !10425
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !10423, metadata !DIExpression()), !dbg !10425
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !10424, metadata !DIExpression()), !dbg !10425
  %2 = sext i16 %0 to i32, !dbg !10426
  %3 = icmp slt i16 %0, 1, !dbg !10428
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !10429
  %6 = add nsw i32 %2, -1, !dbg !10429
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !10429
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !10429
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !10423, metadata !DIExpression()), !dbg !10425
  ret %struct.device* %8, !dbg !10430
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !10431 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10433, metadata !DIExpression()), !dbg !10438
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !10434, metadata !DIExpression()), !dbg !10438
  call void @llvm.dbg.value(metadata i8* %2, metadata !10435, metadata !DIExpression()), !dbg !10438
  %5 = bitcast i32* %4 to i8*, !dbg !10439
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !10439
  call void @llvm.dbg.value(metadata i32 0, metadata !10436, metadata !DIExpression()), !dbg !10438
  store i32 0, i32* %4, align 4, !dbg !10440
  call void @llvm.dbg.value(metadata i32* %4, metadata !10436, metadata !DIExpression(DW_OP_deref)), !dbg !10438
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #25, !dbg !10441
  call void @llvm.dbg.value(metadata i16* %6, metadata !10437, metadata !DIExpression()), !dbg !10438
  %7 = load i32, i32* %4, align 4, !dbg !10442
  call void @llvm.dbg.value(metadata i32 %7, metadata !10436, metadata !DIExpression()), !dbg !10438
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #25, !dbg !10443
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !10444
  ret i32 %8, !dbg !10445
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !10446 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10448, metadata !DIExpression()), !dbg !10453
  call void @llvm.dbg.value(metadata i32* %1, metadata !10449, metadata !DIExpression()), !dbg !10453
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !10454
  %4 = load i16*, i16** %3, align 4, !dbg !10454
  call void @llvm.dbg.value(metadata i16* %4, metadata !10450, metadata !DIExpression()), !dbg !10453
  call void @llvm.dbg.value(metadata i32 0, metadata !10451, metadata !DIExpression()), !dbg !10453
  call void @llvm.dbg.value(metadata i32 0, metadata !10452, metadata !DIExpression()), !dbg !10453
  %5 = icmp eq i16* %4, null, !dbg !10455
  br i1 %5, label %22, label %6, !dbg !10457

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !10451, metadata !DIExpression()), !dbg !10453
  call void @llvm.dbg.value(metadata i16* %8, metadata !10450, metadata !DIExpression()), !dbg !10453
  %9 = load i16, i16* %8, align 2, !dbg !10458
  %10 = icmp eq i16 %9, -32768, !dbg !10462
  call void @llvm.dbg.value(metadata i32 undef, metadata !10451, metadata !DIExpression()), !dbg !10453
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !10463
  call void @llvm.dbg.value(metadata i16* %11, metadata !10450, metadata !DIExpression()), !dbg !10453
  %12 = zext i1 %10 to i32, !dbg !10464
  %13 = add i32 %7, %12, !dbg !10464
  call void @llvm.dbg.value(metadata i32 %13, metadata !10451, metadata !DIExpression()), !dbg !10453
  %14 = icmp eq i32 %13, 2, !dbg !10465
  br i1 %14, label %15, label %6, !dbg !10466

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !10453
  call void @llvm.dbg.value(metadata i32 %16, metadata !10452, metadata !DIExpression()), !dbg !10453
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !10467
  %18 = load i16, i16* %17, align 2, !dbg !10467
  %19 = icmp eq i16 %18, 32767, !dbg !10468
  %20 = add i32 %16, 1, !dbg !10469
  call void @llvm.dbg.value(metadata i32 %20, metadata !10452, metadata !DIExpression()), !dbg !10453
  br i1 %19, label %21, label %15, !dbg !10471, !llvm.loop !10472

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !10474
  br label %22, !dbg !10475

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !10476
  call void @llvm.dbg.value(metadata i16* %23, metadata !10450, metadata !DIExpression()), !dbg !10453
  ret i16* %23, !dbg !10477
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #5 !dbg !10478 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10481
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !10482
  ret i32* %2, !dbg !10483
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #11 !dbg !10484 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !10632, metadata !DIExpression()), !dbg !10635
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !10633, metadata !DIExpression()), !dbg !10635
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !10634, metadata !DIExpression()), !dbg !10635
  ret void, !dbg !10636
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !10637 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10641, metadata !DIExpression()), !dbg !10643
  call void @llvm.dbg.value(metadata i32 %1, metadata !10642, metadata !DIExpression()), !dbg !10643
  ret void, !dbg !10644
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !10645 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10649, metadata !DIExpression()), !dbg !10651
  call void @llvm.dbg.value(metadata i32 %1, metadata !10650, metadata !DIExpression()), !dbg !10651
  ret void, !dbg !10652
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !10653 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10657, metadata !DIExpression()), !dbg !10659
  call void @llvm.dbg.value(metadata i8* %1, metadata !10658, metadata !DIExpression()), !dbg !10659
  ret i32 -134, !dbg !10660
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !10661 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10665, metadata !DIExpression()), !dbg !10667
  call void @llvm.dbg.value(metadata i8* %1, metadata !10666, metadata !DIExpression()), !dbg !10667
  ret i32 -134, !dbg !10668
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #8 !dbg !10669 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10672, metadata !DIExpression()), !dbg !10673
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #23, !dbg !10674, !srcloc !10680
  call void @llvm.dbg.value(metadata i32 undef, metadata !10677, metadata !DIExpression()) #23, !dbg !10681
  call void @llvm.dbg.value(metadata i32 undef, metadata !10678, metadata !DIExpression()) #23, !dbg !10681
  br label %3, !dbg !10682

3:                                                ; preds = %3, %1
  br label %3, !dbg !10683, !llvm.loop !10686
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !10689 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10693, metadata !DIExpression()), !dbg !10695
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !10694, metadata !DIExpression()), !dbg !10695
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !10696
  unreachable, !dbg !10696
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #8 !dbg !10697 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10699, metadata !DIExpression()), !dbg !10700
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !10701
  unreachable, !dbg !10701
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !10702 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10704, metadata !DIExpression()), !dbg !10708
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !10705, metadata !DIExpression()), !dbg !10708
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #23, !dbg !10709, !srcloc !10680
  call void @llvm.dbg.value(metadata i32 undef, metadata !10677, metadata !DIExpression()) #23, !dbg !10711
  call void @llvm.dbg.value(metadata i32 undef, metadata !10678, metadata !DIExpression()) #23, !dbg !10711
  call void @llvm.dbg.value(metadata i32 undef, metadata !10706, metadata !DIExpression()), !dbg !10708
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !10707, metadata !DIExpression()), !dbg !10708
  %4 = icmp eq %struct.__esf* %1, null, !dbg !10712
  br i1 %4, label %6, label %5, !dbg !10714

5:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #25, !dbg !10715
  br label %7, !dbg !10716

6:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #25, !dbg !10715
  br label %7, !dbg !10719

7:                                                ; preds = %6, %5
  %8 = extractvalue { i32, i32 } %3, 0, !dbg !10709
  call void @llvm.dbg.value(metadata i32 %8, metadata !10677, metadata !DIExpression()) #23, !dbg !10711
  call void @llvm.dbg.value(metadata i32 %8, metadata !10706, metadata !DIExpression()), !dbg !10708
  %9 = tail call fastcc %struct.k_thread* @k_current_get.70() #26, !dbg !10721
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !10707, metadata !DIExpression()), !dbg !10708
  call void @llvm.dbg.value(metadata i32 undef, metadata !10722, metadata !DIExpression()) #23, !dbg !10725
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !10727, !srcloc !10728
  tail call fastcc void @k_thread_abort.71(%struct.k_thread* noundef %9) #25, !dbg !10729
  ret void, !dbg !10732
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.70() unnamed_addr #9 !dbg !10733 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.72() #26, !dbg !10737
  ret %struct.k_thread* %1, !dbg !10738
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.71(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !10739 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10743, metadata !DIExpression()), !dbg !10744
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10745, !srcloc !10747
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #24, !dbg !10748
  ret void, !dbg !10749
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.72() unnamed_addr #9 !dbg !10750 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10751, !srcloc !10753
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #24, !dbg !10754
  ret %struct.k_thread* %1, !dbg !10755
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !10756 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10760, metadata !DIExpression()), !dbg !10763
  call void @llvm.dbg.value(metadata i32 %1, metadata !10761, metadata !DIExpression()), !dbg !10763
  call void @llvm.dbg.value(metadata i32 %2, metadata !10762, metadata !DIExpression()), !dbg !10763
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #24, !dbg !10764
  ret void, !dbg !10765
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !10766 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10770, metadata !DIExpression()), !dbg !10773
  call void @llvm.dbg.value(metadata i8* %1, metadata !10771, metadata !DIExpression()), !dbg !10773
  call void @llvm.dbg.value(metadata i32 %2, metadata !10772, metadata !DIExpression()), !dbg !10773
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #24, !dbg !10774
  ret void, !dbg !10775
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !10776 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #25, !dbg !10777
  ret void, !dbg !10778
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !10779 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10783, metadata !DIExpression()), !dbg !10784
  tail call fastcc void @init_idle_thread(i32 noundef %0) #25, !dbg !10785
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !10786
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !10787
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !10788
  %4 = trunc i32 %0 to i8, !dbg !10789
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !10790
  store i8 %4, i8* %5, align 4, !dbg !10791
  %6 = getelementptr inbounds [1 x [2048 x %struct.anon.11.12]], [1 x [2048 x %struct.anon.11.12]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !10792
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.anon.11.12* noundef nonnull %6) #25, !dbg !10793
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !10794
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !10795
  store i8* %8, i8** %9, align 4, !dbg !10796
  ret void, !dbg !10797
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !10798 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10800, metadata !DIExpression()), !dbg !10806
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !10807
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !10801, metadata !DIExpression()), !dbg !10806
  %3 = getelementptr inbounds [1 x [320 x %struct.anon.11.12]], [1 x [320 x %struct.anon.11.12]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !10808
  call void @llvm.dbg.value(metadata %struct.anon.11.12* %3, metadata !10802, metadata !DIExpression()), !dbg !10806
  call void @llvm.dbg.value(metadata i8* null, metadata !10805, metadata !DIExpression()), !dbg !10806
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !10809
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !10810
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.anon.11.12* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #24, !dbg !10811
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #25, !dbg !10812
  ret void, !dbg !10813
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.anon.11.12* noundef readnone %0) unnamed_addr #11 !dbg !10814 {
  call void @llvm.dbg.value(metadata %struct.anon.11.12* %0, metadata !10818, metadata !DIExpression()), !dbg !10819
  %2 = getelementptr %struct.anon.11.12, %struct.anon.11.12* %0, i32 0, i32 0, !dbg !10820
  ret i8* %2, !dbg !10821
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !10822 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10827, metadata !DIExpression()), !dbg !10828
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !10829
  %3 = load i8, i8* %2, align 1, !dbg !10830
  %4 = and i8 %3, -5, !dbg !10830
  store i8 %4, i8* %2, align 1, !dbg !10830
  ret void, !dbg !10831
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #8 !dbg !10832 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #25, !dbg !10835
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.anon.11.12* noundef getelementptr inbounds ([1 x [2048 x %struct.anon.11.12]], [1 x [2048 x %struct.anon.11.12]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #24, !dbg !10836
  %3 = ptrtoint i8* %2 to i32, !dbg !10845
  %4 = add i32 %3, 2048, !dbg !10846
  call void @llvm.dbg.value(metadata i32 %4, metadata !10840, metadata !DIExpression()) #23, !dbg !10847
  call void @llvm.dbg.value(metadata i32 %4, metadata !10848, metadata !DIExpression()) #23, !dbg !10851
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #23, !dbg !10853, !srcloc !10854
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !10855
  %6 = or i32 %5, 512, !dbg !10855
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !10855
  tail call fastcc void @__NVIC_SetPriority.79(i32 noundef -2, i32 noundef 255) #24, !dbg !10856
  tail call fastcc void @__NVIC_SetPriority.79(i32 noundef -5, i32 noundef 0) #24, !dbg !10859
  tail call fastcc void @__NVIC_SetPriority.79(i32 noundef -12, i32 noundef 0) #24, !dbg !10860
  tail call fastcc void @__NVIC_SetPriority.79(i32 noundef -11, i32 noundef 0) #24, !dbg !10861
  tail call fastcc void @__NVIC_SetPriority.79(i32 noundef -10, i32 noundef 0) #24, !dbg !10862
  tail call fastcc void @__NVIC_SetPriority.79(i32 noundef -4, i32 noundef 0) #24, !dbg !10863
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !10864
  %8 = or i32 %7, 458752, !dbg !10864
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !10864
  tail call void @z_arm_fault_init() #24, !dbg !10865
  tail call void @z_arm_cpu_idle_init() #24, !dbg !10866
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !10867
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !10870
  %9 = tail call i32 @z_arm_mpu_init() #24, !dbg !10871
  tail call void @z_arm_configure_static_mpu_regions() #24, !dbg !10872
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !10873
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #23, !dbg !10873
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !10834, metadata !DIExpression()), !dbg !10874
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #25, !dbg !10875
  call void @z_device_state_init() #24, !dbg !10876
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #25, !dbg !10877
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #25, !dbg !10878
  %11 = call fastcc i8* @prepare_multithreading() #25, !dbg !10879
  call fastcc void @switch_to_main_thread(i8* noundef %11) #29, !dbg !10880
  unreachable, !dbg !10880
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2873 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2877, metadata !DIExpression()), !dbg !10881
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !10882
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !10882
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2878, metadata !DIExpression()), !dbg !10881
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2878, metadata !DIExpression()), !dbg !10881
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !10883
  br i1 %7, label %8, label %35, !dbg !10884

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2878, metadata !DIExpression()), !dbg !10881
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !10885
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !10885
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2888, metadata !DIExpression()), !dbg !10886
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !10887
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !10887
  %14 = tail call i32 %13(%struct.device* noundef %11) #24, !dbg !10888
  call void @llvm.dbg.value(metadata i32 %14, metadata !2892, metadata !DIExpression()), !dbg !10886
  %15 = icmp eq %struct.device* %11, null, !dbg !10889
  br i1 %15, label %32, label %16, !dbg !10891

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !10892
  br i1 %17, label %26, label %18, !dbg !10895

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !10896
  call void @llvm.dbg.value(metadata i32 %19, metadata !2892, metadata !DIExpression()), !dbg !10886
  %20 = icmp ult i32 %19, 255, !dbg !10898
  %21 = select i1 %20, i32 %19, i32 255, !dbg !10898
  call void @llvm.dbg.value(metadata i32 %21, metadata !2892, metadata !DIExpression()), !dbg !10886
  %22 = trunc i32 %21 to i8, !dbg !10899
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !10900
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !10900
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !10901
  store i8 %22, i8* %25, align 1, !dbg !10902
  br label %26, !dbg !10903

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !10904
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !10904
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !10905
  %30 = load i8, i8* %29, align 1, !dbg !10906
  %31 = or i8 %30, 1, !dbg !10906
  store i8 %31, i8* %29, align 1, !dbg !10906
  br label %32, !dbg !10907

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !10908
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2878, metadata !DIExpression()), !dbg !10881
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !10883
  br i1 %34, label %8, label %35, !dbg !10884, !llvm.loop !10909

35:                                               ; preds = %32, %1
  ret void, !dbg !10911
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.79(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10912 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10914, metadata !DIExpression()), !dbg !10916
  call void @llvm.dbg.value(metadata i32 %1, metadata !10915, metadata !DIExpression()), !dbg !10916
  %3 = trunc i32 %1 to i8, !dbg !10917
  %4 = shl i8 %3, 5, !dbg !10917
  %5 = and i32 %0, 15, !dbg !10920
  %6 = add nsw i32 %5, -4, !dbg !10921
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !10922
  store volatile i8 %4, i8* %7, align 1, !dbg !10923
  ret void, !dbg !10924
}

; Function Attrs: optsize
declare !dbg !10925 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #4 !dbg !10926 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10929, metadata !DIExpression()), !dbg !10930
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !10931
  store i8 1, i8* %2, align 1, !dbg !10932
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !10933
  store i8 1, i8* %3, align 4, !dbg !10934
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !10935
  store i32 0, i32* %4, align 4, !dbg !10936
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !10937
  store i32 0, i32* %5, align 4, !dbg !10938
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !10939
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !10940
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10941
  ret void, !dbg !10942
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !10943 {
  tail call void @z_sched_init() #24, !dbg !10948
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !10949
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.anon.11.12* noundef getelementptr inbounds ([1024 x %struct.anon.11.12], [1024 x %struct.anon.11.12]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.80, i32 0, i32 0)) #24, !dbg !10950
  call void @llvm.dbg.value(metadata i8* %1, metadata !10947, metadata !DIExpression()), !dbg !10951
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !10952
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #24, !dbg !10953
  tail call void @z_init_cpu(i32 noundef 0) #25, !dbg !10954
  ret i8* %1, !dbg !10955
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #8 !dbg !10956 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10960, metadata !DIExpression()), !dbg !10961
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #24, !dbg !10962
  unreachable, !dbg !10963
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !10964 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10966, metadata !DIExpression()), !dbg !10969
  call void @llvm.dbg.value(metadata i8* %1, metadata !10967, metadata !DIExpression()), !dbg !10969
  call void @llvm.dbg.value(metadata i8* %2, metadata !10968, metadata !DIExpression()), !dbg !10969
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !10970
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #25, !dbg !10971
  tail call void @boot_banner() #24, !dbg !10972
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #25, !dbg !10973
  tail call void @z_init_static_threads() #24, !dbg !10974
  tail call void @main() #24, !dbg !10975
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !10976
  %5 = and i8 %4, -2, !dbg !10976
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !10976
  ret void, !dbg !10977
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !10978 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !10988, metadata !DIExpression()), !dbg !10990
  call void @llvm.dbg.value(metadata i8* %1, metadata !10989, metadata !DIExpression()), !dbg !10990
  ret void, !dbg !10991
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !10992 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !10994, metadata !DIExpression()), !dbg !10996
  call void @llvm.dbg.value(metadata i8* %1, metadata !10995, metadata !DIExpression()), !dbg !10996
  ret void, !dbg !10997
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !10998 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !10999, !srcloc !11006
  call void @llvm.dbg.value(metadata i32 %1, metadata !11002, metadata !DIExpression()) #23, !dbg !11007
  %2 = icmp ne i32 %1, 0, !dbg !11008
  ret i1 %2, !dbg !11009
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #7 !dbg !11010 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11011
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !11012
  %3 = load i8, i8* %2, align 4, !dbg !11013
  %4 = or i8 %3, 1, !dbg !11013
  store i8 %4, i8* %2, align 4, !dbg !11013
  ret void, !dbg !11014
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #7 !dbg !11015 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11016
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !11017
  %3 = load i8, i8* %2, align 4, !dbg !11018
  %4 = and i8 %3, -2, !dbg !11018
  store i8 %4, i8* %2, align 4, !dbg !11018
  ret void, !dbg !11019
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #5 !dbg !11020 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11021
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !11022
  %3 = load i8, i8* %2, align 4, !dbg !11022
  %4 = and i8 %3, 1, !dbg !11023
  %5 = icmp ne i8 %4, 0, !dbg !11024
  ret i1 %5, !dbg !11025
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !11026 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11030, metadata !DIExpression()), !dbg !11032
  call void @llvm.dbg.value(metadata i8* %1, metadata !11031, metadata !DIExpression()), !dbg !11032
  ret i32 -88, !dbg !11033
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !11034 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11038, metadata !DIExpression()), !dbg !11039
  ret i8* null, !dbg !11040
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #11 !dbg !11041 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11045, metadata !DIExpression()), !dbg !11048
  call void @llvm.dbg.value(metadata i8* %1, metadata !11046, metadata !DIExpression()), !dbg !11048
  call void @llvm.dbg.value(metadata i32 %2, metadata !11047, metadata !DIExpression()), !dbg !11048
  ret i32 -88, !dbg !11049
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2901 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3016, metadata !DIExpression()), !dbg !11050
  call void @llvm.dbg.value(metadata i8* %1, metadata !3017, metadata !DIExpression()), !dbg !11050
  call void @llvm.dbg.value(metadata i32 %2, metadata !3018, metadata !DIExpression()), !dbg !11050
  call void @llvm.dbg.value(metadata i32 0, metadata !3019, metadata !DIExpression()), !dbg !11050
  call void @llvm.dbg.value(metadata i8 undef, metadata !3021, metadata !DIExpression()), !dbg !11050
  %4 = icmp eq i8* %1, null, !dbg !11051
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !11053
  br i1 %6, label %46, label %7, !dbg !11053

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11054
  %9 = load i8, i8* %8, align 1, !dbg !11054
  call void @llvm.dbg.value(metadata i8 %9, metadata !3021, metadata !DIExpression()), !dbg !11050
  %10 = add i32 %2, -1, !dbg !11055
  call void @llvm.dbg.value(metadata i32 %10, metadata !3018, metadata !DIExpression()), !dbg !11050
  call void @llvm.dbg.value(metadata i8 0, metadata !3022, metadata !DIExpression()), !dbg !11056
  call void @llvm.dbg.value(metadata i8 %9, metadata !3021, metadata !DIExpression()), !dbg !11050
  call void @llvm.dbg.value(metadata i32 0, metadata !3019, metadata !DIExpression()), !dbg !11050
  %11 = icmp eq i8 %9, 0, !dbg !11057
  br i1 %11, label %12, label %15, !dbg !11059

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !11060
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !11061
  store i8 0, i8* %14, align 1, !dbg !11062
  br label %46, !dbg !11063

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !3022, metadata !DIExpression()), !dbg !11056
  call void @llvm.dbg.value(metadata i8 %17, metadata !3021, metadata !DIExpression()), !dbg !11050
  call void @llvm.dbg.value(metadata i32 %18, metadata !3019, metadata !DIExpression()), !dbg !11050
  %19 = zext i8 %17 to i32, !dbg !11064
  %20 = zext i8 %16 to i32, !dbg !11065
  %21 = shl nuw i32 1, %20, !dbg !11065
  call void @llvm.dbg.value(metadata i32 %21, metadata !3020, metadata !DIExpression()), !dbg !11050
  %22 = and i32 %21, %19, !dbg !11067
  %23 = icmp eq i32 %22, 0, !dbg !11069
  br i1 %23, label %42, label %24, !dbg !11070

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !11071
  %26 = sub i32 %10, %18, !dbg !11072
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !11073
  %28 = load i8*, i8** %27, align 4, !dbg !11073
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !11074
  %30 = load i32, i32* %29, align 4, !dbg !11074
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #25, !dbg !11075
  %32 = add i32 %31, %18, !dbg !11076
  call void @llvm.dbg.value(metadata i32 %32, metadata !3019, metadata !DIExpression()), !dbg !11050
  %33 = trunc i32 %21 to i8, !dbg !11077
  %34 = xor i8 %33, -1, !dbg !11077
  %35 = and i8 %17, %34, !dbg !11077
  call void @llvm.dbg.value(metadata i8 %35, metadata !3021, metadata !DIExpression()), !dbg !11050
  %36 = icmp eq i8 %35, 0, !dbg !11078
  br i1 %36, label %12, label %37, !dbg !11080

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !11081
  %39 = sub i32 %10, %32, !dbg !11083
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i32 noundef 1) #25, !dbg !11084
  %41 = add i32 %40, %32, !dbg !11085
  call void @llvm.dbg.value(metadata i32 %41, metadata !3019, metadata !DIExpression()), !dbg !11050
  br label %42, !dbg !11086

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !11050
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !11050
  call void @llvm.dbg.value(metadata i8 %44, metadata !3021, metadata !DIExpression()), !dbg !11050
  call void @llvm.dbg.value(metadata i32 %43, metadata !3019, metadata !DIExpression()), !dbg !11050
  %45 = add i8 %16, 1, !dbg !11087
  call void @llvm.dbg.value(metadata i8 %45, metadata !3022, metadata !DIExpression()), !dbg !11056
  br label %15, !dbg !11059

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0), %3 ], !dbg !11050
  ret i8* %47, !dbg !11088
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !11089 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11093, metadata !DIExpression()), !dbg !11098
  call void @llvm.dbg.value(metadata i32 %1, metadata !11094, metadata !DIExpression()), !dbg !11098
  call void @llvm.dbg.value(metadata i8* %2, metadata !11095, metadata !DIExpression()), !dbg !11098
  call void @llvm.dbg.value(metadata i32 %3, metadata !11096, metadata !DIExpression()), !dbg !11098
  %5 = icmp ult i32 %1, %3, !dbg !11099
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !11099
  call void @llvm.dbg.value(metadata i32 %6, metadata !11097, metadata !DIExpression()), !dbg !11098
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #24, !dbg !11100
  ret i32 %6, !dbg !11101
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !11102 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11106, metadata !DIExpression()), !dbg !11107
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #24, !dbg !11108
  ret void, !dbg !11109
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.anon.11.12* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !11110 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11119, metadata !DIExpression()), !dbg !11130
  call void @llvm.dbg.value(metadata %struct.anon.11.12* %1, metadata !11120, metadata !DIExpression()), !dbg !11130
  call void @llvm.dbg.value(metadata i32 %2, metadata !11121, metadata !DIExpression()), !dbg !11130
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !11122, metadata !DIExpression()), !dbg !11130
  call void @llvm.dbg.value(metadata i8* %4, metadata !11123, metadata !DIExpression()), !dbg !11130
  call void @llvm.dbg.value(metadata i8* %5, metadata !11124, metadata !DIExpression()), !dbg !11130
  call void @llvm.dbg.value(metadata i8* %6, metadata !11125, metadata !DIExpression()), !dbg !11130
  call void @llvm.dbg.value(metadata i32 %7, metadata !11126, metadata !DIExpression()), !dbg !11130
  call void @llvm.dbg.value(metadata i32 %8, metadata !11127, metadata !DIExpression()), !dbg !11130
  call void @llvm.dbg.value(metadata i8* undef, metadata !11128, metadata !DIExpression()), !dbg !11130
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !11131
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %11) #25, !dbg !11132
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !11133
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #25, !dbg !11134
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.anon.11.12* noundef %1, i32 noundef %2) #25, !dbg !11135
  call void @llvm.dbg.value(metadata i8* %13, metadata !11129, metadata !DIExpression()), !dbg !11130
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.anon.11.12* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #24, !dbg !11136
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !11137
  store i8* null, i8** %14, align 4, !dbg !11138
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11139
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !11139
  br i1 %16, label %20, label %17, !dbg !11141

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !11142
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !11142
  br label %20, !dbg !11143

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !11130
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !11144
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !11146
  ret i8* %13, !dbg !11147
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #4 !dbg !11148 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !11153, metadata !DIExpression()), !dbg !11154
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !11155
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #25, !dbg !11156
  ret void, !dbg !11157
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #4 !dbg !11158 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !11163, metadata !DIExpression()), !dbg !11167
  call void @llvm.dbg.value(metadata i32 %1, metadata !11164, metadata !DIExpression()), !dbg !11167
  call void @llvm.dbg.value(metadata i32 %2, metadata !11165, metadata !DIExpression()), !dbg !11167
  call void @llvm.dbg.value(metadata i32 %3, metadata !11166, metadata !DIExpression()), !dbg !11167
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !11168
  store %union.anon* null, %union.anon** %5, align 8, !dbg !11169
  %6 = trunc i32 %3 to i8, !dbg !11170
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !11171
  store i8 %6, i8* %7, align 4, !dbg !11172
  %8 = trunc i32 %2 to i8, !dbg !11173
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !11174
  store i8 %8, i8* %9, align 1, !dbg !11175
  %10 = trunc i32 %1 to i8, !dbg !11176
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !11177
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !11177
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !11177
  store i8 %10, i8* %13, align 2, !dbg !11178
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !11179
  store i8 0, i8* %14, align 1, !dbg !11180
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #25, !dbg !11181
  ret void, !dbg !11182
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.anon.11.12* noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !11183 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11187, metadata !DIExpression()), !dbg !11195
  call void @llvm.dbg.value(metadata %struct.anon.11.12* %1, metadata !11188, metadata !DIExpression()), !dbg !11195
  call void @llvm.dbg.value(metadata i32 %2, metadata !11189, metadata !DIExpression()), !dbg !11195
  call void @llvm.dbg.value(metadata i32 0, metadata !11194, metadata !DIExpression()), !dbg !11195
  %4 = add i32 %2, 7, !dbg !11196
  %5 = and i32 %4, -8, !dbg !11196
  call void @llvm.dbg.value(metadata i32 %5, metadata !11190, metadata !DIExpression()), !dbg !11195
  %6 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.89(%struct.anon.11.12* noundef %1) #25, !dbg !11198
  call void @llvm.dbg.value(metadata i8* %6, metadata !11193, metadata !DIExpression()), !dbg !11195
  call void @llvm.dbg.value(metadata i32 %5, metadata !11191, metadata !DIExpression()), !dbg !11195
  %7 = getelementptr inbounds %struct.anon.11.12, %struct.anon.11.12* %1, i32 %5, i32 0, !dbg !11199
  call void @llvm.dbg.value(metadata i8* %7, metadata !11192, metadata !DIExpression()), !dbg !11195
  call void @llvm.dbg.value(metadata i32 0, metadata !11194, metadata !DIExpression()), !dbg !11195
  %8 = ptrtoint i8* %6 to i32, !dbg !11200
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !11201
  store i32 %8, i32* %9, align 4, !dbg !11202
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !11203
  store i32 %5, i32* %10, align 4, !dbg !11204
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !11205
  store i32 0, i32* %11, align 4, !dbg !11206
  call void @llvm.dbg.value(metadata i8* %7, metadata !11192, metadata !DIExpression()), !dbg !11195
  ret i8* %7, !dbg !11207
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @Z_KERNEL_STACK_BUFFER.89(%struct.anon.11.12* noundef readnone %0) unnamed_addr #11 !dbg !11208 {
  call void @llvm.dbg.value(metadata %struct.anon.11.12* %0, metadata !11212, metadata !DIExpression()), !dbg !11213
  %2 = getelementptr %struct.anon.11.12, %struct.anon.11.12* %0, i32 0, i32 0, !dbg !11214
  ret i8* %2, !dbg !11215
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !11216 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !11221, metadata !DIExpression()), !dbg !11222
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !11223
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !11224
  ret void, !dbg !11225
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !11226 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !11228, metadata !DIExpression()), !dbg !11229
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !11230
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #25, !dbg !11231
  ret void, !dbg !11232
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !11233 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11237, metadata !DIExpression()), !dbg !11238
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11239
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !11240
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11241
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !11242
  ret void, !dbg !11243
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !11244 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11249, metadata !DIExpression()), !dbg !11250
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11251
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !11252
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11253
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !11254
  ret void, !dbg !11255
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.anon.11.12* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !11256 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !11273, metadata !DIExpression()), !dbg !11274
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11264, metadata !DIExpression()), !dbg !11274
  call void @llvm.dbg.value(metadata %struct.anon.11.12* %1, metadata !11265, metadata !DIExpression()), !dbg !11274
  call void @llvm.dbg.value(metadata i32 %2, metadata !11266, metadata !DIExpression()), !dbg !11274
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !11267, metadata !DIExpression()), !dbg !11274
  call void @llvm.dbg.value(metadata i8* %4, metadata !11268, metadata !DIExpression()), !dbg !11274
  call void @llvm.dbg.value(metadata i8* %5, metadata !11269, metadata !DIExpression()), !dbg !11274
  call void @llvm.dbg.value(metadata i8* %6, metadata !11270, metadata !DIExpression()), !dbg !11274
  call void @llvm.dbg.value(metadata i32 %7, metadata !11271, metadata !DIExpression()), !dbg !11274
  call void @llvm.dbg.value(metadata i32 %8, metadata !11272, metadata !DIExpression()), !dbg !11274
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.anon.11.12* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #25, !dbg !11275
  %13 = icmp eq i64 %11, -1, !dbg !11276
  br i1 %13, label %15, label %14, !dbg !11278

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #25, !dbg !11279
  br label %15, !dbg !11281

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !11282
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !11283 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !11288, metadata !DIExpression()), !dbg !11289
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11287, metadata !DIExpression()), !dbg !11289
  %4 = icmp eq i64 %3, 0, !dbg !11290
  br i1 %4, label %5, label %6, !dbg !11292

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #25, !dbg !11293
  br label %7, !dbg !11295

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #25, !dbg !11296
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !11298
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !11299 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11303, metadata !DIExpression()), !dbg !11304
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11305, !srcloc !11307
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #25, !dbg !11308
  ret void, !dbg !11309
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !11310 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !11313, metadata !DIExpression()), !dbg !11314
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11312, metadata !DIExpression()), !dbg !11314
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !11315
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #24, !dbg !11316
  ret void, !dbg !11317
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !11318 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !11320, metadata !DIExpression()), !dbg !11340
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !11341

1:                                                ; preds = %2
  tail call void @k_sched_lock() #24, !dbg !11342
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !11338, metadata !DIExpression()), !dbg !11343
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !11344

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !11320, metadata !DIExpression()), !dbg !11340
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !11345
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !11345
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !11348
  %7 = load %struct.anon.11.12*, %struct.anon.11.12** %6, align 4, !dbg !11348
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !11349
  %9 = load i32, i32* %8, align 4, !dbg !11349
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !11350
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !11350
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !11351
  %13 = load i8*, i8** %12, align 4, !dbg !11351
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !11352
  %15 = load i8*, i8** %14, align 4, !dbg !11352
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !11353
  %17 = load i8*, i8** %16, align 4, !dbg !11353
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !11354
  %19 = load i32, i32* %18, align 4, !dbg !11354
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !11355
  %21 = load i32, i32* %20, align 4, !dbg !11355
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.anon.11.12* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #25, !dbg !11356
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !11357
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !11358
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !11359
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !11359
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !11360
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !11320, metadata !DIExpression()), !dbg !11340
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !11361
  br i1 %27, label %2, label %1, !dbg !11341, !llvm.loop !11363

28:                                               ; preds = %0
  tail call void @k_sched_lock() #24, !dbg !11342
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !11338, metadata !DIExpression()), !dbg !11343
  br label %29, !dbg !11344

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #24, !dbg !11365
  ret void, !dbg !11366

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !11338, metadata !DIExpression()), !dbg !11343
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !11367
  %33 = load i32, i32* %32, align 4, !dbg !11367
  %34 = icmp eq i32 %33, -1, !dbg !11371
  br i1 %34, label %43, label %35, !dbg !11372

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !11373
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !11373
  %38 = icmp sgt i32 %33, 0, !dbg !11375
  %39 = select i1 %38, i32 %33, i32 0, !dbg !11375
  %40 = zext i32 %39 to i64, !dbg !11375
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %40) #25, !dbg !11375
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !11376
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #25, !dbg !11376
  br label %43, !dbg !11377

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !11378
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !11338, metadata !DIExpression()), !dbg !11343
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !11379
  br i1 %45, label %30, label %29, !dbg !11344, !llvm.loop !11381
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !11383 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !11388, metadata !DIExpression()), !dbg !11389
  call void @llvm.dbg.value(metadata i64 %0, metadata !11390, metadata !DIExpression()), !dbg !11407
  call void @llvm.dbg.value(metadata i32 1000, metadata !11395, metadata !DIExpression()), !dbg !11407
  call void @llvm.dbg.value(metadata i32 10000, metadata !11396, metadata !DIExpression()), !dbg !11407
  call void @llvm.dbg.value(metadata i8 1, metadata !11397, metadata !DIExpression()), !dbg !11407
  call void @llvm.dbg.value(metadata i8 0, metadata !11398, metadata !DIExpression()), !dbg !11407
  call void @llvm.dbg.value(metadata i8 1, metadata !11399, metadata !DIExpression()), !dbg !11407
  call void @llvm.dbg.value(metadata i8 0, metadata !11400, metadata !DIExpression()), !dbg !11407
  call void @llvm.dbg.value(metadata i8 1, metadata !11401, metadata !DIExpression()), !dbg !11407
  call void @llvm.dbg.value(metadata i8 0, metadata !11402, metadata !DIExpression()), !dbg !11407
  call void @llvm.dbg.value(metadata i64 0, metadata !11403, metadata !DIExpression()), !dbg !11407
  call void @llvm.dbg.value(metadata i64 0, metadata !11403, metadata !DIExpression()), !dbg !11407
  %2 = mul i64 %0, 10, !dbg !11409
  ret i64 %2, !dbg !11415
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #8 !dbg !11416 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !11418, metadata !DIExpression()), !dbg !11422
  call void @llvm.dbg.value(metadata i8* %1, metadata !11419, metadata !DIExpression()), !dbg !11422
  call void @llvm.dbg.value(metadata i8* %2, metadata !11420, metadata !DIExpression()), !dbg !11422
  call void @llvm.dbg.value(metadata i8* %3, metadata !11421, metadata !DIExpression()), !dbg !11422
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11423
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !11424
  %7 = load i8, i8* %6, align 4, !dbg !11425
  %8 = or i8 %7, 4, !dbg !11425
  store i8 %8, i8* %6, align 4, !dbg !11425
  tail call void @z_thread_essential_clear() #25, !dbg !11426
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !11427
  unreachable, !dbg !11427
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !11428 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11432, metadata !DIExpression()), !dbg !11433
  ret i32 -134, !dbg !11434
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #11 !dbg !11435 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11439, metadata !DIExpression()), !dbg !11441
  call void @llvm.dbg.value(metadata i32 %1, metadata !11440, metadata !DIExpression()), !dbg !11441
  ret i32 -134, !dbg !11442
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #11 !dbg !11443 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11450, metadata !DIExpression()), !dbg !11452
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !11451, metadata !DIExpression()), !dbg !11452
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !11453
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !11455
  %6 = select i1 %5, i32 -22, i32 0, !dbg !11452
  ret i32 %6, !dbg !11456
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #11 !dbg !11457 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !11461, metadata !DIExpression()), !dbg !11462
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !11463
  %3 = select i1 %2, i32 -22, i32 0, !dbg !11462
  ret i32 %3, !dbg !11465
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !11466 {
  tail call void @sys_clock_idle_exit() #24, !dbg !11468
  ret void, !dbg !11469
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #8 !dbg !11470 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11472, metadata !DIExpression()), !dbg !11475
  call void @llvm.dbg.value(metadata i8* %1, metadata !11473, metadata !DIExpression()), !dbg !11475
  call void @llvm.dbg.value(metadata i8* %2, metadata !11474, metadata !DIExpression()), !dbg !11475
  br label %4, !dbg !11476

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #23, !dbg !11477, !srcloc !11484
  call void @llvm.dbg.value(metadata i32 undef, metadata !11480, metadata !DIExpression()) #23, !dbg !11485
  call void @llvm.dbg.value(metadata i32 undef, metadata !11481, metadata !DIExpression()) #23, !dbg !11485
  tail call fastcc void @k_cpu_idle() #25, !dbg !11486
  br label %4, !dbg !11476, !llvm.loop !11487
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !11489 {
  tail call void @arch_cpu_idle() #24, !dbg !11490
  ret void, !dbg !11491
}

; Function Attrs: optsize
declare !dbg !11492 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !11493 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11497, metadata !DIExpression()), !dbg !11501
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !11498, metadata !DIExpression()), !dbg !11501
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !11502
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !11502
  %5 = load i8, i8* %4, align 2, !dbg !11502
  call void @llvm.dbg.value(metadata i8 %5, metadata !11499, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !11501
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !11503
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !11503
  %8 = load i8, i8* %7, align 2, !dbg !11503
  call void @llvm.dbg.value(metadata i8 %8, metadata !11500, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !11501
  %9 = icmp eq i8 %8, %5, !dbg !11504
  %10 = sext i8 %5 to i32, !dbg !11506
  %11 = sext i8 %8 to i32, !dbg !11506
  %12 = sub nsw i32 %11, %10, !dbg !11506
  %13 = select i1 %9, i32 0, i32 %12, !dbg !11506
  ret i32 %13, !dbg !11507
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !11508 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !11512, metadata !DIExpression()), !dbg !11513
  %2 = tail call fastcc i32 @slice_time() #25, !dbg !11514
  %3 = icmp eq i32 %2, 0, !dbg !11516
  br i1 %3, label %8, label %4, !dbg !11517

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #24, !dbg !11518
  %6 = add i32 %5, %2, !dbg !11520
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !11521
  %7 = tail call fastcc i32 @slice_time() #25, !dbg !11522
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #24, !dbg !11523
  br label %8, !dbg !11524

8:                                                ; preds = %4, %1
  ret void, !dbg !11525
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #5 !dbg !11526 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !11530, metadata !DIExpression()), !dbg !11532
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !11533
  call void @llvm.dbg.value(metadata i32 %1, metadata !11531, metadata !DIExpression()), !dbg !11532
  ret i32 %1, !dbg !11534
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !11535 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11539, metadata !DIExpression()), !dbg !11548
  call void @llvm.dbg.value(metadata i32 %1, metadata !11540, metadata !DIExpression()), !dbg !11548
  call void @llvm.dbg.value(metadata i32 0, metadata !11541, metadata !DIExpression()), !dbg !11549
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11550, metadata !DIExpression()) #23, !dbg !11557
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #23, !dbg !11559, !srcloc !11565
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !11559
  call void @llvm.dbg.value(metadata i32 %4, metadata !11562, metadata !DIExpression()) #23, !dbg !11566
  call void @llvm.dbg.value(metadata i32 undef, metadata !11563, metadata !DIExpression()) #23, !dbg !11566
  call void @llvm.dbg.value(metadata i32 %4, metadata !11556, metadata !DIExpression()) #23, !dbg !11557
  call void @llvm.dbg.value(metadata i32 %4, metadata !11547, metadata !DIExpression()), !dbg !11549
  call void @llvm.dbg.value(metadata i32 undef, metadata !11541, metadata !DIExpression()), !dbg !11549
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !11567
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #25, !dbg !11570
  %6 = icmp sgt i32 %0, 0, !dbg !11571
  %7 = icmp sgt i32 %5, 2, !dbg !11573
  %8 = select i1 %7, i32 %5, i32 2, !dbg !11573
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !11573
  store i32 %9, i32* @slice_ticks, align 4, !dbg !11574
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !11575
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !11576
  call void @llvm.dbg.value(metadata i32 %4, metadata !11577, metadata !DIExpression()) #23, !dbg !11583
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11582, metadata !DIExpression()) #23, !dbg !11583
  call void @llvm.dbg.value(metadata i32 %4, metadata !11585, metadata !DIExpression()) #23, !dbg !11588
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !11590, !srcloc !11591
  call void @llvm.dbg.value(metadata i32 1, metadata !11541, metadata !DIExpression()), !dbg !11549
  call void @llvm.dbg.value(metadata i32 undef, metadata !11541, metadata !DIExpression()), !dbg !11549
  ret void, !dbg !11592
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #11 !dbg !11593 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11595, metadata !DIExpression()), !dbg !11596
  call void @llvm.dbg.value(metadata i32 %0, metadata !11597, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11612
  call void @llvm.dbg.value(metadata i32 1000, metadata !11600, metadata !DIExpression()), !dbg !11612
  call void @llvm.dbg.value(metadata i32 10000, metadata !11601, metadata !DIExpression()), !dbg !11612
  call void @llvm.dbg.value(metadata i8 1, metadata !11602, metadata !DIExpression()), !dbg !11612
  call void @llvm.dbg.value(metadata i1 true, metadata !11603, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11612
  call void @llvm.dbg.value(metadata i1 true, metadata !11604, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11612
  call void @llvm.dbg.value(metadata i8 0, metadata !11605, metadata !DIExpression()), !dbg !11612
  call void @llvm.dbg.value(metadata i1 true, metadata !11606, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11612
  call void @llvm.dbg.value(metadata i1 false, metadata !11607, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11612
  call void @llvm.dbg.value(metadata i64 0, metadata !11608, metadata !DIExpression()), !dbg !11612
  call void @llvm.dbg.value(metadata i64 0, metadata !11608, metadata !DIExpression()), !dbg !11612
  %2 = mul i32 %0, 10, !dbg !11614
  ret i32 %2, !dbg !11620
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !11621 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11623, metadata !DIExpression()), !dbg !11625
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11550, metadata !DIExpression()) #23, !dbg !11626
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #23, !dbg !11628, !srcloc !11565
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !11628
  call void @llvm.dbg.value(metadata i32 %3, metadata !11562, metadata !DIExpression()) #23, !dbg !11630
  call void @llvm.dbg.value(metadata i32 undef, metadata !11563, metadata !DIExpression()) #23, !dbg !11630
  call void @llvm.dbg.value(metadata i32 %3, metadata !11556, metadata !DIExpression()) #23, !dbg !11626
  call void @llvm.dbg.value(metadata i32 %3, metadata !11624, metadata !DIExpression()), !dbg !11625
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !11631
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11633
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !11634
  br i1 %6, label %7, label %8, !dbg !11635

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !11636
  call void @llvm.dbg.value(metadata i32 %3, metadata !11577, metadata !DIExpression()) #23, !dbg !11638
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11582, metadata !DIExpression()) #23, !dbg !11638
  call void @llvm.dbg.value(metadata i32 %3, metadata !11585, metadata !DIExpression()) #23, !dbg !11640
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !11642, !srcloc !11591
  br label %24, !dbg !11643

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !11644
  %9 = tail call fastcc i32 @slice_time() #25, !dbg !11645
  %10 = icmp eq i32 %9, 0, !dbg !11645
  br i1 %10, label %21, label %11, !dbg !11647

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #25, !dbg !11648
  br i1 %12, label %13, label %21, !dbg !11649

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !11650
  %15 = icmp sgt i32 %14, %0, !dbg !11653
  br i1 %15, label %19, label %16, !dbg !11654

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !11655
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #25, !dbg !11655
  call void @llvm.dbg.value(metadata i32 %18, metadata !11624, metadata !DIExpression()), !dbg !11625
  br label %22, !dbg !11657

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !11658
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !11658
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !11660
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !11625
  call void @llvm.dbg.value(metadata i32 %23, metadata !11624, metadata !DIExpression()), !dbg !11625
  call void @llvm.dbg.value(metadata i32 %23, metadata !11577, metadata !DIExpression()) #23, !dbg !11662
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11582, metadata !DIExpression()) #23, !dbg !11662
  call void @llvm.dbg.value(metadata i32 %23, metadata !11585, metadata !DIExpression()) #23, !dbg !11664
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #23, !dbg !11666, !srcloc !11591
  br label %24, !dbg !11667

24:                                               ; preds = %22, %7
  ret void, !dbg !11667
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #5 !dbg !11668 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11672, metadata !DIExpression()), !dbg !11674
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #25, !dbg !11675
  %3 = icmp eq i32 %2, 0, !dbg !11675
  br i1 %3, label %16, label %4, !dbg !11676

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #25, !dbg !11677
  br i1 %5, label %16, label %6, !dbg !11678

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !11679
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !11679
  %9 = load i8, i8* %8, align 2, !dbg !11679
  %10 = sext i8 %9 to i32, !dbg !11680
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !11681
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #25, !dbg !11682
  br i1 %12, label %16, label %13, !dbg !11683

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #25, !dbg !11684
  %15 = xor i1 %14, true, !dbg !11685
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !11674
  call void @llvm.dbg.value(metadata i1 %17, metadata !11673, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11674
  ret i1 %17, !dbg !11686
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !11687 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !11691, metadata !DIExpression()), !dbg !11693
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11694
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !11692, metadata !DIExpression()), !dbg !11693
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #25, !dbg !11695
  br i1 %3, label %5, label %4, !dbg !11697

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #25, !dbg !11698
  br label %5, !dbg !11700

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !11691, metadata !DIExpression()), !dbg !11693
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !11701
  ret i32 %6, !dbg !11702
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11703 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11705, metadata !DIExpression()), !dbg !11707
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11708
  %3 = load i8, i8* %2, align 1, !dbg !11708
  call void @llvm.dbg.value(metadata i8 %3, metadata !11706, metadata !DIExpression()), !dbg !11707
  %4 = and i8 %3, 31, !dbg !11709
  %5 = icmp ne i8 %4, 0, !dbg !11710
  ret i1 %5, !dbg !11711
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !11712 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11714, metadata !DIExpression()), !dbg !11715
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !11716
  br i1 %2, label %3, label %7, !dbg !11718

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11719, metadata !DIExpression()) #23, !dbg !11722
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11725
  %5 = load i8, i8* %4, align 1, !dbg !11726
  %6 = and i8 %5, 127, !dbg !11726
  store i8 %6, i8* %4, align 1, !dbg !11726
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11727, metadata !DIExpression()) #23, !dbg !11730
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !11734
  br label %7, !dbg !11735

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11736, metadata !DIExpression()) #23, !dbg !11739
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11741
  %9 = load i8, i8* %8, align 1, !dbg !11742
  %10 = or i8 %9, -128, !dbg !11742
  store i8 %10, i8* %8, align 1, !dbg !11742
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11743, metadata !DIExpression()) #23, !dbg !11746
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !11750, metadata !DIExpression()) #23, !dbg !11758
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11756, metadata !DIExpression()) #23, !dbg !11758
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !11760
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !11757, metadata !DIExpression()) #23, !dbg !11758
  %12 = icmp eq %struct._dnode* %11, null, !dbg !11762
  br i1 %12, label %23, label %13, !dbg !11760

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !11757, metadata !DIExpression()) #23, !dbg !11758
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !11764
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !11757, metadata !DIExpression()) #23, !dbg !11758
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #24, !dbg !11765
  %17 = icmp sgt i32 %16, 0, !dbg !11768
  br i1 %17, label %18, label %20, !dbg !11769

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !11770
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #24, !dbg !11772
  br label %25, !dbg !11773

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #24, !dbg !11762
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !11757, metadata !DIExpression()) #23, !dbg !11758
  %22 = icmp eq %struct._dnode* %21, null, !dbg !11762
  br i1 %22, label %23, label %13, !dbg !11760, !llvm.loop !11774

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !11776
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #24, !dbg !11777
  br label %25, !dbg !11778

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11779
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !11780
  %28 = zext i1 %27 to i32, !dbg !11780
  tail call fastcc void @update_cache(i32 noundef %28) #25, !dbg !11781
  ret void, !dbg !11782
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11783 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11785, metadata !DIExpression()), !dbg !11786
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #25, !dbg !11787
  ret i1 %2, !dbg !11788
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #7 !dbg !11789 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !11791, metadata !DIExpression()), !dbg !11793
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !11792, metadata !DIExpression()), !dbg !11793
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !11794
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #25, !dbg !11795
  ret void, !dbg !11796
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #5 !dbg !11797 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11801, metadata !DIExpression()), !dbg !11802
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #25, !dbg !11803
  br i1 %2, label %6, label %3, !dbg !11803

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11804
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !11804
  br label %6, !dbg !11803

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !11803
  ret %struct._dnode* %7, !dbg !11805
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !11806 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11810, metadata !DIExpression()), !dbg !11814
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !11811, metadata !DIExpression()), !dbg !11814
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11815
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !11815
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !11812, metadata !DIExpression()), !dbg !11814
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !11816
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !11817
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !11818
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !11819
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !11820
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !11821
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !11822
  ret void, !dbg !11823
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !11824 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11828, metadata !DIExpression()), !dbg !11830
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !11829, metadata !DIExpression()), !dbg !11830
  %3 = icmp eq %struct._dnode* %1, null, !dbg !11831
  br i1 %3, label %6, label %4, !dbg !11832

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #25, !dbg !11833
  br label %6, !dbg !11832

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !11832
  ret %struct._dnode* %7, !dbg !11834
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !11835 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11839, metadata !DIExpression()), !dbg !11842
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !11840, metadata !DIExpression()), !dbg !11842
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11843
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !11843
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !11841, metadata !DIExpression()), !dbg !11842
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !11844
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !11845
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !11846
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !11847
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !11848
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !11849
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !11850
  ret void, !dbg !11851
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !11852 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11854, metadata !DIExpression()), !dbg !11856
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !11857
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !11864, metadata !DIExpression()) #23, !dbg !11866
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !11867
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !11868
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !11868
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !11855, metadata !DIExpression()), !dbg !11856
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !11869, metadata !DIExpression()) #23, !dbg !11875
  call void @llvm.dbg.value(metadata i32 %0, metadata !11874, metadata !DIExpression()) #23, !dbg !11875
  %6 = icmp eq i32 %0, 0, !dbg !11878
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11880
  br i1 %6, label %8, label %15, !dbg !11881

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #24, !dbg !11882
  br i1 %9, label %15, label %10, !dbg !11884

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #24, !dbg !11885
  br i1 %11, label %15, label %12, !dbg !11887

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #24, !dbg !11888
  %14 = icmp eq i32 %13, 0, !dbg !11888
  br i1 %14, label %18, label %15, !dbg !11890

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !11891
  br i1 %16, label %18, label %17, !dbg !11894

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !11895
  br label %18, !dbg !11897

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !11880
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !11880
  ret void, !dbg !11898
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #5 !dbg !11899 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11903, metadata !DIExpression()), !dbg !11906
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !11904, metadata !DIExpression()), !dbg !11906
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #25, !dbg !11907
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !11905, metadata !DIExpression()), !dbg !11906
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !11904, metadata !DIExpression()), !dbg !11906
  ret %struct.k_thread* %3, !dbg !11908
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11909 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11911, metadata !DIExpression()), !dbg !11912
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !11913
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !11914
  %4 = xor i1 %3, true, !dbg !11915
  ret i1 %4, !dbg !11916
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11917 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11919, metadata !DIExpression()), !dbg !11920
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !11921
  %3 = load i16, i16* %2, align 2, !dbg !11921
  %4 = icmp ult i16 %3, 128, !dbg !11922
  %5 = zext i1 %4 to i32, !dbg !11922
  ret i32 %5, !dbg !11923
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11924 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !11930, metadata !DIExpression()), !dbg !11931
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !11932
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #25, !dbg !11933
  %4 = xor i1 %3, true, !dbg !11934
  ret i1 %4, !dbg !11935
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11936 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11942, metadata !DIExpression()), !dbg !11943
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11944
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !11944
  %4 = icmp ne %struct._dnode* %3, null, !dbg !11945
  ret i1 %4, !dbg !11946
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !11947 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11949, metadata !DIExpression()), !dbg !11951
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !11950, metadata !DIExpression()), !dbg !11951
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11952
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !11952
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !11953
  br i1 %5, label %9, label %6, !dbg !11954

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !11955
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !11955
  br label %9, !dbg !11954

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !11954
  ret %struct._dnode* %10, !dbg !11956
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !11957 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11961, metadata !DIExpression()), !dbg !11962
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11963
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !11963
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !11964
  ret i1 %4, !dbg !11965
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #7 !dbg !11966 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11970, metadata !DIExpression()), !dbg !11973
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11974
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !11974
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !11971, metadata !DIExpression()), !dbg !11973
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11975
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !11975
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !11972, metadata !DIExpression()), !dbg !11973
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !11976
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !11977
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !11978
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !11979
  tail call fastcc void @sys_dnode_init.94(%struct._dnode* noundef %0) #25, !dbg !11980
  ret void, !dbg !11981
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.94(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !11982 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11984, metadata !DIExpression()), !dbg !11985
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11986
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !11987
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11988
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !11989
  ret void, !dbg !11990
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11991 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11995, metadata !DIExpression()), !dbg !11997
  call void @llvm.dbg.value(metadata i32 128, metadata !11996, metadata !DIExpression()), !dbg !11997
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11998
  %3 = load i8, i8* %2, align 1, !dbg !11998
  %4 = icmp slt i8 %3, 0, !dbg !11999
  ret i1 %4, !dbg !12000
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !12001 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12005, metadata !DIExpression()), !dbg !12007
  call void @llvm.dbg.value(metadata i32 %1, metadata !12006, metadata !DIExpression()), !dbg !12007
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #25, !dbg !12008
  ret i1 %3, !dbg !12009
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #11 !dbg !12010 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12012, metadata !DIExpression()), !dbg !12013
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !12014
  ret i1 %2, !dbg !12015
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !12016 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12018, metadata !DIExpression()), !dbg !12020
  call void @llvm.dbg.value(metadata i32 %1, metadata !12019, metadata !DIExpression()), !dbg !12020
  %3 = icmp slt i32 %0, %1, !dbg !12021
  ret i1 %3, !dbg !12022
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12023 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12025, metadata !DIExpression()), !dbg !12029
  call void @llvm.dbg.value(metadata i32 0, metadata !12026, metadata !DIExpression()), !dbg !12030
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11550, metadata !DIExpression()) #23, !dbg !12031
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #23, !dbg !12033, !srcloc !11565
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12033
  call void @llvm.dbg.value(metadata i32 %3, metadata !11562, metadata !DIExpression()) #23, !dbg !12035
  call void @llvm.dbg.value(metadata i32 undef, metadata !11563, metadata !DIExpression()) #23, !dbg !12035
  call void @llvm.dbg.value(metadata i32 %3, metadata !11556, metadata !DIExpression()) #23, !dbg !12031
  call void @llvm.dbg.value(metadata i32 %3, metadata !12028, metadata !DIExpression()), !dbg !12030
  call void @llvm.dbg.value(metadata i32 undef, metadata !12026, metadata !DIExpression()), !dbg !12030
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #25, !dbg !12036
  call void @llvm.dbg.value(metadata i32 %3, metadata !11577, metadata !DIExpression()) #23, !dbg !12041
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11582, metadata !DIExpression()) #23, !dbg !12041
  call void @llvm.dbg.value(metadata i32 %3, metadata !11585, metadata !DIExpression()) #23, !dbg !12043
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12045, !srcloc !11591
  call void @llvm.dbg.value(metadata i32 1, metadata !12026, metadata !DIExpression()), !dbg !12030
  call void @llvm.dbg.value(metadata i32 undef, metadata !12026, metadata !DIExpression()), !dbg !12030
  ret void, !dbg !12046
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12047 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12049, metadata !DIExpression()), !dbg !12050
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !12051
  br i1 %2, label %24, label %3, !dbg !12053

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #25, !dbg !12054
  br i1 %4, label %5, label %24, !dbg !12055

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11736, metadata !DIExpression()) #23, !dbg !12056
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12059
  %7 = load i8, i8* %6, align 1, !dbg !12060
  %8 = or i8 %7, -128, !dbg !12060
  store i8 %8, i8* %6, align 1, !dbg !12060
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11743, metadata !DIExpression()) #23, !dbg !12061
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !11750, metadata !DIExpression()) #23, !dbg !12063
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11756, metadata !DIExpression()) #23, !dbg !12063
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !12065
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !11757, metadata !DIExpression()) #23, !dbg !12063
  %10 = icmp eq %struct._dnode* %9, null, !dbg !12066
  br i1 %10, label %21, label %11, !dbg !12065

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !11757, metadata !DIExpression()) #23, !dbg !12063
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !12067
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !11757, metadata !DIExpression()) #23, !dbg !12063
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #24, !dbg !12068
  %15 = icmp sgt i32 %14, 0, !dbg !12069
  br i1 %15, label %16, label %18, !dbg !12070

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12071
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #24, !dbg !12072
  br label %23, !dbg !12073

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #24, !dbg !12066
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !11757, metadata !DIExpression()) #23, !dbg !12063
  %20 = icmp eq %struct._dnode* %19, null, !dbg !12066
  br i1 %20, label %21, label %11, !dbg !12065, !llvm.loop !12074

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12076
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #24, !dbg !12077
  br label %23, !dbg !12078

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #25, !dbg !12079
  br label %24, !dbg !12080

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !12081
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !12082 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12084, metadata !DIExpression()), !dbg !12085
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #25, !dbg !12086
  br i1 %2, label %6, label %3, !dbg !12087

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #25, !dbg !12088
  %5 = xor i1 %4, true, !dbg !12087
  br label %6, !dbg !12087

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !12089
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12090 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12092, metadata !DIExpression()), !dbg !12096
  call void @llvm.dbg.value(metadata i32 0, metadata !12093, metadata !DIExpression()), !dbg !12097
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11550, metadata !DIExpression()) #23, !dbg !12098
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #23, !dbg !12100, !srcloc !11565
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12100
  call void @llvm.dbg.value(metadata i32 %3, metadata !11562, metadata !DIExpression()) #23, !dbg !12102
  call void @llvm.dbg.value(metadata i32 undef, metadata !11563, metadata !DIExpression()) #23, !dbg !12102
  call void @llvm.dbg.value(metadata i32 %3, metadata !11556, metadata !DIExpression()) #23, !dbg !12098
  call void @llvm.dbg.value(metadata i32 %3, metadata !12095, metadata !DIExpression()), !dbg !12097
  call void @llvm.dbg.value(metadata i32 undef, metadata !12093, metadata !DIExpression()), !dbg !12097
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #25, !dbg !12103
  call void @llvm.dbg.value(metadata i32 %3, metadata !11577, metadata !DIExpression()) #23, !dbg !12106
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11582, metadata !DIExpression()) #23, !dbg !12106
  call void @llvm.dbg.value(metadata i32 %3, metadata !11585, metadata !DIExpression()) #23, !dbg !12108
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12110, !srcloc !11591
  call void @llvm.dbg.value(metadata i32 1, metadata !12093, metadata !DIExpression()), !dbg !12097
  call void @llvm.dbg.value(metadata i32 undef, metadata !12093, metadata !DIExpression()), !dbg !12097
  ret void, !dbg !12111
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12112 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12114, metadata !DIExpression()), !dbg !12116
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11550, metadata !DIExpression()) #23, !dbg !12117
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #23, !dbg !12119, !srcloc !11565
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12119
  call void @llvm.dbg.value(metadata i32 %3, metadata !11562, metadata !DIExpression()) #23, !dbg !12121
  call void @llvm.dbg.value(metadata i32 undef, metadata !11563, metadata !DIExpression()) #23, !dbg !12121
  call void @llvm.dbg.value(metadata i32 %3, metadata !11556, metadata !DIExpression()) #23, !dbg !12117
  call void @llvm.dbg.value(metadata i32 %3, metadata !12115, metadata !DIExpression()), !dbg !12116
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #25, !dbg !12122
  br i1 %4, label %5, label %6, !dbg !12124

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !11577, metadata !DIExpression()) #23, !dbg !12125
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11582, metadata !DIExpression()) #23, !dbg !12125
  call void @llvm.dbg.value(metadata i32 %3, metadata !11585, metadata !DIExpression()) #23, !dbg !12128
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12130, !srcloc !11591
  br label %8, !dbg !12131

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.99(%struct.k_thread* noundef %0) #25, !dbg !12132
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #25, !dbg !12133
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !12134
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #25, !dbg !12134
  br label %8, !dbg !12135

8:                                                ; preds = %6, %5
  ret void, !dbg !12135
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !12136 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12138, metadata !DIExpression()), !dbg !12139
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12140
  %3 = load i8, i8* %2, align 1, !dbg !12140
  %4 = and i8 %3, 4, !dbg !12141
  %5 = icmp eq i8 %4, 0, !dbg !12142
  ret i1 %5, !dbg !12143
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.99(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !12144 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12146, metadata !DIExpression()), !dbg !12147
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12148
  %3 = load i8, i8* %2, align 1, !dbg !12149
  %4 = and i8 %3, -5, !dbg !12149
  store i8 %4, i8* %2, align 1, !dbg !12149
  ret void, !dbg !12150
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !12151 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !12154, metadata !DIExpression()), !dbg !12155
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12153, metadata !DIExpression()), !dbg !12155
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #25, !dbg !12156
  br i1 %4, label %5, label %9, !dbg !12158

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #25, !dbg !12159
  br i1 %6, label %7, label %9, !dbg !12160

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !12161, metadata !DIExpression()) #23, !dbg !12167
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12166, metadata !DIExpression()) #23, !dbg !12167
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #24, !dbg !12170
  br label %10, !dbg !12171

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !11577, metadata !DIExpression()) #23, !dbg !12172
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11582, metadata !DIExpression()) #23, !dbg !12172
  call void @llvm.dbg.value(metadata i32 %3, metadata !11585, metadata !DIExpression()) #23, !dbg !12175
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12177, !srcloc !11591
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !12178
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !12179 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12183, metadata !DIExpression()), !dbg !12184
  call void @llvm.dbg.value(metadata i32 %0, metadata !12185, metadata !DIExpression()), !dbg !12190
  %2 = icmp eq i32 %0, 0, !dbg !12192
  br i1 %2, label %3, label %6, !dbg !12193

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !12194, !srcloc !12201
  call void @llvm.dbg.value(metadata i32 %4, metadata !12197, metadata !DIExpression()) #23, !dbg !12202
  %5 = icmp eq i32 %4, 0, !dbg !12203
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !12184
  ret i1 %7, !dbg !12204
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #5 !dbg !12205 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12208
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !12207, metadata !DIExpression()), !dbg !12209
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12210
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !12211
  ret i1 %3, !dbg !12212
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !12213 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12215, metadata !DIExpression()), !dbg !12217
  %2 = tail call i32 @arch_swap(i32 noundef %0) #24, !dbg !12218
  call void @llvm.dbg.value(metadata i32 %2, metadata !12216, metadata !DIExpression()), !dbg !12217
  ret i32 %2, !dbg !12219
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12220 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12222, metadata !DIExpression()), !dbg !12226
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #25, !dbg !12227
  call void @llvm.dbg.value(metadata i32 0, metadata !12223, metadata !DIExpression()), !dbg !12228
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11550, metadata !DIExpression()) #23, !dbg !12229
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #23, !dbg !12231, !srcloc !11565
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !12231
  call void @llvm.dbg.value(metadata i32 %4, metadata !11562, metadata !DIExpression()) #23, !dbg !12233
  call void @llvm.dbg.value(metadata i32 undef, metadata !11563, metadata !DIExpression()) #23, !dbg !12233
  call void @llvm.dbg.value(metadata i32 %4, metadata !11556, metadata !DIExpression()) #23, !dbg !12229
  call void @llvm.dbg.value(metadata i32 %4, metadata !12225, metadata !DIExpression()), !dbg !12228
  call void @llvm.dbg.value(metadata i32 undef, metadata !12223, metadata !DIExpression()), !dbg !12228
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !12234
  br i1 %5, label %6, label %10, !dbg !12238

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11719, metadata !DIExpression()) #23, !dbg !12239
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12242
  %8 = load i8, i8* %7, align 1, !dbg !12243
  %9 = and i8 %8, 127, !dbg !12243
  store i8 %9, i8* %7, align 1, !dbg !12243
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11727, metadata !DIExpression()) #23, !dbg !12244
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !12246
  br label %10, !dbg !12247

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #25, !dbg !12248
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12249
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !12250
  %13 = zext i1 %12 to i32, !dbg !12250
  tail call fastcc void @update_cache(i32 noundef %13) #25, !dbg !12251
  call void @llvm.dbg.value(metadata i32 %4, metadata !11577, metadata !DIExpression()) #23, !dbg !12252
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11582, metadata !DIExpression()) #23, !dbg !12252
  call void @llvm.dbg.value(metadata i32 %4, metadata !11585, metadata !DIExpression()) #23, !dbg !12254
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !12256, !srcloc !11591
  call void @llvm.dbg.value(metadata i32 1, metadata !12223, metadata !DIExpression()), !dbg !12228
  call void @llvm.dbg.value(metadata i32 undef, metadata !12223, metadata !DIExpression()), !dbg !12228
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12257
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !12259
  br i1 %15, label %16, label %17, !dbg !12260

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !12261
  br label %17, !dbg !12263

17:                                               ; preds = %16, %10
  ret void, !dbg !12264
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12265 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12267, metadata !DIExpression()), !dbg !12268
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !12269
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !12270
  ret i32 %3, !dbg !12271
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !12272 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12274, metadata !DIExpression()), !dbg !12275
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12276
  %3 = load i8, i8* %2, align 1, !dbg !12277
  %4 = or i8 %3, 16, !dbg !12277
  store i8 %4, i8* %2, align 1, !dbg !12277
  ret void, !dbg !12278
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !12279 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #23, !dbg !12280, !srcloc !11565
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !12280
  call void @llvm.dbg.value(metadata i32 %2, metadata !11562, metadata !DIExpression()) #23, !dbg !12282
  call void @llvm.dbg.value(metadata i32 undef, metadata !11563, metadata !DIExpression()) #23, !dbg !12282
  tail call void @z_reschedule_irqlock(i32 noundef %2) #25, !dbg !12283
  ret void, !dbg !12284
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !12285 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12287, metadata !DIExpression()), !dbg !12288
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #25, !dbg !12289
  br i1 %2, label %3, label %5, !dbg !12291

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #25, !dbg !12292
  br label %6, !dbg !12294

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !11585, metadata !DIExpression()) #23, !dbg !12295
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #23, !dbg !12298, !srcloc !11591
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !12299
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12300 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12302, metadata !DIExpression()), !dbg !12304
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11550, metadata !DIExpression()) #23, !dbg !12305
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #23, !dbg !12307, !srcloc !11565
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12307
  call void @llvm.dbg.value(metadata i32 %3, metadata !11562, metadata !DIExpression()) #23, !dbg !12309
  call void @llvm.dbg.value(metadata i32 undef, metadata !11563, metadata !DIExpression()) #23, !dbg !12309
  call void @llvm.dbg.value(metadata i32 %3, metadata !11556, metadata !DIExpression()) #23, !dbg !12305
  call void @llvm.dbg.value(metadata i32 %3, metadata !12303, metadata !DIExpression()), !dbg !12304
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #25, !dbg !12310
  br i1 %4, label %6, label %5, !dbg !12312

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !11577, metadata !DIExpression()) #23, !dbg !12313
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11582, metadata !DIExpression()) #23, !dbg !12313
  call void @llvm.dbg.value(metadata i32 %3, metadata !11585, metadata !DIExpression()) #23, !dbg !12316
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12318, !srcloc !11591
  br label %8, !dbg !12319

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #25, !dbg !12320
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #25, !dbg !12321
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !12322
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #25, !dbg !12322
  br label %8, !dbg !12323

8:                                                ; preds = %6, %5
  ret void, !dbg !12323
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !12324 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12326, metadata !DIExpression()), !dbg !12327
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12328
  %3 = load i8, i8* %2, align 1, !dbg !12328
  %4 = and i8 %3, 16, !dbg !12329
  %5 = icmp ne i8 %4, 0, !dbg !12330
  ret i1 %5, !dbg !12331
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !12332 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12334, metadata !DIExpression()), !dbg !12335
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12336
  %3 = load i8, i8* %2, align 1, !dbg !12337
  %4 = and i8 %3, -17, !dbg !12337
  store i8 %4, i8* %2, align 1, !dbg !12337
  ret void, !dbg !12338
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !12339 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12349, metadata !DIExpression()), !dbg !12353
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12347, metadata !DIExpression()), !dbg !12353
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !12348, metadata !DIExpression()), !dbg !12353
  call void @llvm.dbg.value(metadata i32 0, metadata !12350, metadata !DIExpression()), !dbg !12354
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11550, metadata !DIExpression()) #23, !dbg !12355
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #23, !dbg !12357, !srcloc !11565
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !12357
  call void @llvm.dbg.value(metadata i32 %5, metadata !11562, metadata !DIExpression()) #23, !dbg !12359
  call void @llvm.dbg.value(metadata i32 undef, metadata !11563, metadata !DIExpression()) #23, !dbg !12359
  call void @llvm.dbg.value(metadata i32 %5, metadata !11556, metadata !DIExpression()) #23, !dbg !12355
  call void @llvm.dbg.value(metadata i32 %5, metadata !12352, metadata !DIExpression()), !dbg !12354
  call void @llvm.dbg.value(metadata i32 undef, metadata !12350, metadata !DIExpression()), !dbg !12354
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #25, !dbg !12360
  call void @llvm.dbg.value(metadata i32 %5, metadata !11577, metadata !DIExpression()) #23, !dbg !12363
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11582, metadata !DIExpression()) #23, !dbg !12363
  call void @llvm.dbg.value(metadata i32 %5, metadata !11585, metadata !DIExpression()) #23, !dbg !12365
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #23, !dbg !12367, !srcloc !11591
  call void @llvm.dbg.value(metadata i32 1, metadata !12350, metadata !DIExpression()), !dbg !12354
  call void @llvm.dbg.value(metadata i32 undef, metadata !12350, metadata !DIExpression()), !dbg !12354
  ret void, !dbg !12368
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !12369 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12373, metadata !DIExpression()), !dbg !12374
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12371, metadata !DIExpression()), !dbg !12374
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !12372, metadata !DIExpression()), !dbg !12374
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #25, !dbg !12375
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #25, !dbg !12376
  ret void, !dbg !12377
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !12378 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12382, metadata !DIExpression()), !dbg !12384
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !12383, metadata !DIExpression()), !dbg !12384
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #25, !dbg !12385
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #25, !dbg !12386
  %3 = icmp eq %union.anon* %1, null, !dbg !12387
  br i1 %3, label %21, label %4, !dbg !12389

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !12390
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !12392
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !12393
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !11750, metadata !DIExpression()) #23, !dbg !12394
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11756, metadata !DIExpression()) #23, !dbg !12394
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #24, !dbg !12396
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !11757, metadata !DIExpression()) #23, !dbg !12394
  %8 = icmp eq %struct._dnode* %7, null, !dbg !12397
  br i1 %8, label %19, label %9, !dbg !12396

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !11757, metadata !DIExpression()) #23, !dbg !12394
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !12398
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !11757, metadata !DIExpression()) #23, !dbg !12394
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #24, !dbg !12399
  %13 = icmp sgt i32 %12, 0, !dbg !12400
  br i1 %13, label %14, label %16, !dbg !12401

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12402
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #24, !dbg !12403
  br label %21, !dbg !12404

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #24, !dbg !12397
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !11757, metadata !DIExpression()) #23, !dbg !12394
  %18 = icmp eq %struct._dnode* %17, null, !dbg !12397
  br i1 %18, label %19, label %9, !dbg !12396, !llvm.loop !12405

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12407
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #24, !dbg !12408
  br label %21, !dbg !12409

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !12410
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !12411 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !12416, metadata !DIExpression()), !dbg !12417
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12415, metadata !DIExpression()), !dbg !12417
  %4 = icmp eq i64 %3, -1, !dbg !12418
  br i1 %4, label %6, label %5, !dbg !12420

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.100(%struct.k_thread* noundef %0, [1 x i64] %1) #25, !dbg !12421
  br label %6, !dbg !12423

6:                                                ; preds = %5, %2
  ret void, !dbg !12424
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.100(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !12425 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12428, metadata !DIExpression()), !dbg !12429
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12427, metadata !DIExpression()), !dbg !12429
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !12430
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #24, !dbg !12431
  ret void, !dbg !12432
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !12433 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !12435, metadata !DIExpression()), !dbg !12443
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !12444
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !12444
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !12436, metadata !DIExpression()), !dbg !12443
  call void @llvm.dbg.value(metadata i32 0, metadata !12437, metadata !DIExpression()), !dbg !12445
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11550, metadata !DIExpression()) #23, !dbg !12446
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #23, !dbg !12448, !srcloc !11565
  call void @llvm.dbg.value(metadata i32 undef, metadata !11562, metadata !DIExpression()) #23, !dbg !12450
  call void @llvm.dbg.value(metadata i32 undef, metadata !11563, metadata !DIExpression()) #23, !dbg !12450
  call void @llvm.dbg.value(metadata i32 undef, metadata !11556, metadata !DIExpression()) #23, !dbg !12446
  call void @llvm.dbg.value(metadata i32 undef, metadata !12439, metadata !DIExpression()), !dbg !12445
  call void @llvm.dbg.value(metadata i32 undef, metadata !12437, metadata !DIExpression()), !dbg !12445
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !12451
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !12452
  %7 = load i8, i8* %6, align 1, !dbg !12452
  %8 = and i8 %7, 40, !dbg !12453
  %9 = icmp eq i8 %8, 0, !dbg !12453
  call void @llvm.dbg.value(metadata i1 %9, metadata !12440, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12454
  br i1 %9, label %10, label %17, !dbg !12455

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !12456
  %12 = bitcast void (%struct._timeout*)** %11 to %union.anon**, !dbg !12456
  %13 = load %union.anon*, %union.anon** %12, align 8, !dbg !12456
  %14 = icmp eq %union.anon* %13, null, !dbg !12460
  br i1 %14, label %16, label %15, !dbg !12461

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #25, !dbg !12462
  br label %16, !dbg !12464

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.99(%struct.k_thread* noundef nonnull %3) #25, !dbg !12465
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #25, !dbg !12466
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #25, !dbg !12467
  br label %17, !dbg !12468

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !12448
  call void @llvm.dbg.value(metadata i32 %18, metadata !11562, metadata !DIExpression()) #23, !dbg !12450
  call void @llvm.dbg.value(metadata i32 %18, metadata !11556, metadata !DIExpression()) #23, !dbg !12446
  call void @llvm.dbg.value(metadata i32 %18, metadata !12439, metadata !DIExpression()), !dbg !12445
  call void @llvm.dbg.value(metadata i32 undef, metadata !11577, metadata !DIExpression()) #23, !dbg !12469
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11582, metadata !DIExpression()) #23, !dbg !12469
  call void @llvm.dbg.value(metadata i32 undef, metadata !11585, metadata !DIExpression()) #23, !dbg !12471
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !12473, !srcloc !11591
  call void @llvm.dbg.value(metadata i32 1, metadata !12437, metadata !DIExpression()), !dbg !12445
  call void @llvm.dbg.value(metadata i32 undef, metadata !12437, metadata !DIExpression()), !dbg !12445
  ret void, !dbg !12474
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !12475 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12477, metadata !DIExpression()), !dbg !12478
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !12479
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #25, !dbg !12480
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !12481
  store %union.anon* null, %union.anon** %2, align 8, !dbg !12482
  ret void, !dbg !12483
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !12484 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12486, metadata !DIExpression()), !dbg !12487
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12488
  %3 = load i8, i8* %2, align 1, !dbg !12489
  %4 = and i8 %3, -3, !dbg !12489
  store i8 %4, i8* %2, align 1, !dbg !12489
  ret void, !dbg !12490
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12491 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12493, metadata !DIExpression()), !dbg !12494
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !12495
  br i1 %2, label %3, label %7, !dbg !12497

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11719, metadata !DIExpression()) #23, !dbg !12498
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12501
  %5 = load i8, i8* %4, align 1, !dbg !12502
  %6 = and i8 %5, 127, !dbg !12502
  store i8 %6, i8* %4, align 1, !dbg !12502
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11727, metadata !DIExpression()) #23, !dbg !12503
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !12505
  br label %7, !dbg !12506

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12507
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !12508
  %10 = zext i1 %9 to i32, !dbg !12508
  tail call fastcc void @update_cache(i32 noundef %10) #25, !dbg !12509
  ret void, !dbg !12510
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !12511 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12513, metadata !DIExpression()), !dbg !12514
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12515
  %3 = load i8, i8* %2, align 1, !dbg !12516
  %4 = or i8 %3, 2, !dbg !12516
  store i8 %4, i8* %2, align 1, !dbg !12516
  ret void, !dbg !12517
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #22 !dbg !12518 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12520, metadata !DIExpression()), !dbg !12524
  call void @llvm.dbg.value(metadata i32 0, metadata !12521, metadata !DIExpression()), !dbg !12525
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11550, metadata !DIExpression()) #23, !dbg !12526
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #23, !dbg !12528, !srcloc !11565
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12528
  call void @llvm.dbg.value(metadata i32 %3, metadata !11562, metadata !DIExpression()) #23, !dbg !12530
  call void @llvm.dbg.value(metadata i32 undef, metadata !11563, metadata !DIExpression()) #23, !dbg !12530
  call void @llvm.dbg.value(metadata i32 %3, metadata !11556, metadata !DIExpression()) #23, !dbg !12526
  call void @llvm.dbg.value(metadata i32 %3, metadata !12523, metadata !DIExpression()), !dbg !12525
  call void @llvm.dbg.value(metadata i32 undef, metadata !12521, metadata !DIExpression()), !dbg !12525
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !12531
  call void @llvm.dbg.value(metadata i32 %3, metadata !11577, metadata !DIExpression()) #23, !dbg !12534
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11582, metadata !DIExpression()) #23, !dbg !12534
  call void @llvm.dbg.value(metadata i32 %3, metadata !11585, metadata !DIExpression()) #23, !dbg !12536
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12538, !srcloc !11591
  call void @llvm.dbg.value(metadata i32 1, metadata !12521, metadata !DIExpression()), !dbg !12525
  call void @llvm.dbg.value(metadata i32 undef, metadata !12521, metadata !DIExpression()), !dbg !12525
  ret void, !dbg !12539
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !12540 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12546, metadata !DIExpression()), !dbg !12551
  call void @llvm.dbg.value(metadata i32 %0, metadata !12544, metadata !DIExpression()), !dbg !12551
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !12545, metadata !DIExpression()), !dbg !12551
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12552
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #25, !dbg !12553
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12554
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !12555
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #25, !dbg !12556
  call void @llvm.dbg.value(metadata i32 %6, metadata !12547, metadata !DIExpression()), !dbg !12551
  call void @llvm.dbg.value(metadata i32 0, metadata !12548, metadata !DIExpression()), !dbg !12557
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11550, metadata !DIExpression()) #23, !dbg !12558
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #23, !dbg !12560, !srcloc !11565
  call void @llvm.dbg.value(metadata i32 undef, metadata !11562, metadata !DIExpression()) #23, !dbg !12562
  call void @llvm.dbg.value(metadata i32 undef, metadata !11563, metadata !DIExpression()) #23, !dbg !12562
  call void @llvm.dbg.value(metadata i32 undef, metadata !11556, metadata !DIExpression()) #23, !dbg !12558
  call void @llvm.dbg.value(metadata i32 undef, metadata !12550, metadata !DIExpression()), !dbg !12557
  call void @llvm.dbg.value(metadata i32 undef, metadata !12548, metadata !DIExpression()), !dbg !12557
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !12563
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12567
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !12568
  br i1 %10, label %11, label %12, !dbg !12569

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !12570
  br label %12, !dbg !12572

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !12560
  call void @llvm.dbg.value(metadata i32 %13, metadata !11562, metadata !DIExpression()) #23, !dbg !12562
  call void @llvm.dbg.value(metadata i32 %13, metadata !11556, metadata !DIExpression()) #23, !dbg !12558
  call void @llvm.dbg.value(metadata i32 %13, metadata !12550, metadata !DIExpression()), !dbg !12557
  call void @llvm.dbg.value(metadata i32 undef, metadata !11577, metadata !DIExpression()) #23, !dbg !12573
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11582, metadata !DIExpression()) #23, !dbg !12573
  call void @llvm.dbg.value(metadata i32 undef, metadata !11585, metadata !DIExpression()) #23, !dbg !12575
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #23, !dbg !12577, !srcloc !11591
  call void @llvm.dbg.value(metadata i32 1, metadata !12548, metadata !DIExpression()), !dbg !12557
  call void @llvm.dbg.value(metadata i32 undef, metadata !12548, metadata !DIExpression()), !dbg !12557
  ret i32 %6, !dbg !12578
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !12579 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !12584, metadata !DIExpression()), !dbg !12587
  call void @llvm.dbg.value(metadata i64 undef, metadata !12586, metadata !DIExpression()), !dbg !12587
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12583, metadata !DIExpression()), !dbg !12587
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !12585, metadata !DIExpression()), !dbg !12587
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12588
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !12589
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11550, metadata !DIExpression()) #23, !dbg !12590
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #23, !dbg !12592, !srcloc !11565
  call void @llvm.dbg.value(metadata i32 undef, metadata !11562, metadata !DIExpression()) #23, !dbg !12594
  call void @llvm.dbg.value(metadata i32 undef, metadata !11563, metadata !DIExpression()) #23, !dbg !12594
  call void @llvm.dbg.value(metadata i32 undef, metadata !11556, metadata !DIExpression()) #23, !dbg !12590
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12595
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %union.anon* noundef %2, [1 x i64] %3) #25, !dbg !12596
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !12161, metadata !DIExpression()) #23, !dbg !12597
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12166, metadata !DIExpression()) #23, !dbg !12597
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #24, !dbg !12599
  ret i32 %9, !dbg !12600
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !12601 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !12605, metadata !DIExpression()), !dbg !12610
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !12606, metadata !DIExpression()), !dbg !12610
  call void @llvm.dbg.value(metadata i32 0, metadata !12607, metadata !DIExpression()), !dbg !12611
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11550, metadata !DIExpression()) #23, !dbg !12612
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #23, !dbg !12614, !srcloc !11565
  call void @llvm.dbg.value(metadata i32 undef, metadata !11562, metadata !DIExpression()) #23, !dbg !12616
  call void @llvm.dbg.value(metadata i32 undef, metadata !11563, metadata !DIExpression()) #23, !dbg !12616
  call void @llvm.dbg.value(metadata i32 undef, metadata !11556, metadata !DIExpression()) #23, !dbg !12612
  call void @llvm.dbg.value(metadata i32 undef, metadata !12609, metadata !DIExpression()), !dbg !12611
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !12606, metadata !DIExpression()), !dbg !12610
  call void @llvm.dbg.value(metadata i32 undef, metadata !12607, metadata !DIExpression()), !dbg !12611
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #25, !dbg !12617
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !12606, metadata !DIExpression()), !dbg !12610
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !12620
  br i1 %5, label %7, label %6, !dbg !12622

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #25, !dbg !12623
  br label %7, !dbg !12625

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !12614
  call void @llvm.dbg.value(metadata i32 %8, metadata !11562, metadata !DIExpression()) #23, !dbg !12616
  call void @llvm.dbg.value(metadata i32 %8, metadata !11556, metadata !DIExpression()) #23, !dbg !12612
  call void @llvm.dbg.value(metadata i32 %8, metadata !12609, metadata !DIExpression()), !dbg !12611
  call void @llvm.dbg.value(metadata i32 undef, metadata !11577, metadata !DIExpression()) #23, !dbg !12626
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11582, metadata !DIExpression()) #23, !dbg !12626
  call void @llvm.dbg.value(metadata i32 undef, metadata !11585, metadata !DIExpression()) #23, !dbg !12628
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !12630, !srcloc !11591
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !12606, metadata !DIExpression()), !dbg !12610
  call void @llvm.dbg.value(metadata i32 undef, metadata !12607, metadata !DIExpression()), !dbg !12611
  ret %struct.k_thread* %4, !dbg !12631
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !12632 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !12634, metadata !DIExpression()), !dbg !12639
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !12635, metadata !DIExpression()), !dbg !12639
  call void @llvm.dbg.value(metadata i32 0, metadata !12636, metadata !DIExpression()), !dbg !12640
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11550, metadata !DIExpression()) #23, !dbg !12641
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #23, !dbg !12643, !srcloc !11565
  call void @llvm.dbg.value(metadata i32 undef, metadata !11562, metadata !DIExpression()) #23, !dbg !12645
  call void @llvm.dbg.value(metadata i32 undef, metadata !11563, metadata !DIExpression()) #23, !dbg !12645
  call void @llvm.dbg.value(metadata i32 undef, metadata !11556, metadata !DIExpression()) #23, !dbg !12641
  call void @llvm.dbg.value(metadata i32 undef, metadata !12638, metadata !DIExpression()), !dbg !12640
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !12635, metadata !DIExpression()), !dbg !12639
  call void @llvm.dbg.value(metadata i32 undef, metadata !12636, metadata !DIExpression()), !dbg !12640
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #25, !dbg !12646
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !12635, metadata !DIExpression()), !dbg !12639
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !12649
  br i1 %5, label %8, label %6, !dbg !12651

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #25, !dbg !12652
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #25, !dbg !12654
  br label %8, !dbg !12655

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !12643
  call void @llvm.dbg.value(metadata i32 %9, metadata !11562, metadata !DIExpression()) #23, !dbg !12645
  call void @llvm.dbg.value(metadata i32 %9, metadata !11556, metadata !DIExpression()) #23, !dbg !12641
  call void @llvm.dbg.value(metadata i32 %9, metadata !12638, metadata !DIExpression()), !dbg !12640
  call void @llvm.dbg.value(metadata i32 undef, metadata !11577, metadata !DIExpression()) #23, !dbg !12656
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11582, metadata !DIExpression()) #23, !dbg !12656
  call void @llvm.dbg.value(metadata i32 undef, metadata !11585, metadata !DIExpression()) #23, !dbg !12658
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !12660, !srcloc !11591
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !12635, metadata !DIExpression()), !dbg !12639
  call void @llvm.dbg.value(metadata i32 undef, metadata !12636, metadata !DIExpression()), !dbg !12640
  ret %struct.k_thread* %4, !dbg !12661
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12662 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12664, metadata !DIExpression()), !dbg !12665
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12520, metadata !DIExpression()) #23, !dbg !12666
  call void @llvm.dbg.value(metadata i32 0, metadata !12521, metadata !DIExpression()) #23, !dbg !12668
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11550, metadata !DIExpression()) #23, !dbg !12669
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #23, !dbg !12671, !srcloc !11565
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12671
  call void @llvm.dbg.value(metadata i32 %3, metadata !11562, metadata !DIExpression()) #23, !dbg !12673
  call void @llvm.dbg.value(metadata i32 undef, metadata !11563, metadata !DIExpression()) #23, !dbg !12673
  call void @llvm.dbg.value(metadata i32 %3, metadata !11556, metadata !DIExpression()) #23, !dbg !12669
  call void @llvm.dbg.value(metadata i32 %3, metadata !12523, metadata !DIExpression()) #23, !dbg !12668
  call void @llvm.dbg.value(metadata i32 undef, metadata !12521, metadata !DIExpression()) #23, !dbg !12668
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #24, !dbg !12674
  call void @llvm.dbg.value(metadata i32 %3, metadata !11577, metadata !DIExpression()) #23, !dbg !12675
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11582, metadata !DIExpression()) #23, !dbg !12675
  call void @llvm.dbg.value(metadata i32 %3, metadata !11585, metadata !DIExpression()) #23, !dbg !12677
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12679, !srcloc !11591
  call void @llvm.dbg.value(metadata i32 1, metadata !12521, metadata !DIExpression()) #23, !dbg !12668
  call void @llvm.dbg.value(metadata i32 undef, metadata !12521, metadata !DIExpression()) #23, !dbg !12668
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #25, !dbg !12680
  ret void, !dbg !12681
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12682 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12684, metadata !DIExpression()), !dbg !12690
  call void @llvm.dbg.value(metadata i32 %1, metadata !12685, metadata !DIExpression()), !dbg !12690
  call void @llvm.dbg.value(metadata i8 0, metadata !12686, metadata !DIExpression()), !dbg !12690
  call void @llvm.dbg.value(metadata i32 0, metadata !12687, metadata !DIExpression()), !dbg !12691
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11550, metadata !DIExpression()) #23, !dbg !12692
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #23, !dbg !12694, !srcloc !11565
  call void @llvm.dbg.value(metadata i32 undef, metadata !11562, metadata !DIExpression()) #23, !dbg !12696
  call void @llvm.dbg.value(metadata i32 undef, metadata !11563, metadata !DIExpression()) #23, !dbg !12696
  call void @llvm.dbg.value(metadata i32 undef, metadata !11556, metadata !DIExpression()) #23, !dbg !12692
  call void @llvm.dbg.value(metadata i32 undef, metadata !12689, metadata !DIExpression()), !dbg !12691
  call void @llvm.dbg.value(metadata i8 poison, metadata !12686, metadata !DIExpression()), !dbg !12690
  call void @llvm.dbg.value(metadata i32 undef, metadata !12687, metadata !DIExpression()), !dbg !12691
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #25, !dbg !12697
  call void @llvm.dbg.value(metadata i1 %6, metadata !12686, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12690
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !12700

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11719, metadata !DIExpression()) #23, !dbg !12701
  %11 = load i8, i8* %4, align 1, !dbg !12707
  %12 = and i8 %11, 127, !dbg !12707
  store i8 %12, i8* %4, align 1, !dbg !12707
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11727, metadata !DIExpression()) #23, !dbg !12708
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !12710
  store i8 %9, i8* %8, align 2, !dbg !12711
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11736, metadata !DIExpression()) #23, !dbg !12712
  %13 = load i8, i8* %4, align 1, !dbg !12714
  %14 = or i8 %13, -128, !dbg !12714
  store i8 %14, i8* %4, align 1, !dbg !12714
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11743, metadata !DIExpression()) #23, !dbg !12715
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !11750, metadata !DIExpression()) #23, !dbg !12717
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11756, metadata !DIExpression()) #23, !dbg !12717
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !12719
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !11757, metadata !DIExpression()) #23, !dbg !12717
  %16 = icmp eq %struct._dnode* %15, null, !dbg !12720
  br i1 %16, label %26, label %17, !dbg !12719

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !11757, metadata !DIExpression()) #23, !dbg !12717
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !12721
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !11757, metadata !DIExpression()) #23, !dbg !12717
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #24, !dbg !12722
  %21 = icmp sgt i32 %20, 0, !dbg !12723
  br i1 %21, label %22, label %23, !dbg !12724

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #24, !dbg !12725
  br label %27, !dbg !12726

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #24, !dbg !12720
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !11757, metadata !DIExpression()) #23, !dbg !12717
  %25 = icmp eq %struct._dnode* %24, null, !dbg !12720
  br i1 %25, label %26, label %17, !dbg !12719, !llvm.loop !12727

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #24, !dbg !12729
  br label %27, !dbg !12730

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #25, !dbg !12731
  br label %29, !dbg !12732

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !12733
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !12694
  call void @llvm.dbg.value(metadata i32 %30, metadata !11562, metadata !DIExpression()) #23, !dbg !12696
  call void @llvm.dbg.value(metadata i32 %30, metadata !11556, metadata !DIExpression()) #23, !dbg !12692
  call void @llvm.dbg.value(metadata i32 %30, metadata !12689, metadata !DIExpression()), !dbg !12691
  call void @llvm.dbg.value(metadata i32 undef, metadata !11577, metadata !DIExpression()) #23, !dbg !12735
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11582, metadata !DIExpression()) #23, !dbg !12735
  call void @llvm.dbg.value(metadata i32 undef, metadata !11585, metadata !DIExpression()) #23, !dbg !12737
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #23, !dbg !12739, !srcloc !11591
  call void @llvm.dbg.value(metadata i8 poison, metadata !12686, metadata !DIExpression()), !dbg !12690
  call void @llvm.dbg.value(metadata i32 undef, metadata !12687, metadata !DIExpression()), !dbg !12691
  ret i1 %6, !dbg !12740
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12741 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12745, metadata !DIExpression()), !dbg !12748
  call void @llvm.dbg.value(metadata i32 %1, metadata !12746, metadata !DIExpression()), !dbg !12748
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #25, !dbg !12749
  call void @llvm.dbg.value(metadata i1 %3, metadata !12747, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12748
  br i1 %3, label %4, label %12, !dbg !12750

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12752
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !12753
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !12753
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !12753
  %9 = load i8, i8* %8, align 1, !dbg !12753
  %10 = icmp eq i8 %9, 0, !dbg !12754
  br i1 %10, label %11, label %12, !dbg !12755

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !12756
  br label %12, !dbg !12758

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !12759
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !12760 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12762, metadata !DIExpression()), !dbg !12765
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11550, metadata !DIExpression()) #23, !dbg !12766
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #23, !dbg !12768, !srcloc !11565
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !12768
  call void @llvm.dbg.value(metadata i32 %2, metadata !11562, metadata !DIExpression()) #23, !dbg !12770
  call void @llvm.dbg.value(metadata i32 undef, metadata !11563, metadata !DIExpression()) #23, !dbg !12770
  call void @llvm.dbg.value(metadata i32 %2, metadata !11556, metadata !DIExpression()) #23, !dbg !12766
  call void @llvm.dbg.value(metadata i32 %2, metadata !12764, metadata !DIExpression()), !dbg !12765
  call void @llvm.dbg.value(metadata i32 undef, metadata !12762, metadata !DIExpression()), !dbg !12765
  tail call fastcc void @z_sched_lock() #25, !dbg !12771
  call void @llvm.dbg.value(metadata i32 %2, metadata !11577, metadata !DIExpression()) #23, !dbg !12774
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11582, metadata !DIExpression()) #23, !dbg !12774
  call void @llvm.dbg.value(metadata i32 %2, metadata !11585, metadata !DIExpression()) #23, !dbg !12776
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !12778, !srcloc !11591
  call void @llvm.dbg.value(metadata i32 1, metadata !12762, metadata !DIExpression()), !dbg !12765
  call void @llvm.dbg.value(metadata i32 undef, metadata !12762, metadata !DIExpression()), !dbg !12765
  ret void, !dbg !12779
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !12780 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12781
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !12782
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !12782
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !12782
  %5 = load i8, i8* %4, align 1, !dbg !12783
  %6 = add i8 %5, -1, !dbg !12783
  store i8 %6, i8* %4, align 1, !dbg !12783
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !12784, !srcloc !12786
  ret void, !dbg !12787
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !12788 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12790, metadata !DIExpression()), !dbg !12793
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11550, metadata !DIExpression()) #23, !dbg !12794
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #23, !dbg !12796, !srcloc !11565
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !12796
  call void @llvm.dbg.value(metadata i32 %2, metadata !11562, metadata !DIExpression()) #23, !dbg !12798
  call void @llvm.dbg.value(metadata i32 undef, metadata !11563, metadata !DIExpression()) #23, !dbg !12798
  call void @llvm.dbg.value(metadata i32 %2, metadata !11556, metadata !DIExpression()) #23, !dbg !12794
  call void @llvm.dbg.value(metadata i32 %2, metadata !12792, metadata !DIExpression()), !dbg !12793
  call void @llvm.dbg.value(metadata i32 undef, metadata !12790, metadata !DIExpression()), !dbg !12793
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12799
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !12802
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !12802
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !12802
  %7 = load i8, i8* %6, align 1, !dbg !12803
  %8 = add i8 %7, 1, !dbg !12803
  store i8 %8, i8* %6, align 1, !dbg !12803
  tail call fastcc void @update_cache(i32 noundef 0) #25, !dbg !12804
  call void @llvm.dbg.value(metadata i32 %2, metadata !11577, metadata !DIExpression()) #23, !dbg !12805
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11582, metadata !DIExpression()) #23, !dbg !12805
  call void @llvm.dbg.value(metadata i32 %2, metadata !11585, metadata !DIExpression()) #23, !dbg !12807
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !12809, !srcloc !11591
  call void @llvm.dbg.value(metadata i32 1, metadata !12790, metadata !DIExpression()), !dbg !12793
  call void @llvm.dbg.value(metadata i32 undef, metadata !12790, metadata !DIExpression()), !dbg !12793
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !12810
  ret void, !dbg !12811
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #5 !dbg !12812 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12813
  ret %struct.k_thread* %1, !dbg !12814
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !12815 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !12819, metadata !DIExpression()), !dbg !12824
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !12820, metadata !DIExpression()), !dbg !12824
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !12825
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !12821, metadata !DIExpression()), !dbg !12824
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !12826
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !12822, metadata !DIExpression()), !dbg !12824
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #25, !dbg !12827
  call void @llvm.dbg.value(metadata i32 %5, metadata !12823, metadata !DIExpression()), !dbg !12824
  %6 = icmp sgt i32 %5, 0, !dbg !12828
  br i1 %6, label %17, label %7, !dbg !12830

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !12831
  br i1 %8, label %17, label %9, !dbg !12833

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !12834
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !12834
  %12 = load i32, i32* %11, align 8, !dbg !12834
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !12836
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !12836
  %15 = load i32, i32* %14, align 8, !dbg !12836
  %16 = icmp ult i32 %12, %15, !dbg !12837
  br label %17, !dbg !12838

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !12839
  ret i1 %18, !dbg !12840
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !12841 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !12858, metadata !DIExpression()), !dbg !12873
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !12859, metadata !DIExpression()), !dbg !12873
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !12874
  %5 = load i32, i32* %4, align 4, !dbg !12875
  %6 = add nsw i32 %5, 1, !dbg !12875
  store i32 %6, i32* %4, align 4, !dbg !12875
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !12876
  store i32 %5, i32* %7, align 8, !dbg !12877
  %8 = load i32, i32* %4, align 4, !dbg !12878
  %9 = icmp eq i32 %8, 0, !dbg !12879
  br i1 %9, label %10, label %32, !dbg !12880

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !12881
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #23, !dbg !12881
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !12861, metadata !DIExpression()), !dbg !12881
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !12881
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !12881
  %14 = load i32, i32* %13, align 4, !dbg !12881
  %15 = shl i32 %14, 2, !dbg !12881
  %16 = alloca i8, i32 %15, align 8, !dbg !12881
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !12881
  store i8* %16, i8** %17, align 4, !dbg !12881
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !12881
  %19 = alloca i8, i32 %14, align 8, !dbg !12881
  store i8* %19, i8** %18, align 4, !dbg !12881
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !12881
  store i32 -1, i32* %20, align 4, !dbg !12881
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #24, !dbg !12882
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !12870, metadata !DIExpression()), !dbg !12883
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !12860, metadata !DIExpression()), !dbg !12873
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !12884
  br i1 %22, label %23, label %24, !dbg !12881

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #23, !dbg !12884
  br label %32, !dbg !12885

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !12860, metadata !DIExpression()), !dbg !12873
  %26 = load i32, i32* %4, align 4, !dbg !12886
  %27 = add nsw i32 %26, 1, !dbg !12886
  store i32 %27, i32* %4, align 4, !dbg !12886
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !12888
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !12888
  store i32 %26, i32* %29, align 8, !dbg !12889
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #24, !dbg !12882
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !12870, metadata !DIExpression()), !dbg !12883
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !12860, metadata !DIExpression()), !dbg !12873
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !12884
  br i1 %31, label %23, label %24, !dbg !12881, !llvm.loop !12890

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !12892
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !12893
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #24, !dbg !12894
  ret void, !dbg !12895
}

; Function Attrs: optsize
declare !dbg !12896 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !12901 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !12904 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !12906, metadata !DIExpression()), !dbg !12908
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !12907, metadata !DIExpression()), !dbg !12908
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !12909
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !12910
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #24, !dbg !12911
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !12912
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !12912
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !12914
  br i1 %7, label %8, label %10, !dbg !12915

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !12916
  store i32 0, i32* %9, align 4, !dbg !12918
  br label %10, !dbg !12919

10:                                               ; preds = %8, %2
  ret void, !dbg !12920
}

; Function Attrs: optsize
declare !dbg !12921 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !12922 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !12926, metadata !DIExpression()), !dbg !12929
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !12927, metadata !DIExpression()), !dbg !12929
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !12930
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #25, !dbg !12931
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !12928, metadata !DIExpression()), !dbg !12929
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !12927, metadata !DIExpression()), !dbg !12929
  ret %struct.k_thread* %4, !dbg !12932
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !12933 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !12937, metadata !DIExpression()), !dbg !12938
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #24, !dbg !12939
  ret %struct.rbnode* %2, !dbg !12940
}

; Function Attrs: optsize
declare !dbg !12941 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #18 !dbg !12944 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !12954, metadata !DIExpression()), !dbg !12958
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !12959
  %3 = load i32, i32* %2, align 4, !dbg !12959
  %4 = icmp eq i32 %3, 0, !dbg !12961
  br i1 %4, label %10, label %5, !dbg !12962

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !12955, metadata !DIExpression()), !dbg !12958
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !12963, !range !4258
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !12964
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !12956, metadata !DIExpression()), !dbg !12958
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #25, !dbg !12965
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !12957, metadata !DIExpression()), !dbg !12958
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !12955, metadata !DIExpression()), !dbg !12958
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !12958
  ret %struct.k_thread* %11, !dbg !12966
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !12967 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !12971, metadata !DIExpression()), !dbg !12974
  call void @llvm.dbg.value(metadata i32 0, metadata !12972, metadata !DIExpression()), !dbg !12974
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !12975
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12973, metadata !DIExpression()), !dbg !12974
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !12976
  br i1 %3, label %8, label %4, !dbg !12977

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #25, !dbg !12978
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #25, !dbg !12980
  call void @llvm.dbg.value(metadata i32 1, metadata !12972, metadata !DIExpression()), !dbg !12974
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !12975
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !12973, metadata !DIExpression()), !dbg !12974
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !12976
  br i1 %7, label %8, label %4, !dbg !12977, !llvm.loop !12981

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !12974
  ret i32 %9, !dbg !12983
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #5 !dbg !12984 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !12986, metadata !DIExpression()), !dbg !12987
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !12988
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #25, !dbg !12989
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !12990
  ret %struct.k_thread* %4, !dbg !12991
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #4 !dbg !12992 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !13001, metadata !DIExpression()), !dbg !13002
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !13003
  tail call fastcc void @sys_dlist_init.107(%struct._dnode* noundef nonnull %2) #25, !dbg !13004
  ret void, !dbg !13005
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.107(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !13006 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13010, metadata !DIExpression()), !dbg !13011
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13012
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13013
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13014
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13015
  ret void, !dbg !13016
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !13017 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #25, !dbg !13018
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #25, !dbg !13019
  ret void, !dbg !13020
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #5 !dbg !13021 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13026, metadata !DIExpression()), !dbg !13027
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !13028
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !13028
  %4 = load i8, i8* %3, align 2, !dbg !13028
  %5 = sext i8 %4 to i32, !dbg !13029
  ret i32 %5, !dbg !13030
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13031 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13035, metadata !DIExpression()), !dbg !13038
  call void @llvm.dbg.value(metadata i32 %1, metadata !13036, metadata !DIExpression()), !dbg !13038
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13037, metadata !DIExpression()), !dbg !13038
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #25, !dbg !13039
  ret void, !dbg !13040
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !13041 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #25, !dbg !13042
  br i1 %1, label %8, label %2, !dbg !13043

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #24, !dbg !13044
  br i1 %3, label %8, label %4, !dbg !13045

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13046
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #25, !dbg !13047
  %7 = xor i1 %6, true, !dbg !13045
  br label %8, !dbg !13045

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !13048
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #5 !dbg !13049 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !13050, !range !7706
  %2 = icmp eq i8 %1, 0, !dbg !13050
  ret i1 %2, !dbg !13051
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !13052 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11550, metadata !DIExpression()) #23, !dbg !13055
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #23, !dbg !13057, !srcloc !11565
  call void @llvm.dbg.value(metadata i32 undef, metadata !11562, metadata !DIExpression()) #23, !dbg !13059
  call void @llvm.dbg.value(metadata i32 undef, metadata !11563, metadata !DIExpression()) #23, !dbg !13059
  call void @llvm.dbg.value(metadata i32 undef, metadata !11556, metadata !DIExpression()) #23, !dbg !13055
  call void @llvm.dbg.value(metadata i32 undef, metadata !13054, metadata !DIExpression()), !dbg !13060
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13061
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !11719, metadata !DIExpression()) #23, !dbg !13064
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !13066
  %4 = load i8, i8* %3, align 1, !dbg !13067
  %5 = and i8 %4, 127, !dbg !13067
  store i8 %5, i8* %3, align 1, !dbg !13067
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !11727, metadata !DIExpression()) #23, !dbg !13068
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #24, !dbg !13070
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13071
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !11736, metadata !DIExpression()) #23, !dbg !13072
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !13074
  %8 = load i8, i8* %7, align 1, !dbg !13075
  %9 = or i8 %8, -128, !dbg !13075
  store i8 %9, i8* %7, align 1, !dbg !13075
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !11743, metadata !DIExpression()) #23, !dbg !13076
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !11750, metadata !DIExpression()) #23, !dbg !13078
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !11756, metadata !DIExpression()) #23, !dbg !13078
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !13080
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !11757, metadata !DIExpression()) #23, !dbg !13078
  %11 = icmp eq %struct._dnode* %10, null, !dbg !13081
  br i1 %11, label %22, label %12, !dbg !13080

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !11757, metadata !DIExpression()) #23, !dbg !13078
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !13082
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !11757, metadata !DIExpression()) #23, !dbg !13078
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #24, !dbg !13083
  %16 = icmp sgt i32 %15, 0, !dbg !13084
  br i1 %16, label %17, label %19, !dbg !13085

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !13086
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #24, !dbg !13087
  br label %24, !dbg !13088

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #24, !dbg !13081
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !11757, metadata !DIExpression()) #23, !dbg !13078
  %21 = icmp eq %struct._dnode* %20, null, !dbg !13081
  br i1 %21, label %22, label %12, !dbg !13080, !llvm.loop !13089

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !13091
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #24, !dbg !13092
  br label %24, !dbg !13093

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !13057
  call void @llvm.dbg.value(metadata i32 %25, metadata !11562, metadata !DIExpression()) #23, !dbg !13059
  call void @llvm.dbg.value(metadata i32 %25, metadata !11556, metadata !DIExpression()) #23, !dbg !13055
  call void @llvm.dbg.value(metadata i32 %25, metadata !13054, metadata !DIExpression()), !dbg !13060
  tail call fastcc void @update_cache(i32 noundef 1) #25, !dbg !13094
  call void @llvm.dbg.value(metadata i32 undef, metadata !12161, metadata !DIExpression()) #23, !dbg !13095
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12166, metadata !DIExpression()) #23, !dbg !13095
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #24, !dbg !13097
  ret void, !dbg !13098
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !13099 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !13103, metadata !DIExpression()), !dbg !13106
  %3 = icmp eq i64 %2, -1, !dbg !13107
  br i1 %3, label %4, label %6, !dbg !13109

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13110
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #25, !dbg !13112
  br label %11, !dbg !13113

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !13104, metadata !DIExpression()), !dbg !13106
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #25, !dbg !13114
  %8 = sext i32 %7 to i64, !dbg !13114
  call void @llvm.dbg.value(metadata i64 %8, metadata !13104, metadata !DIExpression()), !dbg !13106
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %8) #25, !dbg !13115
  %10 = trunc i64 %9 to i32, !dbg !13115
  call void @llvm.dbg.value(metadata i32 %10, metadata !13105, metadata !DIExpression()), !dbg !13106
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !13106
  ret i32 %12, !dbg !13116
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13117 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13121, metadata !DIExpression()), !dbg !13122
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13123, !srcloc !13125
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #25, !dbg !13126
  ret void, !dbg !13127
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !13128 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13132, metadata !DIExpression()), !dbg !13136
  %2 = icmp eq i64 %0, 0, !dbg !13137
  br i1 %2, label %3, label %4, !dbg !13139

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #25, !dbg !13140
  br label %29, !dbg !13142

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !13134, metadata !DIExpression()), !dbg !13136
  %5 = icmp sgt i64 %0, -3, !dbg !13143
  br i1 %5, label %6, label %10, !dbg !13145

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #24, !dbg !13146
  %8 = trunc i64 %0 to i32, !dbg !13148
  %9 = add i32 %7, %8, !dbg !13148
  call void @llvm.dbg.value(metadata i32 %9, metadata !13133, metadata !DIExpression()), !dbg !13136
  br label %13, !dbg !13149

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !13150
  %12 = sub i32 -2, %11, !dbg !13150
  call void @llvm.dbg.value(metadata i32 %12, metadata !13133, metadata !DIExpression()), !dbg !13136
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !13152
  call void @llvm.dbg.value(metadata i32 %14, metadata !13133, metadata !DIExpression()), !dbg !13136
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11550, metadata !DIExpression()) #23, !dbg !13153
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #23, !dbg !13155, !srcloc !11565
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !13155
  call void @llvm.dbg.value(metadata i32 %16, metadata !11562, metadata !DIExpression()) #23, !dbg !13157
  call void @llvm.dbg.value(metadata i32 undef, metadata !11563, metadata !DIExpression()) #23, !dbg !13157
  call void @llvm.dbg.value(metadata i32 %16, metadata !11556, metadata !DIExpression()) #23, !dbg !13153
  call void @llvm.dbg.value(metadata i32 %16, metadata !13135, metadata !DIExpression()), !dbg !13136
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13158
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !13159
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #25, !dbg !13160
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13161
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !13162
  tail call fastcc void @z_add_thread_timeout.100(%struct.k_thread* noundef %18, [1 x i64] %19) #25, !dbg !13162
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13163
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #25, !dbg !13164
  call void @llvm.dbg.value(metadata i32 %16, metadata !12161, metadata !DIExpression()) #23, !dbg !13165
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12166, metadata !DIExpression()) #23, !dbg !13165
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #24, !dbg !13167
  %22 = zext i32 %14 to i64, !dbg !13168
  %23 = tail call i32 @sys_clock_tick_get_32() #24, !dbg !13169
  %24 = zext i32 %23 to i64, !dbg !13169
  %25 = sub nsw i64 %22, %24, !dbg !13170
  call void @llvm.dbg.value(metadata i64 %25, metadata !13132, metadata !DIExpression()), !dbg !13136
  %26 = icmp sgt i64 %25, 0, !dbg !13171
  %27 = select i1 %26, i64 %25, i64 0, !dbg !13171
  %28 = trunc i64 %27 to i32, !dbg !13171
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !13136
  ret i32 %30, !dbg !13172
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #11 !dbg !13173 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13175, metadata !DIExpression()), !dbg !13176
  call void @llvm.dbg.value(metadata i64 %0, metadata !11597, metadata !DIExpression()), !dbg !13177
  call void @llvm.dbg.value(metadata i32 10000, metadata !11600, metadata !DIExpression()), !dbg !13177
  call void @llvm.dbg.value(metadata i32 1000, metadata !11601, metadata !DIExpression()), !dbg !13177
  call void @llvm.dbg.value(metadata i8 1, metadata !11602, metadata !DIExpression()), !dbg !13177
  call void @llvm.dbg.value(metadata i1 false, metadata !11603, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13177
  call void @llvm.dbg.value(metadata i1 false, metadata !11604, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13177
  call void @llvm.dbg.value(metadata i8 0, metadata !11605, metadata !DIExpression()), !dbg !13177
  call void @llvm.dbg.value(metadata i1 false, metadata !11606, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13177
  call void @llvm.dbg.value(metadata i1 true, metadata !11607, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13177
  call void @llvm.dbg.value(metadata i64 0, metadata !11608, metadata !DIExpression()), !dbg !13177
  call void @llvm.dbg.value(metadata i64 0, metadata !11608, metadata !DIExpression()), !dbg !13177
  call void @llvm.dbg.value(metadata i64 %0, metadata !11597, metadata !DIExpression()), !dbg !13177
  %2 = udiv i64 %0, 10, !dbg !13179
  ret i64 %2, !dbg !13183
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !13184 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13185, !srcloc !13187
  tail call void @z_impl_k_yield() #25, !dbg !13188
  ret void, !dbg !13189
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !13190 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13194, metadata !DIExpression()), !dbg !13196
  %2 = sext i32 %0 to i64, !dbg !13197
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #25, !dbg !13198
  call void @llvm.dbg.value(metadata i64 %3, metadata !13195, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13196
  %4 = shl i64 %3, 32, !dbg !13199
  %5 = ashr exact i64 %4, 32, !dbg !13199
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #25, !dbg !13200
  call void @llvm.dbg.value(metadata i32 %6, metadata !13195, metadata !DIExpression()), !dbg !13196
  %7 = sext i32 %6 to i64, !dbg !13201
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #25, !dbg !13202
  %9 = trunc i64 %8 to i32, !dbg !13202
  ret i32 %9, !dbg !13203
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !13204 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13206, metadata !DIExpression()), !dbg !13207
  call void @llvm.dbg.value(metadata i64 %0, metadata !11597, metadata !DIExpression()), !dbg !13208
  call void @llvm.dbg.value(metadata i32 1000000, metadata !11600, metadata !DIExpression()), !dbg !13208
  call void @llvm.dbg.value(metadata i32 10000, metadata !11601, metadata !DIExpression()), !dbg !13208
  call void @llvm.dbg.value(metadata i8 1, metadata !11602, metadata !DIExpression()), !dbg !13208
  call void @llvm.dbg.value(metadata i1 false, metadata !11603, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13208
  call void @llvm.dbg.value(metadata i1 true, metadata !11604, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13208
  call void @llvm.dbg.value(metadata i8 0, metadata !11605, metadata !DIExpression()), !dbg !13208
  call void @llvm.dbg.value(metadata i1 false, metadata !11606, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13208
  call void @llvm.dbg.value(metadata i1 true, metadata !11607, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13208
  call void @llvm.dbg.value(metadata i64 0, metadata !11608, metadata !DIExpression()), !dbg !13208
  call void @llvm.dbg.value(metadata i64 0, metadata !11608, metadata !DIExpression()), !dbg !13208
  %2 = add i64 %0, 99, !dbg !13210
  call void @llvm.dbg.value(metadata i64 %2, metadata !11597, metadata !DIExpression()), !dbg !13208
  %3 = udiv i64 %2, 100, !dbg !13211
  ret i64 %3, !dbg !13212
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #11 !dbg !13213 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13215, metadata !DIExpression()), !dbg !13216
  call void @llvm.dbg.value(metadata i64 %0, metadata !11597, metadata !DIExpression()), !dbg !13217
  call void @llvm.dbg.value(metadata i32 10000, metadata !11600, metadata !DIExpression()), !dbg !13217
  call void @llvm.dbg.value(metadata i32 1000000, metadata !11601, metadata !DIExpression()), !dbg !13217
  call void @llvm.dbg.value(metadata i8 1, metadata !11602, metadata !DIExpression()), !dbg !13217
  call void @llvm.dbg.value(metadata i1 false, metadata !11603, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13217
  call void @llvm.dbg.value(metadata i1 false, metadata !11604, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13217
  call void @llvm.dbg.value(metadata i8 0, metadata !11605, metadata !DIExpression()), !dbg !13217
  call void @llvm.dbg.value(metadata i1 true, metadata !11606, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13217
  call void @llvm.dbg.value(metadata i1 false, metadata !11607, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13217
  call void @llvm.dbg.value(metadata i64 0, metadata !11608, metadata !DIExpression()), !dbg !13217
  call void @llvm.dbg.value(metadata i64 0, metadata !11608, metadata !DIExpression()), !dbg !13217
  %2 = mul i64 %0, 100, !dbg !13219
  ret i64 %2, !dbg !13221
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13222 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13224, metadata !DIExpression()), !dbg !13225
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #25, !dbg !13226
  br i1 %2, label %14, label %3, !dbg !13228

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #25, !dbg !13229
  %5 = icmp slt i32 %4, 0, !dbg !13231
  br i1 %5, label %6, label %10, !dbg !13232

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13233
  %8 = load i8, i8* %7, align 1, !dbg !13233
  %9 = icmp eq i8 %8, 16, !dbg !13236
  br i1 %9, label %10, label %14, !dbg !13237

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #25, !dbg !13238
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #25, !dbg !13239
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13240, !srcloc !12201
  call void @llvm.dbg.value(metadata i32 %11, metadata !12197, metadata !DIExpression()) #23, !dbg !13244
  %12 = icmp eq i32 %11, 0, !dbg !13245
  br i1 %12, label %13, label %14, !dbg !13246

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !13247
  br label %14, !dbg !13249

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !13250
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13251 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13253, metadata !DIExpression()), !dbg !13254
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13255
  %3 = load i8, i8* %2, align 1, !dbg !13255
  %4 = and i8 %3, 2, !dbg !13256
  %5 = icmp ne i8 %4, 0, !dbg !13257
  ret i1 %5, !dbg !13258
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #5 !dbg !13259 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13264
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13263, metadata !DIExpression()), !dbg !13265
  ret %struct.k_thread* %1, !dbg !13266
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !13267 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13268, !srcloc !12201
  call void @llvm.dbg.value(metadata i32 %1, metadata !12197, metadata !DIExpression()) #23, !dbg !13271
  %2 = icmp eq i32 %1, 0, !dbg !13272
  br i1 %2, label %3, label %8, !dbg !13273

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13274
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #25, !dbg !13275
  %6 = icmp ne i32 %5, 0, !dbg !13273
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !13276
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13277 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13279, metadata !DIExpression()), !dbg !13281
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11550, metadata !DIExpression()) #23, !dbg !13282
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #23, !dbg !13284, !srcloc !11565
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13284
  call void @llvm.dbg.value(metadata i32 %3, metadata !11562, metadata !DIExpression()) #23, !dbg !13286
  call void @llvm.dbg.value(metadata i32 undef, metadata !11563, metadata !DIExpression()) #23, !dbg !13286
  call void @llvm.dbg.value(metadata i32 %3, metadata !11556, metadata !DIExpression()) #23, !dbg !13282
  call void @llvm.dbg.value(metadata i32 %3, metadata !13280, metadata !DIExpression()), !dbg !13281
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !13287
  %5 = load i8, i8* %4, align 4, !dbg !13287
  %6 = and i8 %5, 1, !dbg !13289
  %7 = icmp eq i8 %6, 0, !dbg !13290
  br i1 %7, label %9, label %8, !dbg !13291

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !11577, metadata !DIExpression()) #23, !dbg !13292
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11582, metadata !DIExpression()) #23, !dbg !13292
  call void @llvm.dbg.value(metadata i32 %3, metadata !11585, metadata !DIExpression()) #23, !dbg !13295
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13297, !srcloc !11591
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #23, !dbg !13298, !srcloc !13300
  br label %24, !dbg !13301

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13302
  %11 = load i8, i8* %10, align 1, !dbg !13302
  %12 = and i8 %11, 8, !dbg !13304
  %13 = icmp eq i8 %12, 0, !dbg !13305
  br i1 %13, label %15, label %14, !dbg !13306

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !11577, metadata !DIExpression()) #23, !dbg !13307
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11582, metadata !DIExpression()) #23, !dbg !13307
  call void @llvm.dbg.value(metadata i32 %3, metadata !11585, metadata !DIExpression()) #23, !dbg !13310
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13312, !srcloc !11591
  br label %24, !dbg !13313

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #25, !dbg !13314
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13315
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !13317
  br i1 %17, label %18, label %23, !dbg !13318

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13319, !srcloc !12201
  call void @llvm.dbg.value(metadata i32 %19, metadata !12197, metadata !DIExpression()) #23, !dbg !13322
  %20 = icmp eq i32 %19, 0, !dbg !13323
  br i1 %20, label %21, label %23, !dbg !13324

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !12161, metadata !DIExpression()) #23, !dbg !13325
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12166, metadata !DIExpression()) #23, !dbg !13325
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #24, !dbg !13328
  br label %23, !dbg !13329

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !11577, metadata !DIExpression()) #23, !dbg !13330
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11582, metadata !DIExpression()) #23, !dbg !13330
  call void @llvm.dbg.value(metadata i32 %3, metadata !11585, metadata !DIExpression()) #23, !dbg !13332
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13334, !srcloc !11591
  br label %24, !dbg !13335

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !13335
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13336 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13338, metadata !DIExpression()), !dbg !13339
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13340
  %3 = load i8, i8* %2, align 1, !dbg !13340
  %4 = and i8 %3, 8, !dbg !13342
  %5 = icmp eq i8 %4, 0, !dbg !13343
  br i1 %5, label %6, label %20, !dbg !13344

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !13345
  %8 = or i8 %7, 8, !dbg !13345
  store i8 %8, i8* %2, align 1, !dbg !13345
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #25, !dbg !13347
  br i1 %9, label %10, label %12, !dbg !13349

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11719, metadata !DIExpression()) #23, !dbg !13350
  %11 = and i8 %8, 95, !dbg !13353
  store i8 %11, i8* %2, align 1, !dbg !13353
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11727, metadata !DIExpression()) #23, !dbg !13354
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #24, !dbg !13356
  br label %12, !dbg !13357

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !13358
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !13358
  %15 = icmp eq %union.anon* %14, null, !dbg !13360
  br i1 %15, label %17, label %16, !dbg !13361

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #25, !dbg !13362
  br label %17, !dbg !13364

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #25, !dbg !13365
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !13366
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #25, !dbg !13367
  tail call fastcc void @update_cache(i32 noundef 1) #25, !dbg !13368
  br label %20, !dbg !13369

20:                                               ; preds = %17, %1
  ret void, !dbg !13370
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !13371 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13375, metadata !DIExpression()), !dbg !13377
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !13378
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13376, metadata !DIExpression()), !dbg !13377
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !13379
  br i1 %3, label %10, label %4, !dbg !13380

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #25, !dbg !13381
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #25, !dbg !13383
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13384, metadata !DIExpression()), !dbg !13390
  call void @llvm.dbg.value(metadata i32 0, metadata !13389, metadata !DIExpression()), !dbg !13390
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !13392
  store i32 0, i32* %7, align 4, !dbg !13393
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #25, !dbg !13394
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !13378
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !13376, metadata !DIExpression()), !dbg !13377
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !13379
  br i1 %9, label %10, label %4, !dbg !13380, !llvm.loop !13395

10:                                               ; preds = %4, %1
  ret void, !dbg !13397
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !13398 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13403, metadata !DIExpression()), !dbg !13406
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13402, metadata !DIExpression()), !dbg !13406
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11550, metadata !DIExpression()) #23, !dbg !13407
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #23, !dbg !13409, !srcloc !11565
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !13409
  call void @llvm.dbg.value(metadata i32 %4, metadata !11562, metadata !DIExpression()) #23, !dbg !13411
  call void @llvm.dbg.value(metadata i32 undef, metadata !11563, metadata !DIExpression()) #23, !dbg !13411
  call void @llvm.dbg.value(metadata i32 %4, metadata !11556, metadata !DIExpression()) #23, !dbg !13407
  call void @llvm.dbg.value(metadata i32 %4, metadata !13404, metadata !DIExpression()), !dbg !13406
  call void @llvm.dbg.value(metadata i32 0, metadata !13405, metadata !DIExpression()), !dbg !13406
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13412
  %6 = load i8, i8* %5, align 1, !dbg !13412
  %7 = and i8 %6, 8, !dbg !13414
  %8 = icmp eq i8 %7, 0, !dbg !13415
  br i1 %8, label %9, label %24, !dbg !13416

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !13403, metadata !DIExpression()), !dbg !13406
  %11 = icmp eq i64 %10, 0, !dbg !13417
  br i1 %11, label %24, label %12, !dbg !13419

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13420
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !13422
  br i1 %14, label %24, label %15, !dbg !13423

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !13424
  %17 = load %union.anon*, %union.anon** %16, align 8, !dbg !13424
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !13425
  %19 = icmp eq %union.anon* %17, %18, !dbg !13426
  br i1 %19, label %24, label %20, !dbg !13427

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !13428
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %union.anon* noundef nonnull %21) #25, !dbg !13430
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13431
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #25, !dbg !13432
  call void @llvm.dbg.value(metadata i32 %4, metadata !12161, metadata !DIExpression()) #23, !dbg !13433
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12166, metadata !DIExpression()) #23, !dbg !13433
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #24, !dbg !13435
  call void @llvm.dbg.value(metadata i32 %23, metadata !13405, metadata !DIExpression()), !dbg !13406
  br label %26, !dbg !13436

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !13437
  call void @llvm.dbg.value(metadata i32 %25, metadata !13405, metadata !DIExpression()), !dbg !13406
  call void @llvm.dbg.value(metadata i32 %4, metadata !11577, metadata !DIExpression()) #23, !dbg !13438
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11582, metadata !DIExpression()) #23, !dbg !13438
  call void @llvm.dbg.value(metadata i32 %4, metadata !11585, metadata !DIExpression()) #23, !dbg !13440
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !13442, !srcloc !11591
  br label %26, !dbg !13443

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !13406
  ret i32 %27, !dbg !13444
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13445 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13449, metadata !DIExpression()), !dbg !13457
  call void @llvm.dbg.value(metadata i32 %1, metadata !13450, metadata !DIExpression()), !dbg !13457
  call void @llvm.dbg.value(metadata i8* %2, metadata !13451, metadata !DIExpression()), !dbg !13457
  call void @llvm.dbg.value(metadata i8 0, metadata !13453, metadata !DIExpression()), !dbg !13457
  call void @llvm.dbg.value(metadata i32 0, metadata !13454, metadata !DIExpression()), !dbg !13458
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11550, metadata !DIExpression()) #23, !dbg !13459
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #23, !dbg !13461, !srcloc !11565
  call void @llvm.dbg.value(metadata i32 undef, metadata !11562, metadata !DIExpression()) #23, !dbg !13463
  call void @llvm.dbg.value(metadata i32 undef, metadata !11563, metadata !DIExpression()) #23, !dbg !13463
  call void @llvm.dbg.value(metadata i32 undef, metadata !11556, metadata !DIExpression()) #23, !dbg !13459
  call void @llvm.dbg.value(metadata i32 undef, metadata !13456, metadata !DIExpression()), !dbg !13458
  call void @llvm.dbg.value(metadata i8 poison, metadata !13453, metadata !DIExpression()), !dbg !13457
  call void @llvm.dbg.value(metadata i32 undef, metadata !13454, metadata !DIExpression()), !dbg !13458
  %5 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #25, !dbg !13464
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13452, metadata !DIExpression()), !dbg !13457
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !13467
  br i1 %7, label %12, label %8, !dbg !13469

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13470, metadata !DIExpression()), !dbg !13478
  call void @llvm.dbg.value(metadata i32 %1, metadata !13476, metadata !DIExpression()), !dbg !13478
  call void @llvm.dbg.value(metadata i8* %2, metadata !13477, metadata !DIExpression()), !dbg !13478
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13384, metadata !DIExpression()), !dbg !13481
  call void @llvm.dbg.value(metadata i32 %1, metadata !13389, metadata !DIExpression()), !dbg !13481
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !13483
  store i32 %1, i32* %9, align 4, !dbg !13484
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !13485
  store i8* %2, i8** %10, align 4, !dbg !13486
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #25, !dbg !13487
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #25, !dbg !13488
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #25, !dbg !13489
  call void @llvm.dbg.value(metadata i8 1, metadata !13453, metadata !DIExpression()), !dbg !13457
  br label %12, !dbg !13490

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !13461
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !13461
  call void @llvm.dbg.value(metadata i32 %14, metadata !11562, metadata !DIExpression()) #23, !dbg !13463
  call void @llvm.dbg.value(metadata i32 %14, metadata !11556, metadata !DIExpression()) #23, !dbg !13459
  call void @llvm.dbg.value(metadata i32 %14, metadata !13456, metadata !DIExpression()), !dbg !13458
  call void @llvm.dbg.value(metadata i8 poison, metadata !13453, metadata !DIExpression()), !dbg !13457
  call void @llvm.dbg.value(metadata i32 undef, metadata !11577, metadata !DIExpression()) #23, !dbg !13491
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11582, metadata !DIExpression()) #23, !dbg !13491
  call void @llvm.dbg.value(metadata i32 undef, metadata !11585, metadata !DIExpression()) #23, !dbg !13493
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !13495, !srcloc !11591
  call void @llvm.dbg.value(metadata i32 undef, metadata !13454, metadata !DIExpression()), !dbg !13458
  ret i1 %13, !dbg !13496
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !13497 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13503, metadata !DIExpression()), !dbg !13508
  call void @llvm.dbg.value(metadata i64 undef, metadata !13505, metadata !DIExpression()), !dbg !13508
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13502, metadata !DIExpression()), !dbg !13508
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !13504, metadata !DIExpression()), !dbg !13508
  call void @llvm.dbg.value(metadata i8** %4, metadata !13506, metadata !DIExpression()), !dbg !13508
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #25, !dbg !13509
  call void @llvm.dbg.value(metadata i32 %6, metadata !13507, metadata !DIExpression()), !dbg !13508
  %7 = icmp eq i8** %4, null, !dbg !13510
  br i1 %7, label %12, label %8, !dbg !13512

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13513
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !13515
  %11 = load i8*, i8** %10, align 4, !dbg !13515
  store i8* %11, i8** %4, align 4, !dbg !13516
  br label %12, !dbg !13517

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !13518
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !13519 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #24, !dbg !13521
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #24, !dbg !13522
  ret void, !dbg !13523
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !13524 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !13534, metadata !DIExpression()), !dbg !13551
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13532, metadata !DIExpression()), !dbg !13551
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !13533, metadata !DIExpression()), !dbg !13551
  %5 = icmp eq i64 %4, -1, !dbg !13552
  br i1 %5, label %55, label %6, !dbg !13554

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !13555
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !13556
  call void @llvm.dbg.value(metadata i32 0, metadata !13535, metadata !DIExpression()), !dbg !13557
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13558, metadata !DIExpression()) #23, !dbg !13565
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #23, !dbg !13567, !srcloc !13573
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !13567
  call void @llvm.dbg.value(metadata i32 %9, metadata !13570, metadata !DIExpression()) #23, !dbg !13574
  call void @llvm.dbg.value(metadata i32 undef, metadata !13571, metadata !DIExpression()) #23, !dbg !13574
  call void @llvm.dbg.value(metadata i32 %9, metadata !13564, metadata !DIExpression()) #23, !dbg !13565
  call void @llvm.dbg.value(metadata i32 %9, metadata !13541, metadata !DIExpression()), !dbg !13557
  call void @llvm.dbg.value(metadata i32 undef, metadata !13535, metadata !DIExpression()), !dbg !13557
  %10 = icmp slt i64 %4, -1, !dbg !13575
  br i1 %10, label %11, label %17, !dbg !13576

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !13577
  %13 = add i64 %4, %12, !dbg !13578
  %14 = sub i64 -2, %13, !dbg !13578
  call void @llvm.dbg.value(metadata i64 %14, metadata !13545, metadata !DIExpression()), !dbg !13579
  %15 = icmp sgt i64 %14, 1, !dbg !13580
  %16 = select i1 %15, i64 %14, i64 1, !dbg !13580
  br label %22, !dbg !13581

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !13582
  %19 = tail call fastcc i32 @elapsed.118() #25, !dbg !13584
  %20 = sext i32 %19 to i64, !dbg !13584
  %21 = add nsw i64 %18, %20, !dbg !13585
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !13586
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !13587
  store i64 %23, i64* %24, align 8, !dbg !13588
  %25 = tail call fastcc %struct._timeout* @first() #25, !dbg !13589
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !13542, metadata !DIExpression()), !dbg !13591
  %26 = icmp eq %struct._timeout* %25, null, !dbg !13592
  br i1 %26, label %42, label %27, !dbg !13592

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !13593
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !13542, metadata !DIExpression()), !dbg !13591
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !13597
  %31 = load i64, i64* %30, align 8, !dbg !13597
  %32 = icmp slt i64 %28, %31, !dbg !13598
  br i1 %32, label %33, label %38, !dbg !13599

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !13597
  %35 = sub nsw i64 %31, %28, !dbg !13600
  store i64 %35, i64* %34, align 8, !dbg !13600
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !13602
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13603
  tail call fastcc void @sys_dlist_insert.119(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #25, !dbg !13604
  br label %44, !dbg !13605

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !13606
  store i64 %39, i64* %24, align 8, !dbg !13606
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #25, !dbg !13607
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !13542, metadata !DIExpression()), !dbg !13591
  %41 = icmp eq %struct._timeout* %40, null, !dbg !13592
  br i1 %41, label %42, label %27, !dbg !13592, !llvm.loop !13608

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13610
  tail call fastcc void @sys_dlist_append.120(%struct._dnode* noundef %43) #25, !dbg !13613
  br label %44, !dbg !13614

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #25, !dbg !13615
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !13616
  br i1 %46, label %47, label %54, !dbg !13617

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #25, !dbg !13618
  call void @llvm.dbg.value(metadata i32 %48, metadata !13548, metadata !DIExpression()), !dbg !13619
  %49 = icmp ne i32 %48, 0, !dbg !13620
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !13622
  br i1 %52, label %54, label %53, !dbg !13622

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #24, !dbg !13623
  br label %54, !dbg !13625

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !13626, metadata !DIExpression()) #23, !dbg !13632
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13631, metadata !DIExpression()) #23, !dbg !13632
  call void @llvm.dbg.value(metadata i32 %9, metadata !13634, metadata !DIExpression()) #23, !dbg !13637
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !13639, !srcloc !13640
  call void @llvm.dbg.value(metadata i32 undef, metadata !13535, metadata !DIExpression()), !dbg !13557
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !13641
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.118() unnamed_addr #1 !dbg !13642 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !13645
  %2 = icmp eq i32 %1, 0, !dbg !13646
  br i1 %2, label %3, label %5, !dbg !13645

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #24, !dbg !13647
  br label %5, !dbg !13645

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !13645
  ret i32 %6, !dbg !13648
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #5 !dbg !13649 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.123() #25, !dbg !13655
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13653, metadata !DIExpression()), !dbg !13656
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !13657
  ret %struct._timeout* %2, !dbg !13658
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.119(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !13659 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13663, metadata !DIExpression()), !dbg !13667
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13664, metadata !DIExpression()), !dbg !13667
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13668
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !13668
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !13665, metadata !DIExpression()), !dbg !13667
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !13669
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !13670
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !13671
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !13672
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !13673
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !13674
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !13675
  ret void, !dbg !13676
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #5 !dbg !13677 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13681, metadata !DIExpression()), !dbg !13683
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13684
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.121(%struct._dnode* noundef %2) #25, !dbg !13685
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !13682, metadata !DIExpression()), !dbg !13683
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !13686
  ret %struct._timeout* %4, !dbg !13687
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.120(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !13688 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !13693, metadata !DIExpression()), !dbg !13696
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13694, metadata !DIExpression()), !dbg !13696
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !13697
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !13695, metadata !DIExpression()), !dbg !13696
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13698
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !13699
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13700
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !13701
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !13702
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !13703
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !13704
  ret void, !dbg !13705
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !13706 {
  %1 = tail call fastcc %struct._timeout* @first() #25, !dbg !13711
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !13708, metadata !DIExpression()), !dbg !13712
  %2 = tail call fastcc i32 @elapsed.118() #25, !dbg !13713
  call void @llvm.dbg.value(metadata i32 %2, metadata !13709, metadata !DIExpression()), !dbg !13712
  %3 = icmp eq %struct._timeout* %1, null, !dbg !13714
  br i1 %3, label %14, label %4, !dbg !13716

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !13717
  %6 = load i64, i64* %5, align 8, !dbg !13717
  %7 = sext i32 %2 to i64, !dbg !13718
  %8 = sub nsw i64 %6, %7, !dbg !13719
  %9 = icmp sgt i64 %8, 2147483647, !dbg !13720
  br i1 %9, label %14, label %10, !dbg !13721

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !13722
  %12 = select i1 %11, i64 %8, i64 0, !dbg !13722
  %13 = trunc i64 %12 to i32, !dbg !13722
  call void @llvm.dbg.value(metadata i32 %13, metadata !13710, metadata !DIExpression()), !dbg !13712
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !13724
  call void @llvm.dbg.value(metadata i32 %15, metadata !13710, metadata !DIExpression()), !dbg !13712
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13725
  %17 = icmp ne i32 %16, 0, !dbg !13727
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !13728
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !13728
  call void @llvm.dbg.value(metadata i32 %20, metadata !13710, metadata !DIExpression()), !dbg !13712
  ret i32 %20, !dbg !13729
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.121(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !13730 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !13734, metadata !DIExpression()), !dbg !13736
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13735, metadata !DIExpression()), !dbg !13736
  %2 = icmp eq %struct._dnode* %0, null, !dbg !13737
  br i1 %2, label %5, label %3, !dbg !13738

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.122(%struct._dnode* noundef nonnull %0) #25, !dbg !13739
  br label %5, !dbg !13738

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !13738
  ret %struct._dnode* %6, !dbg !13740
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.122(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !13741 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !13743, metadata !DIExpression()), !dbg !13745
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13744, metadata !DIExpression()), !dbg !13745
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !13746
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !13747
  br i1 %3, label %7, label %4, !dbg !13748

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13749
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !13749
  br label %7, !dbg !13748

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !13748
  ret %struct._dnode* %8, !dbg !13750
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.123() unnamed_addr #5 !dbg !13751 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !13755, metadata !DIExpression()), !dbg !13756
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.124() #25, !dbg !13757
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !13757
  ret %struct._dnode* %3, !dbg !13758
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.124() unnamed_addr #5 !dbg !13759 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !13763, metadata !DIExpression()), !dbg !13764
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !13765
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !13766
  ret i1 %2, !dbg !13767
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !13768 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13772, metadata !DIExpression()), !dbg !13777
  call void @llvm.dbg.value(metadata i32 -22, metadata !13773, metadata !DIExpression()), !dbg !13777
  call void @llvm.dbg.value(metadata i32 0, metadata !13774, metadata !DIExpression()), !dbg !13778
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13558, metadata !DIExpression()) #23, !dbg !13779
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #23, !dbg !13781, !srcloc !13573
  call void @llvm.dbg.value(metadata i32 undef, metadata !13570, metadata !DIExpression()) #23, !dbg !13783
  call void @llvm.dbg.value(metadata i32 undef, metadata !13571, metadata !DIExpression()) #23, !dbg !13783
  call void @llvm.dbg.value(metadata i32 undef, metadata !13564, metadata !DIExpression()) #23, !dbg !13779
  call void @llvm.dbg.value(metadata i32 undef, metadata !13776, metadata !DIExpression()), !dbg !13778
  call void @llvm.dbg.value(metadata i32 -22, metadata !13773, metadata !DIExpression()), !dbg !13777
  call void @llvm.dbg.value(metadata i32 undef, metadata !13774, metadata !DIExpression()), !dbg !13778
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !13773, metadata !DIExpression()), !dbg !13777
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.127(%struct._dnode* noundef %3) #25, !dbg !13784
  br i1 %4, label %5, label %6, !dbg !13788

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #25, !dbg !13789
  call void @llvm.dbg.value(metadata i32 0, metadata !13773, metadata !DIExpression()), !dbg !13777
  br label %6, !dbg !13791

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !13777
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !13781
  call void @llvm.dbg.value(metadata i32 %8, metadata !13570, metadata !DIExpression()) #23, !dbg !13783
  call void @llvm.dbg.value(metadata i32 %8, metadata !13564, metadata !DIExpression()) #23, !dbg !13779
  call void @llvm.dbg.value(metadata i32 %8, metadata !13776, metadata !DIExpression()), !dbg !13778
  call void @llvm.dbg.value(metadata i32 %7, metadata !13773, metadata !DIExpression()), !dbg !13777
  call void @llvm.dbg.value(metadata i32 undef, metadata !13626, metadata !DIExpression()) #23, !dbg !13792
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13631, metadata !DIExpression()) #23, !dbg !13792
  call void @llvm.dbg.value(metadata i32 undef, metadata !13634, metadata !DIExpression()) #23, !dbg !13794
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !13796, !srcloc !13640
  call void @llvm.dbg.value(metadata i32 undef, metadata !13774, metadata !DIExpression()), !dbg !13778
  ret i32 %7, !dbg !13797
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.127(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13798 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13804, metadata !DIExpression()), !dbg !13805
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13806
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13806
  %4 = icmp ne %struct._dnode* %3, null, !dbg !13807
  ret i1 %4, !dbg !13808
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #7 !dbg !13809 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13811, metadata !DIExpression()), !dbg !13812
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #25, !dbg !13813
  %3 = icmp eq %struct._timeout* %2, null, !dbg !13815
  br i1 %3, label %10, label %4, !dbg !13816

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !13817
  %6 = load i64, i64* %5, align 8, !dbg !13817
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !13819
  %8 = load i64, i64* %7, align 8, !dbg !13820
  %9 = add nsw i64 %8, %6, !dbg !13820
  store i64 %9, i64* %7, align 8, !dbg !13820
  br label %10, !dbg !13821

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13822
  tail call fastcc void @sys_dlist_remove.128(%struct._dnode* noundef %11) #25, !dbg !13823
  ret void, !dbg !13824
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.128(%struct._dnode* nocapture noundef %0) unnamed_addr #7 !dbg !13825 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13829, metadata !DIExpression()), !dbg !13832
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13833
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13833
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !13830, metadata !DIExpression()), !dbg !13832
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13834
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !13834
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !13831, metadata !DIExpression()), !dbg !13832
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !13835
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !13836
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !13837
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !13838
  tail call fastcc void @sys_dnode_init.129(%struct._dnode* noundef %0) #25, !dbg !13839
  ret void, !dbg !13840
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.129(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !13841 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13843, metadata !DIExpression()), !dbg !13844
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13845
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !13846
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13847
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !13848
  ret void, !dbg !13849
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !13850 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13856, metadata !DIExpression()), !dbg !13861
  call void @llvm.dbg.value(metadata i64 0, metadata !13857, metadata !DIExpression()), !dbg !13861
  call void @llvm.dbg.value(metadata i32 0, metadata !13858, metadata !DIExpression()), !dbg !13862
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13558, metadata !DIExpression()) #23, !dbg !13863
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #23, !dbg !13865, !srcloc !13573
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13865
  call void @llvm.dbg.value(metadata i32 %3, metadata !13570, metadata !DIExpression()) #23, !dbg !13867
  call void @llvm.dbg.value(metadata i32 undef, metadata !13571, metadata !DIExpression()) #23, !dbg !13867
  call void @llvm.dbg.value(metadata i32 %3, metadata !13564, metadata !DIExpression()) #23, !dbg !13863
  call void @llvm.dbg.value(metadata i32 %3, metadata !13860, metadata !DIExpression()), !dbg !13862
  call void @llvm.dbg.value(metadata i64 0, metadata !13857, metadata !DIExpression()), !dbg !13861
  call void @llvm.dbg.value(metadata i32 undef, metadata !13858, metadata !DIExpression()), !dbg !13862
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #25, !dbg !13868
  call void @llvm.dbg.value(metadata i64 %4, metadata !13857, metadata !DIExpression()), !dbg !13861
  call void @llvm.dbg.value(metadata i32 %3, metadata !13626, metadata !DIExpression()) #23, !dbg !13871
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13631, metadata !DIExpression()) #23, !dbg !13871
  call void @llvm.dbg.value(metadata i32 %3, metadata !13634, metadata !DIExpression()) #23, !dbg !13873
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13875, !srcloc !13640
  call void @llvm.dbg.value(metadata i32 undef, metadata !13858, metadata !DIExpression()), !dbg !13862
  ret i64 %4, !dbg !13876
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !13877 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13879, metadata !DIExpression()), !dbg !13883
  call void @llvm.dbg.value(metadata i64 0, metadata !13880, metadata !DIExpression()), !dbg !13883
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.130(%struct._timeout* noundef %0) #25, !dbg !13884
  br i1 %2, label %21, label %3, !dbg !13886

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #25, !dbg !13887
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !13881, metadata !DIExpression()), !dbg !13888
  call void @llvm.dbg.value(metadata i64 0, metadata !13880, metadata !DIExpression()), !dbg !13883
  %5 = icmp eq %struct._timeout* %4, null, !dbg !13889
  br i1 %5, label %16, label %6, !dbg !13891

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !13881, metadata !DIExpression()), !dbg !13888
  call void @llvm.dbg.value(metadata i64 %8, metadata !13880, metadata !DIExpression()), !dbg !13883
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !13892
  %10 = load i64, i64* %9, align 8, !dbg !13892
  %11 = add nsw i64 %10, %8, !dbg !13894
  call void @llvm.dbg.value(metadata i64 %11, metadata !13880, metadata !DIExpression()), !dbg !13883
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !13895
  br i1 %12, label %16, label %13, !dbg !13897

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #25, !dbg !13898
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !13881, metadata !DIExpression()), !dbg !13888
  call void @llvm.dbg.value(metadata i64 %11, metadata !13880, metadata !DIExpression()), !dbg !13883
  %15 = icmp eq %struct._timeout* %14, null, !dbg !13889
  br i1 %15, label %16, label %6, !dbg !13891, !llvm.loop !13899

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !13883
  call void @llvm.dbg.value(metadata i64 %17, metadata !13880, metadata !DIExpression()), !dbg !13883
  %18 = tail call fastcc i32 @elapsed.118() #25, !dbg !13901
  %19 = sext i32 %18 to i64, !dbg !13901
  %20 = sub nsw i64 %17, %19, !dbg !13902
  br label %21, !dbg !13903

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !13883
  ret i64 %22, !dbg !13904
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.130(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13905 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13909, metadata !DIExpression()), !dbg !13910
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13911
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.127(%struct._dnode* noundef %2) #25, !dbg !13912
  %4 = xor i1 %3, true, !dbg !13913
  ret i1 %4, !dbg !13914
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !13915 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13917, metadata !DIExpression()), !dbg !13922
  call void @llvm.dbg.value(metadata i64 0, metadata !13918, metadata !DIExpression()), !dbg !13922
  call void @llvm.dbg.value(metadata i32 0, metadata !13919, metadata !DIExpression()), !dbg !13923
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13558, metadata !DIExpression()) #23, !dbg !13924
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #23, !dbg !13926, !srcloc !13573
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13926
  call void @llvm.dbg.value(metadata i32 %3, metadata !13570, metadata !DIExpression()) #23, !dbg !13928
  call void @llvm.dbg.value(metadata i32 undef, metadata !13571, metadata !DIExpression()) #23, !dbg !13928
  call void @llvm.dbg.value(metadata i32 %3, metadata !13564, metadata !DIExpression()) #23, !dbg !13924
  call void @llvm.dbg.value(metadata i32 %3, metadata !13921, metadata !DIExpression()), !dbg !13923
  call void @llvm.dbg.value(metadata i64 0, metadata !13918, metadata !DIExpression()), !dbg !13922
  call void @llvm.dbg.value(metadata i32 undef, metadata !13919, metadata !DIExpression()), !dbg !13923
  %4 = load i64, i64* @curr_tick, align 8, !dbg !13929
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #25, !dbg !13932
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !13918, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !13922
  call void @llvm.dbg.value(metadata i32 %3, metadata !13626, metadata !DIExpression()) #23, !dbg !13933
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13631, metadata !DIExpression()) #23, !dbg !13933
  call void @llvm.dbg.value(metadata i32 %3, metadata !13634, metadata !DIExpression()) #23, !dbg !13935
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13937, !srcloc !13640
  call void @llvm.dbg.value(metadata i32 undef, metadata !13919, metadata !DIExpression()), !dbg !13923
  %6 = add i64 %5, %4, !dbg !13938
  ret i64 %6, !dbg !13939
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !13940 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !13942, metadata !DIExpression()), !dbg !13946
  call void @llvm.dbg.value(metadata i32 0, metadata !13943, metadata !DIExpression()), !dbg !13947
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13558, metadata !DIExpression()) #23, !dbg !13948
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #23, !dbg !13950, !srcloc !13573
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !13950
  call void @llvm.dbg.value(metadata i32 %2, metadata !13570, metadata !DIExpression()) #23, !dbg !13952
  call void @llvm.dbg.value(metadata i32 undef, metadata !13571, metadata !DIExpression()) #23, !dbg !13952
  call void @llvm.dbg.value(metadata i32 %2, metadata !13564, metadata !DIExpression()) #23, !dbg !13948
  call void @llvm.dbg.value(metadata i32 %2, metadata !13945, metadata !DIExpression()), !dbg !13947
  call void @llvm.dbg.value(metadata i32 -1, metadata !13942, metadata !DIExpression()), !dbg !13946
  call void @llvm.dbg.value(metadata i32 undef, metadata !13943, metadata !DIExpression()), !dbg !13947
  %3 = tail call fastcc i32 @next_timeout() #25, !dbg !13953
  call void @llvm.dbg.value(metadata i32 %3, metadata !13942, metadata !DIExpression()), !dbg !13946
  call void @llvm.dbg.value(metadata i32 %2, metadata !13626, metadata !DIExpression()) #23, !dbg !13956
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13631, metadata !DIExpression()) #23, !dbg !13956
  call void @llvm.dbg.value(metadata i32 %2, metadata !13634, metadata !DIExpression()) #23, !dbg !13958
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !13960, !srcloc !13640
  call void @llvm.dbg.value(metadata i32 undef, metadata !13943, metadata !DIExpression()), !dbg !13947
  ret i32 %3, !dbg !13961
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !13962 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13964, metadata !DIExpression()), !dbg !13974
  call void @llvm.dbg.value(metadata i1 %1, metadata !13965, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13974
  call void @llvm.dbg.value(metadata i32 0, metadata !13966, metadata !DIExpression()), !dbg !13975
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13558, metadata !DIExpression()) #23, !dbg !13976
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #23, !dbg !13978, !srcloc !13573
  call void @llvm.dbg.value(metadata i32 undef, metadata !13570, metadata !DIExpression()) #23, !dbg !13980
  call void @llvm.dbg.value(metadata i32 undef, metadata !13571, metadata !DIExpression()) #23, !dbg !13980
  call void @llvm.dbg.value(metadata i32 undef, metadata !13564, metadata !DIExpression()) #23, !dbg !13976
  call void @llvm.dbg.value(metadata i32 undef, metadata !13968, metadata !DIExpression()), !dbg !13975
  call void @llvm.dbg.value(metadata i32 undef, metadata !13966, metadata !DIExpression()), !dbg !13975
  %4 = tail call fastcc i32 @next_timeout() #25, !dbg !13981
  call void @llvm.dbg.value(metadata i32 %4, metadata !13969, metadata !DIExpression()), !dbg !13982
  call void @llvm.dbg.value(metadata i1 undef, metadata !13972, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13982
  %5 = icmp slt i32 %4, 2, !dbg !13983
  call void @llvm.dbg.value(metadata i1 %5, metadata !13973, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13982
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !13984
  call void @llvm.dbg.value(metadata i1 %6, metadata !13972, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13982
  br i1 %7, label %11, label %8, !dbg !13984

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !13986
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !13986
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #24, !dbg !13988
  br label %11, !dbg !13989

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !13978
  call void @llvm.dbg.value(metadata i32 %12, metadata !13570, metadata !DIExpression()) #23, !dbg !13980
  call void @llvm.dbg.value(metadata i32 %12, metadata !13564, metadata !DIExpression()) #23, !dbg !13976
  call void @llvm.dbg.value(metadata i32 %12, metadata !13968, metadata !DIExpression()), !dbg !13975
  call void @llvm.dbg.value(metadata i32 undef, metadata !13626, metadata !DIExpression()) #23, !dbg !13990
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13631, metadata !DIExpression()) #23, !dbg !13990
  call void @llvm.dbg.value(metadata i32 undef, metadata !13634, metadata !DIExpression()) #23, !dbg !13992
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !13994, !srcloc !13640
  call void @llvm.dbg.value(metadata i32 1, metadata !13966, metadata !DIExpression()), !dbg !13975
  call void @llvm.dbg.value(metadata i32 undef, metadata !13966, metadata !DIExpression()), !dbg !13975
  ret void, !dbg !13995
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !13996 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14000, metadata !DIExpression()), !dbg !14005
  tail call void @z_time_slice(i32 noundef %0) #24, !dbg !14006
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13558, metadata !DIExpression()) #23, !dbg !14007
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #23, !dbg !14009, !srcloc !13573
  call void @llvm.dbg.value(metadata i32 undef, metadata !13570, metadata !DIExpression()) #23, !dbg !14011
  call void @llvm.dbg.value(metadata i32 undef, metadata !13571, metadata !DIExpression()) #23, !dbg !14011
  call void @llvm.dbg.value(metadata i32 undef, metadata !13564, metadata !DIExpression()) #23, !dbg !14007
  call void @llvm.dbg.value(metadata i32 undef, metadata !14001, metadata !DIExpression()), !dbg !14005
  store i32 %0, i32* @announce_remaining, align 4, !dbg !14005
  call void @llvm.dbg.value(metadata i32 undef, metadata !14001, metadata !DIExpression()), !dbg !14005
  %3 = tail call fastcc %struct._timeout* @first() #25, !dbg !14012
  %4 = icmp eq %struct._timeout* %3, null, !dbg !14013
  br i1 %4, label %28, label %5, !dbg !14014

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !14015
  %10 = load i64, i64* %9, align 8, !dbg !14015
  %11 = sext i32 %8 to i64, !dbg !14016
  %12 = icmp sgt i64 %10, %11, !dbg !14017
  br i1 %12, label %26, label %13, !dbg !14018

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !14005
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !14002, metadata !DIExpression()), !dbg !14019
  %15 = trunc i64 %10 to i32, !dbg !14020
  call void @llvm.dbg.value(metadata i32 %15, metadata !14004, metadata !DIExpression()), !dbg !14019
  %16 = sext i32 %15 to i64, !dbg !14021
  %17 = load i64, i64* @curr_tick, align 8, !dbg !14022
  %18 = add i64 %17, %16, !dbg !14022
  store i64 %18, i64* @curr_tick, align 8, !dbg !14022
  store i64 0, i64* %9, align 8, !dbg !14023
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #25, !dbg !14024
  call void @llvm.dbg.value(metadata i32 %14, metadata !13626, metadata !DIExpression()) #23, !dbg !14025
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13631, metadata !DIExpression()) #23, !dbg !14025
  call void @llvm.dbg.value(metadata i32 %14, metadata !13634, metadata !DIExpression()) #23, !dbg !14027
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !14029, !srcloc !13640
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !14030
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !14030
  tail call void %20(%struct._timeout* noundef nonnull %6) #24, !dbg !14031
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13558, metadata !DIExpression()) #23, !dbg !14032
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #23, !dbg !14034, !srcloc !13573
  call void @llvm.dbg.value(metadata i32 undef, metadata !13570, metadata !DIExpression()) #23, !dbg !14036
  call void @llvm.dbg.value(metadata i32 undef, metadata !13571, metadata !DIExpression()) #23, !dbg !14036
  call void @llvm.dbg.value(metadata i32 undef, metadata !13564, metadata !DIExpression()) #23, !dbg !14032
  call void @llvm.dbg.value(metadata i32 undef, metadata !14001, metadata !DIExpression()), !dbg !14005
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !14037
  %23 = sub nsw i32 %22, %15, !dbg !14037
  store i32 %23, i32* @announce_remaining, align 4, !dbg !14005
  call void @llvm.dbg.value(metadata i32 undef, metadata !14001, metadata !DIExpression()), !dbg !14005
  %24 = tail call fastcc %struct._timeout* @first() #25, !dbg !14012
  %25 = icmp eq %struct._timeout* %24, null, !dbg !14013
  br i1 %25, label %28, label %5, !dbg !14014, !llvm.loop !14038

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !14040
  store i64 %27, i64* %9, align 8, !dbg !14040
  br label %32, !dbg !14043

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !14005
  %31 = sext i32 %30 to i64, !dbg !14044
  br label %32, !dbg !14044

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !14044
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !14005
  %36 = load i64, i64* @curr_tick, align 8, !dbg !14045
  %37 = add i64 %36, %33, !dbg !14045
  store i64 %37, i64* @curr_tick, align 8, !dbg !14045
  store i32 0, i32* @announce_remaining, align 4, !dbg !14046
  %38 = tail call fastcc i32 @next_timeout() #25, !dbg !14047
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #24, !dbg !14048
  call void @llvm.dbg.value(metadata i32 %35, metadata !13626, metadata !DIExpression()) #23, !dbg !14049
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13631, metadata !DIExpression()) #23, !dbg !14049
  call void @llvm.dbg.value(metadata i32 %35, metadata !13634, metadata !DIExpression()) #23, !dbg !14051
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #23, !dbg !14053, !srcloc !13640
  ret void, !dbg !14054
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !14055 {
  call void @llvm.dbg.value(metadata i64 0, metadata !14059, metadata !DIExpression()), !dbg !14063
  call void @llvm.dbg.value(metadata i32 0, metadata !14060, metadata !DIExpression()), !dbg !14064
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13558, metadata !DIExpression()) #23, !dbg !14065
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 32) #23, !dbg !14067, !srcloc !13573
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14067
  call void @llvm.dbg.value(metadata i32 %2, metadata !13570, metadata !DIExpression()) #23, !dbg !14069
  call void @llvm.dbg.value(metadata i32 undef, metadata !13571, metadata !DIExpression()) #23, !dbg !14069
  call void @llvm.dbg.value(metadata i32 %2, metadata !13564, metadata !DIExpression()) #23, !dbg !14065
  call void @llvm.dbg.value(metadata i32 %2, metadata !14062, metadata !DIExpression()), !dbg !14064
  call void @llvm.dbg.value(metadata i64 0, metadata !14059, metadata !DIExpression()), !dbg !14063
  call void @llvm.dbg.value(metadata i32 undef, metadata !14060, metadata !DIExpression()), !dbg !14064
  %3 = load i64, i64* @curr_tick, align 8, !dbg !14070
  %4 = tail call fastcc i32 @elapsed.118() #25, !dbg !14073
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !14059, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !14063
  call void @llvm.dbg.value(metadata i32 %2, metadata !13626, metadata !DIExpression()) #23, !dbg !14074
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13631, metadata !DIExpression()) #23, !dbg !14074
  call void @llvm.dbg.value(metadata i32 %2, metadata !13634, metadata !DIExpression()) #23, !dbg !14076
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !14078, !srcloc !13640
  call void @llvm.dbg.value(metadata i32 undef, metadata !14060, metadata !DIExpression()), !dbg !14064
  %5 = sext i32 %4 to i64, !dbg !14073
  %6 = add i64 %3, %5, !dbg !14079
  ret i64 %6, !dbg !14080
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !14081 {
  %1 = tail call i64 @sys_clock_tick_get() #25, !dbg !14082
  %2 = trunc i64 %1 to i32, !dbg !14083
  ret i32 %2, !dbg !14084
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !14085 {
  %1 = tail call i64 @sys_clock_tick_get() #25, !dbg !14086
  ret i64 %1, !dbg !14087
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !14088 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14090, metadata !DIExpression()), !dbg !14097
  %2 = icmp eq i32 %0, 0, !dbg !14098
  br i1 %2, label %10, label %3, !dbg !14100

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #25, !dbg !14101
  call void @llvm.dbg.value(metadata i32 %4, metadata !14091, metadata !DIExpression()), !dbg !14097
  %5 = mul i32 %0, 120, !dbg !14102
  call void @llvm.dbg.value(metadata i32 %5, metadata !14092, metadata !DIExpression()), !dbg !14097
  br label %6, !dbg !14103

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #25, !dbg !14104
  call void @llvm.dbg.value(metadata i32 %7, metadata !14093, metadata !DIExpression()), !dbg !14105
  %8 = sub i32 %7, %4, !dbg !14106
  %9 = icmp ult i32 %8, %5, !dbg !14108
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !14109
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !14110 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #25, !dbg !14111
  ret i32 %1, !dbg !14112
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !14113 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #24, !dbg !14115
  ret i32 %1, !dbg !14116
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !14117 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !14121, metadata !DIExpression()), !dbg !14123
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !14124

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #25, !dbg !14125
  br label %14, !dbg !14129

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !14122, metadata !DIExpression()), !dbg !14123
  %6 = icmp slt i64 %2, -1, !dbg !14130
  br i1 %6, label %7, label %9, !dbg !14133

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !14134
  br label %14, !dbg !14135

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #25, !dbg !14137
  %11 = icmp ugt i64 %2, 1, !dbg !14138
  %12 = select i1 %11, i64 %2, i64 1, !dbg !14138
  %13 = add nsw i64 %10, %12, !dbg !14139
  br label %14, !dbg !14140

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !14141
  ret i64 %15, !dbg !14142
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !14143 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.139, i32 0, i32 0)) #24, !dbg !14145
  ret void, !dbg !14146
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { argmemonly nofree nosync nounwind willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { nofree nosync nounwind willreturn }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { argmemonly nofree nounwind willreturn writeonly }
attributes #15 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nounwind }
attributes #24 = { nobuiltin nounwind optsize "no-builtins" }
attributes #25 = { nobuiltin optsize "no-builtins" }
attributes #26 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #27 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #28 = { nounwind readnone }
attributes #29 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!1494, !2, !3179, !27, !124, !3181, !3183, !138, !3207, !3244, !3246, !167, !3248, !3259, !3306, !3308, !3336, !3364, !3407, !3478, !3523, !742, !886, !3551, !921, !931, !956, !1503, !1602, !2220, !3556, !2453, !3558, !2636, !3561, !2642, !3006, !3579, !3027, !3581, !3142, !3584}
!llvm.ident = !{!3586, !3586, !3586, !3586, !3586, !3586, !3586, !3586, !3586, !3586, !3586, !3586, !3586, !3586, !3586, !3586, !3586, !3586, !3586, !3586, !3586, !3586, !3586, !3586, !3586, !3586, !3586, !3586, !3586, !3586, !3586, !3586, !3586, !3586, !3586, !3586, !3586, !3586, !3586, !3586, !3586, !3586}
!llvm.module.flags = !{!3587, !3588, !3589, !3590, !3591, !3592, !3593, !3594, !3595}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/basic/sys_heap/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/basic/sys_heap")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 149, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/basic/sys_heap")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 8768, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 137)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 4384, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "heap", scope: !27, file: !107, line: 13, type: !112, isLocal: true, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !104, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/basic/sys_heap/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/basic/sys_heap")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!103 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!104 = !{!105, !25}
!105 = !DIGlobalVariableExpression(var: !106, expr: !DIExpression())
!106 = distinct !DIGlobalVariable(name: "heap_mem", scope: !27, file: !107, line: 12, type: !108, isLocal: true, isDefinition: true)
!107 = !DIFile(filename: "zephyr/samples/basic/sys_heap/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!108 = !DICompositeType(tag: DW_TAG_array_type, baseType: !109, size: 2048, elements: !110)
!109 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!110 = !{!111}
!111 = !DISubrange(count: 256)
!112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !114)
!113 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!114 = !{!115, !118, !119}
!115 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !112, file: !113, line: 57, baseType: !116, size: 32)
!116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 32)
!117 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !113, line: 57, flags: DIFlagFwdDecl)
!118 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !112, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!119 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !112, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!120 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !121, line: 214, baseType: !32)
!121 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!122 = !DIGlobalVariableExpression(var: !123, expr: !DIExpression())
!123 = distinct !DIGlobalVariable(name: "_char_out", scope: !124, file: !127, line: 54, type: !128, isLocal: false, isDefinition: true)
!124 = distinct !DICompileUnit(language: DW_LANG_C99, file: !125, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !126, splitDebugInlining: false, nameTableKind: None)
!125 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/basic/sys_heap")
!126 = !{!122}
!127 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !129, size: 32)
!129 = !DISubroutineType(types: !130)
!130 = !{!103, !103}
!131 = !DIGlobalVariableExpression(var: !132, expr: !DIExpression())
!132 = distinct !DIGlobalVariable(name: "state", scope: !133, file: !134, line: 227, type: !163, isLocal: true, isDefinition: true)
!133 = distinct !DISubprogram(name: "rand32", scope: !134, file: !134, line: 225, type: !135, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !162)
!134 = !DIFile(filename: "zephyr/lib/os/heap-validate.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!135 = !DISubroutineType(types: !136)
!136 = !{!137}
!137 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!138 = distinct !DICompileUnit(language: DW_LANG_C99, file: !139, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !148, globals: !161, splitDebugInlining: false, nameTableKind: None)
!139 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap-validate.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/basic/sys_heap")
!140 = !{!30, !141}
!141 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chunk_fields", file: !142, line: 54, baseType: !32, size: 32, elements: !143)
!142 = !DIFile(filename: "zephyr/lib/os/heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!143 = !{!144, !145, !146, !147}
!144 = !DIEnumerator(name: "LEFT_SIZE", value: 0)
!145 = !DIEnumerator(name: "SIZE_AND_USED", value: 1)
!146 = !DIEnumerator(name: "FREE_PREV", value: 2)
!147 = !DIEnumerator(name: "FREE_NEXT", value: 3)
!148 = !{!102, !103, !149, !150, !137, !153}
!149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !137, size: 32)
!150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !151, size: 32)
!151 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !152)
!152 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !154, size: 32)
!154 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !142, line: 58, baseType: !155)
!155 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !142, line: 58, size: 64, elements: !156)
!156 = !{!157}
!157 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !155, file: !142, line: 58, baseType: !158, size: 64)
!158 = !DICompositeType(tag: DW_TAG_array_type, baseType: !109, size: 64, elements: !159)
!159 = !{!160}
!160 = !DISubrange(count: 8)
!161 = !{!131}
!162 = !{}
!163 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !164)
!164 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!165 = !DIGlobalVariableExpression(var: !166, expr: !DIExpression())
!166 = distinct !DIGlobalVariable(name: "__init_atmel_samd_init", scope: !167, file: !706, line: 149, type: !707, isLocal: true, isDefinition: true, align: 32)
!167 = distinct !DICompileUnit(language: DW_LANG_C99, file: !168, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !169, globals: !705, splitDebugInlining: false, nameTableKind: None)
!168 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/atmel_sam0/common/./soc_samd5x.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/basic/sys_heap")
!169 = !{!102, !103, !170, !306, !391}
!170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !171, size: 32)
!171 = !DIDerivedType(tag: DW_TAG_typedef, name: "Cmcc", file: !172, line: 352, baseType: !173)
!172 = !DIFile(filename: "modules/hal/atmel/asf/sam0/include/samd51/component/cmcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!173 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 339, size: 448, elements: !174)
!174 = !{!175, !191, !203, !213, !224, !234, !244, !254, !265, !275, !285, !295}
!175 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !173, file: !172, line: 340, baseType: !176, size: 32)
!176 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !177)
!177 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !178)
!178 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMCC_TYPE_Type", file: !172, line: 57, baseType: !179)
!179 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !172, line: 44, size: 32, elements: !180)
!180 = !{!181, !190}
!181 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !179, file: !172, line: 55, baseType: !182, size: 32)
!182 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !179, file: !172, line: 45, size: 32, elements: !183)
!183 = !{!184, !185, !186, !187, !188, !189}
!184 = !DIDerivedType(tag: DW_TAG_member, name: "GCLK", scope: !182, file: !172, line: 47, baseType: !137, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "RRP", scope: !182, file: !172, line: 49, baseType: !137, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "WAYNUM", scope: !182, file: !172, line: 50, baseType: !137, size: 2, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "LCKDOWN", scope: !182, file: !172, line: 51, baseType: !137, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "CSIZE", scope: !182, file: !172, line: 52, baseType: !137, size: 3, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "CLSIZE", scope: !182, file: !172, line: 53, baseType: !137, size: 3, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !179, file: !172, line: 56, baseType: !137, size: 32)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "CFG", scope: !173, file: !172, line: 341, baseType: !192, size: 32, offset: 32)
!192 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !193)
!193 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMCC_CFG_Type", file: !172, line: 124, baseType: !194)
!194 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !172, line: 114, size: 32, elements: !195)
!195 = !{!196, !202}
!196 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !194, file: !172, line: 122, baseType: !197, size: 32)
!197 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !194, file: !172, line: 115, size: 32, elements: !198)
!198 = !{!199, !200, !201}
!199 = !DIDerivedType(tag: DW_TAG_member, name: "ICDIS", scope: !197, file: !172, line: 117, baseType: !137, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "DCDIS", scope: !197, file: !172, line: 118, baseType: !137, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "CSIZESW", scope: !197, file: !172, line: 120, baseType: !137, size: 3, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !194, file: !172, line: 123, baseType: !137, size: 32)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !173, file: !172, line: 342, baseType: !204, size: 32, offset: 64)
!204 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !205)
!205 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMCC_CTRL_Type", file: !172, line: 161, baseType: !206)
!206 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !172, line: 155, size: 32, elements: !207)
!207 = !{!208, !212}
!208 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !206, file: !172, line: 159, baseType: !209, size: 32)
!209 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !206, file: !172, line: 156, size: 32, elements: !210)
!210 = !{!211}
!211 = !DIDerivedType(tag: DW_TAG_member, name: "CEN", scope: !209, file: !172, line: 157, baseType: !137, size: 1, flags: DIFlagBitField, extraData: i64 0)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !206, file: !172, line: 160, baseType: !137, size: 32)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !173, file: !172, line: 343, baseType: !214, size: 32, offset: 96)
!214 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !215)
!215 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !216)
!216 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMCC_SR_Type", file: !172, line: 179, baseType: !217)
!217 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !172, line: 173, size: 32, elements: !218)
!218 = !{!219, !223}
!219 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !217, file: !172, line: 177, baseType: !220, size: 32)
!220 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !217, file: !172, line: 174, size: 32, elements: !221)
!221 = !{!222}
!222 = !DIDerivedType(tag: DW_TAG_member, name: "CSTS", scope: !220, file: !172, line: 175, baseType: !137, size: 1, flags: DIFlagBitField, extraData: i64 0)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !217, file: !172, line: 178, baseType: !137, size: 32)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "LCKWAY", scope: !173, file: !172, line: 344, baseType: !225, size: 32, offset: 128)
!225 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !226)
!226 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMCC_LCKWAY_Type", file: !172, line: 197, baseType: !227)
!227 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !172, line: 191, size: 32, elements: !228)
!228 = !{!229, !233}
!229 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !227, file: !172, line: 195, baseType: !230, size: 32)
!230 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !227, file: !172, line: 192, size: 32, elements: !231)
!231 = !{!232}
!232 = !DIDerivedType(tag: DW_TAG_member, name: "LCKWAY", scope: !230, file: !172, line: 193, baseType: !137, size: 4, flags: DIFlagBitField, extraData: i64 0)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !227, file: !172, line: 196, baseType: !137, size: 32)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved1", scope: !173, file: !172, line: 345, baseType: !235, size: 96, offset: 160)
!235 = !DICompositeType(tag: DW_TAG_array_type, baseType: !236, size: 96, elements: !242)
!236 = !DIDerivedType(tag: DW_TAG_typedef, name: "RoReg8", file: !237, line: 53, baseType: !238)
!237 = !DIFile(filename: "modules/hal/atmel/asf/sam0/include/samd51/samd51g19a.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!238 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !239)
!239 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !240)
!240 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !241)
!241 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!242 = !{!243}
!243 = !DISubrange(count: 12)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "MAINT0", scope: !173, file: !172, line: 346, baseType: !245, size: 32, offset: 256)
!245 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !246)
!246 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMCC_MAINT0_Type", file: !172, line: 216, baseType: !247)
!247 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !172, line: 210, size: 32, elements: !248)
!248 = !{!249, !253}
!249 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !247, file: !172, line: 214, baseType: !250, size: 32)
!250 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !247, file: !172, line: 211, size: 32, elements: !251)
!251 = !{!252}
!252 = !DIDerivedType(tag: DW_TAG_member, name: "INVALL", scope: !250, file: !172, line: 212, baseType: !137, size: 1, flags: DIFlagBitField, extraData: i64 0)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !247, file: !172, line: 215, baseType: !137, size: 32)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "MAINT1", scope: !173, file: !172, line: 347, baseType: !255, size: 32, offset: 288)
!255 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !256)
!256 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMCC_MAINT1_Type", file: !172, line: 236, baseType: !257)
!257 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !172, line: 228, size: 32, elements: !258)
!258 = !{!259, !264}
!259 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !257, file: !172, line: 234, baseType: !260, size: 32)
!260 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !257, file: !172, line: 229, size: 32, elements: !261)
!261 = !{!262, !263}
!262 = !DIDerivedType(tag: DW_TAG_member, name: "INDEX", scope: !260, file: !172, line: 231, baseType: !137, size: 8, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "WAY", scope: !260, file: !172, line: 233, baseType: !137, size: 4, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !257, file: !172, line: 235, baseType: !137, size: 32)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "MCFG", scope: !173, file: !172, line: 348, baseType: !266, size: 32, offset: 320)
!266 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !267)
!267 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMCC_MCFG_Type", file: !172, line: 266, baseType: !268)
!268 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !172, line: 260, size: 32, elements: !269)
!269 = !{!270, !274}
!270 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !268, file: !172, line: 264, baseType: !271, size: 32)
!271 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !268, file: !172, line: 261, size: 32, elements: !272)
!272 = !{!273}
!273 = !DIDerivedType(tag: DW_TAG_member, name: "MODE", scope: !271, file: !172, line: 262, baseType: !137, size: 2, flags: DIFlagBitField, extraData: i64 0)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !268, file: !172, line: 265, baseType: !137, size: 32)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "MEN", scope: !173, file: !172, line: 349, baseType: !276, size: 32, offset: 352)
!276 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !277)
!277 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMCC_MEN_Type", file: !172, line: 291, baseType: !278)
!278 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !172, line: 285, size: 32, elements: !279)
!279 = !{!280, !284}
!280 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !278, file: !172, line: 289, baseType: !281, size: 32)
!281 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !278, file: !172, line: 286, size: 32, elements: !282)
!282 = !{!283}
!283 = !DIDerivedType(tag: DW_TAG_member, name: "MENABLE", scope: !281, file: !172, line: 287, baseType: !137, size: 1, flags: DIFlagBitField, extraData: i64 0)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !278, file: !172, line: 290, baseType: !137, size: 32)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "MCTRL", scope: !173, file: !172, line: 350, baseType: !286, size: 32, offset: 384)
!286 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !287)
!287 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMCC_MCTRL_Type", file: !172, line: 309, baseType: !288)
!288 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !172, line: 303, size: 32, elements: !289)
!289 = !{!290, !294}
!290 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !288, file: !172, line: 307, baseType: !291, size: 32)
!291 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !288, file: !172, line: 304, size: 32, elements: !292)
!292 = !{!293}
!293 = !DIDerivedType(tag: DW_TAG_member, name: "SWRST", scope: !291, file: !172, line: 305, baseType: !137, size: 1, flags: DIFlagBitField, extraData: i64 0)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !288, file: !172, line: 308, baseType: !137, size: 32)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "MSR", scope: !173, file: !172, line: 351, baseType: !296, size: 32, offset: 416)
!296 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !297)
!297 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !298)
!298 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMCC_MSR_Type", file: !172, line: 326, baseType: !299)
!299 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !172, line: 321, size: 32, elements: !300)
!300 = !{!301, !305}
!301 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !299, file: !172, line: 324, baseType: !302, size: 32)
!302 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !299, file: !172, line: 322, size: 32, elements: !303)
!303 = !{!304}
!304 = !DIDerivedType(tag: DW_TAG_member, name: "EVENT_CNT", scope: !302, file: !172, line: 323, baseType: !137, size: 32, flags: DIFlagBitField, extraData: i64 0)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !299, file: !172, line: 325, baseType: !137, size: 32)
!306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !307, size: 32)
!307 = !DIDerivedType(tag: DW_TAG_typedef, name: "Gclk", file: !308, line: 267, baseType: !309)
!308 = !DIFile(filename: "modules/hal/atmel/asf/sam0/include/samd51/component/gclk.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!309 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !308, line: 259, size: 2560, elements: !310)
!310 = !{!311, !321, !325, !352, !356, !374, !378}
!311 = !DIDerivedType(tag: DW_TAG_member, name: "CTRLA", scope: !309, file: !308, line: 260, baseType: !312, size: 8)
!312 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !313)
!313 = !DIDerivedType(tag: DW_TAG_typedef, name: "GCLK_CTRLA_Type", file: !308, line: 50, baseType: !314)
!314 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !308, line: 44, size: 8, elements: !315)
!315 = !{!316, !320}
!316 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !314, file: !308, line: 48, baseType: !317, size: 8)
!317 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !314, file: !308, line: 45, size: 8, elements: !318)
!318 = !{!319}
!319 = !DIDerivedType(tag: DW_TAG_member, name: "SWRST", scope: !317, file: !308, line: 46, baseType: !240, size: 1, flags: DIFlagBitField, extraData: i64 0)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !314, file: !308, line: 49, baseType: !240, size: 8)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved1", scope: !309, file: !308, line: 261, baseType: !322, size: 24, offset: 8)
!322 = !DICompositeType(tag: DW_TAG_array_type, baseType: !236, size: 24, elements: !323)
!323 = !{!324}
!324 = !DISubrange(count: 3)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "SYNCBUSY", scope: !309, file: !308, line: 262, baseType: !326, size: 32, offset: 32)
!326 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !327)
!327 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !328)
!328 = !DIDerivedType(tag: DW_TAG_typedef, name: "GCLK_SYNCBUSY_Type", file: !308, line: 86, baseType: !329)
!329 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !308, line: 62, size: 32, elements: !330)
!330 = !{!331, !347, !351}
!331 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !329, file: !308, line: 79, baseType: !332, size: 32)
!332 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !329, file: !308, line: 63, size: 32, elements: !333)
!333 = !{!334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346}
!334 = !DIDerivedType(tag: DW_TAG_member, name: "SWRST", scope: !332, file: !308, line: 64, baseType: !137, size: 1, flags: DIFlagBitField, extraData: i64 0)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL0", scope: !332, file: !308, line: 66, baseType: !137, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL1", scope: !332, file: !308, line: 67, baseType: !137, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL2", scope: !332, file: !308, line: 68, baseType: !137, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL3", scope: !332, file: !308, line: 69, baseType: !137, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL4", scope: !332, file: !308, line: 70, baseType: !137, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL5", scope: !332, file: !308, line: 71, baseType: !137, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL6", scope: !332, file: !308, line: 72, baseType: !137, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL7", scope: !332, file: !308, line: 73, baseType: !137, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL8", scope: !332, file: !308, line: 74, baseType: !137, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL9", scope: !332, file: !308, line: 75, baseType: !137, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL10", scope: !332, file: !308, line: 76, baseType: !137, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL11", scope: !332, file: !308, line: 77, baseType: !137, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !329, file: !308, line: 84, baseType: !348, size: 32)
!348 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !329, file: !308, line: 80, size: 32, elements: !349)
!349 = !{!350}
!350 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL", scope: !348, file: !308, line: 82, baseType: !137, size: 12, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !329, file: !308, line: 85, baseType: !137, size: 32)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved2", scope: !309, file: !308, line: 263, baseType: !353, size: 192, offset: 64)
!353 = !DICompositeType(tag: DW_TAG_array_type, baseType: !236, size: 192, elements: !354)
!354 = !{!355}
!355 = !DISubrange(count: 24)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL", scope: !309, file: !308, line: 264, baseType: !357, size: 384, offset: 256)
!357 = !DICompositeType(tag: DW_TAG_array_type, baseType: !358, size: 384, elements: !242)
!358 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !359)
!359 = !DIDerivedType(tag: DW_TAG_typedef, name: "GCLK_GENCTRL_Type", file: !308, line: 163, baseType: !360)
!360 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !308, line: 149, size: 32, elements: !361)
!361 = !{!362, !373}
!362 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !360, file: !308, line: 161, baseType: !363, size: 32)
!363 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !360, file: !308, line: 150, size: 32, elements: !364)
!364 = !{!365, !366, !367, !368, !369, !370, !371, !372}
!365 = !DIDerivedType(tag: DW_TAG_member, name: "SRC", scope: !363, file: !308, line: 151, baseType: !137, size: 4, flags: DIFlagBitField, extraData: i64 0)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "GENEN", scope: !363, file: !308, line: 153, baseType: !137, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "IDC", scope: !363, file: !308, line: 154, baseType: !137, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "OOV", scope: !363, file: !308, line: 155, baseType: !137, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "OE", scope: !363, file: !308, line: 156, baseType: !137, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "DIVSEL", scope: !363, file: !308, line: 157, baseType: !137, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "RUNSTDBY", scope: !363, file: !308, line: 158, baseType: !137, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "DIV", scope: !363, file: !308, line: 160, baseType: !137, size: 16, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !360, file: !308, line: 162, baseType: !137, size: 32)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved3", scope: !309, file: !308, line: 265, baseType: !375, size: 384, offset: 640)
!375 = !DICompositeType(tag: DW_TAG_array_type, baseType: !236, size: 384, elements: !376)
!376 = !{!377}
!377 = !DISubrange(count: 48)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "PCHCTRL", scope: !309, file: !308, line: 266, baseType: !379, size: 1536, offset: 1024)
!379 = !DICompositeType(tag: DW_TAG_array_type, baseType: !380, size: 1536, elements: !376)
!380 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !381)
!381 = !DIDerivedType(tag: DW_TAG_typedef, name: "GCLK_PCHCTRL_Type", file: !308, line: 218, baseType: !382)
!382 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !308, line: 209, size: 32, elements: !383)
!383 = !{!384, !390}
!384 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !382, file: !308, line: 216, baseType: !385, size: 32)
!385 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !382, file: !308, line: 210, size: 32, elements: !386)
!386 = !{!387, !388, !389}
!387 = !DIDerivedType(tag: DW_TAG_member, name: "GEN", scope: !385, file: !308, line: 211, baseType: !137, size: 4, flags: DIFlagBitField, extraData: i64 0)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "CHEN", scope: !385, file: !308, line: 213, baseType: !137, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "WRTLOCK", scope: !385, file: !308, line: 214, baseType: !137, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !382, file: !308, line: 217, baseType: !137, size: 32)
!391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !392, size: 32)
!392 = !DIDerivedType(tag: DW_TAG_typedef, name: "Oscctrl", file: !393, line: 788, baseType: !394)
!393 = !DIFile(filename: "modules/hal/atmel/asf/sam0/include/samd51/component/oscctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!394 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !393, line: 771, size: 704, elements: !395)
!395 = !{!396, !411, !412, !443, !474, !507, !542, !566, !578, !579, !596, !597, !609, !621, !634, !635}
!396 = !DIDerivedType(tag: DW_TAG_member, name: "EVCTRL", scope: !394, file: !393, line: 772, baseType: !397, size: 8)
!397 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !398)
!398 = !DIDerivedType(tag: DW_TAG_typedef, name: "OSCCTRL_EVCTRL_Type", file: !393, line: 55, baseType: !399)
!399 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !393, line: 44, size: 8, elements: !400)
!400 = !{!401, !406, !410}
!401 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !399, file: !393, line: 49, baseType: !402, size: 8)
!402 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !399, file: !393, line: 45, size: 8, elements: !403)
!403 = !{!404, !405}
!404 = !DIDerivedType(tag: DW_TAG_member, name: "CFDEO0", scope: !402, file: !393, line: 46, baseType: !240, size: 1, flags: DIFlagBitField, extraData: i64 0)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "CFDEO1", scope: !402, file: !393, line: 47, baseType: !240, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !399, file: !393, line: 53, baseType: !407, size: 8)
!407 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !399, file: !393, line: 50, size: 8, elements: !408)
!408 = !{!409}
!409 = !DIDerivedType(tag: DW_TAG_member, name: "CFDEO", scope: !407, file: !393, line: 51, baseType: !240, size: 2, flags: DIFlagBitField, extraData: i64 0)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !399, file: !393, line: 54, baseType: !240, size: 8)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved1", scope: !394, file: !393, line: 773, baseType: !322, size: 24, offset: 8)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "INTENCLR", scope: !394, file: !393, line: 774, baseType: !413, size: 32, offset: 32)
!413 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !414)
!414 = !DIDerivedType(tag: DW_TAG_typedef, name: "OSCCTRL_INTENCLR_Type", file: !393, line: 102, baseType: !415)
!415 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !393, line: 72, size: 32, elements: !416)
!416 = !{!417, !437, !442}
!417 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !415, file: !393, line: 95, baseType: !418, size: 32)
!418 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !415, file: !393, line: 73, size: 32, elements: !419)
!419 = !{!420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436}
!420 = !DIDerivedType(tag: DW_TAG_member, name: "XOSCRDY0", scope: !418, file: !393, line: 74, baseType: !137, size: 1, flags: DIFlagBitField, extraData: i64 0)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "XOSCRDY1", scope: !418, file: !393, line: 75, baseType: !137, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "XOSCFAIL0", scope: !418, file: !393, line: 76, baseType: !137, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "XOSCFAIL1", scope: !418, file: !393, line: 77, baseType: !137, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLRDY", scope: !418, file: !393, line: 79, baseType: !137, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLOOB", scope: !418, file: !393, line: 80, baseType: !137, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLLCKF", scope: !418, file: !393, line: 81, baseType: !137, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLLCKC", scope: !418, file: !393, line: 82, baseType: !137, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLRCS", scope: !418, file: !393, line: 83, baseType: !137, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "DPLL0LCKR", scope: !418, file: !393, line: 85, baseType: !137, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "DPLL0LCKF", scope: !418, file: !393, line: 86, baseType: !137, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "DPLL0LTO", scope: !418, file: !393, line: 87, baseType: !137, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "DPLL0LDRTO", scope: !418, file: !393, line: 88, baseType: !137, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "DPLL1LCKR", scope: !418, file: !393, line: 90, baseType: !137, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "DPLL1LCKF", scope: !418, file: !393, line: 91, baseType: !137, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "DPLL1LTO", scope: !418, file: !393, line: 92, baseType: !137, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "DPLL1LDRTO", scope: !418, file: !393, line: 93, baseType: !137, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !415, file: !393, line: 100, baseType: !438, size: 32)
!438 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !415, file: !393, line: 96, size: 32, elements: !439)
!439 = !{!440, !441}
!440 = !DIDerivedType(tag: DW_TAG_member, name: "XOSCRDY", scope: !438, file: !393, line: 97, baseType: !137, size: 2, flags: DIFlagBitField, extraData: i64 0)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "XOSCFAIL", scope: !438, file: !393, line: 98, baseType: !137, size: 2, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !415, file: !393, line: 101, baseType: !137, size: 32)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "INTENSET", scope: !394, file: !393, line: 775, baseType: !444, size: 32, offset: 64)
!444 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !445)
!445 = !DIDerivedType(tag: DW_TAG_typedef, name: "OSCCTRL_INTENSET_Type", file: !393, line: 182, baseType: !446)
!446 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !393, line: 152, size: 32, elements: !447)
!447 = !{!448, !468, !473}
!448 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !446, file: !393, line: 175, baseType: !449, size: 32)
!449 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !446, file: !393, line: 153, size: 32, elements: !450)
!450 = !{!451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467}
!451 = !DIDerivedType(tag: DW_TAG_member, name: "XOSCRDY0", scope: !449, file: !393, line: 154, baseType: !137, size: 1, flags: DIFlagBitField, extraData: i64 0)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "XOSCRDY1", scope: !449, file: !393, line: 155, baseType: !137, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "XOSCFAIL0", scope: !449, file: !393, line: 156, baseType: !137, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "XOSCFAIL1", scope: !449, file: !393, line: 157, baseType: !137, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLRDY", scope: !449, file: !393, line: 159, baseType: !137, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLOOB", scope: !449, file: !393, line: 160, baseType: !137, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLLCKF", scope: !449, file: !393, line: 161, baseType: !137, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLLCKC", scope: !449, file: !393, line: 162, baseType: !137, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLRCS", scope: !449, file: !393, line: 163, baseType: !137, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "DPLL0LCKR", scope: !449, file: !393, line: 165, baseType: !137, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "DPLL0LCKF", scope: !449, file: !393, line: 166, baseType: !137, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "DPLL0LTO", scope: !449, file: !393, line: 167, baseType: !137, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "DPLL0LDRTO", scope: !449, file: !393, line: 168, baseType: !137, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "DPLL1LCKR", scope: !449, file: !393, line: 170, baseType: !137, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "DPLL1LCKF", scope: !449, file: !393, line: 171, baseType: !137, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "DPLL1LTO", scope: !449, file: !393, line: 172, baseType: !137, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "DPLL1LDRTO", scope: !449, file: !393, line: 173, baseType: !137, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !446, file: !393, line: 180, baseType: !469, size: 32)
!469 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !446, file: !393, line: 176, size: 32, elements: !470)
!470 = !{!471, !472}
!471 = !DIDerivedType(tag: DW_TAG_member, name: "XOSCRDY", scope: !469, file: !393, line: 177, baseType: !137, size: 2, flags: DIFlagBitField, extraData: i64 0)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "XOSCFAIL", scope: !469, file: !393, line: 178, baseType: !137, size: 2, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !446, file: !393, line: 181, baseType: !137, size: 32)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "INTFLAG", scope: !394, file: !393, line: 776, baseType: !475, size: 32, offset: 96)
!475 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !476)
!476 = !DIDerivedType(tag: DW_TAG_typedef, name: "OSCCTRL_INTFLAG_Type", file: !393, line: 262, baseType: !477)
!477 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !393, line: 232, size: 32, elements: !478)
!478 = !{!479, !501, !506}
!479 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !477, file: !393, line: 255, baseType: !480, size: 32)
!480 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !477, file: !393, line: 233, size: 32, elements: !481)
!481 = !{!482, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500}
!482 = !DIDerivedType(tag: DW_TAG_member, name: "XOSCRDY0", scope: !480, file: !393, line: 234, baseType: !483, size: 1, flags: DIFlagBitField, extraData: i64 0)
!483 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !484)
!484 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !137)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "XOSCRDY1", scope: !480, file: !393, line: 235, baseType: !483, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "XOSCFAIL0", scope: !480, file: !393, line: 236, baseType: !483, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "XOSCFAIL1", scope: !480, file: !393, line: 237, baseType: !483, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLRDY", scope: !480, file: !393, line: 239, baseType: !483, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLOOB", scope: !480, file: !393, line: 240, baseType: !483, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLLCKF", scope: !480, file: !393, line: 241, baseType: !483, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLLCKC", scope: !480, file: !393, line: 242, baseType: !483, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLRCS", scope: !480, file: !393, line: 243, baseType: !483, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "DPLL0LCKR", scope: !480, file: !393, line: 245, baseType: !483, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "DPLL0LCKF", scope: !480, file: !393, line: 246, baseType: !483, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "DPLL0LTO", scope: !480, file: !393, line: 247, baseType: !483, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "DPLL0LDRTO", scope: !480, file: !393, line: 248, baseType: !483, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "DPLL1LCKR", scope: !480, file: !393, line: 250, baseType: !483, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "DPLL1LCKF", scope: !480, file: !393, line: 251, baseType: !483, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "DPLL1LTO", scope: !480, file: !393, line: 252, baseType: !483, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "DPLL1LDRTO", scope: !480, file: !393, line: 253, baseType: !483, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !477, file: !393, line: 260, baseType: !502, size: 32)
!502 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !477, file: !393, line: 256, size: 32, elements: !503)
!503 = !{!504, !505}
!504 = !DIDerivedType(tag: DW_TAG_member, name: "XOSCRDY", scope: !502, file: !393, line: 257, baseType: !483, size: 2, flags: DIFlagBitField, extraData: i64 0)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "XOSCFAIL", scope: !502, file: !393, line: 258, baseType: !483, size: 2, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !477, file: !393, line: 261, baseType: !137, size: 32)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "STATUS", scope: !394, file: !393, line: 777, baseType: !508, size: 32, offset: 128)
!508 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !509)
!509 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !510)
!510 = !DIDerivedType(tag: DW_TAG_typedef, name: "OSCCTRL_STATUS_Type", file: !393, line: 345, baseType: !511)
!511 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !393, line: 312, size: 32, elements: !512)
!512 = !{!513, !535, !541}
!513 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !511, file: !393, line: 337, baseType: !514, size: 32)
!514 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !511, file: !393, line: 313, size: 32, elements: !515)
!515 = !{!516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534}
!516 = !DIDerivedType(tag: DW_TAG_member, name: "XOSCRDY0", scope: !514, file: !393, line: 314, baseType: !137, size: 1, flags: DIFlagBitField, extraData: i64 0)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "XOSCRDY1", scope: !514, file: !393, line: 315, baseType: !137, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "XOSCFAIL0", scope: !514, file: !393, line: 316, baseType: !137, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "XOSCFAIL1", scope: !514, file: !393, line: 317, baseType: !137, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "XOSCCKSW0", scope: !514, file: !393, line: 318, baseType: !137, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "XOSCCKSW1", scope: !514, file: !393, line: 319, baseType: !137, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLRDY", scope: !514, file: !393, line: 321, baseType: !137, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLOOB", scope: !514, file: !393, line: 322, baseType: !137, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLLCKF", scope: !514, file: !393, line: 323, baseType: !137, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLLCKC", scope: !514, file: !393, line: 324, baseType: !137, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLRCS", scope: !514, file: !393, line: 325, baseType: !137, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "DPLL0LCKR", scope: !514, file: !393, line: 327, baseType: !137, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "DPLL0LCKF", scope: !514, file: !393, line: 328, baseType: !137, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "DPLL0TO", scope: !514, file: !393, line: 329, baseType: !137, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "DPLL0LDRTO", scope: !514, file: !393, line: 330, baseType: !137, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "DPLL1LCKR", scope: !514, file: !393, line: 332, baseType: !137, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "DPLL1LCKF", scope: !514, file: !393, line: 333, baseType: !137, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "DPLL1TO", scope: !514, file: !393, line: 334, baseType: !137, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "DPLL1LDRTO", scope: !514, file: !393, line: 335, baseType: !137, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !511, file: !393, line: 343, baseType: !536, size: 32)
!536 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !511, file: !393, line: 338, size: 32, elements: !537)
!537 = !{!538, !539, !540}
!538 = !DIDerivedType(tag: DW_TAG_member, name: "XOSCRDY", scope: !536, file: !393, line: 339, baseType: !137, size: 2, flags: DIFlagBitField, extraData: i64 0)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "XOSCFAIL", scope: !536, file: !393, line: 340, baseType: !137, size: 2, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "XOSCCKSW", scope: !536, file: !393, line: 341, baseType: !137, size: 2, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !511, file: !393, line: 344, baseType: !137, size: 32)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "XOSCCTRL", scope: !394, file: !393, line: 778, baseType: !543, size: 64, offset: 160)
!543 = !DICompositeType(tag: DW_TAG_array_type, baseType: !544, size: 64, elements: !564)
!544 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !545)
!545 = !DIDerivedType(tag: DW_TAG_typedef, name: "OSCCTRL_XOSCCTRL_Type", file: !393, line: 422, baseType: !546)
!546 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !393, line: 402, size: 32, elements: !547)
!547 = !{!548, !563}
!548 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !546, file: !393, line: 420, baseType: !549, size: 32)
!549 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !546, file: !393, line: 403, size: 32, elements: !550)
!550 = !{!551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562}
!551 = !DIDerivedType(tag: DW_TAG_member, name: "ENABLE", scope: !549, file: !393, line: 405, baseType: !137, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "XTALEN", scope: !549, file: !393, line: 406, baseType: !137, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "RUNSTDBY", scope: !549, file: !393, line: 408, baseType: !137, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "ONDEMAND", scope: !549, file: !393, line: 409, baseType: !137, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "LOWBUFGAIN", scope: !549, file: !393, line: 410, baseType: !137, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "IPTAT", scope: !549, file: !393, line: 411, baseType: !137, size: 2, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "IMULT", scope: !549, file: !393, line: 412, baseType: !137, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "ENALC", scope: !549, file: !393, line: 413, baseType: !137, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "CFDEN", scope: !549, file: !393, line: 414, baseType: !137, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "SWBEN", scope: !549, file: !393, line: 415, baseType: !137, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "STARTUP", scope: !549, file: !393, line: 417, baseType: !137, size: 4, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "CFDPRESC", scope: !549, file: !393, line: 418, baseType: !137, size: 4, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !546, file: !393, line: 421, baseType: !137, size: 32)
!564 = !{!565}
!565 = !DISubrange(count: 2)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLCTRLA", scope: !394, file: !393, line: 779, baseType: !567, size: 8, offset: 224)
!567 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !568)
!568 = !DIDerivedType(tag: DW_TAG_typedef, name: "OSCCTRL_DFLLCTRLA_Type", file: !393, line: 469, baseType: !569)
!569 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !393, line: 460, size: 8, elements: !570)
!570 = !{!571, !577}
!571 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !569, file: !393, line: 467, baseType: !572, size: 8)
!572 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !569, file: !393, line: 461, size: 8, elements: !573)
!573 = !{!574, !575, !576}
!574 = !DIDerivedType(tag: DW_TAG_member, name: "ENABLE", scope: !572, file: !393, line: 463, baseType: !240, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "RUNSTDBY", scope: !572, file: !393, line: 465, baseType: !240, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "ONDEMAND", scope: !572, file: !393, line: 466, baseType: !240, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !569, file: !393, line: 468, baseType: !240, size: 8)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved2", scope: !394, file: !393, line: 780, baseType: !322, size: 24, offset: 232)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLCTRLB", scope: !394, file: !393, line: 781, baseType: !580, size: 8, offset: 256)
!580 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !581)
!581 = !DIDerivedType(tag: DW_TAG_typedef, name: "OSCCTRL_DFLLCTRLB_Type", file: !393, line: 497, baseType: !582)
!582 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !393, line: 485, size: 8, elements: !583)
!583 = !{!584, !595}
!584 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !582, file: !393, line: 495, baseType: !585, size: 8)
!585 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !582, file: !393, line: 486, size: 8, elements: !586)
!586 = !{!587, !588, !589, !590, !591, !592, !593, !594}
!587 = !DIDerivedType(tag: DW_TAG_member, name: "MODE", scope: !585, file: !393, line: 487, baseType: !240, size: 1, flags: DIFlagBitField, extraData: i64 0)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "STABLE", scope: !585, file: !393, line: 488, baseType: !240, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "LLAW", scope: !585, file: !393, line: 489, baseType: !240, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "USBCRM", scope: !585, file: !393, line: 490, baseType: !240, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "CCDIS", scope: !585, file: !393, line: 491, baseType: !240, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "QLDIS", scope: !585, file: !393, line: 492, baseType: !240, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "BPLCKC", scope: !585, file: !393, line: 493, baseType: !240, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "WAITLOCK", scope: !585, file: !393, line: 494, baseType: !240, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !582, file: !393, line: 496, baseType: !240, size: 8)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved3", scope: !394, file: !393, line: 782, baseType: !322, size: 24, offset: 264)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLVAL", scope: !394, file: !393, line: 783, baseType: !598, size: 32, offset: 288)
!598 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !599)
!599 = !DIDerivedType(tag: DW_TAG_typedef, name: "OSCCTRL_DFLLVAL_Type", file: !393, line: 531, baseType: !600)
!600 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !393, line: 523, size: 32, elements: !601)
!601 = !{!602, !608}
!602 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !600, file: !393, line: 529, baseType: !603, size: 32)
!603 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !600, file: !393, line: 524, size: 32, elements: !604)
!604 = !{!605, !606, !607}
!605 = !DIDerivedType(tag: DW_TAG_member, name: "FINE", scope: !603, file: !393, line: 525, baseType: !137, size: 8, flags: DIFlagBitField, extraData: i64 0)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "COARSE", scope: !603, file: !393, line: 527, baseType: !137, size: 6, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "DIFF", scope: !603, file: !393, line: 528, baseType: !137, size: 16, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !600, file: !393, line: 530, baseType: !137, size: 32)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLMUL", scope: !394, file: !393, line: 784, baseType: !610, size: 32, offset: 320)
!610 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !611)
!611 = !DIDerivedType(tag: DW_TAG_typedef, name: "OSCCTRL_DFLLMUL_Type", file: !393, line: 558, baseType: !612)
!612 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !393, line: 550, size: 32, elements: !613)
!613 = !{!614, !620}
!614 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !612, file: !393, line: 556, baseType: !615, size: 32)
!615 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !612, file: !393, line: 551, size: 32, elements: !616)
!616 = !{!617, !618, !619}
!617 = !DIDerivedType(tag: DW_TAG_member, name: "MUL", scope: !615, file: !393, line: 552, baseType: !137, size: 16, flags: DIFlagBitField, extraData: i64 0)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "FSTEP", scope: !615, file: !393, line: 553, baseType: !137, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "CSTEP", scope: !615, file: !393, line: 555, baseType: !137, size: 6, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !612, file: !393, line: 557, baseType: !137, size: 32)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLSYNC", scope: !394, file: !393, line: 785, baseType: !622, size: 8, offset: 352)
!622 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !623)
!623 = !DIDerivedType(tag: DW_TAG_typedef, name: "OSCCTRL_DFLLSYNC_Type", file: !393, line: 587, baseType: !624)
!624 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !393, line: 577, size: 8, elements: !625)
!625 = !{!626, !633}
!626 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !624, file: !393, line: 585, baseType: !627, size: 8)
!627 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !624, file: !393, line: 578, size: 8, elements: !628)
!628 = !{!629, !630, !631, !632}
!629 = !DIDerivedType(tag: DW_TAG_member, name: "ENABLE", scope: !627, file: !393, line: 580, baseType: !240, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLCTRLB", scope: !627, file: !393, line: 581, baseType: !240, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLVAL", scope: !627, file: !393, line: 582, baseType: !240, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLMUL", scope: !627, file: !393, line: 583, baseType: !240, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !624, file: !393, line: 586, baseType: !240, size: 8)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved4", scope: !394, file: !393, line: 786, baseType: !322, size: 24, offset: 360)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "Dpll", scope: !394, file: !393, line: 787, baseType: !636, size: 320, offset: 384)
!636 = !DICompositeType(tag: DW_TAG_array_type, baseType: !637, size: 320, elements: !564)
!637 = !DIDerivedType(tag: DW_TAG_typedef, name: "OscctrlDpll", file: !393, line: 766, baseType: !638)
!638 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !393, line: 759, size: 160, elements: !639)
!639 = !{!640, !652, !653, !664, !681, !693}
!640 = !DIDerivedType(tag: DW_TAG_member, name: "DPLLCTRLA", scope: !638, file: !393, line: 760, baseType: !641, size: 8)
!641 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !642)
!642 = !DIDerivedType(tag: DW_TAG_typedef, name: "OSCCTRL_DPLLCTRLA_Type", file: !393, line: 614, baseType: !643)
!643 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !393, line: 605, size: 8, elements: !644)
!644 = !{!645, !651}
!645 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !643, file: !393, line: 612, baseType: !646, size: 8)
!646 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !643, file: !393, line: 606, size: 8, elements: !647)
!647 = !{!648, !649, !650}
!648 = !DIDerivedType(tag: DW_TAG_member, name: "ENABLE", scope: !646, file: !393, line: 608, baseType: !240, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "RUNSTDBY", scope: !646, file: !393, line: 610, baseType: !240, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "ONDEMAND", scope: !646, file: !393, line: 611, baseType: !240, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !643, file: !393, line: 613, baseType: !240, size: 8)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved1", scope: !638, file: !393, line: 761, baseType: !322, size: 24, offset: 8)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "DPLLRATIO", scope: !638, file: !393, line: 762, baseType: !654, size: 32, offset: 32)
!654 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !655)
!655 = !DIDerivedType(tag: DW_TAG_typedef, name: "OSCCTRL_DPLLRATIO_Type", file: !393, line: 638, baseType: !656)
!656 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !393, line: 630, size: 32, elements: !657)
!657 = !{!658, !663}
!658 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !656, file: !393, line: 636, baseType: !659, size: 32)
!659 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !656, file: !393, line: 631, size: 32, elements: !660)
!660 = !{!661, !662}
!661 = !DIDerivedType(tag: DW_TAG_member, name: "LDR", scope: !659, file: !393, line: 632, baseType: !137, size: 13, flags: DIFlagBitField, extraData: i64 0)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "LDRFRAC", scope: !659, file: !393, line: 634, baseType: !137, size: 5, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !656, file: !393, line: 637, baseType: !137, size: 32)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "DPLLCTRLB", scope: !638, file: !393, line: 763, baseType: !665, size: 32, offset: 64)
!665 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !666)
!666 = !DIDerivedType(tag: DW_TAG_typedef, name: "OSCCTRL_DPLLCTRLB_Type", file: !393, line: 667, baseType: !667)
!667 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !393, line: 654, size: 32, elements: !668)
!668 = !{!669, !680}
!669 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !667, file: !393, line: 665, baseType: !670, size: 32)
!670 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !667, file: !393, line: 655, size: 32, elements: !671)
!671 = !{!672, !673, !674, !675, !676, !677, !678, !679}
!672 = !DIDerivedType(tag: DW_TAG_member, name: "FILTER", scope: !670, file: !393, line: 656, baseType: !137, size: 4, flags: DIFlagBitField, extraData: i64 0)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "WUF", scope: !670, file: !393, line: 657, baseType: !137, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "REFCLK", scope: !670, file: !393, line: 658, baseType: !137, size: 3, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "LTIME", scope: !670, file: !393, line: 659, baseType: !137, size: 3, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "LBYPASS", scope: !670, file: !393, line: 660, baseType: !137, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "DCOFILTER", scope: !670, file: !393, line: 661, baseType: !137, size: 3, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "DCOEN", scope: !670, file: !393, line: 662, baseType: !137, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "DIV", scope: !670, file: !393, line: 663, baseType: !137, size: 11, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !667, file: !393, line: 666, baseType: !137, size: 32)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "DPLLSYNCBUSY", scope: !638, file: !393, line: 764, baseType: !682, size: 32, offset: 96)
!682 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !683)
!683 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !684)
!684 = !DIDerivedType(tag: DW_TAG_typedef, name: "OSCCTRL_DPLLSYNCBUSY_Type", file: !393, line: 724, baseType: !685)
!685 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !393, line: 716, size: 32, elements: !686)
!686 = !{!687, !692}
!687 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !685, file: !393, line: 722, baseType: !688, size: 32)
!688 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !685, file: !393, line: 717, size: 32, elements: !689)
!689 = !{!690, !691}
!690 = !DIDerivedType(tag: DW_TAG_member, name: "ENABLE", scope: !688, file: !393, line: 719, baseType: !137, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "DPLLRATIO", scope: !688, file: !393, line: 720, baseType: !137, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !685, file: !393, line: 723, baseType: !137, size: 32)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "DPLLSTATUS", scope: !638, file: !393, line: 765, baseType: !694, size: 32, offset: 128)
!694 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !695)
!695 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !696)
!696 = !DIDerivedType(tag: DW_TAG_typedef, name: "OSCCTRL_DPLLSTATUS_Type", file: !393, line: 745, baseType: !697)
!697 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !393, line: 738, size: 32, elements: !698)
!698 = !{!699, !704}
!699 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !697, file: !393, line: 743, baseType: !700, size: 32)
!700 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !697, file: !393, line: 739, size: 32, elements: !701)
!701 = !{!702, !703}
!702 = !DIDerivedType(tag: DW_TAG_member, name: "LOCK", scope: !700, file: !393, line: 740, baseType: !137, size: 1, flags: DIFlagBitField, extraData: i64 0)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "CLKRDY", scope: !700, file: !393, line: 741, baseType: !137, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !697, file: !393, line: 744, baseType: !137, size: 32)
!705 = !{!165}
!706 = !DIFile(filename: "zephyr/soc/arm/atmel_sam0/common/soc_samd5x.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!707 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !708)
!708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !709, line: 51, size: 64, elements: !710)
!709 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!710 = !{!711, !739}
!711 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !708, file: !709, line: 60, baseType: !712, size: 32)
!712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !713, size: 32)
!713 = !DISubroutineType(types: !714)
!714 = !{!103, !715}
!715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !716, size: 32)
!716 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !717)
!717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !718, line: 378, size: 192, elements: !719)
!718 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!719 = !{!720, !723, !724, !725, !732, !733}
!720 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !717, file: !718, line: 380, baseType: !721, size: 32)
!721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !722, size: 32)
!722 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !109)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !717, file: !718, line: 382, baseType: !13, size: 32, offset: 32)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !717, file: !718, line: 384, baseType: !13, size: 32, offset: 64)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !717, file: !718, line: 386, baseType: !726, size: 32, offset: 96)
!726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !727, size: 32)
!727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !718, line: 351, size: 16, elements: !728)
!728 = !{!729, !730}
!729 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !727, file: !718, line: 359, baseType: !240, size: 8)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !727, file: !718, line: 364, baseType: !731, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!731 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !717, file: !718, line: 388, baseType: !102, size: 32, offset: 128)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !717, file: !718, line: 396, baseType: !734, size: 32, offset: 160)
!734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !735, size: 32)
!735 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !736)
!736 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !718, line: 43, baseType: !737)
!737 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !738)
!738 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !708, file: !709, line: 65, baseType: !715, size: 32, offset: 32)
!740 = !DIGlobalVariableExpression(var: !741, expr: !DIExpression())
!741 = distinct !DIGlobalVariable(name: "static_regions", scope: !742, file: !749, line: 62, type: !880, isLocal: true, isDefinition: true)
!742 = distinct !DICompileUnit(language: DW_LANG_C99, file: !743, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !744, globals: !745, splitDebugInlining: false, nameTableKind: None)
!743 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/basic/sys_heap")
!744 = !{!120, !103, !137, !102}
!745 = !{!746, !740}
!746 = !DIGlobalVariableExpression(var: !747, expr: !DIExpression())
!747 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !748, file: !749, line: 198, type: !866, isLocal: true, isDefinition: true)
!748 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !749, file: !749, line: 175, type: !750, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !742, retainedNodes: !863)
!749 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!750 = !DISubroutineType(types: !751)
!751 = !{null, !752}
!752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !753, size: 32)
!753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !754, line: 245, size: 1024, elements: !755)
!754 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!755 = !{!756, !821, !834, !835, !836, !837, !843, !858}
!756 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !753, file: !754, line: 247, baseType: !757, size: 384)
!757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !754, line: 57, size: 384, elements: !758)
!758 = !{!759, !785, !793, !794, !795, !806, !807, !808}
!759 = !DIDerivedType(tag: DW_TAG_member, scope: !757, file: !754, line: 60, baseType: !760, size: 64)
!760 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !757, file: !754, line: 60, size: 64, elements: !761)
!761 = !{!762, !778}
!762 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !760, file: !754, line: 61, baseType: !763, size: 64)
!763 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !764, line: 49, baseType: !765)
!764 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!765 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !764, line: 37, size: 64, elements: !766)
!766 = !{!767, !773}
!767 = !DIDerivedType(tag: DW_TAG_member, scope: !765, file: !764, line: 38, baseType: !768, size: 32)
!768 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !765, file: !764, line: 38, size: 32, elements: !769)
!769 = !{!770, !772}
!770 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !768, file: !764, line: 39, baseType: !771, size: 32)
!771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !765, size: 32)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !768, file: !764, line: 40, baseType: !771, size: 32)
!773 = !DIDerivedType(tag: DW_TAG_member, scope: !765, file: !764, line: 42, baseType: !774, size: 32, offset: 32)
!774 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !765, file: !764, line: 42, size: 32, elements: !775)
!775 = !{!776, !777}
!776 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !774, file: !764, line: 43, baseType: !771, size: 32)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !774, file: !764, line: 44, baseType: !771, size: 32)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !760, file: !754, line: 62, baseType: !779, size: 64)
!779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !780, line: 49, size: 64, elements: !781)
!780 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!781 = !{!782}
!782 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !779, file: !780, line: 50, baseType: !783, size: 64)
!783 = !DICompositeType(tag: DW_TAG_array_type, baseType: !784, size: 64, elements: !564)
!784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !779, size: 32)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !757, file: !754, line: 68, baseType: !786, size: 32, offset: 64)
!786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !787, size: 32)
!787 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !788, line: 233, baseType: !789)
!788 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!789 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !788, line: 231, size: 64, elements: !790)
!790 = !{!791}
!791 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !789, file: !788, line: 232, baseType: !792, size: 64)
!792 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !764, line: 48, baseType: !765)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !757, file: !754, line: 71, baseType: !240, size: 8, offset: 96)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !757, file: !754, line: 74, baseType: !240, size: 8, offset: 104)
!795 = !DIDerivedType(tag: DW_TAG_member, scope: !757, file: !754, line: 90, baseType: !796, size: 16, offset: 112)
!796 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !757, file: !754, line: 90, size: 16, elements: !797)
!797 = !{!798, !805}
!798 = !DIDerivedType(tag: DW_TAG_member, scope: !796, file: !754, line: 91, baseType: !799, size: 16)
!799 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !796, file: !754, line: 91, size: 16, elements: !800)
!800 = !{!801, !804}
!801 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !799, file: !754, line: 96, baseType: !802, size: 8)
!802 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !803)
!803 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !799, file: !754, line: 97, baseType: !240, size: 8, offset: 8)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !796, file: !754, line: 100, baseType: !151, size: 16)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !757, file: !754, line: 107, baseType: !137, size: 32, offset: 128)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !757, file: !754, line: 127, baseType: !102, size: 32, offset: 160)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !757, file: !754, line: 131, baseType: !809, size: 192, offset: 192)
!809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !788, line: 244, size: 192, elements: !810)
!810 = !{!811, !812, !818}
!811 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !809, file: !788, line: 245, baseType: !763, size: 64)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !809, file: !788, line: 246, baseType: !813, size: 32, offset: 64)
!813 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !788, line: 242, baseType: !814)
!814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !815, size: 32)
!815 = !DISubroutineType(types: !816)
!816 = !{null, !817}
!817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !809, size: 32)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !809, file: !788, line: 249, baseType: !819, size: 64, offset: 128)
!819 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !820)
!820 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !753, file: !754, line: 250, baseType: !822, size: 288, offset: 384)
!822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !823, line: 25, size: 288, elements: !824)
!823 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!824 = !{!825, !826, !827, !828, !829, !830, !831, !832, !833}
!825 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !822, file: !823, line: 26, baseType: !137, size: 32)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !822, file: !823, line: 27, baseType: !137, size: 32, offset: 32)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !822, file: !823, line: 28, baseType: !137, size: 32, offset: 64)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !822, file: !823, line: 29, baseType: !137, size: 32, offset: 96)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !822, file: !823, line: 30, baseType: !137, size: 32, offset: 128)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !822, file: !823, line: 31, baseType: !137, size: 32, offset: 160)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !822, file: !823, line: 32, baseType: !137, size: 32, offset: 192)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !822, file: !823, line: 33, baseType: !137, size: 32, offset: 224)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !822, file: !823, line: 34, baseType: !137, size: 32, offset: 256)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !753, file: !754, line: 253, baseType: !102, size: 32, offset: 672)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !753, file: !754, line: 256, baseType: !787, size: 64, offset: 704)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !753, file: !754, line: 294, baseType: !103, size: 32, offset: 768)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !753, file: !754, line: 300, baseType: !838, size: 96, offset: 800)
!838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !754, line: 149, size: 96, elements: !839)
!839 = !{!840, !841, !842}
!840 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !838, file: !754, line: 153, baseType: !22, size: 32)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !838, file: !754, line: 162, baseType: !120, size: 32, offset: 32)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !838, file: !754, line: 168, baseType: !120, size: 32, offset: 64)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !753, file: !754, line: 325, baseType: !844, size: 32, offset: 896)
!844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !845, size: 32)
!845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !846, line: 5073, size: 160, elements: !847)
!846 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!847 = !{!848, !854, !855}
!848 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !845, file: !846, line: 5074, baseType: !849, size: 96)
!849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !850)
!850 = !{!851, !852, !853}
!851 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !849, file: !113, line: 57, baseType: !116, size: 32)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !849, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !849, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !845, file: !846, line: 5075, baseType: !787, size: 64, offset: 96)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !845, file: !846, line: 5076, baseType: !856, offset: 160)
!856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !857, line: 43, elements: !162)
!857 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!858 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !753, file: !754, line: 343, baseType: !859, size: 64, offset: 928)
!859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !823, line: 60, size: 64, elements: !860)
!860 = !{!861, !862}
!861 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !859, file: !823, line: 63, baseType: !137, size: 32)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !859, file: !823, line: 66, baseType: !137, size: 32, offset: 32)
!863 = !{!864, !865}
!864 = !DILocalVariable(name: "thread", arg: 1, scope: !748, file: !749, line: 175, type: !752)
!865 = !DILocalVariable(name: "region_num", scope: !748, file: !749, line: 200, type: !240)
!866 = !DICompositeType(tag: DW_TAG_array_type, baseType: !867, elements: !878)
!867 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !868, line: 52, size: 96, elements: !869)
!868 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!869 = !{!870, !871, !872}
!870 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !867, file: !868, line: 53, baseType: !22, size: 32)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !867, file: !868, line: 54, baseType: !120, size: 32, offset: 32)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !867, file: !868, line: 55, baseType: !873, size: 32, offset: 64)
!873 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !874, line: 151, baseType: !875)
!874 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!875 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !874, line: 149, size: 32, elements: !876)
!876 = !{!877}
!877 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !875, file: !874, line: 150, baseType: !137, size: 32)
!878 = !{!879}
!879 = !DISubrange(count: 0)
!880 = !DICompositeType(tag: DW_TAG_array_type, baseType: !881, size: 96, elements: !882)
!881 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !867)
!882 = !{!883}
!883 = !DISubrange(count: 1)
!884 = !DIGlobalVariableExpression(var: !885, expr: !DIExpression())
!885 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !886, file: !918, line: 39, type: !240, isLocal: true, isDefinition: true)
!886 = distinct !DICompileUnit(language: DW_LANG_C99, file: !887, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !888, globals: !917, splitDebugInlining: false, nameTableKind: None)
!887 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/basic/sys_heap")
!888 = !{!889, !102, !103, !905, !240}
!889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !890, size: 32)
!890 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !891, line: 1226, baseType: !892)
!891 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!892 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !891, line: 1213, size: 352, elements: !893)
!893 = !{!894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904}
!894 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !892, file: !891, line: 1215, baseType: !483, size: 32)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !892, file: !891, line: 1216, baseType: !484, size: 32, offset: 32)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !892, file: !891, line: 1217, baseType: !484, size: 32, offset: 64)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !892, file: !891, line: 1218, baseType: !484, size: 32, offset: 96)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !892, file: !891, line: 1219, baseType: !484, size: 32, offset: 128)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !892, file: !891, line: 1220, baseType: !484, size: 32, offset: 160)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !892, file: !891, line: 1221, baseType: !484, size: 32, offset: 192)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !892, file: !891, line: 1222, baseType: !484, size: 32, offset: 224)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !892, file: !891, line: 1223, baseType: !484, size: 32, offset: 256)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !892, file: !891, line: 1224, baseType: !484, size: 32, offset: 288)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !892, file: !891, line: 1225, baseType: !484, size: 32, offset: 320)
!905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !906, size: 32)
!906 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !907)
!907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !908, line: 27, size: 96, elements: !909)
!908 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!909 = !{!910, !911, !912}
!910 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !907, file: !908, line: 29, baseType: !137, size: 32)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !907, file: !908, line: 31, baseType: !721, size: 32, offset: 32)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !907, file: !908, line: 37, baseType: !913, size: 32, offset: 64)
!913 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !874, line: 146, baseType: !914)
!914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !874, line: 141, size: 32, elements: !915)
!915 = !{!916}
!916 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !914, file: !874, line: 143, baseType: !137, size: 32)
!917 = !{!884}
!918 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!919 = !DIGlobalVariableExpression(var: !920, expr: !DIExpression())
!920 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !921, file: !928, line: 21, type: !128, isLocal: true, isDefinition: true)
!921 = distinct !DICompileUnit(language: DW_LANG_C99, file: !922, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !923, globals: !927, splitDebugInlining: false, nameTableKind: None)
!922 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/basic/sys_heap")
!923 = !{!924, !103, !102}
!924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !925, size: 32)
!925 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !926, line: 22, baseType: !103)
!926 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!927 = !{!919}
!928 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!929 = !DIGlobalVariableExpression(var: !930, expr: !DIExpression())
!930 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !931, file: !936, line: 13, type: !953, isLocal: true, isDefinition: true)
!931 = distinct !DICompileUnit(language: DW_LANG_C99, file: !932, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !933, splitDebugInlining: false, nameTableKind: None)
!932 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/basic/sys_heap")
!933 = !{!934, !929}
!934 = !DIGlobalVariableExpression(var: !935, expr: !DIExpression())
!935 = distinct !DIGlobalVariable(name: "mpu_config", scope: !931, file: !936, line: 37, type: !937, isLocal: false, isDefinition: true)
!936 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!937 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !938)
!938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !908, line: 41, size: 64, elements: !939)
!939 = !{!940, !941}
!940 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !938, file: !908, line: 43, baseType: !137, size: 32)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !938, file: !908, line: 45, baseType: !942, size: 32, offset: 32)
!942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !943, size: 32)
!943 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !944)
!944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !908, line: 27, size: 96, elements: !945)
!945 = !{!946, !947, !948}
!946 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !944, file: !908, line: 29, baseType: !137, size: 32)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !944, file: !908, line: 31, baseType: !721, size: 32, offset: 32)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !944, file: !908, line: 37, baseType: !949, size: 32, offset: 64)
!949 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !874, line: 146, baseType: !950)
!950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !874, line: 141, size: 32, elements: !951)
!951 = !{!952}
!952 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !950, file: !874, line: 143, baseType: !137, size: 32)
!953 = !DICompositeType(tag: DW_TAG_array_type, baseType: !943, size: 192, elements: !564)
!954 = !DIGlobalVariableExpression(var: !955, expr: !DIExpression())
!955 = distinct !DIGlobalVariable(name: "__device_dts_ord_22", scope: !956, file: !1389, line: 411, type: !1403, isLocal: false, isDefinition: true, align: 32)
!956 = distinct !DICompileUnit(language: DW_LANG_C99, file: !957, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !958, retainedTypes: !967, globals: !1386, splitDebugInlining: false, nameTableKind: None)
!957 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_sam0_eic.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/basic/sys_heap")
!958 = !{!959}
!959 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sam0_eic_trigger", file: !960, line: 19, baseType: !32, size: 32, elements: !961)
!960 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/sam0_eic.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!961 = !{!962, !963, !964, !965, !966}
!962 = !DIEnumerator(name: "SAM0_EIC_RISING", value: 0)
!963 = !DIEnumerator(name: "SAM0_EIC_FALLING", value: 1)
!964 = !DIEnumerator(name: "SAM0_EIC_BOTH", value: 2)
!965 = !DIEnumerator(name: "SAM0_EIC_HIGH", value: 3)
!966 = !DIEnumerator(name: "SAM0_EIC_LOW", value: 4)
!967 = !{!968, !1131, !1311}
!968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !969, size: 32)
!969 = !DIDerivedType(tag: DW_TAG_typedef, name: "Eic", file: !970, line: 492, baseType: !971)
!970 = !DIFile(filename: "modules/hal/atmel/asf/sam0/include/samd51/component/eic.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!971 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !970, line: 477, size: 480, elements: !972)
!972 = !{!973, !985, !997, !1007, !1019, !1029, !1039, !1049, !1059, !1069, !1095, !1096, !1106, !1120}
!973 = !DIDerivedType(tag: DW_TAG_member, name: "CTRLA", scope: !971, file: !970, line: 478, baseType: !974, size: 8)
!974 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !975)
!975 = !DIDerivedType(tag: DW_TAG_typedef, name: "EIC_CTRLA_Type", file: !970, line: 53, baseType: !976)
!976 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !970, line: 44, size: 8, elements: !977)
!977 = !{!978, !984}
!978 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !976, file: !970, line: 51, baseType: !979, size: 8)
!979 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !976, file: !970, line: 45, size: 8, elements: !980)
!980 = !{!981, !982, !983}
!981 = !DIDerivedType(tag: DW_TAG_member, name: "SWRST", scope: !979, file: !970, line: 46, baseType: !240, size: 1, flags: DIFlagBitField, extraData: i64 0)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "ENABLE", scope: !979, file: !970, line: 47, baseType: !240, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "CKSEL", scope: !979, file: !970, line: 49, baseType: !240, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !976, file: !970, line: 52, baseType: !240, size: 8)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "NMICTRL", scope: !971, file: !970, line: 479, baseType: !986, size: 8, offset: 8)
!986 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !987)
!987 = !DIDerivedType(tag: DW_TAG_typedef, name: "EIC_NMICTRL_Type", file: !970, line: 77, baseType: !988)
!988 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !970, line: 69, size: 8, elements: !989)
!989 = !{!990, !996}
!990 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !988, file: !970, line: 75, baseType: !991, size: 8)
!991 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !988, file: !970, line: 70, size: 8, elements: !992)
!992 = !{!993, !994, !995}
!993 = !DIDerivedType(tag: DW_TAG_member, name: "NMISENSE", scope: !991, file: !970, line: 71, baseType: !240, size: 3, flags: DIFlagBitField, extraData: i64 0)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "NMIFILTEN", scope: !991, file: !970, line: 72, baseType: !240, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "NMIASYNCH", scope: !991, file: !970, line: 73, baseType: !240, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !988, file: !970, line: 76, baseType: !240, size: 8)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "NMIFLAG", scope: !971, file: !970, line: 480, baseType: !998, size: 16, offset: 16)
!998 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !999)
!999 = !DIDerivedType(tag: DW_TAG_typedef, name: "EIC_NMIFLAG_Type", file: !970, line: 112, baseType: !1000)
!1000 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !970, line: 106, size: 16, elements: !1001)
!1001 = !{!1002, !1006}
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1000, file: !970, line: 110, baseType: !1003, size: 16)
!1003 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1000, file: !970, line: 107, size: 16, elements: !1004)
!1004 = !{!1005}
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "NMI", scope: !1003, file: !970, line: 108, baseType: !151, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1000, file: !970, line: 111, baseType: !151, size: 16)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "SYNCBUSY", scope: !971, file: !970, line: 481, baseType: !1008, size: 32, offset: 32)
!1008 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1009)
!1009 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1010)
!1010 = !DIDerivedType(tag: DW_TAG_typedef, name: "EIC_SYNCBUSY_Type", file: !970, line: 131, baseType: !1011)
!1011 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !970, line: 124, size: 32, elements: !1012)
!1012 = !{!1013, !1018}
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1011, file: !970, line: 129, baseType: !1014, size: 32)
!1014 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1011, file: !970, line: 125, size: 32, elements: !1015)
!1015 = !{!1016, !1017}
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "SWRST", scope: !1014, file: !970, line: 126, baseType: !137, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "ENABLE", scope: !1014, file: !970, line: 127, baseType: !137, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1011, file: !970, line: 130, baseType: !137, size: 32)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "EVCTRL", scope: !971, file: !970, line: 482, baseType: !1020, size: 32, offset: 64)
!1020 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1021)
!1021 = !DIDerivedType(tag: DW_TAG_typedef, name: "EIC_EVCTRL_Type", file: !970, line: 151, baseType: !1022)
!1022 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !970, line: 145, size: 32, elements: !1023)
!1023 = !{!1024, !1028}
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1022, file: !970, line: 149, baseType: !1025, size: 32)
!1025 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1022, file: !970, line: 146, size: 32, elements: !1026)
!1026 = !{!1027}
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINTEO", scope: !1025, file: !970, line: 147, baseType: !137, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1022, file: !970, line: 150, baseType: !137, size: 32)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "INTENCLR", scope: !971, file: !970, line: 483, baseType: !1030, size: 32, offset: 96)
!1030 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1031)
!1031 = !DIDerivedType(tag: DW_TAG_typedef, name: "EIC_INTENCLR_Type", file: !970, line: 170, baseType: !1032)
!1032 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !970, line: 164, size: 32, elements: !1033)
!1033 = !{!1034, !1038}
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1032, file: !970, line: 168, baseType: !1035, size: 32)
!1035 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1032, file: !970, line: 165, size: 32, elements: !1036)
!1036 = !{!1037}
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT", scope: !1035, file: !970, line: 166, baseType: !137, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1032, file: !970, line: 169, baseType: !137, size: 32)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "INTENSET", scope: !971, file: !970, line: 484, baseType: !1040, size: 32, offset: 128)
!1040 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1041)
!1041 = !DIDerivedType(tag: DW_TAG_typedef, name: "EIC_INTENSET_Type", file: !970, line: 189, baseType: !1042)
!1042 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !970, line: 183, size: 32, elements: !1043)
!1043 = !{!1044, !1048}
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1042, file: !970, line: 187, baseType: !1045, size: 32)
!1045 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1042, file: !970, line: 184, size: 32, elements: !1046)
!1046 = !{!1047}
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT", scope: !1045, file: !970, line: 185, baseType: !137, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1042, file: !970, line: 188, baseType: !137, size: 32)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "INTFLAG", scope: !971, file: !970, line: 485, baseType: !1050, size: 32, offset: 160)
!1050 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1051)
!1051 = !DIDerivedType(tag: DW_TAG_typedef, name: "EIC_INTFLAG_Type", file: !970, line: 208, baseType: !1052)
!1052 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !970, line: 202, size: 32, elements: !1053)
!1053 = !{!1054, !1058}
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1052, file: !970, line: 206, baseType: !1055, size: 32)
!1055 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1052, file: !970, line: 203, size: 32, elements: !1056)
!1056 = !{!1057}
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT", scope: !1055, file: !970, line: 204, baseType: !483, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1052, file: !970, line: 207, baseType: !137, size: 32)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "ASYNCH", scope: !971, file: !970, line: 486, baseType: !1060, size: 32, offset: 192)
!1060 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1061)
!1061 = !DIDerivedType(tag: DW_TAG_typedef, name: "EIC_ASYNCH_Type", file: !970, line: 227, baseType: !1062)
!1062 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !970, line: 221, size: 32, elements: !1063)
!1063 = !{!1064, !1068}
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1062, file: !970, line: 225, baseType: !1065, size: 32)
!1065 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1062, file: !970, line: 222, size: 32, elements: !1066)
!1066 = !{!1067}
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "ASYNCH", scope: !1065, file: !970, line: 223, baseType: !137, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1062, file: !970, line: 226, baseType: !137, size: 32)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "CONFIG", scope: !971, file: !970, line: 487, baseType: !1070, size: 64, offset: 224)
!1070 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1071, size: 64, elements: !564)
!1071 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1072)
!1072 = !DIDerivedType(tag: DW_TAG_typedef, name: "EIC_CONFIG_Type", file: !970, line: 260, baseType: !1073)
!1073 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !970, line: 240, size: 32, elements: !1074)
!1074 = !{!1075, !1094}
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1073, file: !970, line: 258, baseType: !1076, size: 32)
!1076 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1073, file: !970, line: 241, size: 32, elements: !1077)
!1077 = !{!1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090, !1091, !1092, !1093}
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "SENSE0", scope: !1076, file: !970, line: 242, baseType: !137, size: 3, flags: DIFlagBitField, extraData: i64 0)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "FILTEN0", scope: !1076, file: !970, line: 243, baseType: !137, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "SENSE1", scope: !1076, file: !970, line: 244, baseType: !137, size: 3, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "FILTEN1", scope: !1076, file: !970, line: 245, baseType: !137, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "SENSE2", scope: !1076, file: !970, line: 246, baseType: !137, size: 3, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "FILTEN2", scope: !1076, file: !970, line: 247, baseType: !137, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "SENSE3", scope: !1076, file: !970, line: 248, baseType: !137, size: 3, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "FILTEN3", scope: !1076, file: !970, line: 249, baseType: !137, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "SENSE4", scope: !1076, file: !970, line: 250, baseType: !137, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "FILTEN4", scope: !1076, file: !970, line: 251, baseType: !137, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "SENSE5", scope: !1076, file: !970, line: 252, baseType: !137, size: 3, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "FILTEN5", scope: !1076, file: !970, line: 253, baseType: !137, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "SENSE6", scope: !1076, file: !970, line: 254, baseType: !137, size: 3, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "FILTEN6", scope: !1076, file: !970, line: 255, baseType: !137, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "SENSE7", scope: !1076, file: !970, line: 256, baseType: !137, size: 3, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "FILTEN7", scope: !1076, file: !970, line: 257, baseType: !137, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1073, file: !970, line: 259, baseType: !137, size: 32)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved1", scope: !971, file: !970, line: 488, baseType: !235, size: 96, offset: 288)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "DEBOUNCEN", scope: !971, file: !970, line: 489, baseType: !1097, size: 32, offset: 384)
!1097 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1098)
!1098 = !DIDerivedType(tag: DW_TAG_typedef, name: "EIC_DEBOUNCEN_Type", file: !970, line: 412, baseType: !1099)
!1099 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !970, line: 406, size: 32, elements: !1100)
!1100 = !{!1101, !1105}
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1099, file: !970, line: 410, baseType: !1102, size: 32)
!1102 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1099, file: !970, line: 407, size: 32, elements: !1103)
!1103 = !{!1104}
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "DEBOUNCEN", scope: !1102, file: !970, line: 408, baseType: !137, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1099, file: !970, line: 411, baseType: !137, size: 32)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "DPRESCALER", scope: !971, file: !970, line: 490, baseType: !1107, size: 32, offset: 416)
!1107 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1108)
!1108 = !DIDerivedType(tag: DW_TAG_typedef, name: "EIC_DPRESCALER_Type", file: !970, line: 436, baseType: !1109)
!1109 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !970, line: 425, size: 32, elements: !1110)
!1110 = !{!1111, !1119}
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1109, file: !970, line: 434, baseType: !1112, size: 32)
!1112 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1109, file: !970, line: 426, size: 32, elements: !1113)
!1113 = !{!1114, !1115, !1116, !1117, !1118}
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "PRESCALER0", scope: !1112, file: !970, line: 427, baseType: !137, size: 3, flags: DIFlagBitField, extraData: i64 0)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "STATES0", scope: !1112, file: !970, line: 428, baseType: !137, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "PRESCALER1", scope: !1112, file: !970, line: 429, baseType: !137, size: 3, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "STATES1", scope: !1112, file: !970, line: 430, baseType: !137, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "TICKON", scope: !1112, file: !970, line: 432, baseType: !137, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1109, file: !970, line: 435, baseType: !137, size: 32)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "PINSTATE", scope: !971, file: !970, line: 491, baseType: !1121, size: 32, offset: 448)
!1121 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1122)
!1122 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1123)
!1123 = !DIDerivedType(tag: DW_TAG_typedef, name: "EIC_PINSTATE_Type", file: !970, line: 464, baseType: !1124)
!1124 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !970, line: 458, size: 32, elements: !1125)
!1125 = !{!1126, !1130}
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1124, file: !970, line: 462, baseType: !1127, size: 32)
!1127 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1124, file: !970, line: 459, size: 32, elements: !1128)
!1128 = !{!1129}
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "PINSTATE", scope: !1127, file: !970, line: 460, baseType: !137, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1124, file: !970, line: 463, baseType: !137, size: 32)
!1131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1132, size: 32)
!1132 = !DIDerivedType(tag: DW_TAG_typedef, name: "Mclk", file: !1133, line: 467, baseType: !1134)
!1133 = !DIFile(filename: "modules/hal/atmel/asf/sam0/include/samd51/component/mclk.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1134 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1133, line: 454, size: 288, elements: !1135)
!1135 = !{!1136, !1138, !1148, !1158, !1168, !1179, !1189, !1193, !1223, !1248, !1270, !1290}
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved1", scope: !1134, file: !1133, line: 455, baseType: !1137, size: 8)
!1137 = !DICompositeType(tag: DW_TAG_array_type, baseType: !236, size: 8, elements: !882)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "INTENCLR", scope: !1134, file: !1133, line: 456, baseType: !1139, size: 8, offset: 8)
!1139 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1140)
!1140 = !DIDerivedType(tag: DW_TAG_typedef, name: "MCLK_INTENCLR_Type", file: !1133, line: 50, baseType: !1141)
!1141 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1133, line: 44, size: 8, elements: !1142)
!1142 = !{!1143, !1147}
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1141, file: !1133, line: 48, baseType: !1144, size: 8)
!1144 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1141, file: !1133, line: 45, size: 8, elements: !1145)
!1145 = !{!1146}
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "CKRDY", scope: !1144, file: !1133, line: 46, baseType: !240, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1141, file: !1133, line: 49, baseType: !240, size: 8)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "INTENSET", scope: !1134, file: !1133, line: 457, baseType: !1149, size: 8, offset: 16)
!1149 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1150)
!1150 = !DIDerivedType(tag: DW_TAG_typedef, name: "MCLK_INTENSET_Type", file: !1133, line: 68, baseType: !1151)
!1151 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1133, line: 62, size: 8, elements: !1152)
!1152 = !{!1153, !1157}
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1151, file: !1133, line: 66, baseType: !1154, size: 8)
!1154 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1151, file: !1133, line: 63, size: 8, elements: !1155)
!1155 = !{!1156}
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "CKRDY", scope: !1154, file: !1133, line: 64, baseType: !240, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1151, file: !1133, line: 67, baseType: !240, size: 8)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "INTFLAG", scope: !1134, file: !1133, line: 458, baseType: !1159, size: 8, offset: 24)
!1159 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1160)
!1160 = !DIDerivedType(tag: DW_TAG_typedef, name: "MCLK_INTFLAG_Type", file: !1133, line: 86, baseType: !1161)
!1161 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1133, line: 80, size: 8, elements: !1162)
!1162 = !{!1163, !1167}
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1161, file: !1133, line: 84, baseType: !1164, size: 8)
!1164 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1161, file: !1133, line: 81, size: 8, elements: !1165)
!1165 = !{!1166}
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "CKRDY", scope: !1164, file: !1133, line: 82, baseType: !238, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1161, file: !1133, line: 85, baseType: !240, size: 8)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "HSDIV", scope: !1134, file: !1133, line: 459, baseType: !1169, size: 8, offset: 32)
!1169 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1170)
!1170 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1171)
!1171 = !DIDerivedType(tag: DW_TAG_typedef, name: "MCLK_HSDIV_Type", file: !1133, line: 103, baseType: !1172)
!1172 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1133, line: 98, size: 8, elements: !1173)
!1173 = !{!1174, !1178}
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1172, file: !1133, line: 101, baseType: !1175, size: 8)
!1175 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1172, file: !1133, line: 99, size: 8, elements: !1176)
!1176 = !{!1177}
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "DIV", scope: !1175, file: !1133, line: 100, baseType: !240, size: 8, flags: DIFlagBitField, extraData: i64 0)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1172, file: !1133, line: 102, baseType: !240, size: 8)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "CPUDIV", scope: !1134, file: !1133, line: 460, baseType: !1180, size: 8, offset: 40)
!1180 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1181)
!1181 = !DIDerivedType(tag: DW_TAG_typedef, name: "MCLK_CPUDIV_Type", file: !1133, line: 123, baseType: !1182)
!1182 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1133, line: 118, size: 8, elements: !1183)
!1183 = !{!1184, !1188}
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1182, file: !1133, line: 121, baseType: !1185, size: 8)
!1185 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1182, file: !1133, line: 119, size: 8, elements: !1186)
!1186 = !{!1187}
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "DIV", scope: !1185, file: !1133, line: 120, baseType: !240, size: 8, flags: DIFlagBitField, extraData: i64 0)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1182, file: !1133, line: 122, baseType: !240, size: 8)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved2", scope: !1134, file: !1133, line: 461, baseType: !1190, size: 80, offset: 48)
!1190 = !DICompositeType(tag: DW_TAG_array_type, baseType: !236, size: 80, elements: !1191)
!1191 = !{!1192}
!1192 = !DISubrange(count: 10)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "AHBMASK", scope: !1134, file: !1133, line: 462, baseType: !1194, size: 32, offset: 128)
!1194 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1195)
!1195 = !DIDerivedType(tag: DW_TAG_typedef, name: "MCLK_AHBMASK_Type", file: !1133, line: 180, baseType: !1196)
!1196 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1133, line: 152, size: 32, elements: !1197)
!1197 = !{!1198, !1222}
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1196, file: !1133, line: 178, baseType: !1199, size: 32)
!1199 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1196, file: !1133, line: 153, size: 32, elements: !1200)
!1200 = !{!1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221}
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "HPB0_", scope: !1199, file: !1133, line: 154, baseType: !137, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "HPB1_", scope: !1199, file: !1133, line: 155, baseType: !137, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "HPB2_", scope: !1199, file: !1133, line: 156, baseType: !137, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "HPB3_", scope: !1199, file: !1133, line: 157, baseType: !137, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "DSU_", scope: !1199, file: !1133, line: 158, baseType: !137, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "HMATRIX_", scope: !1199, file: !1133, line: 159, baseType: !137, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "NVMCTRL_", scope: !1199, file: !1133, line: 160, baseType: !137, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "HSRAM_", scope: !1199, file: !1133, line: 161, baseType: !137, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "CMCC_", scope: !1199, file: !1133, line: 162, baseType: !137, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "DMAC_", scope: !1199, file: !1133, line: 163, baseType: !137, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "USB_", scope: !1199, file: !1133, line: 164, baseType: !137, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "BKUPRAM_", scope: !1199, file: !1133, line: 165, baseType: !137, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "PAC_", scope: !1199, file: !1133, line: 166, baseType: !137, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "QSPI_", scope: !1199, file: !1133, line: 167, baseType: !137, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "SDHC0_", scope: !1199, file: !1133, line: 169, baseType: !137, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "SDHC1_", scope: !1199, file: !1133, line: 170, baseType: !137, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "ICM_", scope: !1199, file: !1133, line: 172, baseType: !137, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "PUKCC_", scope: !1199, file: !1133, line: 173, baseType: !137, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "QSPI_2X_", scope: !1199, file: !1133, line: 174, baseType: !137, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "NVMCTRL_SMEEPROM_", scope: !1199, file: !1133, line: 175, baseType: !137, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "NVMCTRL_CACHE_", scope: !1199, file: !1133, line: 176, baseType: !137, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1196, file: !1133, line: 179, baseType: !137, size: 32)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "APBAMASK", scope: !1134, file: !1133, line: 463, baseType: !1224, size: 32, offset: 160)
!1224 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1225)
!1225 = !DIDerivedType(tag: DW_TAG_typedef, name: "MCLK_APBAMASK_Type", file: !1133, line: 253, baseType: !1226)
!1226 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1133, line: 232, size: 32, elements: !1227)
!1227 = !{!1228, !1247}
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1226, file: !1133, line: 251, baseType: !1229, size: 32)
!1229 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1226, file: !1133, line: 233, size: 32, elements: !1230)
!1230 = !{!1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246}
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "PAC_", scope: !1229, file: !1133, line: 234, baseType: !137, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "PM_", scope: !1229, file: !1133, line: 235, baseType: !137, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "MCLK_", scope: !1229, file: !1133, line: 236, baseType: !137, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "RSTC_", scope: !1229, file: !1133, line: 237, baseType: !137, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "OSCCTRL_", scope: !1229, file: !1133, line: 238, baseType: !137, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "OSC32KCTRL_", scope: !1229, file: !1133, line: 239, baseType: !137, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "SUPC_", scope: !1229, file: !1133, line: 240, baseType: !137, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "GCLK_", scope: !1229, file: !1133, line: 241, baseType: !137, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "WDT_", scope: !1229, file: !1133, line: 242, baseType: !137, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "RTC_", scope: !1229, file: !1133, line: 243, baseType: !137, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "EIC_", scope: !1229, file: !1133, line: 244, baseType: !137, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "FREQM_", scope: !1229, file: !1133, line: 245, baseType: !137, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "SERCOM0_", scope: !1229, file: !1133, line: 246, baseType: !137, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "SERCOM1_", scope: !1229, file: !1133, line: 247, baseType: !137, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "TC0_", scope: !1229, file: !1133, line: 248, baseType: !137, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "TC1_", scope: !1229, file: !1133, line: 249, baseType: !137, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1226, file: !1133, line: 252, baseType: !137, size: 32)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "APBBMASK", scope: !1134, file: !1133, line: 464, baseType: !1249, size: 32, offset: 192)
!1249 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1250)
!1250 = !DIDerivedType(tag: DW_TAG_typedef, name: "MCLK_APBBMASK_Type", file: !1133, line: 317, baseType: !1251)
!1251 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1133, line: 295, size: 32, elements: !1252)
!1252 = !{!1253, !1269}
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1251, file: !1133, line: 315, baseType: !1254, size: 32)
!1254 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1251, file: !1133, line: 296, size: 32, elements: !1255)
!1255 = !{!1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1268}
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "USB_", scope: !1254, file: !1133, line: 297, baseType: !137, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "DSU_", scope: !1254, file: !1133, line: 298, baseType: !137, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "NVMCTRL_", scope: !1254, file: !1133, line: 299, baseType: !137, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "PORT_", scope: !1254, file: !1133, line: 301, baseType: !137, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "HMATRIX_", scope: !1254, file: !1133, line: 303, baseType: !137, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "EVSYS_", scope: !1254, file: !1133, line: 304, baseType: !137, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "SERCOM2_", scope: !1254, file: !1133, line: 306, baseType: !137, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "SERCOM3_", scope: !1254, file: !1133, line: 307, baseType: !137, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "TCC0_", scope: !1254, file: !1133, line: 308, baseType: !137, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "TCC1_", scope: !1254, file: !1133, line: 309, baseType: !137, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "TC2_", scope: !1254, file: !1133, line: 310, baseType: !137, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "TC3_", scope: !1254, file: !1133, line: 311, baseType: !137, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "RAMECC_", scope: !1254, file: !1133, line: 313, baseType: !137, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1251, file: !1133, line: 316, baseType: !137, size: 32)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "APBCMASK", scope: !1134, file: !1133, line: 465, baseType: !1271, size: 32, offset: 224)
!1271 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1272)
!1272 = !DIDerivedType(tag: DW_TAG_typedef, name: "MCLK_APBCMASK_Type", file: !1133, line: 371, baseType: !1273)
!1273 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1133, line: 353, size: 32, elements: !1274)
!1274 = !{!1275, !1289}
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1273, file: !1133, line: 369, baseType: !1276, size: 32)
!1276 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1273, file: !1133, line: 354, size: 32, elements: !1277)
!1277 = !{!1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285, !1286, !1287, !1288}
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "TCC2_", scope: !1276, file: !1133, line: 356, baseType: !137, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "TCC3_", scope: !1276, file: !1133, line: 357, baseType: !137, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "TC4_", scope: !1276, file: !1133, line: 358, baseType: !137, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "TC5_", scope: !1276, file: !1133, line: 359, baseType: !137, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "PDEC_", scope: !1276, file: !1133, line: 360, baseType: !137, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "AC_", scope: !1276, file: !1133, line: 361, baseType: !137, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "AES_", scope: !1276, file: !1133, line: 362, baseType: !137, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "TRNG_", scope: !1276, file: !1133, line: 363, baseType: !137, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "ICM_", scope: !1276, file: !1133, line: 364, baseType: !137, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "QSPI_", scope: !1276, file: !1133, line: 366, baseType: !137, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "CCL_", scope: !1276, file: !1133, line: 367, baseType: !137, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1273, file: !1133, line: 370, baseType: !137, size: 32)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "APBDMASK", scope: !1134, file: !1133, line: 466, baseType: !1291, size: 32, offset: 256)
!1291 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1292)
!1292 = !DIDerivedType(tag: DW_TAG_typedef, name: "MCLK_APBDMASK_Type", file: !1133, line: 420, baseType: !1293)
!1293 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1133, line: 403, size: 32, elements: !1294)
!1294 = !{!1295, !1310}
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1293, file: !1133, line: 418, baseType: !1296, size: 32)
!1296 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1293, file: !1133, line: 404, size: 32, elements: !1297)
!1297 = !{!1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1309}
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "SERCOM4_", scope: !1296, file: !1133, line: 405, baseType: !137, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "SERCOM5_", scope: !1296, file: !1133, line: 406, baseType: !137, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "SERCOM6_", scope: !1296, file: !1133, line: 407, baseType: !137, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "SERCOM7_", scope: !1296, file: !1133, line: 408, baseType: !137, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "TCC4_", scope: !1296, file: !1133, line: 409, baseType: !137, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "TC6_", scope: !1296, file: !1133, line: 410, baseType: !137, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "TC7_", scope: !1296, file: !1133, line: 411, baseType: !137, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "ADC0_", scope: !1296, file: !1133, line: 412, baseType: !137, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "ADC1_", scope: !1296, file: !1133, line: 413, baseType: !137, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "DAC_", scope: !1296, file: !1133, line: 414, baseType: !137, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "I2S_", scope: !1296, file: !1133, line: 415, baseType: !137, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "PCC_", scope: !1296, file: !1133, line: 416, baseType: !137, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1293, file: !1133, line: 419, baseType: !137, size: 32)
!1311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1312, size: 32)
!1312 = !DIDerivedType(tag: DW_TAG_typedef, name: "Gclk", file: !308, line: 267, baseType: !1313)
!1313 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !308, line: 259, size: 2560, elements: !1314)
!1314 = !{!1315, !1325, !1326, !1353, !1354, !1372, !1373}
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "CTRLA", scope: !1313, file: !308, line: 260, baseType: !1316, size: 8)
!1316 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1317)
!1317 = !DIDerivedType(tag: DW_TAG_typedef, name: "GCLK_CTRLA_Type", file: !308, line: 50, baseType: !1318)
!1318 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !308, line: 44, size: 8, elements: !1319)
!1319 = !{!1320, !1324}
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1318, file: !308, line: 48, baseType: !1321, size: 8)
!1321 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1318, file: !308, line: 45, size: 8, elements: !1322)
!1322 = !{!1323}
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "SWRST", scope: !1321, file: !308, line: 46, baseType: !240, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1318, file: !308, line: 49, baseType: !240, size: 8)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved1", scope: !1313, file: !308, line: 261, baseType: !322, size: 24, offset: 8)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "SYNCBUSY", scope: !1313, file: !308, line: 262, baseType: !1327, size: 32, offset: 32)
!1327 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1328)
!1328 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1329)
!1329 = !DIDerivedType(tag: DW_TAG_typedef, name: "GCLK_SYNCBUSY_Type", file: !308, line: 86, baseType: !1330)
!1330 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !308, line: 62, size: 32, elements: !1331)
!1331 = !{!1332, !1348, !1352}
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1330, file: !308, line: 79, baseType: !1333, size: 32)
!1333 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1330, file: !308, line: 63, size: 32, elements: !1334)
!1334 = !{!1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347}
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "SWRST", scope: !1333, file: !308, line: 64, baseType: !137, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL0", scope: !1333, file: !308, line: 66, baseType: !137, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL1", scope: !1333, file: !308, line: 67, baseType: !137, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL2", scope: !1333, file: !308, line: 68, baseType: !137, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL3", scope: !1333, file: !308, line: 69, baseType: !137, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL4", scope: !1333, file: !308, line: 70, baseType: !137, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL5", scope: !1333, file: !308, line: 71, baseType: !137, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL6", scope: !1333, file: !308, line: 72, baseType: !137, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL7", scope: !1333, file: !308, line: 73, baseType: !137, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL8", scope: !1333, file: !308, line: 74, baseType: !137, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL9", scope: !1333, file: !308, line: 75, baseType: !137, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL10", scope: !1333, file: !308, line: 76, baseType: !137, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL11", scope: !1333, file: !308, line: 77, baseType: !137, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1330, file: !308, line: 84, baseType: !1349, size: 32)
!1349 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1330, file: !308, line: 80, size: 32, elements: !1350)
!1350 = !{!1351}
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL", scope: !1349, file: !308, line: 82, baseType: !137, size: 12, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1330, file: !308, line: 85, baseType: !137, size: 32)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved2", scope: !1313, file: !308, line: 263, baseType: !353, size: 192, offset: 64)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL", scope: !1313, file: !308, line: 264, baseType: !1355, size: 384, offset: 256)
!1355 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1356, size: 384, elements: !242)
!1356 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1357)
!1357 = !DIDerivedType(tag: DW_TAG_typedef, name: "GCLK_GENCTRL_Type", file: !308, line: 163, baseType: !1358)
!1358 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !308, line: 149, size: 32, elements: !1359)
!1359 = !{!1360, !1371}
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1358, file: !308, line: 161, baseType: !1361, size: 32)
!1361 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1358, file: !308, line: 150, size: 32, elements: !1362)
!1362 = !{!1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370}
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "SRC", scope: !1361, file: !308, line: 151, baseType: !137, size: 4, flags: DIFlagBitField, extraData: i64 0)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "GENEN", scope: !1361, file: !308, line: 153, baseType: !137, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "IDC", scope: !1361, file: !308, line: 154, baseType: !137, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "OOV", scope: !1361, file: !308, line: 155, baseType: !137, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "OE", scope: !1361, file: !308, line: 156, baseType: !137, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "DIVSEL", scope: !1361, file: !308, line: 157, baseType: !137, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "RUNSTDBY", scope: !1361, file: !308, line: 158, baseType: !137, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "DIV", scope: !1361, file: !308, line: 160, baseType: !137, size: 16, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1358, file: !308, line: 162, baseType: !137, size: 32)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved3", scope: !1313, file: !308, line: 265, baseType: !375, size: 384, offset: 640)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "PCHCTRL", scope: !1313, file: !308, line: 266, baseType: !1374, size: 1536, offset: 1024)
!1374 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1375, size: 1536, elements: !376)
!1375 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1376)
!1376 = !DIDerivedType(tag: DW_TAG_typedef, name: "GCLK_PCHCTRL_Type", file: !308, line: 218, baseType: !1377)
!1377 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !308, line: 209, size: 32, elements: !1378)
!1378 = !{!1379, !1385}
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1377, file: !308, line: 216, baseType: !1380, size: 32)
!1380 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1377, file: !308, line: 210, size: 32, elements: !1381)
!1381 = !{!1382, !1383, !1384}
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "GEN", scope: !1380, file: !308, line: 211, baseType: !137, size: 4, flags: DIFlagBitField, extraData: i64 0)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "CHEN", scope: !1380, file: !308, line: 213, baseType: !137, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "WRTLOCK", scope: !1380, file: !308, line: 214, baseType: !137, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1377, file: !308, line: 217, baseType: !137, size: 32)
!1386 = !{!1387, !954, !1393, !1418, !1441, !1443, !1450, !1462, !1464, !1466, !1468, !1470, !1472, !1474, !1476, !1478, !1480, !1482, !1484, !1486, !1488, !1490}
!1387 = !DIGlobalVariableExpression(var: !1388, expr: !DIExpression())
!1388 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_22", scope: !956, file: !1389, line: 411, type: !1390, isLocal: false, isDefinition: true, align: 16)
!1389 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_sam0_eic.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1390 = !DICompositeType(tag: DW_TAG_array_type, baseType: !735, size: 80, elements: !1391)
!1391 = !{!1392}
!1392 = !DISubrange(count: 5)
!1393 = !DIGlobalVariableExpression(var: !1394, expr: !DIExpression())
!1394 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_22", scope: !956, file: !1389, line: 411, type: !1395, isLocal: true, isDefinition: true, align: 32)
!1395 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1396)
!1396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !709, line: 51, size: 64, elements: !1397)
!1397 = !{!1398, !1417}
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1396, file: !709, line: 60, baseType: !1399, size: 32)
!1399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1400, size: 32)
!1400 = !DISubroutineType(types: !1401)
!1401 = !{!103, !1402}
!1402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1403, size: 32)
!1403 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1404)
!1404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !718, line: 378, size: 192, elements: !1405)
!1405 = !{!1406, !1407, !1408, !1409, !1415, !1416}
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1404, file: !718, line: 380, baseType: !721, size: 32)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1404, file: !718, line: 382, baseType: !13, size: 32, offset: 32)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1404, file: !718, line: 384, baseType: !13, size: 32, offset: 64)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1404, file: !718, line: 386, baseType: !1410, size: 32, offset: 96)
!1410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1411, size: 32)
!1411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !718, line: 351, size: 16, elements: !1412)
!1412 = !{!1413, !1414}
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1411, file: !718, line: 359, baseType: !240, size: 8)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1411, file: !718, line: 364, baseType: !731, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1404, file: !718, line: 388, baseType: !102, size: 32, offset: 128)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1404, file: !718, line: 396, baseType: !734, size: 32, offset: 160)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1396, file: !709, line: 65, baseType: !1402, size: 32, offset: 32)
!1418 = !DIGlobalVariableExpression(var: !1419, expr: !DIExpression())
!1419 = distinct !DIGlobalVariable(name: "eic_data", scope: !956, file: !1389, line: 410, type: !1420, isLocal: true, isDefinition: true)
!1420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sam0_eic_data", file: !1389, line: 26, size: 256, elements: !1421)
!1421 = !{!1422, !1432}
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "ports", scope: !1420, file: !1389, line: 27, baseType: !1423, size: 128)
!1423 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1424, size: 128, elements: !564)
!1424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sam0_eic_port_data", file: !1389, line: 21, size: 64, elements: !1425)
!1425 = !{!1426, !1431}
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1424, file: !1389, line: 22, baseType: !1427, size: 32)
!1427 = !DIDerivedType(tag: DW_TAG_typedef, name: "sam0_eic_callback_t", file: !960, line: 14, baseType: !1428)
!1428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1429, size: 32)
!1429 = !DISubroutineType(types: !1430)
!1430 = !{null, !137, !102}
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1424, file: !1389, line: 23, baseType: !102, size: 32, offset: 32)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "lines", scope: !1420, file: !1389, line: 28, baseType: !1433, size: 128, offset: 128)
!1433 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1434, size: 128, elements: !1439)
!1434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sam0_eic_line_assignment", file: !1389, line: 15, size: 8, elements: !1435)
!1435 = !{!1436, !1437, !1438}
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !1434, file: !1389, line: 16, baseType: !240, size: 5, flags: DIFlagBitField, extraData: i64 0)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1434, file: !1389, line: 17, baseType: !240, size: 2, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !1434, file: !1389, line: 18, baseType: !240, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1439 = !{!1440}
!1440 = !DISubrange(count: 16)
!1441 = !DIGlobalVariableExpression(var: !1442, expr: !DIExpression())
!1442 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_22", scope: !956, file: !1389, line: 411, type: !1411, isLocal: true, isDefinition: true, align: 8)
!1443 = !DIGlobalVariableExpression(var: !1444, expr: !DIExpression())
!1444 = distinct !DIGlobalVariable(name: "sam0_eic_channels", scope: !956, file: !1445, line: 29, type: !1446, isLocal: true, isDefinition: true)
!1445 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_sam0_eic_priv.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1446 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1447, size: 512, elements: !1448)
!1447 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !240)
!1448 = !{!565, !1449}
!1449 = !DISubrange(count: 32)
!1450 = !DIGlobalVariableExpression(var: !1451, expr: !DIExpression())
!1451 = distinct !DIGlobalVariable(name: "__isr_sam0_eic_isr_irq_0", scope: !1452, file: !1389, line: 356, type: !1455, isLocal: true, isDefinition: true, align: 32)
!1452 = distinct !DISubprogram(name: "sam0_eic_init", scope: !1389, file: !1389, line: 335, type: !1400, scopeLine: 336, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !956, retainedNodes: !1453)
!1453 = !{!1454}
!1454 = !DILocalVariable(name: "dev", arg: 1, scope: !1452, file: !1389, line: 335, type: !1402)
!1455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !1456)
!1456 = !{!1457, !1459, !1460, !1461}
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1455, file: !10, line: 55, baseType: !1458, size: 32)
!1458 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !103)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1455, file: !10, line: 57, baseType: !1458, size: 32, offset: 32)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1455, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1455, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1462 = !DIGlobalVariableExpression(var: !1463, expr: !DIExpression())
!1463 = distinct !DIGlobalVariable(name: "__isr_sam0_eic_isr_irq_1", scope: !1452, file: !1389, line: 359, type: !1455, isLocal: true, isDefinition: true, align: 32)
!1464 = !DIGlobalVariableExpression(var: !1465, expr: !DIExpression())
!1465 = distinct !DIGlobalVariable(name: "__isr_sam0_eic_isr_irq_2", scope: !1452, file: !1389, line: 362, type: !1455, isLocal: true, isDefinition: true, align: 32)
!1466 = !DIGlobalVariableExpression(var: !1467, expr: !DIExpression())
!1467 = distinct !DIGlobalVariable(name: "__isr_sam0_eic_isr_irq_3", scope: !1452, file: !1389, line: 365, type: !1455, isLocal: true, isDefinition: true, align: 32)
!1468 = !DIGlobalVariableExpression(var: !1469, expr: !DIExpression())
!1469 = distinct !DIGlobalVariable(name: "__isr_sam0_eic_isr_irq_4", scope: !1452, file: !1389, line: 368, type: !1455, isLocal: true, isDefinition: true, align: 32)
!1470 = !DIGlobalVariableExpression(var: !1471, expr: !DIExpression())
!1471 = distinct !DIGlobalVariable(name: "__isr_sam0_eic_isr_irq_5", scope: !1452, file: !1389, line: 371, type: !1455, isLocal: true, isDefinition: true, align: 32)
!1472 = !DIGlobalVariableExpression(var: !1473, expr: !DIExpression())
!1473 = distinct !DIGlobalVariable(name: "__isr_sam0_eic_isr_irq_6", scope: !1452, file: !1389, line: 374, type: !1455, isLocal: true, isDefinition: true, align: 32)
!1474 = !DIGlobalVariableExpression(var: !1475, expr: !DIExpression())
!1475 = distinct !DIGlobalVariable(name: "__isr_sam0_eic_isr_irq_7", scope: !1452, file: !1389, line: 377, type: !1455, isLocal: true, isDefinition: true, align: 32)
!1476 = !DIGlobalVariableExpression(var: !1477, expr: !DIExpression())
!1477 = distinct !DIGlobalVariable(name: "__isr_sam0_eic_isr_irq_8", scope: !1452, file: !1389, line: 380, type: !1455, isLocal: true, isDefinition: true, align: 32)
!1478 = !DIGlobalVariableExpression(var: !1479, expr: !DIExpression())
!1479 = distinct !DIGlobalVariable(name: "__isr_sam0_eic_isr_irq_9", scope: !1452, file: !1389, line: 383, type: !1455, isLocal: true, isDefinition: true, align: 32)
!1480 = !DIGlobalVariableExpression(var: !1481, expr: !DIExpression())
!1481 = distinct !DIGlobalVariable(name: "__isr_sam0_eic_isr_irq_10", scope: !1452, file: !1389, line: 386, type: !1455, isLocal: true, isDefinition: true, align: 32)
!1482 = !DIGlobalVariableExpression(var: !1483, expr: !DIExpression())
!1483 = distinct !DIGlobalVariable(name: "__isr_sam0_eic_isr_irq_11", scope: !1452, file: !1389, line: 389, type: !1455, isLocal: true, isDefinition: true, align: 32)
!1484 = !DIGlobalVariableExpression(var: !1485, expr: !DIExpression())
!1485 = distinct !DIGlobalVariable(name: "__isr_sam0_eic_isr_irq_12", scope: !1452, file: !1389, line: 392, type: !1455, isLocal: true, isDefinition: true, align: 32)
!1486 = !DIGlobalVariableExpression(var: !1487, expr: !DIExpression())
!1487 = distinct !DIGlobalVariable(name: "__isr_sam0_eic_isr_irq_13", scope: !1452, file: !1389, line: 395, type: !1455, isLocal: true, isDefinition: true, align: 32)
!1488 = !DIGlobalVariableExpression(var: !1489, expr: !DIExpression())
!1489 = distinct !DIGlobalVariable(name: "__isr_sam0_eic_isr_irq_14", scope: !1452, file: !1389, line: 398, type: !1455, isLocal: true, isDefinition: true, align: 32)
!1490 = !DIGlobalVariableExpression(var: !1491, expr: !DIExpression())
!1491 = distinct !DIGlobalVariable(name: "__isr_sam0_eic_isr_irq_15", scope: !1452, file: !1389, line: 401, type: !1455, isLocal: true, isDefinition: true, align: 32)
!1492 = !DIGlobalVariableExpression(var: !1493, expr: !DIExpression())
!1493 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_22", scope: !1494, file: !1499, line: 7, type: !1500, isLocal: false, isDefinition: true, align: 16)
!1494 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1495, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !1496, splitDebugInlining: false, nameTableKind: None)
!1495 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/basic/sys_heap/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/basic/sys_heap")
!1496 = !{!1492, !1497}
!1497 = !DIGlobalVariableExpression(var: !1498, expr: !DIExpression())
!1498 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !1494, file: !1499, line: 12, type: !1500, isLocal: false, isDefinition: true, align: 16)
!1499 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/basic/sys_heap")
!1500 = !DICompositeType(tag: DW_TAG_array_type, baseType: !735, size: 48, elements: !323)
!1501 = !DIGlobalVariableExpression(var: !1502, expr: !DIExpression())
!1502 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !1503, file: !1593, line: 603, type: !1595, isLocal: true, isDefinition: true, align: 32)
!1503 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1504, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1505, globals: !1590, splitDebugInlining: false, nameTableKind: None)
!1504 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/basic/sys_heap")
!1505 = !{!102, !103, !1506}
!1506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1507, size: 32)
!1507 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1508)
!1508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1509, line: 336, size: 608, elements: !1510)
!1509 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1510 = !{!1511, !1531, !1535, !1539, !1552, !1557, !1562, !1568, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582}
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1508, file: !1509, line: 365, baseType: !1512, size: 32)
!1512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1513, size: 32)
!1513 = !DISubroutineType(types: !1514)
!1514 = !{!103, !1515, !1530}
!1515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1516, size: 32)
!1516 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1517)
!1517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !718, line: 378, size: 192, elements: !1518)
!1518 = !{!1519, !1520, !1521, !1522, !1528, !1529}
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1517, file: !718, line: 380, baseType: !721, size: 32)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1517, file: !718, line: 382, baseType: !13, size: 32, offset: 32)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1517, file: !718, line: 384, baseType: !13, size: 32, offset: 64)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1517, file: !718, line: 386, baseType: !1523, size: 32, offset: 96)
!1523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1524, size: 32)
!1524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !718, line: 351, size: 16, elements: !1525)
!1525 = !{!1526, !1527}
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1524, file: !718, line: 359, baseType: !240, size: 8)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1524, file: !718, line: 364, baseType: !731, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1517, file: !718, line: 388, baseType: !102, size: 32, offset: 128)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1517, file: !718, line: 396, baseType: !734, size: 32, offset: 160)
!1530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !241, size: 32)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1508, file: !1509, line: 366, baseType: !1532, size: 32, offset: 32)
!1532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1533, size: 32)
!1533 = !DISubroutineType(types: !1534)
!1534 = !{null, !1515, !241}
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1508, file: !1509, line: 374, baseType: !1536, size: 32, offset: 64)
!1536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1537, size: 32)
!1537 = !DISubroutineType(types: !1538)
!1538 = !{!103, !1515}
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1508, file: !1509, line: 377, baseType: !1540, size: 32, offset: 96)
!1540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1541, size: 32)
!1541 = !DISubroutineType(types: !1542)
!1542 = !{!103, !1515, !1543}
!1543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1544, size: 32)
!1544 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1545)
!1545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1509, line: 122, size: 64, elements: !1546)
!1546 = !{!1547, !1548, !1549, !1550, !1551}
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1545, file: !1509, line: 123, baseType: !137, size: 32)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1545, file: !1509, line: 124, baseType: !240, size: 8, offset: 32)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1545, file: !1509, line: 125, baseType: !240, size: 8, offset: 40)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1545, file: !1509, line: 126, baseType: !240, size: 8, offset: 48)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1545, file: !1509, line: 127, baseType: !240, size: 8, offset: 56)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1508, file: !1509, line: 379, baseType: !1553, size: 32, offset: 128)
!1553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1554, size: 32)
!1554 = !DISubroutineType(types: !1555)
!1555 = !{!103, !1515, !1556}
!1556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1545, size: 32)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !1508, file: !1509, line: 384, baseType: !1558, size: 32, offset: 160)
!1558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1559, size: 32)
!1559 = !DISubroutineType(types: !1560)
!1560 = !{!103, !1515, !1561, !103}
!1561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1447, size: 32)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !1508, file: !1509, line: 393, baseType: !1563, size: 32, offset: 192)
!1563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1564, size: 32)
!1564 = !DISubroutineType(types: !1565)
!1565 = !{!103, !1515, !1566, !1567}
!1566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !240, size: 32)
!1567 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !1508, file: !1509, line: 402, baseType: !1569, size: 32, offset: 224)
!1569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1570, size: 32)
!1570 = !DISubroutineType(types: !1571)
!1571 = !{null, !1515}
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !1508, file: !1509, line: 405, baseType: !1569, size: 32, offset: 256)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !1508, file: !1509, line: 408, baseType: !1536, size: 32, offset: 288)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !1508, file: !1509, line: 411, baseType: !1569, size: 32, offset: 320)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !1508, file: !1509, line: 414, baseType: !1569, size: 32, offset: 352)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !1508, file: !1509, line: 417, baseType: !1536, size: 32, offset: 384)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !1508, file: !1509, line: 420, baseType: !1536, size: 32, offset: 416)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !1508, file: !1509, line: 423, baseType: !1569, size: 32, offset: 448)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !1508, file: !1509, line: 426, baseType: !1569, size: 32, offset: 480)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !1508, file: !1509, line: 429, baseType: !1536, size: 32, offset: 512)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !1508, file: !1509, line: 432, baseType: !1536, size: 32, offset: 544)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !1508, file: !1509, line: 435, baseType: !1583, size: 32, offset: 576)
!1583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1584, size: 32)
!1584 = !DISubroutineType(types: !1585)
!1585 = !{null, !1515, !1586, !102}
!1586 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !1509, line: 142, baseType: !1587)
!1587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1588, size: 32)
!1588 = !DISubroutineType(types: !1589)
!1589 = !{null, !1515, !102}
!1590 = !{!1501, !1591}
!1591 = !DIGlobalVariableExpression(var: !1592, expr: !DIExpression())
!1592 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !1503, file: !1593, line: 38, type: !1594, isLocal: true, isDefinition: true)
!1593 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1594 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1515)
!1595 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1596)
!1596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !709, line: 51, size: 64, elements: !1597)
!1597 = !{!1598, !1599}
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1596, file: !709, line: 60, baseType: !1536, size: 32)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1596, file: !709, line: 65, baseType: !1515, size: 32, offset: 32)
!1600 = !DIGlobalVariableExpression(var: !1601, expr: !DIExpression())
!1601 = distinct !DIGlobalVariable(name: "uart_sam0_config_0", scope: !1602, file: !1914, line: 1293, type: !1978, isLocal: true, isDefinition: true)
!1602 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1603, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1604, retainedTypes: !1649, globals: !1911, splitDebugInlining: false, nameTableKind: None)
!1603 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_sam0.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/basic/sys_heap")
!1604 = !{!30, !1605, !1617, !1624, !1629, !1636, !1642}
!1605 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_channel_direction", file: !1606, line: 31, baseType: !32, size: 32, elements: !1607)
!1606 = !DIFile(filename: "zephyr/include/zephyr/drivers/dma.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1607 = !{!1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616}
!1608 = !DIEnumerator(name: "MEMORY_TO_MEMORY", value: 0)
!1609 = !DIEnumerator(name: "MEMORY_TO_PERIPHERAL", value: 1)
!1610 = !DIEnumerator(name: "PERIPHERAL_TO_MEMORY", value: 2)
!1611 = !DIEnumerator(name: "PERIPHERAL_TO_PERIPHERAL", value: 3)
!1612 = !DIEnumerator(name: "HOST_TO_MEMORY", value: 4)
!1613 = !DIEnumerator(name: "MEMORY_TO_HOST", value: 5)
!1614 = !DIEnumerator(name: "DMA_CHANNEL_DIRECTION_COMMON_COUNT", value: 6)
!1615 = !DIEnumerator(name: "DMA_CHANNEL_DIRECTION_PRIV_START", value: 6)
!1616 = !DIEnumerator(name: "DMA_CHANNEL_DIRECTION_MAX", value: 7)
!1617 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !1509, line: 47, baseType: !32, size: 32, elements: !1618)
!1618 = !{!1619, !1620, !1621, !1622, !1623}
!1619 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1620 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1621 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1622 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1623 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1624 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !1509, line: 107, baseType: !32, size: 32, elements: !1625)
!1625 = !{!1626, !1627, !1628}
!1626 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1627 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1628 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1629 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !1509, line: 75, baseType: !32, size: 32, elements: !1630)
!1630 = !{!1631, !1632, !1633, !1634, !1635}
!1631 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1632 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1633 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1634 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1635 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1636 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !1509, line: 84, baseType: !32, size: 32, elements: !1637)
!1637 = !{!1638, !1639, !1640, !1641}
!1638 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1639 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1640 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1641 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1642 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !1509, line: 92, baseType: !32, size: 32, elements: !1643)
!1643 = !{!1644, !1645, !1646, !1647, !1648}
!1644 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1645 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1646 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1647 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1648 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1649 = !{!1650, !102, !103, !1729, !1826, !24, !241, !163, !151, !1836}
!1650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1651, size: 32)
!1651 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1652)
!1652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1509, line: 336, size: 608, elements: !1653)
!1653 = !{!1654, !1673, !1677, !1681, !1694, !1699, !1703, !1707, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721}
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1652, file: !1509, line: 365, baseType: !1655, size: 32)
!1655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1656, size: 32)
!1656 = !DISubroutineType(types: !1657)
!1657 = !{!103, !1658, !1530}
!1658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1659, size: 32)
!1659 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1660)
!1660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !718, line: 378, size: 192, elements: !1661)
!1661 = !{!1662, !1663, !1664, !1665, !1671, !1672}
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1660, file: !718, line: 380, baseType: !721, size: 32)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1660, file: !718, line: 382, baseType: !13, size: 32, offset: 32)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1660, file: !718, line: 384, baseType: !13, size: 32, offset: 64)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1660, file: !718, line: 386, baseType: !1666, size: 32, offset: 96)
!1666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1667, size: 32)
!1667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !718, line: 351, size: 16, elements: !1668)
!1668 = !{!1669, !1670}
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1667, file: !718, line: 359, baseType: !240, size: 8)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1667, file: !718, line: 364, baseType: !731, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1660, file: !718, line: 388, baseType: !102, size: 32, offset: 128)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1660, file: !718, line: 396, baseType: !734, size: 32, offset: 160)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1652, file: !1509, line: 366, baseType: !1674, size: 32, offset: 32)
!1674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1675, size: 32)
!1675 = !DISubroutineType(types: !1676)
!1676 = !{null, !1658, !241}
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1652, file: !1509, line: 374, baseType: !1678, size: 32, offset: 64)
!1678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1679, size: 32)
!1679 = !DISubroutineType(types: !1680)
!1680 = !{!103, !1658}
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1652, file: !1509, line: 377, baseType: !1682, size: 32, offset: 96)
!1682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1683, size: 32)
!1683 = !DISubroutineType(types: !1684)
!1684 = !{!103, !1658, !1685}
!1685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1686, size: 32)
!1686 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1687)
!1687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1509, line: 122, size: 64, elements: !1688)
!1688 = !{!1689, !1690, !1691, !1692, !1693}
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1687, file: !1509, line: 123, baseType: !137, size: 32)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1687, file: !1509, line: 124, baseType: !240, size: 8, offset: 32)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1687, file: !1509, line: 125, baseType: !240, size: 8, offset: 40)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1687, file: !1509, line: 126, baseType: !240, size: 8, offset: 48)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1687, file: !1509, line: 127, baseType: !240, size: 8, offset: 56)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1652, file: !1509, line: 379, baseType: !1695, size: 32, offset: 128)
!1695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1696, size: 32)
!1696 = !DISubroutineType(types: !1697)
!1697 = !{!103, !1658, !1698}
!1698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1687, size: 32)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !1652, file: !1509, line: 384, baseType: !1700, size: 32, offset: 160)
!1700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1701, size: 32)
!1701 = !DISubroutineType(types: !1702)
!1702 = !{!103, !1658, !1561, !103}
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !1652, file: !1509, line: 393, baseType: !1704, size: 32, offset: 192)
!1704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1705, size: 32)
!1705 = !DISubroutineType(types: !1706)
!1706 = !{!103, !1658, !1566, !1567}
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !1652, file: !1509, line: 402, baseType: !1708, size: 32, offset: 224)
!1708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1709, size: 32)
!1709 = !DISubroutineType(types: !1710)
!1710 = !{null, !1658}
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !1652, file: !1509, line: 405, baseType: !1708, size: 32, offset: 256)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !1652, file: !1509, line: 408, baseType: !1678, size: 32, offset: 288)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !1652, file: !1509, line: 411, baseType: !1708, size: 32, offset: 320)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !1652, file: !1509, line: 414, baseType: !1708, size: 32, offset: 352)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !1652, file: !1509, line: 417, baseType: !1678, size: 32, offset: 384)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !1652, file: !1509, line: 420, baseType: !1678, size: 32, offset: 416)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !1652, file: !1509, line: 423, baseType: !1708, size: 32, offset: 448)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !1652, file: !1509, line: 426, baseType: !1708, size: 32, offset: 480)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !1652, file: !1509, line: 429, baseType: !1678, size: 32, offset: 512)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !1652, file: !1509, line: 432, baseType: !1678, size: 32, offset: 544)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !1652, file: !1509, line: 435, baseType: !1722, size: 32, offset: 576)
!1722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1723, size: 32)
!1723 = !DISubroutineType(types: !1724)
!1724 = !{null, !1658, !1725, !102}
!1725 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !1509, line: 142, baseType: !1726)
!1726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1727, size: 32)
!1727 = !DISubroutineType(types: !1728)
!1728 = !{null, !1658, !102}
!1729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1730, size: 32)
!1730 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1731)
!1731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_driver_api", file: !1606, line: 304, size: 288, elements: !1732)
!1732 = !{!1733, !1785, !1790, !1795, !1797, !1799, !1801, !1816, !1821}
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1731, file: !1606, line: 305, baseType: !1734, size: 32)
!1734 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_api_config", file: !1606, line: 264, baseType: !1735)
!1735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1736, size: 32)
!1736 = !DISubroutineType(types: !1737)
!1737 = !{!103, !1658, !137, !1738}
!1738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1739, size: 32)
!1739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_config", file: !1606, line: 194, size: 224, elements: !1740)
!1740 = !{!1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1779, !1780}
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "dma_slot", scope: !1739, file: !1606, line: 195, baseType: !137, size: 8, flags: DIFlagBitField, extraData: i64 0)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "channel_direction", scope: !1739, file: !1606, line: 196, baseType: !137, size: 3, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "complete_callback_en", scope: !1739, file: !1606, line: 197, baseType: !137, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "error_callback_en", scope: !1739, file: !1606, line: 198, baseType: !137, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "source_handshake", scope: !1739, file: !1606, line: 199, baseType: !137, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "dest_handshake", scope: !1739, file: !1606, line: 200, baseType: !137, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "channel_priority", scope: !1739, file: !1606, line: 201, baseType: !137, size: 4, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "source_chaining_en", scope: !1739, file: !1606, line: 202, baseType: !137, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "dest_chaining_en", scope: !1739, file: !1606, line: 203, baseType: !137, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "linked_channel", scope: !1739, file: !1606, line: 204, baseType: !137, size: 7, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic", scope: !1739, file: !1606, line: 205, baseType: !137, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !1739, file: !1606, line: 206, baseType: !137, size: 3, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "source_data_size", scope: !1739, file: !1606, line: 207, baseType: !137, size: 16, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "dest_data_size", scope: !1739, file: !1606, line: 208, baseType: !137, size: 16, offset: 48, flags: DIFlagBitField, extraData: i64 0)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "source_burst_length", scope: !1739, file: !1606, line: 209, baseType: !137, size: 16, offset: 64, flags: DIFlagBitField, extraData: i64 0)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "dest_burst_length", scope: !1739, file: !1606, line: 210, baseType: !137, size: 16, offset: 80, flags: DIFlagBitField, extraData: i64 0)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "block_count", scope: !1739, file: !1606, line: 211, baseType: !137, size: 32, offset: 96)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "head_block", scope: !1739, file: !1606, line: 212, baseType: !1759, size: 32, offset: 128)
!1759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1760, size: 32)
!1760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_block_config", file: !1606, line: 113, size: 256, elements: !1761)
!1761 = !{!1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778}
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "source_address", scope: !1760, file: !1606, line: 118, baseType: !137, size: 32)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "dest_address", scope: !1760, file: !1606, line: 119, baseType: !137, size: 32, offset: 32)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "source_gather_interval", scope: !1760, file: !1606, line: 121, baseType: !137, size: 32, offset: 64)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "dest_scatter_interval", scope: !1760, file: !1606, line: 122, baseType: !137, size: 32, offset: 96)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "dest_scatter_count", scope: !1760, file: !1606, line: 123, baseType: !151, size: 16, offset: 128)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "source_gather_count", scope: !1760, file: !1606, line: 124, baseType: !151, size: 16, offset: 144)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "block_size", scope: !1760, file: !1606, line: 125, baseType: !137, size: 32, offset: 160)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "next_block", scope: !1760, file: !1606, line: 126, baseType: !1759, size: 32, offset: 192)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "source_gather_en", scope: !1760, file: !1606, line: 127, baseType: !151, size: 1, offset: 224, flags: DIFlagBitField, extraData: i64 224)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "dest_scatter_en", scope: !1760, file: !1606, line: 128, baseType: !151, size: 1, offset: 225, flags: DIFlagBitField, extraData: i64 224)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "source_addr_adj", scope: !1760, file: !1606, line: 129, baseType: !151, size: 2, offset: 226, flags: DIFlagBitField, extraData: i64 224)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "dest_addr_adj", scope: !1760, file: !1606, line: 130, baseType: !151, size: 2, offset: 228, flags: DIFlagBitField, extraData: i64 224)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "source_reload_en", scope: !1760, file: !1606, line: 131, baseType: !151, size: 1, offset: 230, flags: DIFlagBitField, extraData: i64 224)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "dest_reload_en", scope: !1760, file: !1606, line: 132, baseType: !151, size: 1, offset: 231, flags: DIFlagBitField, extraData: i64 224)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_mode_control", scope: !1760, file: !1606, line: 133, baseType: !151, size: 4, offset: 232, flags: DIFlagBitField, extraData: i64 224)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "flow_control_mode", scope: !1760, file: !1606, line: 134, baseType: !151, size: 1, offset: 236, flags: DIFlagBitField, extraData: i64 224)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !1760, file: !1606, line: 135, baseType: !151, size: 3, offset: 237, flags: DIFlagBitField, extraData: i64 224)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !1739, file: !1606, line: 213, baseType: !102, size: 32, offset: 160)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "dma_callback", scope: !1739, file: !1606, line: 214, baseType: !1781, size: 32, offset: 192)
!1781 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_callback_t", file: !1606, line: 150, baseType: !1782)
!1782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1783, size: 32)
!1783 = !DISubroutineType(types: !1784)
!1784 = !{null, !1658, !102, !137, !103}
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "reload", scope: !1731, file: !1606, line: 306, baseType: !1786, size: 32, offset: 32)
!1786 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_api_reload", file: !1606, line: 271, baseType: !1787)
!1787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1788, size: 32)
!1788 = !DISubroutineType(types: !1789)
!1789 = !{!103, !1658, !137, !137, !137, !120}
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1731, file: !1606, line: 307, baseType: !1791, size: 32, offset: 64)
!1791 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_api_start", file: !1606, line: 275, baseType: !1792)
!1792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1793, size: 32)
!1793 = !DISubroutineType(types: !1794)
!1794 = !{!103, !1658, !137}
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !1731, file: !1606, line: 308, baseType: !1796, size: 32, offset: 96)
!1796 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_api_stop", file: !1606, line: 277, baseType: !1792)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !1731, file: !1606, line: 309, baseType: !1798, size: 32, offset: 128)
!1798 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_api_suspend", file: !1606, line: 279, baseType: !1792)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !1731, file: !1606, line: 310, baseType: !1800, size: 32, offset: 160)
!1800 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_api_resume", file: !1606, line: 281, baseType: !1792)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1731, file: !1606, line: 311, baseType: !1802, size: 32, offset: 192)
!1802 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_api_get_status", file: !1606, line: 283, baseType: !1803)
!1803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1804, size: 32)
!1804 = !DISubroutineType(types: !1805)
!1805 = !{!103, !1658, !137, !1806}
!1806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1807, size: 32)
!1807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_status", file: !1606, line: 229, size: 256, elements: !1808)
!1808 = !{!1809, !1810, !1811, !1812, !1813, !1814, !1815}
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "busy", scope: !1807, file: !1606, line: 230, baseType: !731, size: 8)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1807, file: !1606, line: 231, baseType: !1605, size: 32, offset: 32)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "pending_length", scope: !1807, file: !1606, line: 232, baseType: !137, size: 32, offset: 64)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !1807, file: !1606, line: 233, baseType: !137, size: 32, offset: 96)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "write_position", scope: !1807, file: !1606, line: 234, baseType: !137, size: 32, offset: 128)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "read_position", scope: !1807, file: !1606, line: 235, baseType: !137, size: 32, offset: 160)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "total_copied", scope: !1807, file: !1606, line: 236, baseType: !163, size: 64, offset: 192)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "get_attribute", scope: !1731, file: !1606, line: 312, baseType: !1817, size: 32, offset: 224)
!1817 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_api_get_attribute", file: !1606, line: 286, baseType: !1818)
!1818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1819, size: 32)
!1819 = !DISubroutineType(types: !1820)
!1820 = !{!103, !1658, !137, !149}
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "chan_filter", scope: !1731, file: !1606, line: 313, baseType: !1822, size: 32, offset: 256)
!1822 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_api_chan_filter", file: !1606, line: 301, baseType: !1823)
!1823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1824, size: 32)
!1824 = !DISubroutineType(types: !1825)
!1825 = !{!731, !1658, !103, !102}
!1826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1827, size: 32)
!1827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_context", file: !1606, line: 249, size: 96, elements: !1828)
!1828 = !{!1829, !1830, !1831}
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !1827, file: !1606, line: 250, baseType: !1458, size: 32)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "dma_channels", scope: !1827, file: !1606, line: 251, baseType: !103, size: 32, offset: 32)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "atomic", scope: !1827, file: !1606, line: 252, baseType: !1832, size: 32, offset: 64)
!1832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1833, size: 32)
!1833 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !1834, line: 22, baseType: !1835)
!1834 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1835 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!1836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1837, size: 32)
!1837 = !DIDerivedType(tag: DW_TAG_typedef, name: "Gclk", file: !308, line: 267, baseType: !1838)
!1838 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !308, line: 259, size: 2560, elements: !1839)
!1839 = !{!1840, !1850, !1851, !1878, !1879, !1897, !1898}
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "CTRLA", scope: !1838, file: !308, line: 260, baseType: !1841, size: 8)
!1841 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1842)
!1842 = !DIDerivedType(tag: DW_TAG_typedef, name: "GCLK_CTRLA_Type", file: !308, line: 50, baseType: !1843)
!1843 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !308, line: 44, size: 8, elements: !1844)
!1844 = !{!1845, !1849}
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1843, file: !308, line: 48, baseType: !1846, size: 8)
!1846 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1843, file: !308, line: 45, size: 8, elements: !1847)
!1847 = !{!1848}
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "SWRST", scope: !1846, file: !308, line: 46, baseType: !240, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1843, file: !308, line: 49, baseType: !240, size: 8)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved1", scope: !1838, file: !308, line: 261, baseType: !322, size: 24, offset: 8)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "SYNCBUSY", scope: !1838, file: !308, line: 262, baseType: !1852, size: 32, offset: 32)
!1852 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1853)
!1853 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1854)
!1854 = !DIDerivedType(tag: DW_TAG_typedef, name: "GCLK_SYNCBUSY_Type", file: !308, line: 86, baseType: !1855)
!1855 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !308, line: 62, size: 32, elements: !1856)
!1856 = !{!1857, !1873, !1877}
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1855, file: !308, line: 79, baseType: !1858, size: 32)
!1858 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1855, file: !308, line: 63, size: 32, elements: !1859)
!1859 = !{!1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869, !1870, !1871, !1872}
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "SWRST", scope: !1858, file: !308, line: 64, baseType: !137, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL0", scope: !1858, file: !308, line: 66, baseType: !137, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL1", scope: !1858, file: !308, line: 67, baseType: !137, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL2", scope: !1858, file: !308, line: 68, baseType: !137, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL3", scope: !1858, file: !308, line: 69, baseType: !137, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL4", scope: !1858, file: !308, line: 70, baseType: !137, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL5", scope: !1858, file: !308, line: 71, baseType: !137, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL6", scope: !1858, file: !308, line: 72, baseType: !137, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL7", scope: !1858, file: !308, line: 73, baseType: !137, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL8", scope: !1858, file: !308, line: 74, baseType: !137, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL9", scope: !1858, file: !308, line: 75, baseType: !137, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL10", scope: !1858, file: !308, line: 76, baseType: !137, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL11", scope: !1858, file: !308, line: 77, baseType: !137, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1855, file: !308, line: 84, baseType: !1874, size: 32)
!1874 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1855, file: !308, line: 80, size: 32, elements: !1875)
!1875 = !{!1876}
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL", scope: !1874, file: !308, line: 82, baseType: !137, size: 12, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1855, file: !308, line: 85, baseType: !137, size: 32)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved2", scope: !1838, file: !308, line: 263, baseType: !353, size: 192, offset: 64)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL", scope: !1838, file: !308, line: 264, baseType: !1880, size: 384, offset: 256)
!1880 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1881, size: 384, elements: !242)
!1881 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1882)
!1882 = !DIDerivedType(tag: DW_TAG_typedef, name: "GCLK_GENCTRL_Type", file: !308, line: 163, baseType: !1883)
!1883 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !308, line: 149, size: 32, elements: !1884)
!1884 = !{!1885, !1896}
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1883, file: !308, line: 161, baseType: !1886, size: 32)
!1886 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1883, file: !308, line: 150, size: 32, elements: !1887)
!1887 = !{!1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895}
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "SRC", scope: !1886, file: !308, line: 151, baseType: !137, size: 4, flags: DIFlagBitField, extraData: i64 0)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "GENEN", scope: !1886, file: !308, line: 153, baseType: !137, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "IDC", scope: !1886, file: !308, line: 154, baseType: !137, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "OOV", scope: !1886, file: !308, line: 155, baseType: !137, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "OE", scope: !1886, file: !308, line: 156, baseType: !137, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "DIVSEL", scope: !1886, file: !308, line: 157, baseType: !137, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "RUNSTDBY", scope: !1886, file: !308, line: 158, baseType: !137, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "DIV", scope: !1886, file: !308, line: 160, baseType: !137, size: 16, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1883, file: !308, line: 162, baseType: !137, size: 32)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved3", scope: !1838, file: !308, line: 265, baseType: !375, size: 384, offset: 640)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "PCHCTRL", scope: !1838, file: !308, line: 266, baseType: !1899, size: 1536, offset: 1024)
!1899 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1900, size: 1536, elements: !376)
!1900 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1901)
!1901 = !DIDerivedType(tag: DW_TAG_typedef, name: "GCLK_PCHCTRL_Type", file: !308, line: 218, baseType: !1902)
!1902 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !308, line: 209, size: 32, elements: !1903)
!1903 = !{!1904, !1910}
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1902, file: !308, line: 216, baseType: !1905, size: 32)
!1905 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1902, file: !308, line: 210, size: 32, elements: !1906)
!1906 = !{!1907, !1908, !1909}
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "GEN", scope: !1905, file: !308, line: 211, baseType: !137, size: 4, flags: DIFlagBitField, extraData: i64 0)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "CHEN", scope: !1905, file: !308, line: 213, baseType: !137, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "WRTLOCK", scope: !1905, file: !308, line: 214, baseType: !137, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1902, file: !308, line: 217, baseType: !137, size: 32)
!1911 = !{!1912, !1916, !1918, !1925, !1932, !1600, !1934, !1945, !1947, !1949, !1951, !1970, !1973, !1976}
!1912 = !DIGlobalVariableExpression(var: !1913, expr: !DIExpression())
!1913 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !1602, file: !1914, line: 1293, type: !1915, isLocal: false, isDefinition: true, align: 16)
!1914 = !DIFile(filename: "zephyr/drivers/serial/uart_sam0.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1915 = !DICompositeType(tag: DW_TAG_array_type, baseType: !735, size: 128, elements: !159)
!1916 = !DIGlobalVariableExpression(var: !1917, expr: !DIExpression())
!1917 = distinct !DIGlobalVariable(name: "__device_dts_ord_36", scope: !1602, file: !1914, line: 1293, type: !1659, isLocal: false, isDefinition: true, align: 32)
!1918 = !DIGlobalVariableExpression(var: !1919, expr: !DIExpression())
!1919 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_36", scope: !1602, file: !1914, line: 1293, type: !1920, isLocal: true, isDefinition: true, align: 32)
!1920 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1921)
!1921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !709, line: 51, size: 64, elements: !1922)
!1922 = !{!1923, !1924}
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1921, file: !709, line: 60, baseType: !1678, size: 32)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1921, file: !709, line: 65, baseType: !1658, size: 32, offset: 32)
!1925 = !DIGlobalVariableExpression(var: !1926, expr: !DIExpression())
!1926 = distinct !DIGlobalVariable(name: "uart_sam0_data_0", scope: !1602, file: !1914, line: 1293, type: !1927, isLocal: true, isDefinition: true)
!1927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_sam0_dev_data", file: !1914, line: 60, size: 128, elements: !1928)
!1928 = !{!1929, !1930, !1931}
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "config_cache", scope: !1927, file: !1914, line: 61, baseType: !1687, size: 64)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1927, file: !1914, line: 63, baseType: !1725, size: 32, offset: 64)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "cb_data", scope: !1927, file: !1914, line: 64, baseType: !102, size: 32, offset: 96)
!1932 = !DIGlobalVariableExpression(var: !1933, expr: !DIExpression())
!1933 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_36", scope: !1602, file: !1914, line: 1293, type: !1667, isLocal: true, isDefinition: true, align: 8)
!1934 = !DIGlobalVariableExpression(var: !1935, expr: !DIExpression())
!1935 = distinct !DIGlobalVariable(name: "__isr_uart_sam0_isr_irq_0", scope: !1936, file: !1914, line: 1293, type: !1939, isLocal: true, isDefinition: true, align: 32)
!1936 = distinct !DISubprogram(name: "uart_sam0_irq_config_0", scope: !1914, file: !1914, line: 1293, type: !1709, scopeLine: 1293, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1602, retainedNodes: !1937)
!1937 = !{!1938}
!1938 = !DILocalVariable(name: "dev", arg: 1, scope: !1936, file: !1914, line: 1293, type: !1658)
!1939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !1940)
!1940 = !{!1941, !1942, !1943, !1944}
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1939, file: !10, line: 55, baseType: !1458, size: 32)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1939, file: !10, line: 57, baseType: !1458, size: 32, offset: 32)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1939, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1939, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1945 = !DIGlobalVariableExpression(var: !1946, expr: !DIExpression())
!1946 = distinct !DIGlobalVariable(name: "__isr_uart_sam0_isr_irq_1", scope: !1936, file: !1914, line: 1293, type: !1939, isLocal: true, isDefinition: true, align: 32)
!1947 = !DIGlobalVariableExpression(var: !1948, expr: !DIExpression())
!1948 = distinct !DIGlobalVariable(name: "__isr_uart_sam0_isr_irq_2", scope: !1936, file: !1914, line: 1293, type: !1939, isLocal: true, isDefinition: true, align: 32)
!1949 = !DIGlobalVariableExpression(var: !1950, expr: !DIExpression())
!1950 = distinct !DIGlobalVariable(name: "__isr_uart_sam0_isr_irq_3", scope: !1936, file: !1914, line: 1293, type: !1939, isLocal: true, isDefinition: true, align: 32)
!1951 = !DIGlobalVariableExpression(var: !1952, expr: !DIExpression())
!1952 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_36", scope: !1602, file: !1914, line: 1293, type: !1953, isLocal: true, isDefinition: true)
!1953 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1954)
!1954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1955, line: 60, size: 64, elements: !1956)
!1955 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1956 = !{!1957, !1969}
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1954, file: !1955, line: 69, baseType: !1958, size: 32)
!1958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1959, size: 32)
!1959 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1960)
!1960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1955, line: 50, size: 64, elements: !1961)
!1961 = !{!1962, !1967, !1968}
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1960, file: !1955, line: 52, baseType: !1963, size: 32)
!1963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1964, size: 32)
!1964 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1965)
!1965 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1966, line: 32, baseType: !137)
!1966 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl/pinctrl_soc_sam_common.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1960, file: !1955, line: 54, baseType: !240, size: 8, offset: 32)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1960, file: !1955, line: 56, baseType: !240, size: 8, offset: 40)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1954, file: !1955, line: 71, baseType: !240, size: 8, offset: 32)
!1970 = !DIGlobalVariableExpression(var: !1971, expr: !DIExpression())
!1971 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_36", scope: !1602, file: !1914, line: 1293, type: !1972, isLocal: true, isDefinition: true)
!1972 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1959, size: 64, elements: !882)
!1973 = !DIGlobalVariableExpression(var: !1974, expr: !DIExpression())
!1974 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_36", scope: !1602, file: !1914, line: 1293, type: !1975, isLocal: true, isDefinition: true)
!1975 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1964, size: 64, elements: !564)
!1976 = !DIGlobalVariableExpression(var: !1977, expr: !DIExpression())
!1977 = distinct !DIGlobalVariable(name: "uart_sam0_driver_api", scope: !1602, file: !1914, line: 1160, type: !1651, isLocal: true, isDefinition: true)
!1978 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1979)
!1979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_sam0_dev_cfg", file: !1914, line: 33, size: 288, elements: !1980)
!1980 = !{!1981, !2208, !2209, !2210, !2211, !2213, !2214, !2215, !2216}
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !1979, file: !1914, line: 34, baseType: !1982, size: 32)
!1982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1983, size: 32)
!1983 = !DIDerivedType(tag: DW_TAG_typedef, name: "SercomUsart", file: !1984, line: 1666, baseType: !1985)
!1984 = !DIFile(filename: "modules/hal/atmel/asf/sam0/include/samd51/component/sercom.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1985 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1984, line: 1644, size: 416, elements: !1986)
!1986 = !{!1987, !2011, !2029, !2045, !2069, !2079, !2081, !2097, !2098, !2114, !2115, !2131, !2132, !2149, !2164, !2171, !2172, !2183, !2187, !2197, !2198}
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "CTRLA", scope: !1985, file: !1984, line: 1645, baseType: !1988, size: 32)
!1988 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1989)
!1989 = !DIDerivedType(tag: DW_TAG_typedef, name: "SERCOM_USART_CTRLA_Type", file: !1984, line: 236, baseType: !1990)
!1990 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1984, line: 213, size: 32, elements: !1991)
!1991 = !{!1992, !2010}
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1990, file: !1984, line: 234, baseType: !1993, size: 32)
!1993 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1990, file: !1984, line: 214, size: 32, elements: !1994)
!1994 = !{!1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009}
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "SWRST", scope: !1993, file: !1984, line: 215, baseType: !137, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "ENABLE", scope: !1993, file: !1984, line: 216, baseType: !137, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "MODE", scope: !1993, file: !1984, line: 217, baseType: !137, size: 3, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "RUNSTDBY", scope: !1993, file: !1984, line: 219, baseType: !137, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "IBON", scope: !1993, file: !1984, line: 220, baseType: !137, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "TXINV", scope: !1993, file: !1984, line: 221, baseType: !137, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "RXINV", scope: !1993, file: !1984, line: 222, baseType: !137, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPR", scope: !1993, file: !1984, line: 224, baseType: !137, size: 3, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "TXPO", scope: !1993, file: !1984, line: 225, baseType: !137, size: 2, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "RXPO", scope: !1993, file: !1984, line: 227, baseType: !137, size: 2, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPA", scope: !1993, file: !1984, line: 228, baseType: !137, size: 2, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "FORM", scope: !1993, file: !1984, line: 229, baseType: !137, size: 4, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "CMODE", scope: !1993, file: !1984, line: 230, baseType: !137, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "CPOL", scope: !1993, file: !1984, line: 231, baseType: !137, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "DORD", scope: !1993, file: !1984, line: 232, baseType: !137, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1990, file: !1984, line: 235, baseType: !137, size: 32)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "CTRLB", scope: !1985, file: !1984, line: 1646, baseType: !2012, size: 32, offset: 32)
!2012 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2013)
!2013 = !DIDerivedType(tag: DW_TAG_typedef, name: "SERCOM_USART_CTRLB_Type", file: !1984, line: 407, baseType: !2014)
!2014 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1984, line: 388, size: 32, elements: !2015)
!2015 = !{!2016, !2028}
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2014, file: !1984, line: 405, baseType: !2017, size: 32)
!2017 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2014, file: !1984, line: 389, size: 32, elements: !2018)
!2018 = !{!2019, !2020, !2021, !2022, !2023, !2024, !2025, !2026, !2027}
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "CHSIZE", scope: !2017, file: !1984, line: 390, baseType: !137, size: 3, flags: DIFlagBitField, extraData: i64 0)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "SBMODE", scope: !2017, file: !1984, line: 392, baseType: !137, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "COLDEN", scope: !2017, file: !1984, line: 394, baseType: !137, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "SFDE", scope: !2017, file: !1984, line: 395, baseType: !137, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "ENC", scope: !2017, file: !1984, line: 396, baseType: !137, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "PMODE", scope: !2017, file: !1984, line: 398, baseType: !137, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "TXEN", scope: !2017, file: !1984, line: 400, baseType: !137, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "RXEN", scope: !2017, file: !1984, line: 401, baseType: !137, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "LINCMD", scope: !2017, file: !1984, line: 403, baseType: !137, size: 2, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2014, file: !1984, line: 406, baseType: !137, size: 32)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "CTRLC", scope: !1985, file: !1984, line: 1647, baseType: !2030, size: 32, offset: 64)
!2030 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2031)
!2031 = !DIDerivedType(tag: DW_TAG_typedef, name: "SERCOM_USART_CTRLC_Type", file: !1984, line: 518, baseType: !2032)
!2032 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1984, line: 502, size: 32, elements: !2033)
!2033 = !{!2034, !2044}
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2032, file: !1984, line: 516, baseType: !2035, size: 32)
!2035 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2032, file: !1984, line: 503, size: 32, elements: !2036)
!2036 = !{!2037, !2038, !2039, !2040, !2041, !2042, !2043}
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "GTIME", scope: !2035, file: !1984, line: 504, baseType: !137, size: 3, flags: DIFlagBitField, extraData: i64 0)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "BRKLEN", scope: !2035, file: !1984, line: 506, baseType: !137, size: 2, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "HDRDLY", scope: !2035, file: !1984, line: 507, baseType: !137, size: 2, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "INACK", scope: !2035, file: !1984, line: 509, baseType: !137, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "DSNACK", scope: !2035, file: !1984, line: 510, baseType: !137, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "MAXITER", scope: !2035, file: !1984, line: 512, baseType: !137, size: 3, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "DATA32B", scope: !2035, file: !1984, line: 514, baseType: !137, size: 2, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2032, file: !1984, line: 517, baseType: !137, size: 32)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "BAUD", scope: !1985, file: !1984, line: 1648, baseType: !2046, size: 16, offset: 96)
!2046 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2047)
!2047 = !DIDerivedType(tag: DW_TAG_typedef, name: "SERCOM_USART_BAUD_Type", file: !1984, line: 611, baseType: !2048)
!2048 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1984, line: 595, size: 16, elements: !2049)
!2049 = !{!2050, !2054, !2059, !2064, !2068}
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2048, file: !1984, line: 598, baseType: !2051, size: 16)
!2051 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2048, file: !1984, line: 596, size: 16, elements: !2052)
!2052 = !{!2053}
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "BAUD", scope: !2051, file: !1984, line: 597, baseType: !151, size: 16, flags: DIFlagBitField, extraData: i64 0)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "FRAC", scope: !2048, file: !1984, line: 602, baseType: !2055, size: 16)
!2055 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2048, file: !1984, line: 599, size: 16, elements: !2056)
!2056 = !{!2057, !2058}
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "BAUD", scope: !2055, file: !1984, line: 600, baseType: !151, size: 13, flags: DIFlagBitField, extraData: i64 0)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "FP", scope: !2055, file: !1984, line: 601, baseType: !151, size: 3, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "FRACFP", scope: !2048, file: !1984, line: 606, baseType: !2060, size: 16)
!2060 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2048, file: !1984, line: 603, size: 16, elements: !2061)
!2061 = !{!2062, !2063}
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "BAUD", scope: !2060, file: !1984, line: 604, baseType: !151, size: 13, flags: DIFlagBitField, extraData: i64 0)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "FP", scope: !2060, file: !1984, line: 605, baseType: !151, size: 3, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "USARTFP", scope: !2048, file: !1984, line: 609, baseType: !2065, size: 16)
!2065 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2048, file: !1984, line: 607, size: 16, elements: !2066)
!2066 = !{!2067}
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "BAUD", scope: !2065, file: !1984, line: 608, baseType: !151, size: 16, flags: DIFlagBitField, extraData: i64 0)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2048, file: !1984, line: 610, baseType: !151, size: 16)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "RXPL", scope: !1985, file: !1984, line: 1649, baseType: !2070, size: 8, offset: 112)
!2070 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2071)
!2071 = !DIDerivedType(tag: DW_TAG_typedef, name: "SERCOM_USART_RXPL_Type", file: !1984, line: 653, baseType: !2072)
!2072 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1984, line: 648, size: 8, elements: !2073)
!2073 = !{!2074, !2078}
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2072, file: !1984, line: 651, baseType: !2075, size: 8)
!2075 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2072, file: !1984, line: 649, size: 8, elements: !2076)
!2076 = !{!2077}
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "RXPL", scope: !2075, file: !1984, line: 650, baseType: !240, size: 8, flags: DIFlagBitField, extraData: i64 0)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2072, file: !1984, line: 652, baseType: !240, size: 8)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved1", scope: !1985, file: !1984, line: 1650, baseType: !2080, size: 40, offset: 120)
!2080 = !DICompositeType(tag: DW_TAG_array_type, baseType: !236, size: 40, elements: !1391)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "INTENCLR", scope: !1985, file: !1984, line: 1651, baseType: !2082, size: 8, offset: 160)
!2082 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2083)
!2083 = !DIDerivedType(tag: DW_TAG_typedef, name: "SERCOM_USART_INTENCLR_Type", file: !1984, line: 759, baseType: !2084)
!2084 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1984, line: 747, size: 8, elements: !2085)
!2085 = !{!2086, !2096}
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2084, file: !1984, line: 757, baseType: !2087, size: 8)
!2087 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2084, file: !1984, line: 748, size: 8, elements: !2088)
!2088 = !{!2089, !2090, !2091, !2092, !2093, !2094, !2095}
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "DRE", scope: !2087, file: !1984, line: 749, baseType: !240, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "TXC", scope: !2087, file: !1984, line: 750, baseType: !240, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "RXC", scope: !2087, file: !1984, line: 751, baseType: !240, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "RXS", scope: !2087, file: !1984, line: 752, baseType: !240, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "CTSIC", scope: !2087, file: !1984, line: 753, baseType: !240, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "RXBRK", scope: !2087, file: !1984, line: 754, baseType: !240, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "ERROR", scope: !2087, file: !1984, line: 756, baseType: !240, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2084, file: !1984, line: 758, baseType: !240, size: 8)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved2", scope: !1985, file: !1984, line: 1652, baseType: !1137, size: 8, offset: 168)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "INTENSET", scope: !1985, file: !1984, line: 1653, baseType: !2099, size: 8, offset: 176)
!2099 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2100)
!2100 = !DIDerivedType(tag: DW_TAG_typedef, name: "SERCOM_USART_INTENSET_Type", file: !1984, line: 876, baseType: !2101)
!2101 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1984, line: 864, size: 8, elements: !2102)
!2102 = !{!2103, !2113}
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2101, file: !1984, line: 874, baseType: !2104, size: 8)
!2104 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2101, file: !1984, line: 865, size: 8, elements: !2105)
!2105 = !{!2106, !2107, !2108, !2109, !2110, !2111, !2112}
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "DRE", scope: !2104, file: !1984, line: 866, baseType: !240, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "TXC", scope: !2104, file: !1984, line: 867, baseType: !240, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "RXC", scope: !2104, file: !1984, line: 868, baseType: !240, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "RXS", scope: !2104, file: !1984, line: 869, baseType: !240, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "CTSIC", scope: !2104, file: !1984, line: 870, baseType: !240, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "RXBRK", scope: !2104, file: !1984, line: 871, baseType: !240, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "ERROR", scope: !2104, file: !1984, line: 873, baseType: !240, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2101, file: !1984, line: 875, baseType: !240, size: 8)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved3", scope: !1985, file: !1984, line: 1654, baseType: !1137, size: 8, offset: 184)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "INTFLAG", scope: !1985, file: !1984, line: 1655, baseType: !2116, size: 8, offset: 192)
!2116 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2117)
!2117 = !DIDerivedType(tag: DW_TAG_typedef, name: "SERCOM_USART_INTFLAG_Type", file: !1984, line: 993, baseType: !2118)
!2118 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1984, line: 981, size: 8, elements: !2119)
!2119 = !{!2120, !2130}
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2118, file: !1984, line: 991, baseType: !2121, size: 8)
!2121 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2118, file: !1984, line: 982, size: 8, elements: !2122)
!2122 = !{!2123, !2124, !2125, !2126, !2127, !2128, !2129}
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "DRE", scope: !2121, file: !1984, line: 983, baseType: !238, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "TXC", scope: !2121, file: !1984, line: 984, baseType: !238, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "RXC", scope: !2121, file: !1984, line: 985, baseType: !238, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "RXS", scope: !2121, file: !1984, line: 986, baseType: !238, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "CTSIC", scope: !2121, file: !1984, line: 987, baseType: !238, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "RXBRK", scope: !2121, file: !1984, line: 988, baseType: !238, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "ERROR", scope: !2121, file: !1984, line: 990, baseType: !238, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2118, file: !1984, line: 992, baseType: !240, size: 8)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved4", scope: !1985, file: !1984, line: 1656, baseType: !1137, size: 8, offset: 200)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "STATUS", scope: !1985, file: !1984, line: 1657, baseType: !2133, size: 16, offset: 208)
!2133 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2134)
!2134 = !DIDerivedType(tag: DW_TAG_typedef, name: "SERCOM_USART_STATUS_Type", file: !1984, line: 1144, baseType: !2135)
!2135 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1984, line: 1131, size: 16, elements: !2136)
!2136 = !{!2137, !2148}
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2135, file: !1984, line: 1142, baseType: !2138, size: 16)
!2138 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2135, file: !1984, line: 1132, size: 16, elements: !2139)
!2139 = !{!2140, !2141, !2142, !2143, !2144, !2145, !2146, !2147}
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "PERR", scope: !2138, file: !1984, line: 1133, baseType: !151, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "FERR", scope: !2138, file: !1984, line: 1134, baseType: !151, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "BUFOVF", scope: !2138, file: !1984, line: 1135, baseType: !151, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "CTS", scope: !2138, file: !1984, line: 1136, baseType: !151, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "ISF", scope: !2138, file: !1984, line: 1137, baseType: !151, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "COLL", scope: !2138, file: !1984, line: 1138, baseType: !151, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "TXE", scope: !2138, file: !1984, line: 1139, baseType: !151, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "ITER", scope: !2138, file: !1984, line: 1140, baseType: !151, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2135, file: !1984, line: 1143, baseType: !151, size: 16)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "SYNCBUSY", scope: !1985, file: !1984, line: 1658, baseType: !2150, size: 32, offset: 224)
!2150 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2151)
!2151 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2152)
!2152 = !DIDerivedType(tag: DW_TAG_typedef, name: "SERCOM_USART_SYNCBUSY_Type", file: !1984, line: 1261, baseType: !2153)
!2153 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1984, line: 1251, size: 32, elements: !2154)
!2154 = !{!2155, !2163}
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2153, file: !1984, line: 1259, baseType: !2156, size: 32)
!2156 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2153, file: !1984, line: 1252, size: 32, elements: !2157)
!2157 = !{!2158, !2159, !2160, !2161, !2162}
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "SWRST", scope: !2156, file: !1984, line: 1253, baseType: !137, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "ENABLE", scope: !2156, file: !1984, line: 1254, baseType: !137, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "CTRLB", scope: !2156, file: !1984, line: 1255, baseType: !137, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "RXERRCNT", scope: !2156, file: !1984, line: 1256, baseType: !137, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "LENGTH", scope: !2156, file: !1984, line: 1257, baseType: !137, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2153, file: !1984, line: 1260, baseType: !137, size: 32)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "RXERRCNT", scope: !1985, file: !1984, line: 1659, baseType: !2165, size: 8, offset: 256)
!2165 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2166)
!2166 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2167)
!2167 = !DIDerivedType(tag: DW_TAG_typedef, name: "SERCOM_USART_RXERRCNT_Type", file: !1984, line: 1283, baseType: !2168)
!2168 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1984, line: 1281, size: 8, elements: !2169)
!2169 = !{!2170}
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2168, file: !1984, line: 1282, baseType: !240, size: 8)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved5", scope: !1985, file: !1984, line: 1660, baseType: !1137, size: 8, offset: 264)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "LENGTH", scope: !1985, file: !1984, line: 1661, baseType: !2173, size: 16, offset: 272)
!2173 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2174)
!2174 = !DIDerivedType(tag: DW_TAG_typedef, name: "SERCOM_USART_LENGTH_Type", file: !1984, line: 1343, baseType: !2175)
!2175 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1984, line: 1336, size: 16, elements: !2176)
!2176 = !{!2177, !2182}
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2175, file: !1984, line: 1341, baseType: !2178, size: 16)
!2178 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2175, file: !1984, line: 1337, size: 16, elements: !2179)
!2179 = !{!2180, !2181}
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "LEN", scope: !2178, file: !1984, line: 1338, baseType: !151, size: 8, flags: DIFlagBitField, extraData: i64 0)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "LENEN", scope: !2178, file: !1984, line: 1339, baseType: !151, size: 2, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2175, file: !1984, line: 1342, baseType: !151, size: 16)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved6", scope: !1985, file: !1984, line: 1662, baseType: !2184, size: 32, offset: 288)
!2184 = !DICompositeType(tag: DW_TAG_array_type, baseType: !236, size: 32, elements: !2185)
!2185 = !{!2186}
!2186 = !DISubrange(count: 4)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "DATA", scope: !1985, file: !1984, line: 1663, baseType: !2188, size: 32, offset: 320)
!2188 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2189)
!2189 = !DIDerivedType(tag: DW_TAG_typedef, name: "SERCOM_USART_DATA_Type", file: !1984, line: 1506, baseType: !2190)
!2190 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1984, line: 1501, size: 32, elements: !2191)
!2191 = !{!2192, !2196}
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2190, file: !1984, line: 1504, baseType: !2193, size: 32)
!2193 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2190, file: !1984, line: 1502, size: 32, elements: !2194)
!2194 = !{!2195}
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "DATA", scope: !2193, file: !1984, line: 1503, baseType: !137, size: 32, flags: DIFlagBitField, extraData: i64 0)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2190, file: !1984, line: 1505, baseType: !137, size: 32)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved7", scope: !1985, file: !1984, line: 1664, baseType: !2184, size: 32, offset: 352)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "DBGCTRL", scope: !1985, file: !1984, line: 1665, baseType: !2199, size: 8, offset: 384)
!2199 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2200)
!2200 = !DIDerivedType(tag: DW_TAG_typedef, name: "SERCOM_USART_DBGCTRL_Type", file: !1984, line: 1561, baseType: !2201)
!2201 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1984, line: 1555, size: 8, elements: !2202)
!2202 = !{!2203, !2207}
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2201, file: !1984, line: 1559, baseType: !2204, size: 8)
!2204 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2201, file: !1984, line: 1556, size: 8, elements: !2205)
!2205 = !{!2206}
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "DBGSTOP", scope: !2204, file: !1984, line: 1557, baseType: !240, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2201, file: !1984, line: 1560, baseType: !240, size: 8)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1979, file: !1914, line: 35, baseType: !137, size: 32, offset: 32)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "pads", scope: !1979, file: !1914, line: 36, baseType: !137, size: 32, offset: 64)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "collision_detect", scope: !1979, file: !1914, line: 37, baseType: !731, size: 8, offset: 96)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "mclk", scope: !1979, file: !1914, line: 39, baseType: !2212, size: 32, offset: 128)
!2212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !484, size: 32)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "mclk_mask", scope: !1979, file: !1914, line: 40, baseType: !137, size: 32, offset: 160)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "gclk_core_id", scope: !1979, file: !1914, line: 41, baseType: !151, size: 16, offset: 192)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "irq_config_func", scope: !1979, file: !1914, line: 47, baseType: !1708, size: 32, offset: 224)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1979, file: !1914, line: 56, baseType: !2217, size: 32, offset: 256)
!2217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1953, size: 32)
!2218 = !DIGlobalVariableExpression(var: !2219, expr: !DIExpression())
!2219 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !2220, file: !2418, line: 65, type: !484, isLocal: true, isDefinition: true)
!2220 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2221, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2222, retainedTypes: !2346, globals: !2415, splitDebugInlining: false, nameTableKind: None)
!2221 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/basic/sys_heap")
!2222 = !{!2223}
!2223 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "IRQn", file: !237, line: 91, baseType: !103, size: 32, elements: !2224)
!2224 = !{!2225, !2226, !2227, !2228, !2229, !2230, !2231, !2232, !2233, !2234, !2235, !2236, !2237, !2238, !2239, !2240, !2241, !2242, !2243, !2244, !2245, !2246, !2247, !2248, !2249, !2250, !2251, !2252, !2253, !2254, !2255, !2256, !2257, !2258, !2259, !2260, !2261, !2262, !2263, !2264, !2265, !2266, !2267, !2268, !2269, !2270, !2271, !2272, !2273, !2274, !2275, !2276, !2277, !2278, !2279, !2280, !2281, !2282, !2283, !2284, !2285, !2286, !2287, !2288, !2289, !2290, !2291, !2292, !2293, !2294, !2295, !2296, !2297, !2298, !2299, !2300, !2301, !2302, !2303, !2304, !2305, !2306, !2307, !2308, !2309, !2310, !2311, !2312, !2313, !2314, !2315, !2316, !2317, !2318, !2319, !2320, !2321, !2322, !2323, !2324, !2325, !2326, !2327, !2328, !2329, !2330, !2331, !2332, !2333, !2334, !2335, !2336, !2337, !2338, !2339, !2340, !2341, !2342, !2343, !2344, !2345}
!2225 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!2226 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!2227 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!2228 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!2229 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!2230 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!2231 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!2232 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!2233 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!2234 = !DIEnumerator(name: "PM_IRQn", value: 0)
!2235 = !DIEnumerator(name: "MCLK_IRQn", value: 1)
!2236 = !DIEnumerator(name: "OSCCTRL_0_IRQn", value: 2)
!2237 = !DIEnumerator(name: "OSCCTRL_1_IRQn", value: 3)
!2238 = !DIEnumerator(name: "OSCCTRL_2_IRQn", value: 4)
!2239 = !DIEnumerator(name: "OSCCTRL_3_IRQn", value: 5)
!2240 = !DIEnumerator(name: "OSCCTRL_4_IRQn", value: 6)
!2241 = !DIEnumerator(name: "OSC32KCTRL_IRQn", value: 7)
!2242 = !DIEnumerator(name: "SUPC_0_IRQn", value: 8)
!2243 = !DIEnumerator(name: "SUPC_1_IRQn", value: 9)
!2244 = !DIEnumerator(name: "WDT_IRQn", value: 10)
!2245 = !DIEnumerator(name: "RTC_IRQn", value: 11)
!2246 = !DIEnumerator(name: "EIC_0_IRQn", value: 12)
!2247 = !DIEnumerator(name: "EIC_1_IRQn", value: 13)
!2248 = !DIEnumerator(name: "EIC_2_IRQn", value: 14)
!2249 = !DIEnumerator(name: "EIC_3_IRQn", value: 15)
!2250 = !DIEnumerator(name: "EIC_4_IRQn", value: 16)
!2251 = !DIEnumerator(name: "EIC_5_IRQn", value: 17)
!2252 = !DIEnumerator(name: "EIC_6_IRQn", value: 18)
!2253 = !DIEnumerator(name: "EIC_7_IRQn", value: 19)
!2254 = !DIEnumerator(name: "EIC_8_IRQn", value: 20)
!2255 = !DIEnumerator(name: "EIC_9_IRQn", value: 21)
!2256 = !DIEnumerator(name: "EIC_10_IRQn", value: 22)
!2257 = !DIEnumerator(name: "EIC_11_IRQn", value: 23)
!2258 = !DIEnumerator(name: "EIC_12_IRQn", value: 24)
!2259 = !DIEnumerator(name: "EIC_13_IRQn", value: 25)
!2260 = !DIEnumerator(name: "EIC_14_IRQn", value: 26)
!2261 = !DIEnumerator(name: "EIC_15_IRQn", value: 27)
!2262 = !DIEnumerator(name: "FREQM_IRQn", value: 28)
!2263 = !DIEnumerator(name: "NVMCTRL_0_IRQn", value: 29)
!2264 = !DIEnumerator(name: "NVMCTRL_1_IRQn", value: 30)
!2265 = !DIEnumerator(name: "DMAC_0_IRQn", value: 31)
!2266 = !DIEnumerator(name: "DMAC_1_IRQn", value: 32)
!2267 = !DIEnumerator(name: "DMAC_2_IRQn", value: 33)
!2268 = !DIEnumerator(name: "DMAC_3_IRQn", value: 34)
!2269 = !DIEnumerator(name: "DMAC_4_IRQn", value: 35)
!2270 = !DIEnumerator(name: "EVSYS_0_IRQn", value: 36)
!2271 = !DIEnumerator(name: "EVSYS_1_IRQn", value: 37)
!2272 = !DIEnumerator(name: "EVSYS_2_IRQn", value: 38)
!2273 = !DIEnumerator(name: "EVSYS_3_IRQn", value: 39)
!2274 = !DIEnumerator(name: "EVSYS_4_IRQn", value: 40)
!2275 = !DIEnumerator(name: "PAC_IRQn", value: 41)
!2276 = !DIEnumerator(name: "RAMECC_IRQn", value: 45)
!2277 = !DIEnumerator(name: "SERCOM0_0_IRQn", value: 46)
!2278 = !DIEnumerator(name: "SERCOM0_1_IRQn", value: 47)
!2279 = !DIEnumerator(name: "SERCOM0_2_IRQn", value: 48)
!2280 = !DIEnumerator(name: "SERCOM0_3_IRQn", value: 49)
!2281 = !DIEnumerator(name: "SERCOM1_0_IRQn", value: 50)
!2282 = !DIEnumerator(name: "SERCOM1_1_IRQn", value: 51)
!2283 = !DIEnumerator(name: "SERCOM1_2_IRQn", value: 52)
!2284 = !DIEnumerator(name: "SERCOM1_3_IRQn", value: 53)
!2285 = !DIEnumerator(name: "SERCOM2_0_IRQn", value: 54)
!2286 = !DIEnumerator(name: "SERCOM2_1_IRQn", value: 55)
!2287 = !DIEnumerator(name: "SERCOM2_2_IRQn", value: 56)
!2288 = !DIEnumerator(name: "SERCOM2_3_IRQn", value: 57)
!2289 = !DIEnumerator(name: "SERCOM3_0_IRQn", value: 58)
!2290 = !DIEnumerator(name: "SERCOM3_1_IRQn", value: 59)
!2291 = !DIEnumerator(name: "SERCOM3_2_IRQn", value: 60)
!2292 = !DIEnumerator(name: "SERCOM3_3_IRQn", value: 61)
!2293 = !DIEnumerator(name: "SERCOM4_0_IRQn", value: 62)
!2294 = !DIEnumerator(name: "SERCOM4_1_IRQn", value: 63)
!2295 = !DIEnumerator(name: "SERCOM4_2_IRQn", value: 64)
!2296 = !DIEnumerator(name: "SERCOM4_3_IRQn", value: 65)
!2297 = !DIEnumerator(name: "SERCOM5_0_IRQn", value: 66)
!2298 = !DIEnumerator(name: "SERCOM5_1_IRQn", value: 67)
!2299 = !DIEnumerator(name: "SERCOM5_2_IRQn", value: 68)
!2300 = !DIEnumerator(name: "SERCOM5_3_IRQn", value: 69)
!2301 = !DIEnumerator(name: "USB_0_IRQn", value: 80)
!2302 = !DIEnumerator(name: "USB_1_IRQn", value: 81)
!2303 = !DIEnumerator(name: "USB_2_IRQn", value: 82)
!2304 = !DIEnumerator(name: "USB_3_IRQn", value: 83)
!2305 = !DIEnumerator(name: "TCC0_0_IRQn", value: 85)
!2306 = !DIEnumerator(name: "TCC0_1_IRQn", value: 86)
!2307 = !DIEnumerator(name: "TCC0_2_IRQn", value: 87)
!2308 = !DIEnumerator(name: "TCC0_3_IRQn", value: 88)
!2309 = !DIEnumerator(name: "TCC0_4_IRQn", value: 89)
!2310 = !DIEnumerator(name: "TCC0_5_IRQn", value: 90)
!2311 = !DIEnumerator(name: "TCC0_6_IRQn", value: 91)
!2312 = !DIEnumerator(name: "TCC1_0_IRQn", value: 92)
!2313 = !DIEnumerator(name: "TCC1_1_IRQn", value: 93)
!2314 = !DIEnumerator(name: "TCC1_2_IRQn", value: 94)
!2315 = !DIEnumerator(name: "TCC1_3_IRQn", value: 95)
!2316 = !DIEnumerator(name: "TCC1_4_IRQn", value: 96)
!2317 = !DIEnumerator(name: "TCC2_0_IRQn", value: 97)
!2318 = !DIEnumerator(name: "TCC2_1_IRQn", value: 98)
!2319 = !DIEnumerator(name: "TCC2_2_IRQn", value: 99)
!2320 = !DIEnumerator(name: "TCC2_3_IRQn", value: 100)
!2321 = !DIEnumerator(name: "TC0_IRQn", value: 107)
!2322 = !DIEnumerator(name: "TC1_IRQn", value: 108)
!2323 = !DIEnumerator(name: "TC2_IRQn", value: 109)
!2324 = !DIEnumerator(name: "TC3_IRQn", value: 110)
!2325 = !DIEnumerator(name: "PDEC_0_IRQn", value: 115)
!2326 = !DIEnumerator(name: "PDEC_1_IRQn", value: 116)
!2327 = !DIEnumerator(name: "PDEC_2_IRQn", value: 117)
!2328 = !DIEnumerator(name: "ADC0_0_IRQn", value: 118)
!2329 = !DIEnumerator(name: "ADC0_1_IRQn", value: 119)
!2330 = !DIEnumerator(name: "ADC1_0_IRQn", value: 120)
!2331 = !DIEnumerator(name: "ADC1_1_IRQn", value: 121)
!2332 = !DIEnumerator(name: "AC_IRQn", value: 122)
!2333 = !DIEnumerator(name: "DAC_0_IRQn", value: 123)
!2334 = !DIEnumerator(name: "DAC_1_IRQn", value: 124)
!2335 = !DIEnumerator(name: "DAC_2_IRQn", value: 125)
!2336 = !DIEnumerator(name: "DAC_3_IRQn", value: 126)
!2337 = !DIEnumerator(name: "DAC_4_IRQn", value: 127)
!2338 = !DIEnumerator(name: "PCC_IRQn", value: 129)
!2339 = !DIEnumerator(name: "AES_IRQn", value: 130)
!2340 = !DIEnumerator(name: "TRNG_IRQn", value: 131)
!2341 = !DIEnumerator(name: "ICM_IRQn", value: 132)
!2342 = !DIEnumerator(name: "PUKCC_IRQn", value: 133)
!2343 = !DIEnumerator(name: "QSPI_IRQn", value: 134)
!2344 = !DIEnumerator(name: "SDHC0_IRQn", value: 135)
!2345 = !DIEnumerator(name: "PERIPH_COUNT_IRQn", value: 137)
!2346 = !{!2347, !2349, !1458, !240, !137, !2357, !2385}
!2347 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !2348, line: 46, baseType: !819)
!2348 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2350, size: 32)
!2350 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !891, line: 770, baseType: !2351)
!2351 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !891, line: 764, size: 128, elements: !2352)
!2352 = !{!2353, !2354, !2355, !2356}
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2351, file: !891, line: 766, baseType: !484, size: 32)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2351, file: !891, line: 767, baseType: !484, size: 32, offset: 32)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2351, file: !891, line: 768, baseType: !484, size: 32, offset: 64)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2351, file: !891, line: 769, baseType: !483, size: 32, offset: 96)
!2357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2358, size: 32)
!2358 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !891, line: 426, baseType: !2359)
!2359 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !891, line: 411, size: 28704, elements: !2360)
!2360 = !{!2361, !2363, !2365, !2366, !2367, !2368, !2369, !2370, !2371, !2372, !2376, !2380, !2384}
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2359, file: !891, line: 413, baseType: !2362, size: 256)
!2362 = !DICompositeType(tag: DW_TAG_array_type, baseType: !484, size: 256, elements: !159)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2359, file: !891, line: 414, baseType: !2364, size: 768, offset: 256)
!2364 = !DICompositeType(tag: DW_TAG_array_type, baseType: !137, size: 768, elements: !354)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2359, file: !891, line: 415, baseType: !2362, size: 256, offset: 1024)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2359, file: !891, line: 416, baseType: !2364, size: 768, offset: 1280)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2359, file: !891, line: 417, baseType: !2362, size: 256, offset: 2048)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2359, file: !891, line: 418, baseType: !2364, size: 768, offset: 2304)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2359, file: !891, line: 419, baseType: !2362, size: 256, offset: 3072)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2359, file: !891, line: 420, baseType: !2364, size: 768, offset: 3328)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2359, file: !891, line: 421, baseType: !2362, size: 256, offset: 4096)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2359, file: !891, line: 422, baseType: !2373, size: 1792, offset: 4352)
!2373 = !DICompositeType(tag: DW_TAG_array_type, baseType: !137, size: 1792, elements: !2374)
!2374 = !{!2375}
!2375 = !DISubrange(count: 56)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2359, file: !891, line: 423, baseType: !2377, size: 1920, offset: 6144)
!2377 = !DICompositeType(tag: DW_TAG_array_type, baseType: !239, size: 1920, elements: !2378)
!2378 = !{!2379}
!2379 = !DISubrange(count: 240)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2359, file: !891, line: 424, baseType: !2381, size: 20608, offset: 8064)
!2381 = !DICompositeType(tag: DW_TAG_array_type, baseType: !137, size: 20608, elements: !2382)
!2382 = !{!2383}
!2383 = !DISubrange(count: 644)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2359, file: !891, line: 425, baseType: !484, size: 32, offset: 28672)
!2385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2386, size: 32)
!2386 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !891, line: 468, baseType: !2387)
!2387 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !891, line: 445, size: 1120, elements: !2388)
!2388 = !{!2389, !2390, !2391, !2392, !2393, !2394, !2395, !2397, !2398, !2399, !2400, !2401, !2402, !2403, !2404, !2406, !2407, !2408, !2410, !2412, !2414}
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2387, file: !891, line: 447, baseType: !483, size: 32)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2387, file: !891, line: 448, baseType: !484, size: 32, offset: 32)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2387, file: !891, line: 449, baseType: !484, size: 32, offset: 64)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2387, file: !891, line: 450, baseType: !484, size: 32, offset: 96)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2387, file: !891, line: 451, baseType: !484, size: 32, offset: 128)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2387, file: !891, line: 452, baseType: !484, size: 32, offset: 160)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2387, file: !891, line: 453, baseType: !2396, size: 96, offset: 192)
!2396 = !DICompositeType(tag: DW_TAG_array_type, baseType: !239, size: 96, elements: !242)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2387, file: !891, line: 454, baseType: !484, size: 32, offset: 288)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2387, file: !891, line: 455, baseType: !484, size: 32, offset: 320)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2387, file: !891, line: 456, baseType: !484, size: 32, offset: 352)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2387, file: !891, line: 457, baseType: !484, size: 32, offset: 384)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2387, file: !891, line: 458, baseType: !484, size: 32, offset: 416)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2387, file: !891, line: 459, baseType: !484, size: 32, offset: 448)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2387, file: !891, line: 460, baseType: !484, size: 32, offset: 480)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2387, file: !891, line: 461, baseType: !2405, size: 64, offset: 512)
!2405 = !DICompositeType(tag: DW_TAG_array_type, baseType: !483, size: 64, elements: !564)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2387, file: !891, line: 462, baseType: !483, size: 32, offset: 576)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2387, file: !891, line: 463, baseType: !483, size: 32, offset: 608)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2387, file: !891, line: 464, baseType: !2409, size: 128, offset: 640)
!2409 = !DICompositeType(tag: DW_TAG_array_type, baseType: !483, size: 128, elements: !2185)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2387, file: !891, line: 465, baseType: !2411, size: 160, offset: 768)
!2411 = !DICompositeType(tag: DW_TAG_array_type, baseType: !483, size: 160, elements: !1391)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2387, file: !891, line: 466, baseType: !2413, size: 160, offset: 928)
!2413 = !DICompositeType(tag: DW_TAG_array_type, baseType: !137, size: 160, elements: !1391)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2387, file: !891, line: 467, baseType: !484, size: 32, offset: 1088)
!2415 = !{!2416, !2442, !2445, !2447, !2449, !2218}
!2416 = !DIGlobalVariableExpression(var: !2417, expr: !DIExpression())
!2417 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !2220, file: !2418, line: 285, type: !2419, isLocal: true, isDefinition: true, align: 32)
!2418 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2419 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2420)
!2420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !709, line: 51, size: 64, elements: !2421)
!2421 = !{!2422, !2441}
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2420, file: !709, line: 60, baseType: !2423, size: 32)
!2423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2424, size: 32)
!2424 = !DISubroutineType(types: !2425)
!2425 = !{!103, !2426}
!2426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2427, size: 32)
!2427 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2428)
!2428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !718, line: 378, size: 192, elements: !2429)
!2429 = !{!2430, !2431, !2432, !2433, !2439, !2440}
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2428, file: !718, line: 380, baseType: !721, size: 32)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2428, file: !718, line: 382, baseType: !13, size: 32, offset: 32)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2428, file: !718, line: 384, baseType: !13, size: 32, offset: 64)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2428, file: !718, line: 386, baseType: !2434, size: 32, offset: 96)
!2434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2435, size: 32)
!2435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !718, line: 351, size: 16, elements: !2436)
!2436 = !{!2437, !2438}
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2435, file: !718, line: 359, baseType: !240, size: 8)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2435, file: !718, line: 364, baseType: !731, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2428, file: !718, line: 388, baseType: !102, size: 32, offset: 128)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2428, file: !718, line: 396, baseType: !734, size: 32, offset: 160)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2420, file: !709, line: 65, baseType: !2426, size: 32, offset: 32)
!2442 = !DIGlobalVariableExpression(var: !2443, expr: !DIExpression())
!2443 = distinct !DIGlobalVariable(name: "lock", scope: !2220, file: !2418, line: 34, type: !2444, isLocal: true, isDefinition: true)
!2444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !857, line: 43, elements: !162)
!2445 = !DIGlobalVariableExpression(var: !2446, expr: !DIExpression())
!2446 = distinct !DIGlobalVariable(name: "last_load", scope: !2220, file: !2418, line: 36, type: !137, isLocal: true, isDefinition: true)
!2447 = !DIGlobalVariableExpression(var: !2448, expr: !DIExpression())
!2448 = distinct !DIGlobalVariable(name: "cycle_count", scope: !2220, file: !2418, line: 48, type: !137, isLocal: true, isDefinition: true)
!2449 = !DIGlobalVariableExpression(var: !2450, expr: !DIExpression())
!2450 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !2220, file: !2418, line: 54, type: !137, isLocal: true, isDefinition: true)
!2451 = !DIGlobalVariableExpression(var: !2452, expr: !DIExpression())
!2452 = distinct !DIGlobalVariable(name: "sam_port_addrs", scope: !2453, file: !2631, line: 16, type: !2632, isLocal: true, isDefinition: true)
!2453 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2454, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2455, globals: !2630, splitDebugInlining: false, nameTableKind: None)
!2454 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_sam0.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/basic/sys_heap")
!2455 = !{!2456}
!2456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2457, size: 32)
!2457 = !DIDerivedType(tag: DW_TAG_typedef, name: "PortGroup", file: !2458, line: 402, baseType: !2459)
!2458 = !DIFile(filename: "modules/hal/atmel/asf/sam0/include/samd51/component/port.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2459 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2458, line: 386, size: 1024, elements: !2460)
!2460 = !{!2461, !2471, !2481, !2491, !2501, !2511, !2521, !2531, !2541, !2552, !2562, !2580, !2601, !2613, !2628}
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "DIR", scope: !2459, file: !2458, line: 387, baseType: !2462, size: 32)
!2462 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2463)
!2463 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_DIR_Type", file: !2458, line: 49, baseType: !2464)
!2464 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2458, line: 44, size: 32, elements: !2465)
!2465 = !{!2466, !2470}
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2464, file: !2458, line: 47, baseType: !2467, size: 32)
!2467 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2464, file: !2458, line: 45, size: 32, elements: !2468)
!2468 = !{!2469}
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "DIR", scope: !2467, file: !2458, line: 46, baseType: !137, size: 32, flags: DIFlagBitField, extraData: i64 0)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2464, file: !2458, line: 48, baseType: !137, size: 32)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "DIRCLR", scope: !2459, file: !2458, line: 388, baseType: !2472, size: 32, offset: 32)
!2472 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2473)
!2473 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_DIRCLR_Type", file: !2458, line: 67, baseType: !2474)
!2474 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2458, line: 62, size: 32, elements: !2475)
!2475 = !{!2476, !2480}
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2474, file: !2458, line: 65, baseType: !2477, size: 32)
!2477 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2474, file: !2458, line: 63, size: 32, elements: !2478)
!2478 = !{!2479}
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "DIRCLR", scope: !2477, file: !2458, line: 64, baseType: !137, size: 32, flags: DIFlagBitField, extraData: i64 0)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2474, file: !2458, line: 66, baseType: !137, size: 32)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "DIRSET", scope: !2459, file: !2458, line: 389, baseType: !2482, size: 32, offset: 64)
!2482 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2483)
!2483 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_DIRSET_Type", file: !2458, line: 85, baseType: !2484)
!2484 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2458, line: 80, size: 32, elements: !2485)
!2485 = !{!2486, !2490}
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2484, file: !2458, line: 83, baseType: !2487, size: 32)
!2487 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2484, file: !2458, line: 81, size: 32, elements: !2488)
!2488 = !{!2489}
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "DIRSET", scope: !2487, file: !2458, line: 82, baseType: !137, size: 32, flags: DIFlagBitField, extraData: i64 0)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2484, file: !2458, line: 84, baseType: !137, size: 32)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "DIRTGL", scope: !2459, file: !2458, line: 390, baseType: !2492, size: 32, offset: 96)
!2492 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2493)
!2493 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_DIRTGL_Type", file: !2458, line: 103, baseType: !2494)
!2494 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2458, line: 98, size: 32, elements: !2495)
!2495 = !{!2496, !2500}
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2494, file: !2458, line: 101, baseType: !2497, size: 32)
!2497 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2494, file: !2458, line: 99, size: 32, elements: !2498)
!2498 = !{!2499}
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "DIRTGL", scope: !2497, file: !2458, line: 100, baseType: !137, size: 32, flags: DIFlagBitField, extraData: i64 0)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2494, file: !2458, line: 102, baseType: !137, size: 32)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "OUT", scope: !2459, file: !2458, line: 391, baseType: !2502, size: 32, offset: 128)
!2502 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2503)
!2503 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_OUT_Type", file: !2458, line: 121, baseType: !2504)
!2504 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2458, line: 116, size: 32, elements: !2505)
!2505 = !{!2506, !2510}
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2504, file: !2458, line: 119, baseType: !2507, size: 32)
!2507 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2504, file: !2458, line: 117, size: 32, elements: !2508)
!2508 = !{!2509}
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "OUT", scope: !2507, file: !2458, line: 118, baseType: !137, size: 32, flags: DIFlagBitField, extraData: i64 0)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2504, file: !2458, line: 120, baseType: !137, size: 32)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "OUTCLR", scope: !2459, file: !2458, line: 392, baseType: !2512, size: 32, offset: 160)
!2512 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2513)
!2513 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_OUTCLR_Type", file: !2458, line: 139, baseType: !2514)
!2514 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2458, line: 134, size: 32, elements: !2515)
!2515 = !{!2516, !2520}
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2514, file: !2458, line: 137, baseType: !2517, size: 32)
!2517 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2514, file: !2458, line: 135, size: 32, elements: !2518)
!2518 = !{!2519}
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "OUTCLR", scope: !2517, file: !2458, line: 136, baseType: !137, size: 32, flags: DIFlagBitField, extraData: i64 0)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2514, file: !2458, line: 138, baseType: !137, size: 32)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "OUTSET", scope: !2459, file: !2458, line: 393, baseType: !2522, size: 32, offset: 192)
!2522 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2523)
!2523 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_OUTSET_Type", file: !2458, line: 157, baseType: !2524)
!2524 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2458, line: 152, size: 32, elements: !2525)
!2525 = !{!2526, !2530}
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2524, file: !2458, line: 155, baseType: !2527, size: 32)
!2527 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2524, file: !2458, line: 153, size: 32, elements: !2528)
!2528 = !{!2529}
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "OUTSET", scope: !2527, file: !2458, line: 154, baseType: !137, size: 32, flags: DIFlagBitField, extraData: i64 0)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2524, file: !2458, line: 156, baseType: !137, size: 32)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "OUTTGL", scope: !2459, file: !2458, line: 394, baseType: !2532, size: 32, offset: 224)
!2532 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2533)
!2533 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_OUTTGL_Type", file: !2458, line: 175, baseType: !2534)
!2534 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2458, line: 170, size: 32, elements: !2535)
!2535 = !{!2536, !2540}
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2534, file: !2458, line: 173, baseType: !2537, size: 32)
!2537 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2534, file: !2458, line: 171, size: 32, elements: !2538)
!2538 = !{!2539}
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "OUTTGL", scope: !2537, file: !2458, line: 172, baseType: !137, size: 32, flags: DIFlagBitField, extraData: i64 0)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2534, file: !2458, line: 174, baseType: !137, size: 32)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "IN", scope: !2459, file: !2458, line: 395, baseType: !2542, size: 32, offset: 256)
!2542 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2543)
!2543 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2544)
!2544 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_IN_Type", file: !2458, line: 193, baseType: !2545)
!2545 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2458, line: 188, size: 32, elements: !2546)
!2546 = !{!2547, !2551}
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2545, file: !2458, line: 191, baseType: !2548, size: 32)
!2548 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2545, file: !2458, line: 189, size: 32, elements: !2549)
!2549 = !{!2550}
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "IN", scope: !2548, file: !2458, line: 190, baseType: !137, size: 32, flags: DIFlagBitField, extraData: i64 0)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2545, file: !2458, line: 192, baseType: !137, size: 32)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2459, file: !2458, line: 396, baseType: !2553, size: 32, offset: 288)
!2553 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2554)
!2554 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_CTRL_Type", file: !2458, line: 211, baseType: !2555)
!2555 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2458, line: 206, size: 32, elements: !2556)
!2556 = !{!2557, !2561}
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2555, file: !2458, line: 209, baseType: !2558, size: 32)
!2558 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2555, file: !2458, line: 207, size: 32, elements: !2559)
!2559 = !{!2560}
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLING", scope: !2558, file: !2458, line: 208, baseType: !137, size: 32, flags: DIFlagBitField, extraData: i64 0)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2555, file: !2458, line: 210, baseType: !137, size: 32)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "WRCONFIG", scope: !2459, file: !2458, line: 397, baseType: !2563, size: 32, offset: 320)
!2563 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2564)
!2564 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_WRCONFIG_Type", file: !2458, line: 240, baseType: !2565)
!2565 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2458, line: 224, size: 32, elements: !2566)
!2566 = !{!2567, !2579}
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2565, file: !2458, line: 238, baseType: !2568, size: 32)
!2568 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2565, file: !2458, line: 225, size: 32, elements: !2569)
!2569 = !{!2570, !2571, !2572, !2573, !2574, !2575, !2576, !2577, !2578}
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "PINMASK", scope: !2568, file: !2458, line: 226, baseType: !137, size: 16, flags: DIFlagBitField, extraData: i64 0)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "PMUXEN", scope: !2568, file: !2458, line: 227, baseType: !137, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "INEN", scope: !2568, file: !2458, line: 228, baseType: !137, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "PULLEN", scope: !2568, file: !2458, line: 229, baseType: !137, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "DRVSTR", scope: !2568, file: !2458, line: 231, baseType: !137, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "PMUX", scope: !2568, file: !2458, line: 233, baseType: !137, size: 4, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "WRPMUX", scope: !2568, file: !2458, line: 234, baseType: !137, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "WRPINCFG", scope: !2568, file: !2458, line: 236, baseType: !137, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "HWSEL", scope: !2568, file: !2458, line: 237, baseType: !137, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2565, file: !2458, line: 239, baseType: !137, size: 32)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "EVCTRL", scope: !2459, file: !2458, line: 398, baseType: !2581, size: 32, offset: 352)
!2581 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2582)
!2582 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_EVCTRL_Type", file: !2458, line: 286, baseType: !2583)
!2583 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2458, line: 270, size: 32, elements: !2584)
!2584 = !{!2585, !2600}
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2583, file: !2458, line: 284, baseType: !2586, size: 32)
!2586 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2583, file: !2458, line: 271, size: 32, elements: !2587)
!2587 = !{!2588, !2589, !2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599}
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "PID0", scope: !2586, file: !2458, line: 272, baseType: !137, size: 5, flags: DIFlagBitField, extraData: i64 0)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "EVACT0", scope: !2586, file: !2458, line: 273, baseType: !137, size: 2, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "PORTEI0", scope: !2586, file: !2458, line: 274, baseType: !137, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "PID1", scope: !2586, file: !2458, line: 275, baseType: !137, size: 5, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "EVACT1", scope: !2586, file: !2458, line: 276, baseType: !137, size: 2, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "PORTEI1", scope: !2586, file: !2458, line: 277, baseType: !137, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "PID2", scope: !2586, file: !2458, line: 278, baseType: !137, size: 5, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "EVACT2", scope: !2586, file: !2458, line: 279, baseType: !137, size: 2, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "PORTEI2", scope: !2586, file: !2458, line: 280, baseType: !137, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "PID3", scope: !2586, file: !2458, line: 281, baseType: !137, size: 5, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "EVACT3", scope: !2586, file: !2458, line: 282, baseType: !137, size: 2, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "PORTEI3", scope: !2586, file: !2458, line: 283, baseType: !137, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2583, file: !2458, line: 285, baseType: !137, size: 32)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "PMUX", scope: !2459, file: !2458, line: 399, baseType: !2602, size: 128, offset: 384)
!2602 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2603, size: 128, elements: !1439)
!2603 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2604)
!2604 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_PMUX_Type", file: !2458, line: 342, baseType: !2605)
!2605 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2458, line: 336, size: 8, elements: !2606)
!2606 = !{!2607, !2612}
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2605, file: !2458, line: 340, baseType: !2608, size: 8)
!2608 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2605, file: !2458, line: 337, size: 8, elements: !2609)
!2609 = !{!2610, !2611}
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "PMUXE", scope: !2608, file: !2458, line: 338, baseType: !240, size: 4, flags: DIFlagBitField, extraData: i64 0)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "PMUXO", scope: !2608, file: !2458, line: 339, baseType: !240, size: 4, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2605, file: !2458, line: 341, baseType: !240, size: 8)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "PINCFG", scope: !2459, file: !2458, line: 400, baseType: !2614, size: 256, offset: 512)
!2614 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2615, size: 256, elements: !2627)
!2615 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2616)
!2616 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_PINCFG_Type", file: !2458, line: 368, baseType: !2617)
!2617 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2458, line: 358, size: 8, elements: !2618)
!2618 = !{!2619, !2626}
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2617, file: !2458, line: 366, baseType: !2620, size: 8)
!2620 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2617, file: !2458, line: 359, size: 8, elements: !2621)
!2621 = !{!2622, !2623, !2624, !2625}
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "PMUXEN", scope: !2620, file: !2458, line: 360, baseType: !240, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "INEN", scope: !2620, file: !2458, line: 361, baseType: !240, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "PULLEN", scope: !2620, file: !2458, line: 362, baseType: !240, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "DRVSTR", scope: !2620, file: !2458, line: 364, baseType: !240, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2617, file: !2458, line: 367, baseType: !240, size: 8)
!2627 = !{!1449}
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved1", scope: !2459, file: !2458, line: 401, baseType: !2629, size: 256, offset: 768)
!2629 = !DICompositeType(tag: DW_TAG_array_type, baseType: !236, size: 256, elements: !2627)
!2630 = !{!2451}
!2631 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_sam0.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2632 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2633, size: 128, elements: !2185)
!2633 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !137)
!2634 = !DIGlobalVariableExpression(var: !2635, expr: !DIExpression())
!2635 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !2636, file: !2639, line: 23, type: !1567, isLocal: false, isDefinition: true)
!2636 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2637, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !2638, splitDebugInlining: false, nameTableKind: None)
!2637 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/basic/sys_heap")
!2638 = !{!2634}
!2639 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2640 = !DIGlobalVariableExpression(var: !2641, expr: !DIExpression())
!2641 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !2642, file: !2646, line: 86, type: !2896, isLocal: false, isDefinition: true, align: 64)
!2642 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2643, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2644, retainedTypes: !2653, globals: !2727, splitDebugInlining: false, nameTableKind: None)
!2643 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/basic/sys_heap")
!2644 = !{!2645, !30, !2223}
!2645 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !2646, line: 63, baseType: !32, size: 32, elements: !2647)
!2646 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2647 = !{!2648, !2649, !2650, !2651, !2652}
!2648 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!2649 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!2650 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!2651 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!2652 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!2653 = !{!120, !102, !103, !2654, !2684, !137, !2685, !1458, !240, !2710}
!2654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2655, size: 32)
!2655 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2656)
!2656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !2657, line: 51, size: 64, elements: !2658)
!2657 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2658 = !{!2659, !2679}
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !2656, file: !2657, line: 52, baseType: !2660, size: 32)
!2660 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !2657, line: 38, baseType: !2661)
!2661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2662, size: 32)
!2662 = !DISubroutineType(types: !2663)
!2663 = !{!103, !2664, !1566, !151}
!2664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2665, size: 32)
!2665 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2666)
!2666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !718, line: 378, size: 192, elements: !2667)
!2667 = !{!2668, !2669, !2670, !2671, !2677, !2678}
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2666, file: !718, line: 380, baseType: !721, size: 32)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2666, file: !718, line: 382, baseType: !13, size: 32, offset: 32)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2666, file: !718, line: 384, baseType: !13, size: 32, offset: 64)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2666, file: !718, line: 386, baseType: !2672, size: 32, offset: 96)
!2672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2673, size: 32)
!2673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !718, line: 351, size: 16, elements: !2674)
!2674 = !{!2675, !2676}
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2673, file: !718, line: 359, baseType: !240, size: 8)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2673, file: !718, line: 364, baseType: !731, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2666, file: !718, line: 388, baseType: !102, size: 32, offset: 128)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2666, file: !718, line: 396, baseType: !734, size: 32, offset: 160)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !2656, file: !2657, line: 53, baseType: !2680, size: 32, offset: 32)
!2680 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !2657, line: 47, baseType: !2681)
!2681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2682, size: 32)
!2682 = !DISubroutineType(types: !2683)
!2683 = !{!103, !2664, !1566, !151, !137}
!2684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !109, size: 32)
!2685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2686, size: 32)
!2686 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !891, line: 468, baseType: !2687)
!2687 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !891, line: 445, size: 1120, elements: !2688)
!2688 = !{!2689, !2690, !2691, !2692, !2693, !2694, !2695, !2696, !2697, !2698, !2699, !2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707, !2708, !2709}
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2687, file: !891, line: 447, baseType: !483, size: 32)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2687, file: !891, line: 448, baseType: !484, size: 32, offset: 32)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2687, file: !891, line: 449, baseType: !484, size: 32, offset: 64)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2687, file: !891, line: 450, baseType: !484, size: 32, offset: 96)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2687, file: !891, line: 451, baseType: !484, size: 32, offset: 128)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2687, file: !891, line: 452, baseType: !484, size: 32, offset: 160)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2687, file: !891, line: 453, baseType: !2396, size: 96, offset: 192)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2687, file: !891, line: 454, baseType: !484, size: 32, offset: 288)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2687, file: !891, line: 455, baseType: !484, size: 32, offset: 320)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2687, file: !891, line: 456, baseType: !484, size: 32, offset: 352)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2687, file: !891, line: 457, baseType: !484, size: 32, offset: 384)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2687, file: !891, line: 458, baseType: !484, size: 32, offset: 416)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2687, file: !891, line: 459, baseType: !484, size: 32, offset: 448)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2687, file: !891, line: 460, baseType: !484, size: 32, offset: 480)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2687, file: !891, line: 461, baseType: !2405, size: 64, offset: 512)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2687, file: !891, line: 462, baseType: !483, size: 32, offset: 576)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2687, file: !891, line: 463, baseType: !483, size: 32, offset: 608)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2687, file: !891, line: 464, baseType: !2409, size: 128, offset: 640)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2687, file: !891, line: 465, baseType: !2411, size: 160, offset: 768)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2687, file: !891, line: 466, baseType: !2413, size: 160, offset: 928)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2687, file: !891, line: 467, baseType: !484, size: 32, offset: 1088)
!2710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2711, size: 32)
!2711 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !891, line: 426, baseType: !2712)
!2712 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !891, line: 411, size: 28704, elements: !2713)
!2713 = !{!2714, !2715, !2716, !2717, !2718, !2719, !2720, !2721, !2722, !2723, !2724, !2725, !2726}
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2712, file: !891, line: 413, baseType: !2362, size: 256)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2712, file: !891, line: 414, baseType: !2364, size: 768, offset: 256)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2712, file: !891, line: 415, baseType: !2362, size: 256, offset: 1024)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2712, file: !891, line: 416, baseType: !2364, size: 768, offset: 1280)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2712, file: !891, line: 417, baseType: !2362, size: 256, offset: 2048)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2712, file: !891, line: 418, baseType: !2364, size: 768, offset: 2304)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2712, file: !891, line: 419, baseType: !2362, size: 256, offset: 3072)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2712, file: !891, line: 420, baseType: !2364, size: 768, offset: 3328)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2712, file: !891, line: 421, baseType: !2362, size: 256, offset: 4096)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2712, file: !891, line: 422, baseType: !2373, size: 1792, offset: 4352)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2712, file: !891, line: 423, baseType: !2377, size: 1920, offset: 6144)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2712, file: !891, line: 424, baseType: !2381, size: 20608, offset: 8064)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2712, file: !891, line: 425, baseType: !484, size: 32, offset: 28672)
!2727 = !{!2728, !2850, !2859, !2861, !2640, !2864, !2866, !2871}
!2728 = !DIGlobalVariableExpression(var: !2729, expr: !DIExpression())
!2729 = distinct !DIGlobalVariable(name: "_kernel", scope: !2642, file: !2646, line: 40, type: !2730, isLocal: false, isDefinition: true)
!2730 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !788, line: 158, size: 288, elements: !2731)
!2731 = !{!2732, !2845}
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2730, file: !788, line: 159, baseType: !2733, size: 192)
!2733 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2734, size: 192, elements: !882)
!2734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !788, line: 100, size: 192, elements: !2735)
!2735 = !{!2736, !2737, !2738, !2839, !2840, !2841, !2842}
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2734, file: !788, line: 102, baseType: !137, size: 32)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2734, file: !788, line: 105, baseType: !2684, size: 32, offset: 32)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2734, file: !788, line: 108, baseType: !2739, size: 32, offset: 64)
!2739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2740, size: 32)
!2740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !754, line: 245, size: 1024, elements: !2741)
!2741 = !{!2742, !2800, !2812, !2813, !2814, !2815, !2821, !2834}
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2740, file: !754, line: 247, baseType: !2743, size: 384)
!2743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !754, line: 57, size: 384, elements: !2744)
!2744 = !{!2745, !2769, !2776, !2777, !2778, !2787, !2788, !2789}
!2745 = !DIDerivedType(tag: DW_TAG_member, scope: !2743, file: !754, line: 60, baseType: !2746, size: 64)
!2746 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2743, file: !754, line: 60, size: 64, elements: !2747)
!2747 = !{!2748, !2763}
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2746, file: !754, line: 61, baseType: !2749, size: 64)
!2749 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !764, line: 49, baseType: !2750)
!2750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !764, line: 37, size: 64, elements: !2751)
!2751 = !{!2752, !2758}
!2752 = !DIDerivedType(tag: DW_TAG_member, scope: !2750, file: !764, line: 38, baseType: !2753, size: 32)
!2753 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2750, file: !764, line: 38, size: 32, elements: !2754)
!2754 = !{!2755, !2757}
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2753, file: !764, line: 39, baseType: !2756, size: 32)
!2756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2750, size: 32)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2753, file: !764, line: 40, baseType: !2756, size: 32)
!2758 = !DIDerivedType(tag: DW_TAG_member, scope: !2750, file: !764, line: 42, baseType: !2759, size: 32, offset: 32)
!2759 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2750, file: !764, line: 42, size: 32, elements: !2760)
!2760 = !{!2761, !2762}
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2759, file: !764, line: 43, baseType: !2756, size: 32)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2759, file: !764, line: 44, baseType: !2756, size: 32)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2746, file: !754, line: 62, baseType: !2764, size: 64)
!2764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !780, line: 49, size: 64, elements: !2765)
!2765 = !{!2766}
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2764, file: !780, line: 50, baseType: !2767, size: 64)
!2767 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2768, size: 64, elements: !564)
!2768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2764, size: 32)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2743, file: !754, line: 68, baseType: !2770, size: 32, offset: 64)
!2770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2771, size: 32)
!2771 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !788, line: 233, baseType: !2772)
!2772 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !788, line: 231, size: 64, elements: !2773)
!2773 = !{!2774}
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2772, file: !788, line: 232, baseType: !2775, size: 64)
!2775 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !764, line: 48, baseType: !2750)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2743, file: !754, line: 71, baseType: !240, size: 8, offset: 96)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2743, file: !754, line: 74, baseType: !240, size: 8, offset: 104)
!2778 = !DIDerivedType(tag: DW_TAG_member, scope: !2743, file: !754, line: 90, baseType: !2779, size: 16, offset: 112)
!2779 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2743, file: !754, line: 90, size: 16, elements: !2780)
!2780 = !{!2781, !2786}
!2781 = !DIDerivedType(tag: DW_TAG_member, scope: !2779, file: !754, line: 91, baseType: !2782, size: 16)
!2782 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2779, file: !754, line: 91, size: 16, elements: !2783)
!2783 = !{!2784, !2785}
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2782, file: !754, line: 96, baseType: !802, size: 8)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2782, file: !754, line: 97, baseType: !240, size: 8, offset: 8)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2779, file: !754, line: 100, baseType: !151, size: 16)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2743, file: !754, line: 107, baseType: !137, size: 32, offset: 128)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2743, file: !754, line: 127, baseType: !102, size: 32, offset: 160)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2743, file: !754, line: 131, baseType: !2790, size: 192, offset: 192)
!2790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !788, line: 244, size: 192, elements: !2791)
!2791 = !{!2792, !2793, !2799}
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2790, file: !788, line: 245, baseType: !2749, size: 64)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2790, file: !788, line: 246, baseType: !2794, size: 32, offset: 64)
!2794 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !788, line: 242, baseType: !2795)
!2795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2796, size: 32)
!2796 = !DISubroutineType(types: !2797)
!2797 = !{null, !2798}
!2798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2790, size: 32)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2790, file: !788, line: 249, baseType: !819, size: 64, offset: 128)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2740, file: !754, line: 250, baseType: !2801, size: 288, offset: 384)
!2801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !823, line: 25, size: 288, elements: !2802)
!2802 = !{!2803, !2804, !2805, !2806, !2807, !2808, !2809, !2810, !2811}
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2801, file: !823, line: 26, baseType: !137, size: 32)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2801, file: !823, line: 27, baseType: !137, size: 32, offset: 32)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2801, file: !823, line: 28, baseType: !137, size: 32, offset: 64)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2801, file: !823, line: 29, baseType: !137, size: 32, offset: 96)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2801, file: !823, line: 30, baseType: !137, size: 32, offset: 128)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2801, file: !823, line: 31, baseType: !137, size: 32, offset: 160)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2801, file: !823, line: 32, baseType: !137, size: 32, offset: 192)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2801, file: !823, line: 33, baseType: !137, size: 32, offset: 224)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2801, file: !823, line: 34, baseType: !137, size: 32, offset: 256)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2740, file: !754, line: 253, baseType: !102, size: 32, offset: 672)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2740, file: !754, line: 256, baseType: !2771, size: 64, offset: 704)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2740, file: !754, line: 294, baseType: !103, size: 32, offset: 768)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2740, file: !754, line: 300, baseType: !2816, size: 96, offset: 800)
!2816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !754, line: 149, size: 96, elements: !2817)
!2817 = !{!2818, !2819, !2820}
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2816, file: !754, line: 153, baseType: !22, size: 32)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2816, file: !754, line: 162, baseType: !120, size: 32, offset: 32)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2816, file: !754, line: 168, baseType: !120, size: 32, offset: 64)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2740, file: !754, line: 325, baseType: !2822, size: 32, offset: 896)
!2822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2823, size: 32)
!2823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !846, line: 5073, size: 160, elements: !2824)
!2824 = !{!2825, !2831, !2832}
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2823, file: !846, line: 5074, baseType: !2826, size: 96)
!2826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !2827)
!2827 = !{!2828, !2829, !2830}
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2826, file: !113, line: 57, baseType: !116, size: 32)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2826, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2826, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2823, file: !846, line: 5075, baseType: !2771, size: 64, offset: 96)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2823, file: !846, line: 5076, baseType: !2833, offset: 160)
!2833 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !857, line: 43, elements: !162)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2740, file: !754, line: 343, baseType: !2835, size: 64, offset: 928)
!2835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !823, line: 60, size: 64, elements: !2836)
!2836 = !{!2837, !2838}
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2835, file: !823, line: 63, baseType: !137, size: 32)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2835, file: !823, line: 66, baseType: !137, size: 32, offset: 32)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2734, file: !788, line: 111, baseType: !2739, size: 32, offset: 96)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2734, file: !788, line: 124, baseType: !103, size: 32, offset: 128)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2734, file: !788, line: 127, baseType: !240, size: 8, offset: 160)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2734, file: !788, line: 153, baseType: !2843, offset: 168)
!2843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2844, line: 33, elements: !162)
!2844 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2730, file: !788, line: 170, baseType: !2846, size: 96, offset: 192)
!2846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !788, line: 83, size: 96, elements: !2847)
!2847 = !{!2848, !2849}
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2846, file: !788, line: 86, baseType: !2739, size: 32)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2846, file: !788, line: 90, baseType: !2775, size: 64, offset: 32)
!2850 = !DIGlobalVariableExpression(var: !2851, expr: !DIExpression())
!2851 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !2642, file: !2646, line: 43, type: !2852, isLocal: false, isDefinition: true, align: 64)
!2852 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2853, size: 8192, elements: !2857)
!2853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2854, line: 47, size: 8, elements: !2855)
!2854 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2855 = !{!2856}
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2853, file: !2854, line: 48, baseType: !109, size: 8)
!2857 = !{!2858}
!2858 = !DISubrange(count: 1024)
!2859 = !DIGlobalVariableExpression(var: !2860, expr: !DIExpression())
!2860 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !2642, file: !2646, line: 44, type: !2740, isLocal: false, isDefinition: true)
!2861 = !DIGlobalVariableExpression(var: !2862, expr: !DIExpression())
!2862 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !2642, file: !2646, line: 48, type: !2863, isLocal: false, isDefinition: true)
!2863 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2740, size: 1024, elements: !882)
!2864 = !DIGlobalVariableExpression(var: !2865, expr: !DIExpression())
!2865 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !2642, file: !2646, line: 217, type: !731, isLocal: false, isDefinition: true)
!2866 = !DIGlobalVariableExpression(var: !2867, expr: !DIExpression())
!2867 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !2642, file: !2646, line: 50, type: !2868, isLocal: true, isDefinition: true, align: 64)
!2868 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2853, size: 2560, elements: !2869)
!2869 = !{!883, !2870}
!2870 = !DISubrange(count: 320)
!2871 = !DIGlobalVariableExpression(var: !2872, expr: !DIExpression())
!2872 = distinct !DIGlobalVariable(name: "levels", scope: !2873, file: !2646, line: 232, type: !2893, isLocal: true, isDefinition: true)
!2873 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !2646, file: !2646, line: 230, type: !2874, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2642, retainedNodes: !2876)
!2874 = !DISubroutineType(types: !2875)
!2875 = !{null, !2645}
!2876 = !{!2877, !2878, !2888, !2892}
!2877 = !DILocalVariable(name: "level", arg: 1, scope: !2873, file: !2646, line: 230, type: !2645)
!2878 = !DILocalVariable(name: "entry", scope: !2873, file: !2646, line: 244, type: !2879)
!2879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2880, size: 32)
!2880 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2881)
!2881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !709, line: 51, size: 64, elements: !2882)
!2882 = !{!2883, !2887}
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2881, file: !709, line: 60, baseType: !2884, size: 32)
!2884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2885, size: 32)
!2885 = !DISubroutineType(types: !2886)
!2886 = !{!103, !2664}
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2881, file: !709, line: 65, baseType: !2664, size: 32, offset: 32)
!2888 = !DILocalVariable(name: "dev", scope: !2889, file: !2646, line: 247, type: !2664)
!2889 = distinct !DILexicalBlock(scope: !2890, file: !2646, line: 246, column: 64)
!2890 = distinct !DILexicalBlock(scope: !2891, file: !2646, line: 246, column: 2)
!2891 = distinct !DILexicalBlock(scope: !2873, file: !2646, line: 246, column: 2)
!2892 = !DILocalVariable(name: "rc", scope: !2889, file: !2646, line: 248, type: !103)
!2893 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2879, size: 192, elements: !2894)
!2894 = !{!2895}
!2895 = !DISubrange(count: 6)
!2896 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2853, size: 16384, elements: !2897)
!2897 = !{!883, !2898}
!2898 = !DISubrange(count: 2048)
!2899 = !DIGlobalVariableExpression(var: !2900, expr: !DIExpression())
!2900 = distinct !DIGlobalVariable(name: "states_str", scope: !2901, file: !2902, line: 276, type: !3024, isLocal: true, isDefinition: true)
!2901 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2902, file: !2902, line: 271, type: !2903, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !3015)
!2902 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2903 = !DISubroutineType(types: !2904)
!2904 = !{!721, !2905, !2684, !120}
!2905 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !754, line: 347, baseType: !2906)
!2906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2907, size: 32)
!2907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !754, line: 245, size: 1024, elements: !2908)
!2908 = !{!2909, !2967, !2979, !2980, !2981, !2982, !2988, !3001}
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2907, file: !754, line: 247, baseType: !2910, size: 384)
!2910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !754, line: 57, size: 384, elements: !2911)
!2911 = !{!2912, !2936, !2943, !2944, !2945, !2954, !2955, !2956}
!2912 = !DIDerivedType(tag: DW_TAG_member, scope: !2910, file: !754, line: 60, baseType: !2913, size: 64)
!2913 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2910, file: !754, line: 60, size: 64, elements: !2914)
!2914 = !{!2915, !2930}
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2913, file: !754, line: 61, baseType: !2916, size: 64)
!2916 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !764, line: 49, baseType: !2917)
!2917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !764, line: 37, size: 64, elements: !2918)
!2918 = !{!2919, !2925}
!2919 = !DIDerivedType(tag: DW_TAG_member, scope: !2917, file: !764, line: 38, baseType: !2920, size: 32)
!2920 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2917, file: !764, line: 38, size: 32, elements: !2921)
!2921 = !{!2922, !2924}
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2920, file: !764, line: 39, baseType: !2923, size: 32)
!2923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2917, size: 32)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2920, file: !764, line: 40, baseType: !2923, size: 32)
!2925 = !DIDerivedType(tag: DW_TAG_member, scope: !2917, file: !764, line: 42, baseType: !2926, size: 32, offset: 32)
!2926 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2917, file: !764, line: 42, size: 32, elements: !2927)
!2927 = !{!2928, !2929}
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2926, file: !764, line: 43, baseType: !2923, size: 32)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2926, file: !764, line: 44, baseType: !2923, size: 32)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2913, file: !754, line: 62, baseType: !2931, size: 64)
!2931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !780, line: 49, size: 64, elements: !2932)
!2932 = !{!2933}
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2931, file: !780, line: 50, baseType: !2934, size: 64)
!2934 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2935, size: 64, elements: !564)
!2935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2931, size: 32)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2910, file: !754, line: 68, baseType: !2937, size: 32, offset: 64)
!2937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2938, size: 32)
!2938 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !788, line: 233, baseType: !2939)
!2939 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !788, line: 231, size: 64, elements: !2940)
!2940 = !{!2941}
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2939, file: !788, line: 232, baseType: !2942, size: 64)
!2942 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !764, line: 48, baseType: !2917)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2910, file: !754, line: 71, baseType: !240, size: 8, offset: 96)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2910, file: !754, line: 74, baseType: !240, size: 8, offset: 104)
!2945 = !DIDerivedType(tag: DW_TAG_member, scope: !2910, file: !754, line: 90, baseType: !2946, size: 16, offset: 112)
!2946 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2910, file: !754, line: 90, size: 16, elements: !2947)
!2947 = !{!2948, !2953}
!2948 = !DIDerivedType(tag: DW_TAG_member, scope: !2946, file: !754, line: 91, baseType: !2949, size: 16)
!2949 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2946, file: !754, line: 91, size: 16, elements: !2950)
!2950 = !{!2951, !2952}
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2949, file: !754, line: 96, baseType: !802, size: 8)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2949, file: !754, line: 97, baseType: !240, size: 8, offset: 8)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2946, file: !754, line: 100, baseType: !151, size: 16)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2910, file: !754, line: 107, baseType: !137, size: 32, offset: 128)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2910, file: !754, line: 127, baseType: !102, size: 32, offset: 160)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2910, file: !754, line: 131, baseType: !2957, size: 192, offset: 192)
!2957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !788, line: 244, size: 192, elements: !2958)
!2958 = !{!2959, !2960, !2966}
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2957, file: !788, line: 245, baseType: !2916, size: 64)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2957, file: !788, line: 246, baseType: !2961, size: 32, offset: 64)
!2961 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !788, line: 242, baseType: !2962)
!2962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2963, size: 32)
!2963 = !DISubroutineType(types: !2964)
!2964 = !{null, !2965}
!2965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2957, size: 32)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2957, file: !788, line: 249, baseType: !819, size: 64, offset: 128)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2907, file: !754, line: 250, baseType: !2968, size: 288, offset: 384)
!2968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !823, line: 25, size: 288, elements: !2969)
!2969 = !{!2970, !2971, !2972, !2973, !2974, !2975, !2976, !2977, !2978}
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2968, file: !823, line: 26, baseType: !137, size: 32)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2968, file: !823, line: 27, baseType: !137, size: 32, offset: 32)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2968, file: !823, line: 28, baseType: !137, size: 32, offset: 64)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2968, file: !823, line: 29, baseType: !137, size: 32, offset: 96)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2968, file: !823, line: 30, baseType: !137, size: 32, offset: 128)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2968, file: !823, line: 31, baseType: !137, size: 32, offset: 160)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2968, file: !823, line: 32, baseType: !137, size: 32, offset: 192)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2968, file: !823, line: 33, baseType: !137, size: 32, offset: 224)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2968, file: !823, line: 34, baseType: !137, size: 32, offset: 256)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2907, file: !754, line: 253, baseType: !102, size: 32, offset: 672)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2907, file: !754, line: 256, baseType: !2938, size: 64, offset: 704)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2907, file: !754, line: 294, baseType: !103, size: 32, offset: 768)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2907, file: !754, line: 300, baseType: !2983, size: 96, offset: 800)
!2983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !754, line: 149, size: 96, elements: !2984)
!2984 = !{!2985, !2986, !2987}
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2983, file: !754, line: 153, baseType: !22, size: 32)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2983, file: !754, line: 162, baseType: !120, size: 32, offset: 32)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2983, file: !754, line: 168, baseType: !120, size: 32, offset: 64)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2907, file: !754, line: 325, baseType: !2989, size: 32, offset: 896)
!2989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2990, size: 32)
!2990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !846, line: 5073, size: 160, elements: !2991)
!2991 = !{!2992, !2998, !2999}
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2990, file: !846, line: 5074, baseType: !2993, size: 96)
!2993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !2994)
!2994 = !{!2995, !2996, !2997}
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2993, file: !113, line: 57, baseType: !116, size: 32)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2993, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2993, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2990, file: !846, line: 5075, baseType: !2938, size: 64, offset: 96)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2990, file: !846, line: 5076, baseType: !3000, offset: 160)
!3000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !857, line: 43, elements: !162)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2907, file: !754, line: 343, baseType: !3002, size: 64, offset: 928)
!3002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !823, line: 60, size: 64, elements: !3003)
!3003 = !{!3004, !3005}
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3002, file: !823, line: 63, baseType: !137, size: 32)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3002, file: !823, line: 66, baseType: !137, size: 32, offset: 32)
!3006 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3007, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3008, globals: !3010, splitDebugInlining: false, nameTableKind: None)
!3007 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/basic/sys_heap")
!3008 = !{!102, !721, !2347, !240, !103, !3009, !24, !120, !2684, !22, !137, !163}
!3009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2916, size: 32)
!3010 = !{!2899, !3011}
!3011 = !DIGlobalVariableExpression(var: !3012, expr: !DIExpression())
!3012 = distinct !DIGlobalVariable(name: "states_sz", scope: !2901, file: !2902, line: 279, type: !3013, isLocal: true, isDefinition: true)
!3013 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3014, size: 256, elements: !159)
!3014 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !120)
!3015 = !{!3016, !3017, !3018, !3019, !3020, !3021, !3022}
!3016 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2901, file: !2902, line: 271, type: !2905)
!3017 = !DILocalVariable(name: "buf", arg: 2, scope: !2901, file: !2902, line: 271, type: !2684)
!3018 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2901, file: !2902, line: 271, type: !120)
!3019 = !DILocalVariable(name: "off", scope: !2901, file: !2902, line: 273, type: !120)
!3020 = !DILocalVariable(name: "bit", scope: !2901, file: !2902, line: 274, type: !240)
!3021 = !DILocalVariable(name: "thread_state", scope: !2901, file: !2902, line: 275, type: !240)
!3022 = !DILocalVariable(name: "index", scope: !3023, file: !2902, line: 293, type: !240)
!3023 = distinct !DILexicalBlock(scope: !2901, file: !2902, line: 293, column: 2)
!3024 = !DICompositeType(tag: DW_TAG_array_type, baseType: !721, size: 256, elements: !159)
!3025 = !DIGlobalVariableExpression(var: !3026, expr: !DIExpression())
!3026 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !3027, file: !3135, line: 56, type: !3124, isLocal: false, isDefinition: true)
!3027 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3028, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3029, globals: !3132, splitDebugInlining: false, nameTableKind: None)
!3028 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/basic/sys_heap")
!3029 = !{!3030, !2684, !102, !3130, !1566, !2347, !1458, !103, !137, !163, !3131}
!3030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3031, size: 32)
!3031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !754, line: 245, size: 1024, elements: !3032)
!3032 = !{!3033, !3091, !3103, !3104, !3105, !3106, !3112, !3125}
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3031, file: !754, line: 247, baseType: !3034, size: 384)
!3034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !754, line: 57, size: 384, elements: !3035)
!3035 = !{!3036, !3060, !3067, !3068, !3069, !3078, !3079, !3080}
!3036 = !DIDerivedType(tag: DW_TAG_member, scope: !3034, file: !754, line: 60, baseType: !3037, size: 64)
!3037 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3034, file: !754, line: 60, size: 64, elements: !3038)
!3038 = !{!3039, !3054}
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3037, file: !754, line: 61, baseType: !3040, size: 64)
!3040 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !764, line: 49, baseType: !3041)
!3041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !764, line: 37, size: 64, elements: !3042)
!3042 = !{!3043, !3049}
!3043 = !DIDerivedType(tag: DW_TAG_member, scope: !3041, file: !764, line: 38, baseType: !3044, size: 32)
!3044 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3041, file: !764, line: 38, size: 32, elements: !3045)
!3045 = !{!3046, !3048}
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3044, file: !764, line: 39, baseType: !3047, size: 32)
!3047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3041, size: 32)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3044, file: !764, line: 40, baseType: !3047, size: 32)
!3049 = !DIDerivedType(tag: DW_TAG_member, scope: !3041, file: !764, line: 42, baseType: !3050, size: 32, offset: 32)
!3050 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3041, file: !764, line: 42, size: 32, elements: !3051)
!3051 = !{!3052, !3053}
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3050, file: !764, line: 43, baseType: !3047, size: 32)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3050, file: !764, line: 44, baseType: !3047, size: 32)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3037, file: !754, line: 62, baseType: !3055, size: 64)
!3055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !780, line: 49, size: 64, elements: !3056)
!3056 = !{!3057}
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3055, file: !780, line: 50, baseType: !3058, size: 64)
!3058 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3059, size: 64, elements: !564)
!3059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3055, size: 32)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3034, file: !754, line: 68, baseType: !3061, size: 32, offset: 64)
!3061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3062, size: 32)
!3062 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !788, line: 233, baseType: !3063)
!3063 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !788, line: 231, size: 64, elements: !3064)
!3064 = !{!3065}
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3063, file: !788, line: 232, baseType: !3066, size: 64)
!3066 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !764, line: 48, baseType: !3041)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3034, file: !754, line: 71, baseType: !240, size: 8, offset: 96)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3034, file: !754, line: 74, baseType: !240, size: 8, offset: 104)
!3069 = !DIDerivedType(tag: DW_TAG_member, scope: !3034, file: !754, line: 90, baseType: !3070, size: 16, offset: 112)
!3070 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3034, file: !754, line: 90, size: 16, elements: !3071)
!3071 = !{!3072, !3077}
!3072 = !DIDerivedType(tag: DW_TAG_member, scope: !3070, file: !754, line: 91, baseType: !3073, size: 16)
!3073 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3070, file: !754, line: 91, size: 16, elements: !3074)
!3074 = !{!3075, !3076}
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3073, file: !754, line: 96, baseType: !802, size: 8)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3073, file: !754, line: 97, baseType: !240, size: 8, offset: 8)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3070, file: !754, line: 100, baseType: !151, size: 16)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3034, file: !754, line: 107, baseType: !137, size: 32, offset: 128)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3034, file: !754, line: 127, baseType: !102, size: 32, offset: 160)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3034, file: !754, line: 131, baseType: !3081, size: 192, offset: 192)
!3081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !788, line: 244, size: 192, elements: !3082)
!3082 = !{!3083, !3084, !3090}
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3081, file: !788, line: 245, baseType: !3040, size: 64)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3081, file: !788, line: 246, baseType: !3085, size: 32, offset: 64)
!3085 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !788, line: 242, baseType: !3086)
!3086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3087, size: 32)
!3087 = !DISubroutineType(types: !3088)
!3088 = !{null, !3089}
!3089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3081, size: 32)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3081, file: !788, line: 249, baseType: !819, size: 64, offset: 128)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3031, file: !754, line: 250, baseType: !3092, size: 288, offset: 384)
!3092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !823, line: 25, size: 288, elements: !3093)
!3093 = !{!3094, !3095, !3096, !3097, !3098, !3099, !3100, !3101, !3102}
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3092, file: !823, line: 26, baseType: !137, size: 32)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3092, file: !823, line: 27, baseType: !137, size: 32, offset: 32)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3092, file: !823, line: 28, baseType: !137, size: 32, offset: 64)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3092, file: !823, line: 29, baseType: !137, size: 32, offset: 96)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3092, file: !823, line: 30, baseType: !137, size: 32, offset: 128)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3092, file: !823, line: 31, baseType: !137, size: 32, offset: 160)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3092, file: !823, line: 32, baseType: !137, size: 32, offset: 192)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3092, file: !823, line: 33, baseType: !137, size: 32, offset: 224)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3092, file: !823, line: 34, baseType: !137, size: 32, offset: 256)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3031, file: !754, line: 253, baseType: !102, size: 32, offset: 672)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3031, file: !754, line: 256, baseType: !3062, size: 64, offset: 704)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3031, file: !754, line: 294, baseType: !103, size: 32, offset: 768)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3031, file: !754, line: 300, baseType: !3107, size: 96, offset: 800)
!3107 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !754, line: 149, size: 96, elements: !3108)
!3108 = !{!3109, !3110, !3111}
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3107, file: !754, line: 153, baseType: !22, size: 32)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3107, file: !754, line: 162, baseType: !120, size: 32, offset: 32)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3107, file: !754, line: 168, baseType: !120, size: 32, offset: 64)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3031, file: !754, line: 325, baseType: !3113, size: 32, offset: 896)
!3113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3114, size: 32)
!3114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !846, line: 5073, size: 160, elements: !3115)
!3115 = !{!3116, !3122, !3123}
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3114, file: !846, line: 5074, baseType: !3117, size: 96)
!3117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !3118)
!3118 = !{!3119, !3120, !3121}
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3117, file: !113, line: 57, baseType: !116, size: 32)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3117, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3117, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3114, file: !846, line: 5075, baseType: !3062, size: 64, offset: 96)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3114, file: !846, line: 5076, baseType: !3124, offset: 160)
!3124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !857, line: 43, elements: !162)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3031, file: !754, line: 343, baseType: !3126, size: 64, offset: 928)
!3126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !823, line: 60, size: 64, elements: !3127)
!3127 = !{!3128, !3129}
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3126, file: !823, line: 63, baseType: !137, size: 32)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3126, file: !823, line: 66, baseType: !137, size: 32, offset: 32)
!3130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3059, size: 32)
!3131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3040, size: 32)
!3132 = !{!3025, !3133, !3136, !3138}
!3133 = !DIGlobalVariableExpression(var: !3134, expr: !DIExpression())
!3134 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !3027, file: !3135, line: 404, type: !103, isLocal: true, isDefinition: true)
!3135 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3136 = !DIGlobalVariableExpression(var: !3137, expr: !DIExpression())
!3137 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !3027, file: !3135, line: 405, type: !103, isLocal: true, isDefinition: true)
!3138 = !DIGlobalVariableExpression(var: !3139, expr: !DIExpression())
!3139 = distinct !DIGlobalVariable(name: "pending_current", scope: !3027, file: !3135, line: 425, type: !3030, isLocal: true, isDefinition: true)
!3140 = !DIGlobalVariableExpression(var: !3141, expr: !DIExpression())
!3141 = distinct !DIGlobalVariable(name: "curr_tick", scope: !3142, file: !3172, line: 15, type: !163, isLocal: true, isDefinition: true)
!3142 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3143, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3144, globals: !3169, splitDebugInlining: false, nameTableKind: None)
!3143 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/basic/sys_heap")
!3144 = !{!2347, !102, !1458, !137, !163, !103, !3145, !2684, !819}
!3145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3146, size: 32)
!3146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !788, line: 244, size: 192, elements: !3147)
!3147 = !{!3148, !3163, !3168}
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3146, file: !788, line: 245, baseType: !3149, size: 64)
!3149 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !764, line: 49, baseType: !3150)
!3150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !764, line: 37, size: 64, elements: !3151)
!3151 = !{!3152, !3158}
!3152 = !DIDerivedType(tag: DW_TAG_member, scope: !3150, file: !764, line: 38, baseType: !3153, size: 32)
!3153 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3150, file: !764, line: 38, size: 32, elements: !3154)
!3154 = !{!3155, !3157}
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3153, file: !764, line: 39, baseType: !3156, size: 32)
!3156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3150, size: 32)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3153, file: !764, line: 40, baseType: !3156, size: 32)
!3158 = !DIDerivedType(tag: DW_TAG_member, scope: !3150, file: !764, line: 42, baseType: !3159, size: 32, offset: 32)
!3159 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3150, file: !764, line: 42, size: 32, elements: !3160)
!3160 = !{!3161, !3162}
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3159, file: !764, line: 43, baseType: !3156, size: 32)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3159, file: !764, line: 44, baseType: !3156, size: 32)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3146, file: !788, line: 246, baseType: !3164, size: 32, offset: 64)
!3164 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !788, line: 242, baseType: !3165)
!3165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3166, size: 32)
!3166 = !DISubroutineType(types: !3167)
!3167 = !{null, !3145}
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3146, file: !788, line: 249, baseType: !819, size: 64, offset: 128)
!3169 = !{!3140, !3170, !3174, !3176}
!3170 = !DIGlobalVariableExpression(var: !3171, expr: !DIExpression())
!3171 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !3142, file: !3172, line: 19, type: !3173, isLocal: true, isDefinition: true)
!3172 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !857, line: 43, elements: !162)
!3174 = !DIGlobalVariableExpression(var: !3175, expr: !DIExpression())
!3175 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !3142, file: !3172, line: 25, type: !103, isLocal: true, isDefinition: true)
!3176 = !DIGlobalVariableExpression(var: !3177, expr: !DIExpression())
!3177 = distinct !DIGlobalVariable(name: "timeout_list", scope: !3142, file: !3172, line: 17, type: !3178, isLocal: true, isDefinition: true)
!3178 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !764, line: 48, baseType: !3150)
!3179 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3180, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3180 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/basic/sys_heap")
!3181 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3182, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3182 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/basic/sys_heap")
!3183 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3184, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !3185, splitDebugInlining: false, nameTableKind: None)
!3184 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/basic/sys_heap")
!3185 = !{!102, !120, !1566, !24, !3186, !22, !3191, !103, !149, !150}
!3186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3187, size: 32)
!3187 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !142, line: 58, baseType: !3188)
!3188 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !142, line: 58, size: 64, elements: !3189)
!3189 = !{!3190}
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !3188, file: !142, line: 58, baseType: !158, size: 64)
!3191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3192, size: 32)
!3192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !142, line: 68, size: 224, elements: !3193)
!3193 = !{!3194, !3197, !3198, !3199, !3200, !3201, !3202}
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !3192, file: !142, line: 69, baseType: !3195, size: 64)
!3195 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3196, size: 64, elements: !564)
!3196 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunkid_t", file: !142, line: 61, baseType: !137)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !3192, file: !142, line: 70, baseType: !3196, size: 32, offset: 64)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !3192, file: !142, line: 71, baseType: !137, size: 32, offset: 96)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "free_bytes", scope: !3192, file: !142, line: 73, baseType: !120, size: 32, offset: 128)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "allocated_bytes", scope: !3192, file: !142, line: 74, baseType: !120, size: 32, offset: 160)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "max_allocated_bytes", scope: !3192, file: !142, line: 75, baseType: !120, size: 32, offset: 192)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !3192, file: !142, line: 77, baseType: !3203, offset: 224)
!3203 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3204, elements: !878)
!3204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !142, line: 64, size: 32, elements: !3205)
!3205 = !{!3206}
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3204, file: !142, line: 65, baseType: !3196, size: 32)
!3207 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3208, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3209, retainedTypes: !3229, splitDebugInlining: false, nameTableKind: None)
!3208 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/basic/sys_heap")
!3209 = !{!3210, !3218}
!3210 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !3211, line: 69, baseType: !32, size: 32, elements: !3212)
!3211 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3212 = !{!3213, !3214, !3215, !3216, !3217}
!3213 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!3214 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!3215 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!3216 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!3217 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!3218 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !3211, line: 56, baseType: !32, size: 32, elements: !3219)
!3219 = !{!3220, !3221, !3222, !3223, !3224, !3225, !3226, !3227, !3228}
!3220 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!3221 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!3222 = !DIEnumerator(name: "LENGTH_H", value: 2)
!3223 = !DIEnumerator(name: "LENGTH_L", value: 3)
!3224 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!3225 = !DIEnumerator(name: "LENGTH_J", value: 5)
!3226 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!3227 = !DIEnumerator(name: "LENGTH_T", value: 7)
!3228 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!3229 = !{!103, !3210, !3218, !3230, !803, !738, !3232, !3233, !241, !152, !721, !120, !102, !22, !32, !3235, !3236, !3237, !1835, !3238, !820, !3239, !3231, !3240, !3241, !3242, !3243}
!3230 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !3211, line: 31, baseType: !3231)
!3231 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !820)
!3232 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !121, line: 329, baseType: !32)
!3233 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !3211, line: 32, baseType: !3234)
!3234 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !164)
!3235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!3236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !803, size: 32)
!3237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !738, size: 32)
!3238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1835, size: 32)
!3239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !820, size: 32)
!3240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3231, size: 32)
!3241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 32)
!3242 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !121, line: 145, baseType: !103)
!3243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3242, size: 32)
!3244 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3245, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3245 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/basic/sys_heap/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/basic/sys_heap")
!3246 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3247, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3247 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/atmel_sam0/common/./soc_port.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/basic/sys_heap")
!3248 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3249, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3250, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3249 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/basic/sys_heap")
!3250 = !{!3251, !30}
!3251 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !3252, line: 27, baseType: !32, size: 32, elements: !3253)
!3252 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3253 = !{!3254, !3255, !3256, !3257, !3258}
!3254 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!3255 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!3256 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!3257 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!3258 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!3259 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3260, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3261, retainedTypes: !3262, splitDebugInlining: false, nameTableKind: None)
!3260 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/basic/sys_heap")
!3261 = !{!2223, !3251, !30}
!3262 = !{!3263, !3264, !102, !103, !1458, !137, !240, !3281}
!3263 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !237, line: 217, baseType: !2223)
!3264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3265, size: 32)
!3265 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !891, line: 426, baseType: !3266)
!3266 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !891, line: 411, size: 28704, elements: !3267)
!3267 = !{!3268, !3269, !3270, !3271, !3272, !3273, !3274, !3275, !3276, !3277, !3278, !3279, !3280}
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !3266, file: !891, line: 413, baseType: !2362, size: 256)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3266, file: !891, line: 414, baseType: !2364, size: 768, offset: 256)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !3266, file: !891, line: 415, baseType: !2362, size: 256, offset: 1024)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3266, file: !891, line: 416, baseType: !2364, size: 768, offset: 1280)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !3266, file: !891, line: 417, baseType: !2362, size: 256, offset: 2048)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3266, file: !891, line: 418, baseType: !2364, size: 768, offset: 2304)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !3266, file: !891, line: 419, baseType: !2362, size: 256, offset: 3072)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3266, file: !891, line: 420, baseType: !2364, size: 768, offset: 3328)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !3266, file: !891, line: 421, baseType: !2362, size: 256, offset: 4096)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3266, file: !891, line: 422, baseType: !2373, size: 1792, offset: 4352)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !3266, file: !891, line: 423, baseType: !2377, size: 1920, offset: 6144)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3266, file: !891, line: 424, baseType: !2381, size: 20608, offset: 8064)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !3266, file: !891, line: 425, baseType: !484, size: 32, offset: 28672)
!3281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3282, size: 32)
!3282 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !891, line: 468, baseType: !3283)
!3283 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !891, line: 445, size: 1120, elements: !3284)
!3284 = !{!3285, !3286, !3287, !3288, !3289, !3290, !3291, !3292, !3293, !3294, !3295, !3296, !3297, !3298, !3299, !3300, !3301, !3302, !3303, !3304, !3305}
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3283, file: !891, line: 447, baseType: !483, size: 32)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3283, file: !891, line: 448, baseType: !484, size: 32, offset: 32)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3283, file: !891, line: 449, baseType: !484, size: 32, offset: 64)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3283, file: !891, line: 450, baseType: !484, size: 32, offset: 96)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3283, file: !891, line: 451, baseType: !484, size: 32, offset: 128)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3283, file: !891, line: 452, baseType: !484, size: 32, offset: 160)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3283, file: !891, line: 453, baseType: !2396, size: 96, offset: 192)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3283, file: !891, line: 454, baseType: !484, size: 32, offset: 288)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3283, file: !891, line: 455, baseType: !484, size: 32, offset: 320)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3283, file: !891, line: 456, baseType: !484, size: 32, offset: 352)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3283, file: !891, line: 457, baseType: !484, size: 32, offset: 384)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3283, file: !891, line: 458, baseType: !484, size: 32, offset: 416)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3283, file: !891, line: 459, baseType: !484, size: 32, offset: 448)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3283, file: !891, line: 460, baseType: !484, size: 32, offset: 480)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3283, file: !891, line: 461, baseType: !2405, size: 64, offset: 512)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3283, file: !891, line: 462, baseType: !483, size: 32, offset: 576)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3283, file: !891, line: 463, baseType: !483, size: 32, offset: 608)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3283, file: !891, line: 464, baseType: !2409, size: 128, offset: 640)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3283, file: !891, line: 465, baseType: !2411, size: 160, offset: 768)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3283, file: !891, line: 466, baseType: !2413, size: 160, offset: 928)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3283, file: !891, line: 467, baseType: !484, size: 32, offset: 1088)
!3306 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3307, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3307 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/basic/sys_heap")
!3308 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3309, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3310, splitDebugInlining: false, nameTableKind: None)
!3309 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/basic/sys_heap")
!3310 = !{!102, !103, !22, !3311}
!3311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3312, size: 32)
!3312 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !891, line: 468, baseType: !3313)
!3313 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !891, line: 445, size: 1120, elements: !3314)
!3314 = !{!3315, !3316, !3317, !3318, !3319, !3320, !3321, !3322, !3323, !3324, !3325, !3326, !3327, !3328, !3329, !3330, !3331, !3332, !3333, !3334, !3335}
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3313, file: !891, line: 447, baseType: !483, size: 32)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3313, file: !891, line: 448, baseType: !484, size: 32, offset: 32)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3313, file: !891, line: 449, baseType: !484, size: 32, offset: 64)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3313, file: !891, line: 450, baseType: !484, size: 32, offset: 96)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3313, file: !891, line: 451, baseType: !484, size: 32, offset: 128)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3313, file: !891, line: 452, baseType: !484, size: 32, offset: 160)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3313, file: !891, line: 453, baseType: !2396, size: 96, offset: 192)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3313, file: !891, line: 454, baseType: !484, size: 32, offset: 288)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3313, file: !891, line: 455, baseType: !484, size: 32, offset: 320)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3313, file: !891, line: 456, baseType: !484, size: 32, offset: 352)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3313, file: !891, line: 457, baseType: !484, size: 32, offset: 384)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3313, file: !891, line: 458, baseType: !484, size: 32, offset: 416)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3313, file: !891, line: 459, baseType: !484, size: 32, offset: 448)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3313, file: !891, line: 460, baseType: !484, size: 32, offset: 480)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3313, file: !891, line: 461, baseType: !2405, size: 64, offset: 512)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3313, file: !891, line: 462, baseType: !483, size: 32, offset: 576)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3313, file: !891, line: 463, baseType: !483, size: 32, offset: 608)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3313, file: !891, line: 464, baseType: !2409, size: 128, offset: 640)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3313, file: !891, line: 465, baseType: !2411, size: 160, offset: 768)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3313, file: !891, line: 466, baseType: !2413, size: 160, offset: 928)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3313, file: !891, line: 467, baseType: !484, size: 32, offset: 1088)
!3336 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3337, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3338, splitDebugInlining: false, nameTableKind: None)
!3337 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/basic/sys_heap")
!3338 = !{!3339, !102, !103}
!3339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3340, size: 32)
!3340 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !891, line: 468, baseType: !3341)
!3341 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !891, line: 445, size: 1120, elements: !3342)
!3342 = !{!3343, !3344, !3345, !3346, !3347, !3348, !3349, !3350, !3351, !3352, !3353, !3354, !3355, !3356, !3357, !3358, !3359, !3360, !3361, !3362, !3363}
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3341, file: !891, line: 447, baseType: !483, size: 32)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3341, file: !891, line: 448, baseType: !484, size: 32, offset: 32)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3341, file: !891, line: 449, baseType: !484, size: 32, offset: 64)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3341, file: !891, line: 450, baseType: !484, size: 32, offset: 96)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3341, file: !891, line: 451, baseType: !484, size: 32, offset: 128)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3341, file: !891, line: 452, baseType: !484, size: 32, offset: 160)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3341, file: !891, line: 453, baseType: !2396, size: 96, offset: 192)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3341, file: !891, line: 454, baseType: !484, size: 32, offset: 288)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3341, file: !891, line: 455, baseType: !484, size: 32, offset: 320)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3341, file: !891, line: 456, baseType: !484, size: 32, offset: 352)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3341, file: !891, line: 457, baseType: !484, size: 32, offset: 384)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3341, file: !891, line: 458, baseType: !484, size: 32, offset: 416)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3341, file: !891, line: 459, baseType: !484, size: 32, offset: 448)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3341, file: !891, line: 460, baseType: !484, size: 32, offset: 480)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3341, file: !891, line: 461, baseType: !2405, size: 64, offset: 512)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3341, file: !891, line: 462, baseType: !483, size: 32, offset: 576)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3341, file: !891, line: 463, baseType: !483, size: 32, offset: 608)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3341, file: !891, line: 464, baseType: !2409, size: 128, offset: 640)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3341, file: !891, line: 465, baseType: !2411, size: 160, offset: 768)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3341, file: !891, line: 466, baseType: !2413, size: 160, offset: 928)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3341, file: !891, line: 467, baseType: !484, size: 32, offset: 1088)
!3364 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3365, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3366, splitDebugInlining: false, nameTableKind: None)
!3365 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/basic/sys_heap")
!3366 = !{!3367, !137, !102, !103}
!3367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3368, size: 32)
!3368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3369, line: 98, size: 256, elements: !3370)
!3369 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3370 = !{!3371, !3376, !3381, !3386, !3391, !3396, !3401, !3406}
!3371 = !DIDerivedType(tag: DW_TAG_member, scope: !3368, file: !3369, line: 99, baseType: !3372, size: 32)
!3372 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3368, file: !3369, line: 99, size: 32, elements: !3373)
!3373 = !{!3374, !3375}
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !3372, file: !3369, line: 99, baseType: !137, size: 32)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !3372, file: !3369, line: 99, baseType: !137, size: 32)
!3376 = !DIDerivedType(tag: DW_TAG_member, scope: !3368, file: !3369, line: 100, baseType: !3377, size: 32, offset: 32)
!3377 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3368, file: !3369, line: 100, size: 32, elements: !3378)
!3378 = !{!3379, !3380}
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !3377, file: !3369, line: 100, baseType: !137, size: 32)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !3377, file: !3369, line: 100, baseType: !137, size: 32)
!3381 = !DIDerivedType(tag: DW_TAG_member, scope: !3368, file: !3369, line: 101, baseType: !3382, size: 32, offset: 64)
!3382 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3368, file: !3369, line: 101, size: 32, elements: !3383)
!3383 = !{!3384, !3385}
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !3382, file: !3369, line: 101, baseType: !137, size: 32)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !3382, file: !3369, line: 101, baseType: !137, size: 32)
!3386 = !DIDerivedType(tag: DW_TAG_member, scope: !3368, file: !3369, line: 102, baseType: !3387, size: 32, offset: 96)
!3387 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3368, file: !3369, line: 102, size: 32, elements: !3388)
!3388 = !{!3389, !3390}
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !3387, file: !3369, line: 102, baseType: !137, size: 32)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !3387, file: !3369, line: 102, baseType: !137, size: 32)
!3391 = !DIDerivedType(tag: DW_TAG_member, scope: !3368, file: !3369, line: 103, baseType: !3392, size: 32, offset: 128)
!3392 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3368, file: !3369, line: 103, size: 32, elements: !3393)
!3393 = !{!3394, !3395}
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !3392, file: !3369, line: 103, baseType: !137, size: 32)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !3392, file: !3369, line: 103, baseType: !137, size: 32)
!3396 = !DIDerivedType(tag: DW_TAG_member, scope: !3368, file: !3369, line: 104, baseType: !3397, size: 32, offset: 160)
!3397 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3368, file: !3369, line: 104, size: 32, elements: !3398)
!3398 = !{!3399, !3400}
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !3397, file: !3369, line: 104, baseType: !137, size: 32)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !3397, file: !3369, line: 104, baseType: !137, size: 32)
!3401 = !DIDerivedType(tag: DW_TAG_member, scope: !3368, file: !3369, line: 105, baseType: !3402, size: 32, offset: 192)
!3402 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3368, file: !3369, line: 105, size: 32, elements: !3403)
!3403 = !{!3404, !3405}
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !3402, file: !3369, line: 105, baseType: !137, size: 32)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !3402, file: !3369, line: 105, baseType: !137, size: 32)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !3368, file: !3369, line: 106, baseType: !137, size: 32, offset: 224)
!3407 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3408, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3250, retainedTypes: !3409, splitDebugInlining: false, nameTableKind: None)
!3408 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/basic/sys_heap")
!3409 = !{!3410, !102, !103, !3435, !150, !137}
!3410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3411, size: 32)
!3411 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !891, line: 468, baseType: !3412)
!3412 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !891, line: 445, size: 1120, elements: !3413)
!3413 = !{!3414, !3415, !3416, !3417, !3418, !3419, !3420, !3421, !3422, !3423, !3424, !3425, !3426, !3427, !3428, !3429, !3430, !3431, !3432, !3433, !3434}
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3412, file: !891, line: 447, baseType: !483, size: 32)
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3412, file: !891, line: 448, baseType: !484, size: 32, offset: 32)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3412, file: !891, line: 449, baseType: !484, size: 32, offset: 64)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3412, file: !891, line: 450, baseType: !484, size: 32, offset: 96)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3412, file: !891, line: 451, baseType: !484, size: 32, offset: 128)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3412, file: !891, line: 452, baseType: !484, size: 32, offset: 160)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3412, file: !891, line: 453, baseType: !2396, size: 96, offset: 192)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3412, file: !891, line: 454, baseType: !484, size: 32, offset: 288)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3412, file: !891, line: 455, baseType: !484, size: 32, offset: 320)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3412, file: !891, line: 456, baseType: !484, size: 32, offset: 352)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3412, file: !891, line: 457, baseType: !484, size: 32, offset: 384)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3412, file: !891, line: 458, baseType: !484, size: 32, offset: 416)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3412, file: !891, line: 459, baseType: !484, size: 32, offset: 448)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3412, file: !891, line: 460, baseType: !484, size: 32, offset: 480)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3412, file: !891, line: 461, baseType: !2405, size: 64, offset: 512)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3412, file: !891, line: 462, baseType: !483, size: 32, offset: 576)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3412, file: !891, line: 463, baseType: !483, size: 32, offset: 608)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3412, file: !891, line: 464, baseType: !2409, size: 128, offset: 640)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3412, file: !891, line: 465, baseType: !2411, size: 160, offset: 768)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3412, file: !891, line: 466, baseType: !2413, size: 160, offset: 928)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3412, file: !891, line: 467, baseType: !484, size: 32, offset: 1088)
!3435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3436, size: 32)
!3436 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !3369, line: 141, baseType: !3437)
!3437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !3369, line: 97, size: 256, elements: !3438)
!3438 = !{!3439}
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !3437, file: !3369, line: 107, baseType: !3440, size: 256)
!3440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3369, line: 98, size: 256, elements: !3441)
!3441 = !{!3442, !3447, !3452, !3457, !3462, !3467, !3472, !3477}
!3442 = !DIDerivedType(tag: DW_TAG_member, scope: !3440, file: !3369, line: 99, baseType: !3443, size: 32)
!3443 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3440, file: !3369, line: 99, size: 32, elements: !3444)
!3444 = !{!3445, !3446}
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !3443, file: !3369, line: 99, baseType: !137, size: 32)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !3443, file: !3369, line: 99, baseType: !137, size: 32)
!3447 = !DIDerivedType(tag: DW_TAG_member, scope: !3440, file: !3369, line: 100, baseType: !3448, size: 32, offset: 32)
!3448 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3440, file: !3369, line: 100, size: 32, elements: !3449)
!3449 = !{!3450, !3451}
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !3448, file: !3369, line: 100, baseType: !137, size: 32)
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !3448, file: !3369, line: 100, baseType: !137, size: 32)
!3452 = !DIDerivedType(tag: DW_TAG_member, scope: !3440, file: !3369, line: 101, baseType: !3453, size: 32, offset: 64)
!3453 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3440, file: !3369, line: 101, size: 32, elements: !3454)
!3454 = !{!3455, !3456}
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !3453, file: !3369, line: 101, baseType: !137, size: 32)
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !3453, file: !3369, line: 101, baseType: !137, size: 32)
!3457 = !DIDerivedType(tag: DW_TAG_member, scope: !3440, file: !3369, line: 102, baseType: !3458, size: 32, offset: 96)
!3458 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3440, file: !3369, line: 102, size: 32, elements: !3459)
!3459 = !{!3460, !3461}
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !3458, file: !3369, line: 102, baseType: !137, size: 32)
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !3458, file: !3369, line: 102, baseType: !137, size: 32)
!3462 = !DIDerivedType(tag: DW_TAG_member, scope: !3440, file: !3369, line: 103, baseType: !3463, size: 32, offset: 128)
!3463 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3440, file: !3369, line: 103, size: 32, elements: !3464)
!3464 = !{!3465, !3466}
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !3463, file: !3369, line: 103, baseType: !137, size: 32)
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !3463, file: !3369, line: 103, baseType: !137, size: 32)
!3467 = !DIDerivedType(tag: DW_TAG_member, scope: !3440, file: !3369, line: 104, baseType: !3468, size: 32, offset: 160)
!3468 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3440, file: !3369, line: 104, size: 32, elements: !3469)
!3469 = !{!3470, !3471}
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !3468, file: !3369, line: 104, baseType: !137, size: 32)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !3468, file: !3369, line: 104, baseType: !137, size: 32)
!3472 = !DIDerivedType(tag: DW_TAG_member, scope: !3440, file: !3369, line: 105, baseType: !3473, size: 32, offset: 192)
!3473 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3440, file: !3369, line: 105, size: 32, elements: !3474)
!3474 = !{!3475, !3476}
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !3473, file: !3369, line: 105, baseType: !137, size: 32)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !3473, file: !3369, line: 105, baseType: !137, size: 32)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !3440, file: !3369, line: 106, baseType: !137, size: 32, offset: 224)
!3478 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3479, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2222, retainedTypes: !3480, splitDebugInlining: false, nameTableKind: None)
!3479 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/basic/sys_heap")
!3480 = !{!3263, !1458, !240, !137, !3481, !3498}
!3481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3482, size: 32)
!3482 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !891, line: 426, baseType: !3483)
!3483 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !891, line: 411, size: 28704, elements: !3484)
!3484 = !{!3485, !3486, !3487, !3488, !3489, !3490, !3491, !3492, !3493, !3494, !3495, !3496, !3497}
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !3483, file: !891, line: 413, baseType: !2362, size: 256)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3483, file: !891, line: 414, baseType: !2364, size: 768, offset: 256)
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !3483, file: !891, line: 415, baseType: !2362, size: 256, offset: 1024)
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3483, file: !891, line: 416, baseType: !2364, size: 768, offset: 1280)
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !3483, file: !891, line: 417, baseType: !2362, size: 256, offset: 2048)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3483, file: !891, line: 418, baseType: !2364, size: 768, offset: 2304)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !3483, file: !891, line: 419, baseType: !2362, size: 256, offset: 3072)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3483, file: !891, line: 420, baseType: !2364, size: 768, offset: 3328)
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !3483, file: !891, line: 421, baseType: !2362, size: 256, offset: 4096)
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3483, file: !891, line: 422, baseType: !2373, size: 1792, offset: 4352)
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !3483, file: !891, line: 423, baseType: !2377, size: 1920, offset: 6144)
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3483, file: !891, line: 424, baseType: !2381, size: 20608, offset: 8064)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !3483, file: !891, line: 425, baseType: !484, size: 32, offset: 28672)
!3498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3499, size: 32)
!3499 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !891, line: 468, baseType: !3500)
!3500 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !891, line: 445, size: 1120, elements: !3501)
!3501 = !{!3502, !3503, !3504, !3505, !3506, !3507, !3508, !3509, !3510, !3511, !3512, !3513, !3514, !3515, !3516, !3517, !3518, !3519, !3520, !3521, !3522}
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3500, file: !891, line: 447, baseType: !483, size: 32)
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3500, file: !891, line: 448, baseType: !484, size: 32, offset: 32)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3500, file: !891, line: 449, baseType: !484, size: 32, offset: 64)
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3500, file: !891, line: 450, baseType: !484, size: 32, offset: 96)
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3500, file: !891, line: 451, baseType: !484, size: 32, offset: 128)
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3500, file: !891, line: 452, baseType: !484, size: 32, offset: 160)
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3500, file: !891, line: 453, baseType: !2396, size: 96, offset: 192)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3500, file: !891, line: 454, baseType: !484, size: 32, offset: 288)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3500, file: !891, line: 455, baseType: !484, size: 32, offset: 320)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3500, file: !891, line: 456, baseType: !484, size: 32, offset: 352)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3500, file: !891, line: 457, baseType: !484, size: 32, offset: 384)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3500, file: !891, line: 458, baseType: !484, size: 32, offset: 416)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3500, file: !891, line: 459, baseType: !484, size: 32, offset: 448)
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3500, file: !891, line: 460, baseType: !484, size: 32, offset: 480)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3500, file: !891, line: 461, baseType: !2405, size: 64, offset: 512)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3500, file: !891, line: 462, baseType: !483, size: 32, offset: 576)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3500, file: !891, line: 463, baseType: !483, size: 32, offset: 608)
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3500, file: !891, line: 464, baseType: !2409, size: 128, offset: 640)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3500, file: !891, line: 465, baseType: !2411, size: 160, offset: 768)
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3500, file: !891, line: 466, baseType: !2413, size: 160, offset: 928)
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3500, file: !891, line: 467, baseType: !484, size: 32, offset: 1088)
!3523 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3524, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3525, splitDebugInlining: false, nameTableKind: None)
!3524 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/basic/sys_heap")
!3525 = !{!3526, !102, !103}
!3526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3527, size: 32)
!3527 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !891, line: 468, baseType: !3528)
!3528 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !891, line: 445, size: 1120, elements: !3529)
!3529 = !{!3530, !3531, !3532, !3533, !3534, !3535, !3536, !3537, !3538, !3539, !3540, !3541, !3542, !3543, !3544, !3545, !3546, !3547, !3548, !3549, !3550}
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3528, file: !891, line: 447, baseType: !483, size: 32)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3528, file: !891, line: 448, baseType: !484, size: 32, offset: 32)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3528, file: !891, line: 449, baseType: !484, size: 32, offset: 64)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3528, file: !891, line: 450, baseType: !484, size: 32, offset: 96)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3528, file: !891, line: 451, baseType: !484, size: 32, offset: 128)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3528, file: !891, line: 452, baseType: !484, size: 32, offset: 160)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3528, file: !891, line: 453, baseType: !2396, size: 96, offset: 192)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3528, file: !891, line: 454, baseType: !484, size: 32, offset: 288)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3528, file: !891, line: 455, baseType: !484, size: 32, offset: 320)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3528, file: !891, line: 456, baseType: !484, size: 32, offset: 352)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3528, file: !891, line: 457, baseType: !484, size: 32, offset: 384)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3528, file: !891, line: 458, baseType: !484, size: 32, offset: 416)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3528, file: !891, line: 459, baseType: !484, size: 32, offset: 448)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3528, file: !891, line: 460, baseType: !484, size: 32, offset: 480)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3528, file: !891, line: 461, baseType: !2405, size: 64, offset: 512)
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3528, file: !891, line: 462, baseType: !483, size: 32, offset: 576)
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3528, file: !891, line: 463, baseType: !483, size: 32, offset: 608)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3528, file: !891, line: 464, baseType: !2409, size: 128, offset: 640)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3528, file: !891, line: 465, baseType: !2411, size: 160, offset: 768)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3528, file: !891, line: 466, baseType: !2413, size: 160, offset: 928)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3528, file: !891, line: 467, baseType: !484, size: 32, offset: 1088)
!3551 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3552, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3553, splitDebugInlining: false, nameTableKind: None)
!3552 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/basic/sys_heap")
!3553 = !{!109, !2684, !120, !1530, !3554, !241, !102}
!3554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3555, size: 32)
!3555 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !241)
!3556 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3557, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3557 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/basic/sys_heap")
!3558 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3559, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3560, splitDebugInlining: false, nameTableKind: None)
!3559 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/basic/sys_heap")
!3560 = !{!102, !120}
!3561 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3562, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3563, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3562 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/basic/sys_heap")
!3563 = !{!3564, !3571, !30}
!3564 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3565, line: 14, baseType: !32, size: 32, elements: !3566)
!3565 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3566 = !{!3567, !3568, !3569, !3570}
!3567 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3568 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3569 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3570 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3571 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3565, line: 42, baseType: !32, size: 32, elements: !3572)
!3572 = !{!3573, !3574, !3575, !3576, !3577, !3578}
!3573 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3574 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3575 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3576 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3577 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3578 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3579 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3580, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3580 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/basic/sys_heap")
!3581 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3582, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3583, splitDebugInlining: false, nameTableKind: None)
!3582 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/basic/sys_heap")
!3583 = !{!22, !102, !103}
!3584 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3585, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3585 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/basic/sys_heap")
!3586 = !{!"Ubuntu clang version 14.0.6"}
!3587 = !{i32 7, !"Dwarf Version", i32 4}
!3588 = !{i32 2, !"Debug Info Version", i32 3}
!3589 = !{i32 1, !"wchar_size", i32 4}
!3590 = !{i32 1, !"min_enum_size", i32 4}
!3591 = !{i32 1, !"branch-target-enforcement", i32 0}
!3592 = !{i32 1, !"sign-return-address", i32 0}
!3593 = !{i32 1, !"sign-return-address-all", i32 0}
!3594 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3595 = !{i32 7, !"frame-pointer", i32 2}
!3596 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3597, file: !3597, line: 26, type: !3598, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3179, retainedNodes: !162)
!3597 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3598 = !DISubroutineType(types: !3599)
!3599 = !{null}
!3600 = !DILocation(line: 28, column: 1, scope: !3596)
!3601 = !{i64 2152923939, i64 2152923959, i64 2152924022}
!3602 = !DILocation(line: 29, column: 1, scope: !3596)
!3603 = !{i64 2152924354, i64 2152924374, i64 2152924437}
!3604 = !DILocation(line: 30, column: 1, scope: !3596)
!3605 = !{i64 2152924773, i64 2152924793, i64 2152924856}
!3606 = !DILocation(line: 31, column: 1, scope: !3596)
!3607 = !{i64 2152925192, i64 2152925212, i64 2152925275}
!3608 = !DILocation(line: 33, column: 1, scope: !3596)
!3609 = !{i64 2152925484, i64 2152925504, i64 2152925567}
!3610 = !DILocation(line: 35, column: 1, scope: !3596)
!3611 = !{i64 2152925809, i64 2152925829, i64 2152925892}
!3612 = !DILocation(line: 50, column: 1, scope: !3596)
!3613 = !{i64 2152926236, i64 2152926256, i64 2152926319}
!3614 = !DILocation(line: 54, column: 1, scope: !3596)
!3615 = !{i64 2152926675, i64 2152926695, i64 2152926758}
!3616 = !DILocation(line: 61, column: 1, scope: !3596)
!3617 = !{i64 2152926992, i64 2152927012, i64 2152927075}
!3618 = !DILocation(line: 63, column: 1, scope: !3596)
!3619 = !{i64 2152927372, i64 2152927392, i64 2152927455}
!3620 = !DILocation(line: 64, column: 1, scope: !3596)
!3621 = !{i64 2152927894, i64 2152927914, i64 2152927977}
!3622 = !DILocation(line: 65, column: 1, scope: !3596)
!3623 = !{i64 2152928392, i64 2152928412, i64 2152928475}
!3624 = !DILocation(line: 66, column: 1, scope: !3596)
!3625 = !{i64 2152928874, i64 2152928894, i64 2152928957}
!3626 = !DILocation(line: 67, column: 1, scope: !3596)
!3627 = !{i64 2152929381, i64 2152929401, i64 2152929464}
!3628 = !DILocation(line: 68, column: 1, scope: !3596)
!3629 = !{i64 2152929869, i64 2152929889, i64 2152929952}
!3630 = !DILocation(line: 70, column: 1, scope: !3596)
!3631 = !{i64 2152930337, i64 2152930357, i64 2152930420}
!3632 = !DILocation(line: 71, column: 1, scope: !3596)
!3633 = !{i64 2152930779, i64 2152930799, i64 2152930862}
!3634 = !DILocation(line: 72, column: 1, scope: !3596)
!3635 = !{i64 2152931237, i64 2152931257, i64 2152931320}
!3636 = !DILocation(line: 79, column: 1, scope: !3596)
!3637 = !{i64 2152935752, i64 2152935772, i64 2152935835}
!3638 = !DILocation(line: 80, column: 1, scope: !3596)
!3639 = !{i64 2152936263, i64 2152936283, i64 2152936346}
!3640 = !DILocation(line: 82, column: 1, scope: !3596)
!3641 = !{i64 2152936754, i64 2152936774, i64 2152936837}
!3642 = !DILocation(line: 97, column: 1, scope: !3596)
!3643 = !{i64 2152937091, i64 2152937111, i64 2152937174}
!3644 = !DILocation(line: 99, column: 1, scope: !3596)
!3645 = !{i64 2152937309, i64 2152937329, i64 2152937392}
!3646 = !DILocation(line: 102, column: 1, scope: !3596)
!3647 = !{i64 2152937566, i64 2152937586, i64 2152937649}
!3648 = !DILocation(line: 105, column: 1, scope: !3596)
!3649 = !{i64 2152937806, i64 2152937826, i64 2152937889}
!3650 = !DILocation(line: 115, column: 1, scope: !3596)
!3651 = !{i64 2152938145, i64 2152938165, i64 2152938228}
!3652 = !DILocation(line: 118, column: 1, scope: !3596)
!3653 = !{i64 2152938489, i64 2152938509, i64 2152938572}
!3654 = !DILocation(line: 32, column: 1, scope: !3655)
!3655 = !DILexicalBlockFile(scope: !3596, file: !3656, discriminator: 0)
!3656 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3657 = !{i64 2152938845, i64 2152938865, i64 2152938928}
!3658 = !DILocation(line: 33, column: 1, scope: !3655)
!3659 = !{i64 2152939357, i64 2152939377, i64 2152939440}
!3660 = !DILocation(line: 53, column: 1, scope: !3655)
!3661 = !{i64 2152939865, i64 2152939885, i64 2152939948}
!3662 = !DILocation(line: 54, column: 1, scope: !3655)
!3663 = !{i64 2152940283, i64 2152940303, i64 2152940366}
!3664 = !DILocation(line: 55, column: 1, scope: !3655)
!3665 = !{i64 2152940701, i64 2152940721, i64 2152940784}
!3666 = !DILocation(line: 56, column: 1, scope: !3655)
!3667 = !{i64 2152941119, i64 2152941139, i64 2152941202}
!3668 = !DILocation(line: 57, column: 1, scope: !3655)
!3669 = !{i64 2152941537, i64 2152941557, i64 2152941620}
!3670 = !DILocation(line: 58, column: 1, scope: !3655)
!3671 = !{i64 2152941955, i64 2152941975, i64 2152942038}
!3672 = !DILocation(line: 59, column: 1, scope: !3655)
!3673 = !{i64 2152942373, i64 2152942393, i64 2152942456}
!3674 = !DILocation(line: 60, column: 1, scope: !3655)
!3675 = !{i64 2152942797, i64 2152942817, i64 2152942880}
!3676 = !DILocation(line: 61, column: 1, scope: !3655)
!3677 = !{i64 2152943114, i64 2152943134, i64 2152943197}
!3678 = !DILocation(line: 70, column: 1, scope: !3655)
!3679 = !{i64 2152943343, i64 2152943363, i64 2152943426}
!3680 = !DILocation(line: 72, column: 1, scope: !3655)
!3681 = !{i64 2152943675, i64 2152943695, i64 2152943758}
!3682 = !DILocation(line: 73, column: 1, scope: !3655)
!3683 = !{i64 2152944125, i64 2152944145, i64 2152944208}
!3684 = !DILocation(line: 74, column: 1, scope: !3655)
!3685 = !{i64 2152944575, i64 2152944595, i64 2152944658}
!3686 = !DILocation(line: 75, column: 1, scope: !3655)
!3687 = !{i64 2152945025, i64 2152945045, i64 2152945108}
!3688 = !DILocation(line: 76, column: 1, scope: !3655)
!3689 = !{i64 2152949536, i64 2152949556, i64 2152949619}
!3690 = !DILocation(line: 77, column: 1, scope: !3655)
!3691 = !{i64 2152949986, i64 2152950006, i64 2152950069}
!3692 = !DILocation(line: 78, column: 1, scope: !3655)
!3693 = !{i64 2152950436, i64 2152950456, i64 2152950519}
!3694 = !DILocation(line: 79, column: 1, scope: !3655)
!3695 = !{i64 2152950886, i64 2152950906, i64 2152950969}
!3696 = !DILocation(line: 80, column: 1, scope: !3655)
!3697 = !{i64 2152951339, i64 2152951359, i64 2152951422}
!3698 = !DILocation(line: 84, column: 1, scope: !3655)
!3699 = !{i64 2152951671, i64 2152951691, i64 2152951754}
!3700 = !DILocation(line: 91, column: 1, scope: !3655)
!3701 = !{i64 2152952068, i64 2152952088, i64 2152952151}
!3702 = !DILocation(line: 93, column: 1, scope: !3655)
!3703 = !{i64 2152952435, i64 2152952455, i64 2152952518}
!3704 = !DILocation(line: 106, column: 1, scope: !3655)
!3705 = !{i64 2152952705, i64 2152952725, i64 2152952788}
!3706 = !DILocation(line: 11, column: 1, scope: !3707)
!3707 = !DILexicalBlockFile(scope: !3596, file: !3708, discriminator: 0)
!3708 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3709 = distinct !DISubprogram(name: "main", scope: !107, file: !107, line: 17, type: !3598, scopeLine: 18, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3710)
!3710 = !{!3711}
!3711 = !DILocalVariable(name: "p", scope: !3709, file: !107, line: 19, type: !102)
!3712 = !DILocation(line: 21, column: 2, scope: !3709)
!3713 = !DILocation(line: 23, column: 2, scope: !3709)
!3714 = !DILocation(line: 24, column: 2, scope: !3709)
!3715 = !DILocation(line: 26, column: 6, scope: !3709)
!3716 = !DILocation(line: 0, scope: !3709)
!3717 = !DILocation(line: 27, column: 2, scope: !3709)
!3718 = !DILocation(line: 29, column: 6, scope: !3709)
!3719 = !DILocation(line: 30, column: 2, scope: !3709)
!3720 = !DILocation(line: 32, column: 2, scope: !3709)
!3721 = !DILocation(line: 33, column: 2, scope: !3709)
!3722 = !DILocation(line: 34, column: 1, scope: !3709)
!3723 = distinct !DISubprogram(name: "print_sys_memory_stats", scope: !107, file: !107, line: 36, type: !3598, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3724)
!3724 = !{!3725}
!3725 = !DILocalVariable(name: "stats", scope: !3723, file: !107, line: 38, type: !3726)
!3726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_memory_stats", file: !3727, line: 24, size: 96, elements: !3728)
!3727 = !DIFile(filename: "zephyr/include/zephyr/sys/mem_stats.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3728 = !{!3729, !3730, !3731}
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "free_bytes", scope: !3726, file: !3727, line: 25, baseType: !120, size: 32)
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "allocated_bytes", scope: !3726, file: !3727, line: 26, baseType: !120, size: 32, offset: 32)
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "max_allocated_bytes", scope: !3726, file: !3727, line: 27, baseType: !120, size: 32, offset: 64)
!3732 = !DILocation(line: 38, column: 2, scope: !3723)
!3733 = !DILocation(line: 38, column: 26, scope: !3723)
!3734 = !DILocation(line: 40, column: 2, scope: !3723)
!3735 = !DILocation(line: 43, column: 9, scope: !3723)
!3736 = !DILocation(line: 43, column: 32, scope: !3723)
!3737 = !DILocation(line: 44, column: 9, scope: !3723)
!3738 = !DILocation(line: 42, column: 2, scope: !3723)
!3739 = !DILocation(line: 45, column: 1, scope: !3723)
!3740 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !127, file: !127, line: 45, type: !129, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !3741)
!3741 = !{!3742}
!3742 = !DILocalVariable(name: "c", arg: 1, scope: !3740, file: !127, line: 45, type: !103)
!3743 = !DILocation(line: 0, scope: !3740)
!3744 = !DILocation(line: 50, column: 2, scope: !3740)
!3745 = distinct !DISubprogram(name: "__printk_hook_install", scope: !127, file: !127, line: 63, type: !3746, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !3748)
!3746 = !DISubroutineType(types: !3747)
!3747 = !{null, !128}
!3748 = !{!3749}
!3749 = !DILocalVariable(name: "fn", arg: 1, scope: !3745, file: !127, line: 63, type: !128)
!3750 = !DILocation(line: 0, scope: !3745)
!3751 = !DILocation(line: 65, column: 12, scope: !3745)
!3752 = !DILocation(line: 66, column: 1, scope: !3745)
!3753 = distinct !DISubprogram(name: "__printk_get_hook", scope: !127, file: !127, line: 76, type: !3754, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !162)
!3754 = !DISubroutineType(types: !3755)
!3755 = !{!102}
!3756 = !DILocation(line: 78, column: 9, scope: !3753)
!3757 = !DILocation(line: 78, column: 2, scope: !3753)
!3758 = distinct !DISubprogram(name: "vprintk", scope: !127, file: !127, line: 113, type: !3759, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !3768)
!3759 = !DISubroutineType(types: !3760)
!3760 = !{null, !721, !3761}
!3761 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3762, line: 99, baseType: !3763)
!3762 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3763 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3762, line: 40, baseType: !3764)
!3764 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !127, baseType: !3765)
!3765 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3766)
!3766 = !{!3767}
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3765, file: !127, line: 79, baseType: !102, size: 32)
!3768 = !{!3769, !3770, !3771}
!3769 = !DILocalVariable(name: "fmt", arg: 1, scope: !3758, file: !127, line: 113, type: !721)
!3770 = !DILocalVariable(name: "ap", arg: 2, scope: !3758, file: !127, line: 113, type: !3761)
!3771 = !DILocalVariable(name: "ctx", scope: !3772, file: !127, line: 121, type: !3774)
!3772 = distinct !DILexicalBlock(scope: !3773, file: !127, line: 120, column: 27)
!3773 = distinct !DILexicalBlock(scope: !3758, file: !127, line: 120, column: 6)
!3774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !127, line: 81, size: 32, elements: !3775)
!3775 = !{!3776, !3777}
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !3774, file: !127, line: 85, baseType: !32, size: 32)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3774, file: !127, line: 86, baseType: !3778, offset: 32)
!3778 = !DICompositeType(tag: DW_TAG_array_type, baseType: !109, elements: !878)
!3779 = !DILocation(line: 0, scope: !3758)
!3780 = !DILocation(line: 148, column: 3, scope: !3781)
!3781 = distinct !DILexicalBlock(scope: !3773, file: !127, line: 138, column: 9)
!3782 = !DILocation(line: 155, column: 1, scope: !3758)
!3783 = distinct !DISubprogram(name: "char_out", scope: !127, file: !127, line: 107, type: !3784, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !3786)
!3784 = !DISubroutineType(types: !3785)
!3785 = !{!103, !103, !102}
!3786 = !{!3787, !3788}
!3787 = !DILocalVariable(name: "c", arg: 1, scope: !3783, file: !127, line: 107, type: !103)
!3788 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !3783, file: !127, line: 107, type: !102)
!3789 = !DILocation(line: 0, scope: !3783)
!3790 = !DILocation(line: 110, column: 9, scope: !3783)
!3791 = !DILocation(line: 110, column: 2, scope: !3783)
!3792 = distinct !DISubprogram(name: "cbvprintf", scope: !3793, file: !3793, line: 739, type: !3794, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !3800)
!3793 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3794 = !DISubroutineType(types: !3795)
!3795 = !{!103, !3796, !102, !721, !3761}
!3796 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3793, line: 297, baseType: !3797)
!3797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3798, size: 32)
!3798 = !DISubroutineType(types: !3799)
!3799 = !{!103, null}
!3800 = !{!3801, !3802, !3803, !3804}
!3801 = !DILocalVariable(name: "out", arg: 1, scope: !3792, file: !3793, line: 739, type: !3796)
!3802 = !DILocalVariable(name: "ctx", arg: 2, scope: !3792, file: !3793, line: 739, type: !102)
!3803 = !DILocalVariable(name: "format", arg: 3, scope: !3792, file: !3793, line: 739, type: !721)
!3804 = !DILocalVariable(name: "ap", arg: 4, scope: !3792, file: !3793, line: 739, type: !3761)
!3805 = !DILocation(line: 0, scope: !3792)
!3806 = !DILocation(line: 741, column: 9, scope: !3792)
!3807 = !DILocation(line: 741, column: 2, scope: !3792)
!3808 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !127, file: !127, line: 157, type: !3809, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !3811)
!3809 = !DISubroutineType(types: !3810)
!3810 = !{null, !2684, !120}
!3811 = !{!3812, !3813, !3814}
!3812 = !DILocalVariable(name: "c", arg: 1, scope: !3808, file: !127, line: 157, type: !2684)
!3813 = !DILocalVariable(name: "n", arg: 2, scope: !3808, file: !127, line: 157, type: !120)
!3814 = !DILocalVariable(name: "i", scope: !3808, file: !127, line: 159, type: !120)
!3815 = !DILocation(line: 0, scope: !3808)
!3816 = !DILocation(line: 164, column: 16, scope: !3817)
!3817 = distinct !DILexicalBlock(scope: !3818, file: !127, line: 164, column: 2)
!3818 = distinct !DILexicalBlock(scope: !3808, file: !127, line: 164, column: 2)
!3819 = !DILocation(line: 164, column: 2, scope: !3818)
!3820 = !DILocation(line: 165, column: 3, scope: !3821)
!3821 = distinct !DILexicalBlock(scope: !3817, file: !127, line: 164, column: 26)
!3822 = !DILocation(line: 165, column: 13, scope: !3821)
!3823 = !DILocation(line: 164, column: 22, scope: !3817)
!3824 = distinct !{!3824, !3819, !3825}
!3825 = !DILocation(line: 166, column: 2, scope: !3818)
!3826 = !DILocation(line: 171, column: 1, scope: !3808)
!3827 = distinct !DISubprogram(name: "printk", scope: !127, file: !127, line: 203, type: !3828, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !3830)
!3828 = !DISubroutineType(types: !3829)
!3829 = !{null, !721, null}
!3830 = !{!3831, !3832}
!3831 = !DILocalVariable(name: "fmt", arg: 1, scope: !3827, file: !127, line: 203, type: !721)
!3832 = !DILocalVariable(name: "ap", scope: !3827, file: !127, line: 205, type: !3761)
!3833 = !DILocation(line: 0, scope: !3827)
!3834 = !DILocation(line: 205, column: 2, scope: !3827)
!3835 = !DILocation(line: 205, column: 10, scope: !3827)
!3836 = !DILocation(line: 207, column: 2, scope: !3827)
!3837 = !DILocation(line: 209, column: 2, scope: !3827)
!3838 = !DILocation(line: 211, column: 2, scope: !3827)
!3839 = !DILocation(line: 212, column: 1, scope: !3827)
!3840 = distinct !DISubprogram(name: "snprintk", scope: !127, file: !127, line: 239, type: !3841, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !3843)
!3841 = !DISubroutineType(types: !3842)
!3842 = !{!103, !2684, !120, !721, null}
!3843 = !{!3844, !3845, !3846, !3847, !3848}
!3844 = !DILocalVariable(name: "str", arg: 1, scope: !3840, file: !127, line: 239, type: !2684)
!3845 = !DILocalVariable(name: "size", arg: 2, scope: !3840, file: !127, line: 239, type: !120)
!3846 = !DILocalVariable(name: "fmt", arg: 3, scope: !3840, file: !127, line: 239, type: !721)
!3847 = !DILocalVariable(name: "ap", scope: !3840, file: !127, line: 241, type: !3761)
!3848 = !DILocalVariable(name: "ret", scope: !3840, file: !127, line: 242, type: !103)
!3849 = !DILocation(line: 0, scope: !3840)
!3850 = !DILocation(line: 241, column: 2, scope: !3840)
!3851 = !DILocation(line: 241, column: 10, scope: !3840)
!3852 = !DILocation(line: 244, column: 2, scope: !3840)
!3853 = !DILocation(line: 245, column: 8, scope: !3840)
!3854 = !DILocation(line: 246, column: 2, scope: !3840)
!3855 = !DILocation(line: 249, column: 1, scope: !3840)
!3856 = !DILocation(line: 248, column: 2, scope: !3840)
!3857 = distinct !DISubprogram(name: "vsnprintk", scope: !127, file: !127, line: 251, type: !3858, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !3860)
!3858 = !DISubroutineType(types: !3859)
!3859 = !{!103, !2684, !120, !721, !3761}
!3860 = !{!3861, !3862, !3863, !3864, !3865}
!3861 = !DILocalVariable(name: "str", arg: 1, scope: !3857, file: !127, line: 251, type: !2684)
!3862 = !DILocalVariable(name: "size", arg: 2, scope: !3857, file: !127, line: 251, type: !120)
!3863 = !DILocalVariable(name: "fmt", arg: 3, scope: !3857, file: !127, line: 251, type: !721)
!3864 = !DILocalVariable(name: "ap", arg: 4, scope: !3857, file: !127, line: 251, type: !3761)
!3865 = !DILocalVariable(name: "ctx", scope: !3857, file: !127, line: 253, type: !3866)
!3866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !127, line: 217, size: 96, elements: !3867)
!3867 = !{!3868, !3869, !3870}
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !3866, file: !127, line: 218, baseType: !2684, size: 32)
!3869 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3866, file: !127, line: 219, baseType: !103, size: 32, offset: 32)
!3870 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3866, file: !127, line: 220, baseType: !103, size: 32, offset: 64)
!3871 = !DILocation(line: 0, scope: !3857)
!3872 = !DILocation(line: 253, column: 2, scope: !3857)
!3873 = !DILocation(line: 253, column: 21, scope: !3857)
!3874 = !DILocation(line: 253, column: 27, scope: !3857)
!3875 = !DILocation(line: 255, column: 2, scope: !3857)
!3876 = !DILocation(line: 257, column: 10, scope: !3877)
!3877 = distinct !DILexicalBlock(scope: !3857, file: !127, line: 257, column: 6)
!3878 = !DILocation(line: 257, column: 22, scope: !3877)
!3879 = !DILocation(line: 257, column: 16, scope: !3877)
!3880 = !DILocation(line: 257, column: 6, scope: !3857)
!3881 = !DILocation(line: 258, column: 3, scope: !3882)
!3882 = distinct !DILexicalBlock(scope: !3877, file: !127, line: 257, column: 27)
!3883 = !DILocation(line: 258, column: 18, scope: !3882)
!3884 = !DILocation(line: 259, column: 2, scope: !3882)
!3885 = !DILocation(line: 262, column: 1, scope: !3857)
!3886 = !DILocation(line: 261, column: 2, scope: !3857)
!3887 = distinct !DISubprogram(name: "str_out", scope: !127, file: !127, line: 223, type: !3888, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !3891)
!3888 = !DISubroutineType(types: !3889)
!3889 = !{!103, !103, !3890}
!3890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3866, size: 32)
!3891 = !{!3892, !3893}
!3892 = !DILocalVariable(name: "c", arg: 1, scope: !3887, file: !127, line: 223, type: !103)
!3893 = !DILocalVariable(name: "ctx", arg: 2, scope: !3887, file: !127, line: 223, type: !3890)
!3894 = !DILocation(line: 0, scope: !3887)
!3895 = !DILocation(line: 225, column: 11, scope: !3896)
!3896 = distinct !DILexicalBlock(scope: !3887, file: !127, line: 225, column: 6)
!3897 = !DILocation(line: 225, column: 15, scope: !3896)
!3898 = !DILocation(line: 0, scope: !3896)
!3899 = !DILocation(line: 225, column: 23, scope: !3896)
!3900 = !DILocation(line: 225, column: 45, scope: !3896)
!3901 = !DILocation(line: 225, column: 37, scope: !3896)
!3902 = !DILocation(line: 225, column: 6, scope: !3887)
!3903 = !DILocation(line: 226, column: 8, scope: !3904)
!3904 = distinct !DILexicalBlock(scope: !3896, file: !127, line: 225, column: 50)
!3905 = !DILocation(line: 226, column: 13, scope: !3904)
!3906 = !DILocation(line: 227, column: 3, scope: !3904)
!3907 = !DILocation(line: 230, column: 29, scope: !3908)
!3908 = distinct !DILexicalBlock(scope: !3887, file: !127, line: 230, column: 6)
!3909 = !DILocation(line: 230, column: 17, scope: !3908)
!3910 = !DILocation(line: 230, column: 6, scope: !3887)
!3911 = !DILocation(line: 231, column: 22, scope: !3912)
!3912 = distinct !DILexicalBlock(scope: !3908, file: !127, line: 230, column: 34)
!3913 = !DILocation(line: 231, column: 3, scope: !3912)
!3914 = !DILocation(line: 231, column: 26, scope: !3912)
!3915 = !DILocation(line: 232, column: 2, scope: !3912)
!3916 = !DILocation(line: 233, column: 28, scope: !3917)
!3917 = distinct !DILexicalBlock(scope: !3908, file: !127, line: 232, column: 9)
!3918 = !DILocation(line: 233, column: 22, scope: !3917)
!3919 = !DILocation(line: 233, column: 3, scope: !3917)
!3920 = !DILocation(line: 233, column: 26, scope: !3917)
!3921 = !DILocation(line: 237, column: 1, scope: !3887)
!3922 = distinct !DISubprogram(name: "z_thread_entry", scope: !3923, file: !3923, line: 30, type: !3924, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3181, retainedNodes: !3931)
!3923 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3924 = !DISubroutineType(types: !3925)
!3925 = !{null, !3926, !102, !102, !102}
!3926 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !3927, line: 46, baseType: !3928)
!3927 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3929, size: 32)
!3929 = !DISubroutineType(types: !3930)
!3930 = !{null, !102, !102, !102}
!3931 = !{!3932, !3933, !3934, !3935}
!3932 = !DILocalVariable(name: "entry", arg: 1, scope: !3922, file: !3923, line: 30, type: !3926)
!3933 = !DILocalVariable(name: "p1", arg: 2, scope: !3922, file: !3923, line: 31, type: !102)
!3934 = !DILocalVariable(name: "p2", arg: 3, scope: !3922, file: !3923, line: 31, type: !102)
!3935 = !DILocalVariable(name: "p3", arg: 4, scope: !3922, file: !3923, line: 31, type: !102)
!3936 = !DILocation(line: 0, scope: !3922)
!3937 = !DILocation(line: 36, column: 2, scope: !3922)
!3938 = !DILocation(line: 38, column: 17, scope: !3922)
!3939 = !DILocation(line: 38, column: 2, scope: !3922)
!3940 = !DILocation(line: 45, column: 2, scope: !3922)
!3941 = distinct !DISubprogram(name: "k_current_get", scope: !846, file: !846, line: 530, type: !3942, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3181, retainedNodes: !162)
!3942 = !DISubroutineType(types: !3943)
!3943 = !{!3944}
!3944 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !754, line: 347, baseType: !3945)
!3945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3946, size: 32)
!3946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !754, line: 245, size: 1024, elements: !3947)
!3947 = !{!3948, !4006, !4018, !4019, !4020, !4021, !4027, !4040}
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3946, file: !754, line: 247, baseType: !3949, size: 384)
!3949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !754, line: 57, size: 384, elements: !3950)
!3950 = !{!3951, !3975, !3982, !3983, !3984, !3993, !3994, !3995}
!3951 = !DIDerivedType(tag: DW_TAG_member, scope: !3949, file: !754, line: 60, baseType: !3952, size: 64)
!3952 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3949, file: !754, line: 60, size: 64, elements: !3953)
!3953 = !{!3954, !3969}
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3952, file: !754, line: 61, baseType: !3955, size: 64)
!3955 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !764, line: 49, baseType: !3956)
!3956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !764, line: 37, size: 64, elements: !3957)
!3957 = !{!3958, !3964}
!3958 = !DIDerivedType(tag: DW_TAG_member, scope: !3956, file: !764, line: 38, baseType: !3959, size: 32)
!3959 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3956, file: !764, line: 38, size: 32, elements: !3960)
!3960 = !{!3961, !3963}
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3959, file: !764, line: 39, baseType: !3962, size: 32)
!3962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3956, size: 32)
!3963 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3959, file: !764, line: 40, baseType: !3962, size: 32)
!3964 = !DIDerivedType(tag: DW_TAG_member, scope: !3956, file: !764, line: 42, baseType: !3965, size: 32, offset: 32)
!3965 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3956, file: !764, line: 42, size: 32, elements: !3966)
!3966 = !{!3967, !3968}
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3965, file: !764, line: 43, baseType: !3962, size: 32)
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3965, file: !764, line: 44, baseType: !3962, size: 32)
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3952, file: !754, line: 62, baseType: !3970, size: 64)
!3970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !780, line: 49, size: 64, elements: !3971)
!3971 = !{!3972}
!3972 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3970, file: !780, line: 50, baseType: !3973, size: 64)
!3973 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3974, size: 64, elements: !564)
!3974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3970, size: 32)
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3949, file: !754, line: 68, baseType: !3976, size: 32, offset: 64)
!3976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3977, size: 32)
!3977 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !788, line: 233, baseType: !3978)
!3978 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !788, line: 231, size: 64, elements: !3979)
!3979 = !{!3980}
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3978, file: !788, line: 232, baseType: !3981, size: 64)
!3981 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !764, line: 48, baseType: !3956)
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3949, file: !754, line: 71, baseType: !240, size: 8, offset: 96)
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3949, file: !754, line: 74, baseType: !240, size: 8, offset: 104)
!3984 = !DIDerivedType(tag: DW_TAG_member, scope: !3949, file: !754, line: 90, baseType: !3985, size: 16, offset: 112)
!3985 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3949, file: !754, line: 90, size: 16, elements: !3986)
!3986 = !{!3987, !3992}
!3987 = !DIDerivedType(tag: DW_TAG_member, scope: !3985, file: !754, line: 91, baseType: !3988, size: 16)
!3988 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3985, file: !754, line: 91, size: 16, elements: !3989)
!3989 = !{!3990, !3991}
!3990 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3988, file: !754, line: 96, baseType: !802, size: 8)
!3991 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3988, file: !754, line: 97, baseType: !240, size: 8, offset: 8)
!3992 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3985, file: !754, line: 100, baseType: !151, size: 16)
!3993 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3949, file: !754, line: 107, baseType: !137, size: 32, offset: 128)
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3949, file: !754, line: 127, baseType: !102, size: 32, offset: 160)
!3995 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3949, file: !754, line: 131, baseType: !3996, size: 192, offset: 192)
!3996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !788, line: 244, size: 192, elements: !3997)
!3997 = !{!3998, !3999, !4005}
!3998 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3996, file: !788, line: 245, baseType: !3955, size: 64)
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3996, file: !788, line: 246, baseType: !4000, size: 32, offset: 64)
!4000 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !788, line: 242, baseType: !4001)
!4001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4002, size: 32)
!4002 = !DISubroutineType(types: !4003)
!4003 = !{null, !4004}
!4004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3996, size: 32)
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3996, file: !788, line: 249, baseType: !819, size: 64, offset: 128)
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3946, file: !754, line: 250, baseType: !4007, size: 288, offset: 384)
!4007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !823, line: 25, size: 288, elements: !4008)
!4008 = !{!4009, !4010, !4011, !4012, !4013, !4014, !4015, !4016, !4017}
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4007, file: !823, line: 26, baseType: !137, size: 32)
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4007, file: !823, line: 27, baseType: !137, size: 32, offset: 32)
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4007, file: !823, line: 28, baseType: !137, size: 32, offset: 64)
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4007, file: !823, line: 29, baseType: !137, size: 32, offset: 96)
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4007, file: !823, line: 30, baseType: !137, size: 32, offset: 128)
!4014 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4007, file: !823, line: 31, baseType: !137, size: 32, offset: 160)
!4015 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4007, file: !823, line: 32, baseType: !137, size: 32, offset: 192)
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4007, file: !823, line: 33, baseType: !137, size: 32, offset: 224)
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4007, file: !823, line: 34, baseType: !137, size: 32, offset: 256)
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3946, file: !754, line: 253, baseType: !102, size: 32, offset: 672)
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3946, file: !754, line: 256, baseType: !3977, size: 64, offset: 704)
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3946, file: !754, line: 294, baseType: !103, size: 32, offset: 768)
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3946, file: !754, line: 300, baseType: !4022, size: 96, offset: 800)
!4022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !754, line: 149, size: 96, elements: !4023)
!4023 = !{!4024, !4025, !4026}
!4024 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4022, file: !754, line: 153, baseType: !22, size: 32)
!4025 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4022, file: !754, line: 162, baseType: !120, size: 32, offset: 32)
!4026 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !4022, file: !754, line: 168, baseType: !120, size: 32, offset: 64)
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3946, file: !754, line: 325, baseType: !4028, size: 32, offset: 896)
!4028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4029, size: 32)
!4029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !846, line: 5073, size: 160, elements: !4030)
!4030 = !{!4031, !4037, !4038}
!4031 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4029, file: !846, line: 5074, baseType: !4032, size: 96)
!4032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !4033)
!4033 = !{!4034, !4035, !4036}
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4032, file: !113, line: 57, baseType: !116, size: 32)
!4035 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4032, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!4036 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4032, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !4029, file: !846, line: 5075, baseType: !3977, size: 64, offset: 96)
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4029, file: !846, line: 5076, baseType: !4039, offset: 160)
!4039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !857, line: 43, elements: !162)
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3946, file: !754, line: 343, baseType: !4041, size: 64, offset: 928)
!4041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !823, line: 60, size: 64, elements: !4042)
!4042 = !{!4043, !4044}
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !4041, file: !823, line: 63, baseType: !137, size: 32)
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !4041, file: !823, line: 66, baseType: !137, size: 32, offset: 32)
!4045 = !DILocation(line: 535, column: 9, scope: !3941)
!4046 = !DILocation(line: 535, column: 2, scope: !3941)
!4047 = distinct !DISubprogram(name: "k_thread_abort", scope: !4048, file: !4048, line: 188, type: !4049, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3181, retainedNodes: !4051)
!4048 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/basic/sys_heap")
!4049 = !DISubroutineType(types: !4050)
!4050 = !{null, !3944}
!4051 = !{!4052}
!4052 = !DILocalVariable(name: "thread", arg: 1, scope: !4047, file: !4048, line: 188, type: !3944)
!4053 = !DILocation(line: 0, scope: !4047)
!4054 = !DILocation(line: 197, column: 2, scope: !4055)
!4055 = distinct !DILexicalBlock(scope: !4047, file: !4048, line: 197, column: 2)
!4056 = !{i64 2152640837}
!4057 = !DILocation(line: 198, column: 2, scope: !4047)
!4058 = !DILocation(line: 199, column: 1, scope: !4047)
!4059 = distinct !DISubprogram(name: "z_current_get", scope: !4048, file: !4048, line: 173, type: !3942, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3181, retainedNodes: !162)
!4060 = !DILocation(line: 180, column: 2, scope: !4061)
!4061 = distinct !DILexicalBlock(scope: !4059, file: !4048, line: 180, column: 2)
!4062 = !{i64 2152640769}
!4063 = !DILocation(line: 181, column: 9, scope: !4059)
!4064 = !DILocation(line: 181, column: 2, scope: !4059)
!4065 = distinct !DISubprogram(name: "sys_heap_free", scope: !4066, file: !4066, line: 163, type: !4067, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3183, retainedNodes: !4075)
!4066 = !DIFile(filename: "zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4067 = !DISubroutineType(types: !4068)
!4068 = !{null, !4069, !102}
!4069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4070, size: 32)
!4070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !4071)
!4071 = !{!4072, !4073, !4074}
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4070, file: !113, line: 57, baseType: !3191, size: 32)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4070, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4070, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!4075 = !{!4076, !4077, !4078, !4079}
!4076 = !DILocalVariable(name: "heap", arg: 1, scope: !4065, file: !4066, line: 163, type: !4069)
!4077 = !DILocalVariable(name: "mem", arg: 2, scope: !4065, file: !4066, line: 163, type: !102)
!4078 = !DILocalVariable(name: "h", scope: !4065, file: !4066, line: 168, type: !3191)
!4079 = !DILocalVariable(name: "c", scope: !4065, file: !4066, line: 169, type: !3196)
!4080 = !DILocation(line: 0, scope: !4065)
!4081 = !DILocation(line: 165, column: 10, scope: !4082)
!4082 = distinct !DILexicalBlock(scope: !4065, file: !4066, line: 165, column: 6)
!4083 = !DILocation(line: 165, column: 6, scope: !4065)
!4084 = !DILocation(line: 168, column: 27, scope: !4065)
!4085 = !DILocation(line: 169, column: 16, scope: !4065)
!4086 = !{i32 0, i32 536870912}
!4087 = !DILocation(line: 187, column: 2, scope: !4065)
!4088 = !DILocation(line: 189, column: 44, scope: !4065)
!4089 = !{i32 0, i32 32768}
!4090 = !DILocation(line: 189, column: 24, scope: !4065)
!4091 = !DILocation(line: 189, column: 5, scope: !4065)
!4092 = !DILocation(line: 189, column: 21, scope: !4065)
!4093 = !DILocation(line: 197, column: 2, scope: !4065)
!4094 = !DILocation(line: 198, column: 1, scope: !4065)
!4095 = distinct !DISubprogram(name: "mem_to_chunkid", scope: !4066, file: !4066, line: 157, type: !4096, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3183, retainedNodes: !4098)
!4096 = !DISubroutineType(types: !4097)
!4097 = !{!3196, !3191, !102}
!4098 = !{!4099, !4100, !4101, !4102}
!4099 = !DILocalVariable(name: "h", arg: 1, scope: !4095, file: !4066, line: 157, type: !3191)
!4100 = !DILocalVariable(name: "p", arg: 2, scope: !4095, file: !4066, line: 157, type: !102)
!4101 = !DILocalVariable(name: "mem", scope: !4095, file: !4066, line: 159, type: !1566)
!4102 = !DILocalVariable(name: "base", scope: !4095, file: !4066, line: 159, type: !1566)
!4103 = !DILocation(line: 0, scope: !4095)
!4104 = !DILocation(line: 159, column: 39, scope: !4095)
!4105 = !DILocation(line: 160, column: 14, scope: !4095)
!4106 = !DILocation(line: 160, column: 38, scope: !4095)
!4107 = !DILocation(line: 160, column: 46, scope: !4095)
!4108 = !DILocation(line: 160, column: 2, scope: !4095)
!4109 = distinct !DISubprogram(name: "set_chunk_used", scope: !142, file: !142, line: 147, type: !4110, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3183, retainedNodes: !4112)
!4110 = !DISubroutineType(types: !4111)
!4111 = !{null, !3191, !3196, !731}
!4112 = !{!4113, !4114, !4115, !4116, !4117}
!4113 = !DILocalVariable(name: "h", arg: 1, scope: !4109, file: !142, line: 147, type: !3191)
!4114 = !DILocalVariable(name: "c", arg: 2, scope: !4109, file: !142, line: 147, type: !3196)
!4115 = !DILocalVariable(name: "used", arg: 3, scope: !4109, file: !142, line: 147, type: !731)
!4116 = !DILocalVariable(name: "buf", scope: !4109, file: !142, line: 149, type: !3186)
!4117 = !DILocalVariable(name: "cmem", scope: !4109, file: !142, line: 150, type: !102)
!4118 = !DILocation(line: 0, scope: !4109)
!4119 = !DILocation(line: 149, column: 22, scope: !4109)
!4120 = !DILocation(line: 0, scope: !4121)
!4121 = distinct !DILexicalBlock(scope: !4122, file: !142, line: 159, column: 7)
!4122 = distinct !DILexicalBlock(scope: !4123, file: !142, line: 158, column: 9)
!4123 = distinct !DILexicalBlock(scope: !4109, file: !142, line: 152, column: 6)
!4124 = !DILocation(line: 159, column: 7, scope: !4122)
!4125 = !DILocation(line: 165, column: 1, scope: !4109)
!4126 = distinct !DISubprogram(name: "chunk_size", scope: !142, file: !142, line: 142, type: !4127, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3183, retainedNodes: !4130)
!4127 = !DISubroutineType(types: !4128)
!4128 = !{!4129, !3191, !3196}
!4129 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunksz_t", file: !142, line: 62, baseType: !137)
!4130 = !{!4131, !4132}
!4131 = !DILocalVariable(name: "h", arg: 1, scope: !4126, file: !142, line: 142, type: !3191)
!4132 = !DILocalVariable(name: "c", arg: 2, scope: !4126, file: !142, line: 142, type: !3196)
!4133 = !DILocation(line: 0, scope: !4126)
!4134 = !DILocation(line: 144, column: 9, scope: !4126)
!4135 = !DILocation(line: 144, column: 42, scope: !4126)
!4136 = !DILocation(line: 144, column: 2, scope: !4126)
!4137 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !142, file: !142, line: 245, type: !4138, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3183, retainedNodes: !4140)
!4138 = !DISubroutineType(types: !4139)
!4139 = !{!120, !3191, !4129}
!4140 = !{!4141, !4142}
!4141 = !DILocalVariable(name: "h", arg: 1, scope: !4137, file: !142, line: 245, type: !3191)
!4142 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !4137, file: !142, line: 245, type: !4129)
!4143 = !DILocation(line: 0, scope: !4137)
!4144 = !DILocation(line: 247, column: 20, scope: !4137)
!4145 = !DILocation(line: 247, column: 33, scope: !4137)
!4146 = !DILocation(line: 247, column: 2, scope: !4137)
!4147 = distinct !DISubprogram(name: "free_chunk", scope: !4066, file: !4066, line: 133, type: !4148, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3183, retainedNodes: !4150)
!4148 = !DISubroutineType(types: !4149)
!4149 = !{null, !3191, !3196}
!4150 = !{!4151, !4152}
!4151 = !DILocalVariable(name: "h", arg: 1, scope: !4147, file: !4066, line: 133, type: !3191)
!4152 = !DILocalVariable(name: "c", arg: 2, scope: !4147, file: !4066, line: 133, type: !3196)
!4153 = !DILocation(line: 0, scope: !4147)
!4154 = !DILocation(line: 136, column: 21, scope: !4155)
!4155 = distinct !DILexicalBlock(scope: !4147, file: !4066, line: 136, column: 6)
!4156 = !DILocation(line: 136, column: 7, scope: !4155)
!4157 = !DILocation(line: 136, column: 6, scope: !4147)
!4158 = !DILocation(line: 137, column: 3, scope: !4159)
!4159 = distinct !DILexicalBlock(scope: !4155, file: !4066, line: 136, column: 41)
!4160 = !DILocation(line: 138, column: 22, scope: !4159)
!4161 = !DILocation(line: 138, column: 3, scope: !4159)
!4162 = !DILocation(line: 139, column: 2, scope: !4159)
!4163 = !DILocation(line: 142, column: 21, scope: !4164)
!4164 = distinct !DILexicalBlock(scope: !4147, file: !4066, line: 142, column: 6)
!4165 = !{i32 -65535, i32 536903678}
!4166 = !DILocation(line: 142, column: 7, scope: !4164)
!4167 = !DILocation(line: 142, column: 6, scope: !4147)
!4168 = !DILocation(line: 143, column: 3, scope: !4169)
!4169 = distinct !DILexicalBlock(scope: !4164, file: !4066, line: 142, column: 40)
!4170 = !DILocation(line: 144, column: 19, scope: !4169)
!4171 = !DILocation(line: 144, column: 3, scope: !4169)
!4172 = !DILocation(line: 145, column: 7, scope: !4169)
!4173 = !DILocation(line: 146, column: 2, scope: !4169)
!4174 = !DILocation(line: 148, column: 2, scope: !4147)
!4175 = !DILocation(line: 149, column: 1, scope: !4147)
!4176 = distinct !DISubprogram(name: "right_chunk", scope: !142, file: !142, line: 204, type: !4177, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3183, retainedNodes: !4179)
!4177 = !DISubroutineType(types: !4178)
!4178 = !{!3196, !3191, !3196}
!4179 = !{!4180, !4181}
!4180 = !DILocalVariable(name: "h", arg: 1, scope: !4176, file: !142, line: 204, type: !3191)
!4181 = !DILocalVariable(name: "c", arg: 2, scope: !4176, file: !142, line: 204, type: !3196)
!4182 = !DILocation(line: 0, scope: !4176)
!4183 = !DILocation(line: 206, column: 13, scope: !4176)
!4184 = !DILocation(line: 206, column: 11, scope: !4176)
!4185 = !DILocation(line: 206, column: 2, scope: !4176)
!4186 = distinct !DISubprogram(name: "chunk_used", scope: !142, file: !142, line: 137, type: !4187, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3183, retainedNodes: !4189)
!4187 = !DISubroutineType(types: !4188)
!4188 = !{!731, !3191, !3196}
!4189 = !{!4190, !4191}
!4190 = !DILocalVariable(name: "h", arg: 1, scope: !4186, file: !142, line: 137, type: !3191)
!4191 = !DILocalVariable(name: "c", arg: 2, scope: !4186, file: !142, line: 137, type: !3196)
!4192 = !DILocation(line: 0, scope: !4186)
!4193 = !DILocation(line: 139, column: 9, scope: !4186)
!4194 = !DILocation(line: 139, column: 42, scope: !4186)
!4195 = !DILocation(line: 139, column: 2, scope: !4186)
!4196 = distinct !DISubprogram(name: "free_list_remove", scope: !4066, file: !4066, line: 60, type: !4148, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3183, retainedNodes: !4197)
!4197 = !{!4198, !4199, !4200}
!4198 = !DILocalVariable(name: "h", arg: 1, scope: !4196, file: !4066, line: 60, type: !3191)
!4199 = !DILocalVariable(name: "c", arg: 2, scope: !4196, file: !4066, line: 60, type: !3196)
!4200 = !DILocalVariable(name: "bidx", scope: !4201, file: !4066, line: 63, type: !103)
!4201 = distinct !DILexicalBlock(scope: !4202, file: !4066, line: 62, column: 31)
!4202 = distinct !DILexicalBlock(scope: !4196, file: !4066, line: 62, column: 6)
!4203 = !DILocation(line: 0, scope: !4196)
!4204 = !DILocation(line: 63, column: 28, scope: !4201)
!4205 = !DILocation(line: 63, column: 14, scope: !4201)
!4206 = !DILocation(line: 0, scope: !4201)
!4207 = !DILocation(line: 64, column: 3, scope: !4201)
!4208 = !DILocation(line: 66, column: 1, scope: !4196)
!4209 = distinct !DISubprogram(name: "merge_chunks", scope: !4066, file: !4066, line: 125, type: !4210, scopeLine: 126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3183, retainedNodes: !4212)
!4210 = !DISubroutineType(types: !4211)
!4211 = !{null, !3191, !3196, !3196}
!4212 = !{!4213, !4214, !4215, !4216}
!4213 = !DILocalVariable(name: "h", arg: 1, scope: !4209, file: !4066, line: 125, type: !3191)
!4214 = !DILocalVariable(name: "lc", arg: 2, scope: !4209, file: !4066, line: 125, type: !3196)
!4215 = !DILocalVariable(name: "rc", arg: 3, scope: !4209, file: !4066, line: 125, type: !3196)
!4216 = !DILocalVariable(name: "newsz", scope: !4209, file: !4066, line: 127, type: !4129)
!4217 = !DILocation(line: 0, scope: !4209)
!4218 = !DILocation(line: 127, column: 20, scope: !4209)
!4219 = !DILocation(line: 127, column: 40, scope: !4209)
!4220 = !DILocation(line: 127, column: 38, scope: !4209)
!4221 = !DILocation(line: 129, column: 2, scope: !4209)
!4222 = !DILocation(line: 130, column: 25, scope: !4209)
!4223 = !DILocation(line: 130, column: 2, scope: !4209)
!4224 = !DILocation(line: 131, column: 1, scope: !4209)
!4225 = distinct !DISubprogram(name: "left_chunk", scope: !142, file: !142, line: 199, type: !4177, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3183, retainedNodes: !4226)
!4226 = !{!4227, !4228}
!4227 = !DILocalVariable(name: "h", arg: 1, scope: !4225, file: !142, line: 199, type: !3191)
!4228 = !DILocalVariable(name: "c", arg: 2, scope: !4225, file: !142, line: 199, type: !3196)
!4229 = !DILocation(line: 0, scope: !4225)
!4230 = !DILocation(line: 201, column: 13, scope: !4225)
!4231 = !DILocation(line: 201, column: 11, scope: !4225)
!4232 = !DILocation(line: 201, column: 2, scope: !4225)
!4233 = distinct !DISubprogram(name: "free_list_add", scope: !4066, file: !4066, line: 98, type: !4148, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3183, retainedNodes: !4234)
!4234 = !{!4235, !4236, !4237}
!4235 = !DILocalVariable(name: "h", arg: 1, scope: !4233, file: !4066, line: 98, type: !3191)
!4236 = !DILocalVariable(name: "c", arg: 2, scope: !4233, file: !4066, line: 98, type: !3196)
!4237 = !DILocalVariable(name: "bidx", scope: !4238, file: !4066, line: 101, type: !103)
!4238 = distinct !DILexicalBlock(scope: !4239, file: !4066, line: 100, column: 31)
!4239 = distinct !DILexicalBlock(scope: !4233, file: !4066, line: 100, column: 6)
!4240 = !DILocation(line: 0, scope: !4233)
!4241 = !DILocation(line: 101, column: 28, scope: !4238)
!4242 = !DILocation(line: 101, column: 14, scope: !4238)
!4243 = !DILocation(line: 0, scope: !4238)
!4244 = !DILocation(line: 102, column: 3, scope: !4238)
!4245 = !DILocation(line: 104, column: 1, scope: !4233)
!4246 = distinct !DISubprogram(name: "bucket_idx", scope: !142, file: !142, line: 250, type: !4247, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3183, retainedNodes: !4249)
!4247 = !DISubroutineType(types: !4248)
!4248 = !{!103, !3191, !4129}
!4249 = !{!4250, !4251, !4252}
!4250 = !DILocalVariable(name: "h", arg: 1, scope: !4246, file: !142, line: 250, type: !3191)
!4251 = !DILocalVariable(name: "sz", arg: 2, scope: !4246, file: !142, line: 250, type: !4129)
!4252 = !DILocalVariable(name: "usable_sz", scope: !4246, file: !142, line: 252, type: !32)
!4253 = !DILocation(line: 0, scope: !4246)
!4254 = !DILocation(line: 252, column: 32, scope: !4246)
!4255 = !DILocation(line: 252, column: 30, scope: !4246)
!4256 = !DILocation(line: 252, column: 50, scope: !4246)
!4257 = !DILocation(line: 253, column: 14, scope: !4246)
!4258 = !{i32 0, i32 33}
!4259 = !DILocation(line: 253, column: 12, scope: !4246)
!4260 = !DILocation(line: 253, column: 2, scope: !4246)
!4261 = distinct !DISubprogram(name: "free_list_add_bidx", scope: !4066, file: !4066, line: 68, type: !4262, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3183, retainedNodes: !4264)
!4262 = !DISubroutineType(types: !4263)
!4263 = !{null, !3191, !3196, !103}
!4264 = !{!4265, !4266, !4267, !4268, !4270, !4273}
!4265 = !DILocalVariable(name: "h", arg: 1, scope: !4261, file: !4066, line: 68, type: !3191)
!4266 = !DILocalVariable(name: "c", arg: 2, scope: !4261, file: !4066, line: 68, type: !3196)
!4267 = !DILocalVariable(name: "bidx", arg: 3, scope: !4261, file: !4066, line: 68, type: !103)
!4268 = !DILocalVariable(name: "b", scope: !4261, file: !4066, line: 70, type: !4269)
!4269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3204, size: 32)
!4270 = !DILocalVariable(name: "second", scope: !4271, file: !4066, line: 84, type: !3196)
!4271 = distinct !DILexicalBlock(scope: !4272, file: !4066, line: 80, column: 9)
!4272 = distinct !DILexicalBlock(scope: !4261, file: !4066, line: 72, column: 6)
!4273 = !DILocalVariable(name: "first", scope: !4271, file: !4066, line: 85, type: !3196)
!4274 = !DILocation(line: 0, scope: !4261)
!4275 = !DILocation(line: 72, column: 9, scope: !4272)
!4276 = !DILocation(line: 72, column: 14, scope: !4272)
!4277 = !DILocation(line: 72, column: 6, scope: !4261)
!4278 = !DILocation(line: 76, column: 23, scope: !4279)
!4279 = distinct !DILexicalBlock(scope: !4272, file: !4066, line: 72, column: 21)
!4280 = !DILocation(line: 76, column: 6, scope: !4279)
!4281 = !DILocation(line: 76, column: 20, scope: !4279)
!4282 = !DILocation(line: 77, column: 11, scope: !4279)
!4283 = !DILocation(line: 78, column: 3, scope: !4279)
!4284 = !DILocation(line: 79, column: 3, scope: !4279)
!4285 = !DILocation(line: 80, column: 2, scope: !4279)
!4286 = !DILocation(line: 0, scope: !4271)
!4287 = !DILocation(line: 85, column: 21, scope: !4271)
!4288 = !{i32 0, i32 65536}
!4289 = !DILocation(line: 87, column: 3, scope: !4271)
!4290 = !DILocation(line: 88, column: 3, scope: !4271)
!4291 = !DILocation(line: 89, column: 3, scope: !4271)
!4292 = !DILocation(line: 90, column: 3, scope: !4271)
!4293 = !DILocation(line: 94, column: 39, scope: !4261)
!4294 = !DILocation(line: 94, column: 19, scope: !4261)
!4295 = !DILocation(line: 94, column: 5, scope: !4261)
!4296 = !DILocation(line: 94, column: 16, scope: !4261)
!4297 = !DILocation(line: 96, column: 1, scope: !4261)
!4298 = distinct !DISubprogram(name: "set_prev_free_chunk", scope: !142, file: !142, line: 187, type: !4210, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3183, retainedNodes: !4299)
!4299 = !{!4300, !4301, !4302}
!4300 = !DILocalVariable(name: "h", arg: 1, scope: !4298, file: !142, line: 187, type: !3191)
!4301 = !DILocalVariable(name: "c", arg: 2, scope: !4298, file: !142, line: 187, type: !3196)
!4302 = !DILocalVariable(name: "prev", arg: 3, scope: !4298, file: !142, line: 188, type: !3196)
!4303 = !DILocation(line: 0, scope: !4298)
!4304 = !DILocation(line: 190, column: 2, scope: !4298)
!4305 = !DILocation(line: 191, column: 1, scope: !4298)
!4306 = distinct !DISubprogram(name: "set_next_free_chunk", scope: !142, file: !142, line: 193, type: !4210, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3183, retainedNodes: !4307)
!4307 = !{!4308, !4309, !4310}
!4308 = !DILocalVariable(name: "h", arg: 1, scope: !4306, file: !142, line: 193, type: !3191)
!4309 = !DILocalVariable(name: "c", arg: 2, scope: !4306, file: !142, line: 193, type: !3196)
!4310 = !DILocalVariable(name: "next", arg: 3, scope: !4306, file: !142, line: 194, type: !3196)
!4311 = !DILocation(line: 0, scope: !4306)
!4312 = !DILocation(line: 196, column: 2, scope: !4306)
!4313 = !DILocation(line: 197, column: 1, scope: !4306)
!4314 = distinct !DISubprogram(name: "prev_free_chunk", scope: !142, file: !142, line: 177, type: !4177, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3183, retainedNodes: !4315)
!4315 = !{!4316, !4317}
!4316 = !DILocalVariable(name: "h", arg: 1, scope: !4314, file: !142, line: 177, type: !3191)
!4317 = !DILocalVariable(name: "c", arg: 2, scope: !4314, file: !142, line: 177, type: !3196)
!4318 = !DILocation(line: 0, scope: !4314)
!4319 = !DILocation(line: 179, column: 9, scope: !4314)
!4320 = !DILocation(line: 179, column: 2, scope: !4314)
!4321 = distinct !DISubprogram(name: "chunk_field", scope: !142, file: !142, line: 107, type: !4322, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3183, retainedNodes: !4324)
!4322 = !DISubroutineType(types: !4323)
!4323 = !{!3196, !3191, !3196, !141}
!4324 = !{!4325, !4326, !4327, !4328, !4329}
!4325 = !DILocalVariable(name: "h", arg: 1, scope: !4321, file: !142, line: 107, type: !3191)
!4326 = !DILocalVariable(name: "c", arg: 2, scope: !4321, file: !142, line: 107, type: !3196)
!4327 = !DILocalVariable(name: "f", arg: 3, scope: !4321, file: !142, line: 108, type: !141)
!4328 = !DILocalVariable(name: "buf", scope: !4321, file: !142, line: 110, type: !3186)
!4329 = !DILocalVariable(name: "cmem", scope: !4321, file: !142, line: 111, type: !102)
!4330 = !DILocation(line: 0, scope: !4321)
!4331 = !DILocation(line: 110, column: 22, scope: !4321)
!4332 = !DILocation(line: 111, column: 15, scope: !4321)
!4333 = !DILocation(line: 116, column: 11, scope: !4334)
!4334 = distinct !DILexicalBlock(scope: !4335, file: !142, line: 115, column: 9)
!4335 = distinct !DILexicalBlock(scope: !4321, file: !142, line: 113, column: 6)
!4336 = !DILocation(line: 116, column: 10, scope: !4334)
!4337 = !DILocation(line: 118, column: 1, scope: !4321)
!4338 = distinct !DISubprogram(name: "chunk_buf", scope: !142, file: !142, line: 101, type: !4339, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3183, retainedNodes: !4341)
!4339 = !DISubroutineType(types: !4340)
!4340 = !{!3186, !3191}
!4341 = !{!4342}
!4342 = !DILocalVariable(name: "h", arg: 1, scope: !4338, file: !142, line: 101, type: !3191)
!4343 = !DILocation(line: 0, scope: !4338)
!4344 = !DILocation(line: 104, column: 9, scope: !4338)
!4345 = !DILocation(line: 104, column: 2, scope: !4338)
!4346 = distinct !DISubprogram(name: "chunk_set", scope: !142, file: !142, line: 120, type: !4347, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3183, retainedNodes: !4349)
!4347 = !DISubroutineType(types: !4348)
!4348 = !{null, !3191, !3196, !141, !3196}
!4349 = !{!4350, !4351, !4352, !4353, !4354, !4355}
!4350 = !DILocalVariable(name: "h", arg: 1, scope: !4346, file: !142, line: 120, type: !3191)
!4351 = !DILocalVariable(name: "c", arg: 2, scope: !4346, file: !142, line: 120, type: !3196)
!4352 = !DILocalVariable(name: "f", arg: 3, scope: !4346, file: !142, line: 121, type: !141)
!4353 = !DILocalVariable(name: "val", arg: 4, scope: !4346, file: !142, line: 121, type: !3196)
!4354 = !DILocalVariable(name: "buf", scope: !4346, file: !142, line: 125, type: !3186)
!4355 = !DILocalVariable(name: "cmem", scope: !4346, file: !142, line: 126, type: !102)
!4356 = !DILocation(line: 0, scope: !4346)
!4357 = !DILocation(line: 125, column: 22, scope: !4346)
!4358 = !DILocation(line: 126, column: 15, scope: !4346)
!4359 = !DILocation(line: 133, column: 27, scope: !4360)
!4360 = distinct !DILexicalBlock(scope: !4361, file: !142, line: 131, column: 9)
!4361 = distinct !DILexicalBlock(scope: !4346, file: !142, line: 128, column: 6)
!4362 = !DILocation(line: 133, column: 4, scope: !4360)
!4363 = !DILocation(line: 133, column: 3, scope: !4360)
!4364 = !DILocation(line: 133, column: 25, scope: !4360)
!4365 = !DILocation(line: 135, column: 1, scope: !4346)
!4366 = distinct !DISubprogram(name: "min_chunk_size", scope: !142, file: !142, line: 240, type: !4367, scopeLine: 241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3183, retainedNodes: !4369)
!4367 = !DISubroutineType(types: !4368)
!4368 = !{!4129, !3191}
!4369 = !{!4370}
!4370 = !DILocalVariable(name: "h", arg: 1, scope: !4366, file: !142, line: 240, type: !3191)
!4371 = !DILocation(line: 0, scope: !4366)
!4372 = !DILocation(line: 242, column: 9, scope: !4366)
!4373 = !DILocation(line: 242, column: 2, scope: !4366)
!4374 = distinct !DISubprogram(name: "bytes_to_chunksz", scope: !142, file: !142, line: 235, type: !4375, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3183, retainedNodes: !4377)
!4375 = !DISubroutineType(types: !4376)
!4376 = !{!4129, !3191, !120}
!4377 = !{!4378, !4379}
!4378 = !DILocalVariable(name: "h", arg: 1, scope: !4374, file: !142, line: 235, type: !3191)
!4379 = !DILocalVariable(name: "bytes", arg: 2, scope: !4374, file: !142, line: 235, type: !120)
!4380 = !DILocation(line: 0, scope: !4374)
!4381 = !DILocation(line: 237, column: 39, scope: !4374)
!4382 = !DILocation(line: 237, column: 9, scope: !4374)
!4383 = !DILocation(line: 237, column: 2, scope: !4374)
!4384 = distinct !DISubprogram(name: "chunksz", scope: !142, file: !142, line: 230, type: !4385, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3183, retainedNodes: !4387)
!4385 = !DISubroutineType(types: !4386)
!4386 = !{!4129, !120}
!4387 = !{!4388}
!4388 = !DILocalVariable(name: "bytes", arg: 1, scope: !4384, file: !142, line: 230, type: !120)
!4389 = !DILocation(line: 0, scope: !4384)
!4390 = !DILocation(line: 232, column: 29, scope: !4384)
!4391 = !DILocation(line: 232, column: 35, scope: !4384)
!4392 = !DILocation(line: 232, column: 2, scope: !4384)
!4393 = distinct !DISubprogram(name: "set_chunk_size", scope: !142, file: !142, line: 172, type: !4394, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3183, retainedNodes: !4396)
!4394 = !DISubroutineType(types: !4395)
!4395 = !{null, !3191, !3196, !4129}
!4396 = !{!4397, !4398, !4399}
!4397 = !DILocalVariable(name: "h", arg: 1, scope: !4393, file: !142, line: 172, type: !3191)
!4398 = !DILocalVariable(name: "c", arg: 2, scope: !4393, file: !142, line: 172, type: !3196)
!4399 = !DILocalVariable(name: "size", arg: 3, scope: !4393, file: !142, line: 172, type: !4129)
!4400 = !DILocation(line: 0, scope: !4393)
!4401 = !DILocation(line: 174, column: 38, scope: !4393)
!4402 = !DILocation(line: 174, column: 2, scope: !4393)
!4403 = !DILocation(line: 175, column: 1, scope: !4393)
!4404 = distinct !DISubprogram(name: "set_left_chunk_size", scope: !142, file: !142, line: 209, type: !4394, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3183, retainedNodes: !4405)
!4405 = !{!4406, !4407, !4408}
!4406 = !DILocalVariable(name: "h", arg: 1, scope: !4404, file: !142, line: 209, type: !3191)
!4407 = !DILocalVariable(name: "c", arg: 2, scope: !4404, file: !142, line: 209, type: !3196)
!4408 = !DILocalVariable(name: "size", arg: 3, scope: !4404, file: !142, line: 210, type: !4129)
!4409 = !DILocation(line: 0, scope: !4404)
!4410 = !DILocation(line: 212, column: 2, scope: !4404)
!4411 = !DILocation(line: 213, column: 1, scope: !4404)
!4412 = distinct !DISubprogram(name: "free_list_remove_bidx", scope: !4066, file: !4066, line: 34, type: !4262, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3183, retainedNodes: !4413)
!4413 = !{!4414, !4415, !4416, !4417, !4418, !4421}
!4414 = !DILocalVariable(name: "h", arg: 1, scope: !4412, file: !4066, line: 34, type: !3191)
!4415 = !DILocalVariable(name: "c", arg: 2, scope: !4412, file: !4066, line: 34, type: !3196)
!4416 = !DILocalVariable(name: "bidx", arg: 3, scope: !4412, file: !4066, line: 34, type: !103)
!4417 = !DILocalVariable(name: "b", scope: !4412, file: !4066, line: 36, type: !4269)
!4418 = !DILocalVariable(name: "first", scope: !4419, file: !4066, line: 47, type: !3196)
!4419 = distinct !DILexicalBlock(scope: !4420, file: !4066, line: 46, column: 9)
!4420 = distinct !DILexicalBlock(scope: !4412, file: !4066, line: 42, column: 6)
!4421 = !DILocalVariable(name: "second", scope: !4419, file: !4066, line: 48, type: !3196)
!4422 = !DILocation(line: 0, scope: !4412)
!4423 = !DILocation(line: 36, column: 29, scope: !4412)
!4424 = !DILocation(line: 42, column: 6, scope: !4420)
!4425 = !DILocation(line: 42, column: 28, scope: !4420)
!4426 = !DILocation(line: 42, column: 6, scope: !4412)
!4427 = !DILocation(line: 44, column: 24, scope: !4428)
!4428 = distinct !DILexicalBlock(scope: !4420, file: !4066, line: 42, column: 34)
!4429 = !DILocation(line: 44, column: 23, scope: !4428)
!4430 = !DILocation(line: 44, column: 6, scope: !4428)
!4431 = !DILocation(line: 44, column: 20, scope: !4428)
!4432 = !DILocation(line: 45, column: 6, scope: !4428)
!4433 = !DILocation(line: 45, column: 11, scope: !4428)
!4434 = !DILocation(line: 46, column: 2, scope: !4428)
!4435 = !DILocation(line: 47, column: 21, scope: !4419)
!4436 = !DILocation(line: 0, scope: !4419)
!4437 = !DILocation(line: 50, column: 6, scope: !4419)
!4438 = !DILocation(line: 50, column: 11, scope: !4419)
!4439 = !DILocation(line: 51, column: 3, scope: !4419)
!4440 = !DILocation(line: 52, column: 3, scope: !4419)
!4441 = !DILocation(line: 56, column: 39, scope: !4412)
!4442 = !DILocation(line: 56, column: 19, scope: !4412)
!4443 = !DILocation(line: 56, column: 5, scope: !4412)
!4444 = !DILocation(line: 56, column: 16, scope: !4412)
!4445 = !DILocation(line: 58, column: 1, scope: !4412)
!4446 = distinct !DISubprogram(name: "next_free_chunk", scope: !142, file: !142, line: 182, type: !4177, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3183, retainedNodes: !4447)
!4447 = !{!4448, !4449}
!4448 = !DILocalVariable(name: "h", arg: 1, scope: !4446, file: !142, line: 182, type: !3191)
!4449 = !DILocalVariable(name: "c", arg: 2, scope: !4446, file: !142, line: 182, type: !3196)
!4450 = !DILocation(line: 0, scope: !4446)
!4451 = !DILocation(line: 184, column: 9, scope: !4446)
!4452 = !DILocation(line: 184, column: 2, scope: !4446)
!4453 = distinct !DISubprogram(name: "sys_heap_usable_size", scope: !4066, file: !4066, line: 200, type: !4454, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3183, retainedNodes: !4456)
!4454 = !DISubroutineType(types: !4455)
!4455 = !{!120, !4069, !102}
!4456 = !{!4457, !4458, !4459, !4460, !4461, !4462, !4463}
!4457 = !DILocalVariable(name: "heap", arg: 1, scope: !4453, file: !4066, line: 200, type: !4069)
!4458 = !DILocalVariable(name: "mem", arg: 2, scope: !4453, file: !4066, line: 200, type: !102)
!4459 = !DILocalVariable(name: "h", scope: !4453, file: !4066, line: 202, type: !3191)
!4460 = !DILocalVariable(name: "c", scope: !4453, file: !4066, line: 203, type: !3196)
!4461 = !DILocalVariable(name: "addr", scope: !4453, file: !4066, line: 204, type: !120)
!4462 = !DILocalVariable(name: "chunk_base", scope: !4453, file: !4066, line: 205, type: !120)
!4463 = !DILocalVariable(name: "chunk_sz", scope: !4453, file: !4066, line: 206, type: !120)
!4464 = !DILocation(line: 0, scope: !4453)
!4465 = !DILocation(line: 202, column: 27, scope: !4453)
!4466 = !DILocation(line: 203, column: 16, scope: !4453)
!4467 = !DILocation(line: 204, column: 16, scope: !4453)
!4468 = !DILocation(line: 205, column: 31, scope: !4453)
!4469 = !DILocation(line: 205, column: 22, scope: !4453)
!4470 = !DILocation(line: 206, column: 20, scope: !4453)
!4471 = !DILocation(line: 206, column: 37, scope: !4453)
!4472 = !DILocation(line: 208, column: 26, scope: !4453)
!4473 = !DILocation(line: 208, column: 18, scope: !4453)
!4474 = !DILocation(line: 208, column: 2, scope: !4453)
!4475 = distinct !DISubprogram(name: "sys_heap_alloc", scope: !4066, file: !4066, line: 263, type: !4476, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3183, retainedNodes: !4478)
!4476 = !DISubroutineType(types: !4477)
!4477 = !{!102, !4069, !120}
!4478 = !{!4479, !4480, !4481, !4482, !4483, !4484}
!4479 = !DILocalVariable(name: "heap", arg: 1, scope: !4475, file: !4066, line: 263, type: !4069)
!4480 = !DILocalVariable(name: "bytes", arg: 2, scope: !4475, file: !4066, line: 263, type: !120)
!4481 = !DILocalVariable(name: "h", scope: !4475, file: !4066, line: 265, type: !3191)
!4482 = !DILocalVariable(name: "mem", scope: !4475, file: !4066, line: 266, type: !102)
!4483 = !DILocalVariable(name: "chunk_sz", scope: !4475, file: !4066, line: 272, type: !4129)
!4484 = !DILocalVariable(name: "c", scope: !4475, file: !4066, line: 273, type: !3196)
!4485 = !DILocation(line: 0, scope: !4475)
!4486 = !DILocation(line: 265, column: 27, scope: !4475)
!4487 = !DILocation(line: 268, column: 12, scope: !4488)
!4488 = distinct !DILexicalBlock(scope: !4475, file: !4066, line: 268, column: 6)
!4489 = !DILocation(line: 268, column: 18, scope: !4488)
!4490 = !DILocation(line: 268, column: 21, scope: !4488)
!4491 = !DILocation(line: 268, column: 6, scope: !4475)
!4492 = !DILocation(line: 272, column: 23, scope: !4475)
!4493 = !DILocation(line: 273, column: 16, scope: !4475)
!4494 = !DILocation(line: 274, column: 8, scope: !4495)
!4495 = distinct !DILexicalBlock(scope: !4475, file: !4066, line: 274, column: 6)
!4496 = !DILocation(line: 274, column: 6, scope: !4475)
!4497 = !DILocation(line: 279, column: 6, scope: !4498)
!4498 = distinct !DILexicalBlock(scope: !4475, file: !4066, line: 279, column: 6)
!4499 = !DILocation(line: 279, column: 23, scope: !4498)
!4500 = !DILocation(line: 279, column: 6, scope: !4475)
!4501 = !DILocation(line: 280, column: 24, scope: !4502)
!4502 = distinct !DILexicalBlock(scope: !4498, file: !4066, line: 279, column: 35)
!4503 = !DILocation(line: 280, column: 3, scope: !4502)
!4504 = !DILocation(line: 281, column: 3, scope: !4502)
!4505 = !DILocation(line: 282, column: 2, scope: !4502)
!4506 = !DILocation(line: 284, column: 2, scope: !4475)
!4507 = !DILocation(line: 286, column: 8, scope: !4475)
!4508 = !DILocation(line: 289, column: 50, scope: !4475)
!4509 = !DILocation(line: 289, column: 30, scope: !4475)
!4510 = !{i32 -4, i32 262133}
!4511 = !DILocation(line: 289, column: 2, scope: !4475)
!4512 = !DILocation(line: 298, column: 2, scope: !4475)
!4513 = !DILocation(line: 299, column: 1, scope: !4475)
!4514 = distinct !DISubprogram(name: "size_too_big", scope: !142, file: !142, line: 256, type: !4515, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3183, retainedNodes: !4517)
!4515 = !DISubroutineType(types: !4516)
!4516 = !{!731, !3191, !120}
!4517 = !{!4518, !4519}
!4518 = !DILocalVariable(name: "h", arg: 1, scope: !4514, file: !142, line: 256, type: !3191)
!4519 = !DILocalVariable(name: "bytes", arg: 2, scope: !4514, file: !142, line: 256, type: !120)
!4520 = !DILocation(line: 0, scope: !4514)
!4521 = !DILocation(line: 262, column: 16, scope: !4514)
!4522 = !DILocation(line: 262, column: 36, scope: !4514)
!4523 = !DILocation(line: 262, column: 30, scope: !4514)
!4524 = !DILocation(line: 262, column: 2, scope: !4514)
!4525 = distinct !DISubprogram(name: "alloc_chunk", scope: !4066, file: !4066, line: 211, type: !4526, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3183, retainedNodes: !4528)
!4526 = !DISubroutineType(types: !4527)
!4527 = !{!3196, !3191, !4129}
!4528 = !{!4529, !4530, !4531, !4532, !4533, !4536, !4537, !4539, !4540, !4543}
!4529 = !DILocalVariable(name: "h", arg: 1, scope: !4525, file: !4066, line: 211, type: !3191)
!4530 = !DILocalVariable(name: "sz", arg: 2, scope: !4525, file: !4066, line: 211, type: !4129)
!4531 = !DILocalVariable(name: "bi", scope: !4525, file: !4066, line: 213, type: !103)
!4532 = !DILocalVariable(name: "b", scope: !4525, file: !4066, line: 214, type: !4269)
!4533 = !DILocalVariable(name: "first", scope: !4534, file: !4066, line: 233, type: !3196)
!4534 = distinct !DILexicalBlock(scope: !4535, file: !4066, line: 232, column: 15)
!4535 = distinct !DILexicalBlock(scope: !4525, file: !4066, line: 232, column: 6)
!4536 = !DILocalVariable(name: "i", scope: !4534, file: !4066, line: 234, type: !103)
!4537 = !DILocalVariable(name: "c", scope: !4538, file: !4066, line: 236, type: !3196)
!4538 = distinct !DILexicalBlock(scope: !4534, file: !4066, line: 235, column: 6)
!4539 = !DILocalVariable(name: "bmask", scope: !4525, file: !4066, line: 249, type: !137)
!4540 = !DILocalVariable(name: "minbucket", scope: !4541, file: !4066, line: 252, type: !103)
!4541 = distinct !DILexicalBlock(scope: !4542, file: !4066, line: 251, column: 19)
!4542 = distinct !DILexicalBlock(scope: !4525, file: !4066, line: 251, column: 6)
!4543 = !DILocalVariable(name: "c", scope: !4541, file: !4066, line: 253, type: !3196)
!4544 = !DILocation(line: 0, scope: !4525)
!4545 = !DILocation(line: 213, column: 11, scope: !4525)
!4546 = !DILocation(line: 232, column: 9, scope: !4535)
!4547 = !DILocation(line: 232, column: 6, scope: !4535)
!4548 = !DILocation(line: 232, column: 6, scope: !4525)
!4549 = !DILocation(line: 236, column: 21, scope: !4538)
!4550 = !DILocation(line: 0, scope: !4534)
!4551 = !DILocation(line: 0, scope: !4538)
!4552 = !DILocation(line: 237, column: 8, scope: !4553)
!4553 = distinct !DILexicalBlock(scope: !4538, file: !4066, line: 237, column: 8)
!4554 = !DILocation(line: 237, column: 25, scope: !4553)
!4555 = !DILocation(line: 237, column: 8, scope: !4538)
!4556 = !DILocation(line: 238, column: 5, scope: !4557)
!4557 = distinct !DILexicalBlock(scope: !4553, file: !4066, line: 237, column: 32)
!4558 = !DILocation(line: 241, column: 14, scope: !4538)
!4559 = !DILocation(line: 241, column: 12, scope: !4538)
!4560 = !DILocation(line: 243, column: 12, scope: !4534)
!4561 = !DILocation(line: 243, column: 16, scope: !4534)
!4562 = distinct !{!4562, !4563, !4564}
!4563 = !DILocation(line: 235, column: 3, scope: !4534)
!4564 = !DILocation(line: 243, column: 35, scope: !4534)
!4565 = !DILocation(line: 249, column: 22, scope: !4525)
!4566 = !DILocation(line: 249, column: 39, scope: !4525)
!4567 = !DILocation(line: 249, column: 36, scope: !4525)
!4568 = !DILocation(line: 251, column: 12, scope: !4542)
!4569 = !DILocation(line: 251, column: 6, scope: !4525)
!4570 = !DILocation(line: 252, column: 19, scope: !4541)
!4571 = !DILocation(line: 0, scope: !4541)
!4572 = !DILocation(line: 253, column: 39, scope: !4541)
!4573 = !DILocation(line: 255, column: 3, scope: !4541)
!4574 = !DILocation(line: 261, column: 1, scope: !4525)
!4575 = distinct !DISubprogram(name: "split_chunks", scope: !4066, file: !4066, line: 109, type: !4210, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3183, retainedNodes: !4576)
!4576 = !{!4577, !4578, !4579, !4580, !4581, !4582}
!4577 = !DILocalVariable(name: "h", arg: 1, scope: !4575, file: !4066, line: 109, type: !3191)
!4578 = !DILocalVariable(name: "lc", arg: 2, scope: !4575, file: !4066, line: 109, type: !3196)
!4579 = !DILocalVariable(name: "rc", arg: 3, scope: !4575, file: !4066, line: 109, type: !3196)
!4580 = !DILocalVariable(name: "sz0", scope: !4575, file: !4066, line: 114, type: !4129)
!4581 = !DILocalVariable(name: "lsz", scope: !4575, file: !4066, line: 115, type: !4129)
!4582 = !DILocalVariable(name: "rsz", scope: !4575, file: !4066, line: 116, type: !4129)
!4583 = !DILocation(line: 0, scope: !4575)
!4584 = !DILocation(line: 114, column: 18, scope: !4575)
!4585 = !DILocation(line: 115, column: 21, scope: !4575)
!4586 = !DILocation(line: 116, column: 22, scope: !4575)
!4587 = !DILocation(line: 118, column: 2, scope: !4575)
!4588 = !DILocation(line: 119, column: 2, scope: !4575)
!4589 = !DILocation(line: 120, column: 2, scope: !4575)
!4590 = !DILocation(line: 121, column: 25, scope: !4575)
!4591 = !DILocation(line: 121, column: 2, scope: !4575)
!4592 = !DILocation(line: 122, column: 1, scope: !4575)
!4593 = distinct !DISubprogram(name: "chunk_mem", scope: !4066, file: !4066, line: 24, type: !4594, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3183, retainedNodes: !4596)
!4594 = !DISubroutineType(types: !4595)
!4595 = !{!102, !3191, !3196}
!4596 = !{!4597, !4598, !4599, !4600}
!4597 = !DILocalVariable(name: "h", arg: 1, scope: !4593, file: !4066, line: 24, type: !3191)
!4598 = !DILocalVariable(name: "c", arg: 2, scope: !4593, file: !4066, line: 24, type: !3196)
!4599 = !DILocalVariable(name: "buf", scope: !4593, file: !4066, line: 26, type: !3186)
!4600 = !DILocalVariable(name: "ret", scope: !4593, file: !4066, line: 27, type: !1566)
!4601 = !DILocation(line: 0, scope: !4593)
!4602 = !DILocation(line: 26, column: 22, scope: !4593)
!4603 = !DILocation(line: 27, column: 38, scope: !4593)
!4604 = !DILocation(line: 31, column: 2, scope: !4593)
!4605 = distinct !DISubprogram(name: "increase_allocated_bytes", scope: !4066, file: !4066, line: 17, type: !4606, scopeLine: 18, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3183, retainedNodes: !4608)
!4606 = !DISubroutineType(types: !4607)
!4607 = !{null, !3191, !120}
!4608 = !{!4609, !4610}
!4609 = !DILocalVariable(name: "h", arg: 1, scope: !4605, file: !4066, line: 17, type: !3191)
!4610 = !DILocalVariable(name: "num_bytes", arg: 2, scope: !4605, file: !4066, line: 17, type: !120)
!4611 = !DILocation(line: 0, scope: !4605)
!4612 = !DILocation(line: 19, column: 5, scope: !4605)
!4613 = !DILocation(line: 19, column: 21, scope: !4605)
!4614 = !DILocation(line: 20, column: 27, scope: !4605)
!4615 = !DILocation(line: 20, column: 25, scope: !4605)
!4616 = !DILocation(line: 21, column: 1, scope: !4605)
!4617 = distinct !DISubprogram(name: "sys_heap_aligned_alloc", scope: !4066, file: !4066, line: 301, type: !4618, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3183, retainedNodes: !4620)
!4618 = !DISubroutineType(types: !4619)
!4619 = !{!102, !4069, !120, !120}
!4620 = !{!4621, !4622, !4623, !4624, !4625, !4626, !4627, !4628, !4629, !4630, !4631, !4632}
!4621 = !DILocalVariable(name: "heap", arg: 1, scope: !4617, file: !4066, line: 301, type: !4069)
!4622 = !DILocalVariable(name: "align", arg: 2, scope: !4617, file: !4066, line: 301, type: !120)
!4623 = !DILocalVariable(name: "bytes", arg: 3, scope: !4617, file: !4066, line: 301, type: !120)
!4624 = !DILocalVariable(name: "h", scope: !4617, file: !4066, line: 303, type: !3191)
!4625 = !DILocalVariable(name: "gap", scope: !4617, file: !4066, line: 304, type: !120)
!4626 = !DILocalVariable(name: "rew", scope: !4617, file: !4066, line: 304, type: !120)
!4627 = !DILocalVariable(name: "padded_sz", scope: !4617, file: !4066, line: 335, type: !4129)
!4628 = !DILocalVariable(name: "c0", scope: !4617, file: !4066, line: 336, type: !3196)
!4629 = !DILocalVariable(name: "mem", scope: !4617, file: !4066, line: 341, type: !1566)
!4630 = !DILocalVariable(name: "end", scope: !4617, file: !4066, line: 345, type: !3186)
!4631 = !DILocalVariable(name: "c", scope: !4617, file: !4066, line: 348, type: !3196)
!4632 = !DILocalVariable(name: "c_end", scope: !4617, file: !4066, line: 349, type: !3196)
!4633 = !DILocation(line: 0, scope: !4617)
!4634 = !DILocation(line: 303, column: 27, scope: !4617)
!4635 = !DILocation(line: 313, column: 16, scope: !4617)
!4636 = !DILocation(line: 313, column: 14, scope: !4617)
!4637 = !DILocation(line: 314, column: 12, scope: !4638)
!4638 = distinct !DILexicalBlock(scope: !4617, file: !4066, line: 314, column: 6)
!4639 = !DILocation(line: 314, column: 6, scope: !4617)
!4640 = !DILocation(line: 315, column: 9, scope: !4641)
!4641 = distinct !DILexicalBlock(scope: !4638, file: !4066, line: 314, column: 20)
!4642 = !DILocation(line: 316, column: 9, scope: !4641)
!4643 = !DILocation(line: 318, column: 13, scope: !4644)
!4644 = distinct !DILexicalBlock(scope: !4645, file: !4066, line: 318, column: 7)
!4645 = distinct !DILexicalBlock(scope: !4638, file: !4066, line: 317, column: 9)
!4646 = !DILocation(line: 318, column: 7, scope: !4645)
!4647 = !DILocation(line: 319, column: 11, scope: !4648)
!4648 = distinct !DILexicalBlock(scope: !4644, file: !4066, line: 318, column: 39)
!4649 = !DILocation(line: 319, column: 4, scope: !4648)
!4650 = !DILocation(line: 0, scope: !4638)
!4651 = !DILocation(line: 326, column: 12, scope: !4652)
!4652 = distinct !DILexicalBlock(scope: !4617, file: !4066, line: 326, column: 6)
!4653 = !DILocation(line: 326, column: 17, scope: !4652)
!4654 = !DILocation(line: 326, column: 20, scope: !4652)
!4655 = !DILocation(line: 326, column: 6, scope: !4617)
!4656 = !DILocation(line: 335, column: 50, scope: !4617)
!4657 = !DILocation(line: 335, column: 58, scope: !4617)
!4658 = !DILocation(line: 335, column: 24, scope: !4617)
!4659 = !DILocation(line: 336, column: 17, scope: !4617)
!4660 = !DILocation(line: 338, column: 9, scope: !4661)
!4661 = distinct !DILexicalBlock(scope: !4617, file: !4066, line: 338, column: 6)
!4662 = !DILocation(line: 338, column: 6, scope: !4617)
!4663 = !DILocation(line: 341, column: 17, scope: !4617)
!4664 = !DILocation(line: 344, column: 20, scope: !4617)
!4665 = !DILocation(line: 344, column: 8, scope: !4617)
!4666 = !DILocation(line: 344, column: 47, scope: !4617)
!4667 = !DILocation(line: 345, column: 39, scope: !4617)
!4668 = !DILocation(line: 348, column: 16, scope: !4617)
!4669 = !DILocation(line: 349, column: 26, scope: !4617)
!4670 = !DILocation(line: 349, column: 24, scope: !4617)
!4671 = !DILocation(line: 353, column: 8, scope: !4672)
!4672 = distinct !DILexicalBlock(scope: !4617, file: !4066, line: 353, column: 6)
!4673 = !DILocation(line: 353, column: 6, scope: !4617)
!4674 = !DILocation(line: 354, column: 3, scope: !4675)
!4675 = distinct !DILexicalBlock(scope: !4672, file: !4066, line: 353, column: 14)
!4676 = !DILocation(line: 355, column: 3, scope: !4675)
!4677 = !DILocation(line: 356, column: 2, scope: !4675)
!4678 = !DILocation(line: 359, column: 6, scope: !4679)
!4679 = distinct !DILexicalBlock(scope: !4617, file: !4066, line: 359, column: 6)
!4680 = !DILocation(line: 359, column: 24, scope: !4679)
!4681 = !DILocation(line: 359, column: 6, scope: !4617)
!4682 = !DILocation(line: 360, column: 3, scope: !4683)
!4683 = distinct !DILexicalBlock(scope: !4679, file: !4066, line: 359, column: 33)
!4684 = !DILocation(line: 361, column: 3, scope: !4683)
!4685 = !DILocation(line: 362, column: 2, scope: !4683)
!4686 = !DILocation(line: 364, column: 2, scope: !4617)
!4687 = !DILocation(line: 367, column: 50, scope: !4617)
!4688 = !DILocation(line: 367, column: 30, scope: !4617)
!4689 = !DILocation(line: 367, column: 2, scope: !4617)
!4690 = !DILocation(line: 377, column: 1, scope: !4617)
!4691 = distinct !DISubprogram(name: "sys_heap_aligned_realloc", scope: !4066, file: !4066, line: 379, type: !4692, scopeLine: 381, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3183, retainedNodes: !4694)
!4692 = !DISubroutineType(types: !4693)
!4693 = !{!102, !4069, !102, !120, !120}
!4694 = !{!4695, !4696, !4697, !4698, !4699, !4700, !4701, !4702, !4703, !4704, !4710, !4711}
!4695 = !DILocalVariable(name: "heap", arg: 1, scope: !4691, file: !4066, line: 379, type: !4069)
!4696 = !DILocalVariable(name: "ptr", arg: 2, scope: !4691, file: !4066, line: 379, type: !102)
!4697 = !DILocalVariable(name: "align", arg: 3, scope: !4691, file: !4066, line: 380, type: !120)
!4698 = !DILocalVariable(name: "bytes", arg: 4, scope: !4691, file: !4066, line: 380, type: !120)
!4699 = !DILocalVariable(name: "h", scope: !4691, file: !4066, line: 382, type: !3191)
!4700 = !DILocalVariable(name: "c", scope: !4691, file: !4066, line: 399, type: !3196)
!4701 = !DILocalVariable(name: "rc", scope: !4691, file: !4066, line: 400, type: !3196)
!4702 = !DILocalVariable(name: "align_gap", scope: !4691, file: !4066, line: 401, type: !120)
!4703 = !DILocalVariable(name: "chunks_need", scope: !4691, file: !4066, line: 402, type: !4129)
!4704 = !DILocalVariable(name: "split_size", scope: !4705, file: !4066, line: 435, type: !4129)
!4705 = distinct !DILexicalBlock(scope: !4706, file: !4066, line: 433, column: 61)
!4706 = distinct !DILexicalBlock(scope: !4707, file: !4066, line: 432, column: 13)
!4707 = distinct !DILexicalBlock(scope: !4708, file: !4066, line: 409, column: 13)
!4708 = distinct !DILexicalBlock(scope: !4709, file: !4066, line: 406, column: 13)
!4709 = distinct !DILexicalBlock(scope: !4691, file: !4066, line: 404, column: 6)
!4710 = !DILocalVariable(name: "ptr2", scope: !4691, file: !4066, line: 474, type: !102)
!4711 = !DILocalVariable(name: "prev_size", scope: !4712, file: !4066, line: 477, type: !120)
!4712 = distinct !DILexicalBlock(scope: !4713, file: !4066, line: 476, column: 20)
!4713 = distinct !DILexicalBlock(scope: !4691, file: !4066, line: 476, column: 6)
!4714 = !DILocation(line: 0, scope: !4691)
!4715 = !DILocation(line: 382, column: 27, scope: !4691)
!4716 = !DILocation(line: 385, column: 10, scope: !4717)
!4717 = distinct !DILexicalBlock(scope: !4691, file: !4066, line: 385, column: 6)
!4718 = !DILocation(line: 385, column: 6, scope: !4691)
!4719 = !DILocation(line: 386, column: 10, scope: !4720)
!4720 = distinct !DILexicalBlock(scope: !4717, file: !4066, line: 385, column: 19)
!4721 = !DILocation(line: 386, column: 3, scope: !4720)
!4722 = !DILocation(line: 388, column: 12, scope: !4723)
!4723 = distinct !DILexicalBlock(scope: !4691, file: !4066, line: 388, column: 6)
!4724 = !DILocation(line: 388, column: 6, scope: !4691)
!4725 = !DILocation(line: 389, column: 3, scope: !4726)
!4726 = distinct !DILexicalBlock(scope: !4723, file: !4066, line: 388, column: 18)
!4727 = !DILocation(line: 390, column: 3, scope: !4726)
!4728 = !DILocation(line: 395, column: 6, scope: !4729)
!4729 = distinct !DILexicalBlock(scope: !4691, file: !4066, line: 395, column: 6)
!4730 = !DILocation(line: 395, column: 6, scope: !4691)
!4731 = !DILocation(line: 399, column: 16, scope: !4691)
!4732 = !DILocation(line: 400, column: 17, scope: !4691)
!4733 = !DILocation(line: 401, column: 49, scope: !4691)
!4734 = !DILocation(line: 401, column: 36, scope: !4691)
!4735 = !DILocation(line: 402, column: 52, scope: !4691)
!4736 = !DILocation(line: 402, column: 26, scope: !4691)
!4737 = !DILocation(line: 404, column: 6, scope: !4709)
!4738 = !DILocation(line: 404, column: 12, scope: !4709)
!4739 = !DILocation(line: 404, column: 40, scope: !4709)
!4740 = !DILocation(line: 404, column: 31, scope: !4709)
!4741 = !DILocation(line: 404, column: 6, scope: !4691)
!4742 = !DILocation(line: 406, column: 13, scope: !4708)
!4743 = !DILocation(line: 406, column: 30, scope: !4708)
!4744 = !DILocation(line: 406, column: 13, scope: !4709)
!4745 = !DILocation(line: 409, column: 30, scope: !4707)
!4746 = !DILocation(line: 409, column: 13, scope: !4708)
!4747 = !DILocation(line: 417, column: 22, scope: !4748)
!4748 = distinct !DILexicalBlock(scope: !4707, file: !4066, line: 409, column: 45)
!4749 = !DILocation(line: 417, column: 37, scope: !4748)
!4750 = !DILocation(line: 416, column: 6, scope: !4748)
!4751 = !DILocation(line: 416, column: 22, scope: !4748)
!4752 = !DILocation(line: 420, column: 24, scope: !4748)
!4753 = !DILocation(line: 420, column: 3, scope: !4748)
!4754 = !DILocation(line: 421, column: 3, scope: !4748)
!4755 = !DILocation(line: 422, column: 3, scope: !4748)
!4756 = !DILocation(line: 431, column: 3, scope: !4748)
!4757 = !DILocation(line: 432, column: 14, scope: !4706)
!4758 = !DILocation(line: 432, column: 32, scope: !4706)
!4759 = !DILocation(line: 433, column: 26, scope: !4706)
!4760 = !DILocation(line: 433, column: 24, scope: !4706)
!4761 = !DILocation(line: 433, column: 44, scope: !4706)
!4762 = !DILocation(line: 432, column: 13, scope: !4707)
!4763 = !DILocation(line: 435, column: 38, scope: !4705)
!4764 = !DILocation(line: 0, scope: !4705)
!4765 = !DILocation(line: 442, column: 42, scope: !4705)
!4766 = !DILocation(line: 442, column: 3, scope: !4705)
!4767 = !DILocation(line: 445, column: 3, scope: !4705)
!4768 = !DILocation(line: 447, column: 20, scope: !4769)
!4769 = distinct !DILexicalBlock(scope: !4705, file: !4066, line: 447, column: 7)
!4770 = !DILocation(line: 447, column: 18, scope: !4769)
!4771 = !DILocation(line: 447, column: 7, scope: !4705)
!4772 = !DILocation(line: 448, column: 27, scope: !4773)
!4773 = distinct !DILexicalBlock(scope: !4769, file: !4066, line: 447, column: 39)
!4774 = !DILocation(line: 448, column: 4, scope: !4773)
!4775 = !DILocation(line: 449, column: 4, scope: !4773)
!4776 = !DILocation(line: 450, column: 3, scope: !4773)
!4777 = !DILocation(line: 452, column: 3, scope: !4705)
!4778 = !DILocation(line: 453, column: 3, scope: !4705)
!4779 = !DILocation(line: 474, column: 15, scope: !4691)
!4780 = !DILocation(line: 476, column: 11, scope: !4713)
!4781 = !DILocation(line: 476, column: 6, scope: !4691)
!4782 = !DILocation(line: 477, column: 42, scope: !4712)
!4783 = !DILocation(line: 477, column: 22, scope: !4712)
!4784 = !DILocation(line: 477, column: 60, scope: !4712)
!4785 = !DILocation(line: 0, scope: !4712)
!4786 = !DILocation(line: 479, column: 21, scope: !4712)
!4787 = !DILocation(line: 479, column: 3, scope: !4712)
!4788 = !DILocation(line: 480, column: 3, scope: !4712)
!4789 = !DILocation(line: 481, column: 2, scope: !4712)
!4790 = !DILocation(line: 483, column: 1, scope: !4691)
!4791 = distinct !DISubprogram(name: "sys_heap_init", scope: !4066, file: !4066, line: 485, type: !4792, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3183, retainedNodes: !4794)
!4792 = !DISubroutineType(types: !4793)
!4793 = !{null, !4069, !102, !120}
!4794 = !{!4795, !4796, !4797, !4798, !4799, !4800, !4801, !4802, !4803, !4804}
!4795 = !DILocalVariable(name: "heap", arg: 1, scope: !4791, file: !4066, line: 485, type: !4069)
!4796 = !DILocalVariable(name: "mem", arg: 2, scope: !4791, file: !4066, line: 485, type: !102)
!4797 = !DILocalVariable(name: "bytes", arg: 3, scope: !4791, file: !4066, line: 485, type: !120)
!4798 = !DILocalVariable(name: "addr", scope: !4791, file: !4066, line: 502, type: !22)
!4799 = !DILocalVariable(name: "end", scope: !4791, file: !4066, line: 503, type: !22)
!4800 = !DILocalVariable(name: "heap_sz", scope: !4791, file: !4066, line: 504, type: !4129)
!4801 = !DILocalVariable(name: "h", scope: !4791, file: !4066, line: 509, type: !3191)
!4802 = !DILocalVariable(name: "nb_buckets", scope: !4791, file: !4066, line: 520, type: !103)
!4803 = !DILocalVariable(name: "chunk0_size", scope: !4791, file: !4066, line: 521, type: !4129)
!4804 = !DILocalVariable(name: "i", scope: !4805, file: !4066, line: 526, type: !103)
!4805 = distinct !DILexicalBlock(scope: !4791, file: !4066, line: 526, column: 2)
!4806 = !DILocation(line: 0, scope: !4791)
!4807 = !DILocation(line: 499, column: 8, scope: !4791)
!4808 = !DILocation(line: 502, column: 19, scope: !4791)
!4809 = !DILocation(line: 503, column: 18, scope: !4791)
!4810 = !DILocation(line: 504, column: 27, scope: !4791)
!4811 = !DILocation(line: 504, column: 35, scope: !4791)
!4812 = !DILocation(line: 509, column: 21, scope: !4791)
!4813 = !DILocation(line: 510, column: 8, scope: !4791)
!4814 = !DILocation(line: 510, column: 13, scope: !4791)
!4815 = !DILocation(line: 511, column: 5, scope: !4791)
!4816 = !DILocation(line: 511, column: 15, scope: !4791)
!4817 = !DILocation(line: 512, column: 5, scope: !4791)
!4818 = !DILocation(line: 512, column: 19, scope: !4791)
!4819 = !DILocation(line: 515, column: 5, scope: !4791)
!4820 = !DILocation(line: 515, column: 16, scope: !4791)
!4821 = !DILocation(line: 516, column: 5, scope: !4791)
!4822 = !DILocation(line: 516, column: 21, scope: !4791)
!4823 = !DILocation(line: 517, column: 5, scope: !4791)
!4824 = !DILocation(line: 517, column: 25, scope: !4791)
!4825 = !DILocation(line: 520, column: 19, scope: !4791)
!4826 = !DILocation(line: 522, column: 21, scope: !4791)
!4827 = !DILocation(line: 521, column: 56, scope: !4791)
!4828 = !DILocation(line: 521, column: 26, scope: !4791)
!4829 = !DILocation(line: 0, scope: !4805)
!4830 = !DILocation(line: 526, column: 20, scope: !4831)
!4831 = distinct !DILexicalBlock(scope: !4805, file: !4066, line: 526, column: 2)
!4832 = !DILocation(line: 526, column: 2, scope: !4805)
!4833 = !DILocation(line: 531, column: 2, scope: !4791)
!4834 = !DILocation(line: 532, column: 2, scope: !4791)
!4835 = !DILocation(line: 533, column: 2, scope: !4791)
!4836 = !DILocation(line: 536, column: 41, scope: !4791)
!4837 = !DILocation(line: 536, column: 2, scope: !4791)
!4838 = !DILocation(line: 537, column: 2, scope: !4791)
!4839 = !DILocation(line: 540, column: 2, scope: !4791)
!4840 = !DILocation(line: 541, column: 2, scope: !4791)
!4841 = !DILocation(line: 542, column: 2, scope: !4791)
!4842 = !DILocation(line: 544, column: 2, scope: !4791)
!4843 = !DILocation(line: 545, column: 1, scope: !4791)
!4844 = !DILocation(line: 527, column: 17, scope: !4845)
!4845 = distinct !DILexicalBlock(scope: !4831, file: !4066, line: 526, column: 39)
!4846 = !DILocation(line: 527, column: 22, scope: !4845)
!4847 = !DILocation(line: 526, column: 35, scope: !4831)
!4848 = distinct !{!4848, !4832, !4849}
!4849 = !DILocation(line: 528, column: 2, scope: !4805)
!4850 = distinct !DISubprogram(name: "sys_heap_validate", scope: !134, file: !134, line: 88, type: !4851, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4873)
!4851 = !DISubroutineType(types: !4852)
!4852 = !{!731, !4853}
!4853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4854, size: 32)
!4854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !4855)
!4855 = !{!4856, !4871, !4872}
!4856 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4854, file: !113, line: 57, baseType: !4857, size: 32)
!4857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4858, size: 32)
!4858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !142, line: 68, size: 224, elements: !4859)
!4859 = !{!4860, !4861, !4862, !4863, !4864, !4865, !4866}
!4860 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !4858, file: !142, line: 69, baseType: !3195, size: 64)
!4861 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !4858, file: !142, line: 70, baseType: !3196, size: 32, offset: 64)
!4862 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !4858, file: !142, line: 71, baseType: !137, size: 32, offset: 96)
!4863 = !DIDerivedType(tag: DW_TAG_member, name: "free_bytes", scope: !4858, file: !142, line: 73, baseType: !120, size: 32, offset: 128)
!4864 = !DIDerivedType(tag: DW_TAG_member, name: "allocated_bytes", scope: !4858, file: !142, line: 74, baseType: !120, size: 32, offset: 160)
!4865 = !DIDerivedType(tag: DW_TAG_member, name: "max_allocated_bytes", scope: !4858, file: !142, line: 75, baseType: !120, size: 32, offset: 192)
!4866 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !4858, file: !142, line: 77, baseType: !4867, offset: 224)
!4867 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4868, elements: !878)
!4868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !142, line: 64, size: 32, elements: !4869)
!4869 = !{!4870}
!4870 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4868, file: !142, line: 65, baseType: !3196, size: 32)
!4871 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4854, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!4872 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4854, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!4873 = !{!4874, !4875, !4876, !4877, !4878, !4879, !4885, !4887, !4890, !4891, !4892, !4893, !4894, !4896, !4899}
!4874 = !DILocalVariable(name: "heap", arg: 1, scope: !4850, file: !134, line: 88, type: !4853)
!4875 = !DILocalVariable(name: "h", scope: !4850, file: !134, line: 90, type: !4857)
!4876 = !DILocalVariable(name: "c", scope: !4850, file: !134, line: 91, type: !3196)
!4877 = !DILocalVariable(name: "allocated_bytes", scope: !4850, file: !134, line: 112, type: !120)
!4878 = !DILocalVariable(name: "free_bytes", scope: !4850, file: !134, line: 112, type: !120)
!4879 = !DILocalVariable(name: "stat", scope: !4850, file: !134, line: 113, type: !4880)
!4880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_memory_stats", file: !3727, line: 24, size: 96, elements: !4881)
!4881 = !{!4882, !4883, !4884}
!4882 = !DIDerivedType(tag: DW_TAG_member, name: "free_bytes", scope: !4880, file: !3727, line: 25, baseType: !120, size: 32)
!4883 = !DIDerivedType(tag: DW_TAG_member, name: "allocated_bytes", scope: !4880, file: !3727, line: 26, baseType: !120, size: 32, offset: 32)
!4884 = !DIDerivedType(tag: DW_TAG_member, name: "max_allocated_bytes", scope: !4880, file: !3727, line: 27, baseType: !120, size: 32, offset: 64)
!4885 = !DILocalVariable(name: "b", scope: !4886, file: !134, line: 127, type: !103)
!4886 = distinct !DILexicalBlock(scope: !4850, file: !134, line: 127, column: 2)
!4887 = !DILocalVariable(name: "c0", scope: !4888, file: !134, line: 128, type: !3196)
!4888 = distinct !DILexicalBlock(scope: !4889, file: !134, line: 127, column: 57)
!4889 = distinct !DILexicalBlock(scope: !4886, file: !134, line: 127, column: 2)
!4890 = !DILocalVariable(name: "n", scope: !4888, file: !134, line: 129, type: !137)
!4891 = !DILocalVariable(name: "empty", scope: !4888, file: !134, line: 141, type: !731)
!4892 = !DILocalVariable(name: "zero", scope: !4888, file: !134, line: 142, type: !731)
!4893 = !DILocalVariable(name: "prev_chunk", scope: !4850, file: !134, line: 159, type: !3196)
!4894 = !DILocalVariable(name: "b", scope: !4895, file: !134, line: 179, type: !103)
!4895 = distinct !DILexicalBlock(scope: !4850, file: !134, line: 179, column: 2)
!4896 = !DILocalVariable(name: "c0", scope: !4897, file: !134, line: 180, type: !3196)
!4897 = distinct !DILexicalBlock(scope: !4898, file: !134, line: 179, column: 57)
!4898 = distinct !DILexicalBlock(scope: !4895, file: !134, line: 179, column: 2)
!4899 = !DILocalVariable(name: "n", scope: !4897, file: !134, line: 181, type: !103)
!4900 = !DILocation(line: 0, scope: !4850)
!4901 = !DILocation(line: 90, column: 27, scope: !4850)
!4902 = !DILocation(line: 96, column: 11, scope: !4903)
!4903 = distinct !DILexicalBlock(scope: !4850, file: !134, line: 96, column: 2)
!4904 = !DILocation(line: 96, column: 32, scope: !4905)
!4905 = distinct !DILexicalBlock(scope: !4903, file: !134, line: 96, column: 2)
!4906 = !DILocation(line: 96, column: 2, scope: !4903)
!4907 = !DILocation(line: 97, column: 8, scope: !4908)
!4908 = distinct !DILexicalBlock(scope: !4909, file: !134, line: 97, column: 7)
!4909 = distinct !DILexicalBlock(scope: !4905, file: !134, line: 96, column: 71)
!4910 = !DILocation(line: 97, column: 7, scope: !4909)
!4911 = !DILocation(line: 96, column: 52, scope: !4905)
!4912 = distinct !{!4912, !4906, !4913}
!4913 = !DILocation(line: 100, column: 2, scope: !4903)
!4914 = !DILocation(line: 0, scope: !4903)
!4915 = !DILocation(line: 101, column: 8, scope: !4916)
!4916 = distinct !DILexicalBlock(scope: !4850, file: !134, line: 101, column: 6)
!4917 = !DILocation(line: 101, column: 6, scope: !4850)
!4918 = !DILocation(line: 112, column: 2, scope: !4850)
!4919 = !DILocation(line: 113, column: 2, scope: !4850)
!4920 = !DILocation(line: 113, column: 26, scope: !4850)
!4921 = !DILocation(line: 115, column: 2, scope: !4850)
!4922 = !DILocation(line: 116, column: 2, scope: !4850)
!4923 = !DILocation(line: 117, column: 12, scope: !4924)
!4924 = distinct !DILexicalBlock(scope: !4850, file: !134, line: 117, column: 6)
!4925 = !DILocation(line: 117, column: 31, scope: !4924)
!4926 = !DILocation(line: 117, column: 28, scope: !4924)
!4927 = !DILocation(line: 117, column: 48, scope: !4924)
!4928 = !DILocation(line: 118, column: 12, scope: !4924)
!4929 = !DILocation(line: 118, column: 26, scope: !4924)
!4930 = !DILocation(line: 118, column: 23, scope: !4924)
!4931 = !DILocation(line: 117, column: 6, scope: !4850)
!4932 = !DILocation(line: 0, scope: !4886)
!4933 = !DILocation(line: 127, column: 40, scope: !4889)
!4934 = !DILocation(line: 127, column: 23, scope: !4889)
!4935 = !DILocation(line: 127, column: 20, scope: !4889)
!4936 = !DILocation(line: 127, column: 2, scope: !4886)
!4937 = !DILocation(line: 128, column: 32, scope: !4888)
!4938 = !DILocation(line: 0, scope: !4888)
!4939 = !DILocation(line: 133, column: 18, scope: !4940)
!4940 = distinct !DILexicalBlock(scope: !4941, file: !134, line: 133, column: 3)
!4941 = distinct !DILexicalBlock(scope: !4888, file: !134, line: 133, column: 3)
!4942 = !DILocation(line: 133, column: 23, scope: !4940)
!4943 = !DILocation(line: 141, column: 20, scope: !4888)
!4944 = !DILocation(line: 141, column: 36, scope: !4888)
!4945 = !DILocation(line: 141, column: 34, scope: !4888)
!4946 = !DILocation(line: 141, column: 44, scope: !4888)
!4947 = !DILocation(line: 144, column: 7, scope: !4888)
!4948 = !DILocation(line: 133, column: 29, scope: !4940)
!4949 = !DILocation(line: 133, column: 34, scope: !4940)
!4950 = !DILocation(line: 133, column: 3, scope: !4941)
!4951 = !DILocation(line: 135, column: 9, scope: !4952)
!4952 = distinct !DILexicalBlock(scope: !4953, file: !134, line: 135, column: 8)
!4953 = distinct !DILexicalBlock(scope: !4940, file: !134, line: 134, column: 40)
!4954 = !DILocation(line: 135, column: 8, scope: !4953)
!4955 = !DILocation(line: 138, column: 4, scope: !4953)
!4956 = !DILocation(line: 134, column: 9, scope: !4940)
!4957 = !DILocation(line: 134, column: 17, scope: !4940)
!4958 = distinct !{!4958, !4950, !4959}
!4959 = !DILocation(line: 139, column: 3, scope: !4941)
!4960 = !DILocation(line: 142, column: 17, scope: !4888)
!4961 = !DILocation(line: 144, column: 13, scope: !4962)
!4962 = distinct !DILexicalBlock(scope: !4888, file: !134, line: 144, column: 7)
!4963 = !DILocation(line: 148, column: 13, scope: !4964)
!4964 = distinct !DILexicalBlock(scope: !4888, file: !134, line: 148, column: 7)
!4965 = !DILocation(line: 148, column: 30, scope: !4964)
!4966 = !DILocation(line: 148, column: 35, scope: !4964)
!4967 = !DILocation(line: 148, column: 7, scope: !4888)
!4968 = !DILocation(line: 127, column: 53, scope: !4889)
!4969 = distinct !{!4969, !4936, !4970}
!4970 = !DILocation(line: 151, column: 2, scope: !4886)
!4971 = !DILocation(line: 160, column: 37, scope: !4972)
!4972 = distinct !DILexicalBlock(scope: !4973, file: !134, line: 160, column: 2)
!4973 = distinct !DILexicalBlock(scope: !4850, file: !134, line: 160, column: 2)
!4974 = !DILocation(line: 160, column: 11, scope: !4973)
!4975 = !DILocation(line: 160, column: 32, scope: !4972)
!4976 = !DILocation(line: 160, column: 2, scope: !4973)
!4977 = !DILocation(line: 161, column: 8, scope: !4978)
!4978 = distinct !DILexicalBlock(scope: !4979, file: !134, line: 161, column: 7)
!4979 = distinct !DILexicalBlock(scope: !4972, file: !134, line: 160, column: 71)
!4980 = !DILocation(line: 161, column: 25, scope: !4978)
!4981 = !DILocation(line: 164, column: 7, scope: !4982)
!4982 = distinct !DILexicalBlock(scope: !4979, file: !134, line: 164, column: 7)
!4983 = !DILocation(line: 164, column: 24, scope: !4982)
!4984 = !DILocation(line: 164, column: 7, scope: !4979)
!4985 = !DILocation(line: 169, column: 3, scope: !4979)
!4986 = !DILocation(line: 160, column: 52, scope: !4972)
!4987 = distinct !{!4987, !4976, !4988}
!4988 = !DILocation(line: 170, column: 2, scope: !4973)
!4989 = !DILocation(line: 0, scope: !4973)
!4990 = !DILocation(line: 171, column: 8, scope: !4991)
!4991 = distinct !DILexicalBlock(scope: !4850, file: !134, line: 171, column: 6)
!4992 = !DILocation(line: 171, column: 6, scope: !4850)
!4993 = !DILocation(line: 0, scope: !4895)
!4994 = !DILocation(line: 179, column: 23, scope: !4898)
!4995 = !DILocation(line: 179, column: 20, scope: !4898)
!4996 = !DILocation(line: 179, column: 2, scope: !4895)
!4997 = !DILocation(line: 180, column: 32, scope: !4897)
!4998 = !DILocation(line: 0, scope: !4897)
!4999 = !DILocation(line: 183, column: 10, scope: !5000)
!5000 = distinct !DILexicalBlock(scope: !4897, file: !134, line: 183, column: 7)
!5001 = !DILocation(line: 183, column: 7, scope: !4897)
!5002 = !DILocation(line: 188, column: 8, scope: !5003)
!5003 = distinct !DILexicalBlock(scope: !5004, file: !134, line: 188, column: 8)
!5004 = distinct !DILexicalBlock(scope: !5005, file: !134, line: 187, column: 67)
!5005 = distinct !DILexicalBlock(scope: !5006, file: !134, line: 187, column: 3)
!5006 = distinct !DILexicalBlock(scope: !4897, file: !134, line: 187, column: 3)
!5007 = !DILocation(line: 188, column: 8, scope: !5004)
!5008 = !DILocation(line: 191, column: 4, scope: !5004)
!5009 = !DILocation(line: 187, column: 44, scope: !5005)
!5010 = !DILocation(line: 187, column: 23, scope: !5005)
!5011 = !DILocation(line: 187, column: 3, scope: !5006)
!5012 = distinct !{!5012, !5011, !5013}
!5013 = !DILocation(line: 192, column: 3, scope: !5006)
!5014 = !DILocation(line: 179, column: 40, scope: !4898)
!5015 = !DILocation(line: 179, column: 53, scope: !4898)
!5016 = distinct !{!5016, !4996, !5017}
!5017 = !DILocation(line: 193, column: 2, scope: !4895)
!5018 = !DILocation(line: 198, column: 37, scope: !5019)
!5019 = distinct !DILexicalBlock(scope: !5020, file: !134, line: 198, column: 2)
!5020 = distinct !DILexicalBlock(scope: !4850, file: !134, line: 198, column: 2)
!5021 = !DILocation(line: 198, column: 11, scope: !5020)
!5022 = !DILocation(line: 198, column: 32, scope: !5019)
!5023 = !DILocation(line: 198, column: 2, scope: !5020)
!5024 = !DILocation(line: 199, column: 25, scope: !5025)
!5025 = distinct !DILexicalBlock(scope: !5019, file: !134, line: 198, column: 71)
!5026 = !DILocation(line: 199, column: 24, scope: !5025)
!5027 = !DILocation(line: 199, column: 3, scope: !5025)
!5028 = !DILocation(line: 198, column: 52, scope: !5019)
!5029 = distinct !{!5029, !5023, !5030}
!5030 = !DILocation(line: 200, column: 2, scope: !5020)
!5031 = !DILocation(line: 202, column: 1, scope: !4850)
!5032 = distinct !DISubprogram(name: "right_chunk", scope: !142, file: !142, line: 204, type: !5033, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !5035)
!5033 = !DISubroutineType(types: !5034)
!5034 = !{!3196, !4857, !3196}
!5035 = !{!5036, !5037}
!5036 = !DILocalVariable(name: "h", arg: 1, scope: !5032, file: !142, line: 204, type: !4857)
!5037 = !DILocalVariable(name: "c", arg: 2, scope: !5032, file: !142, line: 204, type: !3196)
!5038 = !DILocation(line: 0, scope: !5032)
!5039 = !DILocation(line: 206, column: 13, scope: !5032)
!5040 = !DILocation(line: 206, column: 11, scope: !5032)
!5041 = !DILocation(line: 206, column: 2, scope: !5032)
!5042 = distinct !DISubprogram(name: "valid_chunk", scope: !134, file: !134, line: 31, type: !5043, scopeLine: 32, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !5045)
!5043 = !DISubroutineType(types: !5044)
!5044 = !{!731, !4857, !3196}
!5045 = !{!5046, !5047}
!5046 = !DILocalVariable(name: "h", arg: 1, scope: !5042, file: !134, line: 31, type: !4857)
!5047 = !DILocalVariable(name: "c", arg: 2, scope: !5042, file: !134, line: 31, type: !3196)
!5048 = !DILocation(line: 0, scope: !5042)
!5049 = !DILocation(line: 33, column: 2, scope: !5050)
!5050 = distinct !DILexicalBlock(scope: !5051, file: !134, line: 33, column: 2)
!5051 = distinct !DILexicalBlock(scope: !5042, file: !134, line: 33, column: 2)
!5052 = !DILocation(line: 33, column: 2, scope: !5051)
!5053 = !DILocation(line: 34, column: 2, scope: !5054)
!5054 = distinct !DILexicalBlock(scope: !5055, file: !134, line: 34, column: 2)
!5055 = distinct !DILexicalBlock(scope: !5042, file: !134, line: 34, column: 2)
!5056 = !DILocation(line: 34, column: 2, scope: !5055)
!5057 = !DILocation(line: 35, column: 2, scope: !5058)
!5058 = distinct !DILexicalBlock(scope: !5059, file: !134, line: 35, column: 2)
!5059 = distinct !DILexicalBlock(scope: !5042, file: !134, line: 35, column: 2)
!5060 = !DILocation(line: 35, column: 2, scope: !5059)
!5061 = !DILocation(line: 36, column: 2, scope: !5062)
!5062 = distinct !DILexicalBlock(scope: !5063, file: !134, line: 36, column: 2)
!5063 = distinct !DILexicalBlock(scope: !5042, file: !134, line: 36, column: 2)
!5064 = !DILocation(line: 36, column: 2, scope: !5063)
!5065 = !DILocation(line: 37, column: 2, scope: !5066)
!5066 = distinct !DILexicalBlock(scope: !5067, file: !134, line: 37, column: 2)
!5067 = distinct !DILexicalBlock(scope: !5042, file: !134, line: 37, column: 2)
!5068 = !DILocation(line: 37, column: 2, scope: !5067)
!5069 = !DILocation(line: 38, column: 6, scope: !5070)
!5070 = distinct !DILexicalBlock(scope: !5042, file: !134, line: 38, column: 6)
!5071 = !DILocation(line: 38, column: 6, scope: !5042)
!5072 = !DILocation(line: 41, column: 3, scope: !5073)
!5073 = distinct !DILexicalBlock(scope: !5074, file: !134, line: 41, column: 3)
!5074 = distinct !DILexicalBlock(scope: !5075, file: !134, line: 41, column: 3)
!5075 = distinct !DILexicalBlock(scope: !5070, file: !134, line: 40, column: 9)
!5076 = !DILocation(line: 41, column: 3, scope: !5074)
!5077 = !DILocation(line: 42, column: 3, scope: !5078)
!5078 = distinct !DILexicalBlock(scope: !5079, file: !134, line: 42, column: 3)
!5079 = distinct !DILexicalBlock(scope: !5075, file: !134, line: 42, column: 3)
!5080 = !DILocation(line: 42, column: 3, scope: !5079)
!5081 = !DILocation(line: 44, column: 4, scope: !5082)
!5082 = distinct !DILexicalBlock(scope: !5083, file: !134, line: 44, column: 4)
!5083 = distinct !DILexicalBlock(scope: !5084, file: !134, line: 44, column: 4)
!5084 = distinct !DILexicalBlock(scope: !5085, file: !134, line: 43, column: 32)
!5085 = distinct !DILexicalBlock(scope: !5075, file: !134, line: 43, column: 7)
!5086 = !DILocation(line: 44, column: 4, scope: !5083)
!5087 = !DILocation(line: 45, column: 4, scope: !5088)
!5088 = distinct !DILexicalBlock(scope: !5089, file: !134, line: 45, column: 4)
!5089 = distinct !DILexicalBlock(scope: !5084, file: !134, line: 45, column: 4)
!5090 = !DILocation(line: 45, column: 4, scope: !5089)
!5091 = !DILocation(line: 48, column: 2, scope: !5042)
!5092 = !DILocation(line: 49, column: 1, scope: !5042)
!5093 = distinct !DISubprogram(name: "get_alloc_info", scope: !134, file: !134, line: 71, type: !5094, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !5096)
!5094 = !DISubroutineType(types: !5095)
!5095 = !{null, !4857, !3241, !3241}
!5096 = !{!5097, !5098, !5099, !5100}
!5097 = !DILocalVariable(name: "h", arg: 1, scope: !5093, file: !134, line: 71, type: !4857)
!5098 = !DILocalVariable(name: "alloc_bytes", arg: 2, scope: !5093, file: !134, line: 71, type: !3241)
!5099 = !DILocalVariable(name: "free_bytes", arg: 3, scope: !5093, file: !134, line: 72, type: !3241)
!5100 = !DILocalVariable(name: "c", scope: !5093, file: !134, line: 74, type: !3196)
!5101 = !DILocation(line: 0, scope: !5093)
!5102 = !DILocation(line: 76, column: 15, scope: !5093)
!5103 = !DILocation(line: 77, column: 14, scope: !5093)
!5104 = !DILocation(line: 79, column: 11, scope: !5105)
!5105 = distinct !DILexicalBlock(scope: !5093, file: !134, line: 79, column: 2)
!5106 = !DILocation(line: 79, column: 37, scope: !5107)
!5107 = distinct !DILexicalBlock(scope: !5105, file: !134, line: 79, column: 2)
!5108 = !DILocation(line: 79, column: 32, scope: !5107)
!5109 = !DILocation(line: 79, column: 2, scope: !5105)
!5110 = !DILocation(line: 80, column: 7, scope: !5111)
!5111 = distinct !DILexicalBlock(scope: !5112, file: !134, line: 80, column: 7)
!5112 = distinct !DILexicalBlock(scope: !5107, file: !134, line: 79, column: 71)
!5113 = !DILocation(line: 0, scope: !5111)
!5114 = !DILocation(line: 79, column: 52, scope: !5107)
!5115 = distinct !{!5115, !5109, !5116}
!5116 = !DILocation(line: 85, column: 2, scope: !5105)
!5117 = !DILocation(line: 86, column: 1, scope: !5093)
!5118 = distinct !DISubprogram(name: "sys_heap_runtime_stats_get", scope: !134, file: !134, line: 416, type: !5119, scopeLine: 418, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !5122)
!5119 = !DISubroutineType(types: !5120)
!5120 = !{!103, !4853, !5121}
!5121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4880, size: 32)
!5122 = !{!5123, !5124}
!5123 = !DILocalVariable(name: "heap", arg: 1, scope: !5118, file: !134, line: 416, type: !4853)
!5124 = !DILocalVariable(name: "stats", arg: 2, scope: !5118, file: !134, line: 417, type: !5121)
!5125 = !DILocation(line: 0, scope: !5118)
!5126 = !DILocation(line: 419, column: 12, scope: !5127)
!5127 = distinct !DILexicalBlock(scope: !5118, file: !134, line: 419, column: 6)
!5128 = !DILocation(line: 419, column: 21, scope: !5127)
!5129 = !DILocation(line: 423, column: 28, scope: !5118)
!5130 = !DILocation(line: 423, column: 34, scope: !5118)
!5131 = !DILocation(line: 423, column: 9, scope: !5118)
!5132 = !DILocation(line: 423, column: 20, scope: !5118)
!5133 = !DILocation(line: 424, column: 33, scope: !5118)
!5134 = !DILocation(line: 424, column: 39, scope: !5118)
!5135 = !DILocation(line: 424, column: 9, scope: !5118)
!5136 = !DILocation(line: 424, column: 25, scope: !5118)
!5137 = !DILocation(line: 425, column: 37, scope: !5118)
!5138 = !DILocation(line: 425, column: 43, scope: !5118)
!5139 = !DILocation(line: 425, column: 9, scope: !5118)
!5140 = !DILocation(line: 425, column: 29, scope: !5118)
!5141 = !DILocation(line: 427, column: 2, scope: !5118)
!5142 = !DILocation(line: 428, column: 1, scope: !5118)
!5143 = distinct !DISubprogram(name: "bucket_idx", scope: !142, file: !142, line: 250, type: !5144, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !5146)
!5144 = !DISubroutineType(types: !5145)
!5145 = !{!103, !4857, !4129}
!5146 = !{!5147, !5148, !5149}
!5147 = !DILocalVariable(name: "h", arg: 1, scope: !5143, file: !142, line: 250, type: !4857)
!5148 = !DILocalVariable(name: "sz", arg: 2, scope: !5143, file: !142, line: 250, type: !4129)
!5149 = !DILocalVariable(name: "usable_sz", scope: !5143, file: !142, line: 252, type: !32)
!5150 = !DILocation(line: 0, scope: !5143)
!5151 = !DILocation(line: 253, column: 14, scope: !5143)
!5152 = !DILocation(line: 253, column: 12, scope: !5143)
!5153 = !DILocation(line: 253, column: 2, scope: !5143)
!5154 = distinct !DISubprogram(name: "set_chunk_used", scope: !142, file: !142, line: 147, type: !5155, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !5157)
!5155 = !DISubroutineType(types: !5156)
!5156 = !{null, !4857, !3196, !731}
!5157 = !{!5158, !5159, !5160, !5161, !5162}
!5158 = !DILocalVariable(name: "h", arg: 1, scope: !5154, file: !142, line: 147, type: !4857)
!5159 = !DILocalVariable(name: "c", arg: 2, scope: !5154, file: !142, line: 147, type: !3196)
!5160 = !DILocalVariable(name: "used", arg: 3, scope: !5154, file: !142, line: 147, type: !731)
!5161 = !DILocalVariable(name: "buf", scope: !5154, file: !142, line: 149, type: !153)
!5162 = !DILocalVariable(name: "cmem", scope: !5154, file: !142, line: 150, type: !102)
!5163 = !DILocation(line: 0, scope: !5154)
!5164 = !DILocation(line: 149, column: 22, scope: !5154)
!5165 = !DILocation(line: 0, scope: !5166)
!5166 = distinct !DILexicalBlock(scope: !5167, file: !142, line: 159, column: 7)
!5167 = distinct !DILexicalBlock(scope: !5168, file: !142, line: 158, column: 9)
!5168 = distinct !DILexicalBlock(scope: !5154, file: !142, line: 152, column: 6)
!5169 = !DILocation(line: 159, column: 7, scope: !5167)
!5170 = !DILocation(line: 165, column: 1, scope: !5154)
!5171 = distinct !DISubprogram(name: "next_free_chunk", scope: !142, file: !142, line: 182, type: !5033, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !5172)
!5172 = !{!5173, !5174}
!5173 = !DILocalVariable(name: "h", arg: 1, scope: !5171, file: !142, line: 182, type: !4857)
!5174 = !DILocalVariable(name: "c", arg: 2, scope: !5171, file: !142, line: 182, type: !3196)
!5175 = !DILocation(line: 0, scope: !5171)
!5176 = !DILocation(line: 184, column: 9, scope: !5171)
!5177 = !DILocation(line: 184, column: 2, scope: !5171)
!5178 = distinct !DISubprogram(name: "chunk_used", scope: !142, file: !142, line: 137, type: !5043, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !5179)
!5179 = !{!5180, !5181}
!5180 = !DILocalVariable(name: "h", arg: 1, scope: !5178, file: !142, line: 137, type: !4857)
!5181 = !DILocalVariable(name: "c", arg: 2, scope: !5178, file: !142, line: 137, type: !3196)
!5182 = !DILocation(line: 0, scope: !5178)
!5183 = !DILocation(line: 139, column: 9, scope: !5178)
!5184 = !DILocation(line: 139, column: 42, scope: !5178)
!5185 = !DILocation(line: 139, column: 2, scope: !5178)
!5186 = distinct !DISubprogram(name: "left_chunk", scope: !142, file: !142, line: 199, type: !5033, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !5187)
!5187 = !{!5188, !5189}
!5188 = !DILocalVariable(name: "h", arg: 1, scope: !5186, file: !142, line: 199, type: !4857)
!5189 = !DILocalVariable(name: "c", arg: 2, scope: !5186, file: !142, line: 199, type: !3196)
!5190 = !DILocation(line: 0, scope: !5186)
!5191 = !DILocation(line: 201, column: 13, scope: !5186)
!5192 = !DILocation(line: 201, column: 11, scope: !5186)
!5193 = !DILocation(line: 201, column: 2, scope: !5186)
!5194 = distinct !DISubprogram(name: "chunk_field", scope: !142, file: !142, line: 107, type: !5195, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !5197)
!5195 = !DISubroutineType(types: !5196)
!5196 = !{!3196, !4857, !3196, !141}
!5197 = !{!5198, !5199, !5200, !5201, !5202}
!5198 = !DILocalVariable(name: "h", arg: 1, scope: !5194, file: !142, line: 107, type: !4857)
!5199 = !DILocalVariable(name: "c", arg: 2, scope: !5194, file: !142, line: 107, type: !3196)
!5200 = !DILocalVariable(name: "f", arg: 3, scope: !5194, file: !142, line: 108, type: !141)
!5201 = !DILocalVariable(name: "buf", scope: !5194, file: !142, line: 110, type: !153)
!5202 = !DILocalVariable(name: "cmem", scope: !5194, file: !142, line: 111, type: !102)
!5203 = !DILocation(line: 0, scope: !5194)
!5204 = !DILocation(line: 110, column: 22, scope: !5194)
!5205 = !DILocation(line: 111, column: 15, scope: !5194)
!5206 = !DILocation(line: 116, column: 11, scope: !5207)
!5207 = distinct !DILexicalBlock(scope: !5208, file: !142, line: 115, column: 9)
!5208 = distinct !DILexicalBlock(scope: !5194, file: !142, line: 113, column: 6)
!5209 = !DILocation(line: 116, column: 10, scope: !5207)
!5210 = !DILocation(line: 118, column: 1, scope: !5194)
!5211 = distinct !DISubprogram(name: "chunk_buf", scope: !142, file: !142, line: 101, type: !5212, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !5214)
!5212 = !DISubroutineType(types: !5213)
!5213 = !{!153, !4857}
!5214 = !{!5215}
!5215 = !DILocalVariable(name: "h", arg: 1, scope: !5211, file: !142, line: 101, type: !4857)
!5216 = !DILocation(line: 0, scope: !5211)
!5217 = !DILocation(line: 104, column: 9, scope: !5211)
!5218 = !DILocation(line: 104, column: 2, scope: !5211)
!5219 = distinct !DISubprogram(name: "chunk_size", scope: !142, file: !142, line: 142, type: !5220, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !5222)
!5220 = !DISubroutineType(types: !5221)
!5221 = !{!4129, !4857, !3196}
!5222 = !{!5223, !5224}
!5223 = !DILocalVariable(name: "h", arg: 1, scope: !5219, file: !142, line: 142, type: !4857)
!5224 = !DILocalVariable(name: "c", arg: 2, scope: !5219, file: !142, line: 142, type: !3196)
!5225 = !DILocation(line: 0, scope: !5219)
!5226 = !DILocation(line: 144, column: 9, scope: !5219)
!5227 = !DILocation(line: 144, column: 42, scope: !5219)
!5228 = !DILocation(line: 144, column: 2, scope: !5219)
!5229 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !142, file: !142, line: 245, type: !5230, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !5232)
!5230 = !DISubroutineType(types: !5231)
!5231 = !{!120, !4857, !4129}
!5232 = !{!5233, !5234}
!5233 = !DILocalVariable(name: "h", arg: 1, scope: !5229, file: !142, line: 245, type: !4857)
!5234 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !5229, file: !142, line: 245, type: !4129)
!5235 = !DILocation(line: 0, scope: !5229)
!5236 = !DILocation(line: 247, column: 20, scope: !5229)
!5237 = !DILocation(line: 247, column: 33, scope: !5229)
!5238 = !DILocation(line: 247, column: 2, scope: !5229)
!5239 = distinct !DISubprogram(name: "in_bounds", scope: !134, file: !134, line: 23, type: !5043, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !5240)
!5240 = !{!5241, !5242}
!5241 = !DILocalVariable(name: "h", arg: 1, scope: !5239, file: !134, line: 23, type: !4857)
!5242 = !DILocalVariable(name: "c", arg: 2, scope: !5239, file: !134, line: 23, type: !3196)
!5243 = !DILocation(line: 0, scope: !5239)
!5244 = !DILocation(line: 25, column: 2, scope: !5245)
!5245 = distinct !DILexicalBlock(scope: !5246, file: !134, line: 25, column: 2)
!5246 = distinct !DILexicalBlock(scope: !5239, file: !134, line: 25, column: 2)
!5247 = !DILocation(line: 25, column: 2, scope: !5246)
!5248 = !DILocation(line: 26, column: 2, scope: !5249)
!5249 = distinct !DILexicalBlock(scope: !5250, file: !134, line: 26, column: 2)
!5250 = distinct !DILexicalBlock(scope: !5239, file: !134, line: 26, column: 2)
!5251 = !DILocation(line: 26, column: 2, scope: !5250)
!5252 = !DILocation(line: 27, column: 2, scope: !5253)
!5253 = distinct !DILexicalBlock(scope: !5254, file: !134, line: 27, column: 2)
!5254 = distinct !DILexicalBlock(scope: !5239, file: !134, line: 27, column: 2)
!5255 = !DILocation(line: 29, column: 1, scope: !5239)
!5256 = distinct !DISubprogram(name: "prev_free_chunk", scope: !142, file: !142, line: 177, type: !5033, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !5257)
!5257 = !{!5258, !5259}
!5258 = !DILocalVariable(name: "h", arg: 1, scope: !5256, file: !142, line: 177, type: !4857)
!5259 = !DILocalVariable(name: "c", arg: 2, scope: !5256, file: !142, line: 177, type: !3196)
!5260 = !DILocation(line: 0, scope: !5256)
!5261 = !DILocation(line: 179, column: 9, scope: !5256)
!5262 = !DILocation(line: 179, column: 2, scope: !5256)
!5263 = distinct !DISubprogram(name: "sys_heap_stress", scope: !134, file: !134, line: 300, type: !5264, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !5279)
!5264 = !DISubroutineType(types: !5265)
!5265 = !{null, !5266, !5269, !102, !120, !137, !102, !120, !103, !5272}
!5266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5267, size: 32)
!5267 = !DISubroutineType(types: !5268)
!5268 = !{!102, !102, !120}
!5269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5270, size: 32)
!5270 = !DISubroutineType(types: !5271)
!5271 = !{null, !102, !102}
!5272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5273, size: 32)
!5273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_stress_result", file: !113, line: 62, size: 192, elements: !5274)
!5274 = !{!5275, !5276, !5277, !5278}
!5275 = !DIDerivedType(tag: DW_TAG_member, name: "total_allocs", scope: !5273, file: !113, line: 63, baseType: !137, size: 32)
!5276 = !DIDerivedType(tag: DW_TAG_member, name: "successful_allocs", scope: !5273, file: !113, line: 64, baseType: !137, size: 32, offset: 32)
!5277 = !DIDerivedType(tag: DW_TAG_member, name: "total_frees", scope: !5273, file: !113, line: 65, baseType: !137, size: 32, offset: 64)
!5278 = !DIDerivedType(tag: DW_TAG_member, name: "accumulated_in_use_bytes", scope: !5273, file: !113, line: 66, baseType: !163, size: 64, offset: 128)
!5279 = !{!5280, !5281, !5282, !5283, !5284, !5285, !5286, !5287, !5288, !5289, !5306, !5308, !5313, !5314, !5316, !5317}
!5280 = !DILocalVariable(name: "alloc_fn", arg: 1, scope: !5263, file: !134, line: 300, type: !5266)
!5281 = !DILocalVariable(name: "free_fn", arg: 2, scope: !5263, file: !134, line: 301, type: !5269)
!5282 = !DILocalVariable(name: "arg", arg: 3, scope: !5263, file: !134, line: 302, type: !102)
!5283 = !DILocalVariable(name: "total_bytes", arg: 4, scope: !5263, file: !134, line: 302, type: !120)
!5284 = !DILocalVariable(name: "op_count", arg: 5, scope: !5263, file: !134, line: 303, type: !137)
!5285 = !DILocalVariable(name: "scratch_mem", arg: 6, scope: !5263, file: !134, line: 304, type: !102)
!5286 = !DILocalVariable(name: "scratch_bytes", arg: 7, scope: !5263, file: !134, line: 304, type: !120)
!5287 = !DILocalVariable(name: "target_percent", arg: 8, scope: !5263, file: !134, line: 305, type: !103)
!5288 = !DILocalVariable(name: "result", arg: 9, scope: !5263, file: !134, line: 306, type: !5272)
!5289 = !DILocalVariable(name: "sr", scope: !5263, file: !134, line: 308, type: !5290)
!5290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_stress_rec", file: !134, line: 204, size: 288, elements: !5291)
!5291 = !{!5292, !5293, !5294, !5295, !5296, !5302, !5303, !5304, !5305}
!5292 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_fn", scope: !5290, file: !134, line: 205, baseType: !5266, size: 32)
!5293 = !DIDerivedType(tag: DW_TAG_member, name: "free_fn", scope: !5290, file: !134, line: 206, baseType: !5269, size: 32, offset: 32)
!5294 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !5290, file: !134, line: 207, baseType: !102, size: 32, offset: 64)
!5295 = !DIDerivedType(tag: DW_TAG_member, name: "total_bytes", scope: !5290, file: !134, line: 208, baseType: !120, size: 32, offset: 96)
!5296 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !5290, file: !134, line: 209, baseType: !5297, size: 32, offset: 128)
!5297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5298, size: 32)
!5298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_stress_block", file: !134, line: 216, size: 64, elements: !5299)
!5299 = !{!5300, !5301}
!5300 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !5298, file: !134, line: 217, baseType: !102, size: 32)
!5301 = !DIDerivedType(tag: DW_TAG_member, name: "sz", scope: !5298, file: !134, line: 218, baseType: !120, size: 32, offset: 32)
!5302 = !DIDerivedType(tag: DW_TAG_member, name: "nblocks", scope: !5290, file: !134, line: 210, baseType: !120, size: 32, offset: 160)
!5303 = !DIDerivedType(tag: DW_TAG_member, name: "blocks_alloced", scope: !5290, file: !134, line: 211, baseType: !120, size: 32, offset: 192)
!5304 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_alloced", scope: !5290, file: !134, line: 212, baseType: !120, size: 32, offset: 224)
!5305 = !DIDerivedType(tag: DW_TAG_member, name: "target_percent", scope: !5290, file: !134, line: 213, baseType: !137, size: 32, offset: 256)
!5306 = !DILocalVariable(name: "i", scope: !5307, file: !134, line: 320, type: !137)
!5307 = distinct !DILexicalBlock(scope: !5263, file: !134, line: 320, column: 2)
!5308 = !DILocalVariable(name: "sz", scope: !5309, file: !134, line: 322, type: !120)
!5309 = distinct !DILexicalBlock(scope: !5310, file: !134, line: 321, column: 31)
!5310 = distinct !DILexicalBlock(scope: !5311, file: !134, line: 321, column: 7)
!5311 = distinct !DILexicalBlock(scope: !5312, file: !134, line: 320, column: 42)
!5312 = distinct !DILexicalBlock(scope: !5307, file: !134, line: 320, column: 2)
!5313 = !DILocalVariable(name: "p", scope: !5309, file: !134, line: 323, type: !102)
!5314 = !DILocalVariable(name: "b", scope: !5315, file: !134, line: 334, type: !103)
!5315 = distinct !DILexicalBlock(scope: !5310, file: !134, line: 333, column: 10)
!5316 = !DILocalVariable(name: "p", scope: !5315, file: !134, line: 335, type: !102)
!5317 = !DILocalVariable(name: "sz", scope: !5315, file: !134, line: 336, type: !120)
!5318 = !DILocation(line: 0, scope: !5263)
!5319 = !DILocation(line: 308, column: 2, scope: !5263)
!5320 = !DILocation(line: 308, column: 27, scope: !5263)
!5321 = !DILocation(line: 308, column: 32, scope: !5263)
!5322 = !DILocation(line: 314, column: 34, scope: !5263)
!5323 = !DILocation(line: 318, column: 12, scope: !5263)
!5324 = !DILocation(line: 0, scope: !5307)
!5325 = !DILocation(line: 320, column: 25, scope: !5312)
!5326 = !DILocation(line: 320, column: 2, scope: !5307)
!5327 = !DILocation(line: 346, column: 1, scope: !5263)
!5328 = !DILocation(line: 321, column: 7, scope: !5310)
!5329 = !DILocation(line: 321, column: 7, scope: !5311)
!5330 = !DILocation(line: 322, column: 16, scope: !5309)
!5331 = !DILocation(line: 0, scope: !5309)
!5332 = !DILocation(line: 323, column: 14, scope: !5309)
!5333 = !DILocation(line: 325, column: 24, scope: !5309)
!5334 = !DILocation(line: 326, column: 10, scope: !5335)
!5335 = distinct !DILexicalBlock(scope: !5309, file: !134, line: 326, column: 8)
!5336 = !DILocation(line: 326, column: 8, scope: !5309)
!5337 = !DILocation(line: 327, column: 30, scope: !5338)
!5338 = distinct !DILexicalBlock(scope: !5335, file: !134, line: 326, column: 19)
!5339 = !DILocation(line: 328, column: 34, scope: !5338)
!5340 = !DILocation(line: 328, column: 38, scope: !5338)
!5341 = !DILocation(line: 329, column: 34, scope: !5338)
!5342 = !DILocation(line: 329, column: 37, scope: !5338)
!5343 = !DILocation(line: 330, column: 22, scope: !5338)
!5344 = !DILocation(line: 331, column: 22, scope: !5338)
!5345 = !DILocation(line: 332, column: 4, scope: !5338)
!5346 = !DILocation(line: 334, column: 12, scope: !5315)
!5347 = !DILocation(line: 0, scope: !5315)
!5348 = !DILocation(line: 335, column: 27, scope: !5315)
!5349 = !DILocation(line: 336, column: 29, scope: !5315)
!5350 = !DILocation(line: 338, column: 23, scope: !5315)
!5351 = !DILocation(line: 339, column: 4, scope: !5315)
!5352 = !DILocation(line: 339, column: 47, scope: !5315)
!5353 = !DILocation(line: 339, column: 19, scope: !5315)
!5354 = !DILocation(line: 340, column: 21, scope: !5315)
!5355 = !DILocation(line: 341, column: 21, scope: !5315)
!5356 = !DILocation(line: 342, column: 4, scope: !5315)
!5357 = !DILocation(line: 344, column: 42, scope: !5311)
!5358 = !DILocation(line: 344, column: 39, scope: !5311)
!5359 = !DILocation(line: 344, column: 36, scope: !5311)
!5360 = !DILocation(line: 320, column: 38, scope: !5312)
!5361 = distinct !{!5361, !5326, !5362}
!5362 = !DILocation(line: 345, column: 2, scope: !5307)
!5363 = distinct !DISubprogram(name: "rand_alloc_choice", scope: !134, file: !134, line: 234, type: !5364, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !5367)
!5364 = !DISubroutineType(types: !5365)
!5365 = !{!731, !5366}
!5366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5290, size: 32)
!5367 = !{!5368, !5369, !5373, !5374}
!5368 = !DILocalVariable(name: "sr", arg: 1, scope: !5363, file: !134, line: 234, type: !5366)
!5369 = !DILocalVariable(name: "full_pct", scope: !5370, file: !134, line: 259, type: !137)
!5370 = distinct !DILexicalBlock(scope: !5371, file: !134, line: 241, column: 9)
!5371 = distinct !DILexicalBlock(scope: !5372, file: !134, line: 239, column: 13)
!5372 = distinct !DILexicalBlock(scope: !5363, file: !134, line: 237, column: 6)
!5373 = !DILocalVariable(name: "target", scope: !5370, file: !134, line: 260, type: !137)
!5374 = !DILocalVariable(name: "free_chance", scope: !5370, file: !134, line: 261, type: !137)
!5375 = !DILocation(line: 0, scope: !5363)
!5376 = !DILocation(line: 237, column: 10, scope: !5372)
!5377 = !DILocation(line: 237, column: 25, scope: !5372)
!5378 = !DILocation(line: 237, column: 6, scope: !5363)
!5379 = !DILocation(line: 239, column: 39, scope: !5371)
!5380 = !DILocation(line: 239, column: 32, scope: !5371)
!5381 = !DILocation(line: 239, column: 13, scope: !5372)
!5382 = !DILocation(line: 259, column: 34, scope: !5370)
!5383 = !DILocation(line: 259, column: 28, scope: !5370)
!5384 = !DILocation(line: 259, column: 55, scope: !5370)
!5385 = !DILocation(line: 259, column: 49, scope: !5370)
!5386 = !DILocation(line: 0, scope: !5370)
!5387 = !DILocation(line: 260, column: 25, scope: !5370)
!5388 = !DILocation(line: 263, column: 16, scope: !5389)
!5389 = distinct !DILexicalBlock(scope: !5370, file: !134, line: 263, column: 7)
!5390 = !DILocation(line: 263, column: 7, scope: !5370)
!5391 = !DILocation(line: 264, column: 42, scope: !5392)
!5392 = distinct !DILexicalBlock(scope: !5389, file: !134, line: 263, column: 38)
!5393 = !DILocation(line: 264, column: 27, scope: !5392)
!5394 = !DILocation(line: 265, column: 3, scope: !5392)
!5395 = !DILocation(line: 267, column: 10, scope: !5370)
!5396 = !DILocation(line: 267, column: 19, scope: !5370)
!5397 = !DILocation(line: 0, scope: !5372)
!5398 = !DILocation(line: 269, column: 1, scope: !5363)
!5399 = distinct !DISubprogram(name: "rand_alloc_size", scope: !134, file: !134, line: 274, type: !5400, scopeLine: 275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !5402)
!5400 = !DISubroutineType(types: !5401)
!5401 = !{!120, !5366}
!5402 = !{!5403, !5404}
!5403 = !DILocalVariable(name: "sr", arg: 1, scope: !5399, file: !134, line: 274, type: !5366)
!5404 = !DILocalVariable(name: "scale", scope: !5399, file: !134, line: 281, type: !103)
!5405 = !DILocation(line: 0, scope: !5399)
!5406 = !DILocation(line: 281, column: 32, scope: !5399)
!5407 = !DILocation(line: 281, column: 18, scope: !5399)
!5408 = !DILocation(line: 283, column: 9, scope: !5399)
!5409 = !DILocation(line: 283, column: 20, scope: !5399)
!5410 = !DILocation(line: 283, column: 18, scope: !5399)
!5411 = !DILocation(line: 283, column: 2, scope: !5399)
!5412 = distinct !DISubprogram(name: "rand_free_choice", scope: !134, file: !134, line: 287, type: !5400, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !5413)
!5413 = !{!5414}
!5414 = !DILocalVariable(name: "sr", arg: 1, scope: !5412, file: !134, line: 287, type: !5366)
!5415 = !DILocation(line: 0, scope: !5412)
!5416 = !DILocation(line: 289, column: 9, scope: !5412)
!5417 = !DILocation(line: 289, column: 24, scope: !5412)
!5418 = !DILocation(line: 289, column: 18, scope: !5412)
!5419 = !DILocation(line: 289, column: 2, scope: !5412)
!5420 = !DILocation(line: 229, column: 10, scope: !133)
!5421 = !DILocation(line: 229, column: 16, scope: !133)
!5422 = !DILocation(line: 229, column: 40, scope: !133)
!5423 = !DILocation(line: 229, column: 8, scope: !133)
!5424 = !DILocation(line: 231, column: 26, scope: !133)
!5425 = !DILocation(line: 231, column: 9, scope: !133)
!5426 = !DILocation(line: 231, column: 2, scope: !133)
!5427 = distinct !DISubprogram(name: "heap_print_info", scope: !134, file: !134, line: 351, type: !5428, scopeLine: 352, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !5430)
!5428 = !DISubroutineType(types: !5429)
!5429 = !{null, !4857, !731}
!5430 = !{!5431, !5432, !5433, !5434, !5435, !5436, !5437, !5438, !5439, !5443, !5444, !5445, !5448}
!5431 = !DILocalVariable(name: "h", arg: 1, scope: !5427, file: !134, line: 351, type: !4857)
!5432 = !DILocalVariable(name: "dump_chunks", arg: 2, scope: !5427, file: !134, line: 351, type: !731)
!5433 = !DILocalVariable(name: "i", scope: !5427, file: !134, line: 353, type: !103)
!5434 = !DILocalVariable(name: "nb_buckets", scope: !5427, file: !134, line: 353, type: !103)
!5435 = !DILocalVariable(name: "free_bytes", scope: !5427, file: !134, line: 354, type: !120)
!5436 = !DILocalVariable(name: "allocated_bytes", scope: !5427, file: !134, line: 354, type: !120)
!5437 = !DILocalVariable(name: "total", scope: !5427, file: !134, line: 354, type: !120)
!5438 = !DILocalVariable(name: "overhead", scope: !5427, file: !134, line: 354, type: !120)
!5439 = !DILocalVariable(name: "first", scope: !5440, file: !134, line: 363, type: !3196)
!5440 = distinct !DILexicalBlock(scope: !5441, file: !134, line: 362, column: 35)
!5441 = distinct !DILexicalBlock(scope: !5442, file: !134, line: 362, column: 2)
!5442 = distinct !DILexicalBlock(scope: !5427, file: !134, line: 362, column: 2)
!5443 = !DILocalVariable(name: "largest", scope: !5440, file: !134, line: 364, type: !4129)
!5444 = !DILocalVariable(name: "count", scope: !5440, file: !134, line: 365, type: !103)
!5445 = !DILocalVariable(name: "curr", scope: !5446, file: !134, line: 368, type: !3196)
!5446 = distinct !DILexicalBlock(scope: !5447, file: !134, line: 367, column: 14)
!5447 = distinct !DILexicalBlock(scope: !5440, file: !134, line: 367, column: 7)
!5448 = !DILocalVariable(name: "c", scope: !5449, file: !134, line: 384, type: !3196)
!5449 = distinct !DILexicalBlock(scope: !5450, file: !134, line: 384, column: 3)
!5450 = distinct !DILexicalBlock(scope: !5451, file: !134, line: 382, column: 19)
!5451 = distinct !DILexicalBlock(scope: !5427, file: !134, line: 382, column: 6)
!5452 = !DILocation(line: 0, scope: !5427)
!5453 = !DILocation(line: 353, column: 39, scope: !5427)
!5454 = !DILocation(line: 353, column: 22, scope: !5427)
!5455 = !DILocation(line: 353, column: 50, scope: !5427)
!5456 = !DILocation(line: 354, column: 2, scope: !5427)
!5457 = !DILocation(line: 357, column: 9, scope: !5427)
!5458 = !DILocation(line: 356, column: 2, scope: !5427)
!5459 = !DILocation(line: 359, column: 2, scope: !5427)
!5460 = !DILocation(line: 362, column: 16, scope: !5441)
!5461 = !DILocation(line: 362, column: 2, scope: !5442)
!5462 = !DILocation(line: 363, column: 35, scope: !5440)
!5463 = !DILocation(line: 0, scope: !5440)
!5464 = !DILocation(line: 367, column: 7, scope: !5447)
!5465 = !DILocation(line: 367, column: 7, scope: !5440)
!5466 = !DILocation(line: 0, scope: !5446)
!5467 = !DILocation(line: 370, column: 10, scope: !5468)
!5468 = distinct !DILexicalBlock(scope: !5446, file: !134, line: 369, column: 7)
!5469 = !DILocation(line: 371, column: 15, scope: !5468)
!5470 = !DILocation(line: 372, column: 12, scope: !5468)
!5471 = !DILocation(line: 373, column: 18, scope: !5446)
!5472 = !DILocation(line: 373, column: 4, scope: !5468)
!5473 = distinct !{!5473, !5474, !5475}
!5474 = !DILocation(line: 369, column: 4, scope: !5446)
!5475 = !DILocation(line: 373, column: 26, scope: !5446)
!5476 = !DILocation(line: 377, column: 23, scope: !5477)
!5477 = distinct !DILexicalBlock(scope: !5478, file: !134, line: 375, column: 14)
!5478 = distinct !DILexicalBlock(scope: !5440, file: !134, line: 375, column: 7)
!5479 = !DILocation(line: 378, column: 20, scope: !5477)
!5480 = !DILocation(line: 376, column: 4, scope: !5477)
!5481 = !DILocation(line: 379, column: 3, scope: !5477)
!5482 = !DILocation(line: 362, column: 31, scope: !5441)
!5483 = distinct !{!5483, !5461, !5484}
!5484 = !DILocation(line: 380, column: 2, scope: !5442)
!5485 = !DILocation(line: 382, column: 6, scope: !5427)
!5486 = !DILocation(line: 383, column: 3, scope: !5450)
!5487 = !DILocation(line: 0, scope: !5449)
!5488 = !DILocation(line: 384, column: 8, scope: !5449)
!5489 = !DILocation(line: 387, column: 11, scope: !5490)
!5490 = distinct !DILexicalBlock(scope: !5491, file: !134, line: 384, column: 50)
!5491 = distinct !DILexicalBlock(scope: !5449, file: !134, line: 384, column: 3)
!5492 = !DILocation(line: 390, column: 11, scope: !5490)
!5493 = !DILocation(line: 391, column: 11, scope: !5490)
!5494 = !DILocation(line: 392, column: 11, scope: !5490)
!5495 = !DILocation(line: 385, column: 4, scope: !5490)
!5496 = !DILocation(line: 393, column: 16, scope: !5497)
!5497 = distinct !DILexicalBlock(scope: !5490, file: !134, line: 393, column: 8)
!5498 = !DILocation(line: 393, column: 10, scope: !5497)
!5499 = !DILocation(line: 393, column: 8, scope: !5490)
!5500 = !DILocation(line: 384, column: 31, scope: !5491)
!5501 = !DILocation(line: 384, column: 3, scope: !5491)
!5502 = distinct !{!5502, !5503, !5504}
!5503 = !DILocation(line: 384, column: 3, scope: !5449)
!5504 = !DILocation(line: 396, column: 3, scope: !5449)
!5505 = !DILocation(line: 399, column: 2, scope: !5427)
!5506 = !DILocation(line: 401, column: 13, scope: !5427)
!5507 = !DILocation(line: 401, column: 23, scope: !5427)
!5508 = !DILocation(line: 401, column: 36, scope: !5427)
!5509 = !DILocation(line: 402, column: 21, scope: !5427)
!5510 = !DILocation(line: 402, column: 34, scope: !5427)
!5511 = !DILocation(line: 402, column: 32, scope: !5427)
!5512 = !DILocation(line: 405, column: 15, scope: !5427)
!5513 = !DILocation(line: 405, column: 33, scope: !5427)
!5514 = !DILocation(line: 405, column: 26, scope: !5427)
!5515 = !DILocation(line: 405, column: 37, scope: !5427)
!5516 = !DILocation(line: 405, column: 45, scope: !5427)
!5517 = !DILocation(line: 403, column: 2, scope: !5427)
!5518 = !DILocation(line: 407, column: 1, scope: !5427)
!5519 = distinct !DISubprogram(name: "sys_heap_print_info", scope: !134, file: !134, line: 409, type: !5520, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !5522)
!5520 = !DISubroutineType(types: !5521)
!5521 = !{null, !4853, !731}
!5522 = !{!5523, !5524}
!5523 = !DILocalVariable(name: "heap", arg: 1, scope: !5519, file: !134, line: 409, type: !4853)
!5524 = !DILocalVariable(name: "dump_chunks", arg: 2, scope: !5519, file: !134, line: 409, type: !731)
!5525 = !DILocation(line: 0, scope: !5519)
!5526 = !DILocation(line: 411, column: 24, scope: !5519)
!5527 = !DILocation(line: 411, column: 2, scope: !5519)
!5528 = !DILocation(line: 412, column: 1, scope: !5519)
!5529 = distinct !DISubprogram(name: "sys_heap_runtime_stats_reset_max", scope: !134, file: !134, line: 430, type: !5530, scopeLine: 431, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !5532)
!5530 = !DISubroutineType(types: !5531)
!5531 = !{!103, !4853}
!5532 = !{!5533}
!5533 = !DILocalVariable(name: "heap", arg: 1, scope: !5529, file: !134, line: 430, type: !4853)
!5534 = !DILocation(line: 0, scope: !5529)
!5535 = !DILocation(line: 432, column: 11, scope: !5536)
!5536 = distinct !DILexicalBlock(scope: !5529, file: !134, line: 432, column: 6)
!5537 = !DILocation(line: 432, column: 6, scope: !5529)
!5538 = !DILocation(line: 436, column: 42, scope: !5529)
!5539 = !DILocation(line: 436, column: 48, scope: !5529)
!5540 = !DILocation(line: 436, column: 14, scope: !5529)
!5541 = !DILocation(line: 436, column: 34, scope: !5529)
!5542 = !DILocation(line: 438, column: 2, scope: !5529)
!5543 = !DILocation(line: 439, column: 1, scope: !5529)
!5544 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !3211, file: !3211, line: 1338, type: !5545, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3207, retainedNodes: !5553)
!5545 = !DISubroutineType(types: !5546)
!5546 = !{!103, !3796, !102, !721, !5547, !137}
!5547 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3762, line: 99, baseType: !5548)
!5548 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3762, line: 40, baseType: !5549)
!5549 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !3211, baseType: !5550)
!5550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5551)
!5551 = !{!5552}
!5552 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5550, file: !3211, baseType: !102, size: 32)
!5553 = !{!5554, !5555, !5556, !5557, !5558, !5559, !5563, !5564, !5565, !5567, !5572, !5617, !5620, !5623, !5624, !5625, !5626, !5627, !5628, !5629, !5632, !5633, !5634, !5638, !5641, !5643, !5646, !5647, !5648, !5653, !5659, !5662, !5666, !5672, !5676, !5679, !5681, !5684}
!5554 = !DILocalVariable(name: "out", arg: 1, scope: !5544, file: !3211, line: 1338, type: !3796)
!5555 = !DILocalVariable(name: "ctx", arg: 2, scope: !5544, file: !3211, line: 1338, type: !102)
!5556 = !DILocalVariable(name: "fp", arg: 3, scope: !5544, file: !3211, line: 1338, type: !721)
!5557 = !DILocalVariable(name: "ap", arg: 4, scope: !5544, file: !3211, line: 1339, type: !5547)
!5558 = !DILocalVariable(name: "flags", arg: 5, scope: !5544, file: !3211, line: 1339, type: !137)
!5559 = !DILocalVariable(name: "buf", scope: !5544, file: !3211, line: 1341, type: !5560)
!5560 = !DICompositeType(tag: DW_TAG_array_type, baseType: !109, size: 176, elements: !5561)
!5561 = !{!5562}
!5562 = !DISubrange(count: 22)
!5563 = !DILocalVariable(name: "count", scope: !5544, file: !3211, line: 1342, type: !120)
!5564 = !DILocalVariable(name: "sint", scope: !5544, file: !3211, line: 1343, type: !3230)
!5565 = !DILocalVariable(name: "tagged_ap", scope: !5544, file: !3211, line: 1345, type: !5566)
!5566 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !731)
!5567 = !DILocalVariable(name: "rc", scope: !5568, file: !3211, line: 1377, type: !103)
!5568 = distinct !DILexicalBlock(scope: !5569, file: !3211, line: 1377, column: 4)
!5569 = distinct !DILexicalBlock(scope: !5570, file: !3211, line: 1376, column: 19)
!5570 = distinct !DILexicalBlock(scope: !5571, file: !3211, line: 1376, column: 7)
!5571 = distinct !DILexicalBlock(scope: !5544, file: !3211, line: 1375, column: 19)
!5572 = !DILocalVariable(name: "state", scope: !5571, file: !3211, line: 1395, type: !5573)
!5573 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5544, file: !3211, line: 1392, size: 192, elements: !5574)
!5574 = !{!5575, !5585}
!5575 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !5573, file: !3211, line: 1393, baseType: !5576, size: 64)
!5576 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !3211, line: 166, size: 64, elements: !5577)
!5577 = !{!5578, !5579, !5580, !5582, !5584}
!5578 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !5576, file: !3211, line: 168, baseType: !3230, size: 64)
!5579 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !5576, file: !3211, line: 171, baseType: !3233, size: 64)
!5580 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !5576, file: !3211, line: 174, baseType: !5581, size: 64)
!5581 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!5582 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !5576, file: !3211, line: 177, baseType: !5583, size: 64)
!5583 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!5584 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !5576, file: !3211, line: 180, baseType: !102, size: 32)
!5585 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !5573, file: !3211, line: 1394, baseType: !5586, size: 96, offset: 64)
!5586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !3211, line: 189, size: 96, elements: !5587)
!5587 = !{!5588, !5589, !5590, !5591, !5592, !5593, !5594, !5595, !5596, !5597, !5598, !5599, !5600, !5601, !5602, !5603, !5604, !5605, !5606, !5607, !5612}
!5588 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !5586, file: !3211, line: 191, baseType: !731, size: 1, flags: DIFlagBitField, extraData: i64 0)
!5589 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !5586, file: !3211, line: 194, baseType: !731, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!5590 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !5586, file: !3211, line: 197, baseType: !731, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!5591 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !5586, file: !3211, line: 200, baseType: !731, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!5592 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !5586, file: !3211, line: 203, baseType: !731, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!5593 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !5586, file: !3211, line: 206, baseType: !731, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!5594 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !5586, file: !3211, line: 209, baseType: !731, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!5595 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !5586, file: !3211, line: 212, baseType: !731, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!5596 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !5586, file: !3211, line: 219, baseType: !731, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!5597 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !5586, file: !3211, line: 222, baseType: !731, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!5598 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !5586, file: !3211, line: 229, baseType: !731, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!5599 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !5586, file: !3211, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!5600 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !5586, file: !3211, line: 238, baseType: !731, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!5601 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !5586, file: !3211, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!5602 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !5586, file: !3211, line: 244, baseType: !731, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!5603 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !5586, file: !3211, line: 247, baseType: !731, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!5604 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !5586, file: !3211, line: 252, baseType: !731, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!5605 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !5586, file: !3211, line: 257, baseType: !731, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!5606 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !5586, file: !3211, line: 260, baseType: !241, size: 8, offset: 24)
!5607 = !DIDerivedType(tag: DW_TAG_member, scope: !5586, file: !3211, line: 262, baseType: !5608, size: 32, offset: 32)
!5608 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5586, file: !3211, line: 262, size: 32, elements: !5609)
!5609 = !{!5610, !5611}
!5610 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !5608, file: !3211, line: 267, baseType: !103, size: 32)
!5611 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !5608, file: !3211, line: 289, baseType: !103, size: 32)
!5612 = !DIDerivedType(tag: DW_TAG_member, scope: !5586, file: !3211, line: 292, baseType: !5613, size: 32, offset: 64)
!5613 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5586, file: !3211, line: 292, size: 32, elements: !5614)
!5614 = !{!5615, !5616}
!5615 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !5613, file: !3211, line: 297, baseType: !103, size: 32)
!5616 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !5613, file: !3211, line: 306, baseType: !103, size: 32)
!5617 = !DILocalVariable(name: "conv", scope: !5571, file: !3211, line: 1400, type: !5618)
!5618 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5619)
!5619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5586, size: 32)
!5620 = !DILocalVariable(name: "value", scope: !5571, file: !3211, line: 1401, type: !5621)
!5621 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5622)
!5622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5576, size: 32)
!5623 = !DILocalVariable(name: "sp", scope: !5571, file: !3211, line: 1402, type: !721)
!5624 = !DILocalVariable(name: "width", scope: !5571, file: !3211, line: 1403, type: !103)
!5625 = !DILocalVariable(name: "precision", scope: !5571, file: !3211, line: 1404, type: !103)
!5626 = !DILocalVariable(name: "bps", scope: !5571, file: !3211, line: 1405, type: !721)
!5627 = !DILocalVariable(name: "bpe", scope: !5571, file: !3211, line: 1406, type: !721)
!5628 = !DILocalVariable(name: "sign", scope: !5571, file: !3211, line: 1407, type: !109)
!5629 = !DILocalVariable(name: "arg", scope: !5630, file: !3211, line: 1432, type: !103)
!5630 = distinct !DILexicalBlock(scope: !5631, file: !3211, line: 1431, column: 24)
!5631 = distinct !DILexicalBlock(scope: !5571, file: !3211, line: 1431, column: 7)
!5632 = !DILocalVariable(name: "specifier_cat", scope: !5571, file: !3211, line: 1468, type: !3210)
!5633 = !DILocalVariable(name: "length_mod", scope: !5571, file: !3211, line: 1470, type: !3218)
!5634 = !DILocalVariable(name: "rc", scope: !5635, file: !3211, line: 1575, type: !103)
!5635 = distinct !DILexicalBlock(scope: !5636, file: !3211, line: 1575, column: 4)
!5636 = distinct !DILexicalBlock(scope: !5637, file: !3211, line: 1574, column: 43)
!5637 = distinct !DILexicalBlock(scope: !5571, file: !3211, line: 1574, column: 7)
!5638 = !DILocalVariable(name: "rc", scope: !5639, file: !3211, line: 1584, type: !103)
!5639 = distinct !DILexicalBlock(scope: !5640, file: !3211, line: 1584, column: 4)
!5640 = distinct !DILexicalBlock(scope: !5571, file: !3211, line: 1582, column: 28)
!5641 = !DILocalVariable(name: "len", scope: !5642, file: !3211, line: 1589, type: !120)
!5642 = distinct !DILexicalBlock(scope: !5640, file: !3211, line: 1586, column: 13)
!5643 = !DILocalVariable(name: "len", scope: !5644, file: !3211, line: 1641, type: !120)
!5644 = distinct !DILexicalBlock(scope: !5645, file: !3211, line: 1640, column: 24)
!5645 = distinct !DILexicalBlock(scope: !5640, file: !3211, line: 1640, column: 8)
!5646 = !DILocalVariable(name: "nj_len", scope: !5571, file: !3211, line: 1722, type: !120)
!5647 = !DILocalVariable(name: "pad_len", scope: !5571, file: !3211, line: 1723, type: !103)
!5648 = !DILocalVariable(name: "pad", scope: !5649, file: !3211, line: 1751, type: !109)
!5649 = distinct !DILexicalBlock(scope: !5650, file: !3211, line: 1750, column: 26)
!5650 = distinct !DILexicalBlock(scope: !5651, file: !3211, line: 1750, column: 8)
!5651 = distinct !DILexicalBlock(scope: !5652, file: !3211, line: 1747, column: 18)
!5652 = distinct !DILexicalBlock(scope: !5571, file: !3211, line: 1747, column: 7)
!5653 = !DILocalVariable(name: "rc", scope: !5654, file: !3211, line: 1758, type: !103)
!5654 = distinct !DILexicalBlock(scope: !5655, file: !3211, line: 1758, column: 7)
!5655 = distinct !DILexicalBlock(scope: !5656, file: !3211, line: 1757, column: 21)
!5656 = distinct !DILexicalBlock(scope: !5657, file: !3211, line: 1757, column: 10)
!5657 = distinct !DILexicalBlock(scope: !5658, file: !3211, line: 1756, column: 26)
!5658 = distinct !DILexicalBlock(scope: !5649, file: !3211, line: 1756, column: 9)
!5659 = !DILocalVariable(name: "rc", scope: !5660, file: !3211, line: 1765, type: !103)
!5660 = distinct !DILexicalBlock(scope: !5661, file: !3211, line: 1765, column: 6)
!5661 = distinct !DILexicalBlock(scope: !5649, file: !3211, line: 1764, column: 25)
!5662 = !DILocalVariable(name: "rc", scope: !5663, file: !3211, line: 1774, type: !103)
!5663 = distinct !DILexicalBlock(scope: !5664, file: !3211, line: 1774, column: 4)
!5664 = distinct !DILexicalBlock(scope: !5665, file: !3211, line: 1773, column: 18)
!5665 = distinct !DILexicalBlock(scope: !5571, file: !3211, line: 1773, column: 7)
!5666 = !DILocalVariable(name: "rc", scope: !5667, file: !3211, line: 1819, type: !103)
!5667 = distinct !DILexicalBlock(scope: !5668, file: !3211, line: 1819, column: 5)
!5668 = distinct !DILexicalBlock(scope: !5669, file: !3211, line: 1818, column: 44)
!5669 = distinct !DILexicalBlock(scope: !5670, file: !3211, line: 1818, column: 8)
!5670 = distinct !DILexicalBlock(scope: !5671, file: !3211, line: 1817, column: 10)
!5671 = distinct !DILexicalBlock(scope: !5571, file: !3211, line: 1777, column: 7)
!5672 = !DILocalVariable(name: "rc", scope: !5673, file: !3211, line: 1823, type: !103)
!5673 = distinct !DILexicalBlock(scope: !5674, file: !3211, line: 1823, column: 5)
!5674 = distinct !DILexicalBlock(scope: !5675, file: !3211, line: 1822, column: 26)
!5675 = distinct !DILexicalBlock(scope: !5670, file: !3211, line: 1822, column: 8)
!5676 = !DILocalVariable(name: "rc", scope: !5677, file: !3211, line: 1828, type: !103)
!5677 = distinct !DILexicalBlock(scope: !5678, file: !3211, line: 1828, column: 5)
!5678 = distinct !DILexicalBlock(scope: !5670, file: !3211, line: 1827, column: 26)
!5679 = !DILocalVariable(name: "rc", scope: !5680, file: !3211, line: 1831, type: !103)
!5680 = distinct !DILexicalBlock(scope: !5670, file: !3211, line: 1831, column: 4)
!5681 = !DILocalVariable(name: "rc", scope: !5682, file: !3211, line: 1836, type: !103)
!5682 = distinct !DILexicalBlock(scope: !5683, file: !3211, line: 1836, column: 4)
!5683 = distinct !DILexicalBlock(scope: !5571, file: !3211, line: 1835, column: 21)
!5684 = !DILabel(scope: !5640, name: "prec_int_pad0", file: !3211, line: 1634)
!5685 = !DILocation(line: 0, scope: !5544)
!5686 = !DILocation(line: 1341, column: 2, scope: !5544)
!5687 = !DILocation(line: 1341, column: 7, scope: !5544)
!5688 = !DILocation(line: 1375, column: 2, scope: !5544)
!5689 = !DILocation(line: 1342, column: 9, scope: !5544)
!5690 = !DILocation(line: 1375, column: 9, scope: !5544)
!5691 = !DILocation(line: 1377, column: 4, scope: !5568)
!5692 = !DILocation(line: 0, scope: !5568)
!5693 = !DILocation(line: 1377, column: 4, scope: !5694)
!5694 = distinct !DILexicalBlock(scope: !5568, file: !3211, line: 1377, column: 4)
!5695 = distinct !{!5695, !5688, !5696}
!5696 = !DILocation(line: 1839, column: 2, scope: !5544)
!5697 = !DILocation(line: 1392, column: 3, scope: !5571)
!5698 = !DILocation(line: 1395, column: 5, scope: !5571)
!5699 = !DILocation(line: 0, scope: !5571)
!5700 = !DILocation(line: 1409, column: 8, scope: !5571)
!5701 = !DILocation(line: 1414, column: 13, scope: !5702)
!5702 = distinct !DILexicalBlock(scope: !5571, file: !3211, line: 1414, column: 7)
!5703 = !DILocation(line: 1414, column: 7, scope: !5571)
!5704 = !DILocation(line: 1415, column: 12, scope: !5705)
!5705 = distinct !DILexicalBlock(scope: !5702, file: !3211, line: 1414, column: 25)
!5706 = !DILocation(line: 1417, column: 14, scope: !5707)
!5707 = distinct !DILexicalBlock(scope: !5705, file: !3211, line: 1417, column: 8)
!5708 = !DILocation(line: 1417, column: 8, scope: !5705)
!5709 = !DILocation(line: 1418, column: 21, scope: !5710)
!5710 = distinct !DILexicalBlock(scope: !5707, file: !3211, line: 1417, column: 19)
!5711 = !DILocation(line: 1419, column: 13, scope: !5710)
!5712 = !DILocation(line: 1420, column: 4, scope: !5710)
!5713 = !DILocation(line: 1421, column: 20, scope: !5714)
!5714 = distinct !DILexicalBlock(scope: !5702, file: !3211, line: 1421, column: 14)
!5715 = !DILocation(line: 1421, column: 14, scope: !5702)
!5716 = !DILocation(line: 1431, column: 13, scope: !5631)
!5717 = !DILocation(line: 1431, column: 7, scope: !5571)
!5718 = !DILocation(line: 1432, column: 14, scope: !5630)
!5719 = !DILocation(line: 0, scope: !5630)
!5720 = !DILocation(line: 1434, column: 12, scope: !5721)
!5721 = distinct !DILexicalBlock(scope: !5630, file: !3211, line: 1434, column: 8)
!5722 = !DILocation(line: 1434, column: 8, scope: !5630)
!5723 = !DILocation(line: 1435, column: 24, scope: !5724)
!5724 = distinct !DILexicalBlock(scope: !5721, file: !3211, line: 1434, column: 17)
!5725 = !DILocation(line: 1436, column: 4, scope: !5724)
!5726 = !DILocation(line: 1439, column: 20, scope: !5727)
!5727 = distinct !DILexicalBlock(scope: !5631, file: !3211, line: 1439, column: 14)
!5728 = !DILocation(line: 1439, column: 14, scope: !5631)
!5729 = !DILocation(line: 1469, column: 37, scope: !5571)
!5730 = !DILocation(line: 1448, column: 20, scope: !5571)
!5731 = !DILocation(line: 1449, column: 22, scope: !5571)
!5732 = !DILocation(line: 1471, column: 34, scope: !5571)
!5733 = !DILocation(line: 1478, column: 7, scope: !5571)
!5734 = !DILocation(line: 1479, column: 4, scope: !5735)
!5735 = distinct !DILexicalBlock(scope: !5736, file: !3211, line: 1478, column: 40)
!5736 = distinct !DILexicalBlock(scope: !5571, file: !3211, line: 1478, column: 7)
!5737 = !DILocation(line: 1484, column: 19, scope: !5738)
!5738 = distinct !DILexicalBlock(scope: !5735, file: !3211, line: 1479, column: 24)
!5739 = !DILocation(line: 1484, column: 17, scope: !5738)
!5740 = !DILocation(line: 1485, column: 5, scope: !5738)
!5741 = !DILocation(line: 1492, column: 20, scope: !5742)
!5742 = distinct !DILexicalBlock(scope: !5743, file: !3211, line: 1491, column: 12)
!5743 = distinct !DILexicalBlock(scope: !5738, file: !3211, line: 1487, column: 9)
!5744 = !DILocation(line: 1492, column: 18, scope: !5742)
!5745 = !DILocation(line: 1494, column: 5, scope: !5738)
!5746 = !DILocation(line: 1497, column: 23, scope: !5738)
!5747 = !DILocation(line: 1496, column: 17, scope: !5738)
!5748 = !DILocation(line: 1498, column: 5, scope: !5738)
!5749 = !DILocation(line: 1501, column: 23, scope: !5738)
!5750 = !DILocation(line: 1500, column: 17, scope: !5738)
!5751 = !DILocation(line: 1502, column: 5, scope: !5738)
!5752 = !DILocation(line: 1513, column: 23, scope: !5738)
!5753 = !DILocation(line: 1513, column: 6, scope: !5738)
!5754 = !DILocation(line: 1512, column: 17, scope: !5738)
!5755 = !DILocation(line: 1514, column: 5, scope: !5738)
!5756 = !DILocation(line: 0, scope: !5738)
!5757 = !DILocation(line: 1516, column: 8, scope: !5735)
!5758 = !DILocation(line: 1517, column: 19, scope: !5759)
!5759 = distinct !DILexicalBlock(scope: !5760, file: !3211, line: 1516, column: 33)
!5760 = distinct !DILexicalBlock(scope: !5735, file: !3211, line: 1516, column: 8)
!5761 = !DILocation(line: 1517, column: 17, scope: !5759)
!5762 = !DILocation(line: 1518, column: 4, scope: !5759)
!5763 = !DILocation(line: 1519, column: 19, scope: !5764)
!5764 = distinct !DILexicalBlock(scope: !5765, file: !3211, line: 1518, column: 39)
!5765 = distinct !DILexicalBlock(scope: !5760, file: !3211, line: 1518, column: 15)
!5766 = !DILocation(line: 1519, column: 17, scope: !5764)
!5767 = !DILocation(line: 1520, column: 4, scope: !5764)
!5768 = !DILocation(line: 1522, column: 4, scope: !5769)
!5769 = distinct !DILexicalBlock(scope: !5770, file: !3211, line: 1521, column: 47)
!5770 = distinct !DILexicalBlock(scope: !5736, file: !3211, line: 1521, column: 14)
!5771 = !DILocation(line: 1527, column: 19, scope: !5772)
!5772 = distinct !DILexicalBlock(scope: !5769, file: !3211, line: 1522, column: 24)
!5773 = !DILocation(line: 1527, column: 17, scope: !5772)
!5774 = !DILocation(line: 1528, column: 5, scope: !5772)
!5775 = !DILocation(line: 0, scope: !5776)
!5776 = distinct !DILexicalBlock(scope: !5772, file: !3211, line: 1530, column: 9)
!5777 = !DILocation(line: 1540, column: 23, scope: !5772)
!5778 = !DILocation(line: 1539, column: 17, scope: !5772)
!5779 = !DILocation(line: 1542, column: 5, scope: !5772)
!5780 = !DILocation(line: 1545, column: 23, scope: !5772)
!5781 = !DILocation(line: 1544, column: 17, scope: !5772)
!5782 = !DILocation(line: 1547, column: 5, scope: !5772)
!5783 = !DILocation(line: 1551, column: 23, scope: !5772)
!5784 = !DILocation(line: 1551, column: 6, scope: !5772)
!5785 = !DILocation(line: 1550, column: 17, scope: !5772)
!5786 = !DILocation(line: 1552, column: 5, scope: !5772)
!5787 = !DILocation(line: 0, scope: !5772)
!5788 = !DILocation(line: 1554, column: 8, scope: !5769)
!5789 = !DILocation(line: 1555, column: 19, scope: !5790)
!5790 = distinct !DILexicalBlock(scope: !5791, file: !3211, line: 1554, column: 33)
!5791 = distinct !DILexicalBlock(scope: !5769, file: !3211, line: 1554, column: 8)
!5792 = !DILocation(line: 1555, column: 17, scope: !5790)
!5793 = !DILocation(line: 1556, column: 4, scope: !5790)
!5794 = !DILocation(line: 1557, column: 19, scope: !5795)
!5795 = distinct !DILexicalBlock(scope: !5796, file: !3211, line: 1556, column: 39)
!5796 = distinct !DILexicalBlock(scope: !5791, file: !3211, line: 1556, column: 15)
!5797 = !DILocation(line: 1557, column: 17, scope: !5795)
!5798 = !DILocation(line: 1558, column: 4, scope: !5795)
!5799 = !DILocation(line: 0, scope: !5800)
!5800 = distinct !DILexicalBlock(scope: !5801, file: !3211, line: 1560, column: 8)
!5801 = distinct !DILexicalBlock(scope: !5802, file: !3211, line: 1559, column: 45)
!5802 = distinct !DILexicalBlock(scope: !5770, file: !3211, line: 1559, column: 14)
!5803 = !DILocation(line: 1566, column: 17, scope: !5804)
!5804 = distinct !DILexicalBlock(scope: !5805, file: !3211, line: 1565, column: 46)
!5805 = distinct !DILexicalBlock(scope: !5802, file: !3211, line: 1565, column: 14)
!5806 = !DILocation(line: 1566, column: 15, scope: !5804)
!5807 = !DILocation(line: 1567, column: 3, scope: !5804)
!5808 = !DILocation(line: 1574, column: 21, scope: !5637)
!5809 = !DILocation(line: 1575, column: 4, scope: !5635)
!5810 = !DILocation(line: 0, scope: !5635)
!5811 = !DILocation(line: 1575, column: 4, scope: !5812)
!5812 = distinct !DILexicalBlock(scope: !5635, file: !3211, line: 1575, column: 4)
!5813 = !DILocation(line: 1582, column: 17, scope: !5571)
!5814 = !DILocation(line: 1582, column: 3, scope: !5571)
!5815 = !DILocation(line: 1584, column: 4, scope: !5639)
!5816 = !DILocation(line: 0, scope: !5639)
!5817 = !DILocation(line: 1584, column: 4, scope: !5818)
!5818 = distinct !DILexicalBlock(scope: !5639, file: !3211, line: 1584, column: 4)
!5819 = !DILocation(line: 1587, column: 31, scope: !5642)
!5820 = !DILocation(line: 1591, column: 18, scope: !5821)
!5821 = distinct !DILexicalBlock(scope: !5642, file: !3211, line: 1591, column: 8)
!5822 = !DILocation(line: 1591, column: 8, scope: !5642)
!5823 = !DILocation(line: 1592, column: 11, scope: !5824)
!5824 = distinct !DILexicalBlock(scope: !5821, file: !3211, line: 1591, column: 24)
!5825 = !DILocation(line: 0, scope: !5642)
!5826 = !DILocation(line: 1593, column: 4, scope: !5824)
!5827 = !DILocation(line: 1594, column: 11, scope: !5828)
!5828 = distinct !DILexicalBlock(scope: !5821, file: !3211, line: 1593, column: 11)
!5829 = !DILocation(line: 1604, column: 51, scope: !5640)
!5830 = !DILocation(line: 1604, column: 13, scope: !5640)
!5831 = !DILocation(line: 1604, column: 11, scope: !5640)
!5832 = !DILocation(line: 1606, column: 4, scope: !5640)
!5833 = !DILocation(line: 1609, column: 14, scope: !5834)
!5834 = distinct !DILexicalBlock(scope: !5640, file: !3211, line: 1609, column: 8)
!5835 = !DILocation(line: 1609, column: 8, scope: !5640)
!5836 = !DILocation(line: 1619, column: 18, scope: !5640)
!5837 = !DILocation(line: 1620, column: 13, scope: !5838)
!5838 = distinct !DILexicalBlock(scope: !5640, file: !3211, line: 1620, column: 8)
!5839 = !DILocation(line: 1620, column: 8, scope: !5640)
!5840 = !DILocation(line: 1622, column: 36, scope: !5841)
!5841 = distinct !DILexicalBlock(scope: !5838, file: !3211, line: 1620, column: 18)
!5842 = !DILocation(line: 1622, column: 17, scope: !5841)
!5843 = !DILocation(line: 1623, column: 4, scope: !5841)
!5844 = !DILocation(line: 1632, column: 29, scope: !5640)
!5845 = !DILocation(line: 1632, column: 10, scope: !5640)
!5846 = !DILocation(line: 1632, column: 4, scope: !5640)
!5847 = !DILocation(line: 1407, column: 8, scope: !5571)
!5848 = !DILocation(line: 0, scope: !5640)
!5849 = !DILocation(line: 1634, column: 3, scope: !5640)
!5850 = !DILocation(line: 1640, column: 18, scope: !5645)
!5851 = !DILocation(line: 1640, column: 8, scope: !5640)
!5852 = !DILocation(line: 1729, column: 13, scope: !5853)
!5853 = distinct !DILexicalBlock(scope: !5571, file: !3211, line: 1729, column: 7)
!5854 = !DILocation(line: 1641, column: 22, scope: !5644)
!5855 = !DILocation(line: 0, scope: !5644)
!5856 = !DILocation(line: 1646, column: 21, scope: !5644)
!5857 = !DILocation(line: 1649, column: 13, scope: !5858)
!5858 = distinct !DILexicalBlock(scope: !5644, file: !3211, line: 1649, column: 9)
!5859 = !DILocation(line: 1649, column: 9, scope: !5644)
!5860 = !DILocation(line: 1650, column: 35, scope: !5861)
!5861 = distinct !DILexicalBlock(scope: !5858, file: !3211, line: 1649, column: 34)
!5862 = !DILocation(line: 1650, column: 23, scope: !5861)
!5863 = !DILocation(line: 1651, column: 5, scope: !5861)
!5864 = !DILocation(line: 1660, column: 15, scope: !5865)
!5865 = distinct !DILexicalBlock(scope: !5640, file: !3211, line: 1660, column: 8)
!5866 = !DILocation(line: 1660, column: 19, scope: !5865)
!5867 = !DILocation(line: 1660, column: 8, scope: !5640)
!5868 = !DILocation(line: 1661, column: 23, scope: !5869)
!5869 = distinct !DILexicalBlock(scope: !5865, file: !3211, line: 1660, column: 28)
!5870 = !DILocation(line: 1661, column: 11, scope: !5869)
!5871 = !DILocation(line: 1665, column: 22, scope: !5869)
!5872 = !DILocation(line: 1666, column: 21, scope: !5869)
!5873 = !DILocation(line: 1668, column: 5, scope: !5869)
!5874 = !DILocation(line: 1677, column: 30, scope: !5875)
!5875 = distinct !DILexicalBlock(scope: !5876, file: !3211, line: 1676, column: 49)
!5876 = distinct !DILexicalBlock(scope: !5640, file: !3211, line: 1676, column: 8)
!5877 = !DILocation(line: 1677, column: 5, scope: !5875)
!5878 = !DILocation(line: 1680, column: 4, scope: !5640)
!5879 = !DILocation(line: 0, scope: !5821)
!5880 = !DILocation(line: 1597, column: 14, scope: !5642)
!5881 = !DILocation(line: 1699, column: 11, scope: !5882)
!5882 = distinct !DILexicalBlock(scope: !5571, file: !3211, line: 1699, column: 7)
!5883 = !DILocation(line: 1699, column: 7, scope: !5571)
!5884 = !DILocation(line: 1725, column: 7, scope: !5885)
!5885 = distinct !DILexicalBlock(scope: !5571, file: !3211, line: 1725, column: 7)
!5886 = !DILocation(line: 1725, column: 12, scope: !5885)
!5887 = !DILocation(line: 1747, column: 13, scope: !5652)
!5888 = !DILocation(line: 1747, column: 7, scope: !5571)
!5889 = !DILocation(line: 1722, column: 24, scope: !5571)
!5890 = !DILocation(line: 1725, column: 7, scope: !5571)
!5891 = !DILocation(line: 1729, column: 7, scope: !5571)
!5892 = !DILocation(line: 1736, column: 13, scope: !5893)
!5893 = distinct !DILexicalBlock(scope: !5571, file: !3211, line: 1736, column: 7)
!5894 = !DILocation(line: 1735, column: 19, scope: !5571)
!5895 = !DILocation(line: 1736, column: 7, scope: !5571)
!5896 = !DILocation(line: 1748, column: 10, scope: !5651)
!5897 = !DILocation(line: 1750, column: 15, scope: !5650)
!5898 = !DILocation(line: 1750, column: 8, scope: !5651)
!5899 = !DILocation(line: 0, scope: !5649)
!5900 = !DILocation(line: 1756, column: 15, scope: !5658)
!5901 = !DILocation(line: 1756, column: 9, scope: !5649)
!5902 = !DILocation(line: 1758, column: 7, scope: !5654)
!5903 = !DILocation(line: 0, scope: !5654)
!5904 = !DILocation(line: 1758, column: 7, scope: !5905)
!5905 = distinct !DILexicalBlock(scope: !5654, file: !3211, line: 1758, column: 7)
!5906 = !DILocation(line: 1764, column: 5, scope: !5649)
!5907 = !DILocation(line: 0, scope: !5651)
!5908 = !DILocation(line: 1764, column: 20, scope: !5649)
!5909 = !DILocation(line: 1764, column: 17, scope: !5649)
!5910 = !DILocation(line: 1765, column: 6, scope: !5660)
!5911 = !DILocation(line: 0, scope: !5660)
!5912 = !DILocation(line: 1765, column: 6, scope: !5913)
!5913 = distinct !DILexicalBlock(scope: !5660, file: !3211, line: 1765, column: 6)
!5914 = distinct !{!5914, !5906, !5915}
!5915 = !DILocation(line: 1766, column: 5, scope: !5649)
!5916 = !DILocation(line: 1773, column: 12, scope: !5665)
!5917 = !DILocation(line: 1773, column: 7, scope: !5571)
!5918 = !DILocation(line: 1773, column: 7, scope: !5665)
!5919 = !DILocation(line: 1774, column: 4, scope: !5663)
!5920 = !DILocation(line: 0, scope: !5663)
!5921 = !DILocation(line: 1774, column: 4, scope: !5922)
!5922 = distinct !DILexicalBlock(scope: !5663, file: !3211, line: 1774, column: 4)
!5923 = !DILocation(line: 1818, column: 8, scope: !5669)
!5924 = !DILocation(line: 1818, column: 27, scope: !5669)
!5925 = !DILocation(line: 1818, column: 25, scope: !5669)
!5926 = !DILocation(line: 1818, column: 8, scope: !5670)
!5927 = !DILocation(line: 1819, column: 5, scope: !5667)
!5928 = !DILocation(line: 0, scope: !5667)
!5929 = !DILocation(line: 1819, column: 5, scope: !5930)
!5930 = distinct !DILexicalBlock(scope: !5667, file: !3211, line: 1819, column: 5)
!5931 = !DILocation(line: 1822, column: 14, scope: !5675)
!5932 = !DILocation(line: 1822, column: 8, scope: !5670)
!5933 = !DILocation(line: 1823, column: 5, scope: !5673)
!5934 = !DILocation(line: 0, scope: !5673)
!5935 = !DILocation(line: 1823, column: 5, scope: !5936)
!5936 = distinct !DILexicalBlock(scope: !5673, file: !3211, line: 1823, column: 5)
!5937 = !DILocation(line: 1826, column: 20, scope: !5670)
!5938 = !DILocation(line: 1827, column: 4, scope: !5670)
!5939 = !DILocation(line: 0, scope: !5670)
!5940 = !DILocation(line: 1827, column: 21, scope: !5670)
!5941 = !DILocation(line: 1827, column: 18, scope: !5670)
!5942 = !DILocation(line: 1828, column: 5, scope: !5677)
!5943 = !DILocation(line: 0, scope: !5677)
!5944 = !DILocation(line: 1828, column: 5, scope: !5945)
!5945 = distinct !DILexicalBlock(scope: !5677, file: !3211, line: 1828, column: 5)
!5946 = distinct !{!5946, !5938, !5947}
!5947 = !DILocation(line: 1829, column: 4, scope: !5670)
!5948 = !DILocation(line: 1831, column: 4, scope: !5680)
!5949 = !DILocation(line: 0, scope: !5680)
!5950 = !DILocation(line: 1831, column: 4, scope: !5951)
!5951 = distinct !DILexicalBlock(scope: !5680, file: !3211, line: 1831, column: 4)
!5952 = !DILocation(line: 1835, column: 16, scope: !5571)
!5953 = !DILocation(line: 1835, column: 3, scope: !5571)
!5954 = !DILocation(line: 1836, column: 4, scope: !5682)
!5955 = !DILocation(line: 0, scope: !5682)
!5956 = !DILocation(line: 1836, column: 4, scope: !5957)
!5957 = distinct !DILexicalBlock(scope: !5682, file: !3211, line: 1836, column: 4)
!5958 = !DILocation(line: 1837, column: 4, scope: !5683)
!5959 = distinct !{!5959, !5953, !5960}
!5960 = !DILocation(line: 1838, column: 3, scope: !5571)
!5961 = !DILocation(line: 1844, column: 1, scope: !5544)
!5962 = distinct !DISubprogram(name: "extract_conversion", scope: !3211, file: !3211, line: 642, type: !5963, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3207, retainedNodes: !5965)
!5963 = !DISubroutineType(types: !5964)
!5964 = !{!721, !5619, !721}
!5965 = !{!5966, !5967}
!5966 = !DILocalVariable(name: "conv", arg: 1, scope: !5962, file: !3211, line: 642, type: !5619)
!5967 = !DILocalVariable(name: "sp", arg: 2, scope: !5962, file: !3211, line: 643, type: !721)
!5968 = !DILocation(line: 0, scope: !5962)
!5969 = !DILocation(line: 645, column: 10, scope: !5962)
!5970 = !DILocation(line: 653, column: 2, scope: !5962)
!5971 = !DILocation(line: 654, column: 6, scope: !5972)
!5972 = distinct !DILexicalBlock(scope: !5962, file: !3211, line: 654, column: 6)
!5973 = !DILocation(line: 654, column: 10, scope: !5972)
!5974 = !DILocation(line: 654, column: 6, scope: !5962)
!5975 = !DILocation(line: 655, column: 24, scope: !5976)
!5976 = distinct !DILexicalBlock(scope: !5972, file: !3211, line: 654, column: 18)
!5977 = !DILocation(line: 655, column: 19, scope: !5976)
!5978 = !DILocation(line: 656, column: 3, scope: !5976)
!5979 = !DILocation(line: 659, column: 7, scope: !5962)
!5980 = !DILocation(line: 660, column: 7, scope: !5962)
!5981 = !DILocation(line: 661, column: 7, scope: !5962)
!5982 = !DILocation(line: 662, column: 7, scope: !5962)
!5983 = !DILocation(line: 663, column: 7, scope: !5962)
!5984 = !DILocation(line: 665, column: 2, scope: !5962)
!5985 = !DILocation(line: 666, column: 1, scope: !5962)
!5986 = distinct !DISubprogram(name: "outs", scope: !3211, file: !3211, line: 1319, type: !5987, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3207, retainedNodes: !5989)
!5987 = !DISubroutineType(types: !5988)
!5988 = !{!103, !3796, !102, !721, !721}
!5989 = !{!5990, !5991, !5992, !5993, !5994, !5995}
!5990 = !DILocalVariable(name: "out", arg: 1, scope: !5986, file: !3211, line: 1319, type: !3796)
!5991 = !DILocalVariable(name: "ctx", arg: 2, scope: !5986, file: !3211, line: 1320, type: !102)
!5992 = !DILocalVariable(name: "sp", arg: 3, scope: !5986, file: !3211, line: 1321, type: !721)
!5993 = !DILocalVariable(name: "ep", arg: 4, scope: !5986, file: !3211, line: 1322, type: !721)
!5994 = !DILocalVariable(name: "count", scope: !5986, file: !3211, line: 1324, type: !120)
!5995 = !DILocalVariable(name: "rc", scope: !5996, file: !3211, line: 1327, type: !103)
!5996 = distinct !DILexicalBlock(scope: !5986, file: !3211, line: 1326, column: 45)
!5997 = !DILocation(line: 0, scope: !5986)
!5998 = !DILocation(line: 1326, column: 2, scope: !5986)
!5999 = !DILocation(line: 1324, column: 9, scope: !5986)
!6000 = !DILocation(line: 1326, column: 13, scope: !5986)
!6001 = !DILocation(line: 1326, column: 19, scope: !5986)
!6002 = !DILocation(line: 1327, column: 21, scope: !5996)
!6003 = !DILocation(line: 1326, column: 36, scope: !5986)
!6004 = !DILocation(line: 1326, column: 39, scope: !5986)
!6005 = !DILocation(line: 1327, column: 24, scope: !5996)
!6006 = !DILocation(line: 1327, column: 16, scope: !5996)
!6007 = !DILocation(line: 1327, column: 12, scope: !5996)
!6008 = !DILocation(line: 0, scope: !5996)
!6009 = !DILocation(line: 1329, column: 10, scope: !6010)
!6010 = distinct !DILexicalBlock(scope: !5996, file: !3211, line: 1329, column: 7)
!6011 = !DILocation(line: 1329, column: 7, scope: !5996)
!6012 = distinct !{!6012, !5998, !6013}
!6013 = !DILocation(line: 1333, column: 2, scope: !5986)
!6014 = !DILocation(line: 1336, column: 1, scope: !5986)
!6015 = distinct !DISubprogram(name: "encode_uint", scope: !3211, file: !3211, line: 788, type: !6016, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3207, retainedNodes: !6018)
!6016 = !DISubroutineType(types: !6017)
!6017 = !{!2684, !3233, !5619, !2684, !721}
!6018 = !{!6019, !6020, !6021, !6022, !6023, !6024, !6026, !6027}
!6019 = !DILocalVariable(name: "value", arg: 1, scope: !6015, file: !3211, line: 788, type: !3233)
!6020 = !DILocalVariable(name: "conv", arg: 2, scope: !6015, file: !3211, line: 789, type: !5619)
!6021 = !DILocalVariable(name: "bps", arg: 3, scope: !6015, file: !3211, line: 790, type: !2684)
!6022 = !DILocalVariable(name: "bpe", arg: 4, scope: !6015, file: !3211, line: 791, type: !721)
!6023 = !DILocalVariable(name: "upcase", scope: !6015, file: !3211, line: 793, type: !731)
!6024 = !DILocalVariable(name: "radix", scope: !6015, file: !3211, line: 794, type: !6025)
!6025 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!6026 = !DILocalVariable(name: "bp", scope: !6015, file: !3211, line: 795, type: !2684)
!6027 = !DILocalVariable(name: "lsv", scope: !6028, file: !3211, line: 798, type: !32)
!6028 = distinct !DILexicalBlock(scope: !6015, file: !3211, line: 797, column: 5)
!6029 = !DILocation(line: 0, scope: !6015)
!6030 = !DILocation(line: 793, column: 35, scope: !6015)
!6031 = !DILocation(line: 793, column: 24, scope: !6015)
!6032 = !DILocation(line: 793, column: 16, scope: !6015)
!6033 = !DILocation(line: 794, column: 29, scope: !6015)
!6034 = !DILocation(line: 795, column: 24, scope: !6015)
!6035 = !DILocation(line: 795, column: 17, scope: !6015)
!6036 = !DILocation(line: 797, column: 2, scope: !6015)
!6037 = !DILocation(line: 802, column: 9, scope: !6028)
!6038 = !DILocation(line: 798, column: 22, scope: !6028)
!6039 = !DILocation(line: 0, scope: !6028)
!6040 = !DILocation(line: 800, column: 16, scope: !6028)
!6041 = !DILocation(line: 800, column: 11, scope: !6028)
!6042 = !DILocation(line: 800, column: 4, scope: !6028)
!6043 = !DILocation(line: 800, column: 9, scope: !6028)
!6044 = !DILocation(line: 803, column: 18, scope: !6015)
!6045 = !DILocation(line: 803, column: 24, scope: !6015)
!6046 = !DILocation(line: 803, column: 2, scope: !6028)
!6047 = distinct !{!6047, !6036, !6048}
!6048 = !DILocation(line: 803, column: 37, scope: !6015)
!6049 = !DILocation(line: 808, column: 12, scope: !6050)
!6050 = distinct !DILexicalBlock(scope: !6015, file: !3211, line: 808, column: 6)
!6051 = !DILocation(line: 808, column: 6, scope: !6015)
!6052 = !DILocation(line: 809, column: 7, scope: !6053)
!6053 = distinct !DILexicalBlock(scope: !6050, file: !3211, line: 808, column: 23)
!6054 = !DILocation(line: 813, column: 3, scope: !6055)
!6055 = distinct !DILexicalBlock(scope: !6056, file: !3211, line: 811, column: 27)
!6056 = distinct !DILexicalBlock(scope: !6057, file: !3211, line: 811, column: 14)
!6057 = distinct !DILexicalBlock(scope: !6053, file: !3211, line: 809, column: 7)
!6058 = !DILocation(line: 0, scope: !6057)
!6059 = !DILocation(line: 818, column: 2, scope: !6015)
!6060 = distinct !DISubprogram(name: "store_count", scope: !3211, file: !3211, line: 1280, type: !6061, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3207, retainedNodes: !6065)
!6061 = !DISubroutineType(types: !6062)
!6062 = !{null, !6063, !102, !103}
!6063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6064, size: 32)
!6064 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5586)
!6065 = !{!6066, !6067, !6068}
!6066 = !DILocalVariable(name: "conv", arg: 1, scope: !6060, file: !3211, line: 1280, type: !6063)
!6067 = !DILocalVariable(name: "dp", arg: 2, scope: !6060, file: !3211, line: 1281, type: !102)
!6068 = !DILocalVariable(name: "count", arg: 3, scope: !6060, file: !3211, line: 1282, type: !103)
!6069 = !DILocation(line: 0, scope: !6060)
!6070 = !DILocation(line: 1284, column: 38, scope: !6060)
!6071 = !DILocation(line: 1284, column: 2, scope: !6060)
!6072 = !DILocation(line: 1286, column: 4, scope: !6073)
!6073 = distinct !DILexicalBlock(scope: !6060, file: !3211, line: 1284, column: 50)
!6074 = !DILocation(line: 1286, column: 14, scope: !6073)
!6075 = !DILocation(line: 1287, column: 3, scope: !6073)
!6076 = !DILocation(line: 1289, column: 24, scope: !6073)
!6077 = !DILocation(line: 1289, column: 22, scope: !6073)
!6078 = !DILocation(line: 1290, column: 3, scope: !6073)
!6079 = !DILocation(line: 1292, column: 18, scope: !6073)
!6080 = !DILocation(line: 1292, column: 4, scope: !6073)
!6081 = !DILocation(line: 1292, column: 16, scope: !6073)
!6082 = !DILocation(line: 1293, column: 3, scope: !6073)
!6083 = !DILocation(line: 1295, column: 4, scope: !6073)
!6084 = !DILocation(line: 1295, column: 15, scope: !6073)
!6085 = !DILocation(line: 1296, column: 3, scope: !6073)
!6086 = !DILocation(line: 1298, column: 22, scope: !6073)
!6087 = !DILocation(line: 1298, column: 4, scope: !6073)
!6088 = !DILocation(line: 1298, column: 20, scope: !6073)
!6089 = !DILocation(line: 1299, column: 3, scope: !6073)
!6090 = !DILocation(line: 1301, column: 21, scope: !6073)
!6091 = !DILocation(line: 1301, column: 4, scope: !6073)
!6092 = !DILocation(line: 1301, column: 19, scope: !6073)
!6093 = !DILocation(line: 1302, column: 3, scope: !6073)
!6094 = !DILocation(line: 1304, column: 4, scope: !6073)
!6095 = !DILocation(line: 1304, column: 17, scope: !6073)
!6096 = !DILocation(line: 1305, column: 3, scope: !6073)
!6097 = !DILocation(line: 1307, column: 4, scope: !6073)
!6098 = !DILocation(line: 1307, column: 20, scope: !6073)
!6099 = !DILocation(line: 1308, column: 3, scope: !6073)
!6100 = !DILocation(line: 1316, column: 1, scope: !6060)
!6101 = distinct !DISubprogram(name: "isupper", scope: !6102, file: !6102, line: 16, type: !129, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3207, retainedNodes: !6103)
!6102 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6103 = !{!6104}
!6104 = !DILocalVariable(name: "a", arg: 1, scope: !6101, file: !6102, line: 16, type: !103)
!6105 = !DILocation(line: 0, scope: !6101)
!6106 = !DILocation(line: 18, column: 29, scope: !6101)
!6107 = !DILocation(line: 18, column: 45, scope: !6101)
!6108 = !DILocation(line: 18, column: 2, scope: !6101)
!6109 = distinct !DISubprogram(name: "conversion_radix", scope: !3211, file: !3211, line: 761, type: !6110, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3207, retainedNodes: !6112)
!6110 = !DISubroutineType(types: !6111)
!6111 = !{!120, !109}
!6112 = !{!6113}
!6113 = !DILocalVariable(name: "specifier", arg: 1, scope: !6109, file: !3211, line: 761, type: !109)
!6114 = !DILocation(line: 0, scope: !6109)
!6115 = !DILocation(line: 763, column: 2, scope: !6109)
!6116 = !DILocation(line: 770, column: 3, scope: !6117)
!6117 = distinct !DILexicalBlock(scope: !6109, file: !3211, line: 763, column: 21)
!6118 = !DILocation(line: 774, column: 3, scope: !6117)
!6119 = !DILocation(line: 0, scope: !6117)
!6120 = !DILocation(line: 776, column: 1, scope: !6109)
!6121 = distinct !DISubprogram(name: "extract_flags", scope: !3211, file: !3211, line: 339, type: !5963, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3207, retainedNodes: !6122)
!6122 = !{!6123, !6124, !6125}
!6123 = !DILocalVariable(name: "conv", arg: 1, scope: !6121, file: !3211, line: 339, type: !5619)
!6124 = !DILocalVariable(name: "sp", arg: 2, scope: !6121, file: !3211, line: 340, type: !721)
!6125 = !DILocalVariable(name: "loop", scope: !6121, file: !3211, line: 342, type: !731)
!6126 = !DILocation(line: 0, scope: !6121)
!6127 = !DILocation(line: 344, column: 2, scope: !6121)
!6128 = !DILocation(line: 345, column: 11, scope: !6129)
!6129 = distinct !DILexicalBlock(scope: !6121, file: !3211, line: 344, column: 5)
!6130 = !DILocation(line: 345, column: 3, scope: !6129)
!6131 = !DILocation(line: 351, column: 4, scope: !6132)
!6132 = distinct !DILexicalBlock(scope: !6129, file: !3211, line: 345, column: 16)
!6133 = !DILocation(line: 354, column: 4, scope: !6132)
!6134 = !DILocation(line: 357, column: 4, scope: !6132)
!6135 = !DILocation(line: 360, column: 4, scope: !6132)
!6136 = !DILocation(line: 0, scope: !6132)
!6137 = !DILocation(line: 370, column: 12, scope: !6138)
!6138 = distinct !DILexicalBlock(scope: !6121, file: !3211, line: 370, column: 6)
!6139 = !DILocation(line: 370, column: 22, scope: !6138)
!6140 = !DILocation(line: 371, column: 19, scope: !6141)
!6141 = distinct !DILexicalBlock(scope: !6138, file: !3211, line: 370, column: 42)
!6142 = !DILocation(line: 372, column: 2, scope: !6141)
!6143 = !DILocation(line: 376, column: 2, scope: !6121)
!6144 = distinct !DISubprogram(name: "extract_width", scope: !3211, file: !3211, line: 388, type: !5963, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3207, retainedNodes: !6145)
!6145 = !{!6146, !6147, !6148, !6149}
!6146 = !DILocalVariable(name: "conv", arg: 1, scope: !6144, file: !3211, line: 388, type: !5619)
!6147 = !DILocalVariable(name: "sp", arg: 2, scope: !6144, file: !3211, line: 389, type: !721)
!6148 = !DILocalVariable(name: "wp", scope: !6144, file: !3211, line: 398, type: !721)
!6149 = !DILocalVariable(name: "width", scope: !6144, file: !3211, line: 399, type: !120)
!6150 = !DILocation(line: 0, scope: !6144)
!6151 = !DILocation(line: 391, column: 8, scope: !6144)
!6152 = !DILocation(line: 391, column: 22, scope: !6144)
!6153 = !DILocation(line: 393, column: 6, scope: !6154)
!6154 = distinct !DILexicalBlock(scope: !6144, file: !3211, line: 393, column: 6)
!6155 = !DILocation(line: 393, column: 10, scope: !6154)
!6156 = !DILocation(line: 393, column: 6, scope: !6144)
!6157 = !DILocation(line: 394, column: 20, scope: !6158)
!6158 = distinct !DILexicalBlock(scope: !6154, file: !3211, line: 393, column: 18)
!6159 = !DILocation(line: 395, column: 10, scope: !6158)
!6160 = !DILocation(line: 395, column: 3, scope: !6158)
!6161 = !DILocation(line: 399, column: 17, scope: !6144)
!6162 = !DILocation(line: 401, column: 6, scope: !6163)
!6163 = distinct !DILexicalBlock(scope: !6144, file: !3211, line: 401, column: 6)
!6164 = !DILocation(line: 401, column: 9, scope: !6163)
!6165 = !DILocation(line: 401, column: 6, scope: !6144)
!6166 = !DILocation(line: 402, column: 23, scope: !6167)
!6167 = distinct !DILexicalBlock(scope: !6163, file: !3211, line: 401, column: 16)
!6168 = !DILocation(line: 403, column: 9, scope: !6167)
!6169 = !DILocation(line: 403, column: 21, scope: !6167)
!6170 = !DILocation(line: 405, column: 11, scope: !6167)
!6171 = !DILocation(line: 404, column: 21, scope: !6167)
!6172 = !DILocation(line: 406, column: 2, scope: !6167)
!6173 = !DILocation(line: 409, column: 1, scope: !6144)
!6174 = distinct !DISubprogram(name: "extract_prec", scope: !3211, file: !3211, line: 420, type: !5963, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3207, retainedNodes: !6175)
!6175 = !{!6176, !6177, !6178}
!6176 = !DILocalVariable(name: "conv", arg: 1, scope: !6174, file: !3211, line: 420, type: !5619)
!6177 = !DILocalVariable(name: "sp", arg: 2, scope: !6174, file: !3211, line: 421, type: !721)
!6178 = !DILocalVariable(name: "prec", scope: !6174, file: !3211, line: 435, type: !120)
!6179 = !DILocation(line: 0, scope: !6174)
!6180 = !DILocation(line: 423, column: 24, scope: !6174)
!6181 = !DILocation(line: 423, column: 28, scope: !6174)
!6182 = !DILocation(line: 423, column: 8, scope: !6174)
!6183 = !DILocation(line: 423, column: 21, scope: !6174)
!6184 = !DILocation(line: 425, column: 6, scope: !6174)
!6185 = !DILocation(line: 428, column: 2, scope: !6174)
!6186 = !DILocation(line: 430, column: 6, scope: !6187)
!6187 = distinct !DILexicalBlock(scope: !6174, file: !3211, line: 430, column: 6)
!6188 = !DILocation(line: 430, column: 10, scope: !6187)
!6189 = !DILocation(line: 430, column: 6, scope: !6174)
!6190 = !DILocation(line: 431, column: 19, scope: !6191)
!6191 = distinct !DILexicalBlock(scope: !6187, file: !3211, line: 430, column: 18)
!6192 = !DILocation(line: 432, column: 10, scope: !6191)
!6193 = !DILocation(line: 432, column: 3, scope: !6191)
!6194 = !DILocation(line: 435, column: 16, scope: !6174)
!6195 = !DILocation(line: 437, column: 8, scope: !6174)
!6196 = !DILocation(line: 437, column: 19, scope: !6174)
!6197 = !DILocation(line: 439, column: 10, scope: !6174)
!6198 = !DILocation(line: 438, column: 20, scope: !6174)
!6199 = !DILocation(line: 441, column: 9, scope: !6174)
!6200 = !DILocation(line: 442, column: 1, scope: !6174)
!6201 = distinct !DISubprogram(name: "extract_length", scope: !3211, file: !3211, line: 453, type: !5963, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3207, retainedNodes: !6202)
!6202 = !{!6203, !6204}
!6203 = !DILocalVariable(name: "conv", arg: 1, scope: !6201, file: !3211, line: 453, type: !5619)
!6204 = !DILocalVariable(name: "sp", arg: 2, scope: !6201, file: !3211, line: 454, type: !721)
!6205 = !DILocation(line: 0, scope: !6201)
!6206 = !DILocation(line: 456, column: 10, scope: !6201)
!6207 = !DILocation(line: 456, column: 2, scope: !6201)
!6208 = !DILocation(line: 458, column: 8, scope: !6209)
!6209 = distinct !DILexicalBlock(scope: !6210, file: !3211, line: 458, column: 7)
!6210 = distinct !DILexicalBlock(scope: !6201, file: !3211, line: 456, column: 15)
!6211 = !DILocation(line: 458, column: 7, scope: !6209)
!6212 = !DILocation(line: 458, column: 13, scope: !6209)
!6213 = !DILocation(line: 0, scope: !6209)
!6214 = !DILocation(line: 458, column: 7, scope: !6210)
!6215 = !DILocation(line: 459, column: 21, scope: !6216)
!6216 = distinct !DILexicalBlock(scope: !6209, file: !3211, line: 458, column: 21)
!6217 = !DILocation(line: 460, column: 4, scope: !6216)
!6218 = !DILocation(line: 461, column: 3, scope: !6216)
!6219 = !DILocation(line: 462, column: 21, scope: !6220)
!6220 = distinct !DILexicalBlock(scope: !6209, file: !3211, line: 461, column: 10)
!6221 = !DILocation(line: 466, column: 8, scope: !6222)
!6222 = distinct !DILexicalBlock(scope: !6210, file: !3211, line: 466, column: 7)
!6223 = !DILocation(line: 466, column: 7, scope: !6222)
!6224 = !DILocation(line: 466, column: 13, scope: !6222)
!6225 = !DILocation(line: 0, scope: !6222)
!6226 = !DILocation(line: 466, column: 7, scope: !6210)
!6227 = !DILocation(line: 467, column: 21, scope: !6228)
!6228 = distinct !DILexicalBlock(scope: !6222, file: !3211, line: 466, column: 21)
!6229 = !DILocation(line: 468, column: 4, scope: !6228)
!6230 = !DILocation(line: 469, column: 3, scope: !6228)
!6231 = !DILocation(line: 470, column: 21, scope: !6232)
!6232 = distinct !DILexicalBlock(scope: !6222, file: !3211, line: 469, column: 10)
!6233 = !DILocation(line: 474, column: 9, scope: !6210)
!6234 = !DILocation(line: 474, column: 20, scope: !6210)
!6235 = !DILocation(line: 475, column: 3, scope: !6210)
!6236 = !DILocation(line: 476, column: 3, scope: !6210)
!6237 = !DILocation(line: 478, column: 9, scope: !6210)
!6238 = !DILocation(line: 478, column: 20, scope: !6210)
!6239 = !DILocation(line: 479, column: 3, scope: !6210)
!6240 = !DILocation(line: 480, column: 3, scope: !6210)
!6241 = !DILocation(line: 482, column: 9, scope: !6210)
!6242 = !DILocation(line: 482, column: 20, scope: !6210)
!6243 = !DILocation(line: 483, column: 3, scope: !6210)
!6244 = !DILocation(line: 484, column: 3, scope: !6210)
!6245 = !DILocation(line: 486, column: 9, scope: !6210)
!6246 = !DILocation(line: 486, column: 20, scope: !6210)
!6247 = !DILocation(line: 487, column: 3, scope: !6210)
!6248 = !DILocation(line: 492, column: 21, scope: !6210)
!6249 = !DILocation(line: 493, column: 3, scope: !6210)
!6250 = !DILocation(line: 495, column: 9, scope: !6210)
!6251 = !DILocation(line: 495, column: 20, scope: !6210)
!6252 = !DILocation(line: 496, column: 3, scope: !6210)
!6253 = !DILocation(line: 498, column: 2, scope: !6201)
!6254 = distinct !DISubprogram(name: "extract_specifier", scope: !3211, file: !3211, line: 513, type: !5963, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3207, retainedNodes: !6255)
!6255 = !{!6256, !6257, !6258, !6259}
!6256 = !DILocalVariable(name: "conv", arg: 1, scope: !6254, file: !3211, line: 513, type: !5619)
!6257 = !DILocalVariable(name: "sp", arg: 2, scope: !6254, file: !3211, line: 514, type: !721)
!6258 = !DILocalVariable(name: "unsupported", scope: !6254, file: !3211, line: 516, type: !731)
!6259 = !DILabel(scope: !6260, name: "int_conv", file: !3211, line: 526)
!6260 = distinct !DILexicalBlock(scope: !6254, file: !3211, line: 520, column: 27)
!6261 = !DILocation(line: 0, scope: !6254)
!6262 = !DILocation(line: 518, column: 20, scope: !6254)
!6263 = !DILocation(line: 518, column: 8, scope: !6254)
!6264 = !DILocation(line: 518, column: 18, scope: !6254)
!6265 = !DILocation(line: 520, column: 2, scope: !6254)
!6266 = !DILocation(line: 525, column: 3, scope: !6260)
!6267 = !DILocation(line: 0, scope: !6260)
!6268 = !DILocation(line: 526, column: 1, scope: !6260)
!6269 = !DILocation(line: 528, column: 24, scope: !6270)
!6270 = distinct !DILexicalBlock(scope: !6260, file: !3211, line: 528, column: 7)
!6271 = !DILocation(line: 528, column: 7, scope: !6260)
!6272 = !DILocation(line: 535, column: 23, scope: !6273)
!6273 = distinct !DILexicalBlock(scope: !6260, file: !3211, line: 535, column: 7)
!6274 = !DILocation(line: 535, column: 7, scope: !6260)
!6275 = !DILocation(line: 536, column: 36, scope: !6276)
!6276 = distinct !DILexicalBlock(scope: !6273, file: !3211, line: 535, column: 31)
!6277 = !DILocation(line: 537, column: 3, scope: !6276)
!6278 = !DILocation(line: 570, column: 9, scope: !6260)
!6279 = !DILocation(line: 570, column: 23, scope: !6260)
!6280 = !DILocation(line: 575, column: 4, scope: !6281)
!6281 = distinct !DILexicalBlock(scope: !6282, file: !3211, line: 573, column: 48)
!6282 = distinct !DILexicalBlock(scope: !6260, file: !3211, line: 573, column: 7)
!6283 = !DILocation(line: 603, column: 9, scope: !6260)
!6284 = !DILocation(line: 603, column: 23, scope: !6260)
!6285 = !DILocation(line: 605, column: 24, scope: !6286)
!6286 = distinct !DILexicalBlock(scope: !6260, file: !3211, line: 605, column: 7)
!6287 = !DILocation(line: 605, column: 7, scope: !6260)
!6288 = !DILocation(line: 612, column: 9, scope: !6260)
!6289 = !DILocation(line: 612, column: 23, scope: !6260)
!6290 = !DILocation(line: 619, column: 24, scope: !6291)
!6291 = distinct !DILexicalBlock(scope: !6260, file: !3211, line: 619, column: 7)
!6292 = !DILocation(line: 619, column: 7, scope: !6260)
!6293 = !DILocation(line: 625, column: 9, scope: !6260)
!6294 = !DILocation(line: 625, column: 17, scope: !6260)
!6295 = !DILocation(line: 626, column: 3, scope: !6260)
!6296 = !DILocation(line: 629, column: 20, scope: !6254)
!6297 = !DILocation(line: 629, column: 8, scope: !6254)
!6298 = !DILocation(line: 518, column: 23, scope: !6254)
!6299 = !DILocation(line: 631, column: 2, scope: !6254)
!6300 = distinct !DISubprogram(name: "extract_decimal", scope: !3211, file: !3211, line: 318, type: !6301, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3207, retainedNodes: !6304)
!6301 = !DISubroutineType(types: !6302)
!6302 = !{!120, !6303}
!6303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !721, size: 32)
!6304 = !{!6305, !6306, !6307}
!6305 = !DILocalVariable(name: "str", arg: 1, scope: !6300, file: !3211, line: 318, type: !6303)
!6306 = !DILocalVariable(name: "sp", scope: !6300, file: !3211, line: 320, type: !721)
!6307 = !DILocalVariable(name: "val", scope: !6300, file: !3211, line: 321, type: !120)
!6308 = !DILocation(line: 0, scope: !6300)
!6309 = !DILocation(line: 320, column: 19, scope: !6300)
!6310 = !DILocation(line: 323, column: 37, scope: !6300)
!6311 = !DILocation(line: 323, column: 17, scope: !6300)
!6312 = !DILocation(line: 323, column: 9, scope: !6300)
!6313 = !DILocation(line: 323, column: 2, scope: !6300)
!6314 = !DILocation(line: 324, column: 13, scope: !6315)
!6315 = distinct !DILexicalBlock(scope: !6300, file: !3211, line: 323, column: 43)
!6316 = !DILocation(line: 324, column: 24, scope: !6315)
!6317 = !DILocation(line: 324, column: 19, scope: !6315)
!6318 = !DILocation(line: 324, column: 27, scope: !6315)
!6319 = distinct !{!6319, !6313, !6320}
!6320 = !DILocation(line: 325, column: 2, scope: !6300)
!6321 = !DILocation(line: 326, column: 7, scope: !6300)
!6322 = !DILocation(line: 327, column: 2, scope: !6300)
!6323 = distinct !DISubprogram(name: "isdigit", scope: !6102, file: !6102, line: 43, type: !129, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3207, retainedNodes: !6324)
!6324 = !{!6325}
!6325 = !DILocalVariable(name: "a", arg: 1, scope: !6323, file: !6102, line: 43, type: !103)
!6326 = !DILocation(line: 0, scope: !6323)
!6327 = !DILocation(line: 45, column: 29, scope: !6323)
!6328 = !DILocation(line: 45, column: 45, scope: !6323)
!6329 = !DILocation(line: 45, column: 2, scope: !6323)
!6330 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !6331, file: !6331, line: 9, type: !3598, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3244, retainedNodes: !162)
!6331 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/basic/sys_heap")
!6332 = !DILocation(line: 11, column: 1, scope: !6330)
!6333 = !{i64 2147559099, i64 2147559142, i64 2147559182}
!6334 = !DILocation(line: 12, column: 1, scope: !6330)
!6335 = !{i64 2147563377, i64 2147563420, i64 2147563460}
!6336 = !DILocation(line: 13, column: 1, scope: !6330)
!6337 = !{i64 2147563546, i64 2147563589, i64 2147563629}
!6338 = !DILocation(line: 14, column: 1, scope: !6330)
!6339 = !{i64 2147563730, i64 2147563773, i64 2147563813}
!6340 = !DILocation(line: 15, column: 1, scope: !6330)
!6341 = !{i64 2147563910, i64 2147563953, i64 2147563993}
!6342 = !DILocation(line: 16, column: 1, scope: !6330)
!6343 = !{i64 2147564153, i64 2147564196, i64 2147564236}
!6344 = !DILocation(line: 17, column: 1, scope: !6330)
!6345 = !{i64 2147564339, i64 2147564382, i64 2147564422}
!6346 = !DILocation(line: 18, column: 1, scope: !6330)
!6347 = !{i64 2147564549, i64 2147564592, i64 2147564632}
!6348 = !DILocation(line: 19, column: 1, scope: !6330)
!6349 = !{i64 2147564752, i64 2147564795, i64 2147564835}
!6350 = !DILocation(line: 20, column: 1, scope: !6330)
!6351 = !{i64 2147564955, i64 2147564998, i64 2147565038}
!6352 = !DILocation(line: 21, column: 1, scope: !6330)
!6353 = !{i64 2147565154, i64 2147565197, i64 2147565237}
!6354 = !DILocation(line: 22, column: 1, scope: !6330)
!6355 = !{i64 2147565329, i64 2147565372, i64 2147565412}
!6356 = !DILocation(line: 23, column: 1, scope: !6330)
!6357 = !{i64 2147565537, i64 2147565580, i64 2147565620}
!6358 = !DILocation(line: 24, column: 1, scope: !6330)
!6359 = !{i64 2147565741, i64 2147565784, i64 2147565824}
!6360 = !DILocation(line: 25, column: 1, scope: !6330)
!6361 = !{i64 2147565943, i64 2147565986, i64 2147566026}
!6362 = !DILocation(line: 26, column: 1, scope: !6330)
!6363 = !{i64 2147566170, i64 2147566213, i64 2147566253}
!6364 = !DILocation(line: 27, column: 1, scope: !6330)
!6365 = !{i64 2147566385, i64 2147566428, i64 2147566468}
!6366 = !DILocation(line: 28, column: 1, scope: !6330)
!6367 = !{i64 2147566557, i64 2147566600, i64 2147566640}
!6368 = !DILocation(line: 29, column: 1, scope: !6330)
!6369 = !{i64 2147566759, i64 2147566802, i64 2147566842}
!6370 = !DILocation(line: 30, column: 1, scope: !6330)
!6371 = !{i64 2147566958, i64 2147567001, i64 2147567041}
!6372 = !DILocation(line: 31, column: 1, scope: !6330)
!6373 = !{i64 2147567133, i64 2147567176, i64 2147567216}
!6374 = !DILocation(line: 32, column: 1, scope: !6330)
!6375 = !{i64 2147567374, i64 2147567417, i64 2147567457}
!6376 = !DILocation(line: 33, column: 1, scope: !6330)
!6377 = !{i64 2147567627, i64 2147567670, i64 2147567710}
!6378 = !DILocation(line: 34, column: 1, scope: !6330)
!6379 = !{i64 2147567868, i64 2147567911, i64 2147567951}
!6380 = !DILocation(line: 35, column: 1, scope: !6330)
!6381 = !{i64 2147568103, i64 2147568146, i64 2147568186}
!6382 = !DILocation(line: 36, column: 1, scope: !6330)
!6383 = !{i64 2147568344, i64 2147568387, i64 2147568427}
!6384 = !DILocation(line: 37, column: 1, scope: !6330)
!6385 = !{i64 2147568585, i64 2147568628, i64 2147568668}
!6386 = !DILocation(line: 38, column: 1, scope: !6330)
!6387 = !{i64 2147568829, i64 2147568872, i64 2147568912}
!6388 = !DILocation(line: 39, column: 1, scope: !6330)
!6389 = !{i64 2147569070, i64 2147569113, i64 2147569153}
!6390 = !DILocation(line: 40, column: 1, scope: !6330)
!6391 = !{i64 2147569314, i64 2147569357, i64 2147569397}
!6392 = !DILocation(line: 41, column: 1, scope: !6330)
!6393 = !{i64 2147569552, i64 2147569595, i64 2147569635}
!6394 = !DILocation(line: 42, column: 1, scope: !6330)
!6395 = !{i64 2147569805, i64 2147569848, i64 2147569888}
!6396 = !DILocation(line: 43, column: 1, scope: !6330)
!6397 = !{i64 2147570058, i64 2147570101, i64 2147570141}
!6398 = !DILocation(line: 44, column: 1, scope: !6330)
!6399 = !{i64 2147570308, i64 2147570351, i64 2147570391}
!6400 = !DILocation(line: 45, column: 1, scope: !6330)
!6401 = !{i64 2147570549, i64 2147570592, i64 2147570632}
!6402 = !DILocation(line: 46, column: 1, scope: !6330)
!6403 = !{i64 2147570793, i64 2147570836, i64 2147570876}
!6404 = !DILocation(line: 47, column: 1, scope: !6330)
!6405 = !{i64 2147571046, i64 2147571089, i64 2147571129}
!6406 = !DILocation(line: 48, column: 1, scope: !6330)
!6407 = !{i64 2147571290, i64 2147571333, i64 2147571373}
!6408 = !DILocation(line: 49, column: 1, scope: !6330)
!6409 = !{i64 2147571531, i64 2147571574, i64 2147571614}
!6410 = !DILocation(line: 50, column: 1, scope: !6330)
!6411 = !{i64 2147575848, i64 2147575891, i64 2147575931}
!6412 = !DILocation(line: 51, column: 1, scope: !6330)
!6413 = !{i64 2147576098, i64 2147576141, i64 2147576181}
!6414 = !DILocation(line: 52, column: 1, scope: !6330)
!6415 = !{i64 2147576348, i64 2147576391, i64 2147576431}
!6416 = !DILocation(line: 53, column: 1, scope: !6330)
!6417 = !{i64 2147576595, i64 2147576638, i64 2147576678}
!6418 = !DILocation(line: 54, column: 1, scope: !6330)
!6419 = !{i64 2147576821, i64 2147576864, i64 2147576904}
!6420 = !DILocation(line: 55, column: 1, scope: !6330)
!6421 = !{i64 2147577047, i64 2147577090, i64 2147577130}
!6422 = !DILocation(line: 56, column: 1, scope: !6330)
!6423 = !{i64 2147577270, i64 2147577313, i64 2147577353}
!6424 = !DILocation(line: 57, column: 1, scope: !6330)
!6425 = !{i64 2147577505, i64 2147577548, i64 2147577588}
!6426 = !DILocation(line: 58, column: 1, scope: !6330)
!6427 = !{i64 2147577734, i64 2147577777, i64 2147577817}
!6428 = !DILocation(line: 59, column: 1, scope: !6330)
!6429 = !{i64 2147577942, i64 2147577985, i64 2147578025}
!6430 = !DILocation(line: 60, column: 1, scope: !6330)
!6431 = !{i64 2147578153, i64 2147578196, i64 2147578236}
!6432 = !DILocation(line: 61, column: 1, scope: !6330)
!6433 = !{i64 2147578388, i64 2147578431, i64 2147578471}
!6434 = !DILocation(line: 62, column: 1, scope: !6330)
!6435 = !{i64 2147578617, i64 2147578660, i64 2147578700}
!6436 = !DILocation(line: 63, column: 1, scope: !6330)
!6437 = !{i64 2147578855, i64 2147578898, i64 2147578938}
!6438 = !DILocation(line: 64, column: 1, scope: !6330)
!6439 = !{i64 2147579087, i64 2147579130, i64 2147579170}
!6440 = !DILocation(line: 65, column: 1, scope: !6330)
!6441 = !{i64 2147579313, i64 2147579356, i64 2147579396}
!6442 = !DILocation(line: 66, column: 1, scope: !6330)
!6443 = !{i64 2147579530, i64 2147579573, i64 2147579613}
!6444 = !DILocation(line: 67, column: 1, scope: !6330)
!6445 = !{i64 2147579762, i64 2147579805, i64 2147579845}
!6446 = !DILocation(line: 68, column: 1, scope: !6330)
!6447 = !{i64 2147579988, i64 2147580031, i64 2147580071}
!6448 = !DILocation(line: 69, column: 1, scope: !6330)
!6449 = !{i64 2147580202, i64 2147580245, i64 2147580285}
!6450 = !DILocation(line: 70, column: 1, scope: !6330)
!6451 = !{i64 2147580422, i64 2147580465, i64 2147580505}
!6452 = !DILocation(line: 71, column: 1, scope: !6330)
!6453 = !{i64 2147580654, i64 2147580697, i64 2147580737}
!6454 = !DILocation(line: 72, column: 1, scope: !6330)
!6455 = !{i64 2147580862, i64 2147580905, i64 2147580945}
!6456 = !DILocation(line: 73, column: 1, scope: !6330)
!6457 = !{i64 2147581067, i64 2147581110, i64 2147581150}
!6458 = !DILocation(line: 74, column: 1, scope: !6330)
!6459 = !{i64 2147581284, i64 2147581327, i64 2147581367}
!6460 = !DILocation(line: 75, column: 1, scope: !6330)
!6461 = !{i64 2147581498, i64 2147581541, i64 2147581581}
!6462 = !DILocation(line: 76, column: 1, scope: !6330)
!6463 = !{i64 2147581724, i64 2147581767, i64 2147581807}
!6464 = !DILocation(line: 77, column: 1, scope: !6330)
!6465 = !{i64 2147581944, i64 2147581987, i64 2147582027}
!6466 = !DILocation(line: 78, column: 1, scope: !6330)
!6467 = !{i64 2147582149, i64 2147582192, i64 2147582232}
!6468 = !DILocation(line: 79, column: 1, scope: !6330)
!6469 = !{i64 2147582381, i64 2147582424, i64 2147582464}
!6470 = !DILocation(line: 80, column: 1, scope: !6330)
!6471 = !{i64 2147582616, i64 2147582659, i64 2147582699}
!6472 = !DILocation(line: 81, column: 1, scope: !6330)
!6473 = !{i64 2147582866, i64 2147582909, i64 2147582949}
!6474 = !DILocation(line: 82, column: 1, scope: !6330)
!6475 = !{i64 2147583116, i64 2147583159, i64 2147583199}
!6476 = !DILocation(line: 83, column: 1, scope: !6330)
!6477 = !{i64 2147583354, i64 2147583397, i64 2147583437}
!6478 = !DILocation(line: 84, column: 1, scope: !6330)
!6479 = !{i64 2147583565, i64 2147583608, i64 2147583648}
!6480 = !DILocation(line: 85, column: 1, scope: !6330)
!6481 = !{i64 2147583782, i64 2147583825, i64 2147583865}
!6482 = !DILocation(line: 86, column: 1, scope: !6330)
!6483 = !{i64 2147583945, i64 2147583988, i64 2147584028}
!6484 = !DILocation(line: 87, column: 1, scope: !6330)
!6485 = !{i64 2147584141, i64 2147584184, i64 2147584224}
!6486 = !DILocation(line: 88, column: 1, scope: !6330)
!6487 = !{i64 2147588404, i64 2147588447, i64 2147588487}
!6488 = !DILocation(line: 89, column: 1, scope: !6330)
!6489 = !{i64 2147588600, i64 2147588643, i64 2147588683}
!6490 = !DILocation(line: 90, column: 1, scope: !6330)
!6491 = !{i64 2147588859, i64 2147588902, i64 2147588942}
!6492 = !DILocation(line: 91, column: 1, scope: !6330)
!6493 = !{i64 2147589064, i64 2147589107, i64 2147589147}
!6494 = !DILocation(line: 92, column: 1, scope: !6330)
!6495 = !{i64 2147589263, i64 2147589306, i64 2147589346}
!6496 = !DILocation(line: 93, column: 1, scope: !6330)
!6497 = !{i64 2147589447, i64 2147589490, i64 2147589530}
!6498 = !DILocation(line: 94, column: 1, scope: !6330)
!6499 = !{i64 2147589646, i64 2147589689, i64 2147589729}
!6500 = !DILocation(line: 95, column: 1, scope: !6330)
!6501 = !{i64 2147589902, i64 2147589945, i64 2147589985}
!6502 = !DILocation(line: 96, column: 1, scope: !6330)
!6503 = !{i64 2147590134, i64 2147590177, i64 2147590217}
!6504 = !DILocation(line: 97, column: 1, scope: !6330)
!6505 = !{i64 2147590345, i64 2147590388, i64 2147590428}
!6506 = !DILocation(line: 98, column: 1, scope: !6330)
!6507 = !{i64 2147590511, i64 2147590554, i64 2147590594}
!6508 = !DILocation(line: 99, column: 1, scope: !6330)
!6509 = !{i64 2147590695, i64 2147590738, i64 2147590778}
!6510 = !DILocation(line: 100, column: 1, scope: !6330)
!6511 = !{i64 2147590885, i64 2147590928, i64 2147590968}
!6512 = !DILocation(line: 101, column: 1, scope: !6330)
!6513 = !{i64 2147591069, i64 2147591112, i64 2147591152}
!6514 = !DILocation(line: 102, column: 1, scope: !6330)
!6515 = !{i64 2147591283, i64 2147591326, i64 2147591366}
!6516 = !DILocation(line: 103, column: 1, scope: !6330)
!6517 = !{i64 2147591494, i64 2147591537, i64 2147591577}
!6518 = !DILocation(line: 104, column: 1, scope: !6330)
!6519 = !{i64 2147591717, i64 2147591760, i64 2147591800}
!6520 = !DILocation(line: 105, column: 1, scope: !6330)
!6521 = !{i64 2147591901, i64 2147591944, i64 2147591984}
!6522 = !DILocation(line: 106, column: 1, scope: !6330)
!6523 = !{i64 2147592067, i64 2147592110, i64 2147592150}
!6524 = !DILocation(line: 107, column: 1, scope: !6330)
!6525 = !{i64 2147592248, i64 2147592291, i64 2147592331}
!6526 = !DILocation(line: 108, column: 1, scope: !6330)
!6527 = !{i64 2147592441, i64 2147592484, i64 2147592524}
!6528 = !DILocation(line: 109, column: 1, scope: !6330)
!6529 = !{i64 2147592667, i64 2147592710, i64 2147592750}
!6530 = !DILocation(line: 110, column: 1, scope: !6330)
!6531 = !{i64 2147592881, i64 2147592924, i64 2147592964}
!6532 = !DILocation(line: 111, column: 1, scope: !6330)
!6533 = !{i64 2147593107, i64 2147593150, i64 2147593190}
!6534 = !DILocation(line: 112, column: 1, scope: !6330)
!6535 = !{i64 2147593324, i64 2147593367, i64 2147593407}
!6536 = !DILocation(line: 113, column: 1, scope: !6330)
!6537 = !{i64 2147593601, i64 2147593644, i64 2147593684}
!6538 = !DILocation(line: 114, column: 1, scope: !6330)
!6539 = !{i64 2147593827, i64 2147593870, i64 2147593910}
!6540 = !DILocation(line: 115, column: 1, scope: !6330)
!6541 = !{i64 2147594035, i64 2147594078, i64 2147594118}
!6542 = !DILocation(line: 116, column: 1, scope: !6330)
!6543 = !{i64 2147594231, i64 2147594274, i64 2147594314}
!6544 = !DILocation(line: 117, column: 1, scope: !6330)
!6545 = !{i64 2147594496, i64 2147594539, i64 2147594579}
!6546 = !DILocation(line: 118, column: 1, scope: !6330)
!6547 = !{i64 2147594710, i64 2147594753, i64 2147594793}
!6548 = !DILocation(line: 119, column: 1, scope: !6330)
!6549 = !{i64 2147594885, i64 2147594928, i64 2147594968}
!6550 = !DILocation(line: 120, column: 1, scope: !6330)
!6551 = !{i64 2147595139, i64 2147595182, i64 2147595222}
!6552 = !DILocation(line: 121, column: 1, scope: !6330)
!6553 = !{i64 2147595381, i64 2147595424, i64 2147595464}
!6554 = !DILocation(line: 122, column: 1, scope: !6330)
!6555 = !{i64 2147595544, i64 2147595587, i64 2147595627}
!6556 = !DILocation(line: 123, column: 1, scope: !6330)
!6557 = !{i64 2147595731, i64 2147595774, i64 2147595814}
!6558 = !DILocation(line: 124, column: 1, scope: !6330)
!6559 = !{i64 2147595924, i64 2147595967, i64 2147596007}
!6560 = !DILocation(line: 125, column: 1, scope: !6330)
!6561 = !{i64 2147596107, i64 2147596150, i64 2147596190}
!6562 = !DILocation(line: 126, column: 1, scope: !6330)
!6563 = !{i64 2147596321, i64 2147596364, i64 2147596404}
!6564 = !DILocation(line: 127, column: 1, scope: !6330)
!6565 = !{i64 2147596541, i64 2147596584, i64 2147596624}
!6566 = !DILocation(line: 128, column: 1, scope: !6330)
!6567 = !{i64 2147596748, i64 2147596791, i64 2147596831}
!6568 = !DILocation(line: 129, column: 1, scope: !6330)
!6569 = !{i64 2147597021, i64 2147597064, i64 2147597104}
!6570 = !DILocation(line: 130, column: 1, scope: !6330)
!6571 = !{i64 2147601330, i64 2147601373, i64 2147601413}
!6572 = !DILocation(line: 131, column: 1, scope: !6330)
!6573 = !{i64 2147601529, i64 2147601572, i64 2147601612}
!6574 = !DILocation(line: 132, column: 1, scope: !6330)
!6575 = !{i64 2147601764, i64 2147601807, i64 2147601847}
!6576 = !DILocation(line: 133, column: 1, scope: !6330)
!6577 = !{i64 2147602014, i64 2147602057, i64 2147602097}
!6578 = !DILocation(line: 134, column: 1, scope: !6330)
!6579 = !{i64 2147602216, i64 2147602259, i64 2147602299}
!6580 = !DILocation(line: 135, column: 1, scope: !6330)
!6581 = !{i64 2147602439, i64 2147602482, i64 2147602522}
!6582 = !DILocation(line: 136, column: 1, scope: !6330)
!6583 = !{i64 2147602653, i64 2147602696, i64 2147602736}
!6584 = !DILocation(line: 137, column: 1, scope: !6330)
!6585 = !{i64 2147602897, i64 2147602940, i64 2147602980}
!6586 = !DILocation(line: 138, column: 1, scope: !6330)
!6587 = !{i64 2147603126, i64 2147603169, i64 2147603209}
!6588 = !DILocation(line: 139, column: 1, scope: !6330)
!6589 = !{i64 2147603355, i64 2147603398, i64 2147603438}
!6590 = !DILocation(line: 140, column: 1, scope: !6330)
!6591 = !{i64 2147603563, i64 2147603606, i64 2147603646}
!6592 = !DILocation(line: 141, column: 1, scope: !6330)
!6593 = !{i64 2147603801, i64 2147603844, i64 2147603884}
!6594 = !DILocation(line: 142, column: 1, scope: !6330)
!6595 = !{i64 2147604027, i64 2147604070, i64 2147604110}
!6596 = !DILocation(line: 143, column: 1, scope: !6330)
!6597 = !{i64 2147604286, i64 2147604329, i64 2147604369}
!6598 = !DILocation(line: 144, column: 1, scope: !6330)
!6599 = !{i64 2147604506, i64 2147604549, i64 2147604589}
!6600 = !DILocation(line: 145, column: 1, scope: !6330)
!6601 = !{i64 2147604738, i64 2147604781, i64 2147604821}
!6602 = !DILocation(line: 146, column: 1, scope: !6330)
!6603 = !{i64 2147604979, i64 2147605022, i64 2147605062}
!6604 = !DILocation(line: 147, column: 1, scope: !6330)
!6605 = !{i64 2147605220, i64 2147605263, i64 2147605303}
!6606 = !DILocation(line: 148, column: 1, scope: !6330)
!6607 = !{i64 2147605443, i64 2147605486, i64 2147605526}
!6608 = !DILocation(line: 149, column: 1, scope: !6330)
!6609 = !{i64 2147605660, i64 2147605703, i64 2147605743}
!6610 = !DILocation(line: 150, column: 1, scope: !6330)
!6611 = !{i64 2147605901, i64 2147605944, i64 2147605984}
!6612 = !DILocation(line: 151, column: 1, scope: !6330)
!6613 = !{i64 2147606088, i64 2147606131, i64 2147606171}
!6614 = !DILocation(line: 152, column: 1, scope: !6330)
!6615 = !{i64 2147606275, i64 2147606318, i64 2147606358}
!6616 = !DILocation(line: 153, column: 1, scope: !6330)
!6617 = !{i64 2147606438, i64 2147606481, i64 2147606521}
!6618 = !DILocation(line: 154, column: 1, scope: !6330)
!6619 = !{i64 2147606697, i64 2147606740, i64 2147606780}
!6620 = !DILocation(line: 155, column: 1, scope: !6330)
!6621 = !{i64 2147606920, i64 2147606963, i64 2147607003}
!6622 = !DILocation(line: 156, column: 1, scope: !6330)
!6623 = !{i64 2147607149, i64 2147607192, i64 2147607232}
!6624 = !DILocation(line: 157, column: 1, scope: !6330)
!6625 = !{i64 2147607345, i64 2147607388, i64 2147607428}
!6626 = !DILocation(line: 158, column: 1, scope: !6330)
!6627 = !{i64 2147607557, i64 2147607600, i64 2147607640}
!6628 = !DILocation(line: 159, column: 1, scope: !6330)
!6629 = !{i64 2147607778, i64 2147607821, i64 2147607861}
!6630 = !DILocation(line: 160, column: 1, scope: !6330)
!6631 = !{i64 2147607992, i64 2147608035, i64 2147608075}
!6632 = !DILocation(line: 161, column: 1, scope: !6330)
!6633 = !{i64 2147608182, i64 2147608225, i64 2147608265}
!6634 = !DILocation(line: 162, column: 1, scope: !6330)
!6635 = !{i64 2147608381, i64 2147608424, i64 2147608464}
!6636 = !DILocation(line: 163, column: 1, scope: !6330)
!6637 = !{i64 2147608586, i64 2147608629, i64 2147608669}
!6638 = !DILocation(line: 164, column: 1, scope: !6330)
!6639 = !{i64 2147608806, i64 2147608849, i64 2147608889}
!6640 = !DILocation(line: 165, column: 1, scope: !6330)
!6641 = !{i64 2147609007, i64 2147609050, i64 2147609090}
!6642 = !DILocation(line: 166, column: 1, scope: !6330)
!6643 = !{i64 2147609206, i64 2147609249, i64 2147609289}
!6644 = !DILocation(line: 167, column: 1, scope: !6330)
!6645 = !{i64 2147609411, i64 2147609454, i64 2147609494}
!6646 = !DILocation(line: 168, column: 1, scope: !6330)
!6647 = !{i64 2147609580, i64 2147609623, i64 2147609663}
!6648 = !DILocation(line: 169, column: 1, scope: !6330)
!6649 = !{i64 2147609764, i64 2147609807, i64 2147609847}
!6650 = !DILocation(line: 170, column: 1, scope: !6330)
!6651 = !{i64 2147609948, i64 2147609991, i64 2147610031}
!6652 = !DILocation(line: 171, column: 1, scope: !6330)
!6653 = !{i64 2147614196, i64 2147614239, i64 2147614279}
!6654 = !DILocation(line: 172, column: 1, scope: !6330)
!6655 = !{i64 2147614380, i64 2147614423, i64 2147614463}
!6656 = !DILocation(line: 173, column: 1, scope: !6330)
!6657 = !{i64 2147614618, i64 2147614661, i64 2147614701}
!6658 = !DILocation(line: 174, column: 1, scope: !6330)
!6659 = !{i64 2147614848, i64 2147614891, i64 2147614931}
!6660 = !DILocation(line: 175, column: 1, scope: !6330)
!6661 = !{i64 2147615077, i64 2147615120, i64 2147615160}
!6662 = !DILocation(line: 176, column: 1, scope: !6330)
!6663 = !{i64 2147615264, i64 2147615307, i64 2147615347}
!6664 = !DILocation(line: 177, column: 1, scope: !6330)
!6665 = !{i64 2147615460, i64 2147615503, i64 2147615543}
!6666 = !DILocation(line: 178, column: 1, scope: !6330)
!6667 = !{i64 2147615668, i64 2147615711, i64 2147615751}
!6668 = !DILocation(line: 179, column: 1, scope: !6330)
!6669 = !{i64 2147615880, i64 2147615923, i64 2147615963}
!6670 = !DILocation(line: 180, column: 1, scope: !6330)
!6671 = !{i64 2147616079, i64 2147616122, i64 2147616162}
!6672 = !DILocation(line: 181, column: 1, scope: !6330)
!6673 = !{i64 2147616317, i64 2147616360, i64 2147616400}
!6674 = !DILocation(line: 182, column: 1, scope: !6330)
!6675 = !{i64 2147616513, i64 2147616556, i64 2147616596}
!6676 = !DILocation(line: 183, column: 1, scope: !6330)
!6677 = !{i64 2147616715, i64 2147616758, i64 2147616798}
!6678 = !DILocation(line: 184, column: 1, scope: !6330)
!6679 = !{i64 2147616908, i64 2147616951, i64 2147616991}
!6680 = !DILocation(line: 185, column: 1, scope: !6330)
!6681 = !{i64 2147617142, i64 2147617185, i64 2147617225}
!6682 = !DILocation(line: 186, column: 1, scope: !6330)
!6683 = !{i64 2147617305, i64 2147617348, i64 2147617388}
!6684 = !DILocation(line: 187, column: 1, scope: !6330)
!6685 = !{i64 2147617544, i64 2147617587, i64 2147617627}
!6686 = !DILocation(line: 188, column: 1, scope: !6330)
!6687 = !{i64 2147617783, i64 2147617826, i64 2147617866}
!6688 = !DILocation(line: 189, column: 1, scope: !6330)
!6689 = !{i64 2147618019, i64 2147618062, i64 2147618102}
!6690 = !DILocation(line: 190, column: 1, scope: !6330)
!6691 = !{i64 2147618249, i64 2147618292, i64 2147618332}
!6692 = !DILocation(line: 191, column: 1, scope: !6330)
!6693 = !{i64 2147618436, i64 2147618479, i64 2147618519}
!6694 = !DILocation(line: 192, column: 1, scope: !6330)
!6695 = !{i64 2147618635, i64 2147618678, i64 2147618718}
!6696 = !DILocation(line: 193, column: 1, scope: !6330)
!6697 = !{i64 2147618906, i64 2147618949, i64 2147618989}
!6698 = !DILocation(line: 194, column: 1, scope: !6330)
!6699 = !{i64 2147619081, i64 2147619124, i64 2147619164}
!6700 = !DILocation(line: 195, column: 1, scope: !6330)
!6701 = !{i64 2147619315, i64 2147619358, i64 2147619398}
!6702 = !DILocation(line: 196, column: 1, scope: !6330)
!6703 = !{i64 2147619523, i64 2147619566, i64 2147619606}
!6704 = !DILocation(line: 197, column: 1, scope: !6330)
!6705 = !{i64 2147619741, i64 2147619784, i64 2147619824}
!6706 = !DILocation(line: 198, column: 1, scope: !6330)
!6707 = !{i64 2147619931, i64 2147619974, i64 2147620014}
!6708 = !DILocation(line: 199, column: 1, scope: !6330)
!6709 = !{i64 2147620127, i64 2147620170, i64 2147620210}
!6710 = !DILocation(line: 200, column: 1, scope: !6330)
!6711 = !{i64 2147620333, i64 2147620376, i64 2147620416}
!6712 = !DILocation(line: 201, column: 1, scope: !6330)
!6713 = !{i64 2147620538, i64 2147620581, i64 2147620621}
!6714 = !DILocation(line: 202, column: 1, scope: !6330)
!6715 = !{i64 2147620752, i64 2147620795, i64 2147620835}
!6716 = !DILocation(line: 203, column: 1, scope: !6330)
!6717 = !{i64 2147620978, i64 2147621021, i64 2147621061}
!6718 = !DILocation(line: 204, column: 1, scope: !6330)
!6719 = !{i64 2147621210, i64 2147621253, i64 2147621293}
!6720 = !DILocation(line: 205, column: 1, scope: !6330)
!6721 = !{i64 2147621391, i64 2147621434, i64 2147621474}
!6722 = !DILocation(line: 206, column: 1, scope: !6330)
!6723 = !{i64 2147621600, i64 2147621643, i64 2147621683}
!6724 = !DILocation(line: 207, column: 1, scope: !6330)
!6725 = !{i64 2147621778, i64 2147621821, i64 2147621861}
!6726 = !DILocation(line: 208, column: 1, scope: !6330)
!6727 = !{i64 2147622010, i64 2147622053, i64 2147622093}
!6728 = !DILocation(line: 209, column: 1, scope: !6330)
!6729 = !{i64 2147622212, i64 2147622255, i64 2147622295}
!6730 = !DILocation(line: 210, column: 1, scope: !6330)
!6731 = !{i64 2147622462, i64 2147622505, i64 2147622545}
!6732 = !DILocation(line: 211, column: 1, scope: !6330)
!6733 = !{i64 2147622700, i64 2147622743, i64 2147622783}
!6734 = !DILocation(line: 212, column: 1, scope: !6330)
!6735 = !{i64 2147622890, i64 2147622933, i64 2147622973}
!6736 = !DILocation(line: 213, column: 1, scope: !6330)
!6737 = !{i64 2147627165, i64 2147627208, i64 2147627248}
!6738 = !DILocation(line: 214, column: 1, scope: !6330)
!6739 = !{i64 2147627373, i64 2147627416, i64 2147627456}
!6740 = !DILocation(line: 215, column: 1, scope: !6330)
!6741 = !{i64 2147627563, i64 2147627606, i64 2147627646}
!6742 = !DILocation(line: 216, column: 1, scope: !6330)
!6743 = !{i64 2147627777, i64 2147627820, i64 2147627860}
!6744 = !DILocation(line: 217, column: 1, scope: !6330)
!6745 = !{i64 2147628039, i64 2147628082, i64 2147628122}
!6746 = !DILocation(line: 218, column: 1, scope: !6330)
!6747 = !{i64 2147628250, i64 2147628293, i64 2147628333}
!6748 = !DILocation(line: 219, column: 1, scope: !6330)
!6749 = !{i64 2147628494, i64 2147628537, i64 2147628577}
!6750 = !DILocation(line: 220, column: 1, scope: !6330)
!6751 = !{i64 2147628705, i64 2147628748, i64 2147628788}
!6752 = !DILocation(line: 221, column: 1, scope: !6330)
!6753 = !{i64 2147628934, i64 2147628977, i64 2147629017}
!6754 = !DILocation(line: 222, column: 1, scope: !6330)
!6755 = !{i64 2147629199, i64 2147629242, i64 2147629282}
!6756 = !DILocation(line: 223, column: 1, scope: !6330)
!6757 = !{i64 2147629404, i64 2147629447, i64 2147629487}
!6758 = !DILocation(line: 224, column: 1, scope: !6330)
!6759 = !{i64 2147629600, i64 2147629643, i64 2147629683}
!6760 = !DILocation(line: 225, column: 1, scope: !6330)
!6761 = !{i64 2147629823, i64 2147629866, i64 2147629906}
!6762 = !DILocation(line: 226, column: 1, scope: !6330)
!6763 = !{i64 2147629986, i64 2147630029, i64 2147630069}
!6764 = !DILocation(line: 227, column: 1, scope: !6330)
!6765 = !{i64 2147630191, i64 2147630234, i64 2147630274}
!6766 = !DILocation(line: 228, column: 1, scope: !6330)
!6767 = !{i64 2147630411, i64 2147630454, i64 2147630494}
!6768 = !DILocation(line: 229, column: 1, scope: !6330)
!6769 = !{i64 2147630625, i64 2147630668, i64 2147630708}
!6770 = !DILocation(line: 230, column: 1, scope: !6330)
!6771 = !{i64 2147630839, i64 2147630882, i64 2147630922}
!6772 = !DILocation(line: 231, column: 1, scope: !6330)
!6773 = !{i64 2147631059, i64 2147631102, i64 2147631142}
!6774 = !DILocation(line: 232, column: 1, scope: !6330)
!6775 = !{i64 2147631270, i64 2147631313, i64 2147631353}
!6776 = !DILocation(line: 233, column: 1, scope: !6330)
!6777 = !{i64 2147631463, i64 2147631506, i64 2147631546}
!6778 = !DILocation(line: 234, column: 1, scope: !6330)
!6779 = !{i64 2147631662, i64 2147631705, i64 2147631745}
!6780 = !DILocation(line: 235, column: 1, scope: !6330)
!6781 = !{i64 2147631834, i64 2147631877, i64 2147631917}
!6782 = !DILocation(line: 236, column: 1, scope: !6330)
!6783 = !{i64 2147632027, i64 2147632070, i64 2147632110}
!6784 = !DILocation(line: 237, column: 1, scope: !6330)
!6785 = !{i64 2147632223, i64 2147632266, i64 2147632306}
!6786 = !DILocation(line: 238, column: 1, scope: !6330)
!6787 = !{i64 2147632450, i64 2147632493, i64 2147632533}
!6788 = !DILocation(line: 239, column: 1, scope: !6330)
!6789 = !{i64 2147632667, i64 2147632710, i64 2147632750}
!6790 = !DILocation(line: 240, column: 1, scope: !6330)
!6791 = !{i64 2147632959, i64 2147633002, i64 2147633042}
!6792 = !DILocation(line: 241, column: 1, scope: !6330)
!6793 = !{i64 2147633191, i64 2147633234, i64 2147633274}
!6794 = !DILocation(line: 242, column: 1, scope: !6330)
!6795 = !{i64 2147633408, i64 2147633451, i64 2147633491}
!6796 = !DILocation(line: 243, column: 1, scope: !6330)
!6797 = !{i64 2147633625, i64 2147633668, i64 2147633708}
!6798 = !DILocation(line: 244, column: 1, scope: !6330)
!6799 = !{i64 2147633835, i64 2147633878, i64 2147633918}
!6800 = !DILocation(line: 245, column: 1, scope: !6330)
!6801 = !{i64 2147634040, i64 2147634083, i64 2147634123}
!6802 = !DILocation(line: 246, column: 1, scope: !6330)
!6803 = !{i64 2147634272, i64 2147634315, i64 2147634355}
!6804 = !DILocation(line: 247, column: 1, scope: !6330)
!6805 = !{i64 2147634480, i64 2147634523, i64 2147634563}
!6806 = !DILocation(line: 248, column: 1, scope: !6330)
!6807 = !{i64 2147634670, i64 2147634713, i64 2147634753}
!6808 = !DILocation(line: 249, column: 1, scope: !6330)
!6809 = !{i64 2147634896, i64 2147634939, i64 2147634979}
!6810 = !DILocation(line: 250, column: 1, scope: !6330)
!6811 = !{i64 2147635085, i64 2147635128, i64 2147635168}
!6812 = !DILocation(line: 251, column: 1, scope: !6330)
!6813 = !{i64 2147635356, i64 2147635399, i64 2147635439}
!6814 = !DILocation(line: 252, column: 1, scope: !6330)
!6815 = !{i64 2147635576, i64 2147635619, i64 2147635659}
!6816 = !DILocation(line: 253, column: 1, scope: !6330)
!6817 = !{i64 2147635829, i64 2147635872, i64 2147635912}
!6818 = !DILocation(line: 254, column: 1, scope: !6330)
!6819 = !{i64 2147640098, i64 2147640141, i64 2147640181}
!6820 = !DILocation(line: 255, column: 1, scope: !6330)
!6821 = !{i64 2147640330, i64 2147640373, i64 2147640413}
!6822 = !DILocation(line: 256, column: 1, scope: !6330)
!6823 = !{i64 2147640541, i64 2147640584, i64 2147640624}
!6824 = !DILocation(line: 257, column: 1, scope: !6330)
!6825 = !{i64 2147640731, i64 2147640774, i64 2147640814}
!6826 = !DILocation(line: 258, column: 1, scope: !6330)
!6827 = !{i64 2147640945, i64 2147640988, i64 2147641028}
!6828 = !DILocation(line: 259, column: 1, scope: !6330)
!6829 = !{i64 2147641144, i64 2147641187, i64 2147641227}
!6830 = !DILocation(line: 260, column: 1, scope: !6330)
!6831 = !{i64 2147641331, i64 2147641374, i64 2147641414}
!6832 = !DILocation(line: 261, column: 1, scope: !6330)
!6833 = !{i64 2147641539, i64 2147641582, i64 2147641622}
!6834 = !DILocation(line: 262, column: 1, scope: !6330)
!6835 = !{i64 2147641768, i64 2147641811, i64 2147641851}
!6836 = !DILocation(line: 263, column: 1, scope: !6330)
!6837 = !{i64 2147641970, i64 2147642013, i64 2147642053}
!6838 = !DILocation(line: 264, column: 1, scope: !6330)
!6839 = !{i64 2147642169, i64 2147642212, i64 2147642252}
!6840 = !DILocation(line: 265, column: 1, scope: !6330)
!6841 = !{i64 2147642386, i64 2147642429, i64 2147642469}
!6842 = !DILocation(line: 266, column: 1, scope: !6330)
!6843 = !{i64 2147642588, i64 2147642631, i64 2147642671}
!6844 = !DILocation(line: 267, column: 1, scope: !6330)
!6845 = !{i64 2147642829, i64 2147642872, i64 2147642912}
!6846 = !DILocation(line: 269, column: 1, scope: !6330)
!6847 = distinct !DISubprogram(name: "soc_port_pinmux_set", scope: !6848, file: !6848, line: 16, type: !6849, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3246, retainedNodes: !7022)
!6848 = !DIFile(filename: "zephyr/soc/arm/atmel_sam0/common/soc_port.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6849 = !DISubroutineType(types: !6850)
!6850 = !{!103, !6851, !137, !137}
!6851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6852, size: 32)
!6852 = !DIDerivedType(tag: DW_TAG_typedef, name: "PortGroup", file: !2458, line: 402, baseType: !6853)
!6853 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2458, line: 386, size: 1024, elements: !6854)
!6854 = !{!6855, !6865, !6875, !6885, !6895, !6905, !6915, !6925, !6935, !6946, !6956, !6974, !6995, !7007, !7021}
!6855 = !DIDerivedType(tag: DW_TAG_member, name: "DIR", scope: !6853, file: !2458, line: 387, baseType: !6856, size: 32)
!6856 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !6857)
!6857 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_DIR_Type", file: !2458, line: 49, baseType: !6858)
!6858 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2458, line: 44, size: 32, elements: !6859)
!6859 = !{!6860, !6864}
!6860 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !6858, file: !2458, line: 47, baseType: !6861, size: 32)
!6861 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6858, file: !2458, line: 45, size: 32, elements: !6862)
!6862 = !{!6863}
!6863 = !DIDerivedType(tag: DW_TAG_member, name: "DIR", scope: !6861, file: !2458, line: 46, baseType: !137, size: 32, flags: DIFlagBitField, extraData: i64 0)
!6864 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !6858, file: !2458, line: 48, baseType: !137, size: 32)
!6865 = !DIDerivedType(tag: DW_TAG_member, name: "DIRCLR", scope: !6853, file: !2458, line: 388, baseType: !6866, size: 32, offset: 32)
!6866 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !6867)
!6867 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_DIRCLR_Type", file: !2458, line: 67, baseType: !6868)
!6868 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2458, line: 62, size: 32, elements: !6869)
!6869 = !{!6870, !6874}
!6870 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !6868, file: !2458, line: 65, baseType: !6871, size: 32)
!6871 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6868, file: !2458, line: 63, size: 32, elements: !6872)
!6872 = !{!6873}
!6873 = !DIDerivedType(tag: DW_TAG_member, name: "DIRCLR", scope: !6871, file: !2458, line: 64, baseType: !137, size: 32, flags: DIFlagBitField, extraData: i64 0)
!6874 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !6868, file: !2458, line: 66, baseType: !137, size: 32)
!6875 = !DIDerivedType(tag: DW_TAG_member, name: "DIRSET", scope: !6853, file: !2458, line: 389, baseType: !6876, size: 32, offset: 64)
!6876 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !6877)
!6877 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_DIRSET_Type", file: !2458, line: 85, baseType: !6878)
!6878 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2458, line: 80, size: 32, elements: !6879)
!6879 = !{!6880, !6884}
!6880 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !6878, file: !2458, line: 83, baseType: !6881, size: 32)
!6881 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6878, file: !2458, line: 81, size: 32, elements: !6882)
!6882 = !{!6883}
!6883 = !DIDerivedType(tag: DW_TAG_member, name: "DIRSET", scope: !6881, file: !2458, line: 82, baseType: !137, size: 32, flags: DIFlagBitField, extraData: i64 0)
!6884 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !6878, file: !2458, line: 84, baseType: !137, size: 32)
!6885 = !DIDerivedType(tag: DW_TAG_member, name: "DIRTGL", scope: !6853, file: !2458, line: 390, baseType: !6886, size: 32, offset: 96)
!6886 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !6887)
!6887 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_DIRTGL_Type", file: !2458, line: 103, baseType: !6888)
!6888 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2458, line: 98, size: 32, elements: !6889)
!6889 = !{!6890, !6894}
!6890 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !6888, file: !2458, line: 101, baseType: !6891, size: 32)
!6891 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6888, file: !2458, line: 99, size: 32, elements: !6892)
!6892 = !{!6893}
!6893 = !DIDerivedType(tag: DW_TAG_member, name: "DIRTGL", scope: !6891, file: !2458, line: 100, baseType: !137, size: 32, flags: DIFlagBitField, extraData: i64 0)
!6894 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !6888, file: !2458, line: 102, baseType: !137, size: 32)
!6895 = !DIDerivedType(tag: DW_TAG_member, name: "OUT", scope: !6853, file: !2458, line: 391, baseType: !6896, size: 32, offset: 128)
!6896 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !6897)
!6897 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_OUT_Type", file: !2458, line: 121, baseType: !6898)
!6898 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2458, line: 116, size: 32, elements: !6899)
!6899 = !{!6900, !6904}
!6900 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !6898, file: !2458, line: 119, baseType: !6901, size: 32)
!6901 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6898, file: !2458, line: 117, size: 32, elements: !6902)
!6902 = !{!6903}
!6903 = !DIDerivedType(tag: DW_TAG_member, name: "OUT", scope: !6901, file: !2458, line: 118, baseType: !137, size: 32, flags: DIFlagBitField, extraData: i64 0)
!6904 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !6898, file: !2458, line: 120, baseType: !137, size: 32)
!6905 = !DIDerivedType(tag: DW_TAG_member, name: "OUTCLR", scope: !6853, file: !2458, line: 392, baseType: !6906, size: 32, offset: 160)
!6906 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !6907)
!6907 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_OUTCLR_Type", file: !2458, line: 139, baseType: !6908)
!6908 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2458, line: 134, size: 32, elements: !6909)
!6909 = !{!6910, !6914}
!6910 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !6908, file: !2458, line: 137, baseType: !6911, size: 32)
!6911 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6908, file: !2458, line: 135, size: 32, elements: !6912)
!6912 = !{!6913}
!6913 = !DIDerivedType(tag: DW_TAG_member, name: "OUTCLR", scope: !6911, file: !2458, line: 136, baseType: !137, size: 32, flags: DIFlagBitField, extraData: i64 0)
!6914 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !6908, file: !2458, line: 138, baseType: !137, size: 32)
!6915 = !DIDerivedType(tag: DW_TAG_member, name: "OUTSET", scope: !6853, file: !2458, line: 393, baseType: !6916, size: 32, offset: 192)
!6916 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !6917)
!6917 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_OUTSET_Type", file: !2458, line: 157, baseType: !6918)
!6918 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2458, line: 152, size: 32, elements: !6919)
!6919 = !{!6920, !6924}
!6920 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !6918, file: !2458, line: 155, baseType: !6921, size: 32)
!6921 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6918, file: !2458, line: 153, size: 32, elements: !6922)
!6922 = !{!6923}
!6923 = !DIDerivedType(tag: DW_TAG_member, name: "OUTSET", scope: !6921, file: !2458, line: 154, baseType: !137, size: 32, flags: DIFlagBitField, extraData: i64 0)
!6924 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !6918, file: !2458, line: 156, baseType: !137, size: 32)
!6925 = !DIDerivedType(tag: DW_TAG_member, name: "OUTTGL", scope: !6853, file: !2458, line: 394, baseType: !6926, size: 32, offset: 224)
!6926 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !6927)
!6927 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_OUTTGL_Type", file: !2458, line: 175, baseType: !6928)
!6928 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2458, line: 170, size: 32, elements: !6929)
!6929 = !{!6930, !6934}
!6930 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !6928, file: !2458, line: 173, baseType: !6931, size: 32)
!6931 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6928, file: !2458, line: 171, size: 32, elements: !6932)
!6932 = !{!6933}
!6933 = !DIDerivedType(tag: DW_TAG_member, name: "OUTTGL", scope: !6931, file: !2458, line: 172, baseType: !137, size: 32, flags: DIFlagBitField, extraData: i64 0)
!6934 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !6928, file: !2458, line: 174, baseType: !137, size: 32)
!6935 = !DIDerivedType(tag: DW_TAG_member, name: "IN", scope: !6853, file: !2458, line: 395, baseType: !6936, size: 32, offset: 256)
!6936 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6937)
!6937 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !6938)
!6938 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_IN_Type", file: !2458, line: 193, baseType: !6939)
!6939 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2458, line: 188, size: 32, elements: !6940)
!6940 = !{!6941, !6945}
!6941 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !6939, file: !2458, line: 191, baseType: !6942, size: 32)
!6942 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6939, file: !2458, line: 189, size: 32, elements: !6943)
!6943 = !{!6944}
!6944 = !DIDerivedType(tag: DW_TAG_member, name: "IN", scope: !6942, file: !2458, line: 190, baseType: !137, size: 32, flags: DIFlagBitField, extraData: i64 0)
!6945 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !6939, file: !2458, line: 192, baseType: !137, size: 32)
!6946 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !6853, file: !2458, line: 396, baseType: !6947, size: 32, offset: 288)
!6947 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !6948)
!6948 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_CTRL_Type", file: !2458, line: 211, baseType: !6949)
!6949 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2458, line: 206, size: 32, elements: !6950)
!6950 = !{!6951, !6955}
!6951 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !6949, file: !2458, line: 209, baseType: !6952, size: 32)
!6952 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6949, file: !2458, line: 207, size: 32, elements: !6953)
!6953 = !{!6954}
!6954 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLING", scope: !6952, file: !2458, line: 208, baseType: !137, size: 32, flags: DIFlagBitField, extraData: i64 0)
!6955 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !6949, file: !2458, line: 210, baseType: !137, size: 32)
!6956 = !DIDerivedType(tag: DW_TAG_member, name: "WRCONFIG", scope: !6853, file: !2458, line: 397, baseType: !6957, size: 32, offset: 320)
!6957 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !6958)
!6958 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_WRCONFIG_Type", file: !2458, line: 240, baseType: !6959)
!6959 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2458, line: 224, size: 32, elements: !6960)
!6960 = !{!6961, !6973}
!6961 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !6959, file: !2458, line: 238, baseType: !6962, size: 32)
!6962 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6959, file: !2458, line: 225, size: 32, elements: !6963)
!6963 = !{!6964, !6965, !6966, !6967, !6968, !6969, !6970, !6971, !6972}
!6964 = !DIDerivedType(tag: DW_TAG_member, name: "PINMASK", scope: !6962, file: !2458, line: 226, baseType: !137, size: 16, flags: DIFlagBitField, extraData: i64 0)
!6965 = !DIDerivedType(tag: DW_TAG_member, name: "PMUXEN", scope: !6962, file: !2458, line: 227, baseType: !137, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!6966 = !DIDerivedType(tag: DW_TAG_member, name: "INEN", scope: !6962, file: !2458, line: 228, baseType: !137, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!6967 = !DIDerivedType(tag: DW_TAG_member, name: "PULLEN", scope: !6962, file: !2458, line: 229, baseType: !137, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!6968 = !DIDerivedType(tag: DW_TAG_member, name: "DRVSTR", scope: !6962, file: !2458, line: 231, baseType: !137, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!6969 = !DIDerivedType(tag: DW_TAG_member, name: "PMUX", scope: !6962, file: !2458, line: 233, baseType: !137, size: 4, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!6970 = !DIDerivedType(tag: DW_TAG_member, name: "WRPMUX", scope: !6962, file: !2458, line: 234, baseType: !137, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!6971 = !DIDerivedType(tag: DW_TAG_member, name: "WRPINCFG", scope: !6962, file: !2458, line: 236, baseType: !137, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!6972 = !DIDerivedType(tag: DW_TAG_member, name: "HWSEL", scope: !6962, file: !2458, line: 237, baseType: !137, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!6973 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !6959, file: !2458, line: 239, baseType: !137, size: 32)
!6974 = !DIDerivedType(tag: DW_TAG_member, name: "EVCTRL", scope: !6853, file: !2458, line: 398, baseType: !6975, size: 32, offset: 352)
!6975 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !6976)
!6976 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_EVCTRL_Type", file: !2458, line: 286, baseType: !6977)
!6977 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2458, line: 270, size: 32, elements: !6978)
!6978 = !{!6979, !6994}
!6979 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !6977, file: !2458, line: 284, baseType: !6980, size: 32)
!6980 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6977, file: !2458, line: 271, size: 32, elements: !6981)
!6981 = !{!6982, !6983, !6984, !6985, !6986, !6987, !6988, !6989, !6990, !6991, !6992, !6993}
!6982 = !DIDerivedType(tag: DW_TAG_member, name: "PID0", scope: !6980, file: !2458, line: 272, baseType: !137, size: 5, flags: DIFlagBitField, extraData: i64 0)
!6983 = !DIDerivedType(tag: DW_TAG_member, name: "EVACT0", scope: !6980, file: !2458, line: 273, baseType: !137, size: 2, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!6984 = !DIDerivedType(tag: DW_TAG_member, name: "PORTEI0", scope: !6980, file: !2458, line: 274, baseType: !137, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!6985 = !DIDerivedType(tag: DW_TAG_member, name: "PID1", scope: !6980, file: !2458, line: 275, baseType: !137, size: 5, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!6986 = !DIDerivedType(tag: DW_TAG_member, name: "EVACT1", scope: !6980, file: !2458, line: 276, baseType: !137, size: 2, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!6987 = !DIDerivedType(tag: DW_TAG_member, name: "PORTEI1", scope: !6980, file: !2458, line: 277, baseType: !137, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!6988 = !DIDerivedType(tag: DW_TAG_member, name: "PID2", scope: !6980, file: !2458, line: 278, baseType: !137, size: 5, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!6989 = !DIDerivedType(tag: DW_TAG_member, name: "EVACT2", scope: !6980, file: !2458, line: 279, baseType: !137, size: 2, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!6990 = !DIDerivedType(tag: DW_TAG_member, name: "PORTEI2", scope: !6980, file: !2458, line: 280, baseType: !137, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!6991 = !DIDerivedType(tag: DW_TAG_member, name: "PID3", scope: !6980, file: !2458, line: 281, baseType: !137, size: 5, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!6992 = !DIDerivedType(tag: DW_TAG_member, name: "EVACT3", scope: !6980, file: !2458, line: 282, baseType: !137, size: 2, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!6993 = !DIDerivedType(tag: DW_TAG_member, name: "PORTEI3", scope: !6980, file: !2458, line: 283, baseType: !137, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!6994 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !6977, file: !2458, line: 285, baseType: !137, size: 32)
!6995 = !DIDerivedType(tag: DW_TAG_member, name: "PMUX", scope: !6853, file: !2458, line: 399, baseType: !6996, size: 128, offset: 384)
!6996 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6997, size: 128, elements: !1439)
!6997 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !6998)
!6998 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_PMUX_Type", file: !2458, line: 342, baseType: !6999)
!6999 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2458, line: 336, size: 8, elements: !7000)
!7000 = !{!7001, !7006}
!7001 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !6999, file: !2458, line: 340, baseType: !7002, size: 8)
!7002 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6999, file: !2458, line: 337, size: 8, elements: !7003)
!7003 = !{!7004, !7005}
!7004 = !DIDerivedType(tag: DW_TAG_member, name: "PMUXE", scope: !7002, file: !2458, line: 338, baseType: !240, size: 4, flags: DIFlagBitField, extraData: i64 0)
!7005 = !DIDerivedType(tag: DW_TAG_member, name: "PMUXO", scope: !7002, file: !2458, line: 339, baseType: !240, size: 4, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!7006 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !6999, file: !2458, line: 341, baseType: !240, size: 8)
!7007 = !DIDerivedType(tag: DW_TAG_member, name: "PINCFG", scope: !6853, file: !2458, line: 400, baseType: !7008, size: 256, offset: 512)
!7008 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7009, size: 256, elements: !2627)
!7009 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !7010)
!7010 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_PINCFG_Type", file: !2458, line: 368, baseType: !7011)
!7011 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2458, line: 358, size: 8, elements: !7012)
!7012 = !{!7013, !7020}
!7013 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !7011, file: !2458, line: 366, baseType: !7014, size: 8)
!7014 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7011, file: !2458, line: 359, size: 8, elements: !7015)
!7015 = !{!7016, !7017, !7018, !7019}
!7016 = !DIDerivedType(tag: DW_TAG_member, name: "PMUXEN", scope: !7014, file: !2458, line: 360, baseType: !240, size: 1, flags: DIFlagBitField, extraData: i64 0)
!7017 = !DIDerivedType(tag: DW_TAG_member, name: "INEN", scope: !7014, file: !2458, line: 361, baseType: !240, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!7018 = !DIDerivedType(tag: DW_TAG_member, name: "PULLEN", scope: !7014, file: !2458, line: 362, baseType: !240, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!7019 = !DIDerivedType(tag: DW_TAG_member, name: "DRVSTR", scope: !7014, file: !2458, line: 364, baseType: !240, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!7020 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !7011, file: !2458, line: 367, baseType: !240, size: 8)
!7021 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved1", scope: !6853, file: !2458, line: 401, baseType: !2629, size: 256, offset: 768)
!7022 = !{!7023, !7024, !7025, !7026, !7027}
!7023 = !DILocalVariable(name: "pg", arg: 1, scope: !6847, file: !6848, line: 16, type: !6851)
!7024 = !DILocalVariable(name: "pin", arg: 2, scope: !6847, file: !6848, line: 16, type: !137)
!7025 = !DILocalVariable(name: "func", arg: 3, scope: !6847, file: !6848, line: 16, type: !137)
!7026 = !DILocalVariable(name: "is_odd", scope: !6847, file: !6848, line: 18, type: !731)
!7027 = !DILocalVariable(name: "idx", scope: !6847, file: !6848, line: 19, type: !103)
!7028 = !DILocation(line: 0, scope: !6847)
!7029 = !DILocation(line: 18, column: 20, scope: !6847)
!7030 = !DILocation(line: 18, column: 16, scope: !6847)
!7031 = !DILocation(line: 19, column: 16, scope: !6847)
!7032 = !DILocation(line: 0, scope: !7033)
!7033 = distinct !DILexicalBlock(scope: !6847, file: !6848, line: 25, column: 6)
!7034 = !DILocation(line: 25, column: 6, scope: !6847)
!7035 = !DILocation(line: 30, column: 22, scope: !6847)
!7036 = !DILocation(line: 30, column: 29, scope: !6847)
!7037 = !DILocation(line: 32, column: 2, scope: !6847)
!7038 = distinct !DISubprogram(name: "soc_port_configure", scope: !6848, file: !6848, line: 35, type: !7039, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3246, retainedNodes: !7049)
!7039 = !DISubroutineType(types: !7040)
!7040 = !{null, !7041}
!7041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7042, size: 32)
!7042 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7043)
!7043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "soc_port_pin", file: !7044, line: 75, size: 96, elements: !7045)
!7044 = !DIFile(filename: "zephyr/soc/arm/atmel_sam0/samd51/../common/soc_port.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7045 = !{!7046, !7047, !7048}
!7046 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !7043, file: !7044, line: 76, baseType: !6851, size: 32)
!7047 = !DIDerivedType(tag: DW_TAG_member, name: "pinum", scope: !7043, file: !7044, line: 77, baseType: !137, size: 32, offset: 32)
!7048 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7043, file: !7044, line: 78, baseType: !137, size: 32, offset: 64)
!7049 = !{!7050, !7051, !7052, !7053, !7054}
!7050 = !DILocalVariable(name: "pin", arg: 1, scope: !7038, file: !6848, line: 35, type: !7041)
!7051 = !DILocalVariable(name: "pg", scope: !7038, file: !6848, line: 37, type: !6851)
!7052 = !DILocalVariable(name: "flags", scope: !7038, file: !6848, line: 38, type: !137)
!7053 = !DILocalVariable(name: "func", scope: !7038, file: !6848, line: 39, type: !137)
!7054 = !DILocalVariable(name: "pincfg", scope: !7038, file: !6848, line: 40, type: !7010)
!7055 = !DILocation(line: 40, column: 19, scope: !7038)
!7056 = !DILocation(line: 0, scope: !7038)
!7057 = !DILocation(line: 37, column: 23, scope: !7038)
!7058 = !DILocation(line: 38, column: 24, scope: !7038)
!7059 = !DILocation(line: 40, column: 2, scope: !7038)
!7060 = !DILocation(line: 43, column: 18, scope: !7038)
!7061 = !DILocation(line: 43, column: 27, scope: !7038)
!7062 = !DILocation(line: 44, column: 30, scope: !7038)
!7063 = !DILocation(line: 44, column: 22, scope: !7038)
!7064 = !DILocation(line: 44, column: 13, scope: !7038)
!7065 = !DILocation(line: 44, column: 17, scope: !7038)
!7066 = !DILocation(line: 45, column: 30, scope: !7038)
!7067 = !DILocation(line: 45, column: 22, scope: !7038)
!7068 = !DILocation(line: 45, column: 13, scope: !7038)
!7069 = !DILocation(line: 45, column: 17, scope: !7038)
!7070 = !DILocation(line: 47, column: 12, scope: !7071)
!7071 = distinct !DILexicalBlock(scope: !7038, file: !6848, line: 47, column: 6)
!7072 = !DILocation(line: 47, column: 6, scope: !7038)
!7073 = !DILocation(line: 39, column: 52, scope: !7038)
!7074 = !DILocation(line: 48, column: 32, scope: !7075)
!7075 = distinct !DILexicalBlock(scope: !7071, file: !6848, line: 47, column: 38)
!7076 = !DILocation(line: 48, column: 3, scope: !7075)
!7077 = !DILocation(line: 49, column: 3, scope: !7075)
!7078 = !DILocation(line: 52, column: 12, scope: !7079)
!7079 = distinct !DILexicalBlock(scope: !7038, file: !6848, line: 52, column: 6)
!7080 = !DILocation(line: 52, column: 6, scope: !7038)
!7081 = !DILocation(line: 53, column: 13, scope: !7082)
!7082 = distinct !DILexicalBlock(scope: !7083, file: !6848, line: 53, column: 7)
!7083 = distinct !DILexicalBlock(scope: !7079, file: !6848, line: 52, column: 53)
!7084 = !DILocation(line: 53, column: 7, scope: !7083)
!7085 = !DILocation(line: 54, column: 32, scope: !7086)
!7086 = distinct !DILexicalBlock(scope: !7082, file: !6848, line: 53, column: 32)
!7087 = !DILocation(line: 54, column: 24, scope: !7086)
!7088 = !DILocation(line: 54, column: 15, scope: !7086)
!7089 = !DILocation(line: 54, column: 19, scope: !7086)
!7090 = !DILocation(line: 55, column: 3, scope: !7086)
!7091 = !DILocation(line: 57, column: 21, scope: !7083)
!7092 = !DILocation(line: 58, column: 2, scope: !7083)
!7093 = !DILocation(line: 60, column: 12, scope: !7094)
!7094 = distinct !DILexicalBlock(scope: !7038, file: !6848, line: 60, column: 6)
!7095 = !DILocation(line: 60, column: 6, scope: !7038)
!7096 = !DILocation(line: 61, column: 19, scope: !7097)
!7097 = distinct !DILexicalBlock(scope: !7094, file: !6848, line: 60, column: 37)
!7098 = !DILocation(line: 62, column: 2, scope: !7097)
!7099 = !DILocation(line: 64, column: 12, scope: !7100)
!7100 = distinct !DILexicalBlock(scope: !7038, file: !6848, line: 64, column: 6)
!7101 = !DILocation(line: 64, column: 6, scope: !7038)
!7102 = !DILocation(line: 65, column: 31, scope: !7103)
!7103 = distinct !DILexicalBlock(scope: !7100, file: !6848, line: 64, column: 38)
!7104 = !DILocation(line: 65, column: 23, scope: !7103)
!7105 = !DILocation(line: 65, column: 14, scope: !7103)
!7106 = !DILocation(line: 65, column: 18, scope: !7103)
!7107 = !DILocation(line: 66, column: 2, scope: !7103)
!7108 = !DILocation(line: 68, column: 12, scope: !7109)
!7109 = distinct !DILexicalBlock(scope: !7038, file: !6848, line: 68, column: 6)
!7110 = !DILocation(line: 68, column: 6, scope: !7038)
!7111 = !DILocation(line: 69, column: 21, scope: !7112)
!7112 = distinct !DILexicalBlock(scope: !7109, file: !6848, line: 68, column: 42)
!7113 = !DILocation(line: 70, column: 2, scope: !7112)
!7114 = !DILocation(line: 72, column: 18, scope: !7038)
!7115 = !DILocation(line: 72, column: 27, scope: !7038)
!7116 = !DILocation(line: 73, column: 1, scope: !7038)
!7117 = distinct !DISubprogram(name: "soc_port_list_configure", scope: !6848, file: !6848, line: 75, type: !7118, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3246, retainedNodes: !7120)
!7118 = !DISubroutineType(types: !7119)
!7119 = !{null, !7041, !32}
!7120 = !{!7121, !7122, !7123}
!7121 = !DILocalVariable(name: "pins", arg: 1, scope: !7117, file: !6848, line: 75, type: !7041)
!7122 = !DILocalVariable(name: "size", arg: 2, scope: !7117, file: !6848, line: 76, type: !32)
!7123 = !DILocalVariable(name: "i", scope: !7124, file: !6848, line: 78, type: !103)
!7124 = distinct !DILexicalBlock(scope: !7117, file: !6848, line: 78, column: 2)
!7125 = !DILocation(line: 0, scope: !7117)
!7126 = !DILocation(line: 0, scope: !7124)
!7127 = !DILocation(line: 78, column: 20, scope: !7128)
!7128 = distinct !DILexicalBlock(scope: !7124, file: !6848, line: 78, column: 2)
!7129 = !DILocation(line: 78, column: 2, scope: !7124)
!7130 = !DILocation(line: 81, column: 1, scope: !7117)
!7131 = !DILocation(line: 79, column: 23, scope: !7132)
!7132 = distinct !DILexicalBlock(scope: !7128, file: !6848, line: 78, column: 33)
!7133 = !DILocation(line: 79, column: 3, scope: !7132)
!7134 = !DILocation(line: 78, column: 29, scope: !7128)
!7135 = distinct !{!7135, !7129, !7136}
!7136 = !DILocation(line: 80, column: 2, scope: !7124)
!7137 = distinct !DISubprogram(name: "atmel_samd_init", scope: !706, file: !706, line: 108, type: !713, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !167, retainedNodes: !7138)
!7138 = !{!7139, !7140, !7141}
!7139 = !DILocalVariable(name: "arg", arg: 1, scope: !7137, file: !706, line: 108, type: !715)
!7140 = !DILocalVariable(name: "key", scope: !7137, file: !706, line: 110, type: !137)
!7141 = !DILocalVariable(name: "dfll_div", scope: !7137, file: !706, line: 111, type: !240)
!7142 = !DILocation(line: 0, scope: !7137)
!7143 = !DILocation(line: 55, column: 2, scope: !7144, inlinedAt: !7151)
!7144 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7145, file: !7145, line: 42, type: !7146, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !167, retainedNodes: !7148)
!7145 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7146 = !DISubroutineType(types: !7147)
!7147 = !{!32}
!7148 = !{!7149, !7150}
!7149 = !DILocalVariable(name: "key", scope: !7144, file: !7145, line: 44, type: !32)
!7150 = !DILocalVariable(name: "tmp", scope: !7144, file: !7145, line: 53, type: !32)
!7151 = distinct !DILocation(line: 123, column: 8, scope: !7137)
!7152 = !{i64 1265792}
!7153 = !DILocation(line: 0, scope: !7144, inlinedAt: !7151)
!7154 = !DILocation(line: 126, column: 21, scope: !7137)
!7155 = !DILocation(line: 128, column: 2, scope: !7137)
!7156 = !DILocation(line: 129, column: 2, scope: !7137)
!7157 = !DILocation(line: 130, column: 2, scope: !7137)
!7158 = !DILocation(line: 131, column: 2, scope: !7137)
!7159 = !DILocation(line: 134, column: 2, scope: !7137)
!7160 = !DILocation(line: 137, column: 2, scope: !7137)
!7161 = !DILocalVariable(name: "key", arg: 1, scope: !7162, file: !7145, line: 84, type: !32)
!7162 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7145, file: !7145, line: 84, type: !7163, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !167, retainedNodes: !7165)
!7163 = !DISubroutineType(types: !7164)
!7164 = !{null, !32}
!7165 = !{!7161}
!7166 = !DILocation(line: 0, scope: !7162, inlinedAt: !7167)
!7167 = distinct !DILocation(line: 144, column: 2, scope: !7137)
!7168 = !DILocation(line: 95, column: 2, scope: !7162, inlinedAt: !7167)
!7169 = !{i64 1266609}
!7170 = !DILocation(line: 146, column: 2, scope: !7137)
!7171 = distinct !DISubprogram(name: "gclk_reset", scope: !706, file: !706, line: 94, type: !3598, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !167, retainedNodes: !162)
!7172 = !DILocation(line: 96, column: 24, scope: !7171)
!7173 = !DILocation(line: 97, column: 2, scope: !7171)
!7174 = !DILocation(line: 97, column: 28, scope: !7171)
!7175 = distinct !{!7175, !7173, !7176}
!7176 = !DILocation(line: 98, column: 2, scope: !7171)
!7177 = !DILocation(line: 99, column: 1, scope: !7171)
!7178 = distinct !DISubprogram(name: "osc32k_init", scope: !706, file: !706, line: 37, type: !3598, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !167, retainedNodes: !162)
!7179 = !DILocation(line: 39, column: 23, scope: !7178)
!7180 = !DILocation(line: 41, column: 1, scope: !7178)
!7181 = distinct !DISubprogram(name: "dfll_init", scope: !706, file: !706, line: 79, type: !3598, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !167, retainedNodes: !7182)
!7182 = !{!7183}
!7183 = !DILocalVariable(name: "reg", scope: !7181, file: !706, line: 81, type: !137)
!7184 = !DILocation(line: 0, scope: !7181)
!7185 = !DILocation(line: 87, column: 25, scope: !7181)
!7186 = !DILocation(line: 88, column: 25, scope: !7181)
!7187 = !DILocation(line: 90, column: 2, scope: !7181)
!7188 = !DILocation(line: 90, column: 30, scope: !7181)
!7189 = !DILocation(line: 90, column: 9, scope: !7181)
!7190 = distinct !{!7190, !7187, !7191}
!7191 = !DILocation(line: 91, column: 2, scope: !7181)
!7192 = !DILocation(line: 92, column: 1, scope: !7181)
!7193 = distinct !DISubprogram(name: "dpll_init", scope: !706, file: !706, line: 46, type: !7194, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !167, retainedNodes: !7196)
!7194 = !DISubroutineType(types: !7195)
!7195 = !{null, !240, !137}
!7196 = !{!7197, !7198, !7199}
!7197 = !DILocalVariable(name: "n", arg: 1, scope: !7193, file: !706, line: 46, type: !240)
!7198 = !DILocalVariable(name: "f_cpu", arg: 2, scope: !7193, file: !706, line: 46, type: !137)
!7199 = !DILocalVariable(name: "LDR", scope: !7193, file: !706, line: 49, type: !2633)
!7200 = !DILocation(line: 0, scope: !7193)
!7201 = !DILocation(line: 52, column: 40, scope: !7193)
!7202 = !DILocation(line: 53, column: 2, scope: !7193)
!7203 = !DILocation(line: 53, column: 39, scope: !7193)
!7204 = distinct !{!7204, !7202, !7205}
!7205 = !DILocation(line: 54, column: 2, scope: !7193)
!7206 = !DILocation(line: 57, column: 48, scope: !7193)
!7207 = !DILocation(line: 58, column: 2, scope: !7193)
!7208 = !DILocation(line: 58, column: 53, scope: !7193)
!7209 = !DILocation(line: 58, column: 57, scope: !7193)
!7210 = !DILocation(line: 58, column: 9, scope: !7193)
!7211 = distinct !{!7211, !7207, !7212}
!7212 = !DILocation(line: 59, column: 2, scope: !7193)
!7213 = !DILocation(line: 61, column: 34, scope: !7193)
!7214 = !DILocation(line: 65, column: 33, scope: !7193)
!7215 = !DILocation(line: 69, column: 33, scope: !7193)
!7216 = !DILocation(line: 71, column: 2, scope: !7193)
!7217 = !DILocation(line: 71, column: 39, scope: !7193)
!7218 = distinct !{!7218, !7216, !7219}
!7219 = !DILocation(line: 72, column: 2, scope: !7193)
!7220 = !DILocation(line: 73, column: 43, scope: !7193)
!7221 = !DILocation(line: 73, column: 11, scope: !7193)
!7222 = !DILocation(line: 73, column: 50, scope: !7193)
!7223 = !DILocation(line: 74, column: 36, scope: !7193)
!7224 = !DILocation(line: 73, column: 2, scope: !7193)
!7225 = distinct !{!7225, !7224, !7226}
!7226 = !DILocation(line: 75, column: 2, scope: !7193)
!7227 = !DILocation(line: 77, column: 1, scope: !7193)
!7228 = distinct !DISubprogram(name: "gclk_connect", scope: !706, file: !706, line: 101, type: !7229, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !167, retainedNodes: !7231)
!7229 = !DISubroutineType(types: !7230)
!7230 = !{null, !240, !240, !240}
!7231 = !{!7232, !7233, !7234}
!7232 = !DILocalVariable(name: "gclk", arg: 1, scope: !7228, file: !706, line: 101, type: !240)
!7233 = !DILocalVariable(name: "src", arg: 2, scope: !7228, file: !706, line: 101, type: !240)
!7234 = !DILocalVariable(name: "div", arg: 3, scope: !7228, file: !706, line: 101, type: !240)
!7235 = !DILocation(line: 0, scope: !7228)
!7236 = !DILocation(line: 103, column: 28, scope: !7228)
!7237 = !DILocation(line: 104, column: 7, scope: !7228)
!7238 = !DILocation(line: 104, column: 5, scope: !7228)
!7239 = !DILocation(line: 105, column: 5, scope: !7228)
!7240 = !DILocation(line: 103, column: 2, scope: !7228)
!7241 = !DILocation(line: 103, column: 22, scope: !7228)
!7242 = !DILocation(line: 103, column: 26, scope: !7228)
!7243 = !DILocation(line: 106, column: 1, scope: !7228)
!7244 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !7245, file: !7245, line: 57, type: !7246, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3248, retainedNodes: !7292)
!7245 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7246 = !DISubroutineType(types: !7247)
!7247 = !{null, !32, !7248}
!7248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7249, size: 32)
!7249 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7250)
!7250 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !3369, line: 141, baseType: !7251)
!7251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !3369, line: 97, size: 256, elements: !7252)
!7252 = !{!7253}
!7253 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !7251, file: !3369, line: 107, baseType: !7254, size: 256)
!7254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3369, line: 98, size: 256, elements: !7255)
!7255 = !{!7256, !7261, !7266, !7271, !7276, !7281, !7286, !7291}
!7256 = !DIDerivedType(tag: DW_TAG_member, scope: !7254, file: !3369, line: 99, baseType: !7257, size: 32)
!7257 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7254, file: !3369, line: 99, size: 32, elements: !7258)
!7258 = !{!7259, !7260}
!7259 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !7257, file: !3369, line: 99, baseType: !137, size: 32)
!7260 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !7257, file: !3369, line: 99, baseType: !137, size: 32)
!7261 = !DIDerivedType(tag: DW_TAG_member, scope: !7254, file: !3369, line: 100, baseType: !7262, size: 32, offset: 32)
!7262 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7254, file: !3369, line: 100, size: 32, elements: !7263)
!7263 = !{!7264, !7265}
!7264 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !7262, file: !3369, line: 100, baseType: !137, size: 32)
!7265 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !7262, file: !3369, line: 100, baseType: !137, size: 32)
!7266 = !DIDerivedType(tag: DW_TAG_member, scope: !7254, file: !3369, line: 101, baseType: !7267, size: 32, offset: 64)
!7267 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7254, file: !3369, line: 101, size: 32, elements: !7268)
!7268 = !{!7269, !7270}
!7269 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !7267, file: !3369, line: 101, baseType: !137, size: 32)
!7270 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !7267, file: !3369, line: 101, baseType: !137, size: 32)
!7271 = !DIDerivedType(tag: DW_TAG_member, scope: !7254, file: !3369, line: 102, baseType: !7272, size: 32, offset: 96)
!7272 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7254, file: !3369, line: 102, size: 32, elements: !7273)
!7273 = !{!7274, !7275}
!7274 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !7272, file: !3369, line: 102, baseType: !137, size: 32)
!7275 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !7272, file: !3369, line: 102, baseType: !137, size: 32)
!7276 = !DIDerivedType(tag: DW_TAG_member, scope: !7254, file: !3369, line: 103, baseType: !7277, size: 32, offset: 128)
!7277 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7254, file: !3369, line: 103, size: 32, elements: !7278)
!7278 = !{!7279, !7280}
!7279 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !7277, file: !3369, line: 103, baseType: !137, size: 32)
!7280 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !7277, file: !3369, line: 103, baseType: !137, size: 32)
!7281 = !DIDerivedType(tag: DW_TAG_member, scope: !7254, file: !3369, line: 104, baseType: !7282, size: 32, offset: 160)
!7282 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7254, file: !3369, line: 104, size: 32, elements: !7283)
!7283 = !{!7284, !7285}
!7284 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !7282, file: !3369, line: 104, baseType: !137, size: 32)
!7285 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !7282, file: !3369, line: 104, baseType: !137, size: 32)
!7286 = !DIDerivedType(tag: DW_TAG_member, scope: !7254, file: !3369, line: 105, baseType: !7287, size: 32, offset: 192)
!7287 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7254, file: !3369, line: 105, size: 32, elements: !7288)
!7288 = !{!7289, !7290}
!7289 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !7287, file: !3369, line: 105, baseType: !137, size: 32)
!7290 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !7287, file: !3369, line: 105, baseType: !137, size: 32)
!7291 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !7254, file: !3369, line: 106, baseType: !137, size: 32, offset: 224)
!7292 = !{!7293, !7294}
!7293 = !DILocalVariable(name: "reason", arg: 1, scope: !7244, file: !7245, line: 57, type: !32)
!7294 = !DILocalVariable(name: "esf", arg: 2, scope: !7244, file: !7245, line: 57, type: !7248)
!7295 = !DILocation(line: 0, scope: !7244)
!7296 = !DILocation(line: 63, column: 2, scope: !7244)
!7297 = !DILocation(line: 64, column: 1, scope: !7244)
!7298 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !7245, file: !7245, line: 82, type: !7299, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3248, retainedNodes: !7314)
!7299 = !DISubroutineType(types: !7300)
!7300 = !{null, !7248, !7301}
!7301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7302, size: 32)
!7302 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !823, line: 37, baseType: !7303)
!7303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !823, line: 25, size: 288, elements: !7304)
!7304 = !{!7305, !7306, !7307, !7308, !7309, !7310, !7311, !7312, !7313}
!7305 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7303, file: !823, line: 26, baseType: !137, size: 32)
!7306 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7303, file: !823, line: 27, baseType: !137, size: 32, offset: 32)
!7307 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7303, file: !823, line: 28, baseType: !137, size: 32, offset: 64)
!7308 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7303, file: !823, line: 29, baseType: !137, size: 32, offset: 96)
!7309 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7303, file: !823, line: 30, baseType: !137, size: 32, offset: 128)
!7310 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7303, file: !823, line: 31, baseType: !137, size: 32, offset: 160)
!7311 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7303, file: !823, line: 32, baseType: !137, size: 32, offset: 192)
!7312 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7303, file: !823, line: 33, baseType: !137, size: 32, offset: 224)
!7313 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7303, file: !823, line: 34, baseType: !137, size: 32, offset: 256)
!7314 = !{!7315, !7316, !7317}
!7315 = !DILocalVariable(name: "esf", arg: 1, scope: !7298, file: !7245, line: 82, type: !7248)
!7316 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !7298, file: !7245, line: 82, type: !7301)
!7317 = !DILocalVariable(name: "reason", scope: !7298, file: !7245, line: 88, type: !32)
!7318 = !DILocation(line: 0, scope: !7298)
!7319 = !DILocation(line: 88, column: 35, scope: !7298)
!7320 = !DILocation(line: 108, column: 2, scope: !7298)
!7321 = !DILocation(line: 131, column: 1, scope: !7298)
!7322 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !7245, file: !7245, line: 133, type: !7323, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3248, retainedNodes: !7325)
!7323 = !DISubroutineType(types: !7324)
!7324 = !{null, !102}
!7325 = !{!7326, !7327, !7328}
!7326 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !7322, file: !7245, line: 133, type: !102)
!7327 = !DILocalVariable(name: "ssf_contents", scope: !7322, file: !7245, line: 135, type: !149)
!7328 = !DILocalVariable(name: "oops_esf", scope: !7322, file: !7245, line: 136, type: !7250)
!7329 = !DILocation(line: 0, scope: !7322)
!7330 = !DILocation(line: 136, column: 2, scope: !7322)
!7331 = !DILocation(line: 136, column: 15, scope: !7322)
!7332 = !DILocation(line: 139, column: 22, scope: !7322)
!7333 = !DILocation(line: 139, column: 17, scope: !7322)
!7334 = !DILocation(line: 139, column: 20, scope: !7322)
!7335 = !DILocation(line: 141, column: 2, scope: !7322)
!7336 = !DILocation(line: 142, column: 2, scope: !7322)
!7337 = distinct !DISubprogram(name: "arch_irq_enable", scope: !7338, file: !7338, line: 40, type: !7163, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3259, retainedNodes: !7339)
!7338 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7339 = !{!7340}
!7340 = !DILocalVariable(name: "irq", arg: 1, scope: !7337, file: !7338, line: 40, type: !32)
!7341 = !DILocation(line: 0, scope: !7337)
!7342 = !DILocation(line: 42, column: 2, scope: !7337)
!7343 = !DILocation(line: 43, column: 1, scope: !7337)
!7344 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !891, file: !891, line: 1684, type: !7345, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3259, retainedNodes: !7347)
!7345 = !DISubroutineType(types: !7346)
!7346 = !{null, !3263}
!7347 = !{!7348}
!7348 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7344, file: !891, line: 1684, type: !3263)
!7349 = !DILocation(line: 0, scope: !7344)
!7350 = !DILocation(line: 1686, column: 23, scope: !7351)
!7351 = distinct !DILexicalBlock(scope: !7344, file: !891, line: 1686, column: 7)
!7352 = !DILocation(line: 1686, column: 7, scope: !7344)
!7353 = !DILocation(line: 1688, column: 5, scope: !7354)
!7354 = distinct !DILexicalBlock(scope: !7351, file: !891, line: 1687, column: 3)
!7355 = !{i64 2149425922}
!7356 = !DILocation(line: 1689, column: 81, scope: !7354)
!7357 = !DILocation(line: 1689, column: 60, scope: !7354)
!7358 = !DILocation(line: 1689, column: 34, scope: !7354)
!7359 = !DILocation(line: 1689, column: 5, scope: !7354)
!7360 = !DILocation(line: 1689, column: 43, scope: !7354)
!7361 = !DILocation(line: 1690, column: 5, scope: !7354)
!7362 = !{i64 2149426036}
!7363 = !DILocation(line: 1691, column: 3, scope: !7354)
!7364 = !DILocation(line: 1692, column: 1, scope: !7344)
!7365 = distinct !DISubprogram(name: "arch_irq_disable", scope: !7338, file: !7338, line: 45, type: !7163, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3259, retainedNodes: !7366)
!7366 = !{!7367}
!7367 = !DILocalVariable(name: "irq", arg: 1, scope: !7365, file: !7338, line: 45, type: !32)
!7368 = !DILocation(line: 0, scope: !7365)
!7369 = !DILocation(line: 47, column: 2, scope: !7365)
!7370 = !DILocation(line: 48, column: 1, scope: !7365)
!7371 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !891, file: !891, line: 1722, type: !7345, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3259, retainedNodes: !7372)
!7372 = !{!7373}
!7373 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7371, file: !891, line: 1722, type: !3263)
!7374 = !DILocation(line: 0, scope: !7371)
!7375 = !DILocation(line: 1724, column: 23, scope: !7376)
!7376 = distinct !DILexicalBlock(scope: !7371, file: !891, line: 1724, column: 7)
!7377 = !DILocation(line: 1724, column: 7, scope: !7371)
!7378 = !DILocation(line: 1726, column: 81, scope: !7379)
!7379 = distinct !DILexicalBlock(scope: !7376, file: !891, line: 1725, column: 3)
!7380 = !DILocation(line: 1726, column: 60, scope: !7379)
!7381 = !DILocation(line: 1726, column: 34, scope: !7379)
!7382 = !DILocation(line: 1726, column: 5, scope: !7379)
!7383 = !DILocation(line: 1726, column: 43, scope: !7379)
!7384 = !DILocation(line: 271, column: 3, scope: !7385, inlinedAt: !7387)
!7385 = distinct !DISubprogram(name: "__DSB", scope: !7386, file: !7386, line: 269, type: !3598, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3259, retainedNodes: !162)
!7386 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7387 = distinct !DILocation(line: 1727, column: 5, scope: !7379)
!7388 = !{i64 1880309}
!7389 = !DILocation(line: 260, column: 3, scope: !7390, inlinedAt: !7391)
!7390 = distinct !DISubprogram(name: "__ISB", scope: !7386, file: !7386, line: 258, type: !3598, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3259, retainedNodes: !162)
!7391 = distinct !DILocation(line: 1728, column: 5, scope: !7379)
!7392 = !{i64 1880026}
!7393 = !DILocation(line: 1729, column: 3, scope: !7379)
!7394 = !DILocation(line: 1730, column: 1, scope: !7371)
!7395 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !7338, file: !7338, line: 50, type: !7396, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3259, retainedNodes: !7398)
!7396 = !DISubroutineType(types: !7397)
!7397 = !{!103, !32}
!7398 = !{!7399}
!7399 = !DILocalVariable(name: "irq", arg: 1, scope: !7395, file: !7338, line: 50, type: !32)
!7400 = !DILocation(line: 0, scope: !7395)
!7401 = !DILocation(line: 52, column: 20, scope: !7395)
!7402 = !DILocation(line: 52, column: 9, scope: !7395)
!7403 = !DILocation(line: 52, column: 41, scope: !7395)
!7404 = !DILocation(line: 52, column: 39, scope: !7395)
!7405 = !DILocation(line: 52, column: 2, scope: !7395)
!7406 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !7338, file: !7338, line: 64, type: !7407, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3259, retainedNodes: !7409)
!7407 = !DISubroutineType(types: !7408)
!7408 = !{null, !32, !32, !137}
!7409 = !{!7410, !7411, !7412}
!7410 = !DILocalVariable(name: "irq", arg: 1, scope: !7406, file: !7338, line: 64, type: !32)
!7411 = !DILocalVariable(name: "prio", arg: 2, scope: !7406, file: !7338, line: 64, type: !32)
!7412 = !DILocalVariable(name: "flags", arg: 3, scope: !7406, file: !7338, line: 64, type: !137)
!7413 = !DILocation(line: 0, scope: !7406)
!7414 = !DILocation(line: 83, column: 8, scope: !7415)
!7415 = distinct !DILexicalBlock(scope: !7416, file: !7338, line: 82, column: 9)
!7416 = distinct !DILexicalBlock(scope: !7406, file: !7338, line: 76, column: 6)
!7417 = !DILocation(line: 95, column: 2, scope: !7406)
!7418 = !DILocation(line: 96, column: 1, scope: !7406)
!7419 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !891, file: !891, line: 1814, type: !7420, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3259, retainedNodes: !7422)
!7420 = !DISubroutineType(types: !7421)
!7421 = !{null, !3263, !137}
!7422 = !{!7423, !7424}
!7423 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7419, file: !891, line: 1814, type: !3263)
!7424 = !DILocalVariable(name: "priority", arg: 2, scope: !7419, file: !891, line: 1814, type: !137)
!7425 = !DILocation(line: 0, scope: !7419)
!7426 = !DILocation(line: 0, scope: !7427)
!7427 = distinct !DILexicalBlock(scope: !7419, file: !891, line: 1816, column: 7)
!7428 = !DILocation(line: 1816, column: 7, scope: !7419)
!7429 = !DILocation(line: 1824, column: 1, scope: !7419)
!7430 = distinct !DISubprogram(name: "z_irq_spurious", scope: !7338, file: !7338, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3259, retainedNodes: !7431)
!7431 = !{!7432}
!7432 = !DILocalVariable(name: "unused", arg: 1, scope: !7430, file: !7338, line: 155, type: !13)
!7433 = !DILocation(line: 0, scope: !7430)
!7434 = !DILocation(line: 159, column: 2, scope: !7430)
!7435 = !DILocation(line: 160, column: 1, scope: !7430)
!7436 = distinct !DISubprogram(name: "z_arm_nmi", scope: !7437, file: !7437, line: 87, type: !3598, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3306, retainedNodes: !162)
!7437 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7438 = !DILocation(line: 89, column: 2, scope: !7436)
!7439 = !DILocation(line: 90, column: 2, scope: !7436)
!7440 = !DILocation(line: 91, column: 1, scope: !7436)
!7441 = !DISubprogram(name: "z_SysNmiOnReset", scope: !7437, file: !7437, line: 23, type: !3598, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!7442 = !DISubprogram(name: "z_arm_int_exit", scope: !7443, file: !7443, line: 153, type: !3598, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!7443 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7444 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !7445, file: !7445, line: 256, type: !3598, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3308, retainedNodes: !162)
!7445 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7446 = !DILocation(line: 258, column: 2, scope: !7444)
!7447 = !DILocation(line: 260, column: 2, scope: !7444)
!7448 = !DILocation(line: 262, column: 2, scope: !7444)
!7449 = !DILocation(line: 263, column: 2, scope: !7444)
!7450 = !DILocation(line: 267, column: 2, scope: !7444)
!7451 = !DILocation(line: 268, column: 2, scope: !7444)
!7452 = distinct !DISubprogram(name: "relocate_vector_table", scope: !7445, file: !7445, line: 53, type: !3598, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3308, retainedNodes: !162)
!7453 = !DILocation(line: 55, column: 12, scope: !7452)
!7454 = !DILocation(line: 271, column: 3, scope: !7455, inlinedAt: !7456)
!7455 = distinct !DISubprogram(name: "__DSB", scope: !7386, file: !7386, line: 269, type: !3598, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3308, retainedNodes: !162)
!7456 = distinct !DILocation(line: 56, column: 2, scope: !7452)
!7457 = !{i64 1878980}
!7458 = !DILocation(line: 260, column: 3, scope: !7459, inlinedAt: !7460)
!7459 = distinct !DISubprogram(name: "__ISB", scope: !7386, file: !7386, line: 258, type: !3598, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3308, retainedNodes: !162)
!7460 = distinct !DILocation(line: 57, column: 2, scope: !7452)
!7461 = !{i64 1878697}
!7462 = !DILocation(line: 58, column: 1, scope: !7452)
!7463 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !7445, file: !7445, line: 96, type: !3598, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3308, retainedNodes: !162)
!7464 = !DILocation(line: 103, column: 13, scope: !7463)
!7465 = !DILocation(line: 975, column: 3, scope: !7466, inlinedAt: !7469)
!7466 = distinct !DISubprogram(name: "__get_CONTROL", scope: !7386, file: !7386, line: 971, type: !135, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3308, retainedNodes: !7467)
!7467 = !{!7468}
!7468 = !DILocalVariable(name: "result", scope: !7466, file: !7386, line: 973, type: !137)
!7469 = distinct !DILocation(line: 189, column: 16, scope: !7463)
!7470 = !{i64 1899810}
!7471 = !DILocation(line: 0, scope: !7466, inlinedAt: !7469)
!7472 = !DILocation(line: 189, column: 32, scope: !7463)
!7473 = !DILocalVariable(name: "control", arg: 1, scope: !7474, file: !7386, line: 1001, type: !137)
!7474 = distinct !DISubprogram(name: "__set_CONTROL", scope: !7386, file: !7386, line: 1001, type: !7475, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3308, retainedNodes: !7477)
!7475 = !DISubroutineType(types: !7476)
!7476 = !{null, !137}
!7477 = !{!7473}
!7478 = !DILocation(line: 0, scope: !7474, inlinedAt: !7479)
!7479 = distinct !DILocation(line: 189, column: 2, scope: !7463)
!7480 = !DILocation(line: 1003, column: 3, scope: !7474, inlinedAt: !7479)
!7481 = !{i64 1900530}
!7482 = !DILocation(line: 260, column: 3, scope: !7459, inlinedAt: !7483)
!7483 = distinct !DILocation(line: 1004, column: 3, scope: !7474, inlinedAt: !7479)
!7484 = !DILocation(line: 191, column: 1, scope: !7463)
!7485 = distinct !DISubprogram(name: "arch_swap", scope: !7486, file: !7486, line: 33, type: !7396, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3336, retainedNodes: !7487)
!7486 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7487 = !{!7488}
!7488 = !DILocalVariable(name: "key", arg: 1, scope: !7485, file: !7486, line: 33, type: !32)
!7489 = !DILocation(line: 0, scope: !7485)
!7490 = !DILocation(line: 36, column: 2, scope: !7485)
!7491 = !DILocation(line: 36, column: 17, scope: !7485)
!7492 = !DILocation(line: 36, column: 25, scope: !7485)
!7493 = !DILocation(line: 37, column: 37, scope: !7485)
!7494 = !DILocation(line: 37, column: 17, scope: !7485)
!7495 = !DILocation(line: 37, column: 35, scope: !7485)
!7496 = !DILocation(line: 41, column: 12, scope: !7485)
!7497 = !DILocalVariable(name: "key", arg: 1, scope: !7498, file: !7145, line: 84, type: !32)
!7498 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7145, file: !7145, line: 84, type: !7163, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3336, retainedNodes: !7499)
!7499 = !{!7497}
!7500 = !DILocation(line: 0, scope: !7498, inlinedAt: !7501)
!7501 = distinct !DILocation(line: 44, column: 2, scope: !7485)
!7502 = !DILocation(line: 95, column: 2, scope: !7498, inlinedAt: !7501)
!7503 = !{i64 1617892}
!7504 = !DILocation(line: 53, column: 9, scope: !7485)
!7505 = !DILocation(line: 53, column: 24, scope: !7485)
!7506 = !DILocation(line: 53, column: 2, scope: !7485)
!7507 = distinct !DISubprogram(name: "arch_new_thread", scope: !7508, file: !7508, line: 56, type: !7509, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3364, retainedNodes: !7616)
!7508 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7509 = !DISubroutineType(types: !7510)
!7510 = !{null, !7511, !7611, !2684, !3926, !102, !102, !102}
!7511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7512, size: 32)
!7512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !754, line: 245, size: 1024, elements: !7513)
!7513 = !{!7514, !7572, !7584, !7585, !7586, !7587, !7593, !7606}
!7514 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7512, file: !754, line: 247, baseType: !7515, size: 384)
!7515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !754, line: 57, size: 384, elements: !7516)
!7516 = !{!7517, !7541, !7548, !7549, !7550, !7559, !7560, !7561}
!7517 = !DIDerivedType(tag: DW_TAG_member, scope: !7515, file: !754, line: 60, baseType: !7518, size: 64)
!7518 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7515, file: !754, line: 60, size: 64, elements: !7519)
!7519 = !{!7520, !7535}
!7520 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7518, file: !754, line: 61, baseType: !7521, size: 64)
!7521 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !764, line: 49, baseType: !7522)
!7522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !764, line: 37, size: 64, elements: !7523)
!7523 = !{!7524, !7530}
!7524 = !DIDerivedType(tag: DW_TAG_member, scope: !7522, file: !764, line: 38, baseType: !7525, size: 32)
!7525 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7522, file: !764, line: 38, size: 32, elements: !7526)
!7526 = !{!7527, !7529}
!7527 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7525, file: !764, line: 39, baseType: !7528, size: 32)
!7528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7522, size: 32)
!7529 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7525, file: !764, line: 40, baseType: !7528, size: 32)
!7530 = !DIDerivedType(tag: DW_TAG_member, scope: !7522, file: !764, line: 42, baseType: !7531, size: 32, offset: 32)
!7531 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7522, file: !764, line: 42, size: 32, elements: !7532)
!7532 = !{!7533, !7534}
!7533 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7531, file: !764, line: 43, baseType: !7528, size: 32)
!7534 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7531, file: !764, line: 44, baseType: !7528, size: 32)
!7535 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7518, file: !754, line: 62, baseType: !7536, size: 64)
!7536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !780, line: 49, size: 64, elements: !7537)
!7537 = !{!7538}
!7538 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7536, file: !780, line: 50, baseType: !7539, size: 64)
!7539 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7540, size: 64, elements: !564)
!7540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7536, size: 32)
!7541 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7515, file: !754, line: 68, baseType: !7542, size: 32, offset: 64)
!7542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7543, size: 32)
!7543 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !788, line: 233, baseType: !7544)
!7544 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !788, line: 231, size: 64, elements: !7545)
!7545 = !{!7546}
!7546 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7544, file: !788, line: 232, baseType: !7547, size: 64)
!7547 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !764, line: 48, baseType: !7522)
!7548 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7515, file: !754, line: 71, baseType: !240, size: 8, offset: 96)
!7549 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7515, file: !754, line: 74, baseType: !240, size: 8, offset: 104)
!7550 = !DIDerivedType(tag: DW_TAG_member, scope: !7515, file: !754, line: 90, baseType: !7551, size: 16, offset: 112)
!7551 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7515, file: !754, line: 90, size: 16, elements: !7552)
!7552 = !{!7553, !7558}
!7553 = !DIDerivedType(tag: DW_TAG_member, scope: !7551, file: !754, line: 91, baseType: !7554, size: 16)
!7554 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7551, file: !754, line: 91, size: 16, elements: !7555)
!7555 = !{!7556, !7557}
!7556 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7554, file: !754, line: 96, baseType: !802, size: 8)
!7557 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7554, file: !754, line: 97, baseType: !240, size: 8, offset: 8)
!7558 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7551, file: !754, line: 100, baseType: !151, size: 16)
!7559 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7515, file: !754, line: 107, baseType: !137, size: 32, offset: 128)
!7560 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7515, file: !754, line: 127, baseType: !102, size: 32, offset: 160)
!7561 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7515, file: !754, line: 131, baseType: !7562, size: 192, offset: 192)
!7562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !788, line: 244, size: 192, elements: !7563)
!7563 = !{!7564, !7565, !7571}
!7564 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7562, file: !788, line: 245, baseType: !7521, size: 64)
!7565 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7562, file: !788, line: 246, baseType: !7566, size: 32, offset: 64)
!7566 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !788, line: 242, baseType: !7567)
!7567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7568, size: 32)
!7568 = !DISubroutineType(types: !7569)
!7569 = !{null, !7570}
!7570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7562, size: 32)
!7571 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7562, file: !788, line: 249, baseType: !819, size: 64, offset: 128)
!7572 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7512, file: !754, line: 250, baseType: !7573, size: 288, offset: 384)
!7573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !823, line: 25, size: 288, elements: !7574)
!7574 = !{!7575, !7576, !7577, !7578, !7579, !7580, !7581, !7582, !7583}
!7575 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7573, file: !823, line: 26, baseType: !137, size: 32)
!7576 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7573, file: !823, line: 27, baseType: !137, size: 32, offset: 32)
!7577 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7573, file: !823, line: 28, baseType: !137, size: 32, offset: 64)
!7578 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7573, file: !823, line: 29, baseType: !137, size: 32, offset: 96)
!7579 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7573, file: !823, line: 30, baseType: !137, size: 32, offset: 128)
!7580 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7573, file: !823, line: 31, baseType: !137, size: 32, offset: 160)
!7581 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7573, file: !823, line: 32, baseType: !137, size: 32, offset: 192)
!7582 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7573, file: !823, line: 33, baseType: !137, size: 32, offset: 224)
!7583 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7573, file: !823, line: 34, baseType: !137, size: 32, offset: 256)
!7584 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7512, file: !754, line: 253, baseType: !102, size: 32, offset: 672)
!7585 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7512, file: !754, line: 256, baseType: !7543, size: 64, offset: 704)
!7586 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7512, file: !754, line: 294, baseType: !103, size: 32, offset: 768)
!7587 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7512, file: !754, line: 300, baseType: !7588, size: 96, offset: 800)
!7588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !754, line: 149, size: 96, elements: !7589)
!7589 = !{!7590, !7591, !7592}
!7590 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7588, file: !754, line: 153, baseType: !22, size: 32)
!7591 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7588, file: !754, line: 162, baseType: !120, size: 32, offset: 32)
!7592 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7588, file: !754, line: 168, baseType: !120, size: 32, offset: 64)
!7593 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7512, file: !754, line: 325, baseType: !7594, size: 32, offset: 896)
!7594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7595, size: 32)
!7595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !846, line: 5073, size: 160, elements: !7596)
!7596 = !{!7597, !7603, !7604}
!7597 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7595, file: !846, line: 5074, baseType: !7598, size: 96)
!7598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !7599)
!7599 = !{!7600, !7601, !7602}
!7600 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7598, file: !113, line: 57, baseType: !116, size: 32)
!7601 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7598, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!7602 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7598, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!7603 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7595, file: !846, line: 5075, baseType: !7543, size: 64, offset: 96)
!7604 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7595, file: !846, line: 5076, baseType: !7605, offset: 160)
!7605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !857, line: 43, elements: !162)
!7606 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7512, file: !754, line: 343, baseType: !7607, size: 64, offset: 928)
!7607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !823, line: 60, size: 64, elements: !7608)
!7608 = !{!7609, !7610}
!7609 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7607, file: !823, line: 63, baseType: !137, size: 32)
!7610 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7607, file: !823, line: 66, baseType: !137, size: 32, offset: 32)
!7611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7612, size: 32)
!7612 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3927, line: 44, baseType: !7613)
!7613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2854, line: 47, size: 8, elements: !7614)
!7614 = !{!7615}
!7615 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7613, file: !2854, line: 48, baseType: !109, size: 8)
!7616 = !{!7617, !7618, !7619, !7620, !7621, !7622, !7623, !7624}
!7617 = !DILocalVariable(name: "thread", arg: 1, scope: !7507, file: !7508, line: 56, type: !7511)
!7618 = !DILocalVariable(name: "stack", arg: 2, scope: !7507, file: !7508, line: 56, type: !7611)
!7619 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !7507, file: !7508, line: 57, type: !2684)
!7620 = !DILocalVariable(name: "entry", arg: 4, scope: !7507, file: !7508, line: 57, type: !3926)
!7621 = !DILocalVariable(name: "p1", arg: 5, scope: !7507, file: !7508, line: 58, type: !102)
!7622 = !DILocalVariable(name: "p2", arg: 6, scope: !7507, file: !7508, line: 58, type: !102)
!7623 = !DILocalVariable(name: "p3", arg: 7, scope: !7507, file: !7508, line: 58, type: !102)
!7624 = !DILocalVariable(name: "iframe", scope: !7507, file: !7508, line: 60, type: !3367)
!7625 = !DILocation(line: 0, scope: !7507)
!7626 = !DILocation(line: 85, column: 11, scope: !7507)
!7627 = !DILocation(line: 93, column: 10, scope: !7507)
!7628 = !DILocation(line: 98, column: 13, scope: !7507)
!7629 = !DILocation(line: 100, column: 15, scope: !7507)
!7630 = !DILocation(line: 100, column: 10, scope: !7507)
!7631 = !DILocation(line: 100, column: 13, scope: !7507)
!7632 = !DILocation(line: 101, column: 15, scope: !7507)
!7633 = !DILocation(line: 101, column: 10, scope: !7507)
!7634 = !DILocation(line: 101, column: 13, scope: !7507)
!7635 = !DILocation(line: 102, column: 15, scope: !7507)
!7636 = !DILocation(line: 102, column: 10, scope: !7507)
!7637 = !DILocation(line: 102, column: 13, scope: !7507)
!7638 = !DILocation(line: 103, column: 15, scope: !7507)
!7639 = !DILocation(line: 103, column: 10, scope: !7507)
!7640 = !DILocation(line: 103, column: 13, scope: !7507)
!7641 = !DILocation(line: 106, column: 10, scope: !7507)
!7642 = !DILocation(line: 106, column: 15, scope: !7507)
!7643 = !DILocation(line: 122, column: 29, scope: !7507)
!7644 = !DILocation(line: 122, column: 23, scope: !7507)
!7645 = !DILocation(line: 122, column: 27, scope: !7507)
!7646 = !DILocation(line: 123, column: 15, scope: !7507)
!7647 = !DILocation(line: 123, column: 23, scope: !7507)
!7648 = !DILocation(line: 143, column: 1, scope: !7507)
!7649 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !7508, file: !7508, line: 530, type: !7650, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3364, retainedNodes: !7652)
!7650 = !DISubroutineType(types: !7651)
!7651 = !{null, !7511, !2684, !3926}
!7652 = !{!7653, !7654, !7655}
!7653 = !DILocalVariable(name: "main_thread", arg: 1, scope: !7649, file: !7508, line: 530, type: !7511)
!7654 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !7649, file: !7508, line: 530, type: !2684)
!7655 = !DILocalVariable(name: "_main", arg: 3, scope: !7649, file: !7508, line: 531, type: !3926)
!7656 = !DILocation(line: 0, scope: !7649)
!7657 = !DILocation(line: 535, column: 11, scope: !7649)
!7658 = !DILocation(line: 576, column: 2, scope: !7649)
!7659 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!7660 = !DILocation(line: 603, column: 2, scope: !7649)
!7661 = distinct !DISubprogram(name: "z_arm_fault", scope: !7662, file: !7662, line: 1036, type: !7663, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3407, retainedNodes: !7678)
!7662 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7663 = !DISubroutineType(types: !7664)
!7664 = !{null, !137, !137, !137, !7665}
!7665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7666, size: 32)
!7666 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !823, line: 37, baseType: !7667)
!7667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !823, line: 25, size: 288, elements: !7668)
!7668 = !{!7669, !7670, !7671, !7672, !7673, !7674, !7675, !7676, !7677}
!7669 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7667, file: !823, line: 26, baseType: !137, size: 32)
!7670 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7667, file: !823, line: 27, baseType: !137, size: 32, offset: 32)
!7671 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7667, file: !823, line: 28, baseType: !137, size: 32, offset: 64)
!7672 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7667, file: !823, line: 29, baseType: !137, size: 32, offset: 96)
!7673 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7667, file: !823, line: 30, baseType: !137, size: 32, offset: 128)
!7674 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7667, file: !823, line: 31, baseType: !137, size: 32, offset: 160)
!7675 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7667, file: !823, line: 32, baseType: !137, size: 32, offset: 192)
!7676 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7667, file: !823, line: 33, baseType: !137, size: 32, offset: 224)
!7677 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7667, file: !823, line: 34, baseType: !137, size: 32, offset: 256)
!7678 = !{!7679, !7680, !7681, !7682, !7683, !7684, !7685, !7686, !7687, !7688}
!7679 = !DILocalVariable(name: "msp", arg: 1, scope: !7661, file: !7662, line: 1036, type: !137)
!7680 = !DILocalVariable(name: "psp", arg: 2, scope: !7661, file: !7662, line: 1036, type: !137)
!7681 = !DILocalVariable(name: "exc_return", arg: 3, scope: !7661, file: !7662, line: 1036, type: !137)
!7682 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !7661, file: !7662, line: 1037, type: !7665)
!7683 = !DILocalVariable(name: "reason", scope: !7661, file: !7662, line: 1039, type: !137)
!7684 = !DILocalVariable(name: "fault", scope: !7661, file: !7662, line: 1040, type: !103)
!7685 = !DILocalVariable(name: "recoverable", scope: !7661, file: !7662, line: 1041, type: !731)
!7686 = !DILocalVariable(name: "nested_exc", scope: !7661, file: !7662, line: 1041, type: !731)
!7687 = !DILocalVariable(name: "esf", scope: !7661, file: !7662, line: 1042, type: !3435)
!7688 = !DILocalVariable(name: "esf_copy", scope: !7661, file: !7662, line: 1047, type: !3436)
!7689 = !DILocation(line: 0, scope: !7661)
!7690 = !DILocation(line: 1040, column: 19, scope: !7661)
!7691 = !DILocation(line: 1040, column: 24, scope: !7661)
!7692 = !DILocation(line: 1041, column: 2, scope: !7661)
!7693 = !DILocation(line: 1047, column: 2, scope: !7661)
!7694 = !DILocation(line: 1047, column: 15, scope: !7661)
!7695 = !DILocalVariable(name: "key", arg: 1, scope: !7696, file: !7145, line: 84, type: !32)
!7696 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7145, file: !7145, line: 84, type: !7163, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3407, retainedNodes: !7697)
!7697 = !{!7695}
!7698 = !DILocation(line: 0, scope: !7696, inlinedAt: !7699)
!7699 = distinct !DILocation(line: 1050, column: 2, scope: !7661)
!7700 = !DILocation(line: 95, column: 2, scope: !7696, inlinedAt: !7699)
!7701 = !{i64 1651136}
!7702 = !DILocation(line: 1055, column: 9, scope: !7661)
!7703 = !DILocation(line: 1063, column: 11, scope: !7661)
!7704 = !DILocation(line: 1064, column: 6, scope: !7705)
!7705 = distinct !DILexicalBlock(scope: !7661, file: !7662, line: 1064, column: 6)
!7706 = !{i8 0, i8 2}
!7707 = !DILocation(line: 1064, column: 6, scope: !7661)
!7708 = !DILocation(line: 1070, column: 20, scope: !7661)
!7709 = !DILocation(line: 1070, column: 2, scope: !7661)
!7710 = !DILocation(line: 1089, column: 6, scope: !7711)
!7711 = distinct !DILexicalBlock(scope: !7661, file: !7662, line: 1089, column: 6)
!7712 = !DILocation(line: 0, scope: !7711)
!7713 = !DILocation(line: 1089, column: 6, scope: !7661)
!7714 = !DILocation(line: 1090, column: 28, scope: !7715)
!7715 = distinct !DILexicalBlock(scope: !7716, file: !7662, line: 1090, column: 7)
!7716 = distinct !DILexicalBlock(scope: !7711, file: !7662, line: 1089, column: 18)
!7717 = !DILocation(line: 1090, column: 44, scope: !7715)
!7718 = !DILocation(line: 1090, column: 7, scope: !7716)
!7719 = !DILocation(line: 1091, column: 24, scope: !7720)
!7720 = distinct !DILexicalBlock(scope: !7715, file: !7662, line: 1090, column: 50)
!7721 = !DILocation(line: 1092, column: 3, scope: !7720)
!7722 = !DILocation(line: 1094, column: 23, scope: !7723)
!7723 = distinct !DILexicalBlock(scope: !7711, file: !7662, line: 1093, column: 9)
!7724 = !DILocation(line: 1097, column: 2, scope: !7661)
!7725 = !DILocation(line: 1098, column: 1, scope: !7661)
!7726 = distinct !DISubprogram(name: "get_esf", scope: !7662, file: !7662, line: 894, type: !7727, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3407, retainedNodes: !7730)
!7727 = !DISubroutineType(types: !7728)
!7728 = !{!3435, !137, !137, !137, !7729}
!7729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !731, size: 32)
!7730 = !{!7731, !7732, !7733, !7734, !7735, !7736}
!7731 = !DILocalVariable(name: "msp", arg: 1, scope: !7726, file: !7662, line: 894, type: !137)
!7732 = !DILocalVariable(name: "psp", arg: 2, scope: !7726, file: !7662, line: 894, type: !137)
!7733 = !DILocalVariable(name: "exc_return", arg: 3, scope: !7726, file: !7662, line: 894, type: !137)
!7734 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !7726, file: !7662, line: 895, type: !7729)
!7735 = !DILocalVariable(name: "alternative_state_exc", scope: !7726, file: !7662, line: 897, type: !731)
!7736 = !DILocalVariable(name: "ptr_esf", scope: !7726, file: !7662, line: 898, type: !3435)
!7737 = !DILocation(line: 0, scope: !7726)
!7738 = !DILocation(line: 900, column: 14, scope: !7726)
!7739 = !DILocation(line: 902, column: 49, scope: !7740)
!7740 = distinct !DILexicalBlock(scope: !7726, file: !7662, line: 902, column: 6)
!7741 = !DILocation(line: 902, column: 6, scope: !7726)
!7742 = !DILocation(line: 983, column: 18, scope: !7743)
!7743 = distinct !DILexicalBlock(scope: !7726, file: !7662, line: 983, column: 6)
!7744 = !DILocation(line: 991, column: 7, scope: !7745)
!7745 = distinct !DILexicalBlock(scope: !7746, file: !7662, line: 990, column: 30)
!7746 = distinct !DILexicalBlock(scope: !7726, file: !7662, line: 990, column: 6)
!7747 = !DILocation(line: 998, column: 16, scope: !7748)
!7748 = distinct !DILexicalBlock(scope: !7749, file: !7662, line: 995, column: 10)
!7749 = distinct !DILexicalBlock(scope: !7745, file: !7662, line: 991, column: 7)
!7750 = !DILocation(line: 1002, column: 2, scope: !7726)
!7751 = !DILocation(line: 1003, column: 1, scope: !7726)
!7752 = distinct !DISubprogram(name: "fault_handle", scope: !7662, file: !7662, line: 786, type: !7753, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3407, retainedNodes: !7755)
!7753 = !DISubroutineType(types: !7754)
!7754 = !{!137, !3435, !103, !7729}
!7755 = !{!7756, !7757, !7758, !7759}
!7756 = !DILocalVariable(name: "esf", arg: 1, scope: !7752, file: !7662, line: 786, type: !3435)
!7757 = !DILocalVariable(name: "fault", arg: 2, scope: !7752, file: !7662, line: 786, type: !103)
!7758 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7752, file: !7662, line: 786, type: !7729)
!7759 = !DILocalVariable(name: "reason", scope: !7752, file: !7662, line: 788, type: !137)
!7760 = !DILocation(line: 0, scope: !7752)
!7761 = !DILocation(line: 790, column: 15, scope: !7752)
!7762 = !DILocation(line: 792, column: 2, scope: !7752)
!7763 = !DILocation(line: 794, column: 12, scope: !7764)
!7764 = distinct !DILexicalBlock(scope: !7752, file: !7662, line: 792, column: 17)
!7765 = !DILocation(line: 795, column: 3, scope: !7764)
!7766 = !DILocation(line: 800, column: 12, scope: !7764)
!7767 = !DILocation(line: 801, column: 3, scope: !7764)
!7768 = !DILocation(line: 803, column: 12, scope: !7764)
!7769 = !DILocation(line: 804, column: 3, scope: !7764)
!7770 = !DILocation(line: 806, column: 12, scope: !7764)
!7771 = !DILocation(line: 807, column: 3, scope: !7764)
!7772 = !DILocation(line: 814, column: 3, scope: !7764)
!7773 = !DILocation(line: 815, column: 3, scope: !7764)
!7774 = !DILocation(line: 829, column: 2, scope: !7752)
!7775 = distinct !DISubprogram(name: "hard_fault", scope: !7662, file: !7662, line: 709, type: !7776, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3407, retainedNodes: !7778)
!7776 = !DISubroutineType(types: !7777)
!7777 = !{!137, !3435, !7729}
!7778 = !{!7779, !7780, !7781}
!7779 = !DILocalVariable(name: "esf", arg: 1, scope: !7775, file: !7662, line: 709, type: !3435)
!7780 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7775, file: !7662, line: 709, type: !7729)
!7781 = !DILocalVariable(name: "reason", scope: !7775, file: !7662, line: 711, type: !137)
!7782 = !DILocation(line: 0, scope: !7775)
!7783 = !DILocation(line: 732, column: 15, scope: !7775)
!7784 = !DILocation(line: 734, column: 12, scope: !7785)
!7785 = distinct !DILexicalBlock(scope: !7775, file: !7662, line: 734, column: 6)
!7786 = !DILocation(line: 734, column: 17, scope: !7785)
!7787 = !DILocation(line: 734, column: 41, scope: !7785)
!7788 = !DILocation(line: 734, column: 6, scope: !7775)
!7789 = !DILocation(line: 736, column: 19, scope: !7790)
!7790 = distinct !DILexicalBlock(scope: !7785, file: !7662, line: 736, column: 13)
!7791 = !DILocation(line: 736, column: 49, scope: !7790)
!7792 = !DILocation(line: 736, column: 13, scope: !7785)
!7793 = !DILocation(line: 738, column: 19, scope: !7794)
!7794 = distinct !DILexicalBlock(scope: !7790, file: !7662, line: 738, column: 13)
!7795 = !DILocation(line: 738, column: 24, scope: !7794)
!7796 = !DILocation(line: 738, column: 47, scope: !7794)
!7797 = !DILocation(line: 738, column: 13, scope: !7790)
!7798 = !DILocation(line: 740, column: 7, scope: !7799)
!7799 = distinct !DILexicalBlock(scope: !7800, file: !7662, line: 740, column: 7)
!7800 = distinct !DILexicalBlock(scope: !7794, file: !7662, line: 738, column: 53)
!7801 = !DILocation(line: 740, column: 7, scope: !7800)
!7802 = !DILocation(line: 742, column: 24, scope: !7803)
!7803 = distinct !DILexicalBlock(scope: !7799, file: !7662, line: 740, column: 38)
!7804 = !DILocation(line: 743, column: 3, scope: !7803)
!7805 = !DILocation(line: 743, column: 20, scope: !7806)
!7806 = distinct !DILexicalBlock(scope: !7799, file: !7662, line: 743, column: 14)
!7807 = !DILocation(line: 743, column: 25, scope: !7806)
!7808 = !DILocation(line: 743, column: 52, scope: !7806)
!7809 = !DILocation(line: 743, column: 14, scope: !7799)
!7810 = !DILocation(line: 744, column: 13, scope: !7811)
!7811 = distinct !DILexicalBlock(scope: !7806, file: !7662, line: 743, column: 58)
!7812 = !DILocation(line: 745, column: 3, scope: !7811)
!7813 = !DILocation(line: 745, column: 20, scope: !7814)
!7814 = distinct !DILexicalBlock(scope: !7806, file: !7662, line: 745, column: 14)
!7815 = !DILocation(line: 745, column: 25, scope: !7814)
!7816 = !DILocation(line: 745, column: 52, scope: !7814)
!7817 = !DILocation(line: 745, column: 14, scope: !7806)
!7818 = !DILocation(line: 746, column: 13, scope: !7819)
!7819 = distinct !DILexicalBlock(scope: !7814, file: !7662, line: 745, column: 58)
!7820 = !DILocation(line: 747, column: 3, scope: !7819)
!7821 = !DILocation(line: 747, column: 20, scope: !7822)
!7822 = distinct !DILexicalBlock(scope: !7814, file: !7662, line: 747, column: 14)
!7823 = !DILocation(line: 747, column: 52, scope: !7822)
!7824 = !DILocation(line: 747, column: 14, scope: !7814)
!7825 = !DILocation(line: 748, column: 13, scope: !7826)
!7826 = distinct !DILexicalBlock(scope: !7822, file: !7662, line: 747, column: 58)
!7827 = !DILocation(line: 753, column: 3, scope: !7826)
!7828 = !DILocation(line: 766, column: 2, scope: !7775)
!7829 = distinct !DISubprogram(name: "mem_manage_fault", scope: !7662, file: !7662, line: 229, type: !7753, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3407, retainedNodes: !7830)
!7830 = !{!7831, !7832, !7833, !7834, !7835, !7836}
!7831 = !DILocalVariable(name: "esf", arg: 1, scope: !7829, file: !7662, line: 229, type: !3435)
!7832 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7829, file: !7662, line: 229, type: !103)
!7833 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7829, file: !7662, line: 230, type: !7729)
!7834 = !DILocalVariable(name: "reason", scope: !7829, file: !7662, line: 232, type: !137)
!7835 = !DILocalVariable(name: "mmfar", scope: !7829, file: !7662, line: 233, type: !137)
!7836 = !DILocalVariable(name: "temp", scope: !7837, file: !7662, line: 254, type: !137)
!7837 = distinct !DILexicalBlock(scope: !7838, file: !7662, line: 244, column: 48)
!7838 = distinct !DILexicalBlock(scope: !7829, file: !7662, line: 244, column: 6)
!7839 = !DILocation(line: 0, scope: !7829)
!7840 = !DILocation(line: 237, column: 12, scope: !7841)
!7841 = distinct !DILexicalBlock(scope: !7829, file: !7662, line: 237, column: 6)
!7842 = !DILocation(line: 241, column: 12, scope: !7843)
!7843 = distinct !DILexicalBlock(scope: !7829, file: !7662, line: 241, column: 6)
!7844 = !DILocation(line: 244, column: 12, scope: !7838)
!7845 = !DILocation(line: 244, column: 17, scope: !7838)
!7846 = !DILocation(line: 244, column: 42, scope: !7838)
!7847 = !DILocation(line: 244, column: 6, scope: !7829)
!7848 = !DILocation(line: 254, column: 24, scope: !7837)
!7849 = !DILocation(line: 0, scope: !7837)
!7850 = !DILocation(line: 256, column: 13, scope: !7851)
!7851 = distinct !DILexicalBlock(scope: !7837, file: !7662, line: 256, column: 7)
!7852 = !DILocation(line: 256, column: 18, scope: !7851)
!7853 = !DILocation(line: 256, column: 44, scope: !7851)
!7854 = !DILocation(line: 256, column: 7, scope: !7837)
!7855 = !DILocation(line: 261, column: 15, scope: !7856)
!7856 = distinct !DILexicalBlock(scope: !7857, file: !7662, line: 259, column: 30)
!7857 = distinct !DILexicalBlock(scope: !7858, file: !7662, line: 259, column: 8)
!7858 = distinct !DILexicalBlock(scope: !7851, file: !7662, line: 256, column: 50)
!7859 = !DILocation(line: 262, column: 4, scope: !7856)
!7860 = !DILocation(line: 265, column: 12, scope: !7861)
!7861 = distinct !DILexicalBlock(scope: !7829, file: !7662, line: 265, column: 6)
!7862 = !DILocation(line: 269, column: 12, scope: !7863)
!7863 = distinct !DILexicalBlock(scope: !7829, file: !7662, line: 269, column: 6)
!7864 = !DILocation(line: 288, column: 12, scope: !7865)
!7865 = distinct !DILexicalBlock(scope: !7829, file: !7662, line: 288, column: 6)
!7866 = !DILocation(line: 288, column: 17, scope: !7865)
!7867 = !DILocation(line: 288, column: 41, scope: !7865)
!7868 = !DILocation(line: 289, column: 9, scope: !7865)
!7869 = !DILocation(line: 288, column: 6, scope: !7829)
!7870 = !DILocation(line: 360, column: 12, scope: !7871)
!7871 = distinct !DILexicalBlock(scope: !7829, file: !7662, line: 360, column: 6)
!7872 = !DILocation(line: 360, column: 17, scope: !7871)
!7873 = !DILocation(line: 360, column: 41, scope: !7871)
!7874 = !DILocation(line: 360, column: 6, scope: !7829)
!7875 = !DILocation(line: 361, column: 14, scope: !7876)
!7876 = distinct !DILexicalBlock(scope: !7871, file: !7662, line: 360, column: 47)
!7877 = !DILocation(line: 362, column: 2, scope: !7876)
!7878 = !DILocation(line: 366, column: 12, scope: !7829)
!7879 = !DILocation(line: 369, column: 15, scope: !7829)
!7880 = !DILocation(line: 371, column: 2, scope: !7829)
!7881 = distinct !DISubprogram(name: "bus_fault", scope: !7662, file: !7662, line: 383, type: !7882, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3407, retainedNodes: !7884)
!7882 = !DISubroutineType(types: !7883)
!7883 = !{!103, !3435, !103, !7729}
!7884 = !{!7885, !7886, !7887, !7888, !7889}
!7885 = !DILocalVariable(name: "esf", arg: 1, scope: !7881, file: !7662, line: 383, type: !3435)
!7886 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7881, file: !7662, line: 383, type: !103)
!7887 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7881, file: !7662, line: 383, type: !7729)
!7888 = !DILocalVariable(name: "reason", scope: !7881, file: !7662, line: 385, type: !137)
!7889 = !DILocalVariable(name: "bfar", scope: !7890, file: !7662, line: 405, type: !137)
!7890 = distinct !DILexicalBlock(scope: !7891, file: !7662, line: 395, column: 42)
!7891 = distinct !DILexicalBlock(scope: !7881, file: !7662, line: 395, column: 6)
!7892 = !DILocation(line: 0, scope: !7881)
!7893 = !DILocation(line: 389, column: 11, scope: !7894)
!7894 = distinct !DILexicalBlock(scope: !7881, file: !7662, line: 389, column: 6)
!7895 = !DILocation(line: 392, column: 11, scope: !7896)
!7896 = distinct !DILexicalBlock(scope: !7881, file: !7662, line: 392, column: 6)
!7897 = !DILocation(line: 395, column: 11, scope: !7891)
!7898 = !DILocation(line: 395, column: 16, scope: !7891)
!7899 = !DILocation(line: 395, column: 6, scope: !7881)
!7900 = !DILocation(line: 405, column: 3, scope: !7890)
!7901 = !DILocation(line: 0, scope: !7890)
!7902 = !DILocation(line: 407, column: 13, scope: !7903)
!7903 = distinct !DILexicalBlock(scope: !7890, file: !7662, line: 407, column: 7)
!7904 = !DILocation(line: 407, column: 18, scope: !7903)
!7905 = !DILocation(line: 407, column: 44, scope: !7903)
!7906 = !DILocation(line: 407, column: 7, scope: !7890)
!7907 = !DILocation(line: 411, column: 15, scope: !7908)
!7908 = distinct !DILexicalBlock(scope: !7909, file: !7662, line: 409, column: 30)
!7909 = distinct !DILexicalBlock(scope: !7910, file: !7662, line: 409, column: 8)
!7910 = distinct !DILexicalBlock(scope: !7903, file: !7662, line: 407, column: 50)
!7911 = !DILocation(line: 412, column: 4, scope: !7908)
!7912 = !DILocation(line: 415, column: 11, scope: !7913)
!7913 = distinct !DILexicalBlock(scope: !7881, file: !7662, line: 415, column: 6)
!7914 = !DILocation(line: 418, column: 12, scope: !7915)
!7915 = distinct !DILexicalBlock(scope: !7881, file: !7662, line: 418, column: 6)
!7916 = !DILocation(line: 418, column: 17, scope: !7915)
!7917 = !DILocation(line: 418, column: 41, scope: !7915)
!7918 = !DILocation(line: 418, column: 6, scope: !7881)
!7919 = !DILocation(line: 423, column: 18, scope: !7920)
!7920 = distinct !DILexicalBlock(scope: !7915, file: !7662, line: 423, column: 13)
!7921 = !DILocation(line: 524, column: 12, scope: !7881)
!7922 = !DILocation(line: 526, column: 15, scope: !7881)
!7923 = !DILocation(line: 528, column: 2, scope: !7881)
!7924 = distinct !DISubprogram(name: "usage_fault", scope: !7662, file: !7662, line: 539, type: !7925, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3407, retainedNodes: !7929)
!7925 = !DISubroutineType(types: !7926)
!7926 = !{!137, !7927}
!7927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7928, size: 32)
!7928 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3436)
!7929 = !{!7930, !7931}
!7930 = !DILocalVariable(name: "esf", arg: 1, scope: !7924, file: !7662, line: 539, type: !7927)
!7931 = !DILocalVariable(name: "reason", scope: !7924, file: !7662, line: 541, type: !137)
!7932 = !DILocation(line: 0, scope: !7924)
!7933 = !DILocation(line: 546, column: 12, scope: !7934)
!7934 = distinct !DILexicalBlock(scope: !7924, file: !7662, line: 546, column: 6)
!7935 = !DILocation(line: 549, column: 12, scope: !7936)
!7936 = distinct !DILexicalBlock(scope: !7924, file: !7662, line: 549, column: 6)
!7937 = !DILocation(line: 567, column: 12, scope: !7938)
!7938 = distinct !DILexicalBlock(scope: !7924, file: !7662, line: 567, column: 6)
!7939 = !DILocation(line: 570, column: 12, scope: !7940)
!7940 = distinct !DILexicalBlock(scope: !7924, file: !7662, line: 570, column: 6)
!7941 = !DILocation(line: 573, column: 12, scope: !7942)
!7942 = distinct !DILexicalBlock(scope: !7924, file: !7662, line: 573, column: 6)
!7943 = !DILocation(line: 576, column: 12, scope: !7944)
!7944 = distinct !DILexicalBlock(scope: !7924, file: !7662, line: 576, column: 6)
!7945 = !DILocation(line: 581, column: 12, scope: !7924)
!7946 = !DILocation(line: 583, column: 2, scope: !7924)
!7947 = distinct !DISubprogram(name: "debug_monitor", scope: !7662, file: !7662, line: 632, type: !7948, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3407, retainedNodes: !7950)
!7948 = !DISubroutineType(types: !7949)
!7949 = !{null, !3435, !7729}
!7950 = !{!7951, !7952}
!7951 = !DILocalVariable(name: "esf", arg: 1, scope: !7947, file: !7662, line: 632, type: !3435)
!7952 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7947, file: !7662, line: 632, type: !7729)
!7953 = !DILocation(line: 0, scope: !7947)
!7954 = !DILocation(line: 634, column: 15, scope: !7947)
!7955 = !DILocation(line: 652, column: 1, scope: !7947)
!7956 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !7662, file: !7662, line: 658, type: !7957, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3407, retainedNodes: !7959)
!7957 = !DISubroutineType(types: !7958)
!7958 = !{!731, !3435}
!7959 = !{!7960, !7961, !7962}
!7960 = !DILocalVariable(name: "esf", arg: 1, scope: !7956, file: !7662, line: 658, type: !3435)
!7961 = !DILocalVariable(name: "ret_addr", scope: !7956, file: !7662, line: 660, type: !150)
!7962 = !DILocalVariable(name: "fault_insn", scope: !7956, file: !7662, line: 686, type: !151)
!7963 = !DILocation(line: 0, scope: !7956)
!7964 = !DILocation(line: 660, column: 46, scope: !7956)
!7965 = !DILocation(line: 660, column: 23, scope: !7956)
!7966 = !DILocation(line: 682, column: 11, scope: !7956)
!7967 = !DILocation(line: 271, column: 3, scope: !7968, inlinedAt: !7969)
!7968 = distinct !DISubprogram(name: "__DSB", scope: !7386, file: !7386, line: 269, type: !3598, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3407, retainedNodes: !162)
!7969 = distinct !DILocation(line: 683, column: 2, scope: !7956)
!7970 = !{i64 1906084}
!7971 = !DILocation(line: 260, column: 3, scope: !7972, inlinedAt: !7973)
!7972 = distinct !DISubprogram(name: "__ISB", scope: !7386, file: !7386, line: 258, type: !3598, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3407, retainedNodes: !162)
!7973 = distinct !DILocation(line: 684, column: 2, scope: !7956)
!7974 = !{i64 1905801}
!7975 = !DILocation(line: 686, column: 35, scope: !7956)
!7976 = !DILocation(line: 686, column: 24, scope: !7956)
!7977 = !DILocation(line: 688, column: 11, scope: !7956)
!7978 = !DILocation(line: 271, column: 3, scope: !7968, inlinedAt: !7979)
!7979 = distinct !DILocation(line: 689, column: 2, scope: !7956)
!7980 = !DILocation(line: 260, column: 3, scope: !7972, inlinedAt: !7981)
!7981 = distinct !DILocation(line: 690, column: 2, scope: !7956)
!7982 = !DILocation(line: 693, column: 45, scope: !7983)
!7983 = distinct !DILexicalBlock(scope: !7956, file: !7662, line: 693, column: 6)
!7984 = !DILocation(line: 699, column: 1, scope: !7956)
!7985 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !7662, file: !7662, line: 1107, type: !3598, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3407, retainedNodes: !162)
!7986 = !DILocation(line: 1111, column: 11, scope: !7985)
!7987 = !DILocation(line: 1136, column: 1, scope: !7985)
!7988 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !7989, file: !7989, line: 26, type: !3598, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3478, retainedNodes: !7990)
!7989 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7990 = !{!7991}
!7991 = !DILocalVariable(name: "irq", scope: !7988, file: !7989, line: 28, type: !103)
!7992 = !DILocation(line: 0, scope: !7988)
!7993 = !DILocation(line: 30, column: 2, scope: !7994)
!7994 = distinct !DILexicalBlock(scope: !7988, file: !7989, line: 30, column: 2)
!7995 = !DILocation(line: 31, column: 3, scope: !7996)
!7996 = distinct !DILexicalBlock(scope: !7997, file: !7989, line: 30, column: 39)
!7997 = distinct !DILexicalBlock(scope: !7994, file: !7989, line: 30, column: 2)
!7998 = !DILocation(line: 30, column: 35, scope: !7997)
!7999 = !DILocation(line: 30, column: 13, scope: !7997)
!8000 = distinct !{!8000, !7993, !8001}
!8001 = !DILocation(line: 32, column: 2, scope: !7994)
!8002 = !DILocation(line: 33, column: 1, scope: !7988)
!8003 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !891, file: !891, line: 1814, type: !7420, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3478, retainedNodes: !8004)
!8004 = !{!8005, !8006}
!8005 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8003, file: !891, line: 1814, type: !3263)
!8006 = !DILocalVariable(name: "priority", arg: 2, scope: !8003, file: !891, line: 1814, type: !137)
!8007 = !DILocation(line: 0, scope: !8003)
!8008 = !DILocation(line: 1816, column: 7, scope: !8003)
!8009 = !DILocation(line: 0, scope: !8010)
!8010 = distinct !DILexicalBlock(scope: !8003, file: !891, line: 1816, column: 7)
!8011 = !DILocation(line: 1824, column: 1, scope: !8003)
!8012 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !8013, file: !8013, line: 27, type: !8014, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3523, retainedNodes: !8117)
!8013 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8014 = !DISubroutineType(types: !8015)
!8015 = !{null, !8016}
!8016 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !754, line: 347, baseType: !8017)
!8017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8018, size: 32)
!8018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !754, line: 245, size: 1024, elements: !8019)
!8019 = !{!8020, !8078, !8090, !8091, !8092, !8093, !8099, !8112}
!8020 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !8018, file: !754, line: 247, baseType: !8021, size: 384)
!8021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !754, line: 57, size: 384, elements: !8022)
!8022 = !{!8023, !8047, !8054, !8055, !8056, !8065, !8066, !8067}
!8023 = !DIDerivedType(tag: DW_TAG_member, scope: !8021, file: !754, line: 60, baseType: !8024, size: 64)
!8024 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8021, file: !754, line: 60, size: 64, elements: !8025)
!8025 = !{!8026, !8041}
!8026 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !8024, file: !754, line: 61, baseType: !8027, size: 64)
!8027 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !764, line: 49, baseType: !8028)
!8028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !764, line: 37, size: 64, elements: !8029)
!8029 = !{!8030, !8036}
!8030 = !DIDerivedType(tag: DW_TAG_member, scope: !8028, file: !764, line: 38, baseType: !8031, size: 32)
!8031 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8028, file: !764, line: 38, size: 32, elements: !8032)
!8032 = !{!8033, !8035}
!8033 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8031, file: !764, line: 39, baseType: !8034, size: 32)
!8034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8028, size: 32)
!8035 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8031, file: !764, line: 40, baseType: !8034, size: 32)
!8036 = !DIDerivedType(tag: DW_TAG_member, scope: !8028, file: !764, line: 42, baseType: !8037, size: 32, offset: 32)
!8037 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8028, file: !764, line: 42, size: 32, elements: !8038)
!8038 = !{!8039, !8040}
!8039 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8037, file: !764, line: 43, baseType: !8034, size: 32)
!8040 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8037, file: !764, line: 44, baseType: !8034, size: 32)
!8041 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !8024, file: !754, line: 62, baseType: !8042, size: 64)
!8042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !780, line: 49, size: 64, elements: !8043)
!8043 = !{!8044}
!8044 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !8042, file: !780, line: 50, baseType: !8045, size: 64)
!8045 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8046, size: 64, elements: !564)
!8046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8042, size: 32)
!8047 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !8021, file: !754, line: 68, baseType: !8048, size: 32, offset: 64)
!8048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8049, size: 32)
!8049 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !788, line: 233, baseType: !8050)
!8050 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !788, line: 231, size: 64, elements: !8051)
!8051 = !{!8052}
!8052 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8050, file: !788, line: 232, baseType: !8053, size: 64)
!8053 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !764, line: 48, baseType: !8028)
!8054 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !8021, file: !754, line: 71, baseType: !240, size: 8, offset: 96)
!8055 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !8021, file: !754, line: 74, baseType: !240, size: 8, offset: 104)
!8056 = !DIDerivedType(tag: DW_TAG_member, scope: !8021, file: !754, line: 90, baseType: !8057, size: 16, offset: 112)
!8057 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8021, file: !754, line: 90, size: 16, elements: !8058)
!8058 = !{!8059, !8064}
!8059 = !DIDerivedType(tag: DW_TAG_member, scope: !8057, file: !754, line: 91, baseType: !8060, size: 16)
!8060 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8057, file: !754, line: 91, size: 16, elements: !8061)
!8061 = !{!8062, !8063}
!8062 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !8060, file: !754, line: 96, baseType: !802, size: 8)
!8063 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !8060, file: !754, line: 97, baseType: !240, size: 8, offset: 8)
!8064 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !8057, file: !754, line: 100, baseType: !151, size: 16)
!8065 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !8021, file: !754, line: 107, baseType: !137, size: 32, offset: 128)
!8066 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !8021, file: !754, line: 127, baseType: !102, size: 32, offset: 160)
!8067 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !8021, file: !754, line: 131, baseType: !8068, size: 192, offset: 192)
!8068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !788, line: 244, size: 192, elements: !8069)
!8069 = !{!8070, !8071, !8077}
!8070 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !8068, file: !788, line: 245, baseType: !8027, size: 64)
!8071 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !8068, file: !788, line: 246, baseType: !8072, size: 32, offset: 64)
!8072 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !788, line: 242, baseType: !8073)
!8073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8074, size: 32)
!8074 = !DISubroutineType(types: !8075)
!8075 = !{null, !8076}
!8076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8068, size: 32)
!8077 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !8068, file: !788, line: 249, baseType: !819, size: 64, offset: 128)
!8078 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !8018, file: !754, line: 250, baseType: !8079, size: 288, offset: 384)
!8079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !823, line: 25, size: 288, elements: !8080)
!8080 = !{!8081, !8082, !8083, !8084, !8085, !8086, !8087, !8088, !8089}
!8081 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8079, file: !823, line: 26, baseType: !137, size: 32)
!8082 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8079, file: !823, line: 27, baseType: !137, size: 32, offset: 32)
!8083 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8079, file: !823, line: 28, baseType: !137, size: 32, offset: 64)
!8084 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8079, file: !823, line: 29, baseType: !137, size: 32, offset: 96)
!8085 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8079, file: !823, line: 30, baseType: !137, size: 32, offset: 128)
!8086 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8079, file: !823, line: 31, baseType: !137, size: 32, offset: 160)
!8087 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8079, file: !823, line: 32, baseType: !137, size: 32, offset: 192)
!8088 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8079, file: !823, line: 33, baseType: !137, size: 32, offset: 224)
!8089 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8079, file: !823, line: 34, baseType: !137, size: 32, offset: 256)
!8090 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !8018, file: !754, line: 253, baseType: !102, size: 32, offset: 672)
!8091 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !8018, file: !754, line: 256, baseType: !8049, size: 64, offset: 704)
!8092 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !8018, file: !754, line: 294, baseType: !103, size: 32, offset: 768)
!8093 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !8018, file: !754, line: 300, baseType: !8094, size: 96, offset: 800)
!8094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !754, line: 149, size: 96, elements: !8095)
!8095 = !{!8096, !8097, !8098}
!8096 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8094, file: !754, line: 153, baseType: !22, size: 32)
!8097 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8094, file: !754, line: 162, baseType: !120, size: 32, offset: 32)
!8098 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !8094, file: !754, line: 168, baseType: !120, size: 32, offset: 64)
!8099 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !8018, file: !754, line: 325, baseType: !8100, size: 32, offset: 896)
!8100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8101, size: 32)
!8101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !846, line: 5073, size: 160, elements: !8102)
!8102 = !{!8103, !8109, !8110}
!8103 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8101, file: !846, line: 5074, baseType: !8104, size: 96)
!8104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !8105)
!8105 = !{!8106, !8107, !8108}
!8106 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8104, file: !113, line: 57, baseType: !116, size: 32)
!8107 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !8104, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!8108 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !8104, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!8109 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8101, file: !846, line: 5075, baseType: !8049, size: 64, offset: 96)
!8110 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8101, file: !846, line: 5076, baseType: !8111, offset: 160)
!8111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !857, line: 43, elements: !162)
!8112 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !8018, file: !754, line: 343, baseType: !8113, size: 64, offset: 928)
!8113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !823, line: 60, size: 64, elements: !8114)
!8114 = !{!8115, !8116}
!8115 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !8113, file: !823, line: 63, baseType: !137, size: 32)
!8116 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !8113, file: !823, line: 66, baseType: !137, size: 32, offset: 32)
!8117 = !{!8118}
!8118 = !DILocalVariable(name: "thread", arg: 1, scope: !8012, file: !8013, line: 27, type: !8016)
!8119 = !DILocation(line: 0, scope: !8012)
!8120 = !DILocation(line: 29, column: 6, scope: !8121)
!8121 = distinct !DILexicalBlock(scope: !8012, file: !8013, line: 29, column: 6)
!8122 = !DILocation(line: 29, column: 15, scope: !8121)
!8123 = !DILocation(line: 29, column: 6, scope: !8012)
!8124 = !DILocation(line: 1031, column: 3, scope: !8125, inlinedAt: !8128)
!8125 = distinct !DISubprogram(name: "__get_IPSR", scope: !7386, file: !7386, line: 1027, type: !135, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3523, retainedNodes: !8126)
!8126 = !{!8127}
!8127 = !DILocalVariable(name: "result", scope: !8125, file: !7386, line: 1029, type: !137)
!8128 = distinct !DILocation(line: 48, column: 10, scope: !8129, inlinedAt: !8133)
!8129 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8130, file: !8130, line: 46, type: !8131, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3523, retainedNodes: !162)
!8130 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8131 = !DISubroutineType(types: !8132)
!8132 = !{!731}
!8133 = distinct !DILocation(line: 30, column: 7, scope: !8134)
!8134 = distinct !DILexicalBlock(scope: !8135, file: !8013, line: 30, column: 7)
!8135 = distinct !DILexicalBlock(scope: !8121, file: !8013, line: 29, column: 26)
!8136 = !{i64 1894932}
!8137 = !DILocation(line: 0, scope: !8125, inlinedAt: !8128)
!8138 = !DILocation(line: 48, column: 9, scope: !8129, inlinedAt: !8133)
!8139 = !DILocation(line: 30, column: 7, scope: !8135)
!8140 = !DILocation(line: 42, column: 14, scope: !8141)
!8141 = distinct !DILexicalBlock(scope: !8134, file: !8013, line: 30, column: 25)
!8142 = !DILocation(line: 48, column: 15, scope: !8141)
!8143 = !DILocation(line: 49, column: 3, scope: !8141)
!8144 = !DILocation(line: 52, column: 2, scope: !8012)
!8145 = !DILocation(line: 53, column: 1, scope: !8012)
!8146 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !749, file: !749, line: 127, type: !3598, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !742, retainedNodes: !162)
!8147 = !DILocation(line: 134, column: 2, scope: !8146)
!8148 = !DILocation(line: 156, column: 1, scope: !8146)
!8149 = !DILocation(line: 0, scope: !748)
!8150 = !DILocation(line: 311, column: 2, scope: !748)
!8151 = !DILocation(line: 316, column: 1, scope: !748)
!8152 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !918, file: !918, line: 180, type: !3598, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !886, retainedNodes: !162)
!8153 = !DILocation(line: 188, column: 12, scope: !8152)
!8154 = !DILocation(line: 271, column: 3, scope: !8155, inlinedAt: !8156)
!8155 = distinct !DISubprogram(name: "__DSB", scope: !7386, file: !7386, line: 269, type: !3598, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !886, retainedNodes: !162)
!8156 = distinct !DILocation(line: 192, column: 2, scope: !8152)
!8157 = !{i64 2059757}
!8158 = !DILocation(line: 260, column: 3, scope: !8159, inlinedAt: !8160)
!8159 = distinct !DISubprogram(name: "__ISB", scope: !7386, file: !7386, line: 258, type: !3598, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !886, retainedNodes: !162)
!8160 = distinct !DILocation(line: 193, column: 2, scope: !8152)
!8161 = !{i64 2059474}
!8162 = !DILocation(line: 194, column: 1, scope: !8152)
!8163 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !918, file: !918, line: 199, type: !3598, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !886, retainedNodes: !162)
!8164 = !DILocation(line: 282, column: 3, scope: !8165, inlinedAt: !8166)
!8165 = distinct !DISubprogram(name: "__DMB", scope: !7386, file: !7386, line: 280, type: !3598, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !886, retainedNodes: !162)
!8166 = distinct !DILocation(line: 202, column: 2, scope: !8163)
!8167 = !{i64 2060033}
!8168 = !DILocation(line: 205, column: 12, scope: !8163)
!8169 = !DILocation(line: 206, column: 1, scope: !8163)
!8170 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !918, file: !918, line: 275, type: !8171, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !886, retainedNodes: !8184)
!8171 = !DISubroutineType(types: !8172)
!8172 = !{null, !8173, !1447, !2633, !2633}
!8173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8174, size: 32)
!8174 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8175)
!8175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !868, line: 52, size: 96, elements: !8176)
!8176 = !{!8177, !8178, !8179}
!8177 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8175, file: !868, line: 53, baseType: !22, size: 32)
!8178 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8175, file: !868, line: 54, baseType: !120, size: 32, offset: 32)
!8179 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !8175, file: !868, line: 55, baseType: !8180, size: 32, offset: 64)
!8180 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !874, line: 151, baseType: !8181)
!8181 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !874, line: 149, size: 32, elements: !8182)
!8182 = !{!8183}
!8183 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !8181, file: !874, line: 150, baseType: !137, size: 32)
!8184 = !{!8185, !8186, !8187, !8188}
!8185 = !DILocalVariable(name: "static_regions", arg: 1, scope: !8170, file: !918, line: 276, type: !8173)
!8186 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8170, file: !918, line: 276, type: !1447)
!8187 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !8170, file: !918, line: 277, type: !2633)
!8188 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !8170, file: !918, line: 277, type: !2633)
!8189 = !DILocation(line: 0, scope: !8170)
!8190 = !DILocation(line: 279, column: 6, scope: !8191)
!8191 = distinct !DILexicalBlock(scope: !8170, file: !918, line: 279, column: 6)
!8192 = !DILocation(line: 285, column: 1, scope: !8170)
!8193 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !8194, file: !8194, line: 220, type: !8195, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !886, retainedNodes: !8197)
!8194 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8195 = !DISubroutineType(types: !8196)
!8196 = !{!103, !8173, !1447, !2633, !2633}
!8197 = !{!8198, !8199, !8200, !8201, !8202}
!8198 = !DILocalVariable(name: "static_regions", arg: 1, scope: !8193, file: !8194, line: 221, type: !8173)
!8199 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8193, file: !8194, line: 221, type: !1447)
!8200 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !8193, file: !8194, line: 222, type: !2633)
!8201 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !8193, file: !8194, line: 223, type: !2633)
!8202 = !DILocalVariable(name: "mpu_reg_index", scope: !8193, file: !8194, line: 225, type: !103)
!8203 = !DILocation(line: 0, scope: !8193)
!8204 = !DILocation(line: 225, column: 22, scope: !8193)
!8205 = !DILocation(line: 233, column: 18, scope: !8193)
!8206 = !DILocation(line: 236, column: 23, scope: !8193)
!8207 = !DILocation(line: 236, column: 21, scope: !8193)
!8208 = !DILocation(line: 238, column: 2, scope: !8193)
!8209 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !918, file: !918, line: 105, type: !8210, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !886, retainedNodes: !8212)
!8210 = !DISubroutineType(types: !8211)
!8211 = !{!103, !8173, !240, !240, !731}
!8212 = !{!8213, !8214, !8215, !8216, !8217, !8218}
!8213 = !DILocalVariable(name: "regions", arg: 1, scope: !8209, file: !918, line: 106, type: !8173)
!8214 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8209, file: !918, line: 106, type: !240)
!8215 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !8209, file: !918, line: 106, type: !240)
!8216 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !8209, file: !918, line: 107, type: !731)
!8217 = !DILocalVariable(name: "i", scope: !8209, file: !918, line: 109, type: !103)
!8218 = !DILocalVariable(name: "reg_index", scope: !8209, file: !918, line: 110, type: !103)
!8219 = !DILocation(line: 0, scope: !8209)
!8220 = !DILocation(line: 110, column: 18, scope: !8209)
!8221 = !DILocation(line: 112, column: 16, scope: !8222)
!8222 = distinct !DILexicalBlock(scope: !8223, file: !918, line: 112, column: 2)
!8223 = distinct !DILexicalBlock(scope: !8209, file: !918, line: 112, column: 2)
!8224 = !DILocation(line: 112, column: 2, scope: !8223)
!8225 = !DILocation(line: 113, column: 7, scope: !8226)
!8226 = distinct !DILexicalBlock(scope: !8227, file: !918, line: 113, column: 7)
!8227 = distinct !DILexicalBlock(scope: !8222, file: !918, line: 112, column: 36)
!8228 = !DILocation(line: 113, column: 18, scope: !8226)
!8229 = !DILocation(line: 113, column: 23, scope: !8226)
!8230 = !DILocation(line: 113, column: 7, scope: !8227)
!8231 = !DILocation(line: 118, column: 23, scope: !8232)
!8232 = distinct !DILexicalBlock(scope: !8227, file: !918, line: 118, column: 7)
!8233 = !DILocation(line: 119, column: 7, scope: !8232)
!8234 = !DILocation(line: 118, column: 7, scope: !8227)
!8235 = !DILocation(line: 124, column: 36, scope: !8227)
!8236 = !DILocation(line: 124, column: 15, scope: !8227)
!8237 = !DILocation(line: 126, column: 17, scope: !8238)
!8238 = distinct !DILexicalBlock(scope: !8227, file: !918, line: 126, column: 7)
!8239 = !DILocation(line: 126, column: 7, scope: !8227)
!8240 = !DILocation(line: 131, column: 12, scope: !8227)
!8241 = !DILocation(line: 132, column: 2, scope: !8227)
!8242 = !DILocation(line: 112, column: 32, scope: !8222)
!8243 = distinct !{!8243, !8224, !8244}
!8244 = !DILocation(line: 132, column: 2, scope: !8223)
!8245 = !DILocation(line: 135, column: 1, scope: !8209)
!8246 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !8194, file: !8194, line: 63, type: !8247, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !886, retainedNodes: !8249)
!8247 = !DISubroutineType(types: !8248)
!8248 = !{!103, !8173}
!8249 = !{!8250, !8251}
!8250 = !DILocalVariable(name: "part", arg: 1, scope: !8246, file: !8194, line: 63, type: !8173)
!8251 = !DILocalVariable(name: "partition_is_valid", scope: !8246, file: !8194, line: 70, type: !103)
!8252 = !DILocation(line: 0, scope: !8246)
!8253 = !DILocation(line: 71, column: 11, scope: !8246)
!8254 = !DILocation(line: 71, column: 37, scope: !8246)
!8255 = !DILocation(line: 72, column: 3, scope: !8246)
!8256 = !DILocation(line: 71, column: 30, scope: !8246)
!8257 = !DILocation(line: 75, column: 11, scope: !8246)
!8258 = !DILocation(line: 75, column: 17, scope: !8246)
!8259 = !DILocation(line: 75, column: 38, scope: !8246)
!8260 = !DILocation(line: 77, column: 2, scope: !8246)
!8261 = distinct !DISubprogram(name: "mpu_configure_region", scope: !918, file: !918, line: 79, type: !8262, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !886, retainedNodes: !8264)
!8262 = !DISubroutineType(types: !8263)
!8263 = !{!103, !1447, !8173}
!8264 = !{!8265, !8266, !8267}
!8265 = !DILocalVariable(name: "index", arg: 1, scope: !8261, file: !918, line: 79, type: !1447)
!8266 = !DILocalVariable(name: "new_region", arg: 2, scope: !8261, file: !918, line: 80, type: !8173)
!8267 = !DILocalVariable(name: "region_conf", scope: !8261, file: !918, line: 82, type: !907)
!8268 = !DILocation(line: 0, scope: !8261)
!8269 = !DILocation(line: 82, column: 2, scope: !8261)
!8270 = !DILocation(line: 82, column: 24, scope: !8261)
!8271 = !DILocation(line: 87, column: 33, scope: !8261)
!8272 = !DILocation(line: 87, column: 14, scope: !8261)
!8273 = !DILocation(line: 87, column: 19, scope: !8261)
!8274 = !DILocation(line: 91, column: 55, scope: !8261)
!8275 = !DILocation(line: 92, column: 16, scope: !8261)
!8276 = !DILocation(line: 92, column: 53, scope: !8261)
!8277 = !DILocation(line: 91, column: 2, scope: !8261)
!8278 = !DILocation(line: 95, column: 9, scope: !8261)
!8279 = !DILocation(line: 97, column: 1, scope: !8261)
!8280 = !DILocation(line: 95, column: 2, scope: !8261)
!8281 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !8194, file: !8194, line: 113, type: !8282, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !886, retainedNodes: !8287)
!8282 = !DISubroutineType(types: !8283)
!8283 = !{null, !8284, !8285, !137, !137}
!8284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !913, size: 32)
!8285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8286, size: 32)
!8286 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8180)
!8287 = !{!8288, !8289, !8290, !8291}
!8288 = !DILocalVariable(name: "p_attr", arg: 1, scope: !8281, file: !8194, line: 114, type: !8284)
!8289 = !DILocalVariable(name: "attr", arg: 2, scope: !8281, file: !8194, line: 115, type: !8285)
!8290 = !DILocalVariable(name: "base", arg: 3, scope: !8281, file: !8194, line: 115, type: !137)
!8291 = !DILocalVariable(name: "size", arg: 4, scope: !8281, file: !8194, line: 115, type: !137)
!8292 = !DILocation(line: 0, scope: !8281)
!8293 = !DILocation(line: 127, column: 23, scope: !8281)
!8294 = !DILocation(line: 127, column: 35, scope: !8281)
!8295 = !DILocation(line: 127, column: 33, scope: !8281)
!8296 = !DILocation(line: 127, column: 10, scope: !8281)
!8297 = !DILocation(line: 127, column: 15, scope: !8281)
!8298 = !DILocation(line: 129, column: 1, scope: !8281)
!8299 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !918, file: !918, line: 57, type: !8300, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !886, retainedNodes: !8302)
!8300 = !DISubroutineType(types: !8301)
!8301 = !{!103, !1447, !905}
!8302 = !{!8303, !8304}
!8303 = !DILocalVariable(name: "index", arg: 1, scope: !8299, file: !918, line: 57, type: !1447)
!8304 = !DILocalVariable(name: "region_conf", arg: 2, scope: !8299, file: !918, line: 58, type: !905)
!8305 = !DILocation(line: 0, scope: !8299)
!8306 = !DILocation(line: 61, column: 6, scope: !8307)
!8307 = distinct !DILexicalBlock(scope: !8299, file: !918, line: 61, column: 6)
!8308 = !DILocation(line: 61, column: 12, scope: !8307)
!8309 = !DILocation(line: 61, column: 6, scope: !8299)
!8310 = !DILocation(line: 71, column: 2, scope: !8299)
!8311 = !DILocation(line: 73, column: 2, scope: !8299)
!8312 = !DILocation(line: 74, column: 1, scope: !8299)
!8313 = distinct !DISubprogram(name: "region_init", scope: !8194, file: !8194, line: 29, type: !8314, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !886, retainedNodes: !8316)
!8314 = !DISubroutineType(types: !8315)
!8315 = !{null, !2633, !905}
!8316 = !{!8317, !8318}
!8317 = !DILocalVariable(name: "index", arg: 1, scope: !8313, file: !8194, line: 29, type: !2633)
!8318 = !DILocalVariable(name: "region_conf", arg: 2, scope: !8313, file: !8194, line: 30, type: !905)
!8319 = !DILocation(line: 0, scope: !8313)
!8320 = !DILocation(line: 33, column: 2, scope: !8313)
!8321 = !DILocation(line: 47, column: 28, scope: !8313)
!8322 = !DILocation(line: 47, column: 33, scope: !8313)
!8323 = !DILocation(line: 48, column: 26, scope: !8313)
!8324 = !DILocation(line: 47, column: 12, scope: !8313)
!8325 = !DILocation(line: 49, column: 32, scope: !8313)
!8326 = !DILocation(line: 49, column: 37, scope: !8313)
!8327 = !DILocation(line: 49, column: 12, scope: !8313)
!8328 = !DILocation(line: 53, column: 1, scope: !8313)
!8329 = distinct !DISubprogram(name: "set_region_number", scope: !8330, file: !8330, line: 32, type: !7475, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !886, retainedNodes: !8331)
!8330 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8331 = !{!8332}
!8332 = !DILocalVariable(name: "index", arg: 1, scope: !8329, file: !8330, line: 32, type: !137)
!8333 = !DILocation(line: 0, scope: !8329)
!8334 = !DILocation(line: 34, column: 11, scope: !8329)
!8335 = !DILocation(line: 35, column: 1, scope: !8329)
!8336 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !8194, file: !8194, line: 88, type: !8337, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !886, retainedNodes: !8339)
!8337 = !DISubroutineType(types: !8338)
!8338 = !{!137, !137}
!8339 = !{!8340}
!8340 = !DILocalVariable(name: "size", arg: 1, scope: !8336, file: !8194, line: 88, type: !137)
!8341 = !DILocation(line: 0, scope: !8336)
!8342 = !DILocation(line: 91, column: 11, scope: !8343)
!8343 = distinct !DILexicalBlock(scope: !8336, file: !8194, line: 91, column: 6)
!8344 = !DILocation(line: 91, column: 6, scope: !8336)
!8345 = !DILocation(line: 100, column: 11, scope: !8346)
!8346 = distinct !DILexicalBlock(scope: !8336, file: !8194, line: 100, column: 6)
!8347 = !DILocation(line: 100, column: 6, scope: !8336)
!8348 = !DILocation(line: 104, column: 35, scope: !8336)
!8349 = !DILocation(line: 104, column: 16, scope: !8336)
!8350 = !DILocation(line: 104, column: 50, scope: !8336)
!8351 = !DILocation(line: 104, column: 72, scope: !8336)
!8352 = !DILocation(line: 104, column: 2, scope: !8336)
!8353 = !DILocation(line: 106, column: 1, scope: !8336)
!8354 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !918, file: !918, line: 307, type: !8355, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !886, retainedNodes: !8357)
!8355 = !DISubroutineType(types: !8356)
!8356 = !{null, !8173, !240}
!8357 = !{!8358, !8359}
!8358 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !8354, file: !918, line: 308, type: !8173)
!8359 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8354, file: !918, line: 308, type: !240)
!8360 = !DILocation(line: 0, scope: !8354)
!8361 = !DILocation(line: 310, column: 6, scope: !8362)
!8362 = distinct !DILexicalBlock(scope: !8354, file: !918, line: 310, column: 6)
!8363 = !DILocation(line: 316, column: 1, scope: !8354)
!8364 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !8194, file: !8194, line: 249, type: !8365, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !886, retainedNodes: !8367)
!8365 = !DISubroutineType(types: !8366)
!8366 = !{!103, !8173, !240}
!8367 = !{!8368, !8369, !8370, !8371}
!8368 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !8364, file: !8194, line: 250, type: !8173)
!8369 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8364, file: !8194, line: 250, type: !240)
!8370 = !DILocalVariable(name: "mpu_reg_index", scope: !8364, file: !8194, line: 252, type: !103)
!8371 = !DILocalVariable(name: "i", scope: !8372, file: !8194, line: 264, type: !103)
!8372 = distinct !DILexicalBlock(scope: !8373, file: !8194, line: 264, column: 3)
!8373 = distinct !DILexicalBlock(scope: !8374, file: !8194, line: 261, column: 32)
!8374 = distinct !DILexicalBlock(scope: !8364, file: !8194, line: 261, column: 6)
!8375 = !DILocation(line: 0, scope: !8364)
!8376 = !DILocation(line: 252, column: 22, scope: !8364)
!8377 = !DILocation(line: 258, column: 18, scope: !8364)
!8378 = !DILocation(line: 261, column: 20, scope: !8374)
!8379 = !DILocation(line: 261, column: 6, scope: !8364)
!8380 = !DILocation(line: 0, scope: !8372)
!8381 = !DILocation(line: 265, column: 4, scope: !8382)
!8382 = distinct !DILexicalBlock(scope: !8383, file: !8194, line: 264, column: 59)
!8383 = distinct !DILexicalBlock(scope: !8372, file: !8194, line: 264, column: 3)
!8384 = !DILocation(line: 264, column: 55, scope: !8383)
!8385 = !DILocation(line: 264, column: 33, scope: !8383)
!8386 = !DILocation(line: 264, column: 3, scope: !8372)
!8387 = distinct !{!8387, !8386, !8388}
!8388 = !DILocation(line: 266, column: 3, scope: !8372)
!8389 = !DILocation(line: 269, column: 2, scope: !8364)
!8390 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !8391, file: !8391, line: 218, type: !7475, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !886, retainedNodes: !8392)
!8391 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8392 = !{!8393}
!8393 = !DILocalVariable(name: "rnr", arg: 1, scope: !8390, file: !8391, line: 218, type: !137)
!8394 = !DILocation(line: 0, scope: !8390)
!8395 = !DILocation(line: 220, column: 12, scope: !8390)
!8396 = !DILocation(line: 221, column: 13, scope: !8390)
!8397 = !DILocation(line: 222, column: 1, scope: !8390)
!8398 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !918, file: !918, line: 326, type: !8399, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !886, retainedNodes: !8401)
!8399 = !DISubroutineType(types: !8400)
!8400 = !{!103}
!8401 = !{!8402}
!8402 = !DILocalVariable(name: "r_index", scope: !8398, file: !918, line: 328, type: !137)
!8403 = !DILocation(line: 330, column: 17, scope: !8404)
!8404 = distinct !DILexicalBlock(scope: !8398, file: !918, line: 330, column: 6)
!8405 = !DILocation(line: 330, column: 29, scope: !8404)
!8406 = !DILocation(line: 330, column: 6, scope: !8398)
!8407 = !DILocation(line: 347, column: 2, scope: !8398)
!8408 = !DILocation(line: 0, scope: !8398)
!8409 = !DILocation(line: 364, column: 29, scope: !8410)
!8410 = distinct !DILexicalBlock(scope: !8411, file: !918, line: 364, column: 2)
!8411 = distinct !DILexicalBlock(scope: !8398, file: !918, line: 364, column: 2)
!8412 = !DILocation(line: 364, column: 2, scope: !8411)
!8413 = !DILocation(line: 365, column: 25, scope: !8414)
!8414 = distinct !DILexicalBlock(scope: !8410, file: !918, line: 364, column: 66)
!8415 = !DILocation(line: 365, column: 3, scope: !8414)
!8416 = !DILocation(line: 364, column: 62, scope: !8410)
!8417 = distinct !{!8417, !8412, !8418}
!8418 = !DILocation(line: 366, column: 2, scope: !8411)
!8419 = !DILocation(line: 369, column: 23, scope: !8398)
!8420 = !DILocation(line: 369, column: 21, scope: !8398)
!8421 = !DILocation(line: 372, column: 2, scope: !8398)
!8422 = !DILocation(line: 443, column: 2, scope: !8398)
!8423 = !DILocation(line: 444, column: 1, scope: !8398)
!8424 = distinct !DISubprogram(name: "strcpy", scope: !8425, file: !8425, line: 20, type: !8426, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3551, retainedNodes: !8430)
!8425 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8426 = !DISubroutineType(types: !8427)
!8427 = !{!2684, !8428, !8429}
!8428 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2684)
!8429 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !721)
!8430 = !{!8431, !8432, !8433}
!8431 = !DILocalVariable(name: "d", arg: 1, scope: !8424, file: !8425, line: 20, type: !8428)
!8432 = !DILocalVariable(name: "s", arg: 2, scope: !8424, file: !8425, line: 20, type: !8429)
!8433 = !DILocalVariable(name: "dest", scope: !8424, file: !8425, line: 22, type: !2684)
!8434 = !DILocation(line: 0, scope: !8424)
!8435 = !DILocation(line: 24, column: 9, scope: !8424)
!8436 = !DILocation(line: 24, column: 12, scope: !8424)
!8437 = !DILocation(line: 24, column: 2, scope: !8424)
!8438 = !DILocation(line: 25, column: 6, scope: !8439)
!8439 = distinct !DILexicalBlock(scope: !8424, file: !8425, line: 24, column: 21)
!8440 = !DILocation(line: 26, column: 4, scope: !8439)
!8441 = !DILocation(line: 27, column: 4, scope: !8439)
!8442 = distinct !{!8442, !8437, !8443}
!8443 = !DILocation(line: 28, column: 2, scope: !8424)
!8444 = !DILocation(line: 30, column: 5, scope: !8424)
!8445 = !DILocation(line: 32, column: 2, scope: !8424)
!8446 = distinct !DISubprogram(name: "strncpy", scope: !8425, file: !8425, line: 42, type: !8447, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3551, retainedNodes: !8449)
!8447 = !DISubroutineType(types: !8448)
!8448 = !{!2684, !8428, !8429, !120}
!8449 = !{!8450, !8451, !8452, !8453}
!8450 = !DILocalVariable(name: "d", arg: 1, scope: !8446, file: !8425, line: 42, type: !8428)
!8451 = !DILocalVariable(name: "s", arg: 2, scope: !8446, file: !8425, line: 42, type: !8429)
!8452 = !DILocalVariable(name: "n", arg: 3, scope: !8446, file: !8425, line: 42, type: !120)
!8453 = !DILocalVariable(name: "dest", scope: !8446, file: !8425, line: 44, type: !2684)
!8454 = !DILocation(line: 0, scope: !8446)
!8455 = !DILocation(line: 46, column: 12, scope: !8446)
!8456 = !DILocation(line: 46, column: 17, scope: !8446)
!8457 = !DILocation(line: 46, column: 20, scope: !8446)
!8458 = !DILocation(line: 46, column: 23, scope: !8446)
!8459 = !DILocation(line: 46, column: 2, scope: !8446)
!8460 = !DILocation(line: 47, column: 6, scope: !8461)
!8461 = distinct !DILexicalBlock(scope: !8446, file: !8425, line: 46, column: 32)
!8462 = !DILocation(line: 48, column: 4, scope: !8461)
!8463 = !DILocation(line: 49, column: 4, scope: !8461)
!8464 = !DILocation(line: 50, column: 4, scope: !8461)
!8465 = distinct !{!8465, !8459, !8466}
!8466 = !DILocation(line: 51, column: 2, scope: !8446)
!8467 = !DILocation(line: 54, column: 6, scope: !8468)
!8468 = distinct !DILexicalBlock(scope: !8446, file: !8425, line: 53, column: 16)
!8469 = !DILocation(line: 55, column: 4, scope: !8468)
!8470 = !DILocation(line: 56, column: 4, scope: !8468)
!8471 = !DILocation(line: 53, column: 11, scope: !8446)
!8472 = !DILocation(line: 53, column: 2, scope: !8446)
!8473 = distinct !{!8473, !8472, !8474}
!8474 = !DILocation(line: 57, column: 2, scope: !8446)
!8475 = !DILocation(line: 59, column: 2, scope: !8446)
!8476 = distinct !DISubprogram(name: "strchr", scope: !8425, file: !8425, line: 69, type: !8477, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3551, retainedNodes: !8479)
!8477 = !DISubroutineType(types: !8478)
!8478 = !{!2684, !721, !103}
!8479 = !{!8480, !8481, !8482}
!8480 = !DILocalVariable(name: "s", arg: 1, scope: !8476, file: !8425, line: 69, type: !721)
!8481 = !DILocalVariable(name: "c", arg: 2, scope: !8476, file: !8425, line: 69, type: !103)
!8482 = !DILocalVariable(name: "tmp", scope: !8476, file: !8425, line: 71, type: !109)
!8483 = !DILocation(line: 0, scope: !8476)
!8484 = !DILocation(line: 73, column: 2, scope: !8476)
!8485 = !DILocation(line: 73, column: 10, scope: !8476)
!8486 = !DILocation(line: 73, column: 13, scope: !8476)
!8487 = !DILocation(line: 73, column: 21, scope: !8476)
!8488 = !DILocation(line: 74, column: 4, scope: !8489)
!8489 = distinct !DILexicalBlock(scope: !8476, file: !8425, line: 73, column: 38)
!8490 = distinct !{!8490, !8484, !8491}
!8491 = !DILocation(line: 75, column: 2, scope: !8476)
!8492 = !DILocation(line: 77, column: 9, scope: !8476)
!8493 = !DILocation(line: 77, column: 2, scope: !8476)
!8494 = distinct !DISubprogram(name: "strrchr", scope: !8425, file: !8425, line: 87, type: !8477, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3551, retainedNodes: !8495)
!8495 = !{!8496, !8497, !8498}
!8496 = !DILocalVariable(name: "s", arg: 1, scope: !8494, file: !8425, line: 87, type: !721)
!8497 = !DILocalVariable(name: "c", arg: 2, scope: !8494, file: !8425, line: 87, type: !103)
!8498 = !DILocalVariable(name: "match", scope: !8494, file: !8425, line: 89, type: !2684)
!8499 = !DILocation(line: 0, scope: !8494)
!8500 = !DILocation(line: 91, column: 2, scope: !8494)
!8501 = !DILocation(line: 92, column: 7, scope: !8502)
!8502 = distinct !DILexicalBlock(scope: !8503, file: !8425, line: 92, column: 7)
!8503 = distinct !DILexicalBlock(scope: !8494, file: !8425, line: 91, column: 5)
!8504 = !DILocation(line: 92, column: 10, scope: !8502)
!8505 = !DILocation(line: 92, column: 7, scope: !8503)
!8506 = !DILocation(line: 95, column: 13, scope: !8494)
!8507 = !DILocation(line: 95, column: 2, scope: !8503)
!8508 = distinct !{!8508, !8500, !8509}
!8509 = !DILocation(line: 95, column: 15, scope: !8494)
!8510 = !DILocation(line: 97, column: 2, scope: !8494)
!8511 = distinct !DISubprogram(name: "strlen", scope: !8425, file: !8425, line: 107, type: !8512, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3551, retainedNodes: !8514)
!8512 = !DISubroutineType(types: !8513)
!8513 = !{!120, !721}
!8514 = !{!8515, !8516}
!8515 = !DILocalVariable(name: "s", arg: 1, scope: !8511, file: !8425, line: 107, type: !721)
!8516 = !DILocalVariable(name: "n", scope: !8511, file: !8425, line: 109, type: !120)
!8517 = !DILocation(line: 0, scope: !8511)
!8518 = !DILocation(line: 111, column: 9, scope: !8511)
!8519 = !DILocation(line: 111, column: 12, scope: !8511)
!8520 = !DILocation(line: 111, column: 2, scope: !8511)
!8521 = !DILocation(line: 112, column: 4, scope: !8522)
!8522 = distinct !DILexicalBlock(scope: !8511, file: !8425, line: 111, column: 21)
!8523 = !DILocation(line: 113, column: 4, scope: !8522)
!8524 = distinct !{!8524, !8520, !8525}
!8525 = !DILocation(line: 114, column: 2, scope: !8511)
!8526 = !DILocation(line: 116, column: 2, scope: !8511)
!8527 = distinct !DISubprogram(name: "strnlen", scope: !8425, file: !8425, line: 126, type: !8528, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3551, retainedNodes: !8530)
!8528 = !DISubroutineType(types: !8529)
!8529 = !{!120, !721, !120}
!8530 = !{!8531, !8532, !8533}
!8531 = !DILocalVariable(name: "s", arg: 1, scope: !8527, file: !8425, line: 126, type: !721)
!8532 = !DILocalVariable(name: "maxlen", arg: 2, scope: !8527, file: !8425, line: 126, type: !120)
!8533 = !DILocalVariable(name: "n", scope: !8527, file: !8425, line: 128, type: !120)
!8534 = !DILocation(line: 0, scope: !8527)
!8535 = !DILocation(line: 130, column: 9, scope: !8527)
!8536 = !DILocation(line: 130, column: 12, scope: !8527)
!8537 = !DILocation(line: 130, column: 20, scope: !8527)
!8538 = !DILocation(line: 130, column: 2, scope: !8527)
!8539 = !DILocation(line: 131, column: 4, scope: !8540)
!8540 = distinct !DILexicalBlock(scope: !8527, file: !8425, line: 130, column: 35)
!8541 = !DILocation(line: 132, column: 4, scope: !8540)
!8542 = distinct !{!8542, !8538, !8543}
!8543 = !DILocation(line: 133, column: 2, scope: !8527)
!8544 = !DILocation(line: 135, column: 2, scope: !8527)
!8545 = distinct !DISubprogram(name: "strcmp", scope: !8425, file: !8425, line: 145, type: !8546, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3551, retainedNodes: !8548)
!8546 = !DISubroutineType(types: !8547)
!8547 = !{!103, !721, !721}
!8548 = !{!8549, !8550}
!8549 = !DILocalVariable(name: "s1", arg: 1, scope: !8545, file: !8425, line: 145, type: !721)
!8550 = !DILocalVariable(name: "s2", arg: 2, scope: !8545, file: !8425, line: 145, type: !721)
!8551 = !DILocation(line: 0, scope: !8545)
!8552 = !DILocation(line: 147, column: 10, scope: !8545)
!8553 = !DILocation(line: 147, column: 17, scope: !8545)
!8554 = !DILocation(line: 147, column: 14, scope: !8545)
!8555 = !DILocation(line: 147, column: 22, scope: !8545)
!8556 = !DILocation(line: 148, column: 5, scope: !8557)
!8557 = distinct !DILexicalBlock(scope: !8545, file: !8425, line: 147, column: 40)
!8558 = !DILocation(line: 149, column: 5, scope: !8557)
!8559 = distinct !{!8559, !8560, !8561}
!8560 = !DILocation(line: 147, column: 2, scope: !8545)
!8561 = !DILocation(line: 150, column: 2, scope: !8545)
!8562 = !DILocation(line: 152, column: 9, scope: !8545)
!8563 = !DILocation(line: 152, column: 15, scope: !8545)
!8564 = !DILocation(line: 152, column: 13, scope: !8545)
!8565 = !DILocation(line: 152, column: 2, scope: !8545)
!8566 = distinct !DISubprogram(name: "strncmp", scope: !8425, file: !8425, line: 162, type: !8567, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3551, retainedNodes: !8569)
!8567 = !DISubroutineType(types: !8568)
!8568 = !{!103, !721, !721, !120}
!8569 = !{!8570, !8571, !8572}
!8570 = !DILocalVariable(name: "s1", arg: 1, scope: !8566, file: !8425, line: 162, type: !721)
!8571 = !DILocalVariable(name: "s2", arg: 2, scope: !8566, file: !8425, line: 162, type: !721)
!8572 = !DILocalVariable(name: "n", arg: 3, scope: !8566, file: !8425, line: 162, type: !120)
!8573 = !DILocation(line: 0, scope: !8566)
!8574 = !DILocation(line: 164, column: 17, scope: !8566)
!8575 = !DILocation(line: 164, column: 21, scope: !8566)
!8576 = !DILocation(line: 164, column: 28, scope: !8566)
!8577 = !DILocation(line: 164, column: 25, scope: !8566)
!8578 = !DILocation(line: 164, column: 33, scope: !8566)
!8579 = !DILocation(line: 165, column: 5, scope: !8580)
!8580 = distinct !DILexicalBlock(scope: !8566, file: !8425, line: 164, column: 51)
!8581 = !DILocation(line: 166, column: 5, scope: !8580)
!8582 = !DILocation(line: 167, column: 4, scope: !8580)
!8583 = distinct !{!8583, !8584, !8585}
!8584 = !DILocation(line: 164, column: 2, scope: !8566)
!8585 = !DILocation(line: 168, column: 2, scope: !8566)
!8586 = !DILocation(line: 170, column: 25, scope: !8566)
!8587 = !DILocation(line: 170, column: 31, scope: !8566)
!8588 = !DILocation(line: 170, column: 29, scope: !8566)
!8589 = !DILocation(line: 170, column: 9, scope: !8566)
!8590 = !DILocation(line: 170, column: 2, scope: !8566)
!8591 = distinct !DISubprogram(name: "strtok_r", scope: !8425, file: !8425, line: 180, type: !8592, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3551, retainedNodes: !8595)
!8592 = !DISubroutineType(types: !8593)
!8593 = !{!2684, !2684, !721, !8594}
!8594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2684, size: 32)
!8595 = !{!8596, !8597, !8598, !8599, !8600}
!8596 = !DILocalVariable(name: "str", arg: 1, scope: !8591, file: !8425, line: 180, type: !2684)
!8597 = !DILocalVariable(name: "sep", arg: 2, scope: !8591, file: !8425, line: 180, type: !721)
!8598 = !DILocalVariable(name: "state", arg: 3, scope: !8591, file: !8425, line: 180, type: !8594)
!8599 = !DILocalVariable(name: "start", scope: !8591, file: !8425, line: 182, type: !2684)
!8600 = !DILocalVariable(name: "end", scope: !8591, file: !8425, line: 182, type: !2684)
!8601 = !DILocation(line: 0, scope: !8591)
!8602 = !DILocation(line: 184, column: 10, scope: !8591)
!8603 = !DILocation(line: 184, column: 22, scope: !8591)
!8604 = !DILocation(line: 187, column: 9, scope: !8591)
!8605 = !DILocation(line: 187, column: 16, scope: !8591)
!8606 = !DILocation(line: 187, column: 19, scope: !8591)
!8607 = !DILocation(line: 187, column: 2, scope: !8591)
!8608 = !DILocation(line: 188, column: 8, scope: !8609)
!8609 = distinct !DILexicalBlock(scope: !8591, file: !8425, line: 187, column: 40)
!8610 = distinct !{!8610, !8607, !8611}
!8611 = !DILocation(line: 189, column: 2, scope: !8591)
!8612 = !DILocation(line: 198, column: 9, scope: !8591)
!8613 = !DILocation(line: 198, column: 18, scope: !8591)
!8614 = !DILocation(line: 198, column: 17, scope: !8591)
!8615 = !DILocation(line: 198, column: 2, scope: !8591)
!8616 = !DILocation(line: 199, column: 6, scope: !8617)
!8617 = distinct !DILexicalBlock(scope: !8591, file: !8425, line: 198, column: 37)
!8618 = !DILocation(line: 198, column: 14, scope: !8591)
!8619 = distinct !{!8619, !8615, !8620}
!8620 = !DILocation(line: 200, column: 2, scope: !8591)
!8621 = !DILocation(line: 203, column: 8, scope: !8622)
!8622 = distinct !DILexicalBlock(scope: !8623, file: !8425, line: 202, column: 20)
!8623 = distinct !DILexicalBlock(scope: !8591, file: !8425, line: 202, column: 6)
!8624 = !DILocation(line: 204, column: 16, scope: !8622)
!8625 = !DILocation(line: 205, column: 2, scope: !8622)
!8626 = !DILocation(line: 210, column: 1, scope: !8591)
!8627 = distinct !DISubprogram(name: "strcat", scope: !8425, file: !8425, line: 212, type: !8426, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3551, retainedNodes: !8628)
!8628 = !{!8629, !8630}
!8629 = !DILocalVariable(name: "dest", arg: 1, scope: !8627, file: !8425, line: 212, type: !8428)
!8630 = !DILocalVariable(name: "src", arg: 2, scope: !8627, file: !8425, line: 212, type: !8429)
!8631 = !DILocation(line: 0, scope: !8627)
!8632 = !DILocation(line: 214, column: 16, scope: !8627)
!8633 = !DILocation(line: 214, column: 14, scope: !8627)
!8634 = !DILocation(line: 214, column: 2, scope: !8627)
!8635 = !DILocation(line: 215, column: 2, scope: !8627)
!8636 = distinct !DISubprogram(name: "strncat", scope: !8425, file: !8425, line: 218, type: !8447, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3551, retainedNodes: !8637)
!8637 = !{!8638, !8639, !8640, !8641, !8642}
!8638 = !DILocalVariable(name: "dest", arg: 1, scope: !8636, file: !8425, line: 218, type: !8428)
!8639 = !DILocalVariable(name: "src", arg: 2, scope: !8636, file: !8425, line: 218, type: !8429)
!8640 = !DILocalVariable(name: "n", arg: 3, scope: !8636, file: !8425, line: 219, type: !120)
!8641 = !DILocalVariable(name: "orig_dest", scope: !8636, file: !8425, line: 221, type: !2684)
!8642 = !DILocalVariable(name: "len", scope: !8636, file: !8425, line: 222, type: !120)
!8643 = !DILocation(line: 0, scope: !8636)
!8644 = !DILocation(line: 222, column: 15, scope: !8636)
!8645 = !DILocation(line: 224, column: 7, scope: !8636)
!8646 = !DILocation(line: 225, column: 14, scope: !8636)
!8647 = !DILocation(line: 225, column: 19, scope: !8636)
!8648 = !DILocation(line: 225, column: 11, scope: !8636)
!8649 = !DILocation(line: 225, column: 23, scope: !8636)
!8650 = !DILocation(line: 225, column: 28, scope: !8636)
!8651 = !DILocation(line: 225, column: 2, scope: !8636)
!8652 = !DILocation(line: 226, column: 17, scope: !8653)
!8653 = distinct !DILexicalBlock(scope: !8636, file: !8425, line: 225, column: 38)
!8654 = !DILocation(line: 226, column: 8, scope: !8653)
!8655 = !DILocation(line: 226, column: 11, scope: !8653)
!8656 = distinct !{!8656, !8651, !8657}
!8657 = !DILocation(line: 227, column: 2, scope: !8636)
!8658 = !DILocation(line: 228, column: 8, scope: !8636)
!8659 = !DILocation(line: 230, column: 2, scope: !8636)
!8660 = distinct !DISubprogram(name: "memcmp", scope: !8425, file: !8425, line: 239, type: !8661, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3551, retainedNodes: !8663)
!8661 = !DISubroutineType(types: !8662)
!8662 = !{!103, !13, !13, !120}
!8663 = !{!8664, !8665, !8666, !8667, !8668}
!8664 = !DILocalVariable(name: "m1", arg: 1, scope: !8660, file: !8425, line: 239, type: !13)
!8665 = !DILocalVariable(name: "m2", arg: 2, scope: !8660, file: !8425, line: 239, type: !13)
!8666 = !DILocalVariable(name: "n", arg: 3, scope: !8660, file: !8425, line: 239, type: !120)
!8667 = !DILocalVariable(name: "c1", scope: !8660, file: !8425, line: 241, type: !721)
!8668 = !DILocalVariable(name: "c2", scope: !8660, file: !8425, line: 242, type: !721)
!8669 = !DILocation(line: 0, scope: !8660)
!8670 = !DILocation(line: 244, column: 7, scope: !8671)
!8671 = distinct !DILexicalBlock(scope: !8660, file: !8425, line: 244, column: 6)
!8672 = !DILocation(line: 244, column: 6, scope: !8660)
!8673 = !DILocation(line: 248, column: 10, scope: !8660)
!8674 = !DILocation(line: 248, column: 14, scope: !8660)
!8675 = !DILocation(line: 248, column: 19, scope: !8660)
!8676 = !DILocation(line: 248, column: 2, scope: !8660)
!8677 = !DILocation(line: 248, column: 23, scope: !8660)
!8678 = !DILocation(line: 248, column: 30, scope: !8660)
!8679 = !DILocation(line: 248, column: 27, scope: !8660)
!8680 = !DILocation(line: 249, column: 5, scope: !8681)
!8681 = distinct !DILexicalBlock(scope: !8660, file: !8425, line: 248, column: 36)
!8682 = !DILocation(line: 250, column: 5, scope: !8681)
!8683 = distinct !{!8683, !8676, !8684}
!8684 = !DILocation(line: 251, column: 2, scope: !8660)
!8685 = !DILocation(line: 253, column: 9, scope: !8660)
!8686 = !DILocation(line: 253, column: 15, scope: !8660)
!8687 = !DILocation(line: 253, column: 13, scope: !8660)
!8688 = !DILocation(line: 253, column: 2, scope: !8660)
!8689 = !DILocation(line: 254, column: 1, scope: !8660)
!8690 = distinct !DISubprogram(name: "memmove", scope: !8425, file: !8425, line: 263, type: !8691, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3551, retainedNodes: !8693)
!8691 = !DISubroutineType(types: !8692)
!8692 = !{!102, !102, !13, !120}
!8693 = !{!8694, !8695, !8696, !8697, !8698}
!8694 = !DILocalVariable(name: "d", arg: 1, scope: !8690, file: !8425, line: 263, type: !102)
!8695 = !DILocalVariable(name: "s", arg: 2, scope: !8690, file: !8425, line: 263, type: !13)
!8696 = !DILocalVariable(name: "n", arg: 3, scope: !8690, file: !8425, line: 263, type: !120)
!8697 = !DILocalVariable(name: "dest", scope: !8690, file: !8425, line: 265, type: !2684)
!8698 = !DILocalVariable(name: "src", scope: !8690, file: !8425, line: 266, type: !721)
!8699 = !DILocation(line: 0, scope: !8690)
!8700 = !DILocation(line: 268, column: 21, scope: !8701)
!8701 = distinct !DILexicalBlock(scope: !8690, file: !8425, line: 268, column: 6)
!8702 = !DILocation(line: 268, column: 28, scope: !8701)
!8703 = !DILocation(line: 268, column: 6, scope: !8690)
!8704 = !DILocation(line: 280, column: 12, scope: !8705)
!8705 = distinct !DILexicalBlock(scope: !8701, file: !8425, line: 278, column: 9)
!8706 = !DILocation(line: 280, column: 3, scope: !8705)
!8707 = !DILocation(line: 275, column: 5, scope: !8708)
!8708 = distinct !DILexicalBlock(scope: !8709, file: !8425, line: 274, column: 17)
!8709 = distinct !DILexicalBlock(scope: !8701, file: !8425, line: 268, column: 33)
!8710 = !DILocation(line: 276, column: 14, scope: !8708)
!8711 = !DILocation(line: 276, column: 4, scope: !8708)
!8712 = !DILocation(line: 276, column: 12, scope: !8708)
!8713 = !DILocation(line: 274, column: 12, scope: !8709)
!8714 = !DILocation(line: 274, column: 3, scope: !8709)
!8715 = distinct !{!8715, !8714, !8716}
!8716 = !DILocation(line: 277, column: 3, scope: !8709)
!8717 = !DILocation(line: 281, column: 12, scope: !8718)
!8718 = distinct !DILexicalBlock(scope: !8705, file: !8425, line: 280, column: 17)
!8719 = !DILocation(line: 281, column: 10, scope: !8718)
!8720 = !DILocation(line: 282, column: 8, scope: !8718)
!8721 = !DILocation(line: 283, column: 7, scope: !8718)
!8722 = !DILocation(line: 284, column: 5, scope: !8718)
!8723 = distinct !{!8723, !8706, !8724}
!8724 = !DILocation(line: 285, column: 3, scope: !8705)
!8725 = !DILocation(line: 288, column: 2, scope: !8690)
!8726 = distinct !DISubprogram(name: "memcpy", scope: !8425, file: !8425, line: 298, type: !8727, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3551, retainedNodes: !8731)
!8727 = !DISubroutineType(types: !8728)
!8728 = !{!102, !8729, !8730, !120}
!8729 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!8730 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!8731 = !{!8732, !8733, !8734, !8735, !8736}
!8732 = !DILocalVariable(name: "d", arg: 1, scope: !8726, file: !8425, line: 298, type: !8729)
!8733 = !DILocalVariable(name: "s", arg: 2, scope: !8726, file: !8425, line: 298, type: !8730)
!8734 = !DILocalVariable(name: "n", arg: 3, scope: !8726, file: !8425, line: 298, type: !120)
!8735 = !DILocalVariable(name: "d_byte", scope: !8726, file: !8425, line: 302, type: !1530)
!8736 = !DILocalVariable(name: "s_byte", scope: !8726, file: !8425, line: 303, type: !3554)
!8737 = !DILocation(line: 0, scope: !8726)
!8738 = !DILocation(line: 337, column: 11, scope: !8726)
!8739 = !DILocation(line: 337, column: 2, scope: !8726)
!8740 = !DILocation(line: 338, column: 25, scope: !8741)
!8741 = distinct !DILexicalBlock(scope: !8726, file: !8425, line: 337, column: 16)
!8742 = !DILocation(line: 338, column: 17, scope: !8741)
!8743 = !DILocation(line: 338, column: 11, scope: !8741)
!8744 = !DILocation(line: 338, column: 15, scope: !8741)
!8745 = !DILocation(line: 339, column: 4, scope: !8741)
!8746 = distinct !{!8746, !8739, !8747}
!8747 = !DILocation(line: 340, column: 2, scope: !8726)
!8748 = !DILocation(line: 342, column: 2, scope: !8726)
!8749 = distinct !DISubprogram(name: "memset", scope: !8425, file: !8425, line: 352, type: !8750, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3551, retainedNodes: !8752)
!8750 = !DISubroutineType(types: !8751)
!8751 = !{!102, !102, !103, !120}
!8752 = !{!8753, !8754, !8755, !8756, !8757}
!8753 = !DILocalVariable(name: "buf", arg: 1, scope: !8749, file: !8425, line: 352, type: !102)
!8754 = !DILocalVariable(name: "c", arg: 2, scope: !8749, file: !8425, line: 352, type: !103)
!8755 = !DILocalVariable(name: "n", arg: 3, scope: !8749, file: !8425, line: 352, type: !120)
!8756 = !DILocalVariable(name: "d_byte", scope: !8749, file: !8425, line: 356, type: !1530)
!8757 = !DILocalVariable(name: "c_byte", scope: !8749, file: !8425, line: 357, type: !241)
!8758 = !DILocation(line: 0, scope: !8749)
!8759 = !DILocation(line: 357, column: 25, scope: !8749)
!8760 = !DILocation(line: 389, column: 11, scope: !8749)
!8761 = !DILocation(line: 389, column: 2, scope: !8749)
!8762 = !DILocation(line: 390, column: 11, scope: !8763)
!8763 = distinct !DILexicalBlock(scope: !8749, file: !8425, line: 389, column: 16)
!8764 = !DILocation(line: 390, column: 15, scope: !8763)
!8765 = !DILocation(line: 391, column: 4, scope: !8763)
!8766 = distinct !{!8766, !8761, !8767}
!8767 = !DILocation(line: 392, column: 2, scope: !8749)
!8768 = !DILocation(line: 394, column: 2, scope: !8749)
!8769 = distinct !DISubprogram(name: "memchr", scope: !8425, file: !8425, line: 404, type: !8770, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3551, retainedNodes: !8772)
!8770 = !DISubroutineType(types: !8771)
!8771 = !{!102, !13, !103, !120}
!8772 = !{!8773, !8774, !8775, !8776}
!8773 = !DILocalVariable(name: "s", arg: 1, scope: !8769, file: !8425, line: 404, type: !13)
!8774 = !DILocalVariable(name: "c", arg: 2, scope: !8769, file: !8425, line: 404, type: !103)
!8775 = !DILocalVariable(name: "n", arg: 3, scope: !8769, file: !8425, line: 404, type: !120)
!8776 = !DILocalVariable(name: "p", scope: !8777, file: !8425, line: 407, type: !3554)
!8777 = distinct !DILexicalBlock(scope: !8778, file: !8425, line: 406, column: 14)
!8778 = distinct !DILexicalBlock(scope: !8769, file: !8425, line: 406, column: 6)
!8779 = !DILocation(line: 0, scope: !8769)
!8780 = !DILocation(line: 406, column: 8, scope: !8778)
!8781 = !DILocation(line: 406, column: 6, scope: !8769)
!8782 = !DILocation(line: 409, column: 3, scope: !8777)
!8783 = !DILocation(line: 0, scope: !8777)
!8784 = !DILocation(line: 410, column: 8, scope: !8785)
!8785 = distinct !DILexicalBlock(scope: !8786, file: !8425, line: 410, column: 8)
!8786 = distinct !DILexicalBlock(scope: !8777, file: !8425, line: 409, column: 6)
!8787 = !DILocation(line: 410, column: 13, scope: !8785)
!8788 = !DILocation(line: 410, column: 8, scope: !8786)
!8789 = distinct !{!8789, !8782, !8790}
!8790 = !DILocation(line: 414, column: 20, scope: !8777)
!8791 = !DILocation(line: 417, column: 2, scope: !8769)
!8792 = !DILocation(line: 418, column: 1, scope: !8769)
!8793 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !928, file: !928, line: 23, type: !3746, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !921, retainedNodes: !8794)
!8794 = !{!8795}
!8795 = !DILocalVariable(name: "hook", arg: 1, scope: !8793, file: !928, line: 23, type: !128)
!8796 = !DILocation(line: 0, scope: !8793)
!8797 = !DILocation(line: 25, column: 15, scope: !8793)
!8798 = !DILocation(line: 26, column: 1, scope: !8793)
!8799 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !928, file: !928, line: 14, type: !129, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !921, retainedNodes: !8800)
!8800 = !{!8801}
!8801 = !DILocalVariable(name: "c", arg: 1, scope: !8799, file: !928, line: 14, type: !103)
!8802 = !DILocation(line: 0, scope: !8799)
!8803 = !DILocation(line: 18, column: 2, scope: !8799)
!8804 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !928, file: !928, line: 28, type: !8805, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !921, retainedNodes: !8807)
!8805 = !DISubroutineType(types: !8806)
!8806 = !{!103, !103, !924}
!8807 = !{!8808, !8809}
!8808 = !DILocalVariable(name: "c", arg: 1, scope: !8804, file: !928, line: 28, type: !103)
!8809 = !DILocalVariable(name: "stream", arg: 2, scope: !8804, file: !928, line: 28, type: !924)
!8810 = !DILocation(line: 0, scope: !8804)
!8811 = !DILocation(line: 30, column: 27, scope: !8804)
!8812 = !DILocation(line: 30, column: 50, scope: !8804)
!8813 = !DILocation(line: 30, column: 9, scope: !8804)
!8814 = !DILocation(line: 30, column: 2, scope: !8804)
!8815 = distinct !DISubprogram(name: "fputc", scope: !928, file: !928, line: 41, type: !8805, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !921, retainedNodes: !8816)
!8816 = !{!8817, !8818}
!8817 = !DILocalVariable(name: "c", arg: 1, scope: !8815, file: !928, line: 41, type: !103)
!8818 = !DILocalVariable(name: "stream", arg: 2, scope: !8815, file: !928, line: 41, type: !924)
!8819 = !DILocation(line: 0, scope: !8815)
!8820 = !DILocation(line: 43, column: 9, scope: !8815)
!8821 = !DILocation(line: 43, column: 2, scope: !8815)
!8822 = distinct !DISubprogram(name: "zephyr_fputc", scope: !8823, file: !8823, line: 72, type: !8805, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !921, retainedNodes: !8824)
!8823 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/basic/sys_heap")
!8824 = !{!8825, !8826}
!8825 = !DILocalVariable(name: "c", arg: 1, scope: !8822, file: !8823, line: 72, type: !103)
!8826 = !DILocalVariable(name: "stream", arg: 2, scope: !8822, file: !8823, line: 72, type: !924)
!8827 = !DILocation(line: 0, scope: !8822)
!8828 = !DILocation(line: 81, column: 2, scope: !8829)
!8829 = distinct !DILexicalBlock(scope: !8822, file: !8823, line: 81, column: 2)
!8830 = !{i64 2152706386}
!8831 = !DILocation(line: 82, column: 9, scope: !8822)
!8832 = !DILocation(line: 82, column: 2, scope: !8822)
!8833 = distinct !DISubprogram(name: "fputs", scope: !928, file: !928, line: 46, type: !8834, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !921, retainedNodes: !8837)
!8834 = !DISubroutineType(types: !8835)
!8835 = !{!103, !8429, !8836}
!8836 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !924)
!8837 = !{!8838, !8839, !8840, !8841}
!8838 = !DILocalVariable(name: "s", arg: 1, scope: !8833, file: !928, line: 46, type: !8429)
!8839 = !DILocalVariable(name: "stream", arg: 2, scope: !8833, file: !928, line: 46, type: !8836)
!8840 = !DILocalVariable(name: "len", scope: !8833, file: !928, line: 48, type: !103)
!8841 = !DILocalVariable(name: "ret", scope: !8833, file: !928, line: 49, type: !103)
!8842 = !DILocation(line: 0, scope: !8833)
!8843 = !DILocation(line: 48, column: 12, scope: !8833)
!8844 = !DILocation(line: 51, column: 8, scope: !8833)
!8845 = !DILocation(line: 53, column: 13, scope: !8833)
!8846 = !DILocation(line: 53, column: 9, scope: !8833)
!8847 = !DILocation(line: 53, column: 2, scope: !8833)
!8848 = distinct !DISubprogram(name: "fwrite", scope: !928, file: !928, line: 99, type: !8849, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !921, retainedNodes: !8851)
!8849 = !DISubroutineType(types: !8850)
!8850 = !{!120, !8730, !120, !120, !8836}
!8851 = !{!8852, !8853, !8854, !8855}
!8852 = !DILocalVariable(name: "ptr", arg: 1, scope: !8848, file: !928, line: 99, type: !8730)
!8853 = !DILocalVariable(name: "size", arg: 2, scope: !8848, file: !928, line: 99, type: !120)
!8854 = !DILocalVariable(name: "nitems", arg: 3, scope: !8848, file: !928, line: 99, type: !120)
!8855 = !DILocalVariable(name: "stream", arg: 4, scope: !8848, file: !928, line: 100, type: !8836)
!8856 = !DILocation(line: 0, scope: !8848)
!8857 = !DILocation(line: 102, column: 9, scope: !8848)
!8858 = !DILocation(line: 102, column: 2, scope: !8848)
!8859 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !8823, file: !8823, line: 96, type: !8849, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !921, retainedNodes: !8860)
!8860 = !{!8861, !8862, !8863, !8864}
!8861 = !DILocalVariable(name: "ptr", arg: 1, scope: !8859, file: !8823, line: 96, type: !8730)
!8862 = !DILocalVariable(name: "size", arg: 2, scope: !8859, file: !8823, line: 96, type: !120)
!8863 = !DILocalVariable(name: "nitems", arg: 3, scope: !8859, file: !8823, line: 96, type: !120)
!8864 = !DILocalVariable(name: "stream", arg: 4, scope: !8859, file: !8823, line: 96, type: !8836)
!8865 = !DILocation(line: 0, scope: !8859)
!8866 = !DILocation(line: 107, column: 2, scope: !8867)
!8867 = distinct !DILexicalBlock(scope: !8859, file: !8823, line: 107, column: 2)
!8868 = !{i64 2152706490}
!8869 = !DILocation(line: 108, column: 9, scope: !8859)
!8870 = !DILocation(line: 108, column: 2, scope: !8859)
!8871 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !928, file: !928, line: 56, type: !8849, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !921, retainedNodes: !8872)
!8872 = !{!8873, !8874, !8875, !8876, !8877, !8878, !8879, !8880}
!8873 = !DILocalVariable(name: "ptr", arg: 1, scope: !8871, file: !928, line: 56, type: !8730)
!8874 = !DILocalVariable(name: "size", arg: 2, scope: !8871, file: !928, line: 56, type: !120)
!8875 = !DILocalVariable(name: "nitems", arg: 3, scope: !8871, file: !928, line: 57, type: !120)
!8876 = !DILocalVariable(name: "stream", arg: 4, scope: !8871, file: !928, line: 57, type: !8836)
!8877 = !DILocalVariable(name: "i", scope: !8871, file: !928, line: 59, type: !120)
!8878 = !DILocalVariable(name: "j", scope: !8871, file: !928, line: 60, type: !120)
!8879 = !DILocalVariable(name: "p", scope: !8871, file: !928, line: 61, type: !3554)
!8880 = !DILabel(scope: !8871, name: "done", file: !928, line: 82)
!8881 = !DILocation(line: 0, scope: !8871)
!8882 = !DILocation(line: 63, column: 14, scope: !8883)
!8883 = distinct !DILexicalBlock(scope: !8871, file: !928, line: 63, column: 6)
!8884 = !DILocation(line: 63, column: 24, scope: !8883)
!8885 = !DILocation(line: 72, column: 3, scope: !8886)
!8886 = distinct !DILexicalBlock(scope: !8871, file: !928, line: 70, column: 5)
!8887 = !DILocation(line: 0, scope: !8886)
!8888 = !DILocation(line: 73, column: 8, scope: !8889)
!8889 = distinct !DILexicalBlock(scope: !8890, file: !928, line: 73, column: 8)
!8890 = distinct !DILexicalBlock(scope: !8886, file: !928, line: 72, column: 6)
!8891 = !DILocation(line: 73, column: 29, scope: !8889)
!8892 = !DILocation(line: 73, column: 27, scope: !8889)
!8893 = !DILocation(line: 73, column: 21, scope: !8889)
!8894 = !DILocation(line: 73, column: 33, scope: !8889)
!8895 = !DILocation(line: 73, column: 8, scope: !8890)
!8896 = !DILocation(line: 76, column: 5, scope: !8890)
!8897 = !DILocation(line: 77, column: 14, scope: !8886)
!8898 = !DILocation(line: 77, column: 3, scope: !8890)
!8899 = distinct !{!8899, !8885, !8900}
!8900 = !DILocation(line: 77, column: 17, scope: !8886)
!8901 = !DILocation(line: 79, column: 4, scope: !8886)
!8902 = !DILocation(line: 80, column: 13, scope: !8871)
!8903 = !DILocation(line: 80, column: 2, scope: !8886)
!8904 = distinct !{!8904, !8905, !8906}
!8905 = !DILocation(line: 70, column: 2, scope: !8871)
!8906 = !DILocation(line: 80, column: 16, scope: !8871)
!8907 = !DILocation(line: 82, column: 1, scope: !8871)
!8908 = !DILocation(line: 83, column: 17, scope: !8871)
!8909 = !DILocation(line: 83, column: 2, scope: !8871)
!8910 = !DILocation(line: 84, column: 1, scope: !8871)
!8911 = distinct !DISubprogram(name: "puts", scope: !928, file: !928, line: 106, type: !8912, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !921, retainedNodes: !8914)
!8912 = !DISubroutineType(types: !8913)
!8913 = !{!103, !721}
!8914 = !{!8915}
!8915 = !DILocalVariable(name: "s", arg: 1, scope: !8911, file: !928, line: 106, type: !721)
!8916 = !DILocation(line: 0, scope: !8911)
!8917 = !DILocation(line: 108, column: 6, scope: !8918)
!8918 = distinct !DILexicalBlock(scope: !8911, file: !928, line: 108, column: 6)
!8919 = !DILocation(line: 108, column: 23, scope: !8918)
!8920 = !DILocation(line: 108, column: 6, scope: !8911)
!8921 = !DILocation(line: 112, column: 9, scope: !8911)
!8922 = !DILocation(line: 112, column: 29, scope: !8911)
!8923 = !DILocation(line: 112, column: 2, scope: !8911)
!8924 = !DILocation(line: 113, column: 1, scope: !8911)
!8925 = distinct !DISubprogram(name: "sam0_eic_isr", scope: !1389, file: !1389, line: 51, type: !8926, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !956, retainedNodes: !8928)
!8926 = !DISubroutineType(types: !8927)
!8927 = !{null, !1402}
!8928 = !{!8929, !8930, !8933, !8934, !8935, !8940}
!8929 = !DILocalVariable(name: "dev", arg: 1, scope: !8925, file: !1389, line: 51, type: !1402)
!8930 = !DILocalVariable(name: "dev_data", scope: !8925, file: !1389, line: 53, type: !8931)
!8931 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8932)
!8932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1420, size: 32)
!8933 = !DILocalVariable(name: "bits", scope: !8925, file: !1389, line: 54, type: !151)
!8934 = !DILocalVariable(name: "line_index", scope: !8925, file: !1389, line: 55, type: !137)
!8935 = !DILocalVariable(name: "line_assignment", scope: !8936, file: !1389, line: 87, type: !8939)
!8936 = distinct !DILexicalBlock(scope: !8937, file: !1389, line: 77, column: 41)
!8937 = distinct !DILexicalBlock(scope: !8938, file: !1389, line: 77, column: 2)
!8938 = distinct !DILexicalBlock(scope: !8925, file: !1389, line: 77, column: 2)
!8939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1434, size: 32)
!8940 = !DILocalVariable(name: "port_data", scope: !8936, file: !1389, line: 89, type: !8941)
!8941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1424, size: 32)
!8942 = !DILocation(line: 0, scope: !8925)
!8943 = !DILocation(line: 53, column: 46, scope: !8925)
!8944 = !DILocation(line: 54, column: 31, scope: !8925)
!8945 = !DILocation(line: 58, column: 21, scope: !8925)
!8946 = !DILocation(line: 58, column: 19, scope: !8925)
!8947 = !DILocalVariable(name: "value", arg: 1, scope: !8948, file: !7386, line: 373, type: !137)
!8948 = distinct !DISubprogram(name: "__RBIT", scope: !7386, file: !7386, line: 373, type: !8337, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !956, retainedNodes: !8949)
!8949 = !{!8947, !8950}
!8950 = !DILocalVariable(name: "result", scope: !8948, file: !7386, line: 375, type: !137)
!8951 = !DILocation(line: 0, scope: !8948, inlinedAt: !8952)
!8952 = distinct !DILocation(line: 62, column: 21, scope: !8925)
!8953 = !DILocation(line: 380, column: 4, scope: !8948, inlinedAt: !8952)
!8954 = !{i64 1760889}
!8955 = !DILocalVariable(name: "value", arg: 1, scope: !8956, file: !7386, line: 403, type: !137)
!8956 = distinct !DISubprogram(name: "__CLZ", scope: !7386, file: !7386, line: 403, type: !8957, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !956, retainedNodes: !8959)
!8957 = !DISubroutineType(types: !8958)
!8958 = !{!240, !137}
!8959 = !{!8955}
!8960 = !DILocation(line: 0, scope: !8956, inlinedAt: !8961)
!8961 = distinct !DILocation(line: 62, column: 15, scope: !8925)
!8962 = !DILocation(line: 414, column: 7, scope: !8956, inlinedAt: !8961)
!8963 = !DILocation(line: 63, column: 7, scope: !8925)
!8964 = !DILocation(line: 77, column: 2, scope: !8938)
!8965 = !DILocation(line: 78, column: 14, scope: !8966)
!8966 = distinct !DILexicalBlock(scope: !8936, file: !1389, line: 78, column: 7)
!8967 = !DILocation(line: 78, column: 7, scope: !8936)
!8968 = !DILocation(line: 0, scope: !8936)
!8969 = !DILocation(line: 90, column: 38, scope: !8936)
!8970 = !DILocation(line: 90, column: 5, scope: !8936)
!8971 = !DILocation(line: 92, column: 14, scope: !8936)
!8972 = !DILocation(line: 92, column: 17, scope: !8936)
!8973 = !DILocation(line: 92, column: 55, scope: !8936)
!8974 = !DILocation(line: 92, column: 3, scope: !8936)
!8975 = !DILocation(line: 93, column: 2, scope: !8936)
!8976 = !DILocation(line: 77, column: 20, scope: !8937)
!8977 = !DILocation(line: 77, column: 37, scope: !8937)
!8978 = distinct !{!8978, !8964, !8979}
!8979 = !DILocation(line: 93, column: 2, scope: !8938)
!8980 = !DILocation(line: 94, column: 1, scope: !8925)
!8981 = !DILocation(line: 0, scope: !1452)
!8982 = !DILocation(line: 341, column: 21, scope: !1452)
!8983 = !DILocation(line: 344, column: 33, scope: !1452)
!8984 = !DILocation(line: 356, column: 2, scope: !8985)
!8985 = distinct !DILexicalBlock(scope: !8986, file: !1389, line: 356, column: 2)
!8986 = distinct !DILexicalBlock(scope: !1452, file: !1389, line: 356, column: 2)
!8987 = !DILocation(line: 356, column: 2, scope: !8986)
!8988 = !DILocation(line: 359, column: 2, scope: !8989)
!8989 = distinct !DILexicalBlock(scope: !8990, file: !1389, line: 359, column: 2)
!8990 = distinct !DILexicalBlock(scope: !1452, file: !1389, line: 359, column: 2)
!8991 = !DILocation(line: 359, column: 2, scope: !8990)
!8992 = !DILocation(line: 362, column: 2, scope: !8993)
!8993 = distinct !DILexicalBlock(scope: !8994, file: !1389, line: 362, column: 2)
!8994 = distinct !DILexicalBlock(scope: !1452, file: !1389, line: 362, column: 2)
!8995 = !DILocation(line: 362, column: 2, scope: !8994)
!8996 = !DILocation(line: 365, column: 2, scope: !8997)
!8997 = distinct !DILexicalBlock(scope: !8998, file: !1389, line: 365, column: 2)
!8998 = distinct !DILexicalBlock(scope: !1452, file: !1389, line: 365, column: 2)
!8999 = !DILocation(line: 365, column: 2, scope: !8998)
!9000 = !DILocation(line: 368, column: 2, scope: !9001)
!9001 = distinct !DILexicalBlock(scope: !9002, file: !1389, line: 368, column: 2)
!9002 = distinct !DILexicalBlock(scope: !1452, file: !1389, line: 368, column: 2)
!9003 = !DILocation(line: 368, column: 2, scope: !9002)
!9004 = !DILocation(line: 371, column: 2, scope: !9005)
!9005 = distinct !DILexicalBlock(scope: !9006, file: !1389, line: 371, column: 2)
!9006 = distinct !DILexicalBlock(scope: !1452, file: !1389, line: 371, column: 2)
!9007 = !DILocation(line: 371, column: 2, scope: !9006)
!9008 = !DILocation(line: 374, column: 2, scope: !9009)
!9009 = distinct !DILexicalBlock(scope: !9010, file: !1389, line: 374, column: 2)
!9010 = distinct !DILexicalBlock(scope: !1452, file: !1389, line: 374, column: 2)
!9011 = !DILocation(line: 374, column: 2, scope: !9010)
!9012 = !DILocation(line: 377, column: 2, scope: !9013)
!9013 = distinct !DILexicalBlock(scope: !9014, file: !1389, line: 377, column: 2)
!9014 = distinct !DILexicalBlock(scope: !1452, file: !1389, line: 377, column: 2)
!9015 = !DILocation(line: 377, column: 2, scope: !9014)
!9016 = !DILocation(line: 380, column: 2, scope: !9017)
!9017 = distinct !DILexicalBlock(scope: !9018, file: !1389, line: 380, column: 2)
!9018 = distinct !DILexicalBlock(scope: !1452, file: !1389, line: 380, column: 2)
!9019 = !DILocation(line: 380, column: 2, scope: !9018)
!9020 = !DILocation(line: 383, column: 2, scope: !9021)
!9021 = distinct !DILexicalBlock(scope: !9022, file: !1389, line: 383, column: 2)
!9022 = distinct !DILexicalBlock(scope: !1452, file: !1389, line: 383, column: 2)
!9023 = !DILocation(line: 383, column: 2, scope: !9022)
!9024 = !DILocation(line: 386, column: 2, scope: !9025)
!9025 = distinct !DILexicalBlock(scope: !9026, file: !1389, line: 386, column: 2)
!9026 = distinct !DILexicalBlock(scope: !1452, file: !1389, line: 386, column: 2)
!9027 = !DILocation(line: 386, column: 2, scope: !9026)
!9028 = !DILocation(line: 389, column: 2, scope: !9029)
!9029 = distinct !DILexicalBlock(scope: !9030, file: !1389, line: 389, column: 2)
!9030 = distinct !DILexicalBlock(scope: !1452, file: !1389, line: 389, column: 2)
!9031 = !DILocation(line: 389, column: 2, scope: !9030)
!9032 = !DILocation(line: 392, column: 2, scope: !9033)
!9033 = distinct !DILexicalBlock(scope: !9034, file: !1389, line: 392, column: 2)
!9034 = distinct !DILexicalBlock(scope: !1452, file: !1389, line: 392, column: 2)
!9035 = !DILocation(line: 392, column: 2, scope: !9034)
!9036 = !DILocation(line: 395, column: 2, scope: !9037)
!9037 = distinct !DILexicalBlock(scope: !9038, file: !1389, line: 395, column: 2)
!9038 = distinct !DILexicalBlock(scope: !1452, file: !1389, line: 395, column: 2)
!9039 = !DILocation(line: 395, column: 2, scope: !9038)
!9040 = !DILocation(line: 398, column: 2, scope: !9041)
!9041 = distinct !DILexicalBlock(scope: !9042, file: !1389, line: 398, column: 2)
!9042 = distinct !DILexicalBlock(scope: !1452, file: !1389, line: 398, column: 2)
!9043 = !DILocation(line: 398, column: 2, scope: !9042)
!9044 = !DILocation(line: 401, column: 2, scope: !9045)
!9045 = distinct !DILexicalBlock(scope: !9046, file: !1389, line: 401, column: 2)
!9046 = distinct !DILexicalBlock(scope: !1452, file: !1389, line: 401, column: 2)
!9047 = !DILocation(line: 401, column: 2, scope: !9046)
!9048 = !DILocation(line: 404, column: 2, scope: !1452)
!9049 = !DILocation(line: 405, column: 2, scope: !1452)
!9050 = !DILocation(line: 407, column: 2, scope: !1452)
!9051 = distinct !DISubprogram(name: "set_eic_enable", scope: !1389, file: !1389, line: 42, type: !9052, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !956, retainedNodes: !9054)
!9052 = !DISubroutineType(types: !9053)
!9053 = !{null, !731}
!9054 = !{!9055}
!9055 = !DILocalVariable(name: "on", arg: 1, scope: !9051, file: !1389, line: 42, type: !731)
!9056 = !DILocation(line: 0, scope: !9051)
!9057 = !DILocation(line: 45, column: 24, scope: !9051)
!9058 = !DILocation(line: 49, column: 1, scope: !9051)
!9059 = distinct !DISubprogram(name: "wait_synchronization", scope: !1389, file: !1389, line: 31, type: !3598, scopeLine: 32, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !956, retainedNodes: !162)
!9060 = !DILocation(line: 34, column: 2, scope: !9059)
!9061 = !DILocation(line: 34, column: 23, scope: !9059)
!9062 = distinct !{!9062, !9060, !9063}
!9063 = !DILocation(line: 35, column: 2, scope: !9059)
!9064 = !DILocation(line: 40, column: 1, scope: !9059)
!9065 = distinct !DISubprogram(name: "sam0_eic_acquire", scope: !1389, file: !1389, line: 96, type: !9066, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !956, retainedNodes: !9068)
!9066 = !DISubroutineType(types: !9067)
!9067 = !{!103, !103, !103, !959, !731, !1427, !102}
!9068 = !{!9069, !9070, !9071, !9072, !9073, !9074, !9075, !9077, !9078, !9079, !9080, !9081, !9082, !9083, !9084, !9085, !9086}
!9069 = !DILocalVariable(name: "port", arg: 1, scope: !9065, file: !1389, line: 96, type: !103)
!9070 = !DILocalVariable(name: "pin", arg: 2, scope: !9065, file: !1389, line: 96, type: !103)
!9071 = !DILocalVariable(name: "trigger", arg: 3, scope: !9065, file: !1389, line: 96, type: !959)
!9072 = !DILocalVariable(name: "filter", arg: 4, scope: !9065, file: !1389, line: 97, type: !731)
!9073 = !DILocalVariable(name: "cb", arg: 5, scope: !9065, file: !1389, line: 97, type: !1427)
!9074 = !DILocalVariable(name: "data", arg: 6, scope: !9065, file: !1389, line: 97, type: !102)
!9075 = !DILocalVariable(name: "dev", scope: !9065, file: !1389, line: 99, type: !9076)
!9076 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1402)
!9077 = !DILocalVariable(name: "dev_data", scope: !9065, file: !1389, line: 100, type: !8932)
!9078 = !DILocalVariable(name: "port_data", scope: !9065, file: !1389, line: 101, type: !8941)
!9079 = !DILocalVariable(name: "line_assignment", scope: !9065, file: !1389, line: 102, type: !8939)
!9080 = !DILocalVariable(name: "mask", scope: !9065, file: !1389, line: 103, type: !137)
!9081 = !DILocalVariable(name: "line_index", scope: !9065, file: !1389, line: 104, type: !103)
!9082 = !DILocalVariable(name: "config_index", scope: !9065, file: !1389, line: 105, type: !103)
!9083 = !DILocalVariable(name: "config_shift", scope: !9065, file: !1389, line: 106, type: !103)
!9084 = !DILocalVariable(name: "key", scope: !9065, file: !1389, line: 107, type: !32)
!9085 = !DILocalVariable(name: "config", scope: !9065, file: !1389, line: 108, type: !137)
!9086 = !DILabel(scope: !9065, name: "err_in_use", file: !1389, line: 180)
!9087 = !DILocation(line: 0, scope: !9065)
!9088 = !DILocation(line: 110, column: 15, scope: !9065)
!9089 = !DILocation(line: 111, column: 17, scope: !9090)
!9090 = distinct !DILexicalBlock(scope: !9065, file: !1389, line: 111, column: 6)
!9091 = !DILocation(line: 111, column: 6, scope: !9065)
!9092 = !DILocation(line: 115, column: 9, scope: !9065)
!9093 = !DILocation(line: 116, column: 28, scope: !9065)
!9094 = !DILocation(line: 117, column: 34, scope: !9065)
!9095 = !DILocation(line: 55, column: 2, scope: !9096, inlinedAt: !9100)
!9096 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7145, file: !7145, line: 42, type: !7146, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !956, retainedNodes: !9097)
!9097 = !{!9098, !9099}
!9098 = !DILocalVariable(name: "key", scope: !9096, file: !7145, line: 44, type: !32)
!9099 = !DILocalVariable(name: "tmp", scope: !9096, file: !7145, line: 53, type: !32)
!9100 = distinct !DILocation(line: 120, column: 8, scope: !9065)
!9101 = !{i64 1526528}
!9102 = !DILocation(line: 0, scope: !9096, inlinedAt: !9100)
!9103 = !DILocation(line: 122, column: 2, scope: !9065)
!9104 = !DILocation(line: 127, column: 23, scope: !9105)
!9105 = distinct !DILexicalBlock(scope: !9065, file: !1389, line: 127, column: 6)
!9106 = !DILocation(line: 127, column: 6, scope: !9105)
!9107 = !DILocation(line: 127, column: 6, scope: !9065)
!9108 = !DILocation(line: 128, column: 24, scope: !9109)
!9109 = distinct !DILexicalBlock(scope: !9110, file: !1389, line: 128, column: 7)
!9110 = distinct !DILexicalBlock(scope: !9105, file: !1389, line: 127, column: 32)
!9111 = !DILocation(line: 128, column: 7, scope: !9109)
!9112 = !DILocation(line: 128, column: 29, scope: !9109)
!9113 = !DILocation(line: 128, column: 37, scope: !9109)
!9114 = !DILocation(line: 129, column: 24, scope: !9109)
!9115 = !DILocation(line: 129, column: 7, scope: !9109)
!9116 = !DILocation(line: 129, column: 28, scope: !9109)
!9117 = !DILocation(line: 128, column: 7, scope: !9110)
!9118 = !DILocation(line: 136, column: 13, scope: !9065)
!9119 = !DILocation(line: 136, column: 16, scope: !9065)
!9120 = !DILocation(line: 137, column: 13, scope: !9065)
!9121 = !DILocation(line: 137, column: 18, scope: !9065)
!9122 = !DILocation(line: 138, column: 25, scope: !9065)
!9123 = !DILocation(line: 138, column: 23, scope: !9065)
!9124 = !DILocation(line: 139, column: 26, scope: !9065)
!9125 = !DILocation(line: 139, column: 24, scope: !9065)
!9126 = !DILocation(line: 140, column: 27, scope: !9065)
!9127 = !DILocation(line: 142, column: 37, scope: !9065)
!9128 = !DILocation(line: 143, column: 18, scope: !9065)
!9129 = !DILocation(line: 143, column: 12, scope: !9065)
!9130 = !DILocation(line: 143, column: 9, scope: !9065)
!9131 = !DILocation(line: 144, column: 2, scope: !9065)
!9132 = !DILocation(line: 146, column: 36, scope: !9133)
!9133 = distinct !DILexicalBlock(scope: !9065, file: !1389, line: 144, column: 19)
!9134 = !DILocation(line: 146, column: 10, scope: !9133)
!9135 = !DILocation(line: 147, column: 3, scope: !9133)
!9136 = !DILocation(line: 149, column: 36, scope: !9133)
!9137 = !DILocation(line: 149, column: 10, scope: !9133)
!9138 = !DILocation(line: 150, column: 3, scope: !9133)
!9139 = !DILocation(line: 152, column: 36, scope: !9133)
!9140 = !DILocation(line: 152, column: 10, scope: !9133)
!9141 = !DILocation(line: 153, column: 3, scope: !9133)
!9142 = !DILocation(line: 155, column: 36, scope: !9133)
!9143 = !DILocation(line: 155, column: 10, scope: !9133)
!9144 = !DILocation(line: 156, column: 3, scope: !9133)
!9145 = !DILocation(line: 158, column: 35, scope: !9133)
!9146 = !DILocation(line: 158, column: 10, scope: !9133)
!9147 = !DILocation(line: 159, column: 3, scope: !9133)
!9148 = !DILocation(line: 162, column: 6, scope: !9065)
!9149 = !DILocation(line: 167, column: 32, scope: !9065)
!9150 = !DILocation(line: 169, column: 2, scope: !9065)
!9151 = !DILocation(line: 170, column: 2, scope: !9065)
!9152 = !DILocation(line: 176, column: 19, scope: !9065)
!9153 = !DILocalVariable(name: "key", arg: 1, scope: !9154, file: !7145, line: 84, type: !32)
!9154 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7145, file: !7145, line: 84, type: !7163, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !956, retainedNodes: !9155)
!9155 = !{!9153}
!9156 = !DILocation(line: 0, scope: !9154, inlinedAt: !9157)
!9157 = distinct !DILocation(line: 177, column: 2, scope: !9065)
!9158 = !DILocation(line: 95, column: 2, scope: !9154, inlinedAt: !9157)
!9159 = !{i64 1527345}
!9160 = !DILocation(line: 178, column: 2, scope: !9065)
!9161 = !DILocation(line: 180, column: 1, scope: !9065)
!9162 = !DILocation(line: 181, column: 2, scope: !9065)
!9163 = !DILocation(line: 182, column: 2, scope: !9065)
!9164 = !DILocation(line: 0, scope: !9154, inlinedAt: !9165)
!9165 = distinct !DILocation(line: 183, column: 2, scope: !9065)
!9166 = !DILocation(line: 95, column: 2, scope: !9154, inlinedAt: !9165)
!9167 = !DILocation(line: 184, column: 2, scope: !9065)
!9168 = !DILocation(line: 185, column: 1, scope: !9065)
!9169 = distinct !DISubprogram(name: "sam0_eic_map_to_line", scope: !1445, file: !1445, line: 691, type: !9170, scopeLine: 692, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !956, retainedNodes: !9172)
!9170 = !DISubroutineType(types: !9171)
!9171 = !{!103, !103, !103}
!9172 = !{!9173, !9174, !9175}
!9173 = !DILocalVariable(name: "port", arg: 1, scope: !9169, file: !1445, line: 691, type: !103)
!9174 = !DILocalVariable(name: "pin", arg: 2, scope: !9169, file: !1445, line: 691, type: !103)
!9175 = !DILocalVariable(name: "ch", scope: !9169, file: !1445, line: 693, type: !240)
!9176 = !DILocation(line: 0, scope: !9169)
!9177 = !DILocation(line: 693, column: 15, scope: !9169)
!9178 = !DILocation(line: 695, column: 9, scope: !9179)
!9179 = distinct !DILexicalBlock(scope: !9169, file: !1445, line: 695, column: 6)
!9180 = !DILocation(line: 695, column: 6, scope: !9169)
!9181 = !DILocation(line: 699, column: 1, scope: !9169)
!9182 = distinct !DISubprogram(name: "sam0_eic_release", scope: !1389, file: !1389, line: 206, type: !9170, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !956, retainedNodes: !9183)
!9183 = !{!9184, !9185, !9186, !9187, !9188, !9189, !9190, !9191, !9192, !9193}
!9184 = !DILocalVariable(name: "port", arg: 1, scope: !9182, file: !1389, line: 206, type: !103)
!9185 = !DILocalVariable(name: "pin", arg: 2, scope: !9182, file: !1389, line: 206, type: !103)
!9186 = !DILocalVariable(name: "dev", scope: !9182, file: !1389, line: 208, type: !9076)
!9187 = !DILocalVariable(name: "dev_data", scope: !9182, file: !1389, line: 209, type: !8932)
!9188 = !DILocalVariable(name: "mask", scope: !9182, file: !1389, line: 210, type: !137)
!9189 = !DILocalVariable(name: "line_index", scope: !9182, file: !1389, line: 211, type: !103)
!9190 = !DILocalVariable(name: "config_index", scope: !9182, file: !1389, line: 212, type: !103)
!9191 = !DILocalVariable(name: "config_shift", scope: !9182, file: !1389, line: 213, type: !103)
!9192 = !DILocalVariable(name: "key", scope: !9182, file: !1389, line: 214, type: !32)
!9193 = !DILabel(scope: !9182, name: "done", file: !1389, line: 248)
!9194 = !DILocation(line: 0, scope: !9182)
!9195 = !DILocation(line: 216, column: 15, scope: !9182)
!9196 = !DILocation(line: 217, column: 17, scope: !9197)
!9197 = distinct !DILexicalBlock(scope: !9182, file: !1389, line: 217, column: 6)
!9198 = !DILocation(line: 217, column: 6, scope: !9182)
!9199 = !DILocation(line: 221, column: 9, scope: !9182)
!9200 = !DILocation(line: 55, column: 2, scope: !9096, inlinedAt: !9201)
!9201 = distinct !DILocation(line: 226, column: 8, scope: !9182)
!9202 = !DILocation(line: 0, scope: !9096, inlinedAt: !9201)
!9203 = !DILocation(line: 228, column: 2, scope: !9182)
!9204 = !DILocation(line: 229, column: 2, scope: !9182)
!9205 = !DILocation(line: 235, column: 7, scope: !9206)
!9206 = distinct !DILexicalBlock(scope: !9182, file: !1389, line: 235, column: 6)
!9207 = !DILocation(line: 235, column: 6, scope: !9182)
!9208 = !DILocation(line: 223, column: 34, scope: !9182)
!9209 = !DILocation(line: 222, column: 28, scope: !9182)
!9210 = !DILocation(line: 239, column: 30, scope: !9182)
!9211 = !DILocation(line: 239, column: 38, scope: !9182)
!9212 = !DILocation(line: 242, column: 41, scope: !9182)
!9213 = !DILocation(line: 242, column: 35, scope: !9182)
!9214 = !DILocation(line: 242, column: 28, scope: !9182)
!9215 = !DILocation(line: 242, column: 32, scope: !9182)
!9216 = !DILocation(line: 245, column: 20, scope: !9182)
!9217 = !DILocation(line: 246, column: 19, scope: !9182)
!9218 = !DILocation(line: 246, column: 2, scope: !9182)
!9219 = !DILocation(line: 248, column: 1, scope: !9182)
!9220 = !DILocation(line: 249, column: 2, scope: !9182)
!9221 = !DILocation(line: 250, column: 2, scope: !9182)
!9222 = !DILocation(line: 0, scope: !9154, inlinedAt: !9223)
!9223 = distinct !DILocation(line: 251, column: 2, scope: !9182)
!9224 = !DILocation(line: 95, column: 2, scope: !9154, inlinedAt: !9223)
!9225 = !DILocation(line: 252, column: 2, scope: !9182)
!9226 = !DILocation(line: 253, column: 1, scope: !9182)
!9227 = distinct !DISubprogram(name: "sam0_eic_check_ownership", scope: !1389, file: !1389, line: 187, type: !9228, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !956, retainedNodes: !9230)
!9228 = !DISubroutineType(types: !9229)
!9229 = !{!731, !103, !103, !103}
!9230 = !{!9231, !9232, !9233, !9234, !9235, !9236}
!9231 = !DILocalVariable(name: "port", arg: 1, scope: !9227, file: !1389, line: 187, type: !103)
!9232 = !DILocalVariable(name: "pin", arg: 2, scope: !9227, file: !1389, line: 187, type: !103)
!9233 = !DILocalVariable(name: "line_index", arg: 3, scope: !9227, file: !1389, line: 187, type: !103)
!9234 = !DILocalVariable(name: "dev", scope: !9227, file: !1389, line: 189, type: !9076)
!9235 = !DILocalVariable(name: "dev_data", scope: !9227, file: !1389, line: 190, type: !8932)
!9236 = !DILocalVariable(name: "line_assignment", scope: !9227, file: !1389, line: 191, type: !8939)
!9237 = !DILocation(line: 0, scope: !9227)
!9238 = !DILocation(line: 194, column: 24, scope: !9239)
!9239 = distinct !DILexicalBlock(scope: !9227, file: !1389, line: 194, column: 6)
!9240 = !DILocation(line: 194, column: 7, scope: !9239)
!9241 = !DILocation(line: 194, column: 6, scope: !9227)
!9242 = !DILocation(line: 198, column: 23, scope: !9243)
!9243 = distinct !DILexicalBlock(scope: !9227, file: !1389, line: 198, column: 6)
!9244 = !DILocation(line: 198, column: 6, scope: !9243)
!9245 = !DILocation(line: 198, column: 28, scope: !9243)
!9246 = !DILocation(line: 198, column: 36, scope: !9243)
!9247 = !DILocation(line: 199, column: 23, scope: !9243)
!9248 = !DILocation(line: 199, column: 6, scope: !9243)
!9249 = !DILocation(line: 199, column: 27, scope: !9243)
!9250 = !DILocation(line: 198, column: 6, scope: !9227)
!9251 = !DILocation(line: 204, column: 1, scope: !9227)
!9252 = distinct !DISubprogram(name: "sam0_eic_enable_interrupt", scope: !1389, file: !1389, line: 255, type: !9170, scopeLine: 256, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !956, retainedNodes: !9253)
!9253 = !{!9254, !9255, !9256, !9257}
!9254 = !DILocalVariable(name: "port", arg: 1, scope: !9252, file: !1389, line: 255, type: !103)
!9255 = !DILocalVariable(name: "pin", arg: 2, scope: !9252, file: !1389, line: 255, type: !103)
!9256 = !DILocalVariable(name: "mask", scope: !9252, file: !1389, line: 257, type: !137)
!9257 = !DILocalVariable(name: "line_index", scope: !9252, file: !1389, line: 258, type: !103)
!9258 = !DILocation(line: 0, scope: !9252)
!9259 = !DILocation(line: 260, column: 15, scope: !9252)
!9260 = !DILocation(line: 261, column: 17, scope: !9261)
!9261 = distinct !DILexicalBlock(scope: !9252, file: !1389, line: 261, column: 6)
!9262 = !DILocation(line: 261, column: 6, scope: !9252)
!9263 = !DILocation(line: 265, column: 7, scope: !9264)
!9264 = distinct !DILexicalBlock(scope: !9252, file: !1389, line: 265, column: 6)
!9265 = !DILocation(line: 265, column: 6, scope: !9252)
!9266 = !DILocation(line: 269, column: 9, scope: !9252)
!9267 = !DILocation(line: 270, column: 19, scope: !9252)
!9268 = !DILocation(line: 271, column: 20, scope: !9252)
!9269 = !DILocation(line: 273, column: 2, scope: !9252)
!9270 = !DILocation(line: 274, column: 1, scope: !9252)
!9271 = distinct !DISubprogram(name: "sam0_eic_disable_interrupt", scope: !1389, file: !1389, line: 276, type: !9170, scopeLine: 277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !956, retainedNodes: !9272)
!9272 = !{!9273, !9274, !9275, !9276}
!9273 = !DILocalVariable(name: "port", arg: 1, scope: !9271, file: !1389, line: 276, type: !103)
!9274 = !DILocalVariable(name: "pin", arg: 2, scope: !9271, file: !1389, line: 276, type: !103)
!9275 = !DILocalVariable(name: "mask", scope: !9271, file: !1389, line: 278, type: !137)
!9276 = !DILocalVariable(name: "line_index", scope: !9271, file: !1389, line: 279, type: !103)
!9277 = !DILocation(line: 0, scope: !9271)
!9278 = !DILocation(line: 281, column: 15, scope: !9271)
!9279 = !DILocation(line: 282, column: 17, scope: !9280)
!9280 = distinct !DILexicalBlock(scope: !9271, file: !1389, line: 282, column: 6)
!9281 = !DILocation(line: 282, column: 6, scope: !9271)
!9282 = !DILocation(line: 286, column: 7, scope: !9283)
!9283 = distinct !DILexicalBlock(scope: !9271, file: !1389, line: 286, column: 6)
!9284 = !DILocation(line: 286, column: 6, scope: !9271)
!9285 = !DILocation(line: 290, column: 9, scope: !9271)
!9286 = !DILocation(line: 291, column: 20, scope: !9271)
!9287 = !DILocation(line: 292, column: 19, scope: !9271)
!9288 = !DILocation(line: 294, column: 2, scope: !9271)
!9289 = !DILocation(line: 295, column: 1, scope: !9271)
!9290 = distinct !DISubprogram(name: "sam0_eic_interrupt_pending", scope: !1389, file: !1389, line: 297, type: !9291, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !956, retainedNodes: !9293)
!9291 = !DISubroutineType(types: !9292)
!9292 = !{!137, !103}
!9293 = !{!9294, !9295, !9296, !9297, !9298, !9299, !9300}
!9294 = !DILocalVariable(name: "port", arg: 1, scope: !9290, file: !1389, line: 297, type: !103)
!9295 = !DILocalVariable(name: "dev", scope: !9290, file: !1389, line: 299, type: !9076)
!9296 = !DILocalVariable(name: "dev_data", scope: !9290, file: !1389, line: 300, type: !8932)
!9297 = !DILocalVariable(name: "line_assignment", scope: !9290, file: !1389, line: 301, type: !8939)
!9298 = !DILocalVariable(name: "set", scope: !9290, file: !1389, line: 302, type: !137)
!9299 = !DILocalVariable(name: "mask", scope: !9290, file: !1389, line: 303, type: !137)
!9300 = !DILocalVariable(name: "line_index", scope: !9301, file: !1389, line: 305, type: !103)
!9301 = distinct !DILexicalBlock(scope: !9290, file: !1389, line: 305, column: 2)
!9302 = !DILocation(line: 0, scope: !9290)
!9303 = !DILocation(line: 302, column: 30, scope: !9290)
!9304 = !DILocation(line: 0, scope: !9301)
!9305 = !DILocation(line: 305, column: 2, scope: !9301)
!9306 = !DILocation(line: 323, column: 2, scope: !9290)
!9307 = !DILocation(line: 308, column: 25, scope: !9308)
!9308 = distinct !DILexicalBlock(scope: !9309, file: !1389, line: 308, column: 7)
!9309 = distinct !DILexicalBlock(scope: !9310, file: !1389, line: 305, column: 70)
!9310 = distinct !DILexicalBlock(scope: !9301, file: !1389, line: 305, column: 2)
!9311 = !DILocation(line: 308, column: 8, scope: !9308)
!9312 = !DILocation(line: 308, column: 7, scope: !9309)
!9313 = !DILocation(line: 312, column: 24, scope: !9314)
!9314 = distinct !DILexicalBlock(scope: !9309, file: !1389, line: 312, column: 7)
!9315 = !DILocation(line: 312, column: 7, scope: !9314)
!9316 = !DILocation(line: 312, column: 29, scope: !9314)
!9317 = !DILocation(line: 312, column: 7, scope: !9309)
!9318 = !DILocation(line: 316, column: 15, scope: !9319)
!9319 = distinct !DILexicalBlock(scope: !9309, file: !1389, line: 316, column: 7)
!9320 = !DILocation(line: 316, column: 13, scope: !9319)
!9321 = !DILocation(line: 316, column: 7, scope: !9309)
!9322 = !DILocation(line: 320, column: 11, scope: !9309)
!9323 = !DILocation(line: 320, column: 8, scope: !9309)
!9324 = !DILocation(line: 321, column: 2, scope: !9309)
!9325 = !DILocation(line: 305, column: 66, scope: !9310)
!9326 = !DILocation(line: 305, column: 38, scope: !9310)
!9327 = distinct !{!9327, !9305, !9328}
!9328 = !DILocation(line: 321, column: 2, scope: !9301)
!9329 = distinct !DISubprogram(name: "uart_console_init", scope: !1593, file: !1593, line: 588, type: !1537, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1503, retainedNodes: !9330)
!9330 = !{!9331}
!9331 = !DILocalVariable(name: "arg", arg: 1, scope: !9329, file: !1593, line: 588, type: !1515)
!9332 = !DILocation(line: 0, scope: !9329)
!9333 = !DILocation(line: 593, column: 7, scope: !9334)
!9334 = distinct !DILexicalBlock(scope: !9329, file: !1593, line: 593, column: 6)
!9335 = !DILocation(line: 593, column: 6, scope: !9329)
!9336 = !DILocation(line: 597, column: 2, scope: !9329)
!9337 = !DILocation(line: 599, column: 2, scope: !9329)
!9338 = !DILocation(line: 600, column: 1, scope: !9329)
!9339 = distinct !DISubprogram(name: "device_is_ready", scope: !9340, file: !9340, line: 47, type: !9341, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1503, retainedNodes: !9343)
!9340 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/basic/sys_heap")
!9341 = !DISubroutineType(types: !9342)
!9342 = !{!731, !1515}
!9343 = !{!9344}
!9344 = !DILocalVariable(name: "dev", arg: 1, scope: !9339, file: !9340, line: 47, type: !1515)
!9345 = !DILocation(line: 0, scope: !9339)
!9346 = !DILocation(line: 55, column: 2, scope: !9347)
!9347 = distinct !DILexicalBlock(scope: !9339, file: !9340, line: 55, column: 2)
!9348 = !{i64 2152850463}
!9349 = !DILocation(line: 56, column: 9, scope: !9339)
!9350 = !DILocation(line: 56, column: 2, scope: !9339)
!9351 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1593, file: !1593, line: 573, type: !3598, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1503, retainedNodes: !162)
!9352 = !DILocation(line: 576, column: 2, scope: !9351)
!9353 = !DILocation(line: 579, column: 2, scope: !9351)
!9354 = !DILocation(line: 581, column: 1, scope: !9351)
!9355 = distinct !DISubprogram(name: "console_out", scope: !1593, file: !1593, line: 77, type: !129, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1503, retainedNodes: !9356)
!9356 = !{!9357}
!9357 = !DILocalVariable(name: "c", arg: 1, scope: !9355, file: !1593, line: 77, type: !103)
!9358 = !DILocation(line: 0, scope: !9355)
!9359 = !DILocation(line: 89, column: 11, scope: !9360)
!9360 = distinct !DILexicalBlock(scope: !9355, file: !1593, line: 89, column: 6)
!9361 = !DILocation(line: 89, column: 6, scope: !9355)
!9362 = !DILocation(line: 90, column: 3, scope: !9363)
!9363 = distinct !DILexicalBlock(scope: !9360, file: !1593, line: 89, column: 17)
!9364 = !DILocation(line: 91, column: 2, scope: !9363)
!9365 = !DILocation(line: 92, column: 34, scope: !9355)
!9366 = !DILocation(line: 92, column: 2, scope: !9355)
!9367 = !DILocation(line: 94, column: 2, scope: !9355)
!9368 = distinct !DISubprogram(name: "uart_poll_out", scope: !9369, file: !9369, line: 95, type: !1533, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1503, retainedNodes: !9370)
!9369 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_itsybitsy_m4_express/basic/sys_heap")
!9370 = !{!9371, !9372}
!9371 = !DILocalVariable(name: "dev", arg: 1, scope: !9368, file: !9369, line: 95, type: !1515)
!9372 = !DILocalVariable(name: "out_char", arg: 2, scope: !9368, file: !9369, line: 95, type: !241)
!9373 = !DILocation(line: 0, scope: !9368)
!9374 = !DILocation(line: 105, column: 2, scope: !9375)
!9375 = distinct !DILexicalBlock(scope: !9368, file: !9369, line: 105, column: 2)
!9376 = !{i64 2152933708}
!9377 = !DILocation(line: 106, column: 2, scope: !9368)
!9378 = !DILocation(line: 107, column: 1, scope: !9368)
!9379 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !1509, file: !1509, line: 574, type: !1533, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1503, retainedNodes: !9380)
!9380 = !{!9381, !9382, !9383}
!9381 = !DILocalVariable(name: "dev", arg: 1, scope: !9379, file: !1509, line: 574, type: !1515)
!9382 = !DILocalVariable(name: "out_char", arg: 2, scope: !9379, file: !1509, line: 575, type: !241)
!9383 = !DILocalVariable(name: "api", scope: !9379, file: !1509, line: 577, type: !1506)
!9384 = !DILocation(line: 0, scope: !9379)
!9385 = !DILocation(line: 578, column: 40, scope: !9379)
!9386 = !DILocation(line: 580, column: 7, scope: !9379)
!9387 = !DILocation(line: 580, column: 2, scope: !9379)
!9388 = !DILocation(line: 581, column: 1, scope: !9379)
!9389 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !718, file: !718, line: 730, type: !9341, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1503, retainedNodes: !9390)
!9390 = !{!9391}
!9391 = !DILocalVariable(name: "dev", arg: 1, scope: !9389, file: !718, line: 730, type: !1515)
!9392 = !DILocation(line: 0, scope: !9389)
!9393 = !DILocation(line: 732, column: 9, scope: !9389)
!9394 = !DILocation(line: 732, column: 2, scope: !9389)
!9395 = distinct !DISubprogram(name: "uart_register_input", scope: !1593, file: !1593, line: 560, type: !9396, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1503, retainedNodes: !9441)
!9396 = !DISubroutineType(types: !9397)
!9397 = !{null, !9398, !9398, !9438}
!9398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9399, size: 32)
!9399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !846, line: 2208, size: 128, elements: !9400)
!9400 = !{!9401}
!9401 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !9399, file: !846, line: 2209, baseType: !9402, size: 128)
!9402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !846, line: 1709, size: 128, elements: !9403)
!9403 = !{!9404, !9417, !9419}
!9404 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !9402, file: !846, line: 1710, baseType: !9405, size: 64)
!9405 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !9406, line: 46, baseType: !9407)
!9406 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !9406, line: 41, size: 64, elements: !9408)
!9408 = !{!9409, !9416}
!9409 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9407, file: !9406, line: 42, baseType: !9410, size: 32)
!9410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9411, size: 32)
!9411 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !9406, line: 39, baseType: !9412)
!9412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !9406, line: 35, size: 32, elements: !9413)
!9413 = !{!9414}
!9414 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !9412, file: !9406, line: 36, baseType: !9415, size: 32)
!9415 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !9406, line: 32, baseType: !137)
!9416 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9407, file: !9406, line: 43, baseType: !9410, size: 32, offset: 32)
!9417 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9402, file: !846, line: 1711, baseType: !9418, offset: 64)
!9418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !857, line: 43, elements: !162)
!9419 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9402, file: !846, line: 1712, baseType: !9420, size: 64, offset: 64)
!9420 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !788, line: 233, baseType: !9421)
!9421 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !788, line: 231, size: 64, elements: !9422)
!9422 = !{!9423}
!9423 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !9421, file: !788, line: 232, baseType: !9424, size: 64)
!9424 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !764, line: 48, baseType: !9425)
!9425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !764, line: 37, size: 64, elements: !9426)
!9426 = !{!9427, !9433}
!9427 = !DIDerivedType(tag: DW_TAG_member, scope: !9425, file: !764, line: 38, baseType: !9428, size: 32)
!9428 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9425, file: !764, line: 38, size: 32, elements: !9429)
!9429 = !{!9430, !9432}
!9430 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9428, file: !764, line: 39, baseType: !9431, size: 32)
!9431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9425, size: 32)
!9432 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9428, file: !764, line: 40, baseType: !9431, size: 32)
!9433 = !DIDerivedType(tag: DW_TAG_member, scope: !9425, file: !764, line: 42, baseType: !9434, size: 32, offset: 32)
!9434 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9425, file: !764, line: 42, size: 32, elements: !9435)
!9435 = !{!9436, !9437}
!9436 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9434, file: !764, line: 43, baseType: !9431, size: 32)
!9437 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9434, file: !764, line: 44, baseType: !9431, size: 32)
!9438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9439, size: 32)
!9439 = !DISubroutineType(types: !9440)
!9440 = !{!240, !2684, !240}
!9441 = !{!9442, !9443, !9444}
!9442 = !DILocalVariable(name: "avail", arg: 1, scope: !9395, file: !1593, line: 560, type: !9398)
!9443 = !DILocalVariable(name: "lines", arg: 2, scope: !9395, file: !1593, line: 560, type: !9398)
!9444 = !DILocalVariable(name: "completion", arg: 3, scope: !9395, file: !1593, line: 561, type: !9438)
!9445 = !DILocation(line: 0, scope: !9395)
!9446 = !DILocation(line: 566, column: 1, scope: !9395)
!9447 = distinct !DISubprogram(name: "uart_sam0_poll_in", scope: !1914, file: !1914, line: 637, type: !1656, scopeLine: 638, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1602, retainedNodes: !9448)
!9448 = !{!9449, !9450, !9451, !9453}
!9449 = !DILocalVariable(name: "dev", arg: 1, scope: !9447, file: !1914, line: 637, type: !1658)
!9450 = !DILocalVariable(name: "c", arg: 2, scope: !9447, file: !1914, line: 637, type: !1530)
!9451 = !DILocalVariable(name: "config", scope: !9447, file: !1914, line: 639, type: !9452)
!9452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1978, size: 32)
!9453 = !DILocalVariable(name: "usart", scope: !9447, file: !1914, line: 641, type: !9454)
!9454 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1982)
!9455 = !DILocation(line: 0, scope: !9447)
!9456 = !DILocation(line: 639, column: 48, scope: !9447)
!9457 = !DILocation(line: 641, column: 38, scope: !9447)
!9458 = !DILocation(line: 643, column: 26, scope: !9459)
!9459 = distinct !DILexicalBlock(scope: !9447, file: !1914, line: 643, column: 6)
!9460 = !DILocation(line: 643, column: 7, scope: !9459)
!9461 = !DILocation(line: 643, column: 6, scope: !9447)
!9462 = !DILocation(line: 647, column: 34, scope: !9447)
!9463 = !DILocation(line: 647, column: 7, scope: !9447)
!9464 = !DILocation(line: 647, column: 5, scope: !9447)
!9465 = !DILocation(line: 648, column: 2, scope: !9447)
!9466 = !DILocation(line: 649, column: 1, scope: !9447)
!9467 = distinct !DISubprogram(name: "uart_sam0_poll_out", scope: !1914, file: !1914, line: 651, type: !1675, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1602, retainedNodes: !9468)
!9468 = !{!9469, !9470, !9471, !9472}
!9469 = !DILocalVariable(name: "dev", arg: 1, scope: !9467, file: !1914, line: 651, type: !1658)
!9470 = !DILocalVariable(name: "c", arg: 2, scope: !9467, file: !1914, line: 651, type: !241)
!9471 = !DILocalVariable(name: "config", scope: !9467, file: !1914, line: 653, type: !9452)
!9472 = !DILocalVariable(name: "usart", scope: !9467, file: !1914, line: 655, type: !9454)
!9473 = !DILocation(line: 0, scope: !9467)
!9474 = !DILocation(line: 653, column: 48, scope: !9467)
!9475 = !DILocation(line: 655, column: 38, scope: !9467)
!9476 = !DILocation(line: 657, column: 2, scope: !9467)
!9477 = !DILocation(line: 657, column: 29, scope: !9467)
!9478 = !DILocation(line: 657, column: 9, scope: !9467)
!9479 = distinct !{!9479, !9476, !9480}
!9480 = !DILocation(line: 658, column: 2, scope: !9467)
!9481 = !DILocation(line: 661, column: 20, scope: !9467)
!9482 = !DILocation(line: 661, column: 14, scope: !9467)
!9483 = !DILocation(line: 661, column: 18, scope: !9467)
!9484 = !DILocation(line: 662, column: 1, scope: !9467)
!9485 = distinct !DISubprogram(name: "uart_sam0_err_check", scope: !1914, file: !1914, line: 664, type: !1679, scopeLine: 665, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1602, retainedNodes: !9486)
!9486 = !{!9487, !9488, !9489, !9490}
!9487 = !DILocalVariable(name: "dev", arg: 1, scope: !9485, file: !1914, line: 664, type: !1658)
!9488 = !DILocalVariable(name: "config", scope: !9485, file: !1914, line: 666, type: !9452)
!9489 = !DILocalVariable(name: "regs", scope: !9485, file: !1914, line: 668, type: !9454)
!9490 = !DILocalVariable(name: "err", scope: !9485, file: !1914, line: 669, type: !137)
!9491 = !DILocation(line: 0, scope: !9485)
!9492 = !DILocation(line: 666, column: 48, scope: !9485)
!9493 = !DILocation(line: 668, column: 37, scope: !9485)
!9494 = !DILocation(line: 671, column: 19, scope: !9495)
!9495 = distinct !DILexicalBlock(scope: !9485, file: !1914, line: 671, column: 6)
!9496 = !DILocation(line: 671, column: 6, scope: !9485)
!9497 = !DILocation(line: 675, column: 19, scope: !9498)
!9498 = distinct !DILexicalBlock(scope: !9485, file: !1914, line: 675, column: 6)
!9499 = !DILocation(line: 675, column: 23, scope: !9498)
!9500 = !DILocation(line: 675, column: 6, scope: !9485)
!9501 = !DILocation(line: 679, column: 19, scope: !9502)
!9502 = distinct !DILexicalBlock(scope: !9485, file: !1914, line: 679, column: 6)
!9503 = !DILocation(line: 679, column: 6, scope: !9485)
!9504 = !DILocation(line: 684, column: 19, scope: !9505)
!9505 = distinct !DILexicalBlock(scope: !9485, file: !1914, line: 684, column: 6)
!9506 = !DILocation(line: 684, column: 6, scope: !9485)
!9507 = !DILocation(line: 688, column: 19, scope: !9508)
!9508 = distinct !DILexicalBlock(scope: !9485, file: !1914, line: 688, column: 6)
!9509 = !DILocation(line: 688, column: 6, scope: !9485)
!9510 = !DILocation(line: 692, column: 19, scope: !9485)
!9511 = !DILocation(line: 703, column: 2, scope: !9485)
!9512 = !DILocation(line: 704, column: 2, scope: !9485)
!9513 = distinct !DISubprogram(name: "uart_sam0_configure", scope: !1914, file: !1914, line: 388, type: !1683, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1602, retainedNodes: !9514)
!9514 = !{!9515, !9516, !9517, !9518, !9520, !9523, !9524, !9525}
!9515 = !DILocalVariable(name: "dev", arg: 1, scope: !9513, file: !1914, line: 388, type: !1658)
!9516 = !DILocalVariable(name: "new_cfg", arg: 2, scope: !9513, file: !1914, line: 389, type: !1685)
!9517 = !DILocalVariable(name: "retval", scope: !9513, file: !1914, line: 391, type: !103)
!9518 = !DILocalVariable(name: "cfg", scope: !9513, file: !1914, line: 393, type: !9519)
!9519 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9452)
!9520 = !DILocalVariable(name: "dev_data", scope: !9513, file: !1914, line: 394, type: !9521)
!9521 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9522)
!9522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1927, size: 32)
!9523 = !DILocalVariable(name: "usart", scope: !9513, file: !1914, line: 395, type: !9454)
!9524 = !DILocalVariable(name: "CTRLA_temp", scope: !9513, file: !1914, line: 411, type: !1989)
!9525 = !DILocalVariable(name: "CTRLB_temp", scope: !9513, file: !1914, line: 412, type: !2013)
!9526 = !DILocation(line: 411, column: 26, scope: !9513)
!9527 = !DILocation(line: 412, column: 26, scope: !9513)
!9528 = !DILocation(line: 0, scope: !9513)
!9529 = !DILocation(line: 393, column: 51, scope: !9513)
!9530 = !DILocation(line: 394, column: 51, scope: !9513)
!9531 = !DILocation(line: 395, column: 35, scope: !9513)
!9532 = !DILocation(line: 397, column: 2, scope: !9513)
!9533 = !DILocation(line: 399, column: 19, scope: !9513)
!9534 = !DILocation(line: 399, column: 26, scope: !9513)
!9535 = !DILocation(line: 400, column: 2, scope: !9513)
!9536 = !DILocation(line: 402, column: 15, scope: !9537)
!9537 = distinct !DILexicalBlock(scope: !9513, file: !1914, line: 402, column: 6)
!9538 = !DILocation(line: 402, column: 25, scope: !9537)
!9539 = !DILocation(line: 402, column: 6, scope: !9513)
!9540 = !DILocation(line: 409, column: 25, scope: !9513)
!9541 = !DILocation(line: 409, column: 35, scope: !9513)
!9542 = !DILocation(line: 411, column: 2, scope: !9513)
!9543 = !DILocation(line: 411, column: 46, scope: !9513)
!9544 = !DILocation(line: 412, column: 2, scope: !9513)
!9545 = !DILocation(line: 412, column: 46, scope: !9513)
!9546 = !DILocation(line: 414, column: 19, scope: !9513)
!9547 = !DILocation(line: 414, column: 2, scope: !9513)
!9548 = !DILocation(line: 416, column: 23, scope: !9549)
!9549 = distinct !DILexicalBlock(scope: !9513, file: !1914, line: 414, column: 27)
!9550 = !DILocation(line: 417, column: 3, scope: !9549)
!9551 = !DILocation(line: 419, column: 23, scope: !9549)
!9552 = !DILocation(line: 420, column: 24, scope: !9549)
!9553 = !DILocation(line: 421, column: 3, scope: !9549)
!9554 = !DILocation(line: 423, column: 23, scope: !9549)
!9555 = !DILocation(line: 424, column: 24, scope: !9549)
!9556 = !DILocation(line: 425, column: 3, scope: !9549)
!9557 = !DILocation(line: 430, column: 25, scope: !9513)
!9558 = !DILocation(line: 430, column: 32, scope: !9513)
!9559 = !DILocation(line: 432, column: 19, scope: !9513)
!9560 = !DILocation(line: 432, column: 2, scope: !9513)
!9561 = !DILocation(line: 434, column: 25, scope: !9562)
!9562 = distinct !DILexicalBlock(scope: !9513, file: !1914, line: 432, column: 30)
!9563 = !DILocation(line: 435, column: 3, scope: !9562)
!9564 = !DILocation(line: 437, column: 25, scope: !9562)
!9565 = !DILocation(line: 438, column: 3, scope: !9562)
!9566 = !DILocation(line: 0, scope: !9562)
!9567 = !DILocation(line: 443, column: 25, scope: !9513)
!9568 = !DILocation(line: 443, column: 35, scope: !9513)
!9569 = !DILocation(line: 445, column: 19, scope: !9513)
!9570 = !DILocation(line: 445, column: 2, scope: !9513)
!9571 = !DILocation(line: 447, column: 25, scope: !9572)
!9572 = distinct !DILexicalBlock(scope: !9513, file: !1914, line: 445, column: 30)
!9573 = !DILocation(line: 448, column: 3, scope: !9572)
!9574 = !DILocation(line: 450, column: 25, scope: !9572)
!9575 = !DILocation(line: 451, column: 3, scope: !9572)
!9576 = !DILocation(line: 453, column: 25, scope: !9572)
!9577 = !DILocation(line: 454, column: 3, scope: !9572)
!9578 = !DILocation(line: 456, column: 25, scope: !9572)
!9579 = !DILocation(line: 457, column: 3, scope: !9572)
!9580 = !DILocation(line: 459, column: 25, scope: !9572)
!9581 = !DILocation(line: 460, column: 3, scope: !9572)
!9582 = !DILocation(line: 468, column: 24, scope: !9513)
!9583 = !DILocation(line: 465, column: 25, scope: !9513)
!9584 = !DILocation(line: 465, column: 35, scope: !9513)
!9585 = !DILocation(line: 468, column: 31, scope: !9513)
!9586 = !DILocation(line: 471, column: 17, scope: !9513)
!9587 = !DILocation(line: 472, column: 2, scope: !9513)
!9588 = !DILocation(line: 474, column: 17, scope: !9513)
!9589 = !DILocation(line: 475, column: 2, scope: !9513)
!9590 = !DILocation(line: 477, column: 50, scope: !9513)
!9591 = !DILocation(line: 477, column: 11, scope: !9513)
!9592 = !DILocation(line: 479, column: 13, scope: !9593)
!9593 = distinct !DILexicalBlock(scope: !9513, file: !1914, line: 479, column: 6)
!9594 = !DILocation(line: 479, column: 6, scope: !9513)
!9595 = !DILocation(line: 483, column: 45, scope: !9513)
!9596 = !DILocation(line: 483, column: 25, scope: !9513)
!9597 = !DILocation(line: 483, column: 34, scope: !9513)
!9598 = !DILocation(line: 485, column: 26, scope: !9513)
!9599 = !DILocation(line: 486, column: 2, scope: !9513)
!9600 = !DILocation(line: 488, column: 2, scope: !9513)
!9601 = !DILocation(line: 489, column: 1, scope: !9513)
!9602 = distinct !DISubprogram(name: "uart_sam0_config_get", scope: !1914, file: !1914, line: 491, type: !1696, scopeLine: 493, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1602, retainedNodes: !9603)
!9603 = !{!9604, !9605, !9606}
!9604 = !DILocalVariable(name: "dev", arg: 1, scope: !9602, file: !1914, line: 491, type: !1658)
!9605 = !DILocalVariable(name: "out_cfg", arg: 2, scope: !9602, file: !1914, line: 492, type: !1698)
!9606 = !DILocalVariable(name: "dev_data", scope: !9602, file: !1914, line: 494, type: !9521)
!9607 = !DILocation(line: 0, scope: !9602)
!9608 = !DILocation(line: 494, column: 51, scope: !9602)
!9609 = !DILocation(line: 496, column: 9, scope: !9602)
!9610 = !DILocation(line: 496, column: 2, scope: !9602)
!9611 = !DILocation(line: 499, column: 2, scope: !9602)
!9612 = distinct !DISubprogram(name: "uart_sam0_fifo_fill", scope: !1914, file: !1914, line: 783, type: !1701, scopeLine: 785, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1602, retainedNodes: !9613)
!9613 = !{!9614, !9615, !9616, !9617, !9618}
!9614 = !DILocalVariable(name: "dev", arg: 1, scope: !9612, file: !1914, line: 783, type: !1658)
!9615 = !DILocalVariable(name: "tx_data", arg: 2, scope: !9612, file: !1914, line: 784, type: !1561)
!9616 = !DILocalVariable(name: "len", arg: 3, scope: !9612, file: !1914, line: 784, type: !103)
!9617 = !DILocalVariable(name: "config", scope: !9612, file: !1914, line: 786, type: !9452)
!9618 = !DILocalVariable(name: "regs", scope: !9612, file: !1914, line: 787, type: !1982)
!9619 = !DILocation(line: 0, scope: !9612)
!9620 = !DILocation(line: 786, column: 48, scope: !9612)
!9621 = !DILocation(line: 787, column: 30, scope: !9612)
!9622 = !DILocation(line: 789, column: 24, scope: !9623)
!9623 = distinct !DILexicalBlock(scope: !9612, file: !1914, line: 789, column: 6)
!9624 = !DILocation(line: 789, column: 6, scope: !9623)
!9625 = !DILocation(line: 789, column: 28, scope: !9623)
!9626 = !DILocation(line: 790, column: 20, scope: !9627)
!9627 = distinct !DILexicalBlock(scope: !9623, file: !1914, line: 789, column: 41)
!9628 = !DILocation(line: 790, column: 14, scope: !9627)
!9629 = !DILocation(line: 790, column: 18, scope: !9627)
!9630 = !DILocation(line: 791, column: 3, scope: !9627)
!9631 = !DILocation(line: 0, scope: !9623)
!9632 = !DILocation(line: 795, column: 1, scope: !9612)
!9633 = distinct !DISubprogram(name: "uart_sam0_fifo_read", scope: !1914, file: !1914, line: 855, type: !1705, scopeLine: 857, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1602, retainedNodes: !9634)
!9634 = !{!9635, !9636, !9637, !9638, !9639, !9640}
!9635 = !DILocalVariable(name: "dev", arg: 1, scope: !9633, file: !1914, line: 855, type: !1658)
!9636 = !DILocalVariable(name: "rx_data", arg: 2, scope: !9633, file: !1914, line: 855, type: !1566)
!9637 = !DILocalVariable(name: "size", arg: 3, scope: !9633, file: !1914, line: 856, type: !1567)
!9638 = !DILocalVariable(name: "config", scope: !9633, file: !1914, line: 858, type: !9452)
!9639 = !DILocalVariable(name: "regs", scope: !9633, file: !1914, line: 859, type: !9454)
!9640 = !DILocalVariable(name: "ch", scope: !9641, file: !1914, line: 862, type: !240)
!9641 = distinct !DILexicalBlock(scope: !9642, file: !1914, line: 861, column: 29)
!9642 = distinct !DILexicalBlock(scope: !9633, file: !1914, line: 861, column: 6)
!9643 = !DILocation(line: 0, scope: !9633)
!9644 = !DILocation(line: 858, column: 48, scope: !9633)
!9645 = !DILocation(line: 859, column: 37, scope: !9633)
!9646 = !DILocation(line: 861, column: 24, scope: !9642)
!9647 = !DILocation(line: 861, column: 6, scope: !9642)
!9648 = !DILocation(line: 861, column: 6, scope: !9633)
!9649 = !DILocation(line: 862, column: 27, scope: !9641)
!9650 = !DILocation(line: 0, scope: !9641)
!9651 = !DILocation(line: 864, column: 12, scope: !9652)
!9652 = distinct !DILexicalBlock(scope: !9641, file: !1914, line: 864, column: 7)
!9653 = !DILocation(line: 864, column: 7, scope: !9641)
!9654 = !DILocation(line: 862, column: 16, scope: !9641)
!9655 = !DILocation(line: 865, column: 13, scope: !9656)
!9656 = distinct !DILexicalBlock(scope: !9652, file: !1914, line: 864, column: 18)
!9657 = !DILocation(line: 866, column: 4, scope: !9656)
!9658 = !DILocation(line: 872, column: 1, scope: !9633)
!9659 = distinct !DISubprogram(name: "uart_sam0_irq_tx_enable", scope: !1914, file: !1914, line: 797, type: !1709, scopeLine: 798, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1602, retainedNodes: !9660)
!9660 = !{!9661, !9662, !9663}
!9661 = !DILocalVariable(name: "dev", arg: 1, scope: !9659, file: !1914, line: 797, type: !1658)
!9662 = !DILocalVariable(name: "config", scope: !9659, file: !1914, line: 799, type: !9452)
!9663 = !DILocalVariable(name: "regs", scope: !9659, file: !1914, line: 800, type: !9454)
!9664 = !DILocation(line: 0, scope: !9659)
!9665 = !DILocation(line: 799, column: 48, scope: !9659)
!9666 = !DILocation(line: 800, column: 37, scope: !9659)
!9667 = !DILocation(line: 802, column: 17, scope: !9659)
!9668 = !DILocation(line: 802, column: 21, scope: !9659)
!9669 = !DILocation(line: 804, column: 1, scope: !9659)
!9670 = distinct !DISubprogram(name: "uart_sam0_irq_tx_disable", scope: !1914, file: !1914, line: 806, type: !1709, scopeLine: 807, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1602, retainedNodes: !9671)
!9671 = !{!9672, !9673, !9674}
!9672 = !DILocalVariable(name: "dev", arg: 1, scope: !9670, file: !1914, line: 806, type: !1658)
!9673 = !DILocalVariable(name: "config", scope: !9670, file: !1914, line: 808, type: !9452)
!9674 = !DILocalVariable(name: "regs", scope: !9670, file: !1914, line: 809, type: !9454)
!9675 = !DILocation(line: 0, scope: !9670)
!9676 = !DILocation(line: 808, column: 48, scope: !9670)
!9677 = !DILocation(line: 809, column: 37, scope: !9670)
!9678 = !DILocation(line: 811, column: 17, scope: !9670)
!9679 = !DILocation(line: 811, column: 21, scope: !9670)
!9680 = !DILocation(line: 813, column: 1, scope: !9670)
!9681 = distinct !DISubprogram(name: "uart_sam0_irq_tx_ready", scope: !1914, file: !1914, line: 815, type: !1679, scopeLine: 816, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1602, retainedNodes: !9682)
!9682 = !{!9683, !9684, !9685}
!9683 = !DILocalVariable(name: "dev", arg: 1, scope: !9681, file: !1914, line: 815, type: !1658)
!9684 = !DILocalVariable(name: "config", scope: !9681, file: !1914, line: 817, type: !9452)
!9685 = !DILocalVariable(name: "regs", scope: !9681, file: !1914, line: 818, type: !9454)
!9686 = !DILocation(line: 0, scope: !9681)
!9687 = !DILocation(line: 817, column: 48, scope: !9681)
!9688 = !DILocation(line: 818, column: 37, scope: !9681)
!9689 = !DILocation(line: 820, column: 28, scope: !9681)
!9690 = !DILocation(line: 820, column: 32, scope: !9681)
!9691 = !DILocation(line: 820, column: 38, scope: !9681)
!9692 = !DILocation(line: 820, column: 61, scope: !9681)
!9693 = !DILocation(line: 820, column: 42, scope: !9681)
!9694 = !DILocation(line: 820, column: 2, scope: !9681)
!9695 = distinct !DISubprogram(name: "uart_sam0_irq_rx_enable", scope: !1914, file: !1914, line: 831, type: !1709, scopeLine: 832, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1602, retainedNodes: !9696)
!9696 = !{!9697, !9698, !9699}
!9697 = !DILocalVariable(name: "dev", arg: 1, scope: !9695, file: !1914, line: 831, type: !1658)
!9698 = !DILocalVariable(name: "config", scope: !9695, file: !1914, line: 833, type: !9452)
!9699 = !DILocalVariable(name: "regs", scope: !9695, file: !1914, line: 834, type: !9454)
!9700 = !DILocation(line: 0, scope: !9695)
!9701 = !DILocation(line: 833, column: 48, scope: !9695)
!9702 = !DILocation(line: 834, column: 37, scope: !9695)
!9703 = !DILocation(line: 836, column: 17, scope: !9695)
!9704 = !DILocation(line: 836, column: 21, scope: !9695)
!9705 = !DILocation(line: 837, column: 1, scope: !9695)
!9706 = distinct !DISubprogram(name: "uart_sam0_irq_rx_disable", scope: !1914, file: !1914, line: 839, type: !1709, scopeLine: 840, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1602, retainedNodes: !9707)
!9707 = !{!9708, !9709, !9710}
!9708 = !DILocalVariable(name: "dev", arg: 1, scope: !9706, file: !1914, line: 839, type: !1658)
!9709 = !DILocalVariable(name: "config", scope: !9706, file: !1914, line: 841, type: !9452)
!9710 = !DILocalVariable(name: "regs", scope: !9706, file: !1914, line: 842, type: !9454)
!9711 = !DILocation(line: 0, scope: !9706)
!9712 = !DILocation(line: 841, column: 48, scope: !9706)
!9713 = !DILocation(line: 842, column: 37, scope: !9706)
!9714 = !DILocation(line: 844, column: 17, scope: !9706)
!9715 = !DILocation(line: 844, column: 21, scope: !9706)
!9716 = !DILocation(line: 845, column: 1, scope: !9706)
!9717 = distinct !DISubprogram(name: "uart_sam0_irq_tx_complete", scope: !1914, file: !1914, line: 823, type: !1679, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1602, retainedNodes: !9718)
!9718 = !{!9719, !9720, !9721}
!9719 = !DILocalVariable(name: "dev", arg: 1, scope: !9717, file: !1914, line: 823, type: !1658)
!9720 = !DILocalVariable(name: "config", scope: !9717, file: !1914, line: 825, type: !9452)
!9721 = !DILocalVariable(name: "regs", scope: !9717, file: !1914, line: 826, type: !9454)
!9722 = !DILocation(line: 0, scope: !9717)
!9723 = !DILocation(line: 825, column: 48, scope: !9717)
!9724 = !DILocation(line: 826, column: 37, scope: !9717)
!9725 = !DILocation(line: 828, column: 28, scope: !9717)
!9726 = !DILocation(line: 828, column: 32, scope: !9717)
!9727 = !DILocation(line: 828, column: 38, scope: !9717)
!9728 = !DILocation(line: 828, column: 61, scope: !9717)
!9729 = !DILocation(line: 828, column: 42, scope: !9717)
!9730 = !DILocation(line: 828, column: 2, scope: !9717)
!9731 = distinct !DISubprogram(name: "uart_sam0_irq_rx_ready", scope: !1914, file: !1914, line: 847, type: !1679, scopeLine: 848, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1602, retainedNodes: !9732)
!9732 = !{!9733, !9734, !9735}
!9733 = !DILocalVariable(name: "dev", arg: 1, scope: !9731, file: !1914, line: 847, type: !1658)
!9734 = !DILocalVariable(name: "config", scope: !9731, file: !1914, line: 849, type: !9452)
!9735 = !DILocalVariable(name: "regs", scope: !9731, file: !1914, line: 850, type: !9454)
!9736 = !DILocation(line: 0, scope: !9731)
!9737 = !DILocation(line: 849, column: 48, scope: !9731)
!9738 = !DILocation(line: 850, column: 37, scope: !9731)
!9739 = !DILocation(line: 852, column: 27, scope: !9731)
!9740 = !DILocation(line: 852, column: 31, scope: !9731)
!9741 = !DILocation(line: 852, column: 2, scope: !9731)
!9742 = distinct !DISubprogram(name: "uart_sam0_irq_err_enable", scope: !1914, file: !1914, line: 883, type: !1709, scopeLine: 884, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1602, retainedNodes: !9743)
!9743 = !{!9744, !9745, !9746}
!9744 = !DILocalVariable(name: "dev", arg: 1, scope: !9742, file: !1914, line: 883, type: !1658)
!9745 = !DILocalVariable(name: "config", scope: !9742, file: !1914, line: 885, type: !9452)
!9746 = !DILocalVariable(name: "regs", scope: !9742, file: !1914, line: 886, type: !9454)
!9747 = !DILocation(line: 0, scope: !9742)
!9748 = !DILocation(line: 885, column: 48, scope: !9742)
!9749 = !DILocation(line: 886, column: 37, scope: !9742)
!9750 = !DILocation(line: 888, column: 17, scope: !9742)
!9751 = !DILocation(line: 888, column: 21, scope: !9742)
!9752 = !DILocation(line: 889, column: 2, scope: !9742)
!9753 = !DILocation(line: 890, column: 1, scope: !9742)
!9754 = distinct !DISubprogram(name: "uart_sam0_irq_err_disable", scope: !1914, file: !1914, line: 892, type: !1709, scopeLine: 893, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1602, retainedNodes: !9755)
!9755 = !{!9756, !9757, !9758}
!9756 = !DILocalVariable(name: "dev", arg: 1, scope: !9754, file: !1914, line: 892, type: !1658)
!9757 = !DILocalVariable(name: "config", scope: !9754, file: !1914, line: 894, type: !9452)
!9758 = !DILocalVariable(name: "regs", scope: !9754, file: !1914, line: 895, type: !9454)
!9759 = !DILocation(line: 0, scope: !9754)
!9760 = !DILocation(line: 894, column: 48, scope: !9754)
!9761 = !DILocation(line: 895, column: 37, scope: !9754)
!9762 = !DILocation(line: 897, column: 17, scope: !9754)
!9763 = !DILocation(line: 897, column: 21, scope: !9754)
!9764 = !DILocation(line: 898, column: 2, scope: !9754)
!9765 = !DILocation(line: 899, column: 1, scope: !9754)
!9766 = distinct !DISubprogram(name: "uart_sam0_irq_is_pending", scope: !1914, file: !1914, line: 874, type: !1679, scopeLine: 875, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1602, retainedNodes: !9767)
!9767 = !{!9768, !9769, !9770}
!9768 = !DILocalVariable(name: "dev", arg: 1, scope: !9766, file: !1914, line: 874, type: !1658)
!9769 = !DILocalVariable(name: "config", scope: !9766, file: !1914, line: 876, type: !9452)
!9770 = !DILocalVariable(name: "regs", scope: !9766, file: !1914, line: 877, type: !9454)
!9771 = !DILocation(line: 0, scope: !9766)
!9772 = !DILocation(line: 876, column: 48, scope: !9766)
!9773 = !DILocation(line: 877, column: 37, scope: !9766)
!9774 = !DILocation(line: 879, column: 25, scope: !9766)
!9775 = !DILocation(line: 879, column: 45, scope: !9766)
!9776 = !DILocation(line: 879, column: 29, scope: !9766)
!9777 = !DILocation(line: 879, column: 50, scope: !9766)
!9778 = !DILocation(line: 879, column: 2, scope: !9766)
!9779 = distinct !DISubprogram(name: "uart_sam0_irq_update", scope: !1914, file: !1914, line: 902, type: !1679, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1602, retainedNodes: !9780)
!9780 = !{!9781, !9782, !9783}
!9781 = !DILocalVariable(name: "dev", arg: 1, scope: !9779, file: !1914, line: 902, type: !1658)
!9782 = !DILocalVariable(name: "config", scope: !9779, file: !1914, line: 905, type: !9452)
!9783 = !DILocalVariable(name: "regs", scope: !9779, file: !1914, line: 906, type: !9454)
!9784 = !DILocation(line: 0, scope: !9779)
!9785 = !DILocation(line: 905, column: 48, scope: !9779)
!9786 = !DILocation(line: 906, column: 37, scope: !9779)
!9787 = !DILocation(line: 908, column: 16, scope: !9779)
!9788 = !DILocation(line: 908, column: 20, scope: !9779)
!9789 = !DILocation(line: 915, column: 2, scope: !9779)
!9790 = distinct !DISubprogram(name: "uart_sam0_irq_callback_set", scope: !1914, file: !1914, line: 918, type: !1723, scopeLine: 921, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1602, retainedNodes: !9791)
!9791 = !{!9792, !9793, !9794, !9795}
!9792 = !DILocalVariable(name: "dev", arg: 1, scope: !9790, file: !1914, line: 918, type: !1658)
!9793 = !DILocalVariable(name: "cb", arg: 2, scope: !9790, file: !1914, line: 919, type: !1725)
!9794 = !DILocalVariable(name: "cb_data", arg: 3, scope: !9790, file: !1914, line: 920, type: !102)
!9795 = !DILocalVariable(name: "dev_data", scope: !9790, file: !1914, line: 922, type: !9521)
!9796 = !DILocation(line: 0, scope: !9790)
!9797 = !DILocation(line: 922, column: 51, scope: !9790)
!9798 = !DILocation(line: 924, column: 12, scope: !9790)
!9799 = !DILocation(line: 924, column: 15, scope: !9790)
!9800 = !DILocation(line: 925, column: 12, scope: !9790)
!9801 = !DILocation(line: 925, column: 20, scope: !9790)
!9802 = !DILocation(line: 926, column: 1, scope: !9790)
!9803 = distinct !DISubprogram(name: "wait_synchronization", scope: !1914, file: !1914, line: 91, type: !9804, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1602, retainedNodes: !9806)
!9804 = !DISubroutineType(types: !9805)
!9805 = !{null, !9454}
!9806 = !{!9807}
!9807 = !DILocalVariable(name: "usart", arg: 1, scope: !9803, file: !1914, line: 91, type: !9454)
!9808 = !DILocation(line: 0, scope: !9803)
!9809 = !DILocation(line: 95, column: 2, scope: !9803)
!9810 = !DILocation(line: 95, column: 26, scope: !9803)
!9811 = !DILocation(line: 95, column: 30, scope: !9803)
!9812 = !DILocation(line: 95, column: 60, scope: !9803)
!9813 = distinct !{!9813, !9809, !9814}
!9814 = !DILocation(line: 96, column: 2, scope: !9803)
!9815 = !DILocation(line: 104, column: 1, scope: !9803)
!9816 = distinct !DISubprogram(name: "uart_sam0_set_baudrate", scope: !1914, file: !1914, line: 106, type: !9817, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1602, retainedNodes: !9819)
!9817 = !DISubroutineType(types: !9818)
!9818 = !{!103, !9454, !137, !137}
!9819 = !{!9820, !9821, !9822, !9823, !9824}
!9820 = !DILocalVariable(name: "usart", arg: 1, scope: !9816, file: !1914, line: 106, type: !9454)
!9821 = !DILocalVariable(name: "baudrate", arg: 2, scope: !9816, file: !1914, line: 106, type: !137)
!9822 = !DILocalVariable(name: "clk_freq_hz", arg: 3, scope: !9816, file: !1914, line: 107, type: !137)
!9823 = !DILocalVariable(name: "tmp", scope: !9816, file: !1914, line: 109, type: !163)
!9824 = !DILocalVariable(name: "baud", scope: !9816, file: !1914, line: 110, type: !151)
!9825 = !DILocation(line: 0, scope: !9816)
!9826 = !DILocation(line: 116, column: 14, scope: !9827)
!9827 = distinct !DILexicalBlock(scope: !9816, file: !1914, line: 116, column: 6)
!9828 = !DILocation(line: 112, column: 8, scope: !9816)
!9829 = !DILocation(line: 112, column: 27, scope: !9816)
!9830 = !DILocation(line: 113, column: 13, scope: !9816)
!9831 = !DILocation(line: 113, column: 35, scope: !9816)
!9832 = !DILocation(line: 120, column: 17, scope: !9816)
!9833 = !DILocation(line: 120, column: 15, scope: !9816)
!9834 = !DILocation(line: 121, column: 14, scope: !9816)
!9835 = !DILocation(line: 121, column: 18, scope: !9816)
!9836 = !DILocation(line: 122, column: 2, scope: !9816)
!9837 = !DILocation(line: 124, column: 2, scope: !9816)
!9838 = !DILocation(line: 125, column: 1, scope: !9816)
!9839 = !DILocation(line: 0, scope: !1936)
!9840 = !DILocation(line: 1293, column: 1, scope: !9841)
!9841 = distinct !DILexicalBlock(scope: !9842, file: !1914, line: 1293, column: 1)
!9842 = distinct !DILexicalBlock(scope: !1936, file: !1914, line: 1293, column: 1)
!9843 = !DILocation(line: 1293, column: 1, scope: !9842)
!9844 = !DILocation(line: 1293, column: 1, scope: !9845)
!9845 = distinct !DILexicalBlock(scope: !9846, file: !1914, line: 1293, column: 1)
!9846 = distinct !DILexicalBlock(scope: !1936, file: !1914, line: 1293, column: 1)
!9847 = !DILocation(line: 1293, column: 1, scope: !9846)
!9848 = !DILocation(line: 1293, column: 1, scope: !9849)
!9849 = distinct !DILexicalBlock(scope: !9850, file: !1914, line: 1293, column: 1)
!9850 = distinct !DILexicalBlock(scope: !1936, file: !1914, line: 1293, column: 1)
!9851 = !DILocation(line: 1293, column: 1, scope: !9850)
!9852 = !DILocation(line: 1293, column: 1, scope: !9853)
!9853 = distinct !DILexicalBlock(scope: !9854, file: !1914, line: 1293, column: 1)
!9854 = distinct !DILexicalBlock(scope: !1936, file: !1914, line: 1293, column: 1)
!9855 = !DILocation(line: 1293, column: 1, scope: !9854)
!9856 = !DILocation(line: 1293, column: 1, scope: !1936)
!9857 = distinct !DISubprogram(name: "uart_sam0_isr", scope: !1914, file: !1914, line: 709, type: !1709, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1602, retainedNodes: !9858)
!9858 = !{!9859, !9860}
!9859 = !DILocalVariable(name: "dev", arg: 1, scope: !9857, file: !1914, line: 709, type: !1658)
!9860 = !DILocalVariable(name: "dev_data", scope: !9857, file: !1914, line: 711, type: !9521)
!9861 = !DILocation(line: 0, scope: !9857)
!9862 = !DILocation(line: 711, column: 51, scope: !9857)
!9863 = !DILocation(line: 714, column: 16, scope: !9864)
!9864 = distinct !DILexicalBlock(scope: !9857, file: !1914, line: 714, column: 6)
!9865 = !DILocation(line: 714, column: 6, scope: !9864)
!9866 = !DILocation(line: 714, column: 6, scope: !9857)
!9867 = !DILocation(line: 715, column: 31, scope: !9868)
!9868 = distinct !DILexicalBlock(scope: !9864, file: !1914, line: 714, column: 20)
!9869 = !DILocation(line: 715, column: 3, scope: !9868)
!9870 = !DILocation(line: 716, column: 2, scope: !9868)
!9871 = !DILocation(line: 777, column: 1, scope: !9857)
!9872 = distinct !DISubprogram(name: "uart_sam0_init", scope: !1914, file: !1914, line: 503, type: !1679, scopeLine: 504, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1602, retainedNodes: !9873)
!9873 = !{!9874, !9875, !9876, !9877, !9878}
!9874 = !DILocalVariable(name: "dev", arg: 1, scope: !9872, file: !1914, line: 503, type: !1658)
!9875 = !DILocalVariable(name: "retval", scope: !9872, file: !1914, line: 505, type: !103)
!9876 = !DILocalVariable(name: "cfg", scope: !9872, file: !1914, line: 506, type: !9519)
!9877 = !DILocalVariable(name: "dev_data", scope: !9872, file: !1914, line: 507, type: !9521)
!9878 = !DILocalVariable(name: "usart", scope: !9872, file: !1914, line: 509, type: !9454)
!9879 = !DILocation(line: 0, scope: !9872)
!9880 = !DILocation(line: 506, column: 51, scope: !9872)
!9881 = !DILocation(line: 507, column: 51, scope: !9872)
!9882 = !DILocation(line: 509, column: 35, scope: !9872)
!9883 = !DILocation(line: 513, column: 21, scope: !9872)
!9884 = !DILocation(line: 513, column: 2, scope: !9872)
!9885 = !DILocation(line: 513, column: 35, scope: !9872)
!9886 = !DILocation(line: 513, column: 39, scope: !9872)
!9887 = !DILocation(line: 517, column: 21, scope: !9872)
!9888 = !DILocation(line: 517, column: 8, scope: !9872)
!9889 = !DILocation(line: 517, column: 13, scope: !9872)
!9890 = !DILocation(line: 528, column: 18, scope: !9872)
!9891 = !DILocation(line: 528, column: 22, scope: !9872)
!9892 = !DILocation(line: 529, column: 2, scope: !9872)
!9893 = !DILocation(line: 533, column: 11, scope: !9872)
!9894 = !DILocation(line: 541, column: 30, scope: !9872)
!9895 = !DILocation(line: 532, column: 15, scope: !9872)
!9896 = !DILocation(line: 532, column: 19, scope: !9872)
!9897 = !DILocation(line: 542, column: 2, scope: !9872)
!9898 = !DILocation(line: 545, column: 36, scope: !9872)
!9899 = !DILocation(line: 545, column: 11, scope: !9872)
!9900 = !DILocation(line: 546, column: 13, scope: !9901)
!9901 = distinct !DILexicalBlock(scope: !9872, file: !1914, line: 546, column: 6)
!9902 = !DILocation(line: 546, column: 6, scope: !9872)
!9903 = !DILocation(line: 550, column: 25, scope: !9872)
!9904 = !DILocation(line: 550, column: 35, scope: !9872)
!9905 = !DILocation(line: 551, column: 25, scope: !9872)
!9906 = !DILocation(line: 551, column: 32, scope: !9872)
!9907 = !DILocation(line: 552, column: 25, scope: !9872)
!9908 = !DILocation(line: 552, column: 35, scope: !9872)
!9909 = !DILocation(line: 553, column: 25, scope: !9872)
!9910 = !DILocation(line: 553, column: 35, scope: !9872)
!9911 = !DILocation(line: 556, column: 15, scope: !9872)
!9912 = !DILocation(line: 556, column: 19, scope: !9872)
!9913 = !DILocation(line: 558, column: 2, scope: !9872)
!9914 = !DILocation(line: 560, column: 46, scope: !9872)
!9915 = !DILocation(line: 560, column: 11, scope: !9872)
!9916 = !DILocation(line: 562, column: 13, scope: !9917)
!9917 = distinct !DILexicalBlock(scope: !9872, file: !1914, line: 562, column: 6)
!9918 = !DILocation(line: 562, column: 6, scope: !9872)
!9919 = !DILocation(line: 565, column: 41, scope: !9872)
!9920 = !DILocation(line: 565, column: 25, scope: !9872)
!9921 = !DILocation(line: 565, column: 34, scope: !9872)
!9922 = !DILocation(line: 568, column: 7, scope: !9872)
!9923 = !DILocation(line: 568, column: 2, scope: !9872)
!9924 = !DILocation(line: 631, column: 26, scope: !9872)
!9925 = !DILocation(line: 632, column: 2, scope: !9872)
!9926 = !DILocation(line: 634, column: 2, scope: !9872)
!9927 = !DILocation(line: 635, column: 1, scope: !9872)
!9928 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1955, file: !1955, line: 342, type: !9929, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1602, retainedNodes: !9931)
!9929 = !DISubroutineType(types: !9930)
!9930 = !{!103, !2217, !240}
!9931 = !{!9932, !9933, !9934, !9935}
!9932 = !DILocalVariable(name: "config", arg: 1, scope: !9928, file: !1955, line: 342, type: !2217)
!9933 = !DILocalVariable(name: "id", arg: 2, scope: !9928, file: !1955, line: 343, type: !240)
!9934 = !DILocalVariable(name: "ret", scope: !9928, file: !1955, line: 345, type: !103)
!9935 = !DILocalVariable(name: "state", scope: !9928, file: !1955, line: 346, type: !1958)
!9936 = !DILocation(line: 0, scope: !9928)
!9937 = !DILocation(line: 346, column: 2, scope: !9928)
!9938 = !DILocation(line: 348, column: 8, scope: !9928)
!9939 = !DILocation(line: 349, column: 10, scope: !9940)
!9940 = distinct !DILexicalBlock(scope: !9928, file: !1955, line: 349, column: 6)
!9941 = !DILocation(line: 349, column: 6, scope: !9928)
!9942 = !DILocation(line: 353, column: 44, scope: !9928)
!9943 = !DILocation(line: 353, column: 9, scope: !9928)
!9944 = !DILocation(line: 353, column: 2, scope: !9928)
!9945 = !DILocation(line: 354, column: 1, scope: !9928)
!9946 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1955, file: !1955, line: 316, type: !9947, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1602, retainedNodes: !9949)
!9947 = !DISubroutineType(types: !9948)
!9948 = !{!103, !2217, !1958}
!9949 = !{!9950, !9951, !9952}
!9950 = !DILocalVariable(name: "config", arg: 1, scope: !9946, file: !1955, line: 317, type: !2217)
!9951 = !DILocalVariable(name: "state", arg: 2, scope: !9946, file: !1955, line: 318, type: !1958)
!9952 = !DILocalVariable(name: "reg", scope: !9946, file: !1955, line: 320, type: !22)
!9953 = !DILocation(line: 0, scope: !9946)
!9954 = !DILocation(line: 329, column: 39, scope: !9946)
!9955 = !DILocation(line: 329, column: 52, scope: !9946)
!9956 = !DILocation(line: 329, column: 9, scope: !9946)
!9957 = !DILocation(line: 329, column: 2, scope: !9946)
!9958 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !2418, file: !2418, line: 270, type: !2424, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2220, retainedNodes: !9959)
!9959 = !{!9960}
!9960 = !DILocalVariable(name: "dev", arg: 1, scope: !9958, file: !2418, line: 270, type: !2426)
!9961 = !DILocation(line: 0, scope: !9958)
!9962 = !DILocation(line: 274, column: 2, scope: !9958)
!9963 = !DILocation(line: 275, column: 12, scope: !9958)
!9964 = !DILocation(line: 276, column: 15, scope: !9958)
!9965 = !DILocation(line: 277, column: 16, scope: !9958)
!9966 = !DILocation(line: 278, column: 15, scope: !9958)
!9967 = !DILocation(line: 279, column: 16, scope: !9958)
!9968 = !DILocation(line: 282, column: 2, scope: !9958)
!9969 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !891, file: !891, line: 1814, type: !7420, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2220, retainedNodes: !9970)
!9970 = !{!9971, !9972}
!9971 = !DILocalVariable(name: "IRQn", arg: 1, scope: !9969, file: !891, line: 1814, type: !3263)
!9972 = !DILocalVariable(name: "priority", arg: 2, scope: !9969, file: !891, line: 1814, type: !137)
!9973 = !DILocation(line: 0, scope: !9969)
!9974 = !DILocation(line: 1822, column: 46, scope: !9975)
!9975 = distinct !DILexicalBlock(scope: !9976, file: !891, line: 1821, column: 3)
!9976 = distinct !DILexicalBlock(scope: !9969, file: !891, line: 1816, column: 7)
!9977 = !DILocation(line: 1824, column: 1, scope: !9969)
!9978 = distinct !DISubprogram(name: "sys_clock_isr", scope: !2418, file: !2418, line: 118, type: !7323, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2220, retainedNodes: !9979)
!9979 = !{!9980, !9981}
!9980 = !DILocalVariable(name: "arg", arg: 1, scope: !9978, file: !2418, line: 118, type: !102)
!9981 = !DILocalVariable(name: "dticks", scope: !9978, file: !2418, line: 121, type: !137)
!9982 = !DILocation(line: 0, scope: !9978)
!9983 = !DILocation(line: 124, column: 2, scope: !9978)
!9984 = !DILocation(line: 129, column: 17, scope: !9978)
!9985 = !DILocation(line: 129, column: 14, scope: !9978)
!9986 = !DILocation(line: 130, column: 15, scope: !9978)
!9987 = !DILocation(line: 145, column: 27, scope: !9988)
!9988 = distinct !DILexicalBlock(scope: !9989, file: !2418, line: 132, column: 16)
!9989 = distinct !DILexicalBlock(scope: !9978, file: !2418, line: 132, column: 6)
!9990 = !DILocation(line: 145, column: 25, scope: !9988)
!9991 = !DILocation(line: 145, column: 45, scope: !9988)
!9992 = !DILocation(line: 146, column: 30, scope: !9988)
!9993 = !DILocation(line: 146, column: 20, scope: !9988)
!9994 = !DILocation(line: 147, column: 3, scope: !9988)
!9995 = !DILocation(line: 151, column: 2, scope: !9978)
!9996 = !DILocation(line: 152, column: 1, scope: !9978)
!9997 = distinct !DISubprogram(name: "elapsed", scope: !2418, file: !2418, line: 85, type: !135, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2220, retainedNodes: !9998)
!9998 = !{!9999, !10000, !10001}
!9999 = !DILocalVariable(name: "val1", scope: !9997, file: !2418, line: 87, type: !137)
!10000 = !DILocalVariable(name: "ctrl", scope: !9997, file: !2418, line: 88, type: !137)
!10001 = !DILocalVariable(name: "val2", scope: !9997, file: !2418, line: 89, type: !137)
!10002 = !DILocation(line: 87, column: 27, scope: !9997)
!10003 = !DILocation(line: 0, scope: !9997)
!10004 = !DILocation(line: 88, column: 27, scope: !9997)
!10005 = !DILocation(line: 89, column: 27, scope: !9997)
!10006 = !DILocation(line: 105, column: 12, scope: !10007)
!10007 = distinct !DILexicalBlock(scope: !9997, file: !2418, line: 105, column: 6)
!10008 = !DILocation(line: 106, column: 6, scope: !10007)
!10009 = !DILocation(line: 107, column: 16, scope: !10010)
!10010 = distinct !DILexicalBlock(scope: !10007, file: !2418, line: 106, column: 24)
!10011 = !DILocation(line: 111, column: 18, scope: !10010)
!10012 = !DILocation(line: 112, column: 2, scope: !10010)
!10013 = !DILocation(line: 114, column: 20, scope: !9997)
!10014 = !DILocation(line: 114, column: 30, scope: !9997)
!10015 = !DILocation(line: 114, column: 28, scope: !9997)
!10016 = !DILocation(line: 114, column: 2, scope: !9997)
!10017 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !2418, file: !2418, line: 154, type: !10018, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2220, retainedNodes: !10020)
!10018 = !DISubroutineType(types: !10019)
!10019 = !{null, !1458, !731}
!10020 = !{!10021, !10022, !10023, !10024, !10025, !10026, !10027, !10032, !10033}
!10021 = !DILocalVariable(name: "ticks", arg: 1, scope: !10017, file: !2418, line: 154, type: !1458)
!10022 = !DILocalVariable(name: "idle", arg: 2, scope: !10017, file: !2418, line: 154, type: !731)
!10023 = !DILocalVariable(name: "delay", scope: !10017, file: !2418, line: 169, type: !137)
!10024 = !DILocalVariable(name: "val1", scope: !10017, file: !2418, line: 170, type: !137)
!10025 = !DILocalVariable(name: "val2", scope: !10017, file: !2418, line: 170, type: !137)
!10026 = !DILocalVariable(name: "last_load_", scope: !10017, file: !2418, line: 171, type: !137)
!10027 = !DILocalVariable(name: "key", scope: !10017, file: !2418, line: 176, type: !10028)
!10028 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !857, line: 106, baseType: !10029)
!10029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !857, line: 32, size: 32, elements: !10030)
!10030 = !{!10031}
!10031 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !10029, file: !857, line: 33, baseType: !103, size: 32)
!10032 = !DILocalVariable(name: "pending", scope: !10017, file: !2418, line: 178, type: !137)
!10033 = !DILocalVariable(name: "unannounced", scope: !10017, file: !2418, line: 185, type: !137)
!10034 = !DILocation(line: 0, scope: !10017)
!10035 = !DILocation(line: 162, column: 49, scope: !10036)
!10036 = distinct !DILexicalBlock(scope: !10017, file: !2418, line: 162, column: 6)
!10037 = !DILocation(line: 163, column: 17, scope: !10038)
!10038 = distinct !DILexicalBlock(scope: !10036, file: !2418, line: 162, column: 78)
!10039 = !DILocation(line: 164, column: 13, scope: !10038)
!10040 = !DILocation(line: 165, column: 3, scope: !10038)
!10041 = !DILocation(line: 171, column: 24, scope: !10017)
!10042 = !DILocation(line: 173, column: 10, scope: !10017)
!10043 = !DILocation(line: 174, column: 10, scope: !10017)
!10044 = !DILocalVariable(name: "l", arg: 1, scope: !10045, file: !857, line: 136, type: !10048)
!10045 = distinct !DISubprogram(name: "k_spin_lock", scope: !857, file: !857, line: 136, type: !10046, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2220, retainedNodes: !10049)
!10046 = !DISubroutineType(types: !10047)
!10047 = !{!10028, !10048}
!10048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2444, size: 32)
!10049 = !{!10044, !10050}
!10050 = !DILocalVariable(name: "k", scope: !10045, file: !857, line: 139, type: !10028)
!10051 = !DILocation(line: 0, scope: !10045, inlinedAt: !10052)
!10052 = distinct !DILocation(line: 176, column: 25, scope: !10017)
!10053 = !DILocation(line: 55, column: 2, scope: !10054, inlinedAt: !10058)
!10054 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7145, file: !7145, line: 42, type: !7146, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2220, retainedNodes: !10055)
!10055 = !{!10056, !10057}
!10056 = !DILocalVariable(name: "key", scope: !10054, file: !7145, line: 44, type: !32)
!10057 = !DILocalVariable(name: "tmp", scope: !10054, file: !7145, line: 53, type: !32)
!10058 = distinct !DILocation(line: 145, column: 10, scope: !10045, inlinedAt: !10052)
!10059 = !{i64 1596028}
!10060 = !DILocation(line: 0, scope: !10054, inlinedAt: !10058)
!10061 = !DILocation(line: 178, column: 21, scope: !10017)
!10062 = !DILocation(line: 180, column: 18, scope: !10017)
!10063 = !DILocation(line: 182, column: 14, scope: !10017)
!10064 = !DILocation(line: 183, column: 15, scope: !10017)
!10065 = !DILocation(line: 185, column: 39, scope: !10017)
!10066 = !DILocation(line: 185, column: 37, scope: !10017)
!10067 = !DILocation(line: 187, column: 27, scope: !10068)
!10068 = distinct !DILexicalBlock(scope: !10017, file: !2418, line: 187, column: 6)
!10069 = !DILocation(line: 187, column: 6, scope: !10017)
!10070 = !DILocation(line: 202, column: 27, scope: !10071)
!10071 = distinct !DILexicalBlock(scope: !10068, file: !2418, line: 195, column: 9)
!10072 = !DILocation(line: 202, column: 48, scope: !10071)
!10073 = !DILocation(line: 203, column: 9, scope: !10071)
!10074 = !DILocation(line: 204, column: 11, scope: !10071)
!10075 = !DILocation(line: 205, column: 13, scope: !10076)
!10076 = distinct !DILexicalBlock(scope: !10071, file: !2418, line: 205, column: 7)
!10077 = !DILocation(line: 205, column: 7, scope: !10071)
!10078 = !DILocation(line: 0, scope: !10068)
!10079 = !DILocation(line: 212, column: 18, scope: !10017)
!10080 = !DILocation(line: 214, column: 28, scope: !10017)
!10081 = !DILocation(line: 214, column: 16, scope: !10017)
!10082 = !DILocation(line: 215, column: 15, scope: !10017)
!10083 = !DILocation(line: 227, column: 11, scope: !10084)
!10084 = distinct !DILexicalBlock(scope: !10017, file: !2418, line: 227, column: 6)
!10085 = !DILocation(line: 227, column: 6, scope: !10017)
!10086 = !DILocation(line: 228, column: 15, scope: !10087)
!10087 = distinct !DILexicalBlock(scope: !10084, file: !2418, line: 227, column: 19)
!10088 = !DILocation(line: 228, column: 38, scope: !10087)
!10089 = !DILocation(line: 228, column: 24, scope: !10087)
!10090 = !DILocation(line: 229, column: 2, scope: !10087)
!10091 = !DILocation(line: 230, column: 24, scope: !10092)
!10092 = distinct !DILexicalBlock(scope: !10084, file: !2418, line: 229, column: 9)
!10093 = !DILocation(line: 230, column: 15, scope: !10092)
!10094 = !DILocation(line: 0, scope: !10084)
!10095 = !DILocalVariable(name: "key", arg: 2, scope: !10096, file: !857, line: 190, type: !10028)
!10096 = distinct !DISubprogram(name: "k_spin_unlock", scope: !857, file: !857, line: 189, type: !10097, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2220, retainedNodes: !10099)
!10097 = !DISubroutineType(types: !10098)
!10098 = !{null, !10048, !10028}
!10099 = !{!10100, !10095}
!10100 = !DILocalVariable(name: "l", arg: 1, scope: !10096, file: !857, line: 189, type: !10048)
!10101 = !DILocation(line: 0, scope: !10096, inlinedAt: !10102)
!10102 = distinct !DILocation(line: 232, column: 2, scope: !10017)
!10103 = !DILocalVariable(name: "key", arg: 1, scope: !10104, file: !7145, line: 84, type: !32)
!10104 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7145, file: !7145, line: 84, type: !7163, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2220, retainedNodes: !10105)
!10105 = !{!10103}
!10106 = !DILocation(line: 0, scope: !10104, inlinedAt: !10107)
!10107 = distinct !DILocation(line: 215, column: 2, scope: !10096, inlinedAt: !10102)
!10108 = !DILocation(line: 95, column: 2, scope: !10104, inlinedAt: !10107)
!10109 = !{i64 1596845}
!10110 = !DILocation(line: 234, column: 1, scope: !10017)
!10111 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !2418, file: !2418, line: 236, type: !135, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2220, retainedNodes: !10112)
!10112 = !{!10113, !10114}
!10113 = !DILocalVariable(name: "key", scope: !10111, file: !2418, line: 242, type: !10028)
!10114 = !DILocalVariable(name: "cyc", scope: !10111, file: !2418, line: 243, type: !137)
!10115 = !DILocation(line: 0, scope: !10045, inlinedAt: !10116)
!10116 = distinct !DILocation(line: 242, column: 25, scope: !10111)
!10117 = !DILocation(line: 55, column: 2, scope: !10054, inlinedAt: !10118)
!10118 = distinct !DILocation(line: 145, column: 10, scope: !10045, inlinedAt: !10116)
!10119 = !DILocation(line: 0, scope: !10054, inlinedAt: !10118)
!10120 = !DILocation(line: 0, scope: !10111)
!10121 = !DILocation(line: 243, column: 17, scope: !10111)
!10122 = !DILocation(line: 243, column: 29, scope: !10111)
!10123 = !DILocation(line: 243, column: 27, scope: !10111)
!10124 = !DILocation(line: 243, column: 43, scope: !10111)
!10125 = !DILocation(line: 243, column: 41, scope: !10111)
!10126 = !DILocation(line: 0, scope: !10096, inlinedAt: !10127)
!10127 = distinct !DILocation(line: 245, column: 2, scope: !10111)
!10128 = !DILocation(line: 0, scope: !10104, inlinedAt: !10129)
!10129 = distinct !DILocation(line: 215, column: 2, scope: !10096, inlinedAt: !10127)
!10130 = !DILocation(line: 95, column: 2, scope: !10104, inlinedAt: !10129)
!10131 = !DILocation(line: 246, column: 13, scope: !10111)
!10132 = !DILocation(line: 246, column: 2, scope: !10111)
!10133 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !2418, file: !2418, line: 249, type: !135, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2220, retainedNodes: !10134)
!10134 = !{!10135, !10136}
!10135 = !DILocalVariable(name: "key", scope: !10133, file: !2418, line: 251, type: !10028)
!10136 = !DILocalVariable(name: "ret", scope: !10133, file: !2418, line: 252, type: !137)
!10137 = !DILocation(line: 0, scope: !10045, inlinedAt: !10138)
!10138 = distinct !DILocation(line: 251, column: 25, scope: !10133)
!10139 = !DILocation(line: 55, column: 2, scope: !10054, inlinedAt: !10140)
!10140 = distinct !DILocation(line: 145, column: 10, scope: !10045, inlinedAt: !10138)
!10141 = !DILocation(line: 0, scope: !10054, inlinedAt: !10140)
!10142 = !DILocation(line: 0, scope: !10133)
!10143 = !DILocation(line: 252, column: 17, scope: !10133)
!10144 = !DILocation(line: 252, column: 29, scope: !10133)
!10145 = !DILocation(line: 252, column: 27, scope: !10133)
!10146 = !DILocation(line: 0, scope: !10096, inlinedAt: !10147)
!10147 = distinct !DILocation(line: 254, column: 2, scope: !10133)
!10148 = !DILocation(line: 0, scope: !10104, inlinedAt: !10149)
!10149 = distinct !DILocation(line: 215, column: 2, scope: !10096, inlinedAt: !10147)
!10150 = !DILocation(line: 95, column: 2, scope: !10104, inlinedAt: !10149)
!10151 = !DILocation(line: 255, column: 2, scope: !10133)
!10152 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !2418, file: !2418, line: 258, type: !3598, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2220, retainedNodes: !162)
!10153 = !DILocation(line: 260, column: 6, scope: !10154)
!10154 = distinct !DILexicalBlock(scope: !10152, file: !2418, line: 260, column: 6)
!10155 = !DILocation(line: 260, column: 16, scope: !10154)
!10156 = !DILocation(line: 260, column: 6, scope: !10152)
!10157 = !DILocation(line: 261, column: 17, scope: !10158)
!10158 = distinct !DILexicalBlock(scope: !10154, file: !2418, line: 260, column: 34)
!10159 = !DILocation(line: 262, column: 2, scope: !10158)
!10160 = !DILocation(line: 263, column: 1, scope: !10152)
!10161 = distinct !DISubprogram(name: "sys_clock_disable", scope: !2418, file: !2418, line: 265, type: !3598, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2220, retainedNodes: !162)
!10162 = !DILocation(line: 267, column: 16, scope: !10161)
!10163 = !DILocation(line: 268, column: 1, scope: !10161)
!10164 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !10165, file: !10165, line: 9, type: !10166, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3556, retainedNodes: !10182)
!10165 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10166 = !DISubroutineType(types: !10167)
!10167 = !{!103, !10168, !240, !10181}
!10168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10169, size: 32)
!10169 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10170)
!10170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1955, line: 60, size: 64, elements: !10171)
!10171 = !{!10172, !10180}
!10172 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !10170, file: !1955, line: 69, baseType: !10173, size: 32)
!10173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10174, size: 32)
!10174 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10175)
!10175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1955, line: 50, size: 64, elements: !10176)
!10176 = !{!10177, !10178, !10179}
!10177 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !10175, file: !1955, line: 52, baseType: !1963, size: 32)
!10178 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !10175, file: !1955, line: 54, baseType: !240, size: 8, offset: 32)
!10179 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10175, file: !1955, line: 56, baseType: !240, size: 8, offset: 40)
!10180 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !10170, file: !1955, line: 71, baseType: !240, size: 8, offset: 32)
!10181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10173, size: 32)
!10182 = !{!10183, !10184, !10185}
!10183 = !DILocalVariable(name: "config", arg: 1, scope: !10164, file: !10165, line: 9, type: !10168)
!10184 = !DILocalVariable(name: "id", arg: 2, scope: !10164, file: !10165, line: 9, type: !240)
!10185 = !DILocalVariable(name: "state", arg: 3, scope: !10164, file: !10165, line: 10, type: !10181)
!10186 = !DILocation(line: 0, scope: !10164)
!10187 = !DILocation(line: 12, column: 20, scope: !10164)
!10188 = !DILocation(line: 13, column: 27, scope: !10164)
!10189 = !DILocation(line: 13, column: 42, scope: !10164)
!10190 = !DILocation(line: 13, column: 19, scope: !10164)
!10191 = !DILocation(line: 13, column: 16, scope: !10164)
!10192 = !DILocation(line: 13, column: 2, scope: !10164)
!10193 = distinct !{!10193, !10192, !10194}
!10194 = !DILocation(line: 19, column: 2, scope: !10164)
!10195 = !DILocation(line: 14, column: 23, scope: !10196)
!10196 = distinct !DILexicalBlock(scope: !10197, file: !10165, line: 14, column: 7)
!10197 = distinct !DILexicalBlock(scope: !10164, file: !10165, line: 13, column: 54)
!10198 = !DILocation(line: 14, column: 10, scope: !10196)
!10199 = !DILocation(line: 18, column: 11, scope: !10197)
!10200 = !DILocation(line: 14, column: 7, scope: !10197)
!10201 = !DILocation(line: 22, column: 1, scope: !10164)
!10202 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !2631, file: !2631, line: 47, type: !10203, scopeLine: 49, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !10205)
!10203 = !DISubroutineType(types: !10204)
!10204 = !{!103, !1963, !240, !22}
!10205 = !{!10206, !10207, !10208, !10209}
!10206 = !DILocalVariable(name: "pins", arg: 1, scope: !10202, file: !2631, line: 47, type: !1963)
!10207 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !10202, file: !2631, line: 47, type: !240)
!10208 = !DILocalVariable(name: "reg", arg: 3, scope: !10202, file: !2631, line: 48, type: !22)
!10209 = !DILocalVariable(name: "i", scope: !10210, file: !2631, line: 52, type: !240)
!10210 = distinct !DILexicalBlock(scope: !10202, file: !2631, line: 52, column: 2)
!10211 = !DILocation(line: 0, scope: !10202)
!10212 = !DILocation(line: 0, scope: !10210)
!10213 = !DILocation(line: 52, column: 25, scope: !10214)
!10214 = distinct !DILexicalBlock(scope: !10210, file: !2631, line: 52, column: 2)
!10215 = !DILocation(line: 52, column: 2, scope: !10210)
!10216 = !DILocation(line: 56, column: 2, scope: !10202)
!10217 = !DILocation(line: 53, column: 30, scope: !10218)
!10218 = distinct !DILexicalBlock(scope: !10214, file: !2631, line: 52, column: 41)
!10219 = !DILocation(line: 53, column: 25, scope: !10218)
!10220 = !DILocation(line: 53, column: 3, scope: !10218)
!10221 = !DILocation(line: 52, column: 37, scope: !10214)
!10222 = distinct !{!10222, !10215, !10223}
!10223 = !DILocation(line: 54, column: 2, scope: !10210)
!10224 = distinct !DISubprogram(name: "pinctrl_configure_pin", scope: !2631, file: !2631, line: 25, type: !10225, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !10227)
!10225 = !DISubroutineType(types: !10226)
!10226 = !{null, !1965}
!10227 = !{!10228, !10229, !10235, !10236}
!10228 = !DILocalVariable(name: "pin", arg: 1, scope: !10224, file: !2631, line: 25, type: !1965)
!10229 = !DILocalVariable(name: "soc_pin", scope: !10224, file: !2631, line: 27, type: !10230)
!10230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "soc_port_pin", file: !7044, line: 75, size: 96, elements: !10231)
!10231 = !{!10232, !10233, !10234}
!10232 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !10230, file: !7044, line: 76, baseType: !2456, size: 32)
!10233 = !DIDerivedType(tag: DW_TAG_member, name: "pinum", scope: !10230, file: !7044, line: 77, baseType: !137, size: 32, offset: 32)
!10234 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !10230, file: !7044, line: 78, baseType: !137, size: 32, offset: 64)
!10235 = !DILocalVariable(name: "port_idx", scope: !10224, file: !2631, line: 28, type: !240)
!10236 = !DILocalVariable(name: "port_func", scope: !10224, file: !2631, line: 28, type: !240)
!10237 = !DILocation(line: 0, scope: !10224)
!10238 = !DILocation(line: 27, column: 2, scope: !10224)
!10239 = !DILocation(line: 27, column: 22, scope: !10224)
!10240 = !DILocation(line: 30, column: 13, scope: !10224)
!10241 = !DILocation(line: 34, column: 31, scope: !10224)
!10242 = !DILocation(line: 34, column: 17, scope: !10224)
!10243 = !DILocation(line: 34, column: 10, scope: !10224)
!10244 = !DILocation(line: 34, column: 15, scope: !10224)
!10245 = !DILocation(line: 35, column: 18, scope: !10224)
!10246 = !DILocation(line: 35, column: 10, scope: !10224)
!10247 = !DILocation(line: 35, column: 16, scope: !10224)
!10248 = !DILocation(line: 36, column: 18, scope: !10224)
!10249 = !DILocation(line: 38, column: 16, scope: !10250)
!10250 = distinct !DILexicalBlock(scope: !10224, file: !2631, line: 38, column: 6)
!10251 = !DILocation(line: 38, column: 6, scope: !10224)
!10252 = !DILocation(line: 36, column: 10, scope: !10224)
!10253 = !DILocation(line: 44, column: 2, scope: !10224)
!10254 = !DILocation(line: 45, column: 1, scope: !10224)
!10255 = distinct !DISubprogram(name: "z_device_state_init", scope: !10256, file: !10256, line: 23, type: !3598, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3558, retainedNodes: !10257)
!10256 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10257 = !{!10258}
!10258 = !DILocalVariable(name: "dev", scope: !10255, file: !10256, line: 25, type: !10259)
!10259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10260, size: 32)
!10260 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10261)
!10261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !718, line: 378, size: 192, elements: !10262)
!10262 = !{!10263, !10264, !10265, !10266, !10272, !10273}
!10263 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !10261, file: !718, line: 380, baseType: !721, size: 32)
!10264 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !10261, file: !718, line: 382, baseType: !13, size: 32, offset: 32)
!10265 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !10261, file: !718, line: 384, baseType: !13, size: 32, offset: 64)
!10266 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !10261, file: !718, line: 386, baseType: !10267, size: 32, offset: 96)
!10267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10268, size: 32)
!10268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !718, line: 351, size: 16, elements: !10269)
!10269 = !{!10270, !10271}
!10270 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !10268, file: !718, line: 359, baseType: !240, size: 8)
!10271 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !10268, file: !718, line: 364, baseType: !731, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!10272 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !10261, file: !718, line: 388, baseType: !102, size: 32, offset: 128)
!10273 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !10261, file: !718, line: 396, baseType: !734, size: 32, offset: 160)
!10274 = !DILocation(line: 0, scope: !10255)
!10275 = !DILocation(line: 31, column: 1, scope: !10255)
!10276 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !10256, file: !10256, line: 33, type: !10277, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3558, retainedNodes: !10279)
!10277 = !DISubroutineType(types: !10278)
!10278 = !{!10259, !721}
!10279 = !{!10280, !10281}
!10280 = !DILocalVariable(name: "name", arg: 1, scope: !10276, file: !10256, line: 33, type: !721)
!10281 = !DILocalVariable(name: "dev", scope: !10276, file: !10256, line: 35, type: !10259)
!10282 = !DILocation(line: 0, scope: !10276)
!10283 = !DILocation(line: 40, column: 12, scope: !10284)
!10284 = distinct !DILexicalBlock(scope: !10276, file: !10256, line: 40, column: 6)
!10285 = !DILocation(line: 40, column: 21, scope: !10284)
!10286 = !DILocation(line: 40, column: 25, scope: !10284)
!10287 = !DILocation(line: 40, column: 33, scope: !10284)
!10288 = !DILocation(line: 40, column: 6, scope: !10276)
!10289 = !DILocation(line: 55, column: 2, scope: !10290)
!10290 = distinct !DILexicalBlock(scope: !10276, file: !10256, line: 55, column: 2)
!10291 = !DILocation(line: 50, column: 7, scope: !10292)
!10292 = distinct !DILexicalBlock(scope: !10293, file: !10256, line: 50, column: 7)
!10293 = distinct !DILexicalBlock(scope: !10294, file: !10256, line: 49, column: 57)
!10294 = distinct !DILexicalBlock(scope: !10295, file: !10256, line: 49, column: 2)
!10295 = distinct !DILexicalBlock(scope: !10276, file: !10256, line: 49, column: 2)
!10296 = !DILocation(line: 50, column: 30, scope: !10292)
!10297 = !DILocation(line: 50, column: 39, scope: !10292)
!10298 = !DILocation(line: 50, column: 44, scope: !10292)
!10299 = !DILocation(line: 50, column: 7, scope: !10293)
!10300 = !DILocation(line: 49, column: 53, scope: !10294)
!10301 = !DILocation(line: 49, column: 33, scope: !10294)
!10302 = !DILocation(line: 49, column: 2, scope: !10295)
!10303 = distinct !{!10303, !10302, !10304}
!10304 = !DILocation(line: 53, column: 2, scope: !10295)
!10305 = !DILocation(line: 56, column: 7, scope: !10306)
!10306 = distinct !DILexicalBlock(scope: !10307, file: !10256, line: 56, column: 7)
!10307 = distinct !DILexicalBlock(scope: !10308, file: !10256, line: 55, column: 57)
!10308 = distinct !DILexicalBlock(scope: !10290, file: !10256, line: 55, column: 2)
!10309 = !DILocation(line: 56, column: 30, scope: !10306)
!10310 = !DILocation(line: 56, column: 52, scope: !10306)
!10311 = !DILocation(line: 56, column: 34, scope: !10306)
!10312 = !DILocation(line: 56, column: 58, scope: !10306)
!10313 = !DILocation(line: 56, column: 7, scope: !10307)
!10314 = !DILocation(line: 55, column: 53, scope: !10308)
!10315 = !DILocation(line: 55, column: 33, scope: !10308)
!10316 = distinct !{!10316, !10289, !10317}
!10317 = !DILocation(line: 59, column: 2, scope: !10290)
!10318 = !DILocation(line: 62, column: 1, scope: !10276)
!10319 = distinct !DISubprogram(name: "z_device_is_ready", scope: !10256, file: !10256, line: 93, type: !10320, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3558, retainedNodes: !10322)
!10320 = !DISubroutineType(types: !10321)
!10321 = !{!731, !10259}
!10322 = !{!10323}
!10323 = !DILocalVariable(name: "dev", arg: 1, scope: !10319, file: !10256, line: 93, type: !10259)
!10324 = !DILocation(line: 0, scope: !10319)
!10325 = !DILocation(line: 99, column: 10, scope: !10326)
!10326 = distinct !DILexicalBlock(scope: !10319, file: !10256, line: 99, column: 6)
!10327 = !DILocation(line: 99, column: 6, scope: !10319)
!10328 = !DILocation(line: 103, column: 14, scope: !10319)
!10329 = !DILocation(line: 103, column: 21, scope: !10319)
!10330 = !DILocation(line: 103, column: 33, scope: !10319)
!10331 = !DILocation(line: 103, column: 49, scope: !10319)
!10332 = !DILocation(line: 103, column: 58, scope: !10319)
!10333 = !DILocation(line: 104, column: 1, scope: !10319)
!10334 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !10256, file: !10256, line: 87, type: !10335, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3558, retainedNodes: !10338)
!10335 = !DISubroutineType(types: !10336)
!10336 = !{!120, !10337}
!10337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10259, size: 32)
!10338 = !{!10339}
!10339 = !DILocalVariable(name: "devices", arg: 1, scope: !10334, file: !10256, line: 87, type: !10337)
!10340 = !DILocation(line: 0, scope: !10334)
!10341 = !DILocation(line: 89, column: 11, scope: !10334)
!10342 = !DILocation(line: 90, column: 2, scope: !10334)
!10343 = distinct !DISubprogram(name: "device_required_foreach", scope: !10256, file: !10256, line: 125, type: !10344, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3558, retainedNodes: !10350)
!10344 = !DISubroutineType(types: !10345)
!10345 = !{!103, !10259, !10346, !102}
!10346 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !718, line: 471, baseType: !10347)
!10347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10348, size: 32)
!10348 = !DISubroutineType(types: !10349)
!10349 = !{!103, !10259, !102}
!10350 = !{!10351, !10352, !10353, !10354, !10355}
!10351 = !DILocalVariable(name: "dev", arg: 1, scope: !10343, file: !10256, line: 125, type: !10259)
!10352 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !10343, file: !10256, line: 126, type: !10346)
!10353 = !DILocalVariable(name: "context", arg: 3, scope: !10343, file: !10256, line: 127, type: !102)
!10354 = !DILocalVariable(name: "handle_count", scope: !10343, file: !10256, line: 129, type: !120)
!10355 = !DILocalVariable(name: "handles", scope: !10343, file: !10256, line: 130, type: !734)
!10356 = !DILocation(line: 0, scope: !10343)
!10357 = !DILocation(line: 129, column: 2, scope: !10343)
!10358 = !DILocation(line: 129, column: 9, scope: !10343)
!10359 = !DILocation(line: 130, column: 35, scope: !10343)
!10360 = !DILocation(line: 132, column: 33, scope: !10343)
!10361 = !DILocation(line: 132, column: 9, scope: !10343)
!10362 = !DILocation(line: 133, column: 1, scope: !10343)
!10363 = !DILocation(line: 132, column: 2, scope: !10343)
!10364 = distinct !DISubprogram(name: "device_required_handles_get", scope: !718, file: !718, line: 493, type: !10365, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3558, retainedNodes: !10367)
!10365 = !DISubroutineType(types: !10366)
!10366 = !{!734, !10259, !3241}
!10367 = !{!10368, !10369, !10370, !10371}
!10368 = !DILocalVariable(name: "dev", arg: 1, scope: !10364, file: !718, line: 493, type: !10259)
!10369 = !DILocalVariable(name: "count", arg: 2, scope: !10364, file: !718, line: 493, type: !3241)
!10370 = !DILocalVariable(name: "rv", scope: !10364, file: !718, line: 495, type: !734)
!10371 = !DILocalVariable(name: "i", scope: !10372, file: !718, line: 498, type: !120)
!10372 = distinct !DILexicalBlock(scope: !10373, file: !718, line: 497, column: 18)
!10373 = distinct !DILexicalBlock(scope: !10364, file: !718, line: 497, column: 6)
!10374 = !DILocation(line: 0, scope: !10364)
!10375 = !DILocation(line: 495, column: 35, scope: !10364)
!10376 = !DILocation(line: 497, column: 9, scope: !10373)
!10377 = !DILocation(line: 497, column: 6, scope: !10364)
!10378 = !DILocation(line: 0, scope: !10372)
!10379 = !DILocation(line: 500, column: 11, scope: !10372)
!10380 = !DILocation(line: 500, column: 40, scope: !10372)
!10381 = !DILocation(line: 502, column: 4, scope: !10382)
!10382 = distinct !DILexicalBlock(scope: !10372, file: !718, line: 501, column: 40)
!10383 = distinct !{!10383, !10384, !10385}
!10384 = !DILocation(line: 500, column: 3, scope: !10372)
!10385 = !DILocation(line: 503, column: 3, scope: !10372)
!10386 = !DILocation(line: 504, column: 10, scope: !10372)
!10387 = !DILocation(line: 505, column: 2, scope: !10372)
!10388 = !DILocation(line: 507, column: 2, scope: !10364)
!10389 = distinct !DISubprogram(name: "device_visitor", scope: !10256, file: !10256, line: 106, type: !10390, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3558, retainedNodes: !10392)
!10390 = !DISubroutineType(types: !10391)
!10391 = !{!103, !734, !120, !10346, !102}
!10392 = !{!10393, !10394, !10395, !10396, !10397, !10399, !10402, !10403}
!10393 = !DILocalVariable(name: "handles", arg: 1, scope: !10389, file: !10256, line: 106, type: !734)
!10394 = !DILocalVariable(name: "handle_count", arg: 2, scope: !10389, file: !10256, line: 107, type: !120)
!10395 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !10389, file: !10256, line: 108, type: !10346)
!10396 = !DILocalVariable(name: "context", arg: 4, scope: !10389, file: !10256, line: 109, type: !102)
!10397 = !DILocalVariable(name: "i", scope: !10398, file: !10256, line: 112, type: !120)
!10398 = distinct !DILexicalBlock(scope: !10389, file: !10256, line: 112, column: 2)
!10399 = !DILocalVariable(name: "dh", scope: !10400, file: !10256, line: 113, type: !736)
!10400 = distinct !DILexicalBlock(scope: !10401, file: !10256, line: 112, column: 44)
!10401 = distinct !DILexicalBlock(scope: !10398, file: !10256, line: 112, column: 2)
!10402 = !DILocalVariable(name: "rdev", scope: !10400, file: !10256, line: 114, type: !10259)
!10403 = !DILocalVariable(name: "rc", scope: !10400, file: !10256, line: 115, type: !103)
!10404 = !DILocation(line: 0, scope: !10389)
!10405 = !DILocation(line: 0, scope: !10398)
!10406 = !DILocation(line: 112, column: 23, scope: !10401)
!10407 = !DILocation(line: 112, column: 2, scope: !10398)
!10408 = distinct !{!10408, !10407, !10409}
!10409 = !DILocation(line: 120, column: 2, scope: !10398)
!10410 = !DILocation(line: 113, column: 24, scope: !10400)
!10411 = !DILocation(line: 0, scope: !10400)
!10412 = !DILocation(line: 114, column: 31, scope: !10400)
!10413 = !DILocation(line: 115, column: 12, scope: !10400)
!10414 = !DILocation(line: 117, column: 10, scope: !10415)
!10415 = distinct !DILexicalBlock(scope: !10400, file: !10256, line: 117, column: 7)
!10416 = !DILocation(line: 112, column: 39, scope: !10401)
!10417 = !DILocation(line: 123, column: 1, scope: !10389)
!10418 = distinct !DISubprogram(name: "device_from_handle", scope: !718, file: !718, line: 439, type: !10419, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3558, retainedNodes: !10421)
!10419 = !DISubroutineType(types: !10420)
!10420 = !{!10259, !736}
!10421 = !{!10422, !10423, !10424}
!10422 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !10418, file: !718, line: 439, type: !736)
!10423 = !DILocalVariable(name: "dev", scope: !10418, file: !718, line: 443, type: !10259)
!10424 = !DILocalVariable(name: "numdev", scope: !10418, file: !718, line: 444, type: !120)
!10425 = !DILocation(line: 0, scope: !10418)
!10426 = !DILocation(line: 446, column: 7, scope: !10427)
!10427 = distinct !DILexicalBlock(scope: !10418, file: !718, line: 446, column: 6)
!10428 = !DILocation(line: 446, column: 18, scope: !10427)
!10429 = !DILocation(line: 446, column: 23, scope: !10427)
!10430 = !DILocation(line: 450, column: 2, scope: !10418)
!10431 = distinct !DISubprogram(name: "device_supported_foreach", scope: !10256, file: !10256, line: 135, type: !10344, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3558, retainedNodes: !10432)
!10432 = !{!10433, !10434, !10435, !10436, !10437}
!10433 = !DILocalVariable(name: "dev", arg: 1, scope: !10431, file: !10256, line: 135, type: !10259)
!10434 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !10431, file: !10256, line: 136, type: !10346)
!10435 = !DILocalVariable(name: "context", arg: 3, scope: !10431, file: !10256, line: 137, type: !102)
!10436 = !DILocalVariable(name: "handle_count", scope: !10431, file: !10256, line: 139, type: !120)
!10437 = !DILocalVariable(name: "handles", scope: !10431, file: !10256, line: 140, type: !734)
!10438 = !DILocation(line: 0, scope: !10431)
!10439 = !DILocation(line: 139, column: 2, scope: !10431)
!10440 = !DILocation(line: 139, column: 9, scope: !10431)
!10441 = !DILocation(line: 140, column: 35, scope: !10431)
!10442 = !DILocation(line: 142, column: 33, scope: !10431)
!10443 = !DILocation(line: 142, column: 9, scope: !10431)
!10444 = !DILocation(line: 143, column: 1, scope: !10431)
!10445 = !DILocation(line: 142, column: 2, scope: !10431)
!10446 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !718, file: !718, line: 573, type: !10365, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3558, retainedNodes: !10447)
!10447 = !{!10448, !10449, !10450, !10451, !10452}
!10448 = !DILocalVariable(name: "dev", arg: 1, scope: !10446, file: !718, line: 573, type: !10259)
!10449 = !DILocalVariable(name: "count", arg: 2, scope: !10446, file: !718, line: 573, type: !3241)
!10450 = !DILocalVariable(name: "rv", scope: !10446, file: !718, line: 575, type: !734)
!10451 = !DILocalVariable(name: "region", scope: !10446, file: !718, line: 576, type: !120)
!10452 = !DILocalVariable(name: "i", scope: !10446, file: !718, line: 577, type: !120)
!10453 = !DILocation(line: 0, scope: !10446)
!10454 = !DILocation(line: 575, column: 35, scope: !10446)
!10455 = !DILocation(line: 579, column: 9, scope: !10456)
!10456 = distinct !DILexicalBlock(scope: !10446, file: !718, line: 579, column: 6)
!10457 = !DILocation(line: 579, column: 6, scope: !10446)
!10458 = !DILocation(line: 582, column: 8, scope: !10459)
!10459 = distinct !DILexicalBlock(scope: !10460, file: !718, line: 582, column: 8)
!10460 = distinct !DILexicalBlock(scope: !10461, file: !718, line: 581, column: 23)
!10461 = distinct !DILexicalBlock(scope: !10456, file: !718, line: 579, column: 18)
!10462 = !DILocation(line: 582, column: 12, scope: !10459)
!10463 = !DILocation(line: 585, column: 6, scope: !10460)
!10464 = !DILocation(line: 0, scope: !10461)
!10465 = !DILocation(line: 581, column: 17, scope: !10461)
!10466 = !DILocation(line: 581, column: 3, scope: !10461)
!10467 = !DILocation(line: 588, column: 10, scope: !10461)
!10468 = !DILocation(line: 588, column: 16, scope: !10461)
!10469 = !DILocation(line: 589, column: 4, scope: !10470)
!10470 = distinct !DILexicalBlock(scope: !10461, file: !718, line: 588, column: 39)
!10471 = !DILocation(line: 588, column: 3, scope: !10461)
!10472 = distinct !{!10472, !10471, !10473}
!10473 = !DILocation(line: 590, column: 3, scope: !10461)
!10474 = !DILocation(line: 591, column: 10, scope: !10461)
!10475 = !DILocation(line: 592, column: 2, scope: !10461)
!10476 = !DILocation(line: 575, column: 25, scope: !10446)
!10477 = !DILocation(line: 594, column: 2, scope: !10446)
!10478 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !2639, file: !2639, line: 49, type: !10479, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2636, retainedNodes: !162)
!10479 = !DISubroutineType(types: !10480)
!10480 = !{!3235}
!10481 = !DILocation(line: 51, column: 10, scope: !10478)
!10482 = !DILocation(line: 51, column: 20, scope: !10478)
!10483 = !DILocation(line: 51, column: 2, scope: !10478)
!10484 = distinct !DISubprogram(name: "coredump", scope: !3565, file: !3565, line: 209, type: !10485, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3561, retainedNodes: !10631)
!10485 = !DISubroutineType(types: !10486)
!10486 = !{null, !32, !10487, !10531}
!10487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10488, size: 32)
!10488 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10489)
!10489 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !3369, line: 141, baseType: !10490)
!10490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !3369, line: 97, size: 256, elements: !10491)
!10491 = !{!10492}
!10492 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !10490, file: !3369, line: 107, baseType: !10493, size: 256)
!10493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3369, line: 98, size: 256, elements: !10494)
!10494 = !{!10495, !10500, !10505, !10510, !10515, !10520, !10525, !10530}
!10495 = !DIDerivedType(tag: DW_TAG_member, scope: !10493, file: !3369, line: 99, baseType: !10496, size: 32)
!10496 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10493, file: !3369, line: 99, size: 32, elements: !10497)
!10497 = !{!10498, !10499}
!10498 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !10496, file: !3369, line: 99, baseType: !137, size: 32)
!10499 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !10496, file: !3369, line: 99, baseType: !137, size: 32)
!10500 = !DIDerivedType(tag: DW_TAG_member, scope: !10493, file: !3369, line: 100, baseType: !10501, size: 32, offset: 32)
!10501 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10493, file: !3369, line: 100, size: 32, elements: !10502)
!10502 = !{!10503, !10504}
!10503 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !10501, file: !3369, line: 100, baseType: !137, size: 32)
!10504 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !10501, file: !3369, line: 100, baseType: !137, size: 32)
!10505 = !DIDerivedType(tag: DW_TAG_member, scope: !10493, file: !3369, line: 101, baseType: !10506, size: 32, offset: 64)
!10506 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10493, file: !3369, line: 101, size: 32, elements: !10507)
!10507 = !{!10508, !10509}
!10508 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !10506, file: !3369, line: 101, baseType: !137, size: 32)
!10509 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !10506, file: !3369, line: 101, baseType: !137, size: 32)
!10510 = !DIDerivedType(tag: DW_TAG_member, scope: !10493, file: !3369, line: 102, baseType: !10511, size: 32, offset: 96)
!10511 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10493, file: !3369, line: 102, size: 32, elements: !10512)
!10512 = !{!10513, !10514}
!10513 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !10511, file: !3369, line: 102, baseType: !137, size: 32)
!10514 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !10511, file: !3369, line: 102, baseType: !137, size: 32)
!10515 = !DIDerivedType(tag: DW_TAG_member, scope: !10493, file: !3369, line: 103, baseType: !10516, size: 32, offset: 128)
!10516 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10493, file: !3369, line: 103, size: 32, elements: !10517)
!10517 = !{!10518, !10519}
!10518 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !10516, file: !3369, line: 103, baseType: !137, size: 32)
!10519 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !10516, file: !3369, line: 103, baseType: !137, size: 32)
!10520 = !DIDerivedType(tag: DW_TAG_member, scope: !10493, file: !3369, line: 104, baseType: !10521, size: 32, offset: 160)
!10521 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10493, file: !3369, line: 104, size: 32, elements: !10522)
!10522 = !{!10523, !10524}
!10523 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !10521, file: !3369, line: 104, baseType: !137, size: 32)
!10524 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !10521, file: !3369, line: 104, baseType: !137, size: 32)
!10525 = !DIDerivedType(tag: DW_TAG_member, scope: !10493, file: !3369, line: 105, baseType: !10526, size: 32, offset: 192)
!10526 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10493, file: !3369, line: 105, size: 32, elements: !10527)
!10527 = !{!10528, !10529}
!10528 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !10526, file: !3369, line: 105, baseType: !137, size: 32)
!10529 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !10526, file: !3369, line: 105, baseType: !137, size: 32)
!10530 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !10493, file: !3369, line: 106, baseType: !137, size: 32, offset: 224)
!10531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10532, size: 32)
!10532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !754, line: 245, size: 1024, elements: !10533)
!10533 = !{!10534, !10592, !10604, !10605, !10606, !10607, !10613, !10626}
!10534 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !10532, file: !754, line: 247, baseType: !10535, size: 384)
!10535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !754, line: 57, size: 384, elements: !10536)
!10536 = !{!10537, !10561, !10568, !10569, !10570, !10579, !10580, !10581}
!10537 = !DIDerivedType(tag: DW_TAG_member, scope: !10535, file: !754, line: 60, baseType: !10538, size: 64)
!10538 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10535, file: !754, line: 60, size: 64, elements: !10539)
!10539 = !{!10540, !10555}
!10540 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !10538, file: !754, line: 61, baseType: !10541, size: 64)
!10541 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !764, line: 49, baseType: !10542)
!10542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !764, line: 37, size: 64, elements: !10543)
!10543 = !{!10544, !10550}
!10544 = !DIDerivedType(tag: DW_TAG_member, scope: !10542, file: !764, line: 38, baseType: !10545, size: 32)
!10545 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10542, file: !764, line: 38, size: 32, elements: !10546)
!10546 = !{!10547, !10549}
!10547 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10545, file: !764, line: 39, baseType: !10548, size: 32)
!10548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10542, size: 32)
!10549 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10545, file: !764, line: 40, baseType: !10548, size: 32)
!10550 = !DIDerivedType(tag: DW_TAG_member, scope: !10542, file: !764, line: 42, baseType: !10551, size: 32, offset: 32)
!10551 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10542, file: !764, line: 42, size: 32, elements: !10552)
!10552 = !{!10553, !10554}
!10553 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10551, file: !764, line: 43, baseType: !10548, size: 32)
!10554 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !10551, file: !764, line: 44, baseType: !10548, size: 32)
!10555 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !10538, file: !754, line: 62, baseType: !10556, size: 64)
!10556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !780, line: 49, size: 64, elements: !10557)
!10557 = !{!10558}
!10558 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !10556, file: !780, line: 50, baseType: !10559, size: 64)
!10559 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10560, size: 64, elements: !564)
!10560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10556, size: 32)
!10561 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !10535, file: !754, line: 68, baseType: !10562, size: 32, offset: 64)
!10562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10563, size: 32)
!10563 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !788, line: 233, baseType: !10564)
!10564 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !788, line: 231, size: 64, elements: !10565)
!10565 = !{!10566}
!10566 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !10564, file: !788, line: 232, baseType: !10567, size: 64)
!10567 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !764, line: 48, baseType: !10542)
!10568 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !10535, file: !754, line: 71, baseType: !240, size: 8, offset: 96)
!10569 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !10535, file: !754, line: 74, baseType: !240, size: 8, offset: 104)
!10570 = !DIDerivedType(tag: DW_TAG_member, scope: !10535, file: !754, line: 90, baseType: !10571, size: 16, offset: 112)
!10571 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10535, file: !754, line: 90, size: 16, elements: !10572)
!10572 = !{!10573, !10578}
!10573 = !DIDerivedType(tag: DW_TAG_member, scope: !10571, file: !754, line: 91, baseType: !10574, size: 16)
!10574 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10571, file: !754, line: 91, size: 16, elements: !10575)
!10575 = !{!10576, !10577}
!10576 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !10574, file: !754, line: 96, baseType: !802, size: 8)
!10577 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !10574, file: !754, line: 97, baseType: !240, size: 8, offset: 8)
!10578 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !10571, file: !754, line: 100, baseType: !151, size: 16)
!10579 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !10535, file: !754, line: 107, baseType: !137, size: 32, offset: 128)
!10580 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !10535, file: !754, line: 127, baseType: !102, size: 32, offset: 160)
!10581 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !10535, file: !754, line: 131, baseType: !10582, size: 192, offset: 192)
!10582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !788, line: 244, size: 192, elements: !10583)
!10583 = !{!10584, !10585, !10591}
!10584 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !10582, file: !788, line: 245, baseType: !10541, size: 64)
!10585 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !10582, file: !788, line: 246, baseType: !10586, size: 32, offset: 64)
!10586 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !788, line: 242, baseType: !10587)
!10587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10588, size: 32)
!10588 = !DISubroutineType(types: !10589)
!10589 = !{null, !10590}
!10590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10582, size: 32)
!10591 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !10582, file: !788, line: 249, baseType: !819, size: 64, offset: 128)
!10592 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !10532, file: !754, line: 250, baseType: !10593, size: 288, offset: 384)
!10593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !823, line: 25, size: 288, elements: !10594)
!10594 = !{!10595, !10596, !10597, !10598, !10599, !10600, !10601, !10602, !10603}
!10595 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !10593, file: !823, line: 26, baseType: !137, size: 32)
!10596 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !10593, file: !823, line: 27, baseType: !137, size: 32, offset: 32)
!10597 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !10593, file: !823, line: 28, baseType: !137, size: 32, offset: 64)
!10598 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !10593, file: !823, line: 29, baseType: !137, size: 32, offset: 96)
!10599 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !10593, file: !823, line: 30, baseType: !137, size: 32, offset: 128)
!10600 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !10593, file: !823, line: 31, baseType: !137, size: 32, offset: 160)
!10601 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !10593, file: !823, line: 32, baseType: !137, size: 32, offset: 192)
!10602 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !10593, file: !823, line: 33, baseType: !137, size: 32, offset: 224)
!10603 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !10593, file: !823, line: 34, baseType: !137, size: 32, offset: 256)
!10604 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !10532, file: !754, line: 253, baseType: !102, size: 32, offset: 672)
!10605 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !10532, file: !754, line: 256, baseType: !10563, size: 64, offset: 704)
!10606 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !10532, file: !754, line: 294, baseType: !103, size: 32, offset: 768)
!10607 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !10532, file: !754, line: 300, baseType: !10608, size: 96, offset: 800)
!10608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !754, line: 149, size: 96, elements: !10609)
!10609 = !{!10610, !10611, !10612}
!10610 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !10608, file: !754, line: 153, baseType: !22, size: 32)
!10611 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !10608, file: !754, line: 162, baseType: !120, size: 32, offset: 32)
!10612 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !10608, file: !754, line: 168, baseType: !120, size: 32, offset: 64)
!10613 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !10532, file: !754, line: 325, baseType: !10614, size: 32, offset: 896)
!10614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10615, size: 32)
!10615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !846, line: 5073, size: 160, elements: !10616)
!10616 = !{!10617, !10623, !10624}
!10617 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !10615, file: !846, line: 5074, baseType: !10618, size: 96)
!10618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !10619)
!10619 = !{!10620, !10621, !10622}
!10620 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !10618, file: !113, line: 57, baseType: !116, size: 32)
!10621 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !10618, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!10622 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !10618, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!10623 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !10615, file: !846, line: 5075, baseType: !10563, size: 64, offset: 96)
!10624 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10615, file: !846, line: 5076, baseType: !10625, offset: 160)
!10625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !857, line: 43, elements: !162)
!10626 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !10532, file: !754, line: 343, baseType: !10627, size: 64, offset: 928)
!10627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !823, line: 60, size: 64, elements: !10628)
!10628 = !{!10629, !10630}
!10629 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !10627, file: !823, line: 63, baseType: !137, size: 32)
!10630 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !10627, file: !823, line: 66, baseType: !137, size: 32, offset: 32)
!10631 = !{!10632, !10633, !10634}
!10632 = !DILocalVariable(name: "reason", arg: 1, scope: !10484, file: !3565, line: 209, type: !32)
!10633 = !DILocalVariable(name: "esf", arg: 2, scope: !10484, file: !3565, line: 209, type: !10487)
!10634 = !DILocalVariable(name: "thread", arg: 3, scope: !10484, file: !3565, line: 210, type: !10531)
!10635 = !DILocation(line: 0, scope: !10484)
!10636 = !DILocation(line: 212, column: 1, scope: !10484)
!10637 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3565, file: !3565, line: 214, type: !10638, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3561, retainedNodes: !10640)
!10638 = !DISubroutineType(types: !10639)
!10639 = !{null, !22, !22}
!10640 = !{!10641, !10642}
!10641 = !DILocalVariable(name: "start_addr", arg: 1, scope: !10637, file: !3565, line: 214, type: !22)
!10642 = !DILocalVariable(name: "end_addr", arg: 2, scope: !10637, file: !3565, line: 214, type: !22)
!10643 = !DILocation(line: 0, scope: !10637)
!10644 = !DILocation(line: 216, column: 1, scope: !10637)
!10645 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3565, file: !3565, line: 218, type: !10646, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3561, retainedNodes: !10648)
!10646 = !DISubroutineType(types: !10647)
!10647 = !{null, !1566, !120}
!10648 = !{!10649, !10650}
!10649 = !DILocalVariable(name: "buf", arg: 1, scope: !10645, file: !3565, line: 218, type: !1566)
!10650 = !DILocalVariable(name: "buflen", arg: 2, scope: !10645, file: !3565, line: 218, type: !120)
!10651 = !DILocation(line: 0, scope: !10645)
!10652 = !DILocation(line: 220, column: 1, scope: !10645)
!10653 = distinct !DISubprogram(name: "coredump_query", scope: !3565, file: !3565, line: 222, type: !10654, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3561, retainedNodes: !10656)
!10654 = !DISubroutineType(types: !10655)
!10655 = !{!103, !3564, !102}
!10656 = !{!10657, !10658}
!10657 = !DILocalVariable(name: "query_id", arg: 1, scope: !10653, file: !3565, line: 222, type: !3564)
!10658 = !DILocalVariable(name: "arg", arg: 2, scope: !10653, file: !3565, line: 222, type: !102)
!10659 = !DILocation(line: 0, scope: !10653)
!10660 = !DILocation(line: 224, column: 2, scope: !10653)
!10661 = distinct !DISubprogram(name: "coredump_cmd", scope: !3565, file: !3565, line: 227, type: !10662, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3561, retainedNodes: !10664)
!10662 = !DISubroutineType(types: !10663)
!10663 = !{!103, !3571, !102}
!10664 = !{!10665, !10666}
!10665 = !DILocalVariable(name: "query_id", arg: 1, scope: !10661, file: !3565, line: 227, type: !3571)
!10666 = !DILocalVariable(name: "arg", arg: 2, scope: !10661, file: !3565, line: 227, type: !102)
!10667 = !DILocation(line: 0, scope: !10661)
!10668 = !DILocation(line: 229, column: 2, scope: !10661)
!10669 = distinct !DISubprogram(name: "arch_system_halt", scope: !10670, file: !10670, line: 23, type: !7163, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3561, retainedNodes: !10671)
!10670 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10671 = !{!10672}
!10672 = !DILocalVariable(name: "reason", arg: 1, scope: !10669, file: !10670, line: 23, type: !32)
!10673 = !DILocation(line: 0, scope: !10669)
!10674 = !DILocation(line: 55, column: 2, scope: !10675, inlinedAt: !10679)
!10675 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7145, file: !7145, line: 42, type: !7146, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3561, retainedNodes: !10676)
!10676 = !{!10677, !10678}
!10677 = !DILocalVariable(name: "key", scope: !10675, file: !7145, line: 44, type: !32)
!10678 = !DILocalVariable(name: "tmp", scope: !10675, file: !7145, line: 53, type: !32)
!10679 = distinct !DILocation(line: 31, column: 8, scope: !10669)
!10680 = !{i64 1620053}
!10681 = !DILocation(line: 0, scope: !10675, inlinedAt: !10679)
!10682 = !DILocation(line: 32, column: 2, scope: !10669)
!10683 = !DILocation(line: 32, column: 2, scope: !10684)
!10684 = distinct !DILexicalBlock(scope: !10685, file: !10670, line: 32, column: 2)
!10685 = distinct !DILexicalBlock(scope: !10669, file: !10670, line: 32, column: 2)
!10686 = distinct !{!10686, !10687, !10688}
!10687 = !DILocation(line: 32, column: 2, scope: !10685)
!10688 = !DILocation(line: 34, column: 2, scope: !10685)
!10689 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !10670, file: !10670, line: 39, type: !10690, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3561, retainedNodes: !10692)
!10690 = !DISubroutineType(types: !10691)
!10691 = !{null, !32, !10487}
!10692 = !{!10693, !10694}
!10693 = !DILocalVariable(name: "reason", arg: 1, scope: !10689, file: !10670, line: 39, type: !32)
!10694 = !DILocalVariable(name: "esf", arg: 2, scope: !10689, file: !10670, line: 40, type: !10487)
!10695 = !DILocation(line: 0, scope: !10689)
!10696 = !DILocation(line: 46, column: 2, scope: !10689)
!10697 = distinct !DISubprogram(name: "k_fatal_halt", scope: !10670, file: !10670, line: 81, type: !7163, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3561, retainedNodes: !10698)
!10698 = !{!10699}
!10699 = !DILocalVariable(name: "reason", arg: 1, scope: !10697, file: !10670, line: 81, type: !32)
!10700 = !DILocation(line: 0, scope: !10697)
!10701 = !DILocation(line: 83, column: 2, scope: !10697)
!10702 = distinct !DISubprogram(name: "z_fatal_error", scope: !10670, file: !10670, line: 96, type: !10690, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3561, retainedNodes: !10703)
!10703 = !{!10704, !10705, !10706, !10707}
!10704 = !DILocalVariable(name: "reason", arg: 1, scope: !10702, file: !10670, line: 96, type: !32)
!10705 = !DILocalVariable(name: "esf", arg: 2, scope: !10702, file: !10670, line: 96, type: !10487)
!10706 = !DILocalVariable(name: "key", scope: !10702, file: !10670, line: 102, type: !32)
!10707 = !DILocalVariable(name: "thread", scope: !10702, file: !10670, line: 103, type: !10531)
!10708 = !DILocation(line: 0, scope: !10702)
!10709 = !DILocation(line: 55, column: 2, scope: !10675, inlinedAt: !10710)
!10710 = distinct !DILocation(line: 102, column: 21, scope: !10702)
!10711 = !DILocation(line: 0, scope: !10675, inlinedAt: !10710)
!10712 = !DILocation(line: 119, column: 11, scope: !10713)
!10713 = distinct !DILexicalBlock(scope: !10702, file: !10670, line: 119, column: 6)
!10714 = !DILocation(line: 119, column: 20, scope: !10713)
!10715 = !DILocation(line: 131, column: 2, scope: !10702)
!10716 = !DILocation(line: 151, column: 7, scope: !10717)
!10717 = distinct !DILexicalBlock(scope: !10718, file: !10670, line: 146, column: 32)
!10718 = distinct !DILexicalBlock(scope: !10702, file: !10670, line: 146, column: 6)
!10719 = !DILocation(line: 151, column: 21, scope: !10720)
!10720 = distinct !DILexicalBlock(scope: !10717, file: !10670, line: 151, column: 7)
!10721 = !DILocation(line: 104, column: 4, scope: !10702)
!10722 = !DILocalVariable(name: "key", arg: 1, scope: !10723, file: !7145, line: 84, type: !32)
!10723 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7145, file: !7145, line: 84, type: !7163, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3561, retainedNodes: !10724)
!10724 = !{!10722}
!10725 = !DILocation(line: 0, scope: !10723, inlinedAt: !10726)
!10726 = distinct !DILocation(line: 186, column: 2, scope: !10702)
!10727 = !DILocation(line: 95, column: 2, scope: !10723, inlinedAt: !10726)
!10728 = !{i64 1620870}
!10729 = !DILocation(line: 189, column: 3, scope: !10730)
!10730 = distinct !DILexicalBlock(scope: !10731, file: !10670, line: 188, column: 41)
!10731 = distinct !DILexicalBlock(scope: !10702, file: !10670, line: 188, column: 6)
!10732 = !DILocation(line: 191, column: 1, scope: !10702)
!10733 = distinct !DISubprogram(name: "k_current_get", scope: !846, file: !846, line: 530, type: !10734, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3561, retainedNodes: !162)
!10734 = !DISubroutineType(types: !10735)
!10735 = !{!10736}
!10736 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !754, line: 347, baseType: !10531)
!10737 = !DILocation(line: 535, column: 9, scope: !10733)
!10738 = !DILocation(line: 535, column: 2, scope: !10733)
!10739 = distinct !DISubprogram(name: "k_thread_abort", scope: !4048, file: !4048, line: 188, type: !10740, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3561, retainedNodes: !10742)
!10740 = !DISubroutineType(types: !10741)
!10741 = !{null, !10736}
!10742 = !{!10743}
!10743 = !DILocalVariable(name: "thread", arg: 1, scope: !10739, file: !4048, line: 188, type: !10736)
!10744 = !DILocation(line: 0, scope: !10739)
!10745 = !DILocation(line: 197, column: 2, scope: !10746)
!10746 = distinct !DILexicalBlock(scope: !10739, file: !4048, line: 197, column: 2)
!10747 = !{i64 2152644542}
!10748 = !DILocation(line: 198, column: 2, scope: !10739)
!10749 = !DILocation(line: 199, column: 1, scope: !10739)
!10750 = distinct !DISubprogram(name: "z_current_get", scope: !4048, file: !4048, line: 173, type: !10734, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3561, retainedNodes: !162)
!10751 = !DILocation(line: 180, column: 2, scope: !10752)
!10752 = distinct !DILexicalBlock(scope: !10750, file: !4048, line: 180, column: 2)
!10753 = !{i64 2152644474}
!10754 = !DILocation(line: 181, column: 9, scope: !10750)
!10755 = !DILocation(line: 181, column: 2, scope: !10750)
!10756 = distinct !DISubprogram(name: "z_early_memset", scope: !2646, file: !2646, line: 108, type: !10757, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2642, retainedNodes: !10759)
!10757 = !DISubroutineType(types: !10758)
!10758 = !{null, !102, !103, !120}
!10759 = !{!10760, !10761, !10762}
!10760 = !DILocalVariable(name: "dst", arg: 1, scope: !10756, file: !2646, line: 108, type: !102)
!10761 = !DILocalVariable(name: "c", arg: 2, scope: !10756, file: !2646, line: 108, type: !103)
!10762 = !DILocalVariable(name: "n", arg: 3, scope: !10756, file: !2646, line: 108, type: !120)
!10763 = !DILocation(line: 0, scope: !10756)
!10764 = !DILocation(line: 110, column: 9, scope: !10756)
!10765 = !DILocation(line: 111, column: 1, scope: !10756)
!10766 = distinct !DISubprogram(name: "z_early_memcpy", scope: !2646, file: !2646, line: 121, type: !10767, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2642, retainedNodes: !10769)
!10767 = !DISubroutineType(types: !10768)
!10768 = !{null, !102, !13, !120}
!10769 = !{!10770, !10771, !10772}
!10770 = !DILocalVariable(name: "dst", arg: 1, scope: !10766, file: !2646, line: 121, type: !102)
!10771 = !DILocalVariable(name: "src", arg: 2, scope: !10766, file: !2646, line: 121, type: !13)
!10772 = !DILocalVariable(name: "n", arg: 3, scope: !10766, file: !2646, line: 121, type: !120)
!10773 = !DILocation(line: 0, scope: !10766)
!10774 = !DILocation(line: 123, column: 9, scope: !10766)
!10775 = !DILocation(line: 124, column: 1, scope: !10766)
!10776 = distinct !DISubprogram(name: "z_bss_zero", scope: !2646, file: !2646, line: 132, type: !3598, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2642, retainedNodes: !162)
!10777 = !DILocation(line: 143, column: 2, scope: !10776)
!10778 = !DILocation(line: 168, column: 1, scope: !10776)
!10779 = distinct !DISubprogram(name: "z_init_cpu", scope: !2646, file: !2646, line: 372, type: !10780, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2642, retainedNodes: !10782)
!10780 = !DISubroutineType(types: !10781)
!10781 = !{null, !103}
!10782 = !{!10783}
!10783 = !DILocalVariable(name: "id", arg: 1, scope: !10779, file: !2646, line: 372, type: !103)
!10784 = !DILocation(line: 0, scope: !10779)
!10785 = !DILocation(line: 374, column: 2, scope: !10779)
!10786 = !DILocation(line: 375, column: 34, scope: !10779)
!10787 = !DILocation(line: 375, column: 19, scope: !10779)
!10788 = !DILocation(line: 375, column: 31, scope: !10779)
!10789 = !DILocation(line: 376, column: 24, scope: !10779)
!10790 = !DILocation(line: 376, column: 19, scope: !10779)
!10791 = !DILocation(line: 376, column: 22, scope: !10779)
!10792 = !DILocation(line: 378, column: 26, scope: !10779)
!10793 = !DILocation(line: 378, column: 4, scope: !10779)
!10794 = !DILocation(line: 378, column: 50, scope: !10779)
!10795 = !DILocation(line: 377, column: 19, scope: !10779)
!10796 = !DILocation(line: 377, column: 29, scope: !10779)
!10797 = !DILocation(line: 384, column: 1, scope: !10779)
!10798 = distinct !DISubprogram(name: "init_idle_thread", scope: !2646, file: !2646, line: 343, type: !10780, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2642, retainedNodes: !10799)
!10799 = !{!10800, !10801, !10802, !10805}
!10800 = !DILocalVariable(name: "i", arg: 1, scope: !10798, file: !2646, line: 343, type: !103)
!10801 = !DILocalVariable(name: "thread", scope: !10798, file: !2646, line: 345, type: !2739)
!10802 = !DILocalVariable(name: "stack", scope: !10798, file: !2646, line: 346, type: !10803)
!10803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10804, size: 32)
!10804 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3927, line: 44, baseType: !2853)
!10805 = !DILocalVariable(name: "tname", scope: !10798, file: !2646, line: 358, type: !2684)
!10806 = !DILocation(line: 0, scope: !10798)
!10807 = !DILocation(line: 345, column: 29, scope: !10798)
!10808 = !DILocation(line: 346, column: 28, scope: !10798)
!10809 = !DILocation(line: 362, column: 37, scope: !10798)
!10810 = !DILocation(line: 362, column: 36, scope: !10798)
!10811 = !DILocation(line: 361, column: 2, scope: !10798)
!10812 = !DILocation(line: 365, column: 2, scope: !10798)
!10813 = !DILocation(line: 370, column: 1, scope: !10798)
!10814 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2854, file: !2854, line: 331, type: !10815, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2642, retainedNodes: !10817)
!10815 = !DISubroutineType(types: !10816)
!10816 = !{!2684, !10803}
!10817 = !{!10818}
!10818 = !DILocalVariable(name: "sym", arg: 1, scope: !10814, file: !2854, line: 331, type: !10803)
!10819 = !DILocation(line: 0, scope: !10814)
!10820 = !DILocation(line: 333, column: 9, scope: !10814)
!10821 = !DILocation(line: 333, column: 2, scope: !10814)
!10822 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !10823, file: !10823, line: 155, type: !10824, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2642, retainedNodes: !10826)
!10823 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10824 = !DISubroutineType(types: !10825)
!10825 = !{null, !2739}
!10826 = !{!10827}
!10827 = !DILocalVariable(name: "thread", arg: 1, scope: !10822, file: !10823, line: 155, type: !2739)
!10828 = !DILocation(line: 0, scope: !10822)
!10829 = !DILocation(line: 157, column: 15, scope: !10822)
!10830 = !DILocation(line: 157, column: 28, scope: !10822)
!10831 = !DILocation(line: 158, column: 1, scope: !10822)
!10832 = distinct !DISubprogram(name: "z_cstart", scope: !2646, file: !2646, line: 501, type: !3598, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2642, retainedNodes: !10833)
!10833 = !{!10834}
!10834 = !DILocalVariable(name: "dummy_thread", scope: !10832, file: !2646, line: 518, type: !2740)
!10835 = !DILocation(line: 507, column: 2, scope: !10832)
!10836 = !DILocation(line: 43, column: 14, scope: !10837, inlinedAt: !10841)
!10837 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !10838, file: !10838, line: 40, type: !3598, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2642, retainedNodes: !10839)
!10838 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10839 = !{!10840}
!10840 = !DILocalVariable(name: "msp", scope: !10837, file: !10838, line: 42, type: !137)
!10841 = distinct !DILocation(line: 44, column: 2, scope: !10842, inlinedAt: !10844)
!10842 = distinct !DISubprogram(name: "arch_kernel_init", scope: !10843, file: !10843, line: 42, type: !3598, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2642, retainedNodes: !162)
!10843 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10844 = distinct !DILocation(line: 510, column: 2, scope: !10832)
!10845 = !DILocation(line: 43, column: 3, scope: !10837, inlinedAt: !10841)
!10846 = !DILocation(line: 43, column: 60, scope: !10837, inlinedAt: !10841)
!10847 = !DILocation(line: 0, scope: !10837, inlinedAt: !10841)
!10848 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !10849, file: !7386, line: 1153, type: !137)
!10849 = distinct !DISubprogram(name: "__set_MSP", scope: !7386, file: !7386, line: 1153, type: !7475, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2642, retainedNodes: !10850)
!10850 = !{!10848}
!10851 = !DILocation(line: 0, scope: !10849, inlinedAt: !10852)
!10852 = distinct !DILocation(line: 46, column: 2, scope: !10837, inlinedAt: !10841)
!10853 = !DILocation(line: 1155, column: 3, scope: !10849, inlinedAt: !10852)
!10854 = !{i64 1917581}
!10855 = !DILocation(line: 62, column: 11, scope: !10837, inlinedAt: !10841)
!10856 = !DILocation(line: 102, column: 2, scope: !10857, inlinedAt: !10858)
!10857 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !8130, file: !8130, line: 97, type: !3598, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2642, retainedNodes: !162)
!10858 = distinct !DILocation(line: 45, column: 2, scope: !10842, inlinedAt: !10844)
!10859 = !DILocation(line: 108, column: 2, scope: !10857, inlinedAt: !10858)
!10860 = !DILocation(line: 112, column: 2, scope: !10857, inlinedAt: !10858)
!10861 = !DILocation(line: 113, column: 2, scope: !10857, inlinedAt: !10858)
!10862 = !DILocation(line: 114, column: 2, scope: !10857, inlinedAt: !10858)
!10863 = !DILocation(line: 116, column: 2, scope: !10857, inlinedAt: !10858)
!10864 = !DILocation(line: 123, column: 13, scope: !10857, inlinedAt: !10858)
!10865 = !DILocation(line: 46, column: 2, scope: !10842, inlinedAt: !10844)
!10866 = !DILocation(line: 47, column: 2, scope: !10842, inlinedAt: !10844)
!10867 = !DILocation(line: 174, column: 12, scope: !10868, inlinedAt: !10869)
!10868 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !8130, file: !8130, line: 169, type: !3598, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2642, retainedNodes: !162)
!10869 = distinct !DILocation(line: 48, column: 2, scope: !10842, inlinedAt: !10844)
!10870 = !DILocation(line: 179, column: 12, scope: !10868, inlinedAt: !10869)
!10871 = !DILocation(line: 50, column: 2, scope: !10842, inlinedAt: !10844)
!10872 = !DILocation(line: 57, column: 2, scope: !10842, inlinedAt: !10844)
!10873 = !DILocation(line: 518, column: 2, scope: !10832)
!10874 = !DILocation(line: 518, column: 18, scope: !10832)
!10875 = !DILocation(line: 520, column: 2, scope: !10832)
!10876 = !DILocation(line: 523, column: 2, scope: !10832)
!10877 = !DILocation(line: 526, column: 2, scope: !10832)
!10878 = !DILocation(line: 527, column: 2, scope: !10832)
!10879 = !DILocation(line: 543, column: 24, scope: !10832)
!10880 = !DILocation(line: 543, column: 2, scope: !10832)
!10881 = !DILocation(line: 0, scope: !2873)
!10882 = !DILocation(line: 246, column: 15, scope: !2891)
!10883 = !DILocation(line: 246, column: 36, scope: !2890)
!10884 = !DILocation(line: 246, column: 2, scope: !2891)
!10885 = !DILocation(line: 247, column: 37, scope: !2889)
!10886 = !DILocation(line: 0, scope: !2889)
!10887 = !DILocation(line: 248, column: 19, scope: !2889)
!10888 = !DILocation(line: 248, column: 12, scope: !2889)
!10889 = !DILocation(line: 250, column: 11, scope: !10890)
!10890 = distinct !DILexicalBlock(scope: !2889, file: !2646, line: 250, column: 7)
!10891 = !DILocation(line: 250, column: 7, scope: !2889)
!10892 = !DILocation(line: 254, column: 11, scope: !10893)
!10893 = distinct !DILexicalBlock(scope: !10894, file: !2646, line: 254, column: 8)
!10894 = distinct !DILexicalBlock(scope: !10890, file: !2646, line: 250, column: 20)
!10895 = !DILocation(line: 254, column: 8, scope: !10894)
!10896 = !DILocation(line: 255, column: 9, scope: !10897)
!10897 = distinct !DILexicalBlock(scope: !10893, file: !2646, line: 254, column: 17)
!10898 = !DILocation(line: 258, column: 9, scope: !10897)
!10899 = !DILocation(line: 261, column: 28, scope: !10897)
!10900 = !DILocation(line: 261, column: 10, scope: !10897)
!10901 = !DILocation(line: 261, column: 17, scope: !10897)
!10902 = !DILocation(line: 261, column: 26, scope: !10897)
!10903 = !DILocation(line: 262, column: 4, scope: !10897)
!10904 = !DILocation(line: 263, column: 9, scope: !10894)
!10905 = !DILocation(line: 263, column: 16, scope: !10894)
!10906 = !DILocation(line: 263, column: 28, scope: !10894)
!10907 = !DILocation(line: 264, column: 3, scope: !10894)
!10908 = !DILocation(line: 246, column: 60, scope: !2890)
!10909 = distinct !{!10909, !10884, !10910}
!10910 = !DILocation(line: 265, column: 2, scope: !2891)
!10911 = !DILocation(line: 266, column: 1, scope: !2873)
!10912 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !891, file: !891, line: 1814, type: !7420, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2642, retainedNodes: !10913)
!10913 = !{!10914, !10915}
!10914 = !DILocalVariable(name: "IRQn", arg: 1, scope: !10912, file: !891, line: 1814, type: !3263)
!10915 = !DILocalVariable(name: "priority", arg: 2, scope: !10912, file: !891, line: 1814, type: !137)
!10916 = !DILocation(line: 0, scope: !10912)
!10917 = !DILocation(line: 1822, column: 48, scope: !10918)
!10918 = distinct !DILexicalBlock(scope: !10919, file: !891, line: 1821, column: 3)
!10919 = distinct !DILexicalBlock(scope: !10912, file: !891, line: 1816, column: 7)
!10920 = !DILocation(line: 1822, column: 32, scope: !10918)
!10921 = !DILocation(line: 1822, column: 40, scope: !10918)
!10922 = !DILocation(line: 1822, column: 5, scope: !10918)
!10923 = !DILocation(line: 1822, column: 46, scope: !10918)
!10924 = !DILocation(line: 1824, column: 1, scope: !10912)
!10925 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !10843, file: !10843, line: 32, type: !3598, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!10926 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !10927, file: !10927, line: 215, type: !10824, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2642, retainedNodes: !10928)
!10927 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10928 = !{!10929}
!10929 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !10926, file: !10927, line: 215, type: !2739)
!10930 = !DILocation(line: 0, scope: !10926)
!10931 = !DILocation(line: 217, column: 21, scope: !10926)
!10932 = !DILocation(line: 217, column: 34, scope: !10926)
!10933 = !DILocation(line: 221, column: 21, scope: !10926)
!10934 = !DILocation(line: 221, column: 34, scope: !10926)
!10935 = !DILocation(line: 223, column: 27, scope: !10926)
!10936 = !DILocation(line: 223, column: 33, scope: !10926)
!10937 = !DILocation(line: 224, column: 27, scope: !10926)
!10938 = !DILocation(line: 224, column: 32, scope: !10926)
!10939 = !DILocation(line: 232, column: 16, scope: !10926)
!10940 = !DILocation(line: 232, column: 30, scope: !10926)
!10941 = !DILocation(line: 239, column: 24, scope: !10926)
!10942 = !DILocation(line: 240, column: 1, scope: !10926)
!10943 = distinct !DISubprogram(name: "prepare_multithreading", scope: !2646, file: !2646, line: 399, type: !10944, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2642, retainedNodes: !10946)
!10944 = !DISubroutineType(types: !10945)
!10945 = !{!2684}
!10946 = !{!10947}
!10947 = !DILocalVariable(name: "stack_ptr", scope: !10943, file: !2646, line: 401, type: !2684)
!10948 = !DILocation(line: 404, column: 2, scope: !10943)
!10949 = !DILocation(line: 416, column: 24, scope: !10943)
!10950 = !DILocation(line: 418, column: 14, scope: !10943)
!10951 = !DILocation(line: 0, scope: !10943)
!10952 = !DILocation(line: 423, column: 2, scope: !10943)
!10953 = !DILocation(line: 424, column: 2, scope: !10943)
!10954 = !DILocation(line: 426, column: 2, scope: !10943)
!10955 = !DILocation(line: 428, column: 2, scope: !10943)
!10956 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !2646, file: !2646, line: 432, type: !10957, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2642, retainedNodes: !10959)
!10957 = !DISubroutineType(types: !10958)
!10958 = !{null, !2684}
!10959 = !{!10960}
!10960 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !10956, file: !2646, line: 432, type: !2684)
!10961 = !DILocation(line: 0, scope: !10956)
!10962 = !DILocation(line: 435, column: 2, scope: !10956)
!10963 = !DILocation(line: 445, column: 2, scope: !10956)
!10964 = distinct !DISubprogram(name: "bg_thread_main", scope: !2646, file: !2646, line: 277, type: !3929, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2642, retainedNodes: !10965)
!10965 = !{!10966, !10967, !10968}
!10966 = !DILocalVariable(name: "unused1", arg: 1, scope: !10964, file: !2646, line: 277, type: !102)
!10967 = !DILocalVariable(name: "unused2", arg: 2, scope: !10964, file: !2646, line: 277, type: !102)
!10968 = !DILocalVariable(name: "unused3", arg: 3, scope: !10964, file: !2646, line: 277, type: !102)
!10969 = !DILocation(line: 0, scope: !10964)
!10970 = !DILocation(line: 291, column: 20, scope: !10964)
!10971 = !DILocation(line: 293, column: 2, scope: !10964)
!10972 = !DILocation(line: 297, column: 2, scope: !10964)
!10973 = !DILocation(line: 305, column: 2, scope: !10964)
!10974 = !DILocation(line: 307, column: 2, scope: !10964)
!10975 = !DILocation(line: 330, column: 8, scope: !10964)
!10976 = !DILocation(line: 333, column: 34, scope: !10964)
!10977 = !DILocation(line: 339, column: 1, scope: !10964)
!10978 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2902, file: !2902, line: 45, type: !10979, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !10987)
!10979 = !DISubroutineType(types: !10980)
!10980 = !{null, !10981, !102}
!10981 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !846, line: 103, baseType: !10982)
!10982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10983, size: 32)
!10983 = !DISubroutineType(types: !10984)
!10984 = !{null, !10985, !102}
!10985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10986, size: 32)
!10986 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2907)
!10987 = !{!10988, !10989}
!10988 = !DILocalVariable(name: "user_cb", arg: 1, scope: !10978, file: !2902, line: 45, type: !10981)
!10989 = !DILocalVariable(name: "user_data", arg: 2, scope: !10978, file: !2902, line: 45, type: !102)
!10990 = !DILocation(line: 0, scope: !10978)
!10991 = !DILocation(line: 71, column: 1, scope: !10978)
!10992 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2902, file: !2902, line: 73, type: !10979, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !10993)
!10993 = !{!10994, !10995}
!10994 = !DILocalVariable(name: "user_cb", arg: 1, scope: !10992, file: !2902, line: 73, type: !10981)
!10995 = !DILocalVariable(name: "user_data", arg: 2, scope: !10992, file: !2902, line: 73, type: !102)
!10996 = !DILocation(line: 0, scope: !10992)
!10997 = !DILocation(line: 95, column: 1, scope: !10992)
!10998 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2902, file: !2902, line: 97, type: !8131, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !162)
!10999 = !DILocation(line: 1031, column: 3, scope: !11000, inlinedAt: !11003)
!11000 = distinct !DISubprogram(name: "__get_IPSR", scope: !7386, file: !7386, line: 1027, type: !135, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !11001)
!11001 = !{!11002}
!11002 = !DILocalVariable(name: "result", scope: !11000, file: !7386, line: 1029, type: !137)
!11003 = distinct !DILocation(line: 48, column: 10, scope: !11004, inlinedAt: !11005)
!11004 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8130, file: !8130, line: 46, type: !8131, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !162)
!11005 = distinct !DILocation(line: 99, column: 9, scope: !10998)
!11006 = !{i64 1923232}
!11007 = !DILocation(line: 0, scope: !11000, inlinedAt: !11003)
!11008 = !DILocation(line: 48, column: 9, scope: !11004, inlinedAt: !11005)
!11009 = !DILocation(line: 99, column: 2, scope: !10998)
!11010 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2902, file: !2902, line: 106, type: !3598, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !162)
!11011 = !DILocation(line: 108, column: 2, scope: !11010)
!11012 = !DILocation(line: 108, column: 17, scope: !11010)
!11013 = !DILocation(line: 108, column: 30, scope: !11010)
!11014 = !DILocation(line: 109, column: 1, scope: !11010)
!11015 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2902, file: !2902, line: 116, type: !3598, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !162)
!11016 = !DILocation(line: 118, column: 2, scope: !11015)
!11017 = !DILocation(line: 118, column: 17, scope: !11015)
!11018 = !DILocation(line: 118, column: 30, scope: !11015)
!11019 = !DILocation(line: 119, column: 1, scope: !11015)
!11020 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2902, file: !2902, line: 126, type: !8131, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !162)
!11021 = !DILocation(line: 128, column: 10, scope: !11020)
!11022 = !DILocation(line: 128, column: 25, scope: !11020)
!11023 = !DILocation(line: 128, column: 38, scope: !11020)
!11024 = !DILocation(line: 128, column: 53, scope: !11020)
!11025 = !DILocation(line: 128, column: 2, scope: !11020)
!11026 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2902, file: !2902, line: 187, type: !11027, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !11029)
!11027 = !DISubroutineType(types: !11028)
!11028 = !{!103, !2906, !721}
!11029 = !{!11030, !11031}
!11030 = !DILocalVariable(name: "thread", arg: 1, scope: !11026, file: !2902, line: 187, type: !2906)
!11031 = !DILocalVariable(name: "value", arg: 2, scope: !11026, file: !2902, line: 187, type: !721)
!11032 = !DILocation(line: 0, scope: !11026)
!11033 = !DILocation(line: 206, column: 2, scope: !11026)
!11034 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2902, file: !2902, line: 238, type: !11035, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !11037)
!11035 = !DISubroutineType(types: !11036)
!11036 = !{!721, !2906}
!11037 = !{!11038}
!11038 = !DILocalVariable(name: "thread", arg: 1, scope: !11034, file: !2902, line: 238, type: !2906)
!11039 = !DILocation(line: 0, scope: !11034)
!11040 = !DILocation(line: 244, column: 2, scope: !11034)
!11041 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2902, file: !2902, line: 248, type: !11042, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !11044)
!11042 = !DISubroutineType(types: !11043)
!11043 = !{!103, !2905, !2684, !120}
!11044 = !{!11045, !11046, !11047}
!11045 = !DILocalVariable(name: "thread", arg: 1, scope: !11041, file: !2902, line: 248, type: !2905)
!11046 = !DILocalVariable(name: "buf", arg: 2, scope: !11041, file: !2902, line: 248, type: !2684)
!11047 = !DILocalVariable(name: "size", arg: 3, scope: !11041, file: !2902, line: 248, type: !120)
!11048 = !DILocation(line: 0, scope: !11041)
!11049 = !DILocation(line: 257, column: 2, scope: !11041)
!11050 = !DILocation(line: 0, scope: !2901)
!11051 = !DILocation(line: 281, column: 11, scope: !11052)
!11052 = distinct !DILexicalBlock(scope: !2901, file: !2902, line: 281, column: 6)
!11053 = !DILocation(line: 281, column: 20, scope: !11052)
!11054 = !DILocation(line: 275, column: 45, scope: !2901)
!11055 = !DILocation(line: 285, column: 10, scope: !2901)
!11056 = !DILocation(line: 0, scope: !3023)
!11057 = !DILocation(line: 293, column: 39, scope: !11058)
!11058 = distinct !DILexicalBlock(scope: !3023, file: !2902, line: 293, column: 2)
!11059 = !DILocation(line: 293, column: 2, scope: !3023)
!11060 = !DILocation(line: 273, column: 14, scope: !2901)
!11061 = !DILocation(line: 309, column: 2, scope: !2901)
!11062 = !DILocation(line: 309, column: 11, scope: !2901)
!11063 = !DILocation(line: 311, column: 2, scope: !2901)
!11064 = !DILocation(line: 293, column: 26, scope: !11058)
!11065 = !DILocation(line: 294, column: 9, scope: !11066)
!11066 = distinct !DILexicalBlock(scope: !11058, file: !2902, line: 293, column: 54)
!11067 = !DILocation(line: 295, column: 21, scope: !11068)
!11068 = distinct !DILexicalBlock(scope: !11066, file: !2902, line: 295, column: 7)
!11069 = !DILocation(line: 295, column: 28, scope: !11068)
!11070 = !DILocation(line: 295, column: 7, scope: !11066)
!11071 = !DILocation(line: 299, column: 25, scope: !11066)
!11072 = !DILocation(line: 299, column: 41, scope: !11066)
!11073 = !DILocation(line: 300, column: 7, scope: !11066)
!11074 = !DILocation(line: 300, column: 26, scope: !11066)
!11075 = !DILocation(line: 299, column: 10, scope: !11066)
!11076 = !DILocation(line: 299, column: 7, scope: !11066)
!11077 = !DILocation(line: 302, column: 16, scope: !11066)
!11078 = !DILocation(line: 304, column: 20, scope: !11079)
!11079 = distinct !DILexicalBlock(scope: !11066, file: !2902, line: 304, column: 7)
!11080 = !DILocation(line: 304, column: 7, scope: !11066)
!11081 = !DILocation(line: 305, column: 26, scope: !11082)
!11082 = distinct !DILexicalBlock(scope: !11079, file: !2902, line: 304, column: 26)
!11083 = !DILocation(line: 305, column: 42, scope: !11082)
!11084 = !DILocation(line: 305, column: 11, scope: !11082)
!11085 = !DILocation(line: 305, column: 8, scope: !11082)
!11086 = !DILocation(line: 306, column: 3, scope: !11082)
!11087 = !DILocation(line: 293, column: 50, scope: !11058)
!11088 = !DILocation(line: 312, column: 1, scope: !2901)
!11089 = distinct !DISubprogram(name: "copy_bytes", scope: !2902, file: !2902, line: 261, type: !11090, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !11092)
!11090 = !DISubroutineType(types: !11091)
!11091 = !{!120, !2684, !120, !721, !120}
!11092 = !{!11093, !11094, !11095, !11096, !11097}
!11093 = !DILocalVariable(name: "dest", arg: 1, scope: !11089, file: !2902, line: 261, type: !2684)
!11094 = !DILocalVariable(name: "dest_size", arg: 2, scope: !11089, file: !2902, line: 261, type: !120)
!11095 = !DILocalVariable(name: "src", arg: 3, scope: !11089, file: !2902, line: 261, type: !721)
!11096 = !DILocalVariable(name: "src_size", arg: 4, scope: !11089, file: !2902, line: 261, type: !120)
!11097 = !DILocalVariable(name: "bytes_to_copy", scope: !11089, file: !2902, line: 263, type: !120)
!11098 = !DILocation(line: 0, scope: !11089)
!11099 = !DILocation(line: 265, column: 18, scope: !11089)
!11100 = !DILocation(line: 266, column: 2, scope: !11089)
!11101 = !DILocation(line: 268, column: 2, scope: !11089)
!11102 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2902, file: !2902, line: 383, type: !11103, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !11105)
!11103 = !DISubroutineType(types: !11104)
!11104 = !{null, !2906}
!11105 = !{!11106}
!11106 = !DILocalVariable(name: "thread", arg: 1, scope: !11102, file: !2902, line: 383, type: !2906)
!11107 = !DILocation(line: 0, scope: !11102)
!11108 = !DILocation(line: 387, column: 2, scope: !11102)
!11109 = !DILocation(line: 388, column: 1, scope: !11102)
!11110 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2902, file: !2902, line: 528, type: !11111, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !11118)
!11111 = !DISubroutineType(types: !11112)
!11112 = !{!2684, !2906, !11113, !120, !3926, !102, !102, !102, !103, !137, !721}
!11113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11114, size: 32)
!11114 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3927, line: 44, baseType: !11115)
!11115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2854, line: 47, size: 8, elements: !11116)
!11116 = !{!11117}
!11117 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !11115, file: !2854, line: 48, baseType: !109, size: 8)
!11118 = !{!11119, !11120, !11121, !11122, !11123, !11124, !11125, !11126, !11127, !11128, !11129}
!11119 = !DILocalVariable(name: "new_thread", arg: 1, scope: !11110, file: !2902, line: 528, type: !2906)
!11120 = !DILocalVariable(name: "stack", arg: 2, scope: !11110, file: !2902, line: 529, type: !11113)
!11121 = !DILocalVariable(name: "stack_size", arg: 3, scope: !11110, file: !2902, line: 529, type: !120)
!11122 = !DILocalVariable(name: "entry", arg: 4, scope: !11110, file: !2902, line: 530, type: !3926)
!11123 = !DILocalVariable(name: "p1", arg: 5, scope: !11110, file: !2902, line: 531, type: !102)
!11124 = !DILocalVariable(name: "p2", arg: 6, scope: !11110, file: !2902, line: 531, type: !102)
!11125 = !DILocalVariable(name: "p3", arg: 7, scope: !11110, file: !2902, line: 531, type: !102)
!11126 = !DILocalVariable(name: "prio", arg: 8, scope: !11110, file: !2902, line: 532, type: !103)
!11127 = !DILocalVariable(name: "options", arg: 9, scope: !11110, file: !2902, line: 532, type: !137)
!11128 = !DILocalVariable(name: "name", arg: 10, scope: !11110, file: !2902, line: 532, type: !721)
!11129 = !DILocalVariable(name: "stack_ptr", scope: !11110, file: !2902, line: 534, type: !2684)
!11130 = !DILocation(line: 0, scope: !11110)
!11131 = !DILocation(line: 550, column: 28, scope: !11110)
!11132 = !DILocation(line: 550, column: 2, scope: !11110)
!11133 = !DILocation(line: 553, column: 34, scope: !11110)
!11134 = !DILocation(line: 553, column: 2, scope: !11110)
!11135 = !DILocation(line: 554, column: 14, scope: !11110)
!11136 = !DILocation(line: 564, column: 2, scope: !11110)
!11137 = !DILocation(line: 567, column: 14, scope: !11110)
!11138 = !DILocation(line: 567, column: 24, scope: !11110)
!11139 = !DILocation(line: 612, column: 7, scope: !11140)
!11140 = distinct !DILexicalBlock(scope: !11110, file: !2902, line: 612, column: 6)
!11141 = !DILocation(line: 612, column: 6, scope: !11110)
!11142 = !DILocation(line: 627, column: 40, scope: !11110)
!11143 = !DILocation(line: 637, column: 2, scope: !11110)
!11144 = !DILocation(line: 613, column: 15, scope: !11145)
!11145 = distinct !DILexicalBlock(scope: !11140, file: !2902, line: 612, column: 17)
!11146 = !DILocation(line: 613, column: 29, scope: !11145)
!11147 = !DILocation(line: 638, column: 1, scope: !11110)
!11148 = distinct !DISubprogram(name: "z_waitq_init", scope: !11149, file: !11149, line: 47, type: !11150, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !11152)
!11149 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11150 = !DISubroutineType(types: !11151)
!11151 = !{null, !2937}
!11152 = !{!11153}
!11153 = !DILocalVariable(name: "w", arg: 1, scope: !11148, file: !11149, line: 47, type: !2937)
!11154 = !DILocation(line: 0, scope: !11148)
!11155 = !DILocation(line: 49, column: 21, scope: !11148)
!11156 = !DILocation(line: 49, column: 2, scope: !11148)
!11157 = !DILocation(line: 50, column: 1, scope: !11148)
!11158 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2902, file: !2902, line: 791, type: !11159, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !11162)
!11159 = !DISubroutineType(types: !11160)
!11160 = !{null, !11161, !103, !137, !32}
!11161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2910, size: 32)
!11162 = !{!11163, !11164, !11165, !11166}
!11163 = !DILocalVariable(name: "thread_base", arg: 1, scope: !11158, file: !2902, line: 791, type: !11161)
!11164 = !DILocalVariable(name: "priority", arg: 2, scope: !11158, file: !2902, line: 791, type: !103)
!11165 = !DILocalVariable(name: "initial_state", arg: 3, scope: !11158, file: !2902, line: 792, type: !137)
!11166 = !DILocalVariable(name: "options", arg: 4, scope: !11158, file: !2902, line: 792, type: !32)
!11167 = !DILocation(line: 0, scope: !11158)
!11168 = !DILocation(line: 795, column: 15, scope: !11158)
!11169 = !DILocation(line: 795, column: 25, scope: !11158)
!11170 = !DILocation(line: 796, column: 30, scope: !11158)
!11171 = !DILocation(line: 796, column: 15, scope: !11158)
!11172 = !DILocation(line: 796, column: 28, scope: !11158)
!11173 = !DILocation(line: 797, column: 30, scope: !11158)
!11174 = !DILocation(line: 797, column: 15, scope: !11158)
!11175 = !DILocation(line: 797, column: 28, scope: !11158)
!11176 = !DILocation(line: 799, column: 22, scope: !11158)
!11177 = !DILocation(line: 799, column: 15, scope: !11158)
!11178 = !DILocation(line: 799, column: 20, scope: !11158)
!11179 = !DILocation(line: 801, column: 15, scope: !11158)
!11180 = !DILocation(line: 801, column: 28, scope: !11158)
!11181 = !DILocation(line: 814, column: 2, scope: !11158)
!11182 = !DILocation(line: 815, column: 1, scope: !11158)
!11183 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2902, file: !2902, line: 449, type: !11184, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !11186)
!11184 = !DISubroutineType(types: !11185)
!11185 = !{!2684, !2906, !11113, !120}
!11186 = !{!11187, !11188, !11189, !11190, !11191, !11192, !11193, !11194}
!11187 = !DILocalVariable(name: "new_thread", arg: 1, scope: !11183, file: !2902, line: 449, type: !2906)
!11188 = !DILocalVariable(name: "stack", arg: 2, scope: !11183, file: !2902, line: 450, type: !11113)
!11189 = !DILocalVariable(name: "stack_size", arg: 3, scope: !11183, file: !2902, line: 450, type: !120)
!11190 = !DILocalVariable(name: "stack_obj_size", scope: !11183, file: !2902, line: 452, type: !120)
!11191 = !DILocalVariable(name: "stack_buf_size", scope: !11183, file: !2902, line: 452, type: !120)
!11192 = !DILocalVariable(name: "stack_ptr", scope: !11183, file: !2902, line: 453, type: !2684)
!11193 = !DILocalVariable(name: "stack_buf_start", scope: !11183, file: !2902, line: 453, type: !2684)
!11194 = !DILocalVariable(name: "delta", scope: !11183, file: !2902, line: 454, type: !120)
!11195 = !DILocation(line: 0, scope: !11183)
!11196 = !DILocation(line: 465, column: 20, scope: !11197)
!11197 = distinct !DILexicalBlock(scope: !11183, file: !2902, line: 463, column: 2)
!11198 = !DILocation(line: 466, column: 21, scope: !11197)
!11199 = !DILocation(line: 473, column: 28, scope: !11183)
!11200 = !DILocation(line: 514, column: 33, scope: !11183)
!11201 = !DILocation(line: 514, column: 25, scope: !11183)
!11202 = !DILocation(line: 514, column: 31, scope: !11183)
!11203 = !DILocation(line: 515, column: 25, scope: !11183)
!11204 = !DILocation(line: 515, column: 30, scope: !11183)
!11205 = !DILocation(line: 516, column: 25, scope: !11183)
!11206 = !DILocation(line: 516, column: 31, scope: !11183)
!11207 = !DILocation(line: 520, column: 2, scope: !11183)
!11208 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2854, file: !2854, line: 331, type: !11209, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !11211)
!11209 = !DISubroutineType(types: !11210)
!11210 = !{!2684, !11113}
!11211 = !{!11212}
!11212 = !DILocalVariable(name: "sym", arg: 1, scope: !11208, file: !2854, line: 331, type: !11113)
!11213 = !DILocation(line: 0, scope: !11208)
!11214 = !DILocation(line: 333, column: 9, scope: !11208)
!11215 = !DILocation(line: 333, column: 2, scope: !11208)
!11216 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !11217, file: !11217, line: 40, type: !11218, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !11220)
!11217 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11218 = !DISubroutineType(types: !11219)
!11219 = !{null, !11161}
!11220 = !{!11221}
!11221 = !DILocalVariable(name: "thread_base", arg: 1, scope: !11216, file: !11217, line: 40, type: !11161)
!11222 = !DILocation(line: 0, scope: !11216)
!11223 = !DILocation(line: 42, column: 31, scope: !11216)
!11224 = !DILocation(line: 42, column: 2, scope: !11216)
!11225 = !DILocation(line: 43, column: 1, scope: !11216)
!11226 = distinct !DISubprogram(name: "z_init_timeout", scope: !11217, file: !11217, line: 25, type: !2963, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !11227)
!11227 = !{!11228}
!11228 = !DILocalVariable(name: "to", arg: 1, scope: !11226, file: !11217, line: 25, type: !2965)
!11229 = !DILocation(line: 0, scope: !11226)
!11230 = !DILocation(line: 27, column: 22, scope: !11226)
!11231 = !DILocation(line: 27, column: 2, scope: !11226)
!11232 = !DILocation(line: 28, column: 1, scope: !11226)
!11233 = distinct !DISubprogram(name: "sys_dnode_init", scope: !764, file: !764, line: 211, type: !11234, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !11236)
!11234 = !DISubroutineType(types: !11235)
!11235 = !{null, !3009}
!11236 = !{!11237}
!11237 = !DILocalVariable(name: "node", arg: 1, scope: !11233, file: !764, line: 211, type: !3009)
!11238 = !DILocation(line: 0, scope: !11233)
!11239 = !DILocation(line: 213, column: 8, scope: !11233)
!11240 = !DILocation(line: 213, column: 13, scope: !11233)
!11241 = !DILocation(line: 214, column: 8, scope: !11233)
!11242 = !DILocation(line: 214, column: 13, scope: !11233)
!11243 = !DILocation(line: 215, column: 1, scope: !11233)
!11244 = distinct !DISubprogram(name: "sys_dlist_init", scope: !764, file: !764, line: 197, type: !11245, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !11248)
!11245 = !DISubroutineType(types: !11246)
!11246 = !{null, !11247}
!11247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2942, size: 32)
!11248 = !{!11249}
!11249 = !DILocalVariable(name: "list", arg: 1, scope: !11244, file: !764, line: 197, type: !11247)
!11250 = !DILocation(line: 0, scope: !11244)
!11251 = !DILocation(line: 199, column: 8, scope: !11244)
!11252 = !DILocation(line: 199, column: 13, scope: !11244)
!11253 = !DILocation(line: 200, column: 8, scope: !11244)
!11254 = !DILocation(line: 200, column: 13, scope: !11244)
!11255 = !DILocation(line: 201, column: 1, scope: !11244)
!11256 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2902, file: !2902, line: 641, type: !11257, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !11263)
!11257 = !DISubroutineType(types: !11258)
!11258 = !{!2905, !2906, !11113, !120, !3926, !102, !102, !102, !103, !137, !11259}
!11259 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !2348, line: 67, baseType: !11260)
!11260 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2348, line: 65, size: 64, elements: !11261)
!11261 = !{!11262}
!11262 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !11260, file: !2348, line: 66, baseType: !2347, size: 64)
!11263 = !{!11264, !11265, !11266, !11267, !11268, !11269, !11270, !11271, !11272, !11273}
!11264 = !DILocalVariable(name: "new_thread", arg: 1, scope: !11256, file: !2902, line: 641, type: !2906)
!11265 = !DILocalVariable(name: "stack", arg: 2, scope: !11256, file: !2902, line: 642, type: !11113)
!11266 = !DILocalVariable(name: "stack_size", arg: 3, scope: !11256, file: !2902, line: 643, type: !120)
!11267 = !DILocalVariable(name: "entry", arg: 4, scope: !11256, file: !2902, line: 643, type: !3926)
!11268 = !DILocalVariable(name: "p1", arg: 5, scope: !11256, file: !2902, line: 644, type: !102)
!11269 = !DILocalVariable(name: "p2", arg: 6, scope: !11256, file: !2902, line: 644, type: !102)
!11270 = !DILocalVariable(name: "p3", arg: 7, scope: !11256, file: !2902, line: 644, type: !102)
!11271 = !DILocalVariable(name: "prio", arg: 8, scope: !11256, file: !2902, line: 645, type: !103)
!11272 = !DILocalVariable(name: "options", arg: 9, scope: !11256, file: !2902, line: 645, type: !137)
!11273 = !DILocalVariable(name: "delay", arg: 10, scope: !11256, file: !2902, line: 645, type: !11259)
!11274 = !DILocation(line: 0, scope: !11256)
!11275 = !DILocation(line: 649, column: 2, scope: !11256)
!11276 = !DILocation(line: 652, column: 7, scope: !11277)
!11277 = distinct !DILexicalBlock(scope: !11256, file: !2902, line: 652, column: 6)
!11278 = !DILocation(line: 652, column: 6, scope: !11256)
!11279 = !DILocation(line: 653, column: 3, scope: !11280)
!11280 = distinct !DILexicalBlock(scope: !11277, file: !2902, line: 652, column: 39)
!11281 = !DILocation(line: 654, column: 2, scope: !11280)
!11282 = !DILocation(line: 656, column: 2, scope: !11256)
!11283 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2902, file: !2902, line: 401, type: !11284, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !11286)
!11284 = !DISubroutineType(types: !11285)
!11285 = !{null, !2906, !11259}
!11286 = !{!11287, !11288}
!11287 = !DILocalVariable(name: "thread", arg: 1, scope: !11283, file: !2902, line: 401, type: !2906)
!11288 = !DILocalVariable(name: "delay", arg: 2, scope: !11283, file: !2902, line: 401, type: !11259)
!11289 = !DILocation(line: 0, scope: !11283)
!11290 = !DILocation(line: 404, column: 6, scope: !11291)
!11291 = distinct !DILexicalBlock(scope: !11283, file: !2902, line: 404, column: 6)
!11292 = !DILocation(line: 404, column: 6, scope: !11283)
!11293 = !DILocation(line: 405, column: 3, scope: !11294)
!11294 = distinct !DILexicalBlock(scope: !11291, file: !2902, line: 404, column: 38)
!11295 = !DILocation(line: 406, column: 2, scope: !11294)
!11296 = !DILocation(line: 407, column: 3, scope: !11297)
!11297 = distinct !DILexicalBlock(scope: !11291, file: !2902, line: 406, column: 9)
!11298 = !DILocation(line: 413, column: 1, scope: !11283)
!11299 = distinct !DISubprogram(name: "k_thread_start", scope: !4048, file: !4048, line: 205, type: !11300, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !11302)
!11300 = !DISubroutineType(types: !11301)
!11301 = !{null, !2905}
!11302 = !{!11303}
!11303 = !DILocalVariable(name: "thread", arg: 1, scope: !11299, file: !4048, line: 205, type: !2905)
!11304 = !DILocation(line: 0, scope: !11299)
!11305 = !DILocation(line: 214, column: 2, scope: !11306)
!11306 = distinct !DILexicalBlock(scope: !11299, file: !4048, line: 214, column: 2)
!11307 = !{i64 2152669766}
!11308 = !DILocation(line: 215, column: 2, scope: !11299)
!11309 = !DILocation(line: 216, column: 1, scope: !11299)
!11310 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !11217, file: !11217, line: 47, type: !11284, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !11311)
!11311 = !{!11312, !11313}
!11312 = !DILocalVariable(name: "thread", arg: 1, scope: !11310, file: !11217, line: 47, type: !2906)
!11313 = !DILocalVariable(name: "ticks", arg: 2, scope: !11310, file: !11217, line: 47, type: !11259)
!11314 = !DILocation(line: 0, scope: !11310)
!11315 = !DILocation(line: 49, column: 30, scope: !11310)
!11316 = !DILocation(line: 49, column: 2, scope: !11310)
!11317 = !DILocation(line: 50, column: 1, scope: !11310)
!11318 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2902, file: !2902, line: 748, type: !3598, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !11319)
!11319 = !{!11320, !11338}
!11320 = !DILocalVariable(name: "thread_data", scope: !11321, file: !2902, line: 750, type: !11322)
!11321 = distinct !DILexicalBlock(scope: !11318, file: !2902, line: 750, column: 2)
!11322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11323, size: 32)
!11323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !846, line: 620, size: 384, elements: !11324)
!11324 = !{!11325, !11326, !11327, !11328, !11329, !11330, !11331, !11332, !11333, !11334, !11335, !11337}
!11325 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !11323, file: !846, line: 621, baseType: !2906, size: 32)
!11326 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !11323, file: !846, line: 622, baseType: !11113, size: 32, offset: 32)
!11327 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !11323, file: !846, line: 623, baseType: !32, size: 32, offset: 64)
!11328 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !11323, file: !846, line: 624, baseType: !3926, size: 32, offset: 96)
!11329 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !11323, file: !846, line: 625, baseType: !102, size: 32, offset: 128)
!11330 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !11323, file: !846, line: 626, baseType: !102, size: 32, offset: 160)
!11331 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !11323, file: !846, line: 627, baseType: !102, size: 32, offset: 192)
!11332 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !11323, file: !846, line: 628, baseType: !103, size: 32, offset: 224)
!11333 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !11323, file: !846, line: 629, baseType: !137, size: 32, offset: 256)
!11334 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !11323, file: !846, line: 630, baseType: !1458, size: 32, offset: 288)
!11335 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !11323, file: !846, line: 631, baseType: !11336, size: 32, offset: 320)
!11336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3598, size: 32)
!11337 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !11323, file: !846, line: 632, baseType: !721, size: 32, offset: 352)
!11338 = !DILocalVariable(name: "thread_data", scope: !11339, file: !2902, line: 781, type: !11322)
!11339 = distinct !DILexicalBlock(scope: !11318, file: !2902, line: 781, column: 2)
!11340 = !DILocation(line: 0, scope: !11321)
!11341 = !DILocation(line: 750, column: 2, scope: !11321)
!11342 = !DILocation(line: 780, column: 2, scope: !11318)
!11343 = !DILocation(line: 0, scope: !11339)
!11344 = !DILocation(line: 781, column: 2, scope: !11339)
!11345 = !DILocation(line: 752, column: 17, scope: !11346)
!11346 = distinct !DILexicalBlock(scope: !11347, file: !2902, line: 750, column: 38)
!11347 = distinct !DILexicalBlock(scope: !11321, file: !2902, line: 750, column: 2)
!11348 = !DILocation(line: 753, column: 17, scope: !11346)
!11349 = !DILocation(line: 754, column: 17, scope: !11346)
!11350 = !DILocation(line: 755, column: 17, scope: !11346)
!11351 = !DILocation(line: 756, column: 17, scope: !11346)
!11352 = !DILocation(line: 757, column: 17, scope: !11346)
!11353 = !DILocation(line: 758, column: 17, scope: !11346)
!11354 = !DILocation(line: 759, column: 17, scope: !11346)
!11355 = !DILocation(line: 760, column: 17, scope: !11346)
!11356 = !DILocation(line: 751, column: 3, scope: !11346)
!11357 = !DILocation(line: 763, column: 16, scope: !11346)
!11358 = !DILocation(line: 763, column: 29, scope: !11346)
!11359 = !DILocation(line: 763, column: 39, scope: !11346)
!11360 = !DILocation(line: 750, column: 2, scope: !11347)
!11361 = !DILocation(line: 750, column: 2, scope: !11362)
!11362 = distinct !DILexicalBlock(scope: !11347, file: !2902, line: 750, column: 2)
!11363 = distinct !{!11363, !11341, !11364}
!11364 = !DILocation(line: 764, column: 2, scope: !11321)
!11365 = !DILocation(line: 787, column: 2, scope: !11318)
!11366 = !DILocation(line: 788, column: 1, scope: !11318)
!11367 = !DILocation(line: 782, column: 20, scope: !11368)
!11368 = distinct !DILexicalBlock(scope: !11369, file: !2902, line: 782, column: 7)
!11369 = distinct !DILexicalBlock(scope: !11370, file: !2902, line: 781, column: 38)
!11370 = distinct !DILexicalBlock(scope: !11339, file: !2902, line: 781, column: 2)
!11371 = !DILocation(line: 782, column: 31, scope: !11368)
!11372 = !DILocation(line: 782, column: 7, scope: !11369)
!11373 = !DILocation(line: 783, column: 37, scope: !11374)
!11374 = distinct !DILexicalBlock(scope: !11368, file: !2902, line: 782, column: 51)
!11375 = !DILocation(line: 784, column: 10, scope: !11374)
!11376 = !DILocation(line: 783, column: 4, scope: !11374)
!11377 = !DILocation(line: 785, column: 3, scope: !11374)
!11378 = !DILocation(line: 781, column: 2, scope: !11370)
!11379 = !DILocation(line: 781, column: 2, scope: !11380)
!11380 = distinct !DILexicalBlock(scope: !11370, file: !2902, line: 781, column: 2)
!11381 = distinct !{!11381, !11344, !11382}
!11382 = !DILocation(line: 786, column: 2, scope: !11339)
!11383 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !11384, file: !11384, line: 403, type: !11385, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !11387)
!11384 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11385 = !DISubroutineType(types: !11386)
!11386 = !{!163, !163}
!11387 = !{!11388}
!11388 = !DILocalVariable(name: "t", arg: 1, scope: !11383, file: !11384, line: 403, type: !163)
!11389 = !DILocation(line: 0, scope: !11383)
!11390 = !DILocalVariable(name: "t", arg: 1, scope: !11391, file: !11384, line: 102, type: !163)
!11391 = distinct !DISubprogram(name: "z_tmcvt", scope: !11384, file: !11384, line: 102, type: !11392, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !11394)
!11392 = !DISubroutineType(types: !11393)
!11393 = !{!163, !163, !137, !137, !731, !731, !731, !731}
!11394 = !{!11390, !11395, !11396, !11397, !11398, !11399, !11400, !11401, !11402, !11403, !11404}
!11395 = !DILocalVariable(name: "from_hz", arg: 2, scope: !11391, file: !11384, line: 102, type: !137)
!11396 = !DILocalVariable(name: "to_hz", arg: 3, scope: !11391, file: !11384, line: 103, type: !137)
!11397 = !DILocalVariable(name: "const_hz", arg: 4, scope: !11391, file: !11384, line: 103, type: !731)
!11398 = !DILocalVariable(name: "result32", arg: 5, scope: !11391, file: !11384, line: 104, type: !731)
!11399 = !DILocalVariable(name: "round_up", arg: 6, scope: !11391, file: !11384, line: 104, type: !731)
!11400 = !DILocalVariable(name: "round_off", arg: 7, scope: !11391, file: !11384, line: 105, type: !731)
!11401 = !DILocalVariable(name: "mul_ratio", scope: !11391, file: !11384, line: 107, type: !731)
!11402 = !DILocalVariable(name: "div_ratio", scope: !11391, file: !11384, line: 109, type: !731)
!11403 = !DILocalVariable(name: "off", scope: !11391, file: !11384, line: 116, type: !163)
!11404 = !DILocalVariable(name: "rdivisor", scope: !11405, file: !11384, line: 119, type: !137)
!11405 = distinct !DILexicalBlock(scope: !11406, file: !11384, line: 118, column: 18)
!11406 = distinct !DILexicalBlock(scope: !11391, file: !11384, line: 118, column: 6)
!11407 = !DILocation(line: 0, scope: !11391, inlinedAt: !11408)
!11408 = distinct !DILocation(line: 406, column: 9, scope: !11383)
!11409 = !DILocation(line: 145, column: 13, scope: !11410, inlinedAt: !11408)
!11410 = distinct !DILexicalBlock(scope: !11411, file: !11384, line: 144, column: 10)
!11411 = distinct !DILexicalBlock(scope: !11412, file: !11384, line: 142, column: 7)
!11412 = distinct !DILexicalBlock(scope: !11413, file: !11384, line: 141, column: 24)
!11413 = distinct !DILexicalBlock(scope: !11414, file: !11384, line: 141, column: 13)
!11414 = distinct !DILexicalBlock(scope: !11391, file: !11384, line: 134, column: 6)
!11415 = !DILocation(line: 406, column: 2, scope: !11383)
!11416 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2902, file: !2902, line: 817, type: !3924, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !11417)
!11417 = !{!11418, !11419, !11420, !11421}
!11418 = !DILocalVariable(name: "entry", arg: 1, scope: !11416, file: !2902, line: 817, type: !3926)
!11419 = !DILocalVariable(name: "p1", arg: 2, scope: !11416, file: !2902, line: 818, type: !102)
!11420 = !DILocalVariable(name: "p2", arg: 3, scope: !11416, file: !2902, line: 818, type: !102)
!11421 = !DILocalVariable(name: "p3", arg: 4, scope: !11416, file: !2902, line: 818, type: !102)
!11422 = !DILocation(line: 0, scope: !11416)
!11423 = !DILocation(line: 822, column: 2, scope: !11416)
!11424 = !DILocation(line: 822, column: 17, scope: !11416)
!11425 = !DILocation(line: 822, column: 30, scope: !11416)
!11426 = !DILocation(line: 823, column: 2, scope: !11416)
!11427 = !DILocation(line: 845, column: 2, scope: !11416)
!11428 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2902, file: !2902, line: 888, type: !11429, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !11431)
!11429 = !DISubroutineType(types: !11430)
!11430 = !{!103, !2906}
!11431 = !{!11432}
!11432 = !DILocalVariable(name: "thread", arg: 1, scope: !11428, file: !2902, line: 888, type: !2906)
!11433 = !DILocation(line: 0, scope: !11428)
!11434 = !DILocation(line: 893, column: 2, scope: !11428)
!11435 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2902, file: !2902, line: 897, type: !11436, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !11438)
!11436 = !DISubroutineType(types: !11437)
!11437 = !{!103, !2906, !32}
!11438 = !{!11439, !11440}
!11439 = !DILocalVariable(name: "thread", arg: 1, scope: !11435, file: !2902, line: 897, type: !2906)
!11440 = !DILocalVariable(name: "options", arg: 2, scope: !11435, file: !2902, line: 897, type: !32)
!11441 = !DILocation(line: 0, scope: !11435)
!11442 = !DILocation(line: 902, column: 2, scope: !11435)
!11443 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2902, file: !2902, line: 1072, type: !11444, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !11449)
!11444 = !DISubroutineType(types: !11445)
!11445 = !{!103, !2905, !11446}
!11446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11447, size: 32)
!11447 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !754, line: 234, baseType: !11448)
!11448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !754, line: 192, elements: !162)
!11449 = !{!11450, !11451}
!11450 = !DILocalVariable(name: "thread", arg: 1, scope: !11443, file: !2902, line: 1072, type: !2905)
!11451 = !DILocalVariable(name: "stats", arg: 2, scope: !11443, file: !2902, line: 1073, type: !11446)
!11452 = !DILocation(line: 0, scope: !11443)
!11453 = !DILocation(line: 1075, column: 14, scope: !11454)
!11454 = distinct !DILexicalBlock(scope: !11443, file: !2902, line: 1075, column: 6)
!11455 = !DILocation(line: 1075, column: 23, scope: !11454)
!11456 = !DILocation(line: 1086, column: 1, scope: !11443)
!11457 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2902, file: !2902, line: 1088, type: !11458, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !11460)
!11458 = !DISubroutineType(types: !11459)
!11459 = !{!103, !11446}
!11460 = !{!11461}
!11461 = !DILocalVariable(name: "stats", arg: 1, scope: !11457, file: !2902, line: 1088, type: !11446)
!11462 = !DILocation(line: 0, scope: !11457)
!11463 = !DILocation(line: 1094, column: 12, scope: !11464)
!11464 = distinct !DILexicalBlock(scope: !11457, file: !2902, line: 1094, column: 6)
!11465 = !DILocation(line: 1120, column: 1, scope: !11457)
!11466 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !11467, file: !11467, line: 20, type: !3598, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3579, retainedNodes: !162)
!11467 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11468 = !DILocation(line: 30, column: 2, scope: !11466)
!11469 = !DILocation(line: 31, column: 1, scope: !11466)
!11470 = distinct !DISubprogram(name: "idle", scope: !11467, file: !11467, line: 33, type: !3929, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3579, retainedNodes: !11471)
!11471 = !{!11472, !11473, !11474}
!11472 = !DILocalVariable(name: "unused1", arg: 1, scope: !11470, file: !11467, line: 33, type: !102)
!11473 = !DILocalVariable(name: "unused2", arg: 2, scope: !11470, file: !11467, line: 33, type: !102)
!11474 = !DILocalVariable(name: "unused3", arg: 3, scope: !11470, file: !11467, line: 33, type: !102)
!11475 = !DILocation(line: 0, scope: !11470)
!11476 = !DILocation(line: 41, column: 2, scope: !11470)
!11477 = !DILocation(line: 55, column: 2, scope: !11478, inlinedAt: !11482)
!11478 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7145, file: !7145, line: 42, type: !7146, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3579, retainedNodes: !11479)
!11479 = !{!11480, !11481}
!11480 = !DILocalVariable(name: "key", scope: !11478, file: !7145, line: 44, type: !32)
!11481 = !DILocalVariable(name: "tmp", scope: !11478, file: !7145, line: 53, type: !32)
!11482 = distinct !DILocation(line: 62, column: 10, scope: !11483)
!11483 = distinct !DILexicalBlock(scope: !11470, file: !11467, line: 41, column: 15)
!11484 = !{i64 1618395}
!11485 = !DILocation(line: 0, scope: !11478, inlinedAt: !11482)
!11486 = !DILocation(line: 86, column: 3, scope: !11483)
!11487 = distinct !{!11487, !11476, !11488}
!11488 = !DILocation(line: 105, column: 2, scope: !11470)
!11489 = distinct !DISubprogram(name: "k_cpu_idle", scope: !846, file: !846, line: 5627, type: !3598, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3579, retainedNodes: !162)
!11490 = !DILocation(line: 5629, column: 2, scope: !11489)
!11491 = !DILocation(line: 5630, column: 1, scope: !11489)
!11492 = !DISubprogram(name: "arch_cpu_idle", scope: !3927, file: !3927, line: 167, type: !3598, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!11493 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !3135, file: !3135, line: 93, type: !11494, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !11496)
!11494 = !DISubroutineType(types: !11495)
!11495 = !{!1458, !3030, !3030}
!11496 = !{!11497, !11498, !11499, !11500}
!11497 = !DILocalVariable(name: "thread_1", arg: 1, scope: !11493, file: !3135, line: 93, type: !3030)
!11498 = !DILocalVariable(name: "thread_2", arg: 2, scope: !11493, file: !3135, line: 94, type: !3030)
!11499 = !DILocalVariable(name: "b1", scope: !11493, file: !3135, line: 97, type: !1458)
!11500 = !DILocalVariable(name: "b2", scope: !11493, file: !3135, line: 98, type: !1458)
!11501 = !DILocation(line: 0, scope: !11493)
!11502 = !DILocation(line: 97, column: 30, scope: !11493)
!11503 = !DILocation(line: 98, column: 30, scope: !11493)
!11504 = !DILocation(line: 100, column: 9, scope: !11505)
!11505 = distinct !DILexicalBlock(scope: !11493, file: !3135, line: 100, column: 6)
!11506 = !DILocation(line: 100, column: 6, scope: !11493)
!11507 = !DILocation(line: 125, column: 1, scope: !11493)
!11508 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !3135, file: !3135, line: 428, type: !11509, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !11511)
!11509 = !DISubroutineType(types: !11510)
!11510 = !{null, !3030}
!11511 = !{!11512}
!11512 = !DILocalVariable(name: "curr", arg: 1, scope: !11508, file: !3135, line: 428, type: !3030)
!11513 = !DILocation(line: 0, scope: !11508)
!11514 = !DILocation(line: 434, column: 6, scope: !11515)
!11515 = distinct !DILexicalBlock(scope: !11508, file: !3135, line: 434, column: 6)
!11516 = !DILocation(line: 434, column: 23, scope: !11515)
!11517 = !DILocation(line: 434, column: 6, scope: !11508)
!11518 = !DILocation(line: 435, column: 50, scope: !11519)
!11519 = distinct !DILexicalBlock(scope: !11515, file: !3135, line: 434, column: 29)
!11520 = !DILocation(line: 435, column: 48, scope: !11519)
!11521 = !DILocation(line: 435, column: 29, scope: !11519)
!11522 = !DILocation(line: 436, column: 24, scope: !11519)
!11523 = !DILocation(line: 436, column: 3, scope: !11519)
!11524 = !DILocation(line: 437, column: 2, scope: !11519)
!11525 = !DILocation(line: 438, column: 1, scope: !11508)
!11526 = distinct !DISubprogram(name: "slice_time", scope: !3135, file: !3135, line: 407, type: !11527, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !11529)
!11527 = !DISubroutineType(types: !11528)
!11528 = !{!103, !3030}
!11529 = !{!11530, !11531}
!11530 = !DILocalVariable(name: "curr", arg: 1, scope: !11526, file: !3135, line: 407, type: !3030)
!11531 = !DILocalVariable(name: "ret", scope: !11526, file: !3135, line: 409, type: !103)
!11532 = !DILocation(line: 0, scope: !11526)
!11533 = !DILocation(line: 409, column: 12, scope: !11526)
!11534 = !DILocation(line: 416, column: 2, scope: !11526)
!11535 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !3135, file: !3135, line: 440, type: !11536, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !11538)
!11536 = !DISubroutineType(types: !11537)
!11537 = !{null, !1458, !103}
!11538 = !{!11539, !11540, !11541, !11547}
!11539 = !DILocalVariable(name: "slice", arg: 1, scope: !11535, file: !3135, line: 440, type: !1458)
!11540 = !DILocalVariable(name: "prio", arg: 2, scope: !11535, file: !3135, line: 440, type: !103)
!11541 = !DILocalVariable(name: "__i", scope: !11542, file: !3135, line: 442, type: !11543)
!11542 = distinct !DILexicalBlock(scope: !11535, file: !3135, line: 442, column: 2)
!11543 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !857, line: 106, baseType: !11544)
!11544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !857, line: 32, size: 32, elements: !11545)
!11545 = !{!11546}
!11546 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !11544, file: !857, line: 33, baseType: !103, size: 32)
!11547 = !DILocalVariable(name: "__key", scope: !11542, file: !3135, line: 442, type: !11543)
!11548 = !DILocation(line: 0, scope: !11535)
!11549 = !DILocation(line: 0, scope: !11542)
!11550 = !DILocalVariable(name: "l", arg: 1, scope: !11551, file: !857, line: 136, type: !11554)
!11551 = distinct !DISubprogram(name: "k_spin_lock", scope: !857, file: !857, line: 136, type: !11552, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !11555)
!11552 = !DISubroutineType(types: !11553)
!11553 = !{!11543, !11554}
!11554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3124, size: 32)
!11555 = !{!11550, !11556}
!11556 = !DILocalVariable(name: "k", scope: !11551, file: !857, line: 139, type: !11543)
!11557 = !DILocation(line: 0, scope: !11551, inlinedAt: !11558)
!11558 = distinct !DILocation(line: 442, column: 2, scope: !11542)
!11559 = !DILocation(line: 55, column: 2, scope: !11560, inlinedAt: !11564)
!11560 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7145, file: !7145, line: 42, type: !7146, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !11561)
!11561 = !{!11562, !11563}
!11562 = !DILocalVariable(name: "key", scope: !11560, file: !7145, line: 44, type: !32)
!11563 = !DILocalVariable(name: "tmp", scope: !11560, file: !7145, line: 53, type: !32)
!11564 = distinct !DILocation(line: 145, column: 10, scope: !11551, inlinedAt: !11558)
!11565 = !{i64 1662366}
!11566 = !DILocation(line: 0, scope: !11560, inlinedAt: !11564)
!11567 = !DILocation(line: 443, column: 29, scope: !11568)
!11568 = distinct !DILexicalBlock(scope: !11569, file: !3135, line: 442, column: 26)
!11569 = distinct !DILexicalBlock(scope: !11542, file: !3135, line: 442, column: 2)
!11570 = !DILocation(line: 444, column: 17, scope: !11568)
!11571 = !DILocation(line: 445, column: 51, scope: !11572)
!11572 = distinct !DILexicalBlock(scope: !11568, file: !3135, line: 445, column: 7)
!11573 = !DILocation(line: 445, column: 7, scope: !11568)
!11574 = !DILocation(line: 0, scope: !11568)
!11575 = !DILocation(line: 451, column: 18, scope: !11568)
!11576 = !DILocation(line: 452, column: 3, scope: !11568)
!11577 = !DILocalVariable(name: "key", arg: 2, scope: !11578, file: !857, line: 190, type: !11543)
!11578 = distinct !DISubprogram(name: "k_spin_unlock", scope: !857, file: !857, line: 189, type: !11579, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !11581)
!11579 = !DISubroutineType(types: !11580)
!11580 = !{null, !11554, !11543}
!11581 = !{!11582, !11577}
!11582 = !DILocalVariable(name: "l", arg: 1, scope: !11578, file: !857, line: 189, type: !11554)
!11583 = !DILocation(line: 0, scope: !11578, inlinedAt: !11584)
!11584 = distinct !DILocation(line: 442, column: 2, scope: !11569)
!11585 = !DILocalVariable(name: "key", arg: 1, scope: !11586, file: !7145, line: 84, type: !32)
!11586 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7145, file: !7145, line: 84, type: !7163, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !11587)
!11587 = !{!11585}
!11588 = !DILocation(line: 0, scope: !11586, inlinedAt: !11589)
!11589 = distinct !DILocation(line: 215, column: 2, scope: !11578, inlinedAt: !11584)
!11590 = !DILocation(line: 95, column: 2, scope: !11586, inlinedAt: !11589)
!11591 = !{i64 1663183}
!11592 = !DILocation(line: 454, column: 1, scope: !11535)
!11593 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !11384, file: !11384, line: 389, type: !8337, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !11594)
!11594 = !{!11595}
!11595 = !DILocalVariable(name: "t", arg: 1, scope: !11593, file: !11384, line: 389, type: !137)
!11596 = !DILocation(line: 0, scope: !11593)
!11597 = !DILocalVariable(name: "t", arg: 1, scope: !11598, file: !11384, line: 102, type: !163)
!11598 = distinct !DISubprogram(name: "z_tmcvt", scope: !11384, file: !11384, line: 102, type: !11392, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !11599)
!11599 = !{!11597, !11600, !11601, !11602, !11603, !11604, !11605, !11606, !11607, !11608, !11609}
!11600 = !DILocalVariable(name: "from_hz", arg: 2, scope: !11598, file: !11384, line: 102, type: !137)
!11601 = !DILocalVariable(name: "to_hz", arg: 3, scope: !11598, file: !11384, line: 103, type: !137)
!11602 = !DILocalVariable(name: "const_hz", arg: 4, scope: !11598, file: !11384, line: 103, type: !731)
!11603 = !DILocalVariable(name: "result32", arg: 5, scope: !11598, file: !11384, line: 104, type: !731)
!11604 = !DILocalVariable(name: "round_up", arg: 6, scope: !11598, file: !11384, line: 104, type: !731)
!11605 = !DILocalVariable(name: "round_off", arg: 7, scope: !11598, file: !11384, line: 105, type: !731)
!11606 = !DILocalVariable(name: "mul_ratio", scope: !11598, file: !11384, line: 107, type: !731)
!11607 = !DILocalVariable(name: "div_ratio", scope: !11598, file: !11384, line: 109, type: !731)
!11608 = !DILocalVariable(name: "off", scope: !11598, file: !11384, line: 116, type: !163)
!11609 = !DILocalVariable(name: "rdivisor", scope: !11610, file: !11384, line: 119, type: !137)
!11610 = distinct !DILexicalBlock(scope: !11611, file: !11384, line: 118, column: 18)
!11611 = distinct !DILexicalBlock(scope: !11598, file: !11384, line: 118, column: 6)
!11612 = !DILocation(line: 0, scope: !11598, inlinedAt: !11613)
!11613 = distinct !DILocation(line: 392, column: 9, scope: !11593)
!11614 = !DILocation(line: 143, column: 25, scope: !11615, inlinedAt: !11613)
!11615 = distinct !DILexicalBlock(scope: !11616, file: !11384, line: 142, column: 17)
!11616 = distinct !DILexicalBlock(scope: !11617, file: !11384, line: 142, column: 7)
!11617 = distinct !DILexicalBlock(scope: !11618, file: !11384, line: 141, column: 24)
!11618 = distinct !DILexicalBlock(scope: !11619, file: !11384, line: 141, column: 13)
!11619 = distinct !DILexicalBlock(scope: !11598, file: !11384, line: 134, column: 6)
!11620 = !DILocation(line: 392, column: 2, scope: !11593)
!11621 = distinct !DISubprogram(name: "z_time_slice", scope: !3135, file: !3135, line: 502, type: !10780, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !11622)
!11622 = !{!11623, !11624}
!11623 = !DILocalVariable(name: "ticks", arg: 1, scope: !11621, file: !3135, line: 502, type: !103)
!11624 = !DILocalVariable(name: "key", scope: !11621, file: !3135, line: 511, type: !11543)
!11625 = !DILocation(line: 0, scope: !11621)
!11626 = !DILocation(line: 0, scope: !11551, inlinedAt: !11627)
!11627 = distinct !DILocation(line: 511, column: 25, scope: !11621)
!11628 = !DILocation(line: 55, column: 2, scope: !11560, inlinedAt: !11629)
!11629 = distinct !DILocation(line: 145, column: 10, scope: !11551, inlinedAt: !11627)
!11630 = !DILocation(line: 0, scope: !11560, inlinedAt: !11629)
!11631 = !DILocation(line: 514, column: 6, scope: !11632)
!11632 = distinct !DILexicalBlock(scope: !11621, file: !3135, line: 514, column: 6)
!11633 = !DILocation(line: 514, column: 25, scope: !11632)
!11634 = !DILocation(line: 514, column: 22, scope: !11632)
!11635 = !DILocation(line: 514, column: 6, scope: !11621)
!11636 = !DILocation(line: 515, column: 3, scope: !11637)
!11637 = distinct !DILexicalBlock(scope: !11632, file: !3135, line: 514, column: 35)
!11638 = !DILocation(line: 0, scope: !11578, inlinedAt: !11639)
!11639 = distinct !DILocation(line: 516, column: 3, scope: !11637)
!11640 = !DILocation(line: 0, scope: !11586, inlinedAt: !11641)
!11641 = distinct !DILocation(line: 215, column: 2, scope: !11578, inlinedAt: !11639)
!11642 = !DILocation(line: 95, column: 2, scope: !11586, inlinedAt: !11641)
!11643 = !DILocation(line: 517, column: 3, scope: !11637)
!11644 = !DILocation(line: 519, column: 18, scope: !11621)
!11645 = !DILocation(line: 522, column: 6, scope: !11646)
!11646 = distinct !DILexicalBlock(scope: !11621, file: !3135, line: 522, column: 6)
!11647 = !DILocation(line: 522, column: 27, scope: !11646)
!11648 = !DILocation(line: 522, column: 30, scope: !11646)
!11649 = !DILocation(line: 522, column: 6, scope: !11621)
!11650 = !DILocation(line: 523, column: 30, scope: !11651)
!11651 = distinct !DILexicalBlock(scope: !11652, file: !3135, line: 523, column: 7)
!11652 = distinct !DILexicalBlock(scope: !11646, file: !3135, line: 522, column: 51)
!11653 = !DILocation(line: 523, column: 13, scope: !11651)
!11654 = !DILocation(line: 523, column: 7, scope: !11652)
!11655 = !DILocation(line: 530, column: 10, scope: !11656)
!11656 = distinct !DILexicalBlock(scope: !11651, file: !3135, line: 523, column: 43)
!11657 = !DILocation(line: 531, column: 3, scope: !11656)
!11658 = !DILocation(line: 532, column: 30, scope: !11659)
!11659 = distinct !DILexicalBlock(scope: !11651, file: !3135, line: 531, column: 10)
!11660 = !DILocation(line: 535, column: 29, scope: !11661)
!11661 = distinct !DILexicalBlock(scope: !11646, file: !3135, line: 534, column: 9)
!11662 = !DILocation(line: 0, scope: !11578, inlinedAt: !11663)
!11663 = distinct !DILocation(line: 537, column: 2, scope: !11621)
!11664 = !DILocation(line: 0, scope: !11586, inlinedAt: !11665)
!11665 = distinct !DILocation(line: 215, column: 2, scope: !11578, inlinedAt: !11663)
!11666 = !DILocation(line: 95, column: 2, scope: !11586, inlinedAt: !11665)
!11667 = !DILocation(line: 538, column: 1, scope: !11621)
!11668 = distinct !DISubprogram(name: "sliceable", scope: !3135, file: !3135, line: 468, type: !11669, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !11671)
!11669 = !DISubroutineType(types: !11670)
!11670 = !{!731, !3030}
!11671 = !{!11672, !11673}
!11672 = !DILocalVariable(name: "thread", arg: 1, scope: !11668, file: !3135, line: 468, type: !3030)
!11673 = !DILocalVariable(name: "ret", scope: !11668, file: !3135, line: 470, type: !731)
!11674 = !DILocation(line: 0, scope: !11668)
!11675 = !DILocation(line: 470, column: 13, scope: !11668)
!11676 = !DILocation(line: 471, column: 3, scope: !11668)
!11677 = !DILocation(line: 471, column: 7, scope: !11668)
!11678 = !DILocation(line: 472, column: 3, scope: !11668)
!11679 = !DILocation(line: 472, column: 37, scope: !11668)
!11680 = !DILocation(line: 472, column: 24, scope: !11668)
!11681 = !DILocation(line: 472, column: 43, scope: !11668)
!11682 = !DILocation(line: 472, column: 7, scope: !11668)
!11683 = !DILocation(line: 473, column: 3, scope: !11668)
!11684 = !DILocation(line: 473, column: 7, scope: !11668)
!11685 = !DILocation(line: 473, column: 6, scope: !11668)
!11686 = !DILocation(line: 479, column: 2, scope: !11668)
!11687 = distinct !DISubprogram(name: "slice_expired_locked", scope: !3135, file: !3135, line: 482, type: !11688, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !11690)
!11688 = !DISubroutineType(types: !11689)
!11689 = !{!11543, !11543}
!11690 = !{!11691, !11692}
!11691 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !11687, file: !3135, line: 482, type: !11543)
!11692 = !DILocalVariable(name: "curr", scope: !11687, file: !3135, line: 484, type: !3030)
!11693 = !DILocation(line: 0, scope: !11687)
!11694 = !DILocation(line: 484, column: 26, scope: !11687)
!11695 = !DILocation(line: 493, column: 7, scope: !11696)
!11696 = distinct !DILexicalBlock(scope: !11687, file: !3135, line: 493, column: 6)
!11697 = !DILocation(line: 493, column: 6, scope: !11687)
!11698 = !DILocation(line: 494, column: 3, scope: !11699)
!11699 = distinct !DILexicalBlock(scope: !11696, file: !3135, line: 493, column: 49)
!11700 = !DILocation(line: 495, column: 2, scope: !11699)
!11701 = !DILocation(line: 496, column: 2, scope: !11687)
!11702 = !DILocation(line: 499, column: 1, scope: !11687)
!11703 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !10823, file: !10823, line: 106, type: !11669, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !11704)
!11704 = !{!11705, !11706}
!11705 = !DILocalVariable(name: "thread", arg: 1, scope: !11703, file: !10823, line: 106, type: !3030)
!11706 = !DILocalVariable(name: "state", scope: !11703, file: !10823, line: 108, type: !240)
!11707 = !DILocation(line: 0, scope: !11703)
!11708 = !DILocation(line: 108, column: 31, scope: !11703)
!11709 = !DILocation(line: 110, column: 16, scope: !11703)
!11710 = !DILocation(line: 111, column: 41, scope: !11703)
!11711 = !DILocation(line: 110, column: 2, scope: !11703)
!11712 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !3135, file: !3135, line: 393, type: !11509, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !11713)
!11713 = !{!11714}
!11714 = !DILocalVariable(name: "thread", arg: 1, scope: !11712, file: !3135, line: 393, type: !3030)
!11715 = !DILocation(line: 0, scope: !11712)
!11716 = !DILocation(line: 395, column: 6, scope: !11717)
!11717 = distinct !DILexicalBlock(scope: !11712, file: !3135, line: 395, column: 6)
!11718 = !DILocation(line: 395, column: 6, scope: !11712)
!11719 = !DILocalVariable(name: "thread", arg: 1, scope: !11720, file: !3135, line: 264, type: !3030)
!11720 = distinct !DISubprogram(name: "dequeue_thread", scope: !3135, file: !3135, line: 264, type: !11509, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !11721)
!11721 = !{!11719}
!11722 = !DILocation(line: 0, scope: !11720, inlinedAt: !11723)
!11723 = distinct !DILocation(line: 396, column: 3, scope: !11724)
!11724 = distinct !DILexicalBlock(scope: !11717, file: !3135, line: 395, column: 34)
!11725 = !DILocation(line: 266, column: 15, scope: !11720, inlinedAt: !11723)
!11726 = !DILocation(line: 266, column: 28, scope: !11720, inlinedAt: !11723)
!11727 = !DILocalVariable(name: "thread", arg: 1, scope: !11728, file: !3135, line: 232, type: !3030)
!11728 = distinct !DISubprogram(name: "runq_remove", scope: !3135, file: !3135, line: 232, type: !11509, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !11729)
!11729 = !{!11727}
!11730 = !DILocation(line: 0, scope: !11728, inlinedAt: !11731)
!11731 = distinct !DILocation(line: 268, column: 3, scope: !11732, inlinedAt: !11723)
!11732 = distinct !DILexicalBlock(scope: !11733, file: !3135, line: 267, column: 35)
!11733 = distinct !DILexicalBlock(scope: !11720, file: !3135, line: 267, column: 6)
!11734 = !DILocation(line: 234, column: 2, scope: !11728, inlinedAt: !11731)
!11735 = !DILocation(line: 397, column: 2, scope: !11724)
!11736 = !DILocalVariable(name: "thread", arg: 1, scope: !11737, file: !3135, line: 250, type: !3030)
!11737 = distinct !DISubprogram(name: "queue_thread", scope: !3135, file: !3135, line: 250, type: !11509, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !11738)
!11738 = !{!11736}
!11739 = !DILocation(line: 0, scope: !11737, inlinedAt: !11740)
!11740 = distinct !DILocation(line: 398, column: 2, scope: !11712)
!11741 = !DILocation(line: 252, column: 15, scope: !11737, inlinedAt: !11740)
!11742 = !DILocation(line: 252, column: 28, scope: !11737, inlinedAt: !11740)
!11743 = !DILocalVariable(name: "thread", arg: 1, scope: !11744, file: !3135, line: 227, type: !3030)
!11744 = distinct !DISubprogram(name: "runq_add", scope: !3135, file: !3135, line: 227, type: !11509, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !11745)
!11745 = !{!11743}
!11746 = !DILocation(line: 0, scope: !11744, inlinedAt: !11747)
!11747 = distinct !DILocation(line: 254, column: 3, scope: !11748, inlinedAt: !11740)
!11748 = distinct !DILexicalBlock(scope: !11749, file: !3135, line: 253, column: 35)
!11749 = distinct !DILexicalBlock(scope: !11737, file: !3135, line: 253, column: 6)
!11750 = !DILocalVariable(name: "pq", arg: 1, scope: !11751, file: !3135, line: 181, type: !11754)
!11751 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !3135, file: !3135, line: 181, type: !11752, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !11755)
!11752 = !DISubroutineType(types: !11753)
!11753 = !{null, !11754, !3030}
!11754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3066, size: 32)
!11755 = !{!11750, !11756, !11757}
!11756 = !DILocalVariable(name: "thread", arg: 2, scope: !11751, file: !3135, line: 182, type: !3030)
!11757 = !DILocalVariable(name: "t", scope: !11751, file: !3135, line: 184, type: !3030)
!11758 = !DILocation(line: 0, scope: !11751, inlinedAt: !11759)
!11759 = distinct !DILocation(line: 229, column: 2, scope: !11744, inlinedAt: !11747)
!11760 = !DILocation(line: 188, column: 2, scope: !11761, inlinedAt: !11759)
!11761 = distinct !DILexicalBlock(scope: !11751, file: !3135, line: 188, column: 2)
!11762 = !DILocation(line: 188, column: 2, scope: !11763, inlinedAt: !11759)
!11763 = distinct !DILexicalBlock(scope: !11761, file: !3135, line: 188, column: 2)
!11764 = !DILocation(line: 0, scope: !11761, inlinedAt: !11759)
!11765 = !DILocation(line: 189, column: 7, scope: !11766, inlinedAt: !11759)
!11766 = distinct !DILexicalBlock(scope: !11767, file: !3135, line: 189, column: 7)
!11767 = distinct !DILexicalBlock(scope: !11763, file: !3135, line: 188, column: 56)
!11768 = !DILocation(line: 189, column: 35, scope: !11766, inlinedAt: !11759)
!11769 = !DILocation(line: 189, column: 7, scope: !11767, inlinedAt: !11759)
!11770 = !DILocation(line: 191, column: 21, scope: !11771, inlinedAt: !11759)
!11771 = distinct !DILexicalBlock(scope: !11766, file: !3135, line: 189, column: 40)
!11772 = !DILocation(line: 190, column: 4, scope: !11771, inlinedAt: !11759)
!11773 = !DILocation(line: 192, column: 4, scope: !11771, inlinedAt: !11759)
!11774 = distinct !{!11774, !11760, !11775}
!11775 = !DILocation(line: 194, column: 2, scope: !11761, inlinedAt: !11759)
!11776 = !DILocation(line: 196, column: 37, scope: !11751, inlinedAt: !11759)
!11777 = !DILocation(line: 196, column: 2, scope: !11751, inlinedAt: !11759)
!11778 = !DILocation(line: 197, column: 1, scope: !11751, inlinedAt: !11759)
!11779 = !DILocation(line: 399, column: 25, scope: !11712)
!11780 = !DILocation(line: 399, column: 22, scope: !11712)
!11781 = !DILocation(line: 399, column: 2, scope: !11712)
!11782 = !DILocation(line: 400, column: 1, scope: !11712)
!11783 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !10823, file: !10823, line: 136, type: !11669, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !11784)
!11784 = !{!11785}
!11785 = !DILocalVariable(name: "thread", arg: 1, scope: !11783, file: !10823, line: 136, type: !3030)
!11786 = !DILocation(line: 0, scope: !11783)
!11787 = !DILocation(line: 138, column: 9, scope: !11783)
!11788 = !DILocation(line: 138, column: 2, scope: !11783)
!11789 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !3135, file: !3135, line: 1137, type: !11752, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !11790)
!11790 = !{!11791, !11792}
!11791 = !DILocalVariable(name: "pq", arg: 1, scope: !11789, file: !3135, line: 1137, type: !11754)
!11792 = !DILocalVariable(name: "thread", arg: 2, scope: !11789, file: !3135, line: 1137, type: !3030)
!11793 = !DILocation(line: 0, scope: !11789)
!11794 = !DILocation(line: 1141, column: 33, scope: !11789)
!11795 = !DILocation(line: 1141, column: 2, scope: !11789)
!11796 = !DILocation(line: 1142, column: 1, scope: !11789)
!11797 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !764, file: !764, line: 294, type: !11798, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !11800)
!11798 = !DISubroutineType(types: !11799)
!11799 = !{!3131, !11754}
!11800 = !{!11801}
!11801 = !DILocalVariable(name: "list", arg: 1, scope: !11797, file: !764, line: 294, type: !11754)
!11802 = !DILocation(line: 0, scope: !11797)
!11803 = !DILocation(line: 296, column: 9, scope: !11797)
!11804 = !DILocation(line: 296, column: 49, scope: !11797)
!11805 = !DILocation(line: 296, column: 2, scope: !11797)
!11806 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !764, file: !764, line: 443, type: !11807, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !11809)
!11807 = !DISubroutineType(types: !11808)
!11808 = !{null, !3131, !3131}
!11809 = !{!11810, !11811, !11812}
!11810 = !DILocalVariable(name: "successor", arg: 1, scope: !11806, file: !764, line: 443, type: !3131)
!11811 = !DILocalVariable(name: "node", arg: 2, scope: !11806, file: !764, line: 443, type: !3131)
!11812 = !DILocalVariable(name: "prev", scope: !11806, file: !764, line: 445, type: !11813)
!11813 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3131)
!11814 = !DILocation(line: 0, scope: !11806)
!11815 = !DILocation(line: 445, column: 39, scope: !11806)
!11816 = !DILocation(line: 447, column: 8, scope: !11806)
!11817 = !DILocation(line: 447, column: 13, scope: !11806)
!11818 = !DILocation(line: 448, column: 8, scope: !11806)
!11819 = !DILocation(line: 448, column: 13, scope: !11806)
!11820 = !DILocation(line: 449, column: 8, scope: !11806)
!11821 = !DILocation(line: 449, column: 13, scope: !11806)
!11822 = !DILocation(line: 450, column: 18, scope: !11806)
!11823 = !DILocation(line: 451, column: 1, scope: !11806)
!11824 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !764, file: !764, line: 341, type: !11825, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !11827)
!11825 = !DISubroutineType(types: !11826)
!11826 = !{!3131, !11754, !3131}
!11827 = !{!11828, !11829}
!11828 = !DILocalVariable(name: "list", arg: 1, scope: !11824, file: !764, line: 341, type: !11754)
!11829 = !DILocalVariable(name: "node", arg: 2, scope: !11824, file: !764, line: 342, type: !3131)
!11830 = !DILocation(line: 0, scope: !11824)
!11831 = !DILocation(line: 344, column: 15, scope: !11824)
!11832 = !DILocation(line: 344, column: 9, scope: !11824)
!11833 = !DILocation(line: 344, column: 26, scope: !11824)
!11834 = !DILocation(line: 344, column: 2, scope: !11824)
!11835 = distinct !DISubprogram(name: "sys_dlist_append", scope: !764, file: !764, line: 404, type: !11836, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !11838)
!11836 = !DISubroutineType(types: !11837)
!11837 = !{null, !11754, !3131}
!11838 = !{!11839, !11840, !11841}
!11839 = !DILocalVariable(name: "list", arg: 1, scope: !11835, file: !764, line: 404, type: !11754)
!11840 = !DILocalVariable(name: "node", arg: 2, scope: !11835, file: !764, line: 404, type: !3131)
!11841 = !DILocalVariable(name: "tail", scope: !11835, file: !764, line: 406, type: !11813)
!11842 = !DILocation(line: 0, scope: !11835)
!11843 = !DILocation(line: 406, column: 34, scope: !11835)
!11844 = !DILocation(line: 408, column: 8, scope: !11835)
!11845 = !DILocation(line: 408, column: 13, scope: !11835)
!11846 = !DILocation(line: 409, column: 8, scope: !11835)
!11847 = !DILocation(line: 409, column: 13, scope: !11835)
!11848 = !DILocation(line: 411, column: 8, scope: !11835)
!11849 = !DILocation(line: 411, column: 13, scope: !11835)
!11850 = !DILocation(line: 412, column: 13, scope: !11835)
!11851 = !DILocation(line: 413, column: 1, scope: !11835)
!11852 = distinct !DISubprogram(name: "update_cache", scope: !3135, file: !3135, line: 559, type: !10780, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !11853)
!11853 = !{!11854, !11855}
!11854 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !11852, file: !3135, line: 559, type: !103)
!11855 = !DILocalVariable(name: "thread", scope: !11852, file: !3135, line: 562, type: !3030)
!11856 = !DILocation(line: 0, scope: !11852)
!11857 = !DILocation(line: 239, column: 9, scope: !11858, inlinedAt: !11861)
!11858 = distinct !DISubprogram(name: "runq_best", scope: !3135, file: !3135, line: 237, type: !11859, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !162)
!11859 = !DISubroutineType(types: !11860)
!11860 = !{!3030}
!11861 = distinct !DILocation(line: 314, column: 28, scope: !11862, inlinedAt: !11865)
!11862 = distinct !DISubprogram(name: "next_up", scope: !3135, file: !3135, line: 312, type: !11859, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !11863)
!11863 = !{!11864}
!11864 = !DILocalVariable(name: "thread", scope: !11862, file: !3135, line: 314, type: !3030)
!11865 = distinct !DILocation(line: 562, column: 28, scope: !11852)
!11866 = !DILocation(line: 0, scope: !11862, inlinedAt: !11865)
!11867 = !DILocation(line: 340, column: 17, scope: !11862, inlinedAt: !11865)
!11868 = !DILocation(line: 340, column: 9, scope: !11862, inlinedAt: !11865)
!11869 = !DILocalVariable(name: "thread", arg: 1, scope: !11870, file: !3135, line: 127, type: !3030)
!11870 = distinct !DISubprogram(name: "should_preempt", scope: !3135, file: !3135, line: 127, type: !11871, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !11873)
!11871 = !DISubroutineType(types: !11872)
!11872 = !{!731, !3030, !103}
!11873 = !{!11869, !11874}
!11874 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !11870, file: !3135, line: 128, type: !103)
!11875 = !DILocation(line: 0, scope: !11870, inlinedAt: !11876)
!11876 = distinct !DILocation(line: 564, column: 6, scope: !11877)
!11877 = distinct !DILexicalBlock(scope: !11852, file: !3135, line: 564, column: 6)
!11878 = !DILocation(line: 133, column: 17, scope: !11879, inlinedAt: !11876)
!11879 = distinct !DILexicalBlock(scope: !11870, file: !3135, line: 133, column: 6)
!11880 = !DILocation(line: 0, scope: !11877)
!11881 = !DILocation(line: 133, column: 6, scope: !11870, inlinedAt: !11876)
!11882 = !DILocation(line: 140, column: 6, scope: !11883, inlinedAt: !11876)
!11883 = distinct !DILexicalBlock(scope: !11870, file: !3135, line: 140, column: 6)
!11884 = !DILocation(line: 140, column: 6, scope: !11870, inlinedAt: !11876)
!11885 = !DILocation(line: 150, column: 9, scope: !11886, inlinedAt: !11876)
!11886 = distinct !DILexicalBlock(scope: !11870, file: !3135, line: 149, column: 6)
!11887 = !DILocation(line: 149, column: 6, scope: !11870, inlinedAt: !11876)
!11888 = !DILocation(line: 157, column: 6, scope: !11889, inlinedAt: !11876)
!11889 = distinct !DILexicalBlock(scope: !11870, file: !3135, line: 157, column: 6)
!11890 = !DILocation(line: 564, column: 6, scope: !11852)
!11891 = !DILocation(line: 566, column: 14, scope: !11892)
!11892 = distinct !DILexicalBlock(scope: !11893, file: !3135, line: 566, column: 7)
!11893 = distinct !DILexicalBlock(scope: !11877, file: !3135, line: 564, column: 42)
!11894 = !DILocation(line: 566, column: 7, scope: !11893)
!11895 = !DILocation(line: 567, column: 4, scope: !11896)
!11896 = distinct !DILexicalBlock(scope: !11892, file: !3135, line: 566, column: 27)
!11897 = !DILocation(line: 568, column: 3, scope: !11896)
!11898 = !DILocation(line: 585, column: 1, scope: !11852)
!11899 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !3135, file: !3135, line: 1144, type: !11900, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !11902)
!11900 = !DISubroutineType(types: !11901)
!11901 = !{!3030, !11754}
!11902 = !{!11903, !11904, !11905}
!11903 = !DILocalVariable(name: "pq", arg: 1, scope: !11899, file: !3135, line: 1144, type: !11754)
!11904 = !DILocalVariable(name: "thread", scope: !11899, file: !3135, line: 1146, type: !3030)
!11905 = !DILocalVariable(name: "n", scope: !11899, file: !3135, line: 1147, type: !3131)
!11906 = !DILocation(line: 0, scope: !11899)
!11907 = !DILocation(line: 1147, column: 19, scope: !11899)
!11908 = !DILocation(line: 1152, column: 2, scope: !11899)
!11909 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !10823, file: !10823, line: 115, type: !11669, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !11910)
!11910 = !{!11911}
!11911 = !DILocalVariable(name: "thread", arg: 1, scope: !11909, file: !10823, line: 115, type: !3030)
!11912 = !DILocation(line: 0, scope: !11909)
!11913 = !DILocation(line: 117, column: 46, scope: !11909)
!11914 = !DILocation(line: 117, column: 10, scope: !11909)
!11915 = !DILocation(line: 117, column: 9, scope: !11909)
!11916 = !DILocation(line: 117, column: 2, scope: !11909)
!11917 = distinct !DISubprogram(name: "is_preempt", scope: !3135, file: !3135, line: 62, type: !11527, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !11918)
!11918 = !{!11919}
!11919 = !DILocalVariable(name: "thread", arg: 1, scope: !11917, file: !3135, line: 62, type: !3030)
!11920 = !DILocation(line: 0, scope: !11917)
!11921 = !DILocation(line: 65, column: 22, scope: !11917)
!11922 = !DILocation(line: 65, column: 30, scope: !11917)
!11923 = !DILocation(line: 65, column: 2, scope: !11917)
!11924 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !11217, file: !11217, line: 35, type: !11925, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !11929)
!11925 = !DISubroutineType(types: !11926)
!11926 = !{!731, !11927}
!11927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11928, size: 32)
!11928 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3081)
!11929 = !{!11930}
!11930 = !DILocalVariable(name: "to", arg: 1, scope: !11924, file: !11217, line: 35, type: !11927)
!11931 = !DILocation(line: 0, scope: !11924)
!11932 = !DILocation(line: 37, column: 35, scope: !11924)
!11933 = !DILocation(line: 37, column: 10, scope: !11924)
!11934 = !DILocation(line: 37, column: 9, scope: !11924)
!11935 = !DILocation(line: 37, column: 2, scope: !11924)
!11936 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !764, file: !764, line: 225, type: !11937, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !11941)
!11937 = !DISubroutineType(types: !11938)
!11938 = !{!731, !11939}
!11939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11940, size: 32)
!11940 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3040)
!11941 = !{!11942}
!11942 = !DILocalVariable(name: "node", arg: 1, scope: !11936, file: !764, line: 225, type: !11939)
!11943 = !DILocation(line: 0, scope: !11936)
!11944 = !DILocation(line: 227, column: 15, scope: !11936)
!11945 = !DILocation(line: 227, column: 20, scope: !11936)
!11946 = !DILocation(line: 227, column: 2, scope: !11936)
!11947 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !764, file: !764, line: 325, type: !11825, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !11948)
!11948 = !{!11949, !11950}
!11949 = !DILocalVariable(name: "list", arg: 1, scope: !11947, file: !764, line: 325, type: !11754)
!11950 = !DILocalVariable(name: "node", arg: 2, scope: !11947, file: !764, line: 326, type: !3131)
!11951 = !DILocation(line: 0, scope: !11947)
!11952 = !DILocation(line: 328, column: 24, scope: !11947)
!11953 = !DILocation(line: 328, column: 15, scope: !11947)
!11954 = !DILocation(line: 328, column: 9, scope: !11947)
!11955 = !DILocation(line: 328, column: 45, scope: !11947)
!11956 = !DILocation(line: 328, column: 2, scope: !11947)
!11957 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !764, file: !764, line: 266, type: !11958, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !11960)
!11958 = !DISubroutineType(types: !11959)
!11959 = !{!731, !11754}
!11960 = !{!11961}
!11961 = !DILocalVariable(name: "list", arg: 1, scope: !11957, file: !764, line: 266, type: !11754)
!11962 = !DILocation(line: 0, scope: !11957)
!11963 = !DILocation(line: 268, column: 15, scope: !11957)
!11964 = !DILocation(line: 268, column: 20, scope: !11957)
!11965 = !DILocation(line: 268, column: 2, scope: !11957)
!11966 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !764, file: !764, line: 496, type: !11967, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !11969)
!11967 = !DISubroutineType(types: !11968)
!11968 = !{null, !3131}
!11969 = !{!11970, !11971, !11972}
!11970 = !DILocalVariable(name: "node", arg: 1, scope: !11966, file: !764, line: 496, type: !3131)
!11971 = !DILocalVariable(name: "prev", scope: !11966, file: !764, line: 498, type: !11813)
!11972 = !DILocalVariable(name: "next", scope: !11966, file: !764, line: 499, type: !11813)
!11973 = !DILocation(line: 0, scope: !11966)
!11974 = !DILocation(line: 498, column: 34, scope: !11966)
!11975 = !DILocation(line: 499, column: 34, scope: !11966)
!11976 = !DILocation(line: 501, column: 8, scope: !11966)
!11977 = !DILocation(line: 501, column: 13, scope: !11966)
!11978 = !DILocation(line: 502, column: 8, scope: !11966)
!11979 = !DILocation(line: 502, column: 13, scope: !11966)
!11980 = !DILocation(line: 503, column: 2, scope: !11966)
!11981 = !DILocation(line: 504, column: 1, scope: !11966)
!11982 = distinct !DISubprogram(name: "sys_dnode_init", scope: !764, file: !764, line: 211, type: !11967, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !11983)
!11983 = !{!11984}
!11984 = !DILocalVariable(name: "node", arg: 1, scope: !11982, file: !764, line: 211, type: !3131)
!11985 = !DILocation(line: 0, scope: !11982)
!11986 = !DILocation(line: 213, column: 8, scope: !11982)
!11987 = !DILocation(line: 213, column: 13, scope: !11982)
!11988 = !DILocation(line: 214, column: 8, scope: !11982)
!11989 = !DILocation(line: 214, column: 13, scope: !11982)
!11990 = !DILocation(line: 215, column: 1, scope: !11982)
!11991 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !10823, file: !10823, line: 131, type: !11992, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !11994)
!11992 = !DISubroutineType(types: !11993)
!11993 = !{!731, !3030, !137}
!11994 = !{!11995, !11996}
!11995 = !DILocalVariable(name: "thread", arg: 1, scope: !11991, file: !10823, line: 131, type: !3030)
!11996 = !DILocalVariable(name: "state", arg: 2, scope: !11991, file: !10823, line: 131, type: !137)
!11997 = !DILocation(line: 0, scope: !11991)
!11998 = !DILocation(line: 133, column: 23, scope: !11991)
!11999 = !DILocation(line: 133, column: 45, scope: !11991)
!12000 = !DILocation(line: 133, column: 2, scope: !11991)
!12001 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !10823, file: !10823, line: 211, type: !12002, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !12004)
!12002 = !DISubroutineType(types: !12003)
!12003 = !{!731, !103, !103}
!12004 = !{!12005, !12006}
!12005 = !DILocalVariable(name: "prio", arg: 1, scope: !12001, file: !10823, line: 211, type: !103)
!12006 = !DILocalVariable(name: "test_prio", arg: 2, scope: !12001, file: !10823, line: 211, type: !103)
!12007 = !DILocation(line: 0, scope: !12001)
!12008 = !DILocation(line: 213, column: 9, scope: !12001)
!12009 = !DILocation(line: 213, column: 2, scope: !12001)
!12010 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !10823, file: !10823, line: 83, type: !11669, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !12011)
!12011 = !{!12012}
!12012 = !DILocalVariable(name: "thread", arg: 1, scope: !12010, file: !10823, line: 83, type: !3030)
!12013 = !DILocation(line: 0, scope: !12010)
!12014 = !DILocation(line: 89, column: 16, scope: !12010)
!12015 = !DILocation(line: 89, column: 2, scope: !12010)
!12016 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !10823, file: !10823, line: 206, type: !12002, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !12017)
!12017 = !{!12018, !12019}
!12018 = !DILocalVariable(name: "prio1", arg: 1, scope: !12016, file: !10823, line: 206, type: !103)
!12019 = !DILocalVariable(name: "prio2", arg: 2, scope: !12016, file: !10823, line: 206, type: !103)
!12020 = !DILocation(line: 0, scope: !12016)
!12021 = !DILocation(line: 208, column: 15, scope: !12016)
!12022 = !DILocation(line: 208, column: 2, scope: !12016)
!12023 = distinct !DISubprogram(name: "z_ready_thread", scope: !3135, file: !3135, line: 635, type: !11509, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !12024)
!12024 = !{!12025, !12026, !12028}
!12025 = !DILocalVariable(name: "thread", arg: 1, scope: !12023, file: !3135, line: 635, type: !3030)
!12026 = !DILocalVariable(name: "__i", scope: !12027, file: !3135, line: 637, type: !11543)
!12027 = distinct !DILexicalBlock(scope: !12023, file: !3135, line: 637, column: 2)
!12028 = !DILocalVariable(name: "__key", scope: !12027, file: !3135, line: 637, type: !11543)
!12029 = !DILocation(line: 0, scope: !12023)
!12030 = !DILocation(line: 0, scope: !12027)
!12031 = !DILocation(line: 0, scope: !11551, inlinedAt: !12032)
!12032 = distinct !DILocation(line: 637, column: 2, scope: !12027)
!12033 = !DILocation(line: 55, column: 2, scope: !11560, inlinedAt: !12034)
!12034 = distinct !DILocation(line: 145, column: 10, scope: !11551, inlinedAt: !12032)
!12035 = !DILocation(line: 0, scope: !11560, inlinedAt: !12034)
!12036 = !DILocation(line: 639, column: 4, scope: !12037)
!12037 = distinct !DILexicalBlock(scope: !12038, file: !3135, line: 638, column: 41)
!12038 = distinct !DILexicalBlock(scope: !12039, file: !3135, line: 638, column: 7)
!12039 = distinct !DILexicalBlock(scope: !12040, file: !3135, line: 637, column: 26)
!12040 = distinct !DILexicalBlock(scope: !12027, file: !3135, line: 637, column: 2)
!12041 = !DILocation(line: 0, scope: !11578, inlinedAt: !12042)
!12042 = distinct !DILocation(line: 637, column: 2, scope: !12040)
!12043 = !DILocation(line: 0, scope: !11586, inlinedAt: !12044)
!12044 = distinct !DILocation(line: 215, column: 2, scope: !11578, inlinedAt: !12042)
!12045 = !DILocation(line: 95, column: 2, scope: !11586, inlinedAt: !12044)
!12046 = !DILocation(line: 642, column: 1, scope: !12023)
!12047 = distinct !DISubprogram(name: "ready_thread", scope: !3135, file: !3135, line: 617, type: !11509, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !12048)
!12048 = !{!12049}
!12049 = !DILocalVariable(name: "thread", arg: 1, scope: !12047, file: !3135, line: 617, type: !3030)
!12050 = !DILocation(line: 0, scope: !12047)
!12051 = !DILocation(line: 626, column: 7, scope: !12052)
!12052 = distinct !DILexicalBlock(scope: !12047, file: !3135, line: 626, column: 6)
!12053 = !DILocation(line: 626, column: 34, scope: !12052)
!12054 = !DILocation(line: 626, column: 37, scope: !12052)
!12055 = !DILocation(line: 626, column: 6, scope: !12047)
!12056 = !DILocation(line: 0, scope: !11737, inlinedAt: !12057)
!12057 = distinct !DILocation(line: 629, column: 3, scope: !12058)
!12058 = distinct !DILexicalBlock(scope: !12052, file: !3135, line: 626, column: 64)
!12059 = !DILocation(line: 252, column: 15, scope: !11737, inlinedAt: !12057)
!12060 = !DILocation(line: 252, column: 28, scope: !11737, inlinedAt: !12057)
!12061 = !DILocation(line: 0, scope: !11744, inlinedAt: !12062)
!12062 = distinct !DILocation(line: 254, column: 3, scope: !11748, inlinedAt: !12057)
!12063 = !DILocation(line: 0, scope: !11751, inlinedAt: !12064)
!12064 = distinct !DILocation(line: 229, column: 2, scope: !11744, inlinedAt: !12062)
!12065 = !DILocation(line: 188, column: 2, scope: !11761, inlinedAt: !12064)
!12066 = !DILocation(line: 188, column: 2, scope: !11763, inlinedAt: !12064)
!12067 = !DILocation(line: 0, scope: !11761, inlinedAt: !12064)
!12068 = !DILocation(line: 189, column: 7, scope: !11766, inlinedAt: !12064)
!12069 = !DILocation(line: 189, column: 35, scope: !11766, inlinedAt: !12064)
!12070 = !DILocation(line: 189, column: 7, scope: !11767, inlinedAt: !12064)
!12071 = !DILocation(line: 191, column: 21, scope: !11771, inlinedAt: !12064)
!12072 = !DILocation(line: 190, column: 4, scope: !11771, inlinedAt: !12064)
!12073 = !DILocation(line: 192, column: 4, scope: !11771, inlinedAt: !12064)
!12074 = distinct !{!12074, !12065, !12075}
!12075 = !DILocation(line: 194, column: 2, scope: !11761, inlinedAt: !12064)
!12076 = !DILocation(line: 196, column: 37, scope: !11751, inlinedAt: !12064)
!12077 = !DILocation(line: 196, column: 2, scope: !11751, inlinedAt: !12064)
!12078 = !DILocation(line: 197, column: 1, scope: !11751, inlinedAt: !12064)
!12079 = !DILocation(line: 630, column: 3, scope: !12058)
!12080 = !DILocation(line: 632, column: 2, scope: !12058)
!12081 = !DILocation(line: 633, column: 1, scope: !12047)
!12082 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !10823, file: !10823, line: 120, type: !11669, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !12083)
!12083 = !{!12084}
!12084 = !DILocalVariable(name: "thread", arg: 1, scope: !12082, file: !10823, line: 120, type: !3030)
!12085 = !DILocation(line: 0, scope: !12082)
!12086 = !DILocation(line: 122, column: 12, scope: !12082)
!12087 = !DILocation(line: 122, column: 62, scope: !12082)
!12088 = !DILocation(line: 123, column: 4, scope: !12082)
!12089 = !DILocation(line: 122, column: 2, scope: !12082)
!12090 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !3135, file: !3135, line: 644, type: !11509, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !12091)
!12091 = !{!12092, !12093, !12095}
!12092 = !DILocalVariable(name: "thread", arg: 1, scope: !12090, file: !3135, line: 644, type: !3030)
!12093 = !DILocalVariable(name: "__i", scope: !12094, file: !3135, line: 646, type: !11543)
!12094 = distinct !DILexicalBlock(scope: !12090, file: !3135, line: 646, column: 2)
!12095 = !DILocalVariable(name: "__key", scope: !12094, file: !3135, line: 646, type: !11543)
!12096 = !DILocation(line: 0, scope: !12090)
!12097 = !DILocation(line: 0, scope: !12094)
!12098 = !DILocation(line: 0, scope: !11551, inlinedAt: !12099)
!12099 = distinct !DILocation(line: 646, column: 2, scope: !12094)
!12100 = !DILocation(line: 55, column: 2, scope: !11560, inlinedAt: !12101)
!12101 = distinct !DILocation(line: 145, column: 10, scope: !11551, inlinedAt: !12099)
!12102 = !DILocation(line: 0, scope: !11560, inlinedAt: !12101)
!12103 = !DILocation(line: 647, column: 3, scope: !12104)
!12104 = distinct !DILexicalBlock(scope: !12105, file: !3135, line: 646, column: 26)
!12105 = distinct !DILexicalBlock(scope: !12094, file: !3135, line: 646, column: 2)
!12106 = !DILocation(line: 0, scope: !11578, inlinedAt: !12107)
!12107 = distinct !DILocation(line: 646, column: 2, scope: !12105)
!12108 = !DILocation(line: 0, scope: !11586, inlinedAt: !12109)
!12109 = distinct !DILocation(line: 215, column: 2, scope: !11578, inlinedAt: !12107)
!12110 = !DILocation(line: 95, column: 2, scope: !11586, inlinedAt: !12109)
!12111 = !DILocation(line: 649, column: 1, scope: !12090)
!12112 = distinct !DISubprogram(name: "z_sched_start", scope: !3135, file: !3135, line: 651, type: !11509, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !12113)
!12113 = !{!12114, !12115}
!12114 = !DILocalVariable(name: "thread", arg: 1, scope: !12112, file: !3135, line: 651, type: !3030)
!12115 = !DILocalVariable(name: "key", scope: !12112, file: !3135, line: 653, type: !11543)
!12116 = !DILocation(line: 0, scope: !12112)
!12117 = !DILocation(line: 0, scope: !11551, inlinedAt: !12118)
!12118 = distinct !DILocation(line: 653, column: 25, scope: !12112)
!12119 = !DILocation(line: 55, column: 2, scope: !11560, inlinedAt: !12120)
!12120 = distinct !DILocation(line: 145, column: 10, scope: !11551, inlinedAt: !12118)
!12121 = !DILocation(line: 0, scope: !11560, inlinedAt: !12120)
!12122 = !DILocation(line: 655, column: 6, scope: !12123)
!12123 = distinct !DILexicalBlock(scope: !12112, file: !3135, line: 655, column: 6)
!12124 = !DILocation(line: 655, column: 6, scope: !12112)
!12125 = !DILocation(line: 0, scope: !11578, inlinedAt: !12126)
!12126 = distinct !DILocation(line: 656, column: 3, scope: !12127)
!12127 = distinct !DILexicalBlock(scope: !12123, file: !3135, line: 655, column: 36)
!12128 = !DILocation(line: 0, scope: !11586, inlinedAt: !12129)
!12129 = distinct !DILocation(line: 215, column: 2, scope: !11578, inlinedAt: !12126)
!12130 = !DILocation(line: 95, column: 2, scope: !11586, inlinedAt: !12129)
!12131 = !DILocation(line: 657, column: 3, scope: !12127)
!12132 = !DILocation(line: 660, column: 2, scope: !12112)
!12133 = !DILocation(line: 661, column: 2, scope: !12112)
!12134 = !DILocation(line: 662, column: 2, scope: !12112)
!12135 = !DILocation(line: 663, column: 1, scope: !12112)
!12136 = distinct !DISubprogram(name: "z_has_thread_started", scope: !10823, file: !10823, line: 126, type: !11669, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !12137)
!12137 = !{!12138}
!12138 = !DILocalVariable(name: "thread", arg: 1, scope: !12136, file: !10823, line: 126, type: !3030)
!12139 = !DILocation(line: 0, scope: !12136)
!12140 = !DILocation(line: 128, column: 23, scope: !12136)
!12141 = !DILocation(line: 128, column: 36, scope: !12136)
!12142 = !DILocation(line: 128, column: 56, scope: !12136)
!12143 = !DILocation(line: 128, column: 2, scope: !12136)
!12144 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !10823, file: !10823, line: 155, type: !11509, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !12145)
!12145 = !{!12146}
!12146 = !DILocalVariable(name: "thread", arg: 1, scope: !12144, file: !10823, line: 155, type: !3030)
!12147 = !DILocation(line: 0, scope: !12144)
!12148 = !DILocation(line: 157, column: 15, scope: !12144)
!12149 = !DILocation(line: 157, column: 28, scope: !12144)
!12150 = !DILocation(line: 158, column: 1, scope: !12144)
!12151 = distinct !DISubprogram(name: "z_reschedule", scope: !3135, file: !3135, line: 967, type: !11579, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !12152)
!12152 = !{!12153, !12154}
!12153 = !DILocalVariable(name: "lock", arg: 1, scope: !12151, file: !3135, line: 967, type: !11554)
!12154 = !DILocalVariable(name: "key", arg: 2, scope: !12151, file: !3135, line: 967, type: !11543)
!12155 = !DILocation(line: 0, scope: !12151)
!12156 = !DILocation(line: 969, column: 6, scope: !12157)
!12157 = distinct !DILexicalBlock(scope: !12151, file: !3135, line: 969, column: 6)
!12158 = !DILocation(line: 969, column: 23, scope: !12157)
!12159 = !DILocation(line: 969, column: 26, scope: !12157)
!12160 = !DILocation(line: 969, column: 6, scope: !12151)
!12161 = !DILocalVariable(name: "key", arg: 2, scope: !12162, file: !10927, line: 193, type: !11543)
!12162 = distinct !DISubprogram(name: "z_swap", scope: !10927, file: !10927, line: 193, type: !12163, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !12165)
!12163 = !DISubroutineType(types: !12164)
!12164 = !{!103, !11554, !11543}
!12165 = !{!12166, !12161}
!12166 = !DILocalVariable(name: "lock", arg: 1, scope: !12162, file: !10927, line: 193, type: !11554)
!12167 = !DILocation(line: 0, scope: !12162, inlinedAt: !12168)
!12168 = distinct !DILocation(line: 970, column: 3, scope: !12169)
!12169 = distinct !DILexicalBlock(scope: !12157, file: !3135, line: 969, column: 39)
!12170 = !DILocation(line: 196, column: 9, scope: !12162, inlinedAt: !12168)
!12171 = !DILocation(line: 971, column: 2, scope: !12169)
!12172 = !DILocation(line: 0, scope: !11578, inlinedAt: !12173)
!12173 = distinct !DILocation(line: 972, column: 3, scope: !12174)
!12174 = distinct !DILexicalBlock(scope: !12157, file: !3135, line: 971, column: 9)
!12175 = !DILocation(line: 0, scope: !11586, inlinedAt: !12176)
!12176 = distinct !DILocation(line: 215, column: 2, scope: !11578, inlinedAt: !12173)
!12177 = !DILocation(line: 95, column: 2, scope: !11586, inlinedAt: !12176)
!12178 = !DILocation(line: 975, column: 1, scope: !12151)
!12179 = distinct !DISubprogram(name: "resched", scope: !3135, file: !3135, line: 940, type: !12180, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !12182)
!12180 = !DISubroutineType(types: !12181)
!12181 = !{!731, !137}
!12182 = !{!12183}
!12183 = !DILocalVariable(name: "key", arg: 1, scope: !12179, file: !3135, line: 940, type: !137)
!12184 = !DILocation(line: 0, scope: !12179)
!12185 = !DILocalVariable(name: "key", arg: 1, scope: !12186, file: !7145, line: 112, type: !32)
!12186 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !7145, file: !7145, line: 112, type: !12187, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !12189)
!12187 = !DISubroutineType(types: !12188)
!12188 = !{!731, !32}
!12189 = !{!12185}
!12190 = !DILocation(line: 0, scope: !12186, inlinedAt: !12191)
!12191 = distinct !DILocation(line: 946, column: 9, scope: !12179)
!12192 = !DILocation(line: 115, column: 13, scope: !12186, inlinedAt: !12191)
!12193 = !DILocation(line: 946, column: 32, scope: !12179)
!12194 = !DILocation(line: 1031, column: 3, scope: !12195, inlinedAt: !12198)
!12195 = distinct !DISubprogram(name: "__get_IPSR", scope: !7386, file: !7386, line: 1027, type: !135, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !12196)
!12196 = !{!12197}
!12197 = !DILocalVariable(name: "result", scope: !12195, file: !7386, line: 1029, type: !137)
!12198 = distinct !DILocation(line: 48, column: 10, scope: !12199, inlinedAt: !12200)
!12199 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8130, file: !8130, line: 46, type: !8131, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !162)
!12200 = distinct !DILocation(line: 946, column: 36, scope: !12179)
!12201 = !{i64 1940389}
!12202 = !DILocation(line: 0, scope: !12195, inlinedAt: !12198)
!12203 = !DILocation(line: 48, column: 9, scope: !12199, inlinedAt: !12200)
!12204 = !DILocation(line: 946, column: 2, scope: !12179)
!12205 = distinct !DISubprogram(name: "need_swap", scope: !3135, file: !3135, line: 953, type: !8131, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !12206)
!12206 = !{!12207}
!12207 = !DILocalVariable(name: "new_thread", scope: !12205, file: !3135, line: 959, type: !3030)
!12208 = !DILocation(line: 962, column: 31, scope: !12205)
!12209 = !DILocation(line: 0, scope: !12205)
!12210 = !DILocation(line: 963, column: 23, scope: !12205)
!12211 = !DILocation(line: 963, column: 20, scope: !12205)
!12212 = !DILocation(line: 963, column: 2, scope: !12205)
!12213 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !10927, file: !10927, line: 181, type: !7396, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !12214)
!12214 = !{!12215, !12216}
!12215 = !DILocalVariable(name: "key", arg: 1, scope: !12213, file: !10927, line: 181, type: !32)
!12216 = !DILocalVariable(name: "ret", scope: !12213, file: !10927, line: 183, type: !103)
!12217 = !DILocation(line: 0, scope: !12213)
!12218 = !DILocation(line: 185, column: 8, scope: !12213)
!12219 = !DILocation(line: 186, column: 2, scope: !12213)
!12220 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !3135, file: !3135, line: 665, type: !11509, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !12221)
!12221 = !{!12222, !12223, !12225}
!12222 = !DILocalVariable(name: "thread", arg: 1, scope: !12220, file: !3135, line: 665, type: !3030)
!12223 = !DILocalVariable(name: "__i", scope: !12224, file: !3135, line: 671, type: !11543)
!12224 = distinct !DILexicalBlock(scope: !12220, file: !3135, line: 671, column: 2)
!12225 = !DILocalVariable(name: "__key", scope: !12224, file: !3135, line: 671, type: !11543)
!12226 = !DILocation(line: 0, scope: !12220)
!12227 = !DILocation(line: 669, column: 8, scope: !12220)
!12228 = !DILocation(line: 0, scope: !12224)
!12229 = !DILocation(line: 0, scope: !11551, inlinedAt: !12230)
!12230 = distinct !DILocation(line: 671, column: 2, scope: !12224)
!12231 = !DILocation(line: 55, column: 2, scope: !11560, inlinedAt: !12232)
!12232 = distinct !DILocation(line: 145, column: 10, scope: !11551, inlinedAt: !12230)
!12233 = !DILocation(line: 0, scope: !11560, inlinedAt: !12232)
!12234 = !DILocation(line: 672, column: 7, scope: !12235)
!12235 = distinct !DILexicalBlock(scope: !12236, file: !3135, line: 672, column: 7)
!12236 = distinct !DILexicalBlock(scope: !12237, file: !3135, line: 671, column: 26)
!12237 = distinct !DILexicalBlock(scope: !12224, file: !3135, line: 671, column: 2)
!12238 = !DILocation(line: 672, column: 7, scope: !12236)
!12239 = !DILocation(line: 0, scope: !11720, inlinedAt: !12240)
!12240 = distinct !DILocation(line: 673, column: 4, scope: !12241)
!12241 = distinct !DILexicalBlock(scope: !12235, file: !3135, line: 672, column: 35)
!12242 = !DILocation(line: 266, column: 15, scope: !11720, inlinedAt: !12240)
!12243 = !DILocation(line: 266, column: 28, scope: !11720, inlinedAt: !12240)
!12244 = !DILocation(line: 0, scope: !11728, inlinedAt: !12245)
!12245 = distinct !DILocation(line: 268, column: 3, scope: !11732, inlinedAt: !12240)
!12246 = !DILocation(line: 234, column: 2, scope: !11728, inlinedAt: !12245)
!12247 = !DILocation(line: 674, column: 3, scope: !12241)
!12248 = !DILocation(line: 675, column: 3, scope: !12236)
!12249 = !DILocation(line: 676, column: 26, scope: !12236)
!12250 = !DILocation(line: 676, column: 23, scope: !12236)
!12251 = !DILocation(line: 676, column: 3, scope: !12236)
!12252 = !DILocation(line: 0, scope: !11578, inlinedAt: !12253)
!12253 = distinct !DILocation(line: 671, column: 2, scope: !12237)
!12254 = !DILocation(line: 0, scope: !11586, inlinedAt: !12255)
!12255 = distinct !DILocation(line: 215, column: 2, scope: !11578, inlinedAt: !12253)
!12256 = !DILocation(line: 95, column: 2, scope: !11586, inlinedAt: !12255)
!12257 = !DILocation(line: 679, column: 16, scope: !12258)
!12258 = distinct !DILexicalBlock(scope: !12220, file: !3135, line: 679, column: 6)
!12259 = !DILocation(line: 679, column: 13, scope: !12258)
!12260 = !DILocation(line: 679, column: 6, scope: !12220)
!12261 = !DILocation(line: 680, column: 3, scope: !12262)
!12262 = distinct !DILexicalBlock(scope: !12258, file: !3135, line: 679, column: 26)
!12263 = !DILocation(line: 681, column: 2, scope: !12262)
!12264 = !DILocation(line: 684, column: 1, scope: !12220)
!12265 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !11217, file: !11217, line: 52, type: !11527, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !12266)
!12266 = !{!12267}
!12267 = !DILocalVariable(name: "thread", arg: 1, scope: !12265, file: !11217, line: 52, type: !3030)
!12268 = !DILocation(line: 0, scope: !12265)
!12269 = !DILocation(line: 54, column: 39, scope: !12265)
!12270 = !DILocation(line: 54, column: 9, scope: !12265)
!12271 = !DILocation(line: 54, column: 2, scope: !12265)
!12272 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !10823, file: !10823, line: 141, type: !11509, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !12273)
!12273 = !{!12274}
!12274 = !DILocalVariable(name: "thread", arg: 1, scope: !12272, file: !10823, line: 141, type: !3030)
!12275 = !DILocation(line: 0, scope: !12272)
!12276 = !DILocation(line: 143, column: 15, scope: !12272)
!12277 = !DILocation(line: 143, column: 28, scope: !12272)
!12278 = !DILocation(line: 146, column: 1, scope: !12272)
!12279 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !10823, file: !10823, line: 73, type: !3598, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !162)
!12280 = !DILocation(line: 55, column: 2, scope: !11560, inlinedAt: !12281)
!12281 = distinct !DILocation(line: 75, column: 30, scope: !12279)
!12282 = !DILocation(line: 0, scope: !11560, inlinedAt: !12281)
!12283 = !DILocation(line: 75, column: 9, scope: !12279)
!12284 = !DILocation(line: 76, column: 1, scope: !12279)
!12285 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !3135, file: !3135, line: 977, type: !7475, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !12286)
!12286 = !{!12287}
!12287 = !DILocalVariable(name: "key", arg: 1, scope: !12285, file: !3135, line: 977, type: !137)
!12288 = !DILocation(line: 0, scope: !12285)
!12289 = !DILocation(line: 979, column: 6, scope: !12290)
!12290 = distinct !DILexicalBlock(scope: !12285, file: !3135, line: 979, column: 6)
!12291 = !DILocation(line: 979, column: 6, scope: !12285)
!12292 = !DILocation(line: 980, column: 3, scope: !12293)
!12293 = distinct !DILexicalBlock(scope: !12290, file: !3135, line: 979, column: 20)
!12294 = !DILocation(line: 981, column: 2, scope: !12293)
!12295 = !DILocation(line: 0, scope: !11586, inlinedAt: !12296)
!12296 = distinct !DILocation(line: 982, column: 3, scope: !12297)
!12297 = distinct !DILexicalBlock(scope: !12290, file: !3135, line: 981, column: 9)
!12298 = !DILocation(line: 95, column: 2, scope: !11586, inlinedAt: !12296)
!12299 = !DILocation(line: 985, column: 1, scope: !12285)
!12300 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !3135, file: !3135, line: 695, type: !11509, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !12301)
!12301 = !{!12302, !12303}
!12302 = !DILocalVariable(name: "thread", arg: 1, scope: !12300, file: !3135, line: 695, type: !3030)
!12303 = !DILocalVariable(name: "key", scope: !12300, file: !3135, line: 699, type: !11543)
!12304 = !DILocation(line: 0, scope: !12300)
!12305 = !DILocation(line: 0, scope: !11551, inlinedAt: !12306)
!12306 = distinct !DILocation(line: 699, column: 25, scope: !12300)
!12307 = !DILocation(line: 55, column: 2, scope: !11560, inlinedAt: !12308)
!12308 = distinct !DILocation(line: 145, column: 10, scope: !11551, inlinedAt: !12306)
!12309 = !DILocation(line: 0, scope: !11560, inlinedAt: !12308)
!12310 = !DILocation(line: 702, column: 7, scope: !12311)
!12311 = distinct !DILexicalBlock(scope: !12300, file: !3135, line: 702, column: 6)
!12312 = !DILocation(line: 702, column: 6, scope: !12300)
!12313 = !DILocation(line: 0, scope: !11578, inlinedAt: !12314)
!12314 = distinct !DILocation(line: 703, column: 3, scope: !12315)
!12315 = distinct !DILexicalBlock(scope: !12311, file: !3135, line: 702, column: 38)
!12316 = !DILocation(line: 0, scope: !11586, inlinedAt: !12317)
!12317 = distinct !DILocation(line: 215, column: 2, scope: !11578, inlinedAt: !12314)
!12318 = !DILocation(line: 95, column: 2, scope: !11586, inlinedAt: !12317)
!12319 = !DILocation(line: 704, column: 3, scope: !12315)
!12320 = !DILocation(line: 707, column: 2, scope: !12300)
!12321 = !DILocation(line: 708, column: 2, scope: !12300)
!12322 = !DILocation(line: 710, column: 2, scope: !12300)
!12323 = !DILocation(line: 713, column: 1, scope: !12300)
!12324 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !10823, file: !10823, line: 96, type: !11669, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !12325)
!12325 = !{!12326}
!12326 = !DILocalVariable(name: "thread", arg: 1, scope: !12324, file: !10823, line: 96, type: !3030)
!12327 = !DILocation(line: 0, scope: !12324)
!12328 = !DILocation(line: 98, column: 23, scope: !12324)
!12329 = !DILocation(line: 98, column: 36, scope: !12324)
!12330 = !DILocation(line: 98, column: 57, scope: !12324)
!12331 = !DILocation(line: 98, column: 2, scope: !12324)
!12332 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !10823, file: !10823, line: 148, type: !11509, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !12333)
!12333 = !{!12334}
!12334 = !DILocalVariable(name: "thread", arg: 1, scope: !12332, file: !10823, line: 148, type: !3030)
!12335 = !DILocation(line: 0, scope: !12332)
!12336 = !DILocation(line: 150, column: 15, scope: !12332)
!12337 = !DILocation(line: 150, column: 28, scope: !12332)
!12338 = !DILocation(line: 153, column: 1, scope: !12332)
!12339 = distinct !DISubprogram(name: "z_pend_thread", scope: !3135, file: !3135, line: 770, type: !12340, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !12346)
!12340 = !DISubroutineType(types: !12341)
!12341 = !{null, !3030, !3061, !12342}
!12342 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !2348, line: 67, baseType: !12343)
!12343 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2348, line: 65, size: 64, elements: !12344)
!12344 = !{!12345}
!12345 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !12343, file: !2348, line: 66, baseType: !2347, size: 64)
!12346 = !{!12347, !12348, !12349, !12350, !12352}
!12347 = !DILocalVariable(name: "thread", arg: 1, scope: !12339, file: !3135, line: 770, type: !3030)
!12348 = !DILocalVariable(name: "wait_q", arg: 2, scope: !12339, file: !3135, line: 770, type: !3061)
!12349 = !DILocalVariable(name: "timeout", arg: 3, scope: !12339, file: !3135, line: 771, type: !12342)
!12350 = !DILocalVariable(name: "__i", scope: !12351, file: !3135, line: 774, type: !11543)
!12351 = distinct !DILexicalBlock(scope: !12339, file: !3135, line: 774, column: 2)
!12352 = !DILocalVariable(name: "__key", scope: !12351, file: !3135, line: 774, type: !11543)
!12353 = !DILocation(line: 0, scope: !12339)
!12354 = !DILocation(line: 0, scope: !12351)
!12355 = !DILocation(line: 0, scope: !11551, inlinedAt: !12356)
!12356 = distinct !DILocation(line: 774, column: 2, scope: !12351)
!12357 = !DILocation(line: 55, column: 2, scope: !11560, inlinedAt: !12358)
!12358 = distinct !DILocation(line: 145, column: 10, scope: !11551, inlinedAt: !12356)
!12359 = !DILocation(line: 0, scope: !11560, inlinedAt: !12358)
!12360 = !DILocation(line: 775, column: 3, scope: !12361)
!12361 = distinct !DILexicalBlock(scope: !12362, file: !3135, line: 774, column: 26)
!12362 = distinct !DILexicalBlock(scope: !12351, file: !3135, line: 774, column: 2)
!12363 = !DILocation(line: 0, scope: !11578, inlinedAt: !12364)
!12364 = distinct !DILocation(line: 774, column: 2, scope: !12362)
!12365 = !DILocation(line: 0, scope: !11586, inlinedAt: !12366)
!12366 = distinct !DILocation(line: 215, column: 2, scope: !11578, inlinedAt: !12364)
!12367 = !DILocation(line: 95, column: 2, scope: !11586, inlinedAt: !12366)
!12368 = !DILocation(line: 777, column: 1, scope: !12339)
!12369 = distinct !DISubprogram(name: "pend_locked", scope: !3135, file: !3135, line: 760, type: !12340, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !12370)
!12370 = !{!12371, !12372, !12373}
!12371 = !DILocalVariable(name: "thread", arg: 1, scope: !12369, file: !3135, line: 760, type: !3030)
!12372 = !DILocalVariable(name: "wait_q", arg: 2, scope: !12369, file: !3135, line: 760, type: !3061)
!12373 = !DILocalVariable(name: "timeout", arg: 3, scope: !12369, file: !3135, line: 761, type: !12342)
!12374 = !DILocation(line: 0, scope: !12369)
!12375 = !DILocation(line: 766, column: 2, scope: !12369)
!12376 = !DILocation(line: 767, column: 2, scope: !12369)
!12377 = !DILocation(line: 768, column: 1, scope: !12369)
!12378 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !3135, file: !3135, line: 740, type: !12379, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !12381)
!12379 = !DISubroutineType(types: !12380)
!12380 = !{null, !3030, !3061}
!12381 = !{!12382, !12383}
!12382 = !DILocalVariable(name: "thread", arg: 1, scope: !12378, file: !3135, line: 740, type: !3030)
!12383 = !DILocalVariable(name: "wait_q", arg: 2, scope: !12378, file: !3135, line: 740, type: !3061)
!12384 = !DILocation(line: 0, scope: !12378)
!12385 = !DILocation(line: 742, column: 2, scope: !12378)
!12386 = !DILocation(line: 743, column: 2, scope: !12378)
!12387 = !DILocation(line: 747, column: 13, scope: !12388)
!12388 = distinct !DILexicalBlock(scope: !12378, file: !3135, line: 747, column: 6)
!12389 = !DILocation(line: 747, column: 6, scope: !12378)
!12390 = !DILocation(line: 748, column: 16, scope: !12391)
!12391 = distinct !DILexicalBlock(scope: !12388, file: !3135, line: 747, column: 22)
!12392 = !DILocation(line: 748, column: 26, scope: !12391)
!12393 = !DILocation(line: 749, column: 28, scope: !12391)
!12394 = !DILocation(line: 0, scope: !11751, inlinedAt: !12395)
!12395 = distinct !DILocation(line: 749, column: 3, scope: !12391)
!12396 = !DILocation(line: 188, column: 2, scope: !11761, inlinedAt: !12395)
!12397 = !DILocation(line: 188, column: 2, scope: !11763, inlinedAt: !12395)
!12398 = !DILocation(line: 0, scope: !11761, inlinedAt: !12395)
!12399 = !DILocation(line: 189, column: 7, scope: !11766, inlinedAt: !12395)
!12400 = !DILocation(line: 189, column: 35, scope: !11766, inlinedAt: !12395)
!12401 = !DILocation(line: 189, column: 7, scope: !11767, inlinedAt: !12395)
!12402 = !DILocation(line: 191, column: 21, scope: !11771, inlinedAt: !12395)
!12403 = !DILocation(line: 190, column: 4, scope: !11771, inlinedAt: !12395)
!12404 = !DILocation(line: 192, column: 4, scope: !11771, inlinedAt: !12395)
!12405 = distinct !{!12405, !12396, !12406}
!12406 = !DILocation(line: 194, column: 2, scope: !11761, inlinedAt: !12395)
!12407 = !DILocation(line: 196, column: 37, scope: !11751, inlinedAt: !12395)
!12408 = !DILocation(line: 196, column: 2, scope: !11751, inlinedAt: !12395)
!12409 = !DILocation(line: 197, column: 1, scope: !11751, inlinedAt: !12395)
!12410 = !DILocation(line: 751, column: 1, scope: !12378)
!12411 = distinct !DISubprogram(name: "add_thread_timeout", scope: !3135, file: !3135, line: 753, type: !12412, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !12414)
!12412 = !DISubroutineType(types: !12413)
!12413 = !{null, !3030, !12342}
!12414 = !{!12415, !12416}
!12415 = !DILocalVariable(name: "thread", arg: 1, scope: !12411, file: !3135, line: 753, type: !3030)
!12416 = !DILocalVariable(name: "timeout", arg: 2, scope: !12411, file: !3135, line: 753, type: !12342)
!12417 = !DILocation(line: 0, scope: !12411)
!12418 = !DILocation(line: 755, column: 7, scope: !12419)
!12419 = distinct !DILexicalBlock(scope: !12411, file: !3135, line: 755, column: 6)
!12420 = !DILocation(line: 755, column: 6, scope: !12411)
!12421 = !DILocation(line: 756, column: 3, scope: !12422)
!12422 = distinct !DILexicalBlock(scope: !12419, file: !3135, line: 755, column: 41)
!12423 = !DILocation(line: 757, column: 2, scope: !12422)
!12424 = !DILocation(line: 758, column: 1, scope: !12411)
!12425 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !11217, file: !11217, line: 47, type: !12412, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !12426)
!12426 = !{!12427, !12428}
!12427 = !DILocalVariable(name: "thread", arg: 1, scope: !12425, file: !11217, line: 47, type: !3030)
!12428 = !DILocalVariable(name: "ticks", arg: 2, scope: !12425, file: !11217, line: 47, type: !12342)
!12429 = !DILocation(line: 0, scope: !12425)
!12430 = !DILocation(line: 49, column: 30, scope: !12425)
!12431 = !DILocation(line: 49, column: 2, scope: !12425)
!12432 = !DILocation(line: 50, column: 1, scope: !12425)
!12433 = distinct !DISubprogram(name: "z_thread_timeout", scope: !3135, file: !3135, line: 795, type: !3087, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !12434)
!12434 = !{!12435, !12436, !12437, !12439, !12440}
!12435 = !DILocalVariable(name: "timeout", arg: 1, scope: !12433, file: !3135, line: 795, type: !3089)
!12436 = !DILocalVariable(name: "thread", scope: !12433, file: !3135, line: 797, type: !3030)
!12437 = !DILocalVariable(name: "__i", scope: !12438, file: !3135, line: 800, type: !11543)
!12438 = distinct !DILexicalBlock(scope: !12433, file: !3135, line: 800, column: 2)
!12439 = !DILocalVariable(name: "__key", scope: !12438, file: !3135, line: 800, type: !11543)
!12440 = !DILocalVariable(name: "killed", scope: !12441, file: !3135, line: 801, type: !731)
!12441 = distinct !DILexicalBlock(scope: !12442, file: !3135, line: 800, column: 26)
!12442 = distinct !DILexicalBlock(scope: !12438, file: !3135, line: 800, column: 2)
!12443 = !DILocation(line: 0, scope: !12433)
!12444 = !DILocation(line: 797, column: 28, scope: !12433)
!12445 = !DILocation(line: 0, scope: !12438)
!12446 = !DILocation(line: 0, scope: !11551, inlinedAt: !12447)
!12447 = distinct !DILocation(line: 800, column: 2, scope: !12438)
!12448 = !DILocation(line: 55, column: 2, scope: !11560, inlinedAt: !12449)
!12449 = distinct !DILocation(line: 145, column: 10, scope: !11551, inlinedAt: !12447)
!12450 = !DILocation(line: 0, scope: !11560, inlinedAt: !12449)
!12451 = !DILocation(line: 801, column: 27, scope: !12441)
!12452 = !DILocation(line: 801, column: 32, scope: !12441)
!12453 = !DILocation(line: 801, column: 61, scope: !12441)
!12454 = !DILocation(line: 0, scope: !12441)
!12455 = !DILocation(line: 804, column: 7, scope: !12441)
!12456 = !DILocation(line: 805, column: 21, scope: !12457)
!12457 = distinct !DILexicalBlock(scope: !12458, file: !3135, line: 805, column: 8)
!12458 = distinct !DILexicalBlock(scope: !12459, file: !3135, line: 804, column: 16)
!12459 = distinct !DILexicalBlock(scope: !12441, file: !3135, line: 804, column: 7)
!12460 = !DILocation(line: 805, column: 31, scope: !12457)
!12461 = !DILocation(line: 805, column: 8, scope: !12458)
!12462 = !DILocation(line: 806, column: 5, scope: !12463)
!12463 = distinct !DILexicalBlock(scope: !12457, file: !3135, line: 805, column: 40)
!12464 = !DILocation(line: 807, column: 4, scope: !12463)
!12465 = !DILocation(line: 808, column: 4, scope: !12458)
!12466 = !DILocation(line: 809, column: 4, scope: !12458)
!12467 = !DILocation(line: 810, column: 4, scope: !12458)
!12468 = !DILocation(line: 811, column: 3, scope: !12458)
!12469 = !DILocation(line: 0, scope: !11578, inlinedAt: !12470)
!12470 = distinct !DILocation(line: 800, column: 2, scope: !12442)
!12471 = !DILocation(line: 0, scope: !11586, inlinedAt: !12472)
!12472 = distinct !DILocation(line: 215, column: 2, scope: !11578, inlinedAt: !12470)
!12473 = !DILocation(line: 95, column: 2, scope: !11586, inlinedAt: !12472)
!12474 = !DILocation(line: 813, column: 1, scope: !12433)
!12475 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !3135, file: !3135, line: 779, type: !11509, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !12476)
!12476 = !{!12477}
!12477 = !DILocalVariable(name: "thread", arg: 1, scope: !12475, file: !3135, line: 779, type: !3030)
!12478 = !DILocation(line: 0, scope: !12475)
!12479 = !DILocation(line: 781, column: 2, scope: !12475)
!12480 = !DILocation(line: 782, column: 2, scope: !12475)
!12481 = !DILocation(line: 783, column: 15, scope: !12475)
!12482 = !DILocation(line: 783, column: 25, scope: !12475)
!12483 = !DILocation(line: 784, column: 1, scope: !12475)
!12484 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !10823, file: !10823, line: 165, type: !11509, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !12485)
!12485 = !{!12486}
!12486 = !DILocalVariable(name: "thread", arg: 1, scope: !12484, file: !10823, line: 165, type: !3030)
!12487 = !DILocation(line: 0, scope: !12484)
!12488 = !DILocation(line: 167, column: 15, scope: !12484)
!12489 = !DILocation(line: 167, column: 28, scope: !12484)
!12490 = !DILocation(line: 168, column: 1, scope: !12484)
!12491 = distinct !DISubprogram(name: "unready_thread", scope: !3135, file: !3135, line: 731, type: !11509, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !12492)
!12492 = !{!12493}
!12493 = !DILocalVariable(name: "thread", arg: 1, scope: !12491, file: !3135, line: 731, type: !3030)
!12494 = !DILocation(line: 0, scope: !12491)
!12495 = !DILocation(line: 733, column: 6, scope: !12496)
!12496 = distinct !DILexicalBlock(scope: !12491, file: !3135, line: 733, column: 6)
!12497 = !DILocation(line: 733, column: 6, scope: !12491)
!12498 = !DILocation(line: 0, scope: !11720, inlinedAt: !12499)
!12499 = distinct !DILocation(line: 734, column: 3, scope: !12500)
!12500 = distinct !DILexicalBlock(scope: !12496, file: !3135, line: 733, column: 34)
!12501 = !DILocation(line: 266, column: 15, scope: !11720, inlinedAt: !12499)
!12502 = !DILocation(line: 266, column: 28, scope: !11720, inlinedAt: !12499)
!12503 = !DILocation(line: 0, scope: !11728, inlinedAt: !12504)
!12504 = distinct !DILocation(line: 268, column: 3, scope: !11732, inlinedAt: !12499)
!12505 = !DILocation(line: 234, column: 2, scope: !11728, inlinedAt: !12504)
!12506 = !DILocation(line: 735, column: 2, scope: !12500)
!12507 = !DILocation(line: 736, column: 25, scope: !12491)
!12508 = !DILocation(line: 736, column: 22, scope: !12491)
!12509 = !DILocation(line: 736, column: 2, scope: !12491)
!12510 = !DILocation(line: 737, column: 1, scope: !12491)
!12511 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !10823, file: !10823, line: 160, type: !11509, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !12512)
!12512 = !{!12513}
!12513 = !DILocalVariable(name: "thread", arg: 1, scope: !12511, file: !10823, line: 160, type: !3030)
!12514 = !DILocation(line: 0, scope: !12511)
!12515 = !DILocation(line: 162, column: 15, scope: !12511)
!12516 = !DILocation(line: 162, column: 28, scope: !12511)
!12517 = !DILocation(line: 163, column: 1, scope: !12511)
!12518 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !3135, file: !3135, line: 786, type: !11509, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !12519)
!12519 = !{!12520, !12521, !12523}
!12520 = !DILocalVariable(name: "thread", arg: 1, scope: !12518, file: !3135, line: 786, type: !3030)
!12521 = !DILocalVariable(name: "__i", scope: !12522, file: !3135, line: 788, type: !11543)
!12522 = distinct !DILexicalBlock(scope: !12518, file: !3135, line: 788, column: 2)
!12523 = !DILocalVariable(name: "__key", scope: !12522, file: !3135, line: 788, type: !11543)
!12524 = !DILocation(line: 0, scope: !12518)
!12525 = !DILocation(line: 0, scope: !12522)
!12526 = !DILocation(line: 0, scope: !11551, inlinedAt: !12527)
!12527 = distinct !DILocation(line: 788, column: 2, scope: !12522)
!12528 = !DILocation(line: 55, column: 2, scope: !11560, inlinedAt: !12529)
!12529 = distinct !DILocation(line: 145, column: 10, scope: !11551, inlinedAt: !12527)
!12530 = !DILocation(line: 0, scope: !11560, inlinedAt: !12529)
!12531 = !DILocation(line: 789, column: 3, scope: !12532)
!12532 = distinct !DILexicalBlock(scope: !12533, file: !3135, line: 788, column: 26)
!12533 = distinct !DILexicalBlock(scope: !12522, file: !3135, line: 788, column: 2)
!12534 = !DILocation(line: 0, scope: !11578, inlinedAt: !12535)
!12535 = distinct !DILocation(line: 788, column: 2, scope: !12533)
!12536 = !DILocation(line: 0, scope: !11586, inlinedAt: !12537)
!12537 = distinct !DILocation(line: 215, column: 2, scope: !11578, inlinedAt: !12535)
!12538 = !DILocation(line: 95, column: 2, scope: !11586, inlinedAt: !12537)
!12539 = !DILocation(line: 791, column: 1, scope: !12518)
!12540 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !3135, file: !3135, line: 816, type: !12541, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !12543)
!12541 = !DISubroutineType(types: !12542)
!12542 = !{!103, !137, !3061, !12342}
!12543 = !{!12544, !12545, !12546, !12547, !12548, !12550}
!12544 = !DILocalVariable(name: "key", arg: 1, scope: !12540, file: !3135, line: 816, type: !137)
!12545 = !DILocalVariable(name: "wait_q", arg: 2, scope: !12540, file: !3135, line: 816, type: !3061)
!12546 = !DILocalVariable(name: "timeout", arg: 3, scope: !12540, file: !3135, line: 816, type: !12342)
!12547 = !DILocalVariable(name: "ret", scope: !12540, file: !3135, line: 828, type: !103)
!12548 = !DILocalVariable(name: "__i", scope: !12549, file: !3135, line: 829, type: !11543)
!12549 = distinct !DILexicalBlock(scope: !12540, file: !3135, line: 829, column: 2)
!12550 = !DILocalVariable(name: "__key", scope: !12549, file: !3135, line: 829, type: !11543)
!12551 = !DILocation(line: 0, scope: !12540)
!12552 = !DILocation(line: 823, column: 14, scope: !12540)
!12553 = !DILocation(line: 823, column: 2, scope: !12540)
!12554 = !DILocation(line: 826, column: 20, scope: !12540)
!12555 = !DILocation(line: 826, column: 18, scope: !12540)
!12556 = !DILocation(line: 828, column: 12, scope: !12540)
!12557 = !DILocation(line: 0, scope: !12549)
!12558 = !DILocation(line: 0, scope: !11551, inlinedAt: !12559)
!12559 = distinct !DILocation(line: 829, column: 2, scope: !12549)
!12560 = !DILocation(line: 55, column: 2, scope: !11560, inlinedAt: !12561)
!12561 = distinct !DILocation(line: 145, column: 10, scope: !11551, inlinedAt: !12559)
!12562 = !DILocation(line: 0, scope: !11560, inlinedAt: !12561)
!12563 = !DILocation(line: 830, column: 7, scope: !12564)
!12564 = distinct !DILexicalBlock(scope: !12565, file: !3135, line: 830, column: 7)
!12565 = distinct !DILexicalBlock(scope: !12566, file: !3135, line: 829, column: 26)
!12566 = distinct !DILexicalBlock(scope: !12549, file: !3135, line: 829, column: 2)
!12567 = !DILocation(line: 830, column: 26, scope: !12564)
!12568 = !DILocation(line: 830, column: 23, scope: !12564)
!12569 = !DILocation(line: 830, column: 7, scope: !12565)
!12570 = !DILocation(line: 831, column: 20, scope: !12571)
!12571 = distinct !DILexicalBlock(scope: !12564, file: !3135, line: 830, column: 36)
!12572 = !DILocation(line: 832, column: 3, scope: !12571)
!12573 = !DILocation(line: 0, scope: !11578, inlinedAt: !12574)
!12574 = distinct !DILocation(line: 829, column: 2, scope: !12566)
!12575 = !DILocation(line: 0, scope: !11586, inlinedAt: !12576)
!12576 = distinct !DILocation(line: 215, column: 2, scope: !11578, inlinedAt: !12574)
!12577 = !DILocation(line: 95, column: 2, scope: !11586, inlinedAt: !12576)
!12578 = !DILocation(line: 834, column: 2, scope: !12540)
!12579 = distinct !DISubprogram(name: "z_pend_curr", scope: !3135, file: !3135, line: 840, type: !12580, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !12582)
!12580 = !DISubroutineType(types: !12581)
!12581 = !{!103, !11554, !11543, !3061, !12342}
!12582 = !{!12583, !12584, !12585, !12586}
!12583 = !DILocalVariable(name: "lock", arg: 1, scope: !12579, file: !3135, line: 840, type: !11554)
!12584 = !DILocalVariable(name: "key", arg: 2, scope: !12579, file: !3135, line: 840, type: !11543)
!12585 = !DILocalVariable(name: "wait_q", arg: 3, scope: !12579, file: !3135, line: 841, type: !3061)
!12586 = !DILocalVariable(name: "timeout", arg: 4, scope: !12579, file: !3135, line: 841, type: !12342)
!12587 = !DILocation(line: 0, scope: !12579)
!12588 = !DILocation(line: 844, column: 20, scope: !12579)
!12589 = !DILocation(line: 844, column: 18, scope: !12579)
!12590 = !DILocation(line: 0, scope: !11551, inlinedAt: !12591)
!12591 = distinct !DILocation(line: 856, column: 9, scope: !12579)
!12592 = !DILocation(line: 55, column: 2, scope: !11560, inlinedAt: !12593)
!12593 = distinct !DILocation(line: 145, column: 10, scope: !11551, inlinedAt: !12591)
!12594 = !DILocation(line: 0, scope: !11560, inlinedAt: !12593)
!12595 = !DILocation(line: 857, column: 14, scope: !12579)
!12596 = !DILocation(line: 857, column: 2, scope: !12579)
!12597 = !DILocation(line: 0, scope: !12162, inlinedAt: !12598)
!12598 = distinct !DILocation(line: 859, column: 9, scope: !12579)
!12599 = !DILocation(line: 196, column: 9, scope: !12162, inlinedAt: !12598)
!12600 = !DILocation(line: 859, column: 2, scope: !12579)
!12601 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !3135, file: !3135, line: 862, type: !12602, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !12604)
!12602 = !DISubroutineType(types: !12603)
!12603 = !{!3030, !3061}
!12604 = !{!12605, !12606, !12607, !12609}
!12605 = !DILocalVariable(name: "wait_q", arg: 1, scope: !12601, file: !3135, line: 862, type: !3061)
!12606 = !DILocalVariable(name: "thread", scope: !12601, file: !3135, line: 864, type: !3030)
!12607 = !DILocalVariable(name: "__i", scope: !12608, file: !3135, line: 866, type: !11543)
!12608 = distinct !DILexicalBlock(scope: !12601, file: !3135, line: 866, column: 2)
!12609 = !DILocalVariable(name: "__key", scope: !12608, file: !3135, line: 866, type: !11543)
!12610 = !DILocation(line: 0, scope: !12601)
!12611 = !DILocation(line: 0, scope: !12608)
!12612 = !DILocation(line: 0, scope: !11551, inlinedAt: !12613)
!12613 = distinct !DILocation(line: 866, column: 2, scope: !12608)
!12614 = !DILocation(line: 55, column: 2, scope: !11560, inlinedAt: !12615)
!12615 = distinct !DILocation(line: 145, column: 10, scope: !11551, inlinedAt: !12613)
!12616 = !DILocation(line: 0, scope: !11560, inlinedAt: !12615)
!12617 = !DILocation(line: 867, column: 12, scope: !12618)
!12618 = distinct !DILexicalBlock(scope: !12619, file: !3135, line: 866, column: 26)
!12619 = distinct !DILexicalBlock(scope: !12608, file: !3135, line: 866, column: 2)
!12620 = !DILocation(line: 869, column: 14, scope: !12621)
!12621 = distinct !DILexicalBlock(scope: !12618, file: !3135, line: 869, column: 7)
!12622 = !DILocation(line: 869, column: 7, scope: !12618)
!12623 = !DILocation(line: 870, column: 4, scope: !12624)
!12624 = distinct !DILexicalBlock(scope: !12621, file: !3135, line: 869, column: 23)
!12625 = !DILocation(line: 871, column: 3, scope: !12624)
!12626 = !DILocation(line: 0, scope: !11578, inlinedAt: !12627)
!12627 = distinct !DILocation(line: 866, column: 2, scope: !12619)
!12628 = !DILocation(line: 0, scope: !11586, inlinedAt: !12629)
!12629 = distinct !DILocation(line: 215, column: 2, scope: !11578, inlinedAt: !12627)
!12630 = !DILocation(line: 95, column: 2, scope: !11586, inlinedAt: !12629)
!12631 = !DILocation(line: 874, column: 2, scope: !12601)
!12632 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !3135, file: !3135, line: 877, type: !12602, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !12633)
!12633 = !{!12634, !12635, !12636, !12638}
!12634 = !DILocalVariable(name: "wait_q", arg: 1, scope: !12632, file: !3135, line: 877, type: !3061)
!12635 = !DILocalVariable(name: "thread", scope: !12632, file: !3135, line: 879, type: !3030)
!12636 = !DILocalVariable(name: "__i", scope: !12637, file: !3135, line: 881, type: !11543)
!12637 = distinct !DILexicalBlock(scope: !12632, file: !3135, line: 881, column: 2)
!12638 = !DILocalVariable(name: "__key", scope: !12637, file: !3135, line: 881, type: !11543)
!12639 = !DILocation(line: 0, scope: !12632)
!12640 = !DILocation(line: 0, scope: !12637)
!12641 = !DILocation(line: 0, scope: !11551, inlinedAt: !12642)
!12642 = distinct !DILocation(line: 881, column: 2, scope: !12637)
!12643 = !DILocation(line: 55, column: 2, scope: !11560, inlinedAt: !12644)
!12644 = distinct !DILocation(line: 145, column: 10, scope: !11551, inlinedAt: !12642)
!12645 = !DILocation(line: 0, scope: !11560, inlinedAt: !12644)
!12646 = !DILocation(line: 882, column: 12, scope: !12647)
!12647 = distinct !DILexicalBlock(scope: !12648, file: !3135, line: 881, column: 26)
!12648 = distinct !DILexicalBlock(scope: !12637, file: !3135, line: 881, column: 2)
!12649 = !DILocation(line: 884, column: 14, scope: !12650)
!12650 = distinct !DILexicalBlock(scope: !12647, file: !3135, line: 884, column: 7)
!12651 = !DILocation(line: 884, column: 7, scope: !12647)
!12652 = !DILocation(line: 885, column: 4, scope: !12653)
!12653 = distinct !DILexicalBlock(scope: !12650, file: !3135, line: 884, column: 23)
!12654 = !DILocation(line: 886, column: 10, scope: !12653)
!12655 = !DILocation(line: 887, column: 3, scope: !12653)
!12656 = !DILocation(line: 0, scope: !11578, inlinedAt: !12657)
!12657 = distinct !DILocation(line: 881, column: 2, scope: !12648)
!12658 = !DILocation(line: 0, scope: !11586, inlinedAt: !12659)
!12659 = distinct !DILocation(line: 215, column: 2, scope: !11578, inlinedAt: !12657)
!12660 = !DILocation(line: 95, column: 2, scope: !11586, inlinedAt: !12659)
!12661 = !DILocation(line: 890, column: 2, scope: !12632)
!12662 = distinct !DISubprogram(name: "z_unpend_thread", scope: !3135, file: !3135, line: 893, type: !11509, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !12663)
!12663 = !{!12664}
!12664 = !DILocalVariable(name: "thread", arg: 1, scope: !12662, file: !3135, line: 893, type: !3030)
!12665 = !DILocation(line: 0, scope: !12662)
!12666 = !DILocation(line: 0, scope: !12518, inlinedAt: !12667)
!12667 = distinct !DILocation(line: 895, column: 2, scope: !12662)
!12668 = !DILocation(line: 0, scope: !12522, inlinedAt: !12667)
!12669 = !DILocation(line: 0, scope: !11551, inlinedAt: !12670)
!12670 = distinct !DILocation(line: 788, column: 2, scope: !12522, inlinedAt: !12667)
!12671 = !DILocation(line: 55, column: 2, scope: !11560, inlinedAt: !12672)
!12672 = distinct !DILocation(line: 145, column: 10, scope: !11551, inlinedAt: !12670)
!12673 = !DILocation(line: 0, scope: !11560, inlinedAt: !12672)
!12674 = !DILocation(line: 789, column: 3, scope: !12532, inlinedAt: !12667)
!12675 = !DILocation(line: 0, scope: !11578, inlinedAt: !12676)
!12676 = distinct !DILocation(line: 788, column: 2, scope: !12533, inlinedAt: !12667)
!12677 = !DILocation(line: 0, scope: !11586, inlinedAt: !12678)
!12678 = distinct !DILocation(line: 215, column: 2, scope: !11578, inlinedAt: !12676)
!12679 = !DILocation(line: 95, column: 2, scope: !11586, inlinedAt: !12678)
!12680 = !DILocation(line: 896, column: 8, scope: !12662)
!12681 = !DILocation(line: 897, column: 1, scope: !12662)
!12682 = distinct !DISubprogram(name: "z_set_prio", scope: !3135, file: !3135, line: 902, type: !11871, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !12683)
!12683 = !{!12684, !12685, !12686, !12687, !12689}
!12684 = !DILocalVariable(name: "thread", arg: 1, scope: !12682, file: !3135, line: 902, type: !3030)
!12685 = !DILocalVariable(name: "prio", arg: 2, scope: !12682, file: !3135, line: 902, type: !103)
!12686 = !DILocalVariable(name: "need_sched", scope: !12682, file: !3135, line: 904, type: !731)
!12687 = !DILocalVariable(name: "__i", scope: !12688, file: !3135, line: 906, type: !11543)
!12688 = distinct !DILexicalBlock(scope: !12682, file: !3135, line: 906, column: 2)
!12689 = !DILocalVariable(name: "__key", scope: !12688, file: !3135, line: 906, type: !11543)
!12690 = !DILocation(line: 0, scope: !12682)
!12691 = !DILocation(line: 0, scope: !12688)
!12692 = !DILocation(line: 0, scope: !11551, inlinedAt: !12693)
!12693 = distinct !DILocation(line: 906, column: 2, scope: !12688)
!12694 = !DILocation(line: 55, column: 2, scope: !11560, inlinedAt: !12695)
!12695 = distinct !DILocation(line: 145, column: 10, scope: !11551, inlinedAt: !12693)
!12696 = !DILocation(line: 0, scope: !11560, inlinedAt: !12695)
!12697 = !DILocation(line: 907, column: 16, scope: !12698)
!12698 = distinct !DILexicalBlock(scope: !12699, file: !3135, line: 906, column: 26)
!12699 = distinct !DILexicalBlock(scope: !12688, file: !3135, line: 906, column: 2)
!12700 = !DILocation(line: 909, column: 7, scope: !12698)
!12701 = !DILocation(line: 0, scope: !11720, inlinedAt: !12702)
!12702 = distinct !DILocation(line: 912, column: 5, scope: !12703)
!12703 = distinct !DILexicalBlock(scope: !12704, file: !3135, line: 911, column: 63)
!12704 = distinct !DILexicalBlock(scope: !12705, file: !3135, line: 911, column: 8)
!12705 = distinct !DILexicalBlock(scope: !12706, file: !3135, line: 909, column: 19)
!12706 = distinct !DILexicalBlock(scope: !12698, file: !3135, line: 909, column: 7)
!12707 = !DILocation(line: 266, column: 28, scope: !11720, inlinedAt: !12702)
!12708 = !DILocation(line: 0, scope: !11728, inlinedAt: !12709)
!12709 = distinct !DILocation(line: 268, column: 3, scope: !11732, inlinedAt: !12702)
!12710 = !DILocation(line: 234, column: 2, scope: !11728, inlinedAt: !12709)
!12711 = !DILocation(line: 913, column: 23, scope: !12703)
!12712 = !DILocation(line: 0, scope: !11737, inlinedAt: !12713)
!12713 = distinct !DILocation(line: 914, column: 5, scope: !12703)
!12714 = !DILocation(line: 252, column: 28, scope: !11737, inlinedAt: !12713)
!12715 = !DILocation(line: 0, scope: !11744, inlinedAt: !12716)
!12716 = distinct !DILocation(line: 254, column: 3, scope: !11748, inlinedAt: !12713)
!12717 = !DILocation(line: 0, scope: !11751, inlinedAt: !12718)
!12718 = distinct !DILocation(line: 229, column: 2, scope: !11744, inlinedAt: !12716)
!12719 = !DILocation(line: 188, column: 2, scope: !11761, inlinedAt: !12718)
!12720 = !DILocation(line: 188, column: 2, scope: !11763, inlinedAt: !12718)
!12721 = !DILocation(line: 0, scope: !11761, inlinedAt: !12718)
!12722 = !DILocation(line: 189, column: 7, scope: !11766, inlinedAt: !12718)
!12723 = !DILocation(line: 189, column: 35, scope: !11766, inlinedAt: !12718)
!12724 = !DILocation(line: 189, column: 7, scope: !11767, inlinedAt: !12718)
!12725 = !DILocation(line: 190, column: 4, scope: !11771, inlinedAt: !12718)
!12726 = !DILocation(line: 192, column: 4, scope: !11771, inlinedAt: !12718)
!12727 = distinct !{!12727, !12719, !12728}
!12728 = !DILocation(line: 194, column: 2, scope: !11761, inlinedAt: !12718)
!12729 = !DILocation(line: 196, column: 2, scope: !11751, inlinedAt: !12718)
!12730 = !DILocation(line: 197, column: 1, scope: !11751, inlinedAt: !12718)
!12731 = !DILocation(line: 918, column: 4, scope: !12705)
!12732 = !DILocation(line: 919, column: 3, scope: !12705)
!12733 = !DILocation(line: 920, column: 22, scope: !12734)
!12734 = distinct !DILexicalBlock(scope: !12706, file: !3135, line: 919, column: 10)
!12735 = !DILocation(line: 0, scope: !11578, inlinedAt: !12736)
!12736 = distinct !DILocation(line: 906, column: 2, scope: !12699)
!12737 = !DILocation(line: 0, scope: !11586, inlinedAt: !12738)
!12738 = distinct !DILocation(line: 215, column: 2, scope: !11578, inlinedAt: !12736)
!12739 = !DILocation(line: 95, column: 2, scope: !11586, inlinedAt: !12738)
!12740 = !DILocation(line: 926, column: 2, scope: !12682)
!12741 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !3135, file: !3135, line: 929, type: !12742, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !12744)
!12742 = !DISubroutineType(types: !12743)
!12743 = !{null, !3030, !103}
!12744 = !{!12745, !12746, !12747}
!12745 = !DILocalVariable(name: "thread", arg: 1, scope: !12741, file: !3135, line: 929, type: !3030)
!12746 = !DILocalVariable(name: "prio", arg: 2, scope: !12741, file: !3135, line: 929, type: !103)
!12747 = !DILocalVariable(name: "need_sched", scope: !12741, file: !3135, line: 931, type: !731)
!12748 = !DILocation(line: 0, scope: !12741)
!12749 = !DILocation(line: 931, column: 20, scope: !12741)
!12750 = !DILocation(line: 935, column: 17, scope: !12751)
!12751 = distinct !DILexicalBlock(scope: !12741, file: !3135, line: 935, column: 6)
!12752 = !DILocation(line: 935, column: 20, scope: !12751)
!12753 = !DILocation(line: 935, column: 35, scope: !12751)
!12754 = !DILocation(line: 935, column: 48, scope: !12751)
!12755 = !DILocation(line: 935, column: 6, scope: !12741)
!12756 = !DILocation(line: 936, column: 3, scope: !12757)
!12757 = distinct !DILexicalBlock(scope: !12751, file: !3135, line: 935, column: 55)
!12758 = !DILocation(line: 937, column: 2, scope: !12757)
!12759 = !DILocation(line: 938, column: 1, scope: !12741)
!12760 = distinct !DISubprogram(name: "k_sched_lock", scope: !3135, file: !3135, line: 987, type: !3598, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !12761)
!12761 = !{!12762, !12764}
!12762 = !DILocalVariable(name: "__i", scope: !12763, file: !3135, line: 989, type: !11543)
!12763 = distinct !DILexicalBlock(scope: !12760, file: !3135, line: 989, column: 2)
!12764 = !DILocalVariable(name: "__key", scope: !12763, file: !3135, line: 989, type: !11543)
!12765 = !DILocation(line: 0, scope: !12763)
!12766 = !DILocation(line: 0, scope: !11551, inlinedAt: !12767)
!12767 = distinct !DILocation(line: 989, column: 2, scope: !12763)
!12768 = !DILocation(line: 55, column: 2, scope: !11560, inlinedAt: !12769)
!12769 = distinct !DILocation(line: 145, column: 10, scope: !11551, inlinedAt: !12767)
!12770 = !DILocation(line: 0, scope: !11560, inlinedAt: !12769)
!12771 = !DILocation(line: 992, column: 3, scope: !12772)
!12772 = distinct !DILexicalBlock(scope: !12773, file: !3135, line: 989, column: 26)
!12773 = distinct !DILexicalBlock(scope: !12763, file: !3135, line: 989, column: 2)
!12774 = !DILocation(line: 0, scope: !11578, inlinedAt: !12775)
!12775 = distinct !DILocation(line: 989, column: 2, scope: !12773)
!12776 = !DILocation(line: 0, scope: !11586, inlinedAt: !12777)
!12777 = distinct !DILocation(line: 215, column: 2, scope: !11578, inlinedAt: !12775)
!12778 = !DILocation(line: 95, column: 2, scope: !11586, inlinedAt: !12777)
!12779 = !DILocation(line: 994, column: 1, scope: !12760)
!12780 = distinct !DISubprogram(name: "z_sched_lock", scope: !10823, file: !10823, line: 251, type: !3598, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !162)
!12781 = !DILocation(line: 256, column: 4, scope: !12780)
!12782 = !DILocation(line: 256, column: 19, scope: !12780)
!12783 = !DILocation(line: 256, column: 2, scope: !12780)
!12784 = !DILocation(line: 258, column: 2, scope: !12785)
!12785 = distinct !DILexicalBlock(scope: !12780, file: !10823, line: 258, column: 2)
!12786 = !{i64 2152768325}
!12787 = !DILocation(line: 259, column: 1, scope: !12780)
!12788 = distinct !DISubprogram(name: "k_sched_unlock", scope: !3135, file: !3135, line: 996, type: !3598, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !12789)
!12789 = !{!12790, !12792}
!12790 = !DILocalVariable(name: "__i", scope: !12791, file: !3135, line: 998, type: !11543)
!12791 = distinct !DILexicalBlock(scope: !12788, file: !3135, line: 998, column: 2)
!12792 = !DILocalVariable(name: "__key", scope: !12791, file: !3135, line: 998, type: !11543)
!12793 = !DILocation(line: 0, scope: !12791)
!12794 = !DILocation(line: 0, scope: !11551, inlinedAt: !12795)
!12795 = distinct !DILocation(line: 998, column: 2, scope: !12791)
!12796 = !DILocation(line: 55, column: 2, scope: !11560, inlinedAt: !12797)
!12797 = distinct !DILocation(line: 145, column: 10, scope: !11551, inlinedAt: !12795)
!12798 = !DILocation(line: 0, scope: !11560, inlinedAt: !12797)
!12799 = !DILocation(line: 1002, column: 5, scope: !12800)
!12800 = distinct !DILexicalBlock(scope: !12801, file: !3135, line: 998, column: 26)
!12801 = distinct !DILexicalBlock(scope: !12791, file: !3135, line: 998, column: 2)
!12802 = !DILocation(line: 1002, column: 20, scope: !12800)
!12803 = !DILocation(line: 1002, column: 3, scope: !12800)
!12804 = !DILocation(line: 1003, column: 3, scope: !12800)
!12805 = !DILocation(line: 0, scope: !11578, inlinedAt: !12806)
!12806 = distinct !DILocation(line: 998, column: 2, scope: !12801)
!12807 = !DILocation(line: 0, scope: !11586, inlinedAt: !12808)
!12808 = distinct !DILocation(line: 215, column: 2, scope: !11578, inlinedAt: !12806)
!12809 = !DILocation(line: 95, column: 2, scope: !11586, inlinedAt: !12808)
!12810 = !DILocation(line: 1011, column: 2, scope: !12788)
!12811 = !DILocation(line: 1012, column: 1, scope: !12788)
!12812 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !3135, file: !3135, line: 1014, type: !11859, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !162)
!12813 = !DILocation(line: 1028, column: 25, scope: !12812)
!12814 = !DILocation(line: 1028, column: 2, scope: !12812)
!12815 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !3135, file: !3135, line: 1155, type: !12816, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !12818)
!12816 = !DISubroutineType(types: !12817)
!12817 = !{!731, !3059, !3059}
!12818 = !{!12819, !12820, !12821, !12822, !12823}
!12819 = !DILocalVariable(name: "a", arg: 1, scope: !12815, file: !3135, line: 1155, type: !3059)
!12820 = !DILocalVariable(name: "b", arg: 2, scope: !12815, file: !3135, line: 1155, type: !3059)
!12821 = !DILocalVariable(name: "thread_a", scope: !12815, file: !3135, line: 1157, type: !3030)
!12822 = !DILocalVariable(name: "thread_b", scope: !12815, file: !3135, line: 1157, type: !3030)
!12823 = !DILocalVariable(name: "cmp", scope: !12815, file: !3135, line: 1158, type: !1458)
!12824 = !DILocation(line: 0, scope: !12815)
!12825 = !DILocation(line: 1160, column: 13, scope: !12815)
!12826 = !DILocation(line: 1161, column: 13, scope: !12815)
!12827 = !DILocation(line: 1163, column: 8, scope: !12815)
!12828 = !DILocation(line: 1165, column: 10, scope: !12829)
!12829 = distinct !DILexicalBlock(scope: !12815, file: !3135, line: 1165, column: 6)
!12830 = !DILocation(line: 1165, column: 6, scope: !12815)
!12831 = !DILocation(line: 1167, column: 17, scope: !12832)
!12832 = distinct !DILexicalBlock(scope: !12829, file: !3135, line: 1167, column: 13)
!12833 = !DILocation(line: 1167, column: 13, scope: !12829)
!12834 = !DILocation(line: 1170, column: 25, scope: !12835)
!12835 = distinct !DILexicalBlock(scope: !12832, file: !3135, line: 1169, column: 9)
!12836 = !DILocation(line: 1170, column: 52, scope: !12835)
!12837 = !DILocation(line: 1170, column: 35, scope: !12835)
!12838 = !DILocation(line: 1170, column: 3, scope: !12835)
!12839 = !DILocation(line: 0, scope: !12829)
!12840 = !DILocation(line: 1173, column: 1, scope: !12815)
!12841 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !3135, file: !3135, line: 1175, type: !12842, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !12857)
!12842 = !DISubroutineType(types: !12843)
!12843 = !{null, !12844, !3030}
!12844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12845, size: 32)
!12845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !12846, line: 37, size: 128, elements: !12847)
!12846 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12847 = !{!12848, !12856}
!12848 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !12845, file: !12846, line: 38, baseType: !12849, size: 96)
!12849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !780, line: 83, size: 96, elements: !12850)
!12850 = !{!12851, !12852, !12855}
!12851 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !12849, file: !780, line: 84, baseType: !3059, size: 32)
!12852 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !12849, file: !780, line: 85, baseType: !12853, size: 32, offset: 32)
!12853 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !780, line: 81, baseType: !12854)
!12854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12816, size: 32)
!12855 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !12849, file: !780, line: 86, baseType: !103, size: 32, offset: 64)
!12856 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !12845, file: !12846, line: 39, baseType: !103, size: 32, offset: 96)
!12857 = !{!12858, !12859, !12860, !12861, !12870}
!12858 = !DILocalVariable(name: "pq", arg: 1, scope: !12841, file: !3135, line: 1175, type: !12844)
!12859 = !DILocalVariable(name: "thread", arg: 2, scope: !12841, file: !3135, line: 1175, type: !3030)
!12860 = !DILocalVariable(name: "t", scope: !12841, file: !3135, line: 1177, type: !3030)
!12861 = !DILocalVariable(name: "__f", scope: !12862, file: !3135, line: 1190, type: !12865)
!12862 = distinct !DILexicalBlock(scope: !12863, file: !3135, line: 1190, column: 3)
!12863 = distinct !DILexicalBlock(scope: !12864, file: !3135, line: 1189, column: 27)
!12864 = distinct !DILexicalBlock(scope: !12841, file: !3135, line: 1189, column: 6)
!12865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !780, line: 155, size: 96, elements: !12866)
!12866 = !{!12867, !12868, !12869}
!12867 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !12865, file: !780, line: 156, baseType: !3130, size: 32)
!12868 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !12865, file: !780, line: 157, baseType: !1566, size: 32, offset: 32)
!12869 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !12865, file: !780, line: 158, baseType: !1458, size: 32, offset: 64)
!12870 = !DILocalVariable(name: "n", scope: !12871, file: !3135, line: 1190, type: !3059)
!12871 = distinct !DILexicalBlock(scope: !12872, file: !3135, line: 1190, column: 3)
!12872 = distinct !DILexicalBlock(scope: !12862, file: !3135, line: 1190, column: 3)
!12873 = !DILocation(line: 0, scope: !12841)
!12874 = !DILocation(line: 1181, column: 31, scope: !12841)
!12875 = !DILocation(line: 1181, column: 45, scope: !12841)
!12876 = !DILocation(line: 1181, column: 15, scope: !12841)
!12877 = !DILocation(line: 1181, column: 25, scope: !12841)
!12878 = !DILocation(line: 1189, column: 11, scope: !12864)
!12879 = !DILocation(line: 1189, column: 7, scope: !12864)
!12880 = !DILocation(line: 1189, column: 6, scope: !12841)
!12881 = !DILocation(line: 1190, column: 3, scope: !12862)
!12882 = !DILocation(line: 1190, column: 3, scope: !12871)
!12883 = !DILocation(line: 0, scope: !12871)
!12884 = !DILocation(line: 1190, column: 3, scope: !12872)
!12885 = !DILocation(line: 1193, column: 2, scope: !12863)
!12886 = !DILocation(line: 1191, column: 42, scope: !12887)
!12887 = distinct !DILexicalBlock(scope: !12872, file: !3135, line: 1190, column: 54)
!12888 = !DILocation(line: 1191, column: 12, scope: !12887)
!12889 = !DILocation(line: 1191, column: 22, scope: !12887)
!12890 = distinct !{!12890, !12881, !12891}
!12891 = !DILocation(line: 1192, column: 3, scope: !12862)
!12892 = !DILocation(line: 1195, column: 17, scope: !12841)
!12893 = !DILocation(line: 1195, column: 37, scope: !12841)
!12894 = !DILocation(line: 1195, column: 2, scope: !12841)
!12895 = !DILocation(line: 1196, column: 1, scope: !12841)
!12896 = !DISubprogram(name: "z_rb_foreach_next", scope: !780, file: !780, line: 176, type: !12897, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!12897 = !DISubroutineType(types: !12898)
!12898 = !{!3059, !12899, !12900}
!12899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12849, size: 32)
!12900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12865, size: 32)
!12901 = !DISubprogram(name: "rb_insert", scope: !780, file: !780, line: 105, type: !12902, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!12902 = !DISubroutineType(types: !12903)
!12903 = !{null, !12899, !3059}
!12904 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !3135, file: !3135, line: 1198, type: !12842, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !12905)
!12905 = !{!12906, !12907}
!12906 = !DILocalVariable(name: "pq", arg: 1, scope: !12904, file: !3135, line: 1198, type: !12844)
!12907 = !DILocalVariable(name: "thread", arg: 2, scope: !12904, file: !3135, line: 1198, type: !3030)
!12908 = !DILocation(line: 0, scope: !12904)
!12909 = !DILocation(line: 1202, column: 17, scope: !12904)
!12910 = !DILocation(line: 1202, column: 37, scope: !12904)
!12911 = !DILocation(line: 1202, column: 2, scope: !12904)
!12912 = !DILocation(line: 1204, column: 16, scope: !12913)
!12913 = distinct !DILexicalBlock(scope: !12904, file: !3135, line: 1204, column: 6)
!12914 = !DILocation(line: 1204, column: 7, scope: !12913)
!12915 = !DILocation(line: 1204, column: 6, scope: !12904)
!12916 = !DILocation(line: 1205, column: 7, scope: !12917)
!12917 = distinct !DILexicalBlock(scope: !12913, file: !3135, line: 1204, column: 22)
!12918 = !DILocation(line: 1205, column: 22, scope: !12917)
!12919 = !DILocation(line: 1206, column: 2, scope: !12917)
!12920 = !DILocation(line: 1207, column: 1, scope: !12904)
!12921 = !DISubprogram(name: "rb_remove", scope: !780, file: !780, line: 110, type: !12902, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!12922 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !3135, file: !3135, line: 1209, type: !12923, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !12925)
!12923 = !DISubroutineType(types: !12924)
!12924 = !{!3030, !12844}
!12925 = !{!12926, !12927, !12928}
!12926 = !DILocalVariable(name: "pq", arg: 1, scope: !12922, file: !3135, line: 1209, type: !12844)
!12927 = !DILocalVariable(name: "thread", scope: !12922, file: !3135, line: 1211, type: !3030)
!12928 = !DILocalVariable(name: "n", scope: !12922, file: !3135, line: 1212, type: !3059)
!12929 = !DILocation(line: 0, scope: !12922)
!12930 = !DILocation(line: 1212, column: 37, scope: !12922)
!12931 = !DILocation(line: 1212, column: 21, scope: !12922)
!12932 = !DILocation(line: 1217, column: 2, scope: !12922)
!12933 = distinct !DISubprogram(name: "rb_get_min", scope: !780, file: !780, line: 115, type: !12934, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !12936)
!12934 = !DISubroutineType(types: !12935)
!12935 = !{!3059, !12899}
!12936 = !{!12937}
!12937 = !DILocalVariable(name: "tree", arg: 1, scope: !12933, file: !780, line: 115, type: !12899)
!12938 = !DILocation(line: 0, scope: !12933)
!12939 = !DILocation(line: 117, column: 9, scope: !12933)
!12940 = !DILocation(line: 117, column: 2, scope: !12933)
!12941 = !DISubprogram(name: "z_rb_get_minmax", scope: !780, file: !780, line: 100, type: !12942, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!12942 = !DISubroutineType(types: !12943)
!12943 = !{!3059, !12899, !240}
!12944 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !3135, file: !3135, line: 1246, type: !12945, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !12953)
!12945 = !DISubroutineType(types: !12946)
!12946 = !{!3030, !12947}
!12947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12948, size: 32)
!12948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !12846, line: 53, size: 2080, elements: !12949)
!12949 = !{!12950, !12952}
!12950 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !12948, file: !12846, line: 54, baseType: !12951, size: 2048)
!12951 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3066, size: 2048, elements: !2627)
!12952 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !12948, file: !12846, line: 55, baseType: !32, size: 32, offset: 2048)
!12953 = !{!12954, !12955, !12956, !12957}
!12954 = !DILocalVariable(name: "pq", arg: 1, scope: !12944, file: !3135, line: 1246, type: !12947)
!12955 = !DILocalVariable(name: "thread", scope: !12944, file: !3135, line: 1252, type: !3030)
!12956 = !DILocalVariable(name: "l", scope: !12944, file: !3135, line: 1253, type: !11754)
!12957 = !DILocalVariable(name: "n", scope: !12944, file: !3135, line: 1254, type: !3131)
!12958 = !DILocation(line: 0, scope: !12944)
!12959 = !DILocation(line: 1248, column: 11, scope: !12960)
!12960 = distinct !DILexicalBlock(scope: !12944, file: !3135, line: 1248, column: 6)
!12961 = !DILocation(line: 1248, column: 7, scope: !12960)
!12962 = !DILocation(line: 1248, column: 6, scope: !12944)
!12963 = !DILocation(line: 1253, column: 31, scope: !12944)
!12964 = !DILocation(line: 1253, column: 20, scope: !12944)
!12965 = !DILocation(line: 1254, column: 19, scope: !12944)
!12966 = !DILocation(line: 1260, column: 1, scope: !12944)
!12967 = distinct !DISubprogram(name: "z_unpend_all", scope: !3135, file: !3135, line: 1262, type: !12968, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !12970)
!12968 = !DISubroutineType(types: !12969)
!12969 = !{!103, !3061}
!12970 = !{!12971, !12972, !12973}
!12971 = !DILocalVariable(name: "wait_q", arg: 1, scope: !12967, file: !3135, line: 1262, type: !3061)
!12972 = !DILocalVariable(name: "need_sched", scope: !12967, file: !3135, line: 1264, type: !103)
!12973 = !DILocalVariable(name: "thread", scope: !12967, file: !3135, line: 1265, type: !3030)
!12974 = !DILocation(line: 0, scope: !12967)
!12975 = !DILocation(line: 1267, column: 19, scope: !12967)
!12976 = !DILocation(line: 1267, column: 41, scope: !12967)
!12977 = !DILocation(line: 1267, column: 2, scope: !12967)
!12978 = !DILocation(line: 1268, column: 3, scope: !12979)
!12979 = distinct !DILexicalBlock(scope: !12967, file: !3135, line: 1267, column: 50)
!12980 = !DILocation(line: 1269, column: 3, scope: !12979)
!12981 = distinct !{!12981, !12977, !12982}
!12982 = !DILocation(line: 1271, column: 2, scope: !12967)
!12983 = !DILocation(line: 1273, column: 2, scope: !12967)
!12984 = distinct !DISubprogram(name: "z_waitq_head", scope: !11149, file: !11149, line: 52, type: !12602, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !12985)
!12985 = !{!12986}
!12986 = !DILocalVariable(name: "w", arg: 1, scope: !12984, file: !11149, line: 52, type: !3061)
!12987 = !DILocation(line: 0, scope: !12984)
!12988 = !DILocation(line: 54, column: 52, scope: !12984)
!12989 = !DILocation(line: 54, column: 28, scope: !12984)
!12990 = !DILocation(line: 54, column: 9, scope: !12984)
!12991 = !DILocation(line: 54, column: 2, scope: !12984)
!12992 = distinct !DISubprogram(name: "init_ready_q", scope: !3135, file: !3135, line: 1276, type: !12993, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !13000)
!12993 = !DISubroutineType(types: !12994)
!12994 = !{null, !12995}
!12995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12996, size: 32)
!12996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !788, line: 83, size: 96, elements: !12997)
!12997 = !{!12998, !12999}
!12998 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !12996, file: !788, line: 86, baseType: !3030, size: 32)
!12999 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !12996, file: !788, line: 90, baseType: !3066, size: 64, offset: 32)
!13000 = !{!13001}
!13001 = !DILocalVariable(name: "rq", arg: 1, scope: !12992, file: !3135, line: 1276, type: !12995)
!13002 = !DILocation(line: 0, scope: !12992)
!13003 = !DILocation(line: 1289, column: 22, scope: !12992)
!13004 = !DILocation(line: 1289, column: 2, scope: !12992)
!13005 = !DILocation(line: 1291, column: 1, scope: !12992)
!13006 = distinct !DISubprogram(name: "sys_dlist_init", scope: !764, file: !764, line: 197, type: !13007, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !13009)
!13007 = !DISubroutineType(types: !13008)
!13008 = !{null, !11754}
!13009 = !{!13010}
!13010 = !DILocalVariable(name: "list", arg: 1, scope: !13006, file: !764, line: 197, type: !11754)
!13011 = !DILocation(line: 0, scope: !13006)
!13012 = !DILocation(line: 199, column: 8, scope: !13006)
!13013 = !DILocation(line: 199, column: 13, scope: !13006)
!13014 = !DILocation(line: 200, column: 8, scope: !13006)
!13015 = !DILocation(line: 200, column: 13, scope: !13006)
!13016 = !DILocation(line: 201, column: 1, scope: !13006)
!13017 = distinct !DISubprogram(name: "z_sched_init", scope: !3135, file: !3135, line: 1293, type: !3598, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !162)
!13018 = !DILocation(line: 1302, column: 2, scope: !13017)
!13019 = !DILocation(line: 1306, column: 2, scope: !13017)
!13020 = !DILocation(line: 1309, column: 1, scope: !13017)
!13021 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !3135, file: !3135, line: 1311, type: !13022, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !13025)
!13022 = !DISubroutineType(types: !13023)
!13023 = !{!103, !13024}
!13024 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !754, line: 347, baseType: !3030)
!13025 = !{!13026}
!13026 = !DILocalVariable(name: "thread", arg: 1, scope: !13021, file: !3135, line: 1311, type: !13024)
!13027 = !DILocation(line: 0, scope: !13021)
!13028 = !DILocation(line: 1313, column: 22, scope: !13021)
!13029 = !DILocation(line: 1313, column: 9, scope: !13021)
!13030 = !DILocation(line: 1313, column: 2, scope: !13021)
!13031 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !3135, file: !3135, line: 1325, type: !13032, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !13034)
!13032 = !DISubroutineType(types: !13033)
!13033 = !{null, !13024, !103}
!13034 = !{!13035, !13036, !13037}
!13035 = !DILocalVariable(name: "thread", arg: 1, scope: !13031, file: !3135, line: 1325, type: !13024)
!13036 = !DILocalVariable(name: "prio", arg: 2, scope: !13031, file: !3135, line: 1325, type: !103)
!13037 = !DILocalVariable(name: "th", scope: !13031, file: !3135, line: 1334, type: !3030)
!13038 = !DILocation(line: 0, scope: !13031)
!13039 = !DILocation(line: 1336, column: 2, scope: !13031)
!13040 = !DILocation(line: 1337, column: 1, scope: !13031)
!13041 = distinct !DISubprogram(name: "k_can_yield", scope: !3135, file: !3135, line: 1384, type: !8131, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !162)
!13042 = !DILocation(line: 1386, column: 11, scope: !13041)
!13043 = !DILocation(line: 1386, column: 29, scope: !13041)
!13044 = !DILocation(line: 1386, column: 32, scope: !13041)
!13045 = !DILocation(line: 1386, column: 46, scope: !13041)
!13046 = !DILocation(line: 1387, column: 28, scope: !13041)
!13047 = !DILocation(line: 1387, column: 4, scope: !13041)
!13048 = !DILocation(line: 1386, column: 2, scope: !13041)
!13049 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !846, file: !846, line: 989, type: !8131, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !162)
!13050 = !DILocation(line: 993, column: 10, scope: !13049)
!13051 = !DILocation(line: 993, column: 2, scope: !13049)
!13052 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !3135, file: !3135, line: 1390, type: !3598, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !13053)
!13053 = !{!13054}
!13054 = !DILocalVariable(name: "key", scope: !13052, file: !3135, line: 1396, type: !11543)
!13055 = !DILocation(line: 0, scope: !11551, inlinedAt: !13056)
!13056 = distinct !DILocation(line: 1396, column: 25, scope: !13052)
!13057 = !DILocation(line: 55, column: 2, scope: !11560, inlinedAt: !13058)
!13058 = distinct !DILocation(line: 145, column: 10, scope: !11551, inlinedAt: !13056)
!13059 = !DILocation(line: 0, scope: !11560, inlinedAt: !13058)
!13060 = !DILocation(line: 0, scope: !13052)
!13061 = !DILocation(line: 1400, column: 18, scope: !13062)
!13062 = distinct !DILexicalBlock(scope: !13063, file: !3135, line: 1399, column: 36)
!13063 = distinct !DILexicalBlock(scope: !13052, file: !3135, line: 1398, column: 6)
!13064 = !DILocation(line: 0, scope: !11720, inlinedAt: !13065)
!13065 = distinct !DILocation(line: 1400, column: 3, scope: !13062)
!13066 = !DILocation(line: 266, column: 15, scope: !11720, inlinedAt: !13065)
!13067 = !DILocation(line: 266, column: 28, scope: !11720, inlinedAt: !13065)
!13068 = !DILocation(line: 0, scope: !11728, inlinedAt: !13069)
!13069 = distinct !DILocation(line: 268, column: 3, scope: !11732, inlinedAt: !13065)
!13070 = !DILocation(line: 234, column: 2, scope: !11728, inlinedAt: !13069)
!13071 = !DILocation(line: 1402, column: 15, scope: !13052)
!13072 = !DILocation(line: 0, scope: !11737, inlinedAt: !13073)
!13073 = distinct !DILocation(line: 1402, column: 2, scope: !13052)
!13074 = !DILocation(line: 252, column: 15, scope: !11737, inlinedAt: !13073)
!13075 = !DILocation(line: 252, column: 28, scope: !11737, inlinedAt: !13073)
!13076 = !DILocation(line: 0, scope: !11744, inlinedAt: !13077)
!13077 = distinct !DILocation(line: 254, column: 3, scope: !11748, inlinedAt: !13073)
!13078 = !DILocation(line: 0, scope: !11751, inlinedAt: !13079)
!13079 = distinct !DILocation(line: 229, column: 2, scope: !11744, inlinedAt: !13077)
!13080 = !DILocation(line: 188, column: 2, scope: !11761, inlinedAt: !13079)
!13081 = !DILocation(line: 188, column: 2, scope: !11763, inlinedAt: !13079)
!13082 = !DILocation(line: 0, scope: !11761, inlinedAt: !13079)
!13083 = !DILocation(line: 189, column: 7, scope: !11766, inlinedAt: !13079)
!13084 = !DILocation(line: 189, column: 35, scope: !11766, inlinedAt: !13079)
!13085 = !DILocation(line: 189, column: 7, scope: !11767, inlinedAt: !13079)
!13086 = !DILocation(line: 191, column: 21, scope: !11771, inlinedAt: !13079)
!13087 = !DILocation(line: 190, column: 4, scope: !11771, inlinedAt: !13079)
!13088 = !DILocation(line: 192, column: 4, scope: !11771, inlinedAt: !13079)
!13089 = distinct !{!13089, !13080, !13090}
!13090 = !DILocation(line: 194, column: 2, scope: !11761, inlinedAt: !13079)
!13091 = !DILocation(line: 196, column: 37, scope: !11751, inlinedAt: !13079)
!13092 = !DILocation(line: 196, column: 2, scope: !11751, inlinedAt: !13079)
!13093 = !DILocation(line: 197, column: 1, scope: !11751, inlinedAt: !13079)
!13094 = !DILocation(line: 1403, column: 2, scope: !13052)
!13095 = !DILocation(line: 0, scope: !12162, inlinedAt: !13096)
!13096 = distinct !DILocation(line: 1404, column: 2, scope: !13052)
!13097 = !DILocation(line: 196, column: 9, scope: !12162, inlinedAt: !13096)
!13098 = !DILocation(line: 1405, column: 1, scope: !13052)
!13099 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !3135, file: !3135, line: 1459, type: !13100, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !13102)
!13100 = !DISubroutineType(types: !13101)
!13101 = !{!1458, !12342}
!13102 = !{!13103, !13104, !13105}
!13103 = !DILocalVariable(name: "timeout", arg: 1, scope: !13099, file: !3135, line: 1459, type: !12342)
!13104 = !DILocalVariable(name: "ticks", scope: !13099, file: !3135, line: 1461, type: !2347)
!13105 = !DILocalVariable(name: "ret", scope: !13099, file: !3135, line: 1480, type: !1458)
!13106 = !DILocation(line: 0, scope: !13099)
!13107 = !DILocation(line: 1468, column: 6, scope: !13108)
!13108 = distinct !DILexicalBlock(scope: !13099, file: !3135, line: 1468, column: 6)
!13109 = !DILocation(line: 1468, column: 6, scope: !13099)
!13110 = !DILocation(line: 1469, column: 20, scope: !13111)
!13111 = distinct !DILexicalBlock(scope: !13108, file: !3135, line: 1468, column: 40)
!13112 = !DILocation(line: 1469, column: 3, scope: !13111)
!13113 = !DILocation(line: 1473, column: 3, scope: !13111)
!13114 = !DILocation(line: 1478, column: 10, scope: !13099)
!13115 = !DILocation(line: 1480, column: 16, scope: !13099)
!13116 = !DILocation(line: 1485, column: 1, scope: !13099)
!13117 = distinct !DISubprogram(name: "k_thread_suspend", scope: !4048, file: !4048, line: 310, type: !13118, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !13120)
!13118 = !DISubroutineType(types: !13119)
!13119 = !{null, !13024}
!13120 = !{!13121}
!13121 = !DILocalVariable(name: "thread", arg: 1, scope: !13117, file: !4048, line: 310, type: !13024)
!13122 = !DILocation(line: 0, scope: !13117)
!13123 = !DILocation(line: 319, column: 2, scope: !13124)
!13124 = distinct !DILexicalBlock(scope: !13117, file: !4048, line: 319, column: 2)
!13125 = !{i64 2152687331}
!13126 = !DILocation(line: 320, column: 2, scope: !13117)
!13127 = !DILocation(line: 321, column: 1, scope: !13117)
!13128 = distinct !DISubprogram(name: "z_tick_sleep", scope: !3135, file: !3135, line: 1415, type: !13129, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !13131)
!13129 = !DISubroutineType(types: !13130)
!13130 = !{!1458, !2347}
!13131 = !{!13132, !13133, !13134, !13135}
!13132 = !DILocalVariable(name: "ticks", arg: 1, scope: !13128, file: !3135, line: 1415, type: !2347)
!13133 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !13128, file: !3135, line: 1418, type: !137)
!13134 = !DILocalVariable(name: "timeout", scope: !13128, file: !3135, line: 1430, type: !12342)
!13135 = !DILocalVariable(name: "key", scope: !13128, file: !3135, line: 1437, type: !11543)
!13136 = !DILocation(line: 0, scope: !13128)
!13137 = !DILocation(line: 1425, column: 12, scope: !13138)
!13138 = distinct !DILexicalBlock(scope: !13128, file: !3135, line: 1425, column: 6)
!13139 = !DILocation(line: 1425, column: 6, scope: !13128)
!13140 = !DILocation(line: 1426, column: 3, scope: !13141)
!13141 = distinct !DILexicalBlock(scope: !13138, file: !3135, line: 1425, column: 18)
!13142 = !DILocation(line: 1427, column: 3, scope: !13141)
!13143 = !DILocation(line: 1431, column: 24, scope: !13144)
!13144 = distinct !DILexicalBlock(scope: !13128, file: !3135, line: 1431, column: 6)
!13145 = !DILocation(line: 1431, column: 6, scope: !13128)
!13146 = !DILocation(line: 1432, column: 35, scope: !13147)
!13147 = distinct !DILexicalBlock(scope: !13144, file: !3135, line: 1431, column: 30)
!13148 = !DILocation(line: 1432, column: 27, scope: !13147)
!13149 = !DILocation(line: 1433, column: 2, scope: !13147)
!13150 = !DILocation(line: 1434, column: 27, scope: !13151)
!13151 = distinct !DILexicalBlock(scope: !13144, file: !3135, line: 1433, column: 9)
!13152 = !DILocation(line: 0, scope: !13144)
!13153 = !DILocation(line: 0, scope: !11551, inlinedAt: !13154)
!13154 = distinct !DILocation(line: 1437, column: 25, scope: !13128)
!13155 = !DILocation(line: 55, column: 2, scope: !11560, inlinedAt: !13156)
!13156 = distinct !DILocation(line: 145, column: 10, scope: !11551, inlinedAt: !13154)
!13157 = !DILocation(line: 0, scope: !11560, inlinedAt: !13156)
!13158 = !DILocation(line: 1440, column: 20, scope: !13128)
!13159 = !DILocation(line: 1440, column: 18, scope: !13128)
!13160 = !DILocation(line: 1442, column: 2, scope: !13128)
!13161 = !DILocation(line: 1443, column: 23, scope: !13128)
!13162 = !DILocation(line: 1443, column: 2, scope: !13128)
!13163 = !DILocation(line: 1444, column: 29, scope: !13128)
!13164 = !DILocation(line: 1444, column: 2, scope: !13128)
!13165 = !DILocation(line: 0, scope: !12162, inlinedAt: !13166)
!13166 = distinct !DILocation(line: 1446, column: 8, scope: !13128)
!13167 = !DILocation(line: 196, column: 9, scope: !12162, inlinedAt: !13166)
!13168 = !DILocation(line: 1450, column: 10, scope: !13128)
!13169 = !DILocation(line: 1450, column: 45, scope: !13128)
!13170 = !DILocation(line: 1450, column: 43, scope: !13128)
!13171 = !DILocation(line: 1451, column: 6, scope: !13128)
!13172 = !DILocation(line: 1457, column: 1, scope: !13128)
!13173 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !11384, file: !11384, line: 1103, type: !11385, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !13174)
!13174 = !{!13175}
!13175 = !DILocalVariable(name: "t", arg: 1, scope: !13173, file: !11384, line: 1103, type: !163)
!13176 = !DILocation(line: 0, scope: !13173)
!13177 = !DILocation(line: 0, scope: !11598, inlinedAt: !13178)
!13178 = distinct !DILocation(line: 1106, column: 9, scope: !13173)
!13179 = !DILocation(line: 139, column: 13, scope: !13180, inlinedAt: !13178)
!13180 = distinct !DILexicalBlock(scope: !13181, file: !11384, line: 138, column: 10)
!13181 = distinct !DILexicalBlock(scope: !13182, file: !11384, line: 136, column: 7)
!13182 = distinct !DILexicalBlock(scope: !11619, file: !11384, line: 134, column: 17)
!13183 = !DILocation(line: 1106, column: 2, scope: !13173)
!13184 = distinct !DISubprogram(name: "k_yield", scope: !4048, file: !4048, line: 140, type: !3598, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !162)
!13185 = !DILocation(line: 148, column: 2, scope: !13186)
!13186 = distinct !DILexicalBlock(scope: !13184, file: !4048, line: 148, column: 2)
!13187 = !{i64 2152686651}
!13188 = !DILocation(line: 149, column: 2, scope: !13184)
!13189 = !DILocation(line: 150, column: 1, scope: !13184)
!13190 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !3135, file: !3135, line: 1495, type: !13191, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !13193)
!13191 = !DISubroutineType(types: !13192)
!13192 = !{!1458, !103}
!13193 = !{!13194, !13195}
!13194 = !DILocalVariable(name: "us", arg: 1, scope: !13190, file: !3135, line: 1495, type: !103)
!13195 = !DILocalVariable(name: "ticks", scope: !13190, file: !3135, line: 1497, type: !1458)
!13196 = !DILocation(line: 0, scope: !13190)
!13197 = !DILocation(line: 1501, column: 31, scope: !13190)
!13198 = !DILocation(line: 1501, column: 10, scope: !13190)
!13199 = !DILocation(line: 1502, column: 23, scope: !13190)
!13200 = !DILocation(line: 1502, column: 10, scope: !13190)
!13201 = !DILocation(line: 1506, column: 31, scope: !13190)
!13202 = !DILocation(line: 1506, column: 9, scope: !13190)
!13203 = !DILocation(line: 1506, column: 2, scope: !13190)
!13204 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !11384, file: !11384, line: 571, type: !11385, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !13205)
!13205 = !{!13206}
!13206 = !DILocalVariable(name: "t", arg: 1, scope: !13204, file: !11384, line: 571, type: !163)
!13207 = !DILocation(line: 0, scope: !13204)
!13208 = !DILocation(line: 0, scope: !11598, inlinedAt: !13209)
!13209 = distinct !DILocation(line: 574, column: 9, scope: !13204)
!13210 = !DILocation(line: 135, column: 5, scope: !13182, inlinedAt: !13209)
!13211 = !DILocation(line: 139, column: 13, scope: !13180, inlinedAt: !13209)
!13212 = !DILocation(line: 574, column: 2, scope: !13204)
!13213 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !11384, file: !11384, line: 1187, type: !11385, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !13214)
!13214 = !{!13215}
!13215 = !DILocalVariable(name: "t", arg: 1, scope: !13213, file: !11384, line: 1187, type: !163)
!13216 = !DILocation(line: 0, scope: !13213)
!13217 = !DILocation(line: 0, scope: !11598, inlinedAt: !13218)
!13218 = distinct !DILocation(line: 1190, column: 9, scope: !13213)
!13219 = !DILocation(line: 145, column: 13, scope: !13220, inlinedAt: !13218)
!13220 = distinct !DILexicalBlock(scope: !11616, file: !11384, line: 144, column: 10)
!13221 = !DILocation(line: 1190, column: 2, scope: !13213)
!13222 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !3135, file: !3135, line: 1517, type: !13118, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !13223)
!13223 = !{!13224}
!13224 = !DILocalVariable(name: "thread", arg: 1, scope: !13222, file: !3135, line: 1517, type: !13024)
!13225 = !DILocation(line: 0, scope: !13222)
!13226 = !DILocation(line: 1521, column: 6, scope: !13227)
!13227 = distinct !DILexicalBlock(scope: !13222, file: !3135, line: 1521, column: 6)
!13228 = !DILocation(line: 1521, column: 6, scope: !13222)
!13229 = !DILocation(line: 1525, column: 6, scope: !13230)
!13230 = distinct !DILexicalBlock(scope: !13222, file: !3135, line: 1525, column: 6)
!13231 = !DILocation(line: 1525, column: 37, scope: !13230)
!13232 = !DILocation(line: 1525, column: 6, scope: !13222)
!13233 = !DILocation(line: 1527, column: 20, scope: !13234)
!13234 = distinct !DILexicalBlock(scope: !13235, file: !3135, line: 1527, column: 7)
!13235 = distinct !DILexicalBlock(scope: !13230, file: !3135, line: 1525, column: 42)
!13236 = !DILocation(line: 1527, column: 33, scope: !13234)
!13237 = !DILocation(line: 1527, column: 7, scope: !13235)
!13238 = !DILocation(line: 1532, column: 2, scope: !13222)
!13239 = !DILocation(line: 1533, column: 2, scope: !13222)
!13240 = !DILocation(line: 1031, column: 3, scope: !12195, inlinedAt: !13241)
!13241 = distinct !DILocation(line: 48, column: 10, scope: !12199, inlinedAt: !13242)
!13242 = distinct !DILocation(line: 1537, column: 7, scope: !13243)
!13243 = distinct !DILexicalBlock(scope: !13222, file: !3135, line: 1537, column: 6)
!13244 = !DILocation(line: 0, scope: !12195, inlinedAt: !13241)
!13245 = !DILocation(line: 48, column: 9, scope: !12199, inlinedAt: !13242)
!13246 = !DILocation(line: 1537, column: 6, scope: !13222)
!13247 = !DILocation(line: 1538, column: 3, scope: !13248)
!13248 = distinct !DILexicalBlock(scope: !13243, file: !3135, line: 1537, column: 25)
!13249 = !DILocation(line: 1539, column: 2, scope: !13248)
!13250 = !DILocation(line: 1540, column: 1, scope: !13222)
!13251 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !10823, file: !10823, line: 101, type: !11669, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !13252)
!13252 = !{!13253}
!13253 = !DILocalVariable(name: "thread", arg: 1, scope: !13251, file: !10823, line: 101, type: !3030)
!13254 = !DILocation(line: 0, scope: !13251)
!13255 = !DILocation(line: 103, column: 23, scope: !13251)
!13256 = !DILocation(line: 103, column: 36, scope: !13251)
!13257 = !DILocation(line: 103, column: 55, scope: !13251)
!13258 = !DILocation(line: 103, column: 2, scope: !13251)
!13259 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !3135, file: !3135, line: 1567, type: !13260, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !13262)
!13260 = !DISubroutineType(types: !13261)
!13261 = !{!13024}
!13262 = !{!13263}
!13263 = !DILocalVariable(name: "ret", scope: !13259, file: !3135, line: 1577, type: !13024)
!13264 = !DILocation(line: 1577, column: 30, scope: !13259)
!13265 = !DILocation(line: 0, scope: !13259)
!13266 = !DILocation(line: 1582, column: 2, scope: !13259)
!13267 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !3135, file: !3135, line: 1593, type: !8399, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !162)
!13268 = !DILocation(line: 1031, column: 3, scope: !12195, inlinedAt: !13269)
!13269 = distinct !DILocation(line: 48, column: 10, scope: !12199, inlinedAt: !13270)
!13270 = distinct !DILocation(line: 1595, column: 10, scope: !13267)
!13271 = !DILocation(line: 0, scope: !12195, inlinedAt: !13269)
!13272 = !DILocation(line: 48, column: 9, scope: !12199, inlinedAt: !13270)
!13273 = !DILocation(line: 1595, column: 27, scope: !13267)
!13274 = !DILocation(line: 1595, column: 41, scope: !13267)
!13275 = !DILocation(line: 1595, column: 30, scope: !13267)
!13276 = !DILocation(line: 1595, column: 2, scope: !13267)
!13277 = distinct !DISubprogram(name: "z_thread_abort", scope: !3135, file: !3135, line: 1725, type: !11509, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !13278)
!13278 = !{!13279, !13280}
!13279 = !DILocalVariable(name: "thread", arg: 1, scope: !13277, file: !3135, line: 1725, type: !3030)
!13280 = !DILocalVariable(name: "key", scope: !13277, file: !3135, line: 1727, type: !11543)
!13281 = !DILocation(line: 0, scope: !13277)
!13282 = !DILocation(line: 0, scope: !11551, inlinedAt: !13283)
!13283 = distinct !DILocation(line: 1727, column: 25, scope: !13277)
!13284 = !DILocation(line: 55, column: 2, scope: !11560, inlinedAt: !13285)
!13285 = distinct !DILocation(line: 145, column: 10, scope: !11551, inlinedAt: !13283)
!13286 = !DILocation(line: 0, scope: !11560, inlinedAt: !13285)
!13287 = !DILocation(line: 1729, column: 20, scope: !13288)
!13288 = distinct !DILexicalBlock(scope: !13277, file: !3135, line: 1729, column: 6)
!13289 = !DILocation(line: 1729, column: 33, scope: !13288)
!13290 = !DILocation(line: 1729, column: 48, scope: !13288)
!13291 = !DILocation(line: 1729, column: 6, scope: !13277)
!13292 = !DILocation(line: 0, scope: !11578, inlinedAt: !13293)
!13293 = distinct !DILocation(line: 1730, column: 3, scope: !13294)
!13294 = distinct !DILexicalBlock(scope: !13288, file: !3135, line: 1729, column: 54)
!13295 = !DILocation(line: 0, scope: !11586, inlinedAt: !13296)
!13296 = distinct !DILocation(line: 215, column: 2, scope: !11578, inlinedAt: !13293)
!13297 = !DILocation(line: 95, column: 2, scope: !11586, inlinedAt: !13296)
!13298 = !DILocation(line: 1732, column: 3, scope: !13299)
!13299 = distinct !DILexicalBlock(scope: !13294, file: !3135, line: 1732, column: 3)
!13300 = !{i64 2153423444, i64 2153423460, i64 2153423486, i64 2153423514, i64 2153423534}
!13301 = !DILocation(line: 1733, column: 3, scope: !13294)
!13302 = !DILocation(line: 1736, column: 20, scope: !13303)
!13303 = distinct !DILexicalBlock(scope: !13277, file: !3135, line: 1736, column: 6)
!13304 = !DILocation(line: 1736, column: 33, scope: !13303)
!13305 = !DILocation(line: 1736, column: 49, scope: !13303)
!13306 = !DILocation(line: 1736, column: 6, scope: !13277)
!13307 = !DILocation(line: 0, scope: !11578, inlinedAt: !13308)
!13308 = distinct !DILocation(line: 1737, column: 3, scope: !13309)
!13309 = distinct !DILexicalBlock(scope: !13303, file: !3135, line: 1736, column: 56)
!13310 = !DILocation(line: 0, scope: !11586, inlinedAt: !13311)
!13311 = distinct !DILocation(line: 215, column: 2, scope: !11578, inlinedAt: !13308)
!13312 = !DILocation(line: 95, column: 2, scope: !11586, inlinedAt: !13311)
!13313 = !DILocation(line: 1738, column: 3, scope: !13309)
!13314 = !DILocation(line: 1775, column: 2, scope: !13277)
!13315 = !DILocation(line: 1776, column: 16, scope: !13316)
!13316 = distinct !DILexicalBlock(scope: !13277, file: !3135, line: 1776, column: 6)
!13317 = !DILocation(line: 1776, column: 13, scope: !13316)
!13318 = !DILocation(line: 1776, column: 25, scope: !13316)
!13319 = !DILocation(line: 1031, column: 3, scope: !12195, inlinedAt: !13320)
!13320 = distinct !DILocation(line: 48, column: 10, scope: !12199, inlinedAt: !13321)
!13321 = distinct !DILocation(line: 1776, column: 29, scope: !13316)
!13322 = !DILocation(line: 0, scope: !12195, inlinedAt: !13320)
!13323 = !DILocation(line: 48, column: 9, scope: !12199, inlinedAt: !13321)
!13324 = !DILocation(line: 1776, column: 6, scope: !13277)
!13325 = !DILocation(line: 0, scope: !12162, inlinedAt: !13326)
!13326 = distinct !DILocation(line: 1777, column: 3, scope: !13327)
!13327 = distinct !DILexicalBlock(scope: !13316, file: !3135, line: 1776, column: 47)
!13328 = !DILocation(line: 196, column: 9, scope: !12162, inlinedAt: !13326)
!13329 = !DILocation(line: 1779, column: 2, scope: !13327)
!13330 = !DILocation(line: 0, scope: !11578, inlinedAt: !13331)
!13331 = distinct !DILocation(line: 1780, column: 2, scope: !13277)
!13332 = !DILocation(line: 0, scope: !11586, inlinedAt: !13333)
!13333 = distinct !DILocation(line: 215, column: 2, scope: !11578, inlinedAt: !13331)
!13334 = !DILocation(line: 95, column: 2, scope: !11586, inlinedAt: !13333)
!13335 = !DILocation(line: 1781, column: 1, scope: !13277)
!13336 = distinct !DISubprogram(name: "end_thread", scope: !3135, file: !3135, line: 1690, type: !11509, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !13337)
!13337 = !{!13338}
!13338 = !DILocalVariable(name: "thread", arg: 1, scope: !13336, file: !3135, line: 1690, type: !3030)
!13339 = !DILocation(line: 0, scope: !13336)
!13340 = !DILocation(line: 1695, column: 20, scope: !13341)
!13341 = distinct !DILexicalBlock(scope: !13336, file: !3135, line: 1695, column: 6)
!13342 = !DILocation(line: 1695, column: 33, scope: !13341)
!13343 = !DILocation(line: 1695, column: 49, scope: !13341)
!13344 = !DILocation(line: 1695, column: 6, scope: !13336)
!13345 = !DILocation(line: 1697, column: 29, scope: !13346)
!13346 = distinct !DILexicalBlock(scope: !13341, file: !3135, line: 1695, column: 56)
!13347 = !DILocation(line: 1698, column: 7, scope: !13348)
!13348 = distinct !DILexicalBlock(scope: !13346, file: !3135, line: 1698, column: 7)
!13349 = !DILocation(line: 1698, column: 7, scope: !13346)
!13350 = !DILocation(line: 0, scope: !11720, inlinedAt: !13351)
!13351 = distinct !DILocation(line: 1699, column: 4, scope: !13352)
!13352 = distinct !DILexicalBlock(scope: !13348, file: !3135, line: 1698, column: 35)
!13353 = !DILocation(line: 266, column: 28, scope: !11720, inlinedAt: !13351)
!13354 = !DILocation(line: 0, scope: !11728, inlinedAt: !13355)
!13355 = distinct !DILocation(line: 268, column: 3, scope: !11732, inlinedAt: !13351)
!13356 = !DILocation(line: 234, column: 2, scope: !11728, inlinedAt: !13355)
!13357 = !DILocation(line: 1700, column: 3, scope: !13352)
!13358 = !DILocation(line: 1701, column: 20, scope: !13359)
!13359 = distinct !DILexicalBlock(scope: !13346, file: !3135, line: 1701, column: 7)
!13360 = !DILocation(line: 1701, column: 30, scope: !13359)
!13361 = !DILocation(line: 1701, column: 7, scope: !13346)
!13362 = !DILocation(line: 1702, column: 4, scope: !13363)
!13363 = distinct !DILexicalBlock(scope: !13359, file: !3135, line: 1701, column: 39)
!13364 = !DILocation(line: 1703, column: 3, scope: !13363)
!13365 = !DILocation(line: 1704, column: 9, scope: !13346)
!13366 = !DILocation(line: 1705, column: 23, scope: !13346)
!13367 = !DILocation(line: 1705, column: 3, scope: !13346)
!13368 = !DILocation(line: 1706, column: 3, scope: !13346)
!13369 = !DILocation(line: 1722, column: 2, scope: !13346)
!13370 = !DILocation(line: 1723, column: 1, scope: !13336)
!13371 = distinct !DISubprogram(name: "unpend_all", scope: !3135, file: !3135, line: 1674, type: !13372, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !13374)
!13372 = !DISubroutineType(types: !13373)
!13373 = !{null, !3061}
!13374 = !{!13375, !13376}
!13375 = !DILocalVariable(name: "wait_q", arg: 1, scope: !13371, file: !3135, line: 1674, type: !3061)
!13376 = !DILocalVariable(name: "thread", scope: !13371, file: !3135, line: 1676, type: !3030)
!13377 = !DILocation(line: 0, scope: !13371)
!13378 = !DILocation(line: 1678, column: 19, scope: !13371)
!13379 = !DILocation(line: 1678, column: 41, scope: !13371)
!13380 = !DILocation(line: 1678, column: 2, scope: !13371)
!13381 = !DILocation(line: 1679, column: 3, scope: !13382)
!13382 = distinct !DILexicalBlock(scope: !13371, file: !3135, line: 1678, column: 50)
!13383 = !DILocation(line: 1680, column: 9, scope: !13382)
!13384 = !DILocalVariable(name: "thread", arg: 1, scope: !13385, file: !10843, line: 65, type: !3030)
!13385 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !10843, file: !10843, line: 65, type: !13386, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !13388)
!13386 = !DISubroutineType(types: !13387)
!13387 = !{null, !3030, !32}
!13388 = !{!13384, !13389}
!13389 = !DILocalVariable(name: "value", arg: 2, scope: !13385, file: !10843, line: 65, type: !32)
!13390 = !DILocation(line: 0, scope: !13385, inlinedAt: !13391)
!13391 = distinct !DILocation(line: 1681, column: 3, scope: !13382)
!13392 = !DILocation(line: 67, column: 15, scope: !13385, inlinedAt: !13391)
!13393 = !DILocation(line: 67, column: 33, scope: !13385, inlinedAt: !13391)
!13394 = !DILocation(line: 1682, column: 3, scope: !13382)
!13395 = distinct !{!13395, !13380, !13396}
!13396 = !DILocation(line: 1683, column: 2, scope: !13371)
!13397 = !DILocation(line: 1684, column: 1, scope: !13371)
!13398 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !3135, file: !3135, line: 1794, type: !13399, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !13401)
!13399 = !DISubroutineType(types: !13400)
!13400 = !{!103, !3030, !12342}
!13401 = !{!13402, !13403, !13404, !13405}
!13402 = !DILocalVariable(name: "thread", arg: 1, scope: !13398, file: !3135, line: 1794, type: !3030)
!13403 = !DILocalVariable(name: "timeout", arg: 2, scope: !13398, file: !3135, line: 1794, type: !12342)
!13404 = !DILocalVariable(name: "key", scope: !13398, file: !3135, line: 1796, type: !11543)
!13405 = !DILocalVariable(name: "ret", scope: !13398, file: !3135, line: 1797, type: !103)
!13406 = !DILocation(line: 0, scope: !13398)
!13407 = !DILocation(line: 0, scope: !11551, inlinedAt: !13408)
!13408 = distinct !DILocation(line: 1796, column: 25, scope: !13398)
!13409 = !DILocation(line: 55, column: 2, scope: !11560, inlinedAt: !13410)
!13410 = distinct !DILocation(line: 145, column: 10, scope: !11551, inlinedAt: !13408)
!13411 = !DILocation(line: 0, scope: !11560, inlinedAt: !13410)
!13412 = !DILocation(line: 1801, column: 20, scope: !13413)
!13413 = distinct !DILexicalBlock(scope: !13398, file: !3135, line: 1801, column: 6)
!13414 = !DILocation(line: 1801, column: 33, scope: !13413)
!13415 = !DILocation(line: 1801, column: 49, scope: !13413)
!13416 = !DILocation(line: 1801, column: 6, scope: !13398)
!13417 = !DILocation(line: 1803, column: 13, scope: !13418)
!13418 = distinct !DILexicalBlock(scope: !13413, file: !3135, line: 1803, column: 13)
!13419 = !DILocation(line: 1803, column: 13, scope: !13413)
!13420 = !DILocation(line: 1805, column: 24, scope: !13421)
!13421 = distinct !DILexicalBlock(scope: !13418, file: !3135, line: 1805, column: 13)
!13422 = !DILocation(line: 1805, column: 21, scope: !13421)
!13423 = !DILocation(line: 1805, column: 34, scope: !13421)
!13424 = !DILocation(line: 1806, column: 20, scope: !13421)
!13425 = !DILocation(line: 1806, column: 44, scope: !13421)
!13426 = !DILocation(line: 1806, column: 30, scope: !13421)
!13427 = !DILocation(line: 1805, column: 13, scope: !13418)
!13428 = !DILocation(line: 1810, column: 42, scope: !13429)
!13429 = distinct !DILexicalBlock(scope: !13421, file: !3135, line: 1808, column: 9)
!13430 = !DILocation(line: 1810, column: 3, scope: !13429)
!13431 = !DILocation(line: 1811, column: 22, scope: !13429)
!13432 = !DILocation(line: 1811, column: 3, scope: !13429)
!13433 = !DILocation(line: 0, scope: !12162, inlinedAt: !13434)
!13434 = distinct !DILocation(line: 1814, column: 9, scope: !13429)
!13435 = !DILocation(line: 196, column: 9, scope: !12162, inlinedAt: !13434)
!13436 = !DILocation(line: 1817, column: 3, scope: !13429)
!13437 = !DILocation(line: 0, scope: !13413)
!13438 = !DILocation(line: 0, scope: !11578, inlinedAt: !13439)
!13439 = distinct !DILocation(line: 1822, column: 2, scope: !13398)
!13440 = !DILocation(line: 0, scope: !11586, inlinedAt: !13441)
!13441 = distinct !DILocation(line: 215, column: 2, scope: !11578, inlinedAt: !13439)
!13442 = !DILocation(line: 95, column: 2, scope: !11586, inlinedAt: !13441)
!13443 = !DILocation(line: 1823, column: 2, scope: !13398)
!13444 = !DILocation(line: 1824, column: 1, scope: !13398)
!13445 = distinct !DISubprogram(name: "z_sched_wake", scope: !3135, file: !3135, line: 1882, type: !13446, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !13448)
!13446 = !DISubroutineType(types: !13447)
!13447 = !{!731, !3061, !103, !102}
!13448 = !{!13449, !13450, !13451, !13452, !13453, !13454, !13456}
!13449 = !DILocalVariable(name: "wait_q", arg: 1, scope: !13445, file: !3135, line: 1882, type: !3061)
!13450 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !13445, file: !3135, line: 1882, type: !103)
!13451 = !DILocalVariable(name: "swap_data", arg: 3, scope: !13445, file: !3135, line: 1882, type: !102)
!13452 = !DILocalVariable(name: "thread", scope: !13445, file: !3135, line: 1884, type: !3030)
!13453 = !DILocalVariable(name: "ret", scope: !13445, file: !3135, line: 1885, type: !731)
!13454 = !DILocalVariable(name: "__i", scope: !13455, file: !3135, line: 1887, type: !11543)
!13455 = distinct !DILexicalBlock(scope: !13445, file: !3135, line: 1887, column: 2)
!13456 = !DILocalVariable(name: "__key", scope: !13455, file: !3135, line: 1887, type: !11543)
!13457 = !DILocation(line: 0, scope: !13445)
!13458 = !DILocation(line: 0, scope: !13455)
!13459 = !DILocation(line: 0, scope: !11551, inlinedAt: !13460)
!13460 = distinct !DILocation(line: 1887, column: 2, scope: !13455)
!13461 = !DILocation(line: 55, column: 2, scope: !11560, inlinedAt: !13462)
!13462 = distinct !DILocation(line: 145, column: 10, scope: !11551, inlinedAt: !13460)
!13463 = !DILocation(line: 0, scope: !11560, inlinedAt: !13462)
!13464 = !DILocation(line: 1888, column: 12, scope: !13465)
!13465 = distinct !DILexicalBlock(scope: !13466, file: !3135, line: 1887, column: 26)
!13466 = distinct !DILexicalBlock(scope: !13455, file: !3135, line: 1887, column: 2)
!13467 = !DILocation(line: 1890, column: 14, scope: !13468)
!13468 = distinct !DILexicalBlock(scope: !13465, file: !3135, line: 1890, column: 7)
!13469 = !DILocation(line: 1890, column: 7, scope: !13465)
!13470 = !DILocalVariable(name: "thread", arg: 1, scope: !13471, file: !13472, line: 134, type: !3030)
!13471 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !13472, file: !13472, line: 134, type: !13473, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !13475)
!13472 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13473 = !DISubroutineType(types: !13474)
!13474 = !{null, !3030, !32, !102}
!13475 = !{!13470, !13476, !13477}
!13476 = !DILocalVariable(name: "value", arg: 2, scope: !13471, file: !13472, line: 135, type: !32)
!13477 = !DILocalVariable(name: "data", arg: 3, scope: !13471, file: !13472, line: 136, type: !102)
!13478 = !DILocation(line: 0, scope: !13471, inlinedAt: !13479)
!13479 = distinct !DILocation(line: 1891, column: 4, scope: !13480)
!13480 = distinct !DILexicalBlock(scope: !13468, file: !3135, line: 1890, column: 23)
!13481 = !DILocation(line: 0, scope: !13385, inlinedAt: !13482)
!13482 = distinct !DILocation(line: 138, column: 2, scope: !13471, inlinedAt: !13479)
!13483 = !DILocation(line: 67, column: 15, scope: !13385, inlinedAt: !13482)
!13484 = !DILocation(line: 67, column: 33, scope: !13385, inlinedAt: !13482)
!13485 = !DILocation(line: 139, column: 15, scope: !13471, inlinedAt: !13479)
!13486 = !DILocation(line: 139, column: 25, scope: !13471, inlinedAt: !13479)
!13487 = !DILocation(line: 1894, column: 4, scope: !13480)
!13488 = !DILocation(line: 1895, column: 10, scope: !13480)
!13489 = !DILocation(line: 1896, column: 4, scope: !13480)
!13490 = !DILocation(line: 1898, column: 3, scope: !13480)
!13491 = !DILocation(line: 0, scope: !11578, inlinedAt: !13492)
!13492 = distinct !DILocation(line: 1887, column: 2, scope: !13466)
!13493 = !DILocation(line: 0, scope: !11586, inlinedAt: !13494)
!13494 = distinct !DILocation(line: 215, column: 2, scope: !11578, inlinedAt: !13492)
!13495 = !DILocation(line: 95, column: 2, scope: !11586, inlinedAt: !13494)
!13496 = !DILocation(line: 1901, column: 2, scope: !13445)
!13497 = distinct !DISubprogram(name: "z_sched_wait", scope: !3135, file: !3135, line: 1904, type: !13498, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !13501)
!13498 = !DISubroutineType(types: !13499)
!13499 = !{!103, !11554, !11543, !3061, !12342, !13500}
!13500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!13501 = !{!13502, !13503, !13504, !13505, !13506, !13507}
!13502 = !DILocalVariable(name: "lock", arg: 1, scope: !13497, file: !3135, line: 1904, type: !11554)
!13503 = !DILocalVariable(name: "key", arg: 2, scope: !13497, file: !3135, line: 1904, type: !11543)
!13504 = !DILocalVariable(name: "wait_q", arg: 3, scope: !13497, file: !3135, line: 1905, type: !3061)
!13505 = !DILocalVariable(name: "timeout", arg: 4, scope: !13497, file: !3135, line: 1905, type: !12342)
!13506 = !DILocalVariable(name: "data", arg: 5, scope: !13497, file: !3135, line: 1905, type: !13500)
!13507 = !DILocalVariable(name: "ret", scope: !13497, file: !3135, line: 1907, type: !103)
!13508 = !DILocation(line: 0, scope: !13497)
!13509 = !DILocation(line: 1907, column: 12, scope: !13497)
!13510 = !DILocation(line: 1909, column: 11, scope: !13511)
!13511 = distinct !DILexicalBlock(scope: !13497, file: !3135, line: 1909, column: 6)
!13512 = !DILocation(line: 1909, column: 6, scope: !13497)
!13513 = !DILocation(line: 1910, column: 11, scope: !13514)
!13514 = distinct !DILexicalBlock(scope: !13511, file: !3135, line: 1909, column: 20)
!13515 = !DILocation(line: 1910, column: 26, scope: !13514)
!13516 = !DILocation(line: 1910, column: 9, scope: !13514)
!13517 = !DILocation(line: 1911, column: 2, scope: !13514)
!13518 = !DILocation(line: 1912, column: 2, scope: !13497)
!13519 = distinct !DISubprogram(name: "z_data_copy", scope: !13520, file: !13520, line: 22, type: !3598, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3581, retainedNodes: !162)
!13520 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13521 = !DILocation(line: 24, column: 2, scope: !13519)
!13522 = !DILocation(line: 27, column: 2, scope: !13519)
!13523 = !DILocation(line: 71, column: 1, scope: !13519)
!13524 = distinct !DISubprogram(name: "z_add_timeout", scope: !3172, file: !3172, line: 88, type: !13525, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3142, retainedNodes: !13531)
!13525 = !DISubroutineType(types: !13526)
!13526 = !{null, !3145, !3164, !13527}
!13527 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !2348, line: 67, baseType: !13528)
!13528 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2348, line: 65, size: 64, elements: !13529)
!13529 = !{!13530}
!13530 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13528, file: !2348, line: 66, baseType: !2347, size: 64)
!13531 = !{!13532, !13533, !13534, !13535, !13541, !13542, !13545, !13548}
!13532 = !DILocalVariable(name: "to", arg: 1, scope: !13524, file: !3172, line: 88, type: !3145)
!13533 = !DILocalVariable(name: "fn", arg: 2, scope: !13524, file: !3172, line: 88, type: !3164)
!13534 = !DILocalVariable(name: "timeout", arg: 3, scope: !13524, file: !3172, line: 89, type: !13527)
!13535 = !DILocalVariable(name: "__i", scope: !13536, file: !3172, line: 102, type: !13537)
!13536 = distinct !DILexicalBlock(scope: !13524, file: !3172, line: 102, column: 2)
!13537 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !857, line: 106, baseType: !13538)
!13538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !857, line: 32, size: 32, elements: !13539)
!13539 = !{!13540}
!13540 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13538, file: !857, line: 33, baseType: !103, size: 32)
!13541 = !DILocalVariable(name: "__key", scope: !13536, file: !3172, line: 102, type: !13537)
!13542 = !DILocalVariable(name: "t", scope: !13543, file: !3172, line: 103, type: !3145)
!13543 = distinct !DILexicalBlock(scope: !13544, file: !3172, line: 102, column: 24)
!13544 = distinct !DILexicalBlock(scope: !13536, file: !3172, line: 102, column: 2)
!13545 = !DILocalVariable(name: "ticks", scope: !13546, file: !3172, line: 107, type: !2347)
!13546 = distinct !DILexicalBlock(scope: !13547, file: !3172, line: 106, column: 39)
!13547 = distinct !DILexicalBlock(scope: !13543, file: !3172, line: 105, column: 7)
!13548 = !DILocalVariable(name: "next_time", scope: !13549, file: !3172, line: 137, type: !1458)
!13549 = distinct !DILexicalBlock(scope: !13550, file: !3172, line: 127, column: 22)
!13550 = distinct !DILexicalBlock(scope: !13543, file: !3172, line: 127, column: 7)
!13551 = !DILocation(line: 0, scope: !13524)
!13552 = !DILocation(line: 91, column: 6, scope: !13553)
!13553 = distinct !DILexicalBlock(scope: !13524, file: !3172, line: 91, column: 6)
!13554 = !DILocation(line: 91, column: 6, scope: !13524)
!13555 = !DILocation(line: 100, column: 6, scope: !13524)
!13556 = !DILocation(line: 100, column: 9, scope: !13524)
!13557 = !DILocation(line: 0, scope: !13536)
!13558 = !DILocalVariable(name: "l", arg: 1, scope: !13559, file: !857, line: 136, type: !13562)
!13559 = distinct !DISubprogram(name: "k_spin_lock", scope: !857, file: !857, line: 136, type: !13560, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3142, retainedNodes: !13563)
!13560 = !DISubroutineType(types: !13561)
!13561 = !{!13537, !13562}
!13562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3173, size: 32)
!13563 = !{!13558, !13564}
!13564 = !DILocalVariable(name: "k", scope: !13559, file: !857, line: 139, type: !13537)
!13565 = !DILocation(line: 0, scope: !13559, inlinedAt: !13566)
!13566 = distinct !DILocation(line: 102, column: 2, scope: !13536)
!13567 = !DILocation(line: 55, column: 2, scope: !13568, inlinedAt: !13572)
!13568 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7145, file: !7145, line: 42, type: !7146, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3142, retainedNodes: !13569)
!13569 = !{!13570, !13571}
!13570 = !DILocalVariable(name: "key", scope: !13568, file: !7145, line: 44, type: !32)
!13571 = !DILocalVariable(name: "tmp", scope: !13568, file: !7145, line: 53, type: !32)
!13572 = distinct !DILocation(line: 145, column: 10, scope: !13559, inlinedAt: !13566)
!13573 = !{i64 1623908}
!13574 = !DILocation(line: 0, scope: !13568, inlinedAt: !13572)
!13575 = !DILocation(line: 106, column: 33, scope: !13547)
!13576 = !DILocation(line: 105, column: 7, scope: !13543)
!13577 = !DILocation(line: 107, column: 50, scope: !13546)
!13578 = !DILocation(line: 107, column: 48, scope: !13546)
!13579 = !DILocation(line: 0, scope: !13546)
!13580 = !DILocation(line: 109, column: 17, scope: !13546)
!13581 = !DILocation(line: 110, column: 3, scope: !13546)
!13582 = !DILocation(line: 111, column: 31, scope: !13583)
!13583 = distinct !DILexicalBlock(scope: !13547, file: !3172, line: 110, column: 10)
!13584 = !DILocation(line: 111, column: 37, scope: !13583)
!13585 = !DILocation(line: 111, column: 35, scope: !13583)
!13586 = !DILocation(line: 0, scope: !13547)
!13587 = !DILocation(line: 109, column: 8, scope: !13546)
!13588 = !DILocation(line: 109, column: 15, scope: !13546)
!13589 = !DILocation(line: 114, column: 12, scope: !13590)
!13590 = distinct !DILexicalBlock(scope: !13543, file: !3172, line: 114, column: 3)
!13591 = !DILocation(line: 0, scope: !13543)
!13592 = !DILocation(line: 114, column: 3, scope: !13590)
!13593 = !DILocation(line: 115, column: 24, scope: !13594)
!13594 = distinct !DILexicalBlock(scope: !13595, file: !3172, line: 115, column: 8)
!13595 = distinct !DILexicalBlock(scope: !13596, file: !3172, line: 114, column: 45)
!13596 = distinct !DILexicalBlock(scope: !13590, file: !3172, line: 114, column: 3)
!13597 = !DILocation(line: 115, column: 11, scope: !13594)
!13598 = !DILocation(line: 115, column: 18, scope: !13594)
!13599 = !DILocation(line: 115, column: 8, scope: !13595)
!13600 = !DILocation(line: 116, column: 15, scope: !13601)
!13601 = distinct !DILexicalBlock(scope: !13594, file: !3172, line: 115, column: 32)
!13602 = !DILocation(line: 117, column: 26, scope: !13601)
!13603 = !DILocation(line: 117, column: 37, scope: !13601)
!13604 = !DILocation(line: 117, column: 5, scope: !13601)
!13605 = !DILocation(line: 123, column: 7, scope: !13543)
!13606 = !DILocation(line: 120, column: 15, scope: !13595)
!13607 = !DILocation(line: 114, column: 36, scope: !13596)
!13608 = distinct !{!13608, !13592, !13609}
!13609 = !DILocation(line: 121, column: 3, scope: !13590)
!13610 = !DILocation(line: 124, column: 41, scope: !13611)
!13611 = distinct !DILexicalBlock(scope: !13612, file: !3172, line: 123, column: 18)
!13612 = distinct !DILexicalBlock(scope: !13543, file: !3172, line: 123, column: 7)
!13613 = !DILocation(line: 124, column: 4, scope: !13611)
!13614 = !DILocation(line: 125, column: 3, scope: !13611)
!13615 = !DILocation(line: 127, column: 13, scope: !13550)
!13616 = !DILocation(line: 127, column: 10, scope: !13550)
!13617 = !DILocation(line: 127, column: 7, scope: !13543)
!13618 = !DILocation(line: 137, column: 24, scope: !13549)
!13619 = !DILocation(line: 0, scope: !13549)
!13620 = !DILocation(line: 139, column: 18, scope: !13621)
!13621 = distinct !DILexicalBlock(scope: !13549, file: !3172, line: 139, column: 8)
!13622 = !DILocation(line: 139, column: 23, scope: !13621)
!13623 = !DILocation(line: 141, column: 5, scope: !13624)
!13624 = distinct !DILexicalBlock(scope: !13621, file: !3172, line: 140, column: 48)
!13625 = !DILocation(line: 142, column: 4, scope: !13624)
!13626 = !DILocalVariable(name: "key", arg: 2, scope: !13627, file: !857, line: 190, type: !13537)
!13627 = distinct !DISubprogram(name: "k_spin_unlock", scope: !857, file: !857, line: 189, type: !13628, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3142, retainedNodes: !13630)
!13628 = !DISubroutineType(types: !13629)
!13629 = !{null, !13562, !13537}
!13630 = !{!13631, !13626}
!13631 = !DILocalVariable(name: "l", arg: 1, scope: !13627, file: !857, line: 189, type: !13562)
!13632 = !DILocation(line: 0, scope: !13627, inlinedAt: !13633)
!13633 = distinct !DILocation(line: 102, column: 2, scope: !13544)
!13634 = !DILocalVariable(name: "key", arg: 1, scope: !13635, file: !7145, line: 84, type: !32)
!13635 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7145, file: !7145, line: 84, type: !7163, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3142, retainedNodes: !13636)
!13636 = !{!13634}
!13637 = !DILocation(line: 0, scope: !13635, inlinedAt: !13638)
!13638 = distinct !DILocation(line: 215, column: 2, scope: !13627, inlinedAt: !13633)
!13639 = !DILocation(line: 95, column: 2, scope: !13635, inlinedAt: !13638)
!13640 = !{i64 1624725}
!13641 = !DILocation(line: 148, column: 1, scope: !13524)
!13642 = distinct !DISubprogram(name: "elapsed", scope: !3172, file: !3172, line: 62, type: !13643, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3142, retainedNodes: !162)
!13643 = !DISubroutineType(types: !13644)
!13644 = !{!1458}
!13645 = !DILocation(line: 64, column: 9, scope: !13642)
!13646 = !DILocation(line: 64, column: 28, scope: !13642)
!13647 = !DILocation(line: 64, column: 35, scope: !13642)
!13648 = !DILocation(line: 64, column: 2, scope: !13642)
!13649 = distinct !DISubprogram(name: "first", scope: !3172, file: !3172, line: 39, type: !13650, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3142, retainedNodes: !13652)
!13650 = !DISubroutineType(types: !13651)
!13651 = !{!3145}
!13652 = !{!13653}
!13653 = !DILocalVariable(name: "t", scope: !13649, file: !3172, line: 41, type: !13654)
!13654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3149, size: 32)
!13655 = !DILocation(line: 41, column: 19, scope: !13649)
!13656 = !DILocation(line: 0, scope: !13649)
!13657 = !DILocation(line: 43, column: 9, scope: !13649)
!13658 = !DILocation(line: 43, column: 2, scope: !13649)
!13659 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !764, file: !764, line: 443, type: !13660, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3142, retainedNodes: !13662)
!13660 = !DISubroutineType(types: !13661)
!13661 = !{null, !13654, !13654}
!13662 = !{!13663, !13664, !13665}
!13663 = !DILocalVariable(name: "successor", arg: 1, scope: !13659, file: !764, line: 443, type: !13654)
!13664 = !DILocalVariable(name: "node", arg: 2, scope: !13659, file: !764, line: 443, type: !13654)
!13665 = !DILocalVariable(name: "prev", scope: !13659, file: !764, line: 445, type: !13666)
!13666 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13654)
!13667 = !DILocation(line: 0, scope: !13659)
!13668 = !DILocation(line: 445, column: 39, scope: !13659)
!13669 = !DILocation(line: 447, column: 8, scope: !13659)
!13670 = !DILocation(line: 447, column: 13, scope: !13659)
!13671 = !DILocation(line: 448, column: 8, scope: !13659)
!13672 = !DILocation(line: 448, column: 13, scope: !13659)
!13673 = !DILocation(line: 449, column: 8, scope: !13659)
!13674 = !DILocation(line: 449, column: 13, scope: !13659)
!13675 = !DILocation(line: 450, column: 18, scope: !13659)
!13676 = !DILocation(line: 451, column: 1, scope: !13659)
!13677 = distinct !DISubprogram(name: "next", scope: !3172, file: !3172, line: 46, type: !13678, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3142, retainedNodes: !13680)
!13678 = !DISubroutineType(types: !13679)
!13679 = !{!3145, !3145}
!13680 = !{!13681, !13682}
!13681 = !DILocalVariable(name: "t", arg: 1, scope: !13677, file: !3172, line: 46, type: !3145)
!13682 = !DILocalVariable(name: "n", scope: !13677, file: !3172, line: 48, type: !13654)
!13683 = !DILocation(line: 0, scope: !13677)
!13684 = !DILocation(line: 48, column: 58, scope: !13677)
!13685 = !DILocation(line: 48, column: 19, scope: !13677)
!13686 = !DILocation(line: 50, column: 9, scope: !13677)
!13687 = !DILocation(line: 50, column: 2, scope: !13677)
!13688 = distinct !DISubprogram(name: "sys_dlist_append", scope: !764, file: !764, line: 404, type: !13689, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3142, retainedNodes: !13692)
!13689 = !DISubroutineType(types: !13690)
!13690 = !{null, !13691, !13654}
!13691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3178, size: 32)
!13692 = !{!13693, !13694, !13695}
!13693 = !DILocalVariable(name: "list", arg: 1, scope: !13688, file: !764, line: 404, type: !13691)
!13694 = !DILocalVariable(name: "node", arg: 2, scope: !13688, file: !764, line: 404, type: !13654)
!13695 = !DILocalVariable(name: "tail", scope: !13688, file: !764, line: 406, type: !13666)
!13696 = !DILocation(line: 0, scope: !13688)
!13697 = !DILocation(line: 406, column: 34, scope: !13688)
!13698 = !DILocation(line: 408, column: 8, scope: !13688)
!13699 = !DILocation(line: 408, column: 13, scope: !13688)
!13700 = !DILocation(line: 409, column: 8, scope: !13688)
!13701 = !DILocation(line: 409, column: 13, scope: !13688)
!13702 = !DILocation(line: 411, column: 8, scope: !13688)
!13703 = !DILocation(line: 411, column: 13, scope: !13688)
!13704 = !DILocation(line: 412, column: 13, scope: !13688)
!13705 = !DILocation(line: 413, column: 1, scope: !13688)
!13706 = distinct !DISubprogram(name: "next_timeout", scope: !3172, file: !3172, line: 67, type: !13643, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3142, retainedNodes: !13707)
!13707 = !{!13708, !13709, !13710}
!13708 = !DILocalVariable(name: "to", scope: !13706, file: !3172, line: 69, type: !3145)
!13709 = !DILocalVariable(name: "ticks_elapsed", scope: !13706, file: !3172, line: 70, type: !1458)
!13710 = !DILocalVariable(name: "ret", scope: !13706, file: !3172, line: 71, type: !1458)
!13711 = !DILocation(line: 69, column: 24, scope: !13706)
!13712 = !DILocation(line: 0, scope: !13706)
!13713 = !DILocation(line: 70, column: 26, scope: !13706)
!13714 = !DILocation(line: 73, column: 10, scope: !13715)
!13715 = distinct !DILexicalBlock(scope: !13706, file: !3172, line: 73, column: 6)
!13716 = !DILocation(line: 73, column: 19, scope: !13715)
!13717 = !DILocation(line: 74, column: 21, scope: !13715)
!13718 = !DILocation(line: 74, column: 30, scope: !13715)
!13719 = !DILocation(line: 74, column: 28, scope: !13715)
!13720 = !DILocation(line: 74, column: 45, scope: !13715)
!13721 = !DILocation(line: 73, column: 6, scope: !13706)
!13722 = !DILocation(line: 77, column: 9, scope: !13723)
!13723 = distinct !DILexicalBlock(scope: !13715, file: !3172, line: 76, column: 9)
!13724 = !DILocation(line: 0, scope: !13715)
!13725 = !DILocation(line: 81, column: 20, scope: !13726)
!13726 = distinct !DILexicalBlock(scope: !13706, file: !3172, line: 81, column: 6)
!13727 = !DILocation(line: 81, column: 6, scope: !13726)
!13728 = !DILocation(line: 81, column: 32, scope: !13726)
!13729 = !DILocation(line: 85, column: 2, scope: !13706)
!13730 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !764, file: !764, line: 341, type: !13731, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3142, retainedNodes: !13733)
!13731 = !DISubroutineType(types: !13732)
!13732 = !{!13654, !13691, !13654}
!13733 = !{!13734, !13735}
!13734 = !DILocalVariable(name: "list", arg: 1, scope: !13730, file: !764, line: 341, type: !13691)
!13735 = !DILocalVariable(name: "node", arg: 2, scope: !13730, file: !764, line: 342, type: !13654)
!13736 = !DILocation(line: 0, scope: !13730)
!13737 = !DILocation(line: 344, column: 15, scope: !13730)
!13738 = !DILocation(line: 344, column: 9, scope: !13730)
!13739 = !DILocation(line: 344, column: 26, scope: !13730)
!13740 = !DILocation(line: 344, column: 2, scope: !13730)
!13741 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !764, file: !764, line: 325, type: !13731, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3142, retainedNodes: !13742)
!13742 = !{!13743, !13744}
!13743 = !DILocalVariable(name: "list", arg: 1, scope: !13741, file: !764, line: 325, type: !13691)
!13744 = !DILocalVariable(name: "node", arg: 2, scope: !13741, file: !764, line: 326, type: !13654)
!13745 = !DILocation(line: 0, scope: !13741)
!13746 = !DILocation(line: 328, column: 24, scope: !13741)
!13747 = !DILocation(line: 328, column: 15, scope: !13741)
!13748 = !DILocation(line: 328, column: 9, scope: !13741)
!13749 = !DILocation(line: 328, column: 45, scope: !13741)
!13750 = !DILocation(line: 328, column: 2, scope: !13741)
!13751 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !764, file: !764, line: 294, type: !13752, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3142, retainedNodes: !13754)
!13752 = !DISubroutineType(types: !13753)
!13753 = !{!13654, !13691}
!13754 = !{!13755}
!13755 = !DILocalVariable(name: "list", arg: 1, scope: !13751, file: !764, line: 294, type: !13691)
!13756 = !DILocation(line: 0, scope: !13751)
!13757 = !DILocation(line: 296, column: 9, scope: !13751)
!13758 = !DILocation(line: 296, column: 2, scope: !13751)
!13759 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !764, file: !764, line: 266, type: !13760, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3142, retainedNodes: !13762)
!13760 = !DISubroutineType(types: !13761)
!13761 = !{!731, !13691}
!13762 = !{!13763}
!13763 = !DILocalVariable(name: "list", arg: 1, scope: !13759, file: !764, line: 266, type: !13691)
!13764 = !DILocation(line: 0, scope: !13759)
!13765 = !DILocation(line: 268, column: 15, scope: !13759)
!13766 = !DILocation(line: 268, column: 20, scope: !13759)
!13767 = !DILocation(line: 268, column: 2, scope: !13759)
!13768 = distinct !DISubprogram(name: "z_abort_timeout", scope: !3172, file: !3172, line: 150, type: !13769, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3142, retainedNodes: !13771)
!13769 = !DISubroutineType(types: !13770)
!13770 = !{!103, !3145}
!13771 = !{!13772, !13773, !13774, !13776}
!13772 = !DILocalVariable(name: "to", arg: 1, scope: !13768, file: !3172, line: 150, type: !3145)
!13773 = !DILocalVariable(name: "ret", scope: !13768, file: !3172, line: 152, type: !103)
!13774 = !DILocalVariable(name: "__i", scope: !13775, file: !3172, line: 154, type: !13537)
!13775 = distinct !DILexicalBlock(scope: !13768, file: !3172, line: 154, column: 2)
!13776 = !DILocalVariable(name: "__key", scope: !13775, file: !3172, line: 154, type: !13537)
!13777 = !DILocation(line: 0, scope: !13768)
!13778 = !DILocation(line: 0, scope: !13775)
!13779 = !DILocation(line: 0, scope: !13559, inlinedAt: !13780)
!13780 = distinct !DILocation(line: 154, column: 2, scope: !13775)
!13781 = !DILocation(line: 55, column: 2, scope: !13568, inlinedAt: !13782)
!13782 = distinct !DILocation(line: 145, column: 10, scope: !13559, inlinedAt: !13780)
!13783 = !DILocation(line: 0, scope: !13568, inlinedAt: !13782)
!13784 = !DILocation(line: 155, column: 7, scope: !13785)
!13785 = distinct !DILexicalBlock(scope: !13786, file: !3172, line: 155, column: 7)
!13786 = distinct !DILexicalBlock(scope: !13787, file: !3172, line: 154, column: 24)
!13787 = distinct !DILexicalBlock(scope: !13775, file: !3172, line: 154, column: 2)
!13788 = !DILocation(line: 155, column: 7, scope: !13786)
!13789 = !DILocation(line: 156, column: 4, scope: !13790)
!13790 = distinct !DILexicalBlock(scope: !13785, file: !3172, line: 155, column: 39)
!13791 = !DILocation(line: 158, column: 3, scope: !13790)
!13792 = !DILocation(line: 0, scope: !13627, inlinedAt: !13793)
!13793 = distinct !DILocation(line: 154, column: 2, scope: !13787)
!13794 = !DILocation(line: 0, scope: !13635, inlinedAt: !13795)
!13795 = distinct !DILocation(line: 215, column: 2, scope: !13627, inlinedAt: !13793)
!13796 = !DILocation(line: 95, column: 2, scope: !13635, inlinedAt: !13795)
!13797 = !DILocation(line: 161, column: 2, scope: !13768)
!13798 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !764, file: !764, line: 225, type: !13799, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3142, retainedNodes: !13803)
!13799 = !DISubroutineType(types: !13800)
!13800 = !{!731, !13801}
!13801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13802, size: 32)
!13802 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3149)
!13803 = !{!13804}
!13804 = !DILocalVariable(name: "node", arg: 1, scope: !13798, file: !764, line: 225, type: !13801)
!13805 = !DILocation(line: 0, scope: !13798)
!13806 = !DILocation(line: 227, column: 15, scope: !13798)
!13807 = !DILocation(line: 227, column: 20, scope: !13798)
!13808 = !DILocation(line: 227, column: 2, scope: !13798)
!13809 = distinct !DISubprogram(name: "remove_timeout", scope: !3172, file: !3172, line: 53, type: !3166, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3142, retainedNodes: !13810)
!13810 = !{!13811}
!13811 = !DILocalVariable(name: "t", arg: 1, scope: !13809, file: !3172, line: 53, type: !3145)
!13812 = !DILocation(line: 0, scope: !13809)
!13813 = !DILocation(line: 55, column: 6, scope: !13814)
!13814 = distinct !DILexicalBlock(scope: !13809, file: !3172, line: 55, column: 6)
!13815 = !DILocation(line: 55, column: 14, scope: !13814)
!13816 = !DILocation(line: 55, column: 6, scope: !13809)
!13817 = !DILocation(line: 56, column: 25, scope: !13818)
!13818 = distinct !DILexicalBlock(scope: !13814, file: !3172, line: 55, column: 23)
!13819 = !DILocation(line: 56, column: 12, scope: !13818)
!13820 = !DILocation(line: 56, column: 19, scope: !13818)
!13821 = !DILocation(line: 57, column: 2, scope: !13818)
!13822 = !DILocation(line: 59, column: 23, scope: !13809)
!13823 = !DILocation(line: 59, column: 2, scope: !13809)
!13824 = !DILocation(line: 60, column: 1, scope: !13809)
!13825 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !764, file: !764, line: 496, type: !13826, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3142, retainedNodes: !13828)
!13826 = !DISubroutineType(types: !13827)
!13827 = !{null, !13654}
!13828 = !{!13829, !13830, !13831}
!13829 = !DILocalVariable(name: "node", arg: 1, scope: !13825, file: !764, line: 496, type: !13654)
!13830 = !DILocalVariable(name: "prev", scope: !13825, file: !764, line: 498, type: !13666)
!13831 = !DILocalVariable(name: "next", scope: !13825, file: !764, line: 499, type: !13666)
!13832 = !DILocation(line: 0, scope: !13825)
!13833 = !DILocation(line: 498, column: 34, scope: !13825)
!13834 = !DILocation(line: 499, column: 34, scope: !13825)
!13835 = !DILocation(line: 501, column: 8, scope: !13825)
!13836 = !DILocation(line: 501, column: 13, scope: !13825)
!13837 = !DILocation(line: 502, column: 8, scope: !13825)
!13838 = !DILocation(line: 502, column: 13, scope: !13825)
!13839 = !DILocation(line: 503, column: 2, scope: !13825)
!13840 = !DILocation(line: 504, column: 1, scope: !13825)
!13841 = distinct !DISubprogram(name: "sys_dnode_init", scope: !764, file: !764, line: 211, type: !13826, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3142, retainedNodes: !13842)
!13842 = !{!13843}
!13843 = !DILocalVariable(name: "node", arg: 1, scope: !13841, file: !764, line: 211, type: !13654)
!13844 = !DILocation(line: 0, scope: !13841)
!13845 = !DILocation(line: 213, column: 8, scope: !13841)
!13846 = !DILocation(line: 213, column: 13, scope: !13841)
!13847 = !DILocation(line: 214, column: 8, scope: !13841)
!13848 = !DILocation(line: 214, column: 13, scope: !13841)
!13849 = !DILocation(line: 215, column: 1, scope: !13841)
!13850 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !3172, file: !3172, line: 183, type: !13851, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3142, retainedNodes: !13855)
!13851 = !DISubroutineType(types: !13852)
!13852 = !{!2347, !13853}
!13853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13854, size: 32)
!13854 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3146)
!13855 = !{!13856, !13857, !13858, !13860}
!13856 = !DILocalVariable(name: "timeout", arg: 1, scope: !13850, file: !3172, line: 183, type: !13853)
!13857 = !DILocalVariable(name: "ticks", scope: !13850, file: !3172, line: 185, type: !2347)
!13858 = !DILocalVariable(name: "__i", scope: !13859, file: !3172, line: 187, type: !13537)
!13859 = distinct !DILexicalBlock(scope: !13850, file: !3172, line: 187, column: 2)
!13860 = !DILocalVariable(name: "__key", scope: !13859, file: !3172, line: 187, type: !13537)
!13861 = !DILocation(line: 0, scope: !13850)
!13862 = !DILocation(line: 0, scope: !13859)
!13863 = !DILocation(line: 0, scope: !13559, inlinedAt: !13864)
!13864 = distinct !DILocation(line: 187, column: 2, scope: !13859)
!13865 = !DILocation(line: 55, column: 2, scope: !13568, inlinedAt: !13866)
!13866 = distinct !DILocation(line: 145, column: 10, scope: !13559, inlinedAt: !13864)
!13867 = !DILocation(line: 0, scope: !13568, inlinedAt: !13866)
!13868 = !DILocation(line: 188, column: 11, scope: !13869)
!13869 = distinct !DILexicalBlock(scope: !13870, file: !3172, line: 187, column: 24)
!13870 = distinct !DILexicalBlock(scope: !13859, file: !3172, line: 187, column: 2)
!13871 = !DILocation(line: 0, scope: !13627, inlinedAt: !13872)
!13872 = distinct !DILocation(line: 187, column: 2, scope: !13870)
!13873 = !DILocation(line: 0, scope: !13635, inlinedAt: !13874)
!13874 = distinct !DILocation(line: 215, column: 2, scope: !13627, inlinedAt: !13872)
!13875 = !DILocation(line: 95, column: 2, scope: !13635, inlinedAt: !13874)
!13876 = !DILocation(line: 191, column: 2, scope: !13850)
!13877 = distinct !DISubprogram(name: "timeout_rem", scope: !3172, file: !3172, line: 165, type: !13851, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3142, retainedNodes: !13878)
!13878 = !{!13879, !13880, !13881}
!13879 = !DILocalVariable(name: "timeout", arg: 1, scope: !13877, file: !3172, line: 165, type: !13853)
!13880 = !DILocalVariable(name: "ticks", scope: !13877, file: !3172, line: 167, type: !2347)
!13881 = !DILocalVariable(name: "t", scope: !13882, file: !3172, line: 173, type: !3145)
!13882 = distinct !DILexicalBlock(scope: !13877, file: !3172, line: 173, column: 2)
!13883 = !DILocation(line: 0, scope: !13877)
!13884 = !DILocation(line: 169, column: 6, scope: !13885)
!13885 = distinct !DILexicalBlock(scope: !13877, file: !3172, line: 169, column: 6)
!13886 = !DILocation(line: 169, column: 6, scope: !13877)
!13887 = !DILocation(line: 173, column: 28, scope: !13882)
!13888 = !DILocation(line: 0, scope: !13882)
!13889 = !DILocation(line: 173, column: 39, scope: !13890)
!13890 = distinct !DILexicalBlock(scope: !13882, file: !3172, line: 173, column: 2)
!13891 = !DILocation(line: 173, column: 2, scope: !13882)
!13892 = !DILocation(line: 174, column: 15, scope: !13893)
!13893 = distinct !DILexicalBlock(scope: !13890, file: !3172, line: 173, column: 61)
!13894 = !DILocation(line: 174, column: 9, scope: !13893)
!13895 = !DILocation(line: 175, column: 15, scope: !13896)
!13896 = distinct !DILexicalBlock(scope: !13893, file: !3172, line: 175, column: 7)
!13897 = !DILocation(line: 175, column: 7, scope: !13893)
!13898 = !DILocation(line: 173, column: 52, scope: !13890)
!13899 = distinct !{!13899, !13891, !13900}
!13900 = !DILocation(line: 178, column: 2, scope: !13882)
!13901 = !DILocation(line: 180, column: 17, scope: !13877)
!13902 = !DILocation(line: 180, column: 15, scope: !13877)
!13903 = !DILocation(line: 180, column: 2, scope: !13877)
!13904 = !DILocation(line: 181, column: 1, scope: !13877)
!13905 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !11217, file: !11217, line: 35, type: !13906, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3142, retainedNodes: !13908)
!13906 = !DISubroutineType(types: !13907)
!13907 = !{!731, !13853}
!13908 = !{!13909}
!13909 = !DILocalVariable(name: "to", arg: 1, scope: !13905, file: !11217, line: 35, type: !13853)
!13910 = !DILocation(line: 0, scope: !13905)
!13911 = !DILocation(line: 37, column: 35, scope: !13905)
!13912 = !DILocation(line: 37, column: 10, scope: !13905)
!13913 = !DILocation(line: 37, column: 9, scope: !13905)
!13914 = !DILocation(line: 37, column: 2, scope: !13905)
!13915 = distinct !DISubprogram(name: "z_timeout_expires", scope: !3172, file: !3172, line: 194, type: !13851, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3142, retainedNodes: !13916)
!13916 = !{!13917, !13918, !13919, !13921}
!13917 = !DILocalVariable(name: "timeout", arg: 1, scope: !13915, file: !3172, line: 194, type: !13853)
!13918 = !DILocalVariable(name: "ticks", scope: !13915, file: !3172, line: 196, type: !2347)
!13919 = !DILocalVariable(name: "__i", scope: !13920, file: !3172, line: 198, type: !13537)
!13920 = distinct !DILexicalBlock(scope: !13915, file: !3172, line: 198, column: 2)
!13921 = !DILocalVariable(name: "__key", scope: !13920, file: !3172, line: 198, type: !13537)
!13922 = !DILocation(line: 0, scope: !13915)
!13923 = !DILocation(line: 0, scope: !13920)
!13924 = !DILocation(line: 0, scope: !13559, inlinedAt: !13925)
!13925 = distinct !DILocation(line: 198, column: 2, scope: !13920)
!13926 = !DILocation(line: 55, column: 2, scope: !13568, inlinedAt: !13927)
!13927 = distinct !DILocation(line: 145, column: 10, scope: !13559, inlinedAt: !13925)
!13928 = !DILocation(line: 0, scope: !13568, inlinedAt: !13927)
!13929 = !DILocation(line: 199, column: 11, scope: !13930)
!13930 = distinct !DILexicalBlock(scope: !13931, file: !3172, line: 198, column: 24)
!13931 = distinct !DILexicalBlock(scope: !13920, file: !3172, line: 198, column: 2)
!13932 = !DILocation(line: 199, column: 23, scope: !13930)
!13933 = !DILocation(line: 0, scope: !13627, inlinedAt: !13934)
!13934 = distinct !DILocation(line: 198, column: 2, scope: !13931)
!13935 = !DILocation(line: 0, scope: !13635, inlinedAt: !13936)
!13936 = distinct !DILocation(line: 215, column: 2, scope: !13627, inlinedAt: !13934)
!13937 = !DILocation(line: 95, column: 2, scope: !13635, inlinedAt: !13936)
!13938 = !DILocation(line: 199, column: 21, scope: !13930)
!13939 = !DILocation(line: 202, column: 2, scope: !13915)
!13940 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !3172, file: !3172, line: 205, type: !13643, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3142, retainedNodes: !13941)
!13941 = !{!13942, !13943, !13945}
!13942 = !DILocalVariable(name: "ret", scope: !13940, file: !3172, line: 207, type: !1458)
!13943 = !DILocalVariable(name: "__i", scope: !13944, file: !3172, line: 209, type: !13537)
!13944 = distinct !DILexicalBlock(scope: !13940, file: !3172, line: 209, column: 2)
!13945 = !DILocalVariable(name: "__key", scope: !13944, file: !3172, line: 209, type: !13537)
!13946 = !DILocation(line: 0, scope: !13940)
!13947 = !DILocation(line: 0, scope: !13944)
!13948 = !DILocation(line: 0, scope: !13559, inlinedAt: !13949)
!13949 = distinct !DILocation(line: 209, column: 2, scope: !13944)
!13950 = !DILocation(line: 55, column: 2, scope: !13568, inlinedAt: !13951)
!13951 = distinct !DILocation(line: 145, column: 10, scope: !13559, inlinedAt: !13949)
!13952 = !DILocation(line: 0, scope: !13568, inlinedAt: !13951)
!13953 = !DILocation(line: 210, column: 9, scope: !13954)
!13954 = distinct !DILexicalBlock(scope: !13955, file: !3172, line: 209, column: 24)
!13955 = distinct !DILexicalBlock(scope: !13944, file: !3172, line: 209, column: 2)
!13956 = !DILocation(line: 0, scope: !13627, inlinedAt: !13957)
!13957 = distinct !DILocation(line: 209, column: 2, scope: !13955)
!13958 = !DILocation(line: 0, scope: !13635, inlinedAt: !13959)
!13959 = distinct !DILocation(line: 215, column: 2, scope: !13627, inlinedAt: !13957)
!13960 = !DILocation(line: 95, column: 2, scope: !13635, inlinedAt: !13959)
!13961 = !DILocation(line: 212, column: 2, scope: !13940)
!13962 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !3172, file: !3172, line: 215, type: !10018, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3142, retainedNodes: !13963)
!13963 = !{!13964, !13965, !13966, !13968, !13969, !13972, !13973}
!13964 = !DILocalVariable(name: "ticks", arg: 1, scope: !13962, file: !3172, line: 215, type: !1458)
!13965 = !DILocalVariable(name: "is_idle", arg: 2, scope: !13962, file: !3172, line: 215, type: !731)
!13966 = !DILocalVariable(name: "__i", scope: !13967, file: !3172, line: 217, type: !13537)
!13967 = distinct !DILexicalBlock(scope: !13962, file: !3172, line: 217, column: 2)
!13968 = !DILocalVariable(name: "__key", scope: !13967, file: !3172, line: 217, type: !13537)
!13969 = !DILocalVariable(name: "next_to", scope: !13970, file: !3172, line: 218, type: !103)
!13970 = distinct !DILexicalBlock(scope: !13971, file: !3172, line: 217, column: 24)
!13971 = distinct !DILexicalBlock(scope: !13967, file: !3172, line: 217, column: 2)
!13972 = !DILocalVariable(name: "sooner", scope: !13970, file: !3172, line: 219, type: !731)
!13973 = !DILocalVariable(name: "imminent", scope: !13970, file: !3172, line: 221, type: !731)
!13974 = !DILocation(line: 0, scope: !13962)
!13975 = !DILocation(line: 0, scope: !13967)
!13976 = !DILocation(line: 0, scope: !13559, inlinedAt: !13977)
!13977 = distinct !DILocation(line: 217, column: 2, scope: !13967)
!13978 = !DILocation(line: 55, column: 2, scope: !13568, inlinedAt: !13979)
!13979 = distinct !DILocation(line: 145, column: 10, scope: !13559, inlinedAt: !13977)
!13980 = !DILocation(line: 0, scope: !13568, inlinedAt: !13979)
!13981 = !DILocation(line: 218, column: 17, scope: !13970)
!13982 = !DILocation(line: 0, scope: !13970)
!13983 = !DILocation(line: 221, column: 27, scope: !13970)
!13984 = !DILocation(line: 233, column: 17, scope: !13985)
!13985 = distinct !DILexicalBlock(scope: !13970, file: !3172, line: 233, column: 7)
!13986 = !DILocation(line: 234, column: 26, scope: !13987)
!13987 = distinct !DILexicalBlock(scope: !13985, file: !3172, line: 233, column: 56)
!13988 = !DILocation(line: 234, column: 4, scope: !13987)
!13989 = !DILocation(line: 235, column: 3, scope: !13987)
!13990 = !DILocation(line: 0, scope: !13627, inlinedAt: !13991)
!13991 = distinct !DILocation(line: 217, column: 2, scope: !13971)
!13992 = !DILocation(line: 0, scope: !13635, inlinedAt: !13993)
!13993 = distinct !DILocation(line: 215, column: 2, scope: !13627, inlinedAt: !13991)
!13994 = !DILocation(line: 95, column: 2, scope: !13635, inlinedAt: !13993)
!13995 = !DILocation(line: 237, column: 1, scope: !13962)
!13996 = distinct !DISubprogram(name: "sys_clock_announce", scope: !3172, file: !3172, line: 239, type: !13997, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3142, retainedNodes: !13999)
!13997 = !DISubroutineType(types: !13998)
!13998 = !{null, !1458}
!13999 = !{!14000, !14001, !14002, !14004}
!14000 = !DILocalVariable(name: "ticks", arg: 1, scope: !13996, file: !3172, line: 239, type: !1458)
!14001 = !DILocalVariable(name: "key", scope: !13996, file: !3172, line: 245, type: !13537)
!14002 = !DILocalVariable(name: "t", scope: !14003, file: !3172, line: 262, type: !3145)
!14003 = distinct !DILexicalBlock(scope: !13996, file: !3172, line: 261, column: 67)
!14004 = !DILocalVariable(name: "dt", scope: !14003, file: !3172, line: 263, type: !103)
!14005 = !DILocation(line: 0, scope: !13996)
!14006 = !DILocation(line: 242, column: 2, scope: !13996)
!14007 = !DILocation(line: 0, scope: !13559, inlinedAt: !14008)
!14008 = distinct !DILocation(line: 245, column: 25, scope: !13996)
!14009 = !DILocation(line: 55, column: 2, scope: !13568, inlinedAt: !14010)
!14010 = distinct !DILocation(line: 145, column: 10, scope: !13559, inlinedAt: !14008)
!14011 = !DILocation(line: 0, scope: !13568, inlinedAt: !14010)
!14012 = !DILocation(line: 261, column: 9, scope: !13996)
!14013 = !DILocation(line: 261, column: 17, scope: !13996)
!14014 = !DILocation(line: 261, column: 25, scope: !13996)
!14015 = !DILocation(line: 261, column: 37, scope: !13996)
!14016 = !DILocation(line: 261, column: 47, scope: !13996)
!14017 = !DILocation(line: 261, column: 44, scope: !13996)
!14018 = !DILocation(line: 261, column: 2, scope: !13996)
!14019 = !DILocation(line: 0, scope: !14003)
!14020 = !DILocation(line: 263, column: 12, scope: !14003)
!14021 = !DILocation(line: 265, column: 16, scope: !14003)
!14022 = !DILocation(line: 265, column: 13, scope: !14003)
!14023 = !DILocation(line: 266, column: 13, scope: !14003)
!14024 = !DILocation(line: 267, column: 3, scope: !14003)
!14025 = !DILocation(line: 0, scope: !13627, inlinedAt: !14026)
!14026 = distinct !DILocation(line: 269, column: 3, scope: !14003)
!14027 = !DILocation(line: 0, scope: !13635, inlinedAt: !14028)
!14028 = distinct !DILocation(line: 215, column: 2, scope: !13627, inlinedAt: !14026)
!14029 = !DILocation(line: 95, column: 2, scope: !13635, inlinedAt: !14028)
!14030 = !DILocation(line: 270, column: 6, scope: !14003)
!14031 = !DILocation(line: 270, column: 3, scope: !14003)
!14032 = !DILocation(line: 0, scope: !13559, inlinedAt: !14033)
!14033 = distinct !DILocation(line: 271, column: 9, scope: !14003)
!14034 = !DILocation(line: 55, column: 2, scope: !13568, inlinedAt: !14035)
!14035 = distinct !DILocation(line: 145, column: 10, scope: !13559, inlinedAt: !14033)
!14036 = !DILocation(line: 0, scope: !13568, inlinedAt: !14035)
!14037 = !DILocation(line: 272, column: 22, scope: !14003)
!14038 = distinct !{!14038, !14018, !14039}
!14039 = !DILocation(line: 273, column: 2, scope: !13996)
!14040 = !DILocation(line: 276, column: 19, scope: !14041)
!14041 = distinct !DILexicalBlock(scope: !14042, file: !3172, line: 275, column: 23)
!14042 = distinct !DILexicalBlock(scope: !13996, file: !3172, line: 275, column: 6)
!14043 = !DILocation(line: 277, column: 2, scope: !14041)
!14044 = !DILocation(line: 279, column: 15, scope: !13996)
!14045 = !DILocation(line: 279, column: 12, scope: !13996)
!14046 = !DILocation(line: 280, column: 21, scope: !13996)
!14047 = !DILocation(line: 282, column: 24, scope: !13996)
!14048 = !DILocation(line: 282, column: 2, scope: !13996)
!14049 = !DILocation(line: 0, scope: !13627, inlinedAt: !14050)
!14050 = distinct !DILocation(line: 284, column: 2, scope: !13996)
!14051 = !DILocation(line: 0, scope: !13635, inlinedAt: !14052)
!14052 = distinct !DILocation(line: 215, column: 2, scope: !13627, inlinedAt: !14050)
!14053 = !DILocation(line: 95, column: 2, scope: !13635, inlinedAt: !14052)
!14054 = !DILocation(line: 285, column: 1, scope: !13996)
!14055 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !3172, file: !3172, line: 287, type: !14056, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3142, retainedNodes: !14058)
!14056 = !DISubroutineType(types: !14057)
!14057 = !{!819}
!14058 = !{!14059, !14060, !14062}
!14059 = !DILocalVariable(name: "t", scope: !14055, file: !3172, line: 289, type: !163)
!14060 = !DILocalVariable(name: "__i", scope: !14061, file: !3172, line: 291, type: !13537)
!14061 = distinct !DILexicalBlock(scope: !14055, file: !3172, line: 291, column: 2)
!14062 = !DILocalVariable(name: "__key", scope: !14061, file: !3172, line: 291, type: !13537)
!14063 = !DILocation(line: 0, scope: !14055)
!14064 = !DILocation(line: 0, scope: !14061)
!14065 = !DILocation(line: 0, scope: !13559, inlinedAt: !14066)
!14066 = distinct !DILocation(line: 291, column: 2, scope: !14061)
!14067 = !DILocation(line: 55, column: 2, scope: !13568, inlinedAt: !14068)
!14068 = distinct !DILocation(line: 145, column: 10, scope: !13559, inlinedAt: !14066)
!14069 = !DILocation(line: 0, scope: !13568, inlinedAt: !14068)
!14070 = !DILocation(line: 292, column: 7, scope: !14071)
!14071 = distinct !DILexicalBlock(scope: !14072, file: !3172, line: 291, column: 24)
!14072 = distinct !DILexicalBlock(scope: !14061, file: !3172, line: 291, column: 2)
!14073 = !DILocation(line: 292, column: 19, scope: !14071)
!14074 = !DILocation(line: 0, scope: !13627, inlinedAt: !14075)
!14075 = distinct !DILocation(line: 291, column: 2, scope: !14072)
!14076 = !DILocation(line: 0, scope: !13635, inlinedAt: !14077)
!14077 = distinct !DILocation(line: 215, column: 2, scope: !13627, inlinedAt: !14075)
!14078 = !DILocation(line: 95, column: 2, scope: !13635, inlinedAt: !14077)
!14079 = !DILocation(line: 292, column: 17, scope: !14071)
!14080 = !DILocation(line: 294, column: 2, scope: !14055)
!14081 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !3172, file: !3172, line: 297, type: !135, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3142, retainedNodes: !162)
!14082 = !DILocation(line: 300, column: 19, scope: !14081)
!14083 = !DILocation(line: 300, column: 9, scope: !14081)
!14084 = !DILocation(line: 300, column: 2, scope: !14081)
!14085 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !3172, file: !3172, line: 306, type: !14056, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3142, retainedNodes: !162)
!14086 = !DILocation(line: 308, column: 9, scope: !14085)
!14087 = !DILocation(line: 308, column: 2, scope: !14085)
!14088 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !3172, file: !3172, line: 319, type: !7475, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3142, retainedNodes: !14089)
!14089 = !{!14090, !14091, !14092, !14093}
!14090 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !14088, file: !3172, line: 319, type: !137)
!14091 = !DILocalVariable(name: "start_cycles", scope: !14088, file: !3172, line: 328, type: !137)
!14092 = !DILocalVariable(name: "cycles_to_wait", scope: !14088, file: !3172, line: 331, type: !137)
!14093 = !DILocalVariable(name: "current_cycles", scope: !14094, file: !3172, line: 338, type: !137)
!14094 = distinct !DILexicalBlock(scope: !14095, file: !3172, line: 337, column: 11)
!14095 = distinct !DILexicalBlock(scope: !14096, file: !3172, line: 337, column: 2)
!14096 = distinct !DILexicalBlock(scope: !14088, file: !3172, line: 337, column: 2)
!14097 = !DILocation(line: 0, scope: !14088)
!14098 = !DILocation(line: 322, column: 19, scope: !14099)
!14099 = distinct !DILexicalBlock(scope: !14088, file: !3172, line: 322, column: 6)
!14100 = !DILocation(line: 322, column: 6, scope: !14088)
!14101 = !DILocation(line: 328, column: 26, scope: !14088)
!14102 = !DILocation(line: 333, column: 43, scope: !14088)
!14103 = !DILocation(line: 337, column: 2, scope: !14088)
!14104 = !DILocation(line: 338, column: 29, scope: !14094)
!14105 = !DILocation(line: 0, scope: !14094)
!14106 = !DILocation(line: 341, column: 23, scope: !14107)
!14107 = distinct !DILexicalBlock(scope: !14094, file: !3172, line: 341, column: 7)
!14108 = !DILocation(line: 341, column: 39, scope: !14107)
!14109 = !DILocation(line: 349, column: 1, scope: !14088)
!14110 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !846, file: !846, line: 1675, type: !135, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3142, retainedNodes: !162)
!14111 = !DILocation(line: 1677, column: 9, scope: !14110)
!14112 = !DILocation(line: 1677, column: 2, scope: !14110)
!14113 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !14114, file: !14114, line: 24, type: !135, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3142, retainedNodes: !162)
!14114 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14115 = !DILocation(line: 26, column: 9, scope: !14113)
!14116 = !DILocation(line: 26, column: 2, scope: !14113)
!14117 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !3172, file: !3172, line: 364, type: !14118, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3142, retainedNodes: !14120)
!14118 = !DISubroutineType(types: !14119)
!14119 = !{!163, !13527}
!14120 = !{!14121, !14122}
!14121 = !DILocalVariable(name: "timeout", arg: 1, scope: !14117, file: !3172, line: 364, type: !13527)
!14122 = !DILocalVariable(name: "dt", scope: !14117, file: !3172, line: 366, type: !2347)
!14123 = !DILocation(line: 0, scope: !14117)
!14124 = !DILocation(line: 368, column: 6, scope: !14117)
!14125 = !DILocation(line: 371, column: 10, scope: !14126)
!14126 = distinct !DILexicalBlock(scope: !14127, file: !3172, line: 370, column: 47)
!14127 = distinct !DILexicalBlock(scope: !14128, file: !3172, line: 370, column: 13)
!14128 = distinct !DILexicalBlock(scope: !14117, file: !3172, line: 368, column: 6)
!14129 = !DILocation(line: 371, column: 3, scope: !14126)
!14130 = !DILocation(line: 376, column: 58, scope: !14131)
!14131 = distinct !DILexicalBlock(scope: !14132, file: !3172, line: 376, column: 7)
!14132 = distinct !DILexicalBlock(scope: !14127, file: !3172, line: 372, column: 9)
!14133 = !DILocation(line: 376, column: 7, scope: !14132)
!14134 = !DILocation(line: 376, column: 43, scope: !14131)
!14135 = !DILocation(line: 377, column: 4, scope: !14136)
!14136 = distinct !DILexicalBlock(scope: !14131, file: !3172, line: 376, column: 64)
!14137 = !DILocation(line: 379, column: 10, scope: !14132)
!14138 = !DILocation(line: 379, column: 33, scope: !14132)
!14139 = !DILocation(line: 379, column: 31, scope: !14132)
!14140 = !DILocation(line: 379, column: 3, scope: !14132)
!14141 = !DILocation(line: 0, scope: !14128)
!14142 = !DILocation(line: 381, column: 1, scope: !14117)
!14143 = distinct !DISubprogram(name: "boot_banner", scope: !14144, file: !14144, line: 26, type: !3598, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3584, retainedNodes: !162)
!14144 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14145 = !DILocation(line: 34, column: 2, scope: !14143)
!14146 = !DILocation(line: 36, column: 1, scope: !14143)
