; ModuleID = 'build/96b_carbon/getline/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %struct.z_heap_bucket*, %struct.z_heap_bucket* }
%struct.z_heap_bucket = type { i32 }
%struct.k_spinlock = type {}
%union.anon = type { %struct._dnode }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct.console_input = type { i32, i8, [128 x i8] }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.z_heap_bucket }
%struct.arm_mpu_region = type { i32, i8*, %struct.z_heap_bucket }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.z_heap_bucket, i32*, i32, %struct._thread_arch }
%struct._thread_arch = type { i32, i32 }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.z_heap_bucket, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config*, void (%struct.device*)* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device*, void (%struct.device*, i8*)*, i8* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type { [2 x i32], i32, i32, [0 x %struct.z_heap_bucket] }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.str_context = type { i8*, i32, i32 }
%struct.chunk_unit_t = type { [8 x i8] }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.z_heap_bucket, %struct.z_heap_bucket }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, i32 }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32, i32, i32 }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [85 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [85 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233788 to i8*), void (i8*)* inttoptr (i32 134230685 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233788 to i8*), void (i8*)* inttoptr (i32 134230665 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233788 to i8*), void (i8*)* inttoptr (i32 134230655 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233788 to i8*), void (i8*)* inttoptr (i32 134230755 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233788 to i8*), void (i8*)* inttoptr (i32 134230745 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233788 to i8*), void (i8*)* inttoptr (i32 134230735 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233788 to i8*), void (i8*)* inttoptr (i32 134230725 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233788 to i8*), void (i8*)* inttoptr (i32 134230715 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233788 to i8*), void (i8*)* inttoptr (i32 134230705 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134234052 to i8*), void (i8*)* inttoptr (i32 134232085 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134234028 to i8*), void (i8*)* inttoptr (i32 134232085 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233788 to i8*), void (i8*)* inttoptr (i32 134230695 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233788 to i8*), void (i8*)* inttoptr (i32 134230675 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134234004 to i8*), void (i8*)* inttoptr (i32 134232085 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@.str = private unnamed_addr constant [14 x i8] c"Enter a line\0A\00", align 1
@.str.1 = private unnamed_addr constant [10 x i8] c"line: %s\0A\00", align 1
@.str.2 = private unnamed_addr constant [21 x i8] c"last char was: 0x%x\0A\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !25
@.str.5 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@llvm.compiler.used = appending global [47 x i8*] [i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.k_fifo* @free_queue to i8*), i8* bitcast (%struct.k_fifo* @used_queue to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_39 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_20 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_23 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_25 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_72 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_73 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_74 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_75 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_76 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_20 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_23 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_25 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_72 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_73 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_74 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_75 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_76 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_44 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_47 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_50 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_44 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_47 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_50 to i8*), i8* bitcast (%struct._isr_list* @uart_stm32_irq_config_func_0.__isr_uart_stm32_isr_irq_0 to i8*), i8* bitcast (%struct._isr_list* @uart_stm32_irq_config_func_1.__isr_uart_stm32_isr_irq_1 to i8*), i8* bitcast (%struct._isr_list* @uart_stm32_irq_config_func_2.__isr_uart_stm32_isr_irq_2 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.init_entry* @__init_statics_init_pre to i8*)], section "llvm.metadata"
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !109
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !166
@free_queue = internal global %struct.k_fifo { %struct.k_queue { %struct._sflist zeroinitializer, %struct.k_spinlock undef, %union.anon { %struct._dnode { %union.anon.0 { %struct._dnode* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.k_fifo* @free_queue to i8*), i64 8) to %struct._dnode*) }, %union.anon.0 { %struct._dnode* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.k_fifo* @free_queue to i8*), i64 8) to %struct._dnode*) } } } } }, section "._k_queue.static.free_queue", align 4, !dbg !195
@used_queue = internal global %struct.k_fifo { %struct.k_queue { %struct._sflist zeroinitializer, %struct.k_spinlock undef, %union.anon { %struct._dnode { %union.anon.0 { %struct._dnode* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.k_fifo* @used_queue to i8*), i64 8) to %struct._dnode*) }, %union.anon.0 { %struct._dnode* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.k_fifo* @used_queue to i8*), i64 8) to %struct._dnode*) } } } } }, section "._k_queue.static.used_queue", align 4, !dbg !292
@console_getline.cmd = internal unnamed_addr global %struct.console_input* null, align 4, !dbg !339
@line_bufs = internal global [2 x %struct.console_input] zeroinitializer, align 4, !dbg !360
@_vector_start = external dso_local global [0 x i8], align 1
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.z_heap_bucket { i32 101384192 } }], align 4, !dbg !365
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !371
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !508
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !544
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.33, i32 0, i32 0), %struct.z_heap_bucket { i32 117571620 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.34, i32 0, i32 0), %struct.z_heap_bucket { i32 285933600 } }], align 4, !dbg !554
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !559
@.str.33 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.34 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !579
@__devicehdl_dts_ord_39 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !751
@.str.35 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_39 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !712
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !695
@__device_dts_ord_39 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.35, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_39, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_39, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !668
@__init___device_dts_ord_39 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_39 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !684
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !714
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !728
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !730
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !732
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !734
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !736
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !738
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !740
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !742
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !744
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !746
@__devicehdl_dts_ord_9 = dso_local constant [14 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 13, i16 32767], section ".__device_handles_pass2", align 2, !dbg !756
@.str.37 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !787
@__devstate_dts_ord_9 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !884
@__init___device_dts_ord_9 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_9 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !873
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@avail_queue = internal unnamed_addr global %struct.k_fifo* null, align 4, !dbg !925
@lines_queue = internal unnamed_addr global %struct.k_fifo* null, align 4, !dbg !1026
@completion_cb = internal unnamed_addr global i8 (i8*, i8)* null, align 4, !dbg !1066
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !1019
@uart_console_isr.cmd = internal unnamed_addr global %struct.console_input* null, align 4, !dbg !1074
@esc_state = internal global i32 0, align 4, !dbg !1093
@cur = internal unnamed_addr global i8 0, align 1, !dbg !1101
@end = internal unnamed_addr global i8 0, align 1, !dbg !1103
@ansi_val = internal unnamed_addr global i32 0, align 4, !dbg !1097
@ansi_val_2 = internal unnamed_addr global i32 0, align 4, !dbg !1099
@.str.52 = private unnamed_addr constant [6 x i8] c"\1B[%uD\00", align 1
@.str.1.51 = private unnamed_addr constant [6 x i8] c"\1B[%uC\00", align 1
@.str.2.49 = private unnamed_addr constant [4 x i8] c"\1B[s\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"\1B[u\00", align 1
@__devicehdl_dts_ord_25 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !776
@.str.53 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1105
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1384
@__devstate_dts_ord_25 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1354
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1340
@__init___device_dts_ord_25 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_25 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1282
@__devicehdl_dts_ord_20 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !774
@.str.1.54 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1386
@__devstate_dts_ord_20 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1358
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1356
@__init___device_dts_ord_20 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_20 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1296
@__devicehdl_dts_ord_72 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !772
@.str.2.55 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1399
@__devstate_dts_ord_72 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1362
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1360
@__init___device_dts_ord_72 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_72 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1305
@__devicehdl_dts_ord_23 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !770
@.str.3.56 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1401
@__devstate_dts_ord_23 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1366
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1364
@__init___device_dts_ord_23 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_23 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1314
@__devicehdl_dts_ord_73 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !768
@.str.4 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1403
@__devstate_dts_ord_73 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1370
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1368
@__init___device_dts_ord_73 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_73 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1320
@__devicehdl_dts_ord_74 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !766
@.str.5.57 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1405
@__devstate_dts_ord_74 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1374
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1372
@__init___device_dts_ord_74 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_74 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1326
@__devicehdl_dts_ord_75 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !764
@.str.6 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1407
@__devstate_dts_ord_75 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1378
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1376
@__init___device_dts_ord_75 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_75 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1332
@__devicehdl_dts_ord_76 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !762
@.str.7 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1409
@__devstate_dts_ord_76 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1382
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1380
@__init___device_dts_ord_76 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_76 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1338
@__devicehdl_dts_ord_47 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !782
@.str.63 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_47, void (%struct.device*)* @uart_stm32_irq_config_func_0 }, align 4, !dbg !1411
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get, i32 (%struct.device*, i8*, i32)* @uart_stm32_fifo_fill, i32 (%struct.device*, i8*, i32)* @uart_stm32_fifo_read, void (%struct.device*)* @uart_stm32_irq_tx_enable, void (%struct.device*)* @uart_stm32_irq_tx_disable, i32 (%struct.device*)* @uart_stm32_irq_tx_ready, void (%struct.device*)* @uart_stm32_irq_rx_enable, void (%struct.device*)* @uart_stm32_irq_rx_disable, i32 (%struct.device*)* @uart_stm32_irq_tx_complete, i32 (%struct.device*)* @uart_stm32_irq_rx_ready, void (%struct.device*)* @uart_stm32_irq_err_enable, void (%struct.device*)* @uart_stm32_irq_err_disable, i32 (%struct.device*)* @uart_stm32_irq_is_pending, i32 (%struct.device*)* @uart_stm32_irq_update, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* @uart_stm32_irq_callback_set }, align 4, !dbg !1663
@__devstate_dts_ord_47 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1609
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null, void (%struct.device*, i8*)* null, i8* null }, align 4, !dbg !1665
@__device_dts_ord_47 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.63, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_47, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_47, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1588
@__init___device_dts_ord_47 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_47 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1590
@__devicehdl_dts_ord_44 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !780
@.str.1.64 = private unnamed_addr constant [16 x i8] c"serial@40004400\00", align 1
@uart_stm32_cfg_1 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073759232 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_1, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_44, void (%struct.device*)* @uart_stm32_irq_config_func_1 }, align 4, !dbg !1674
@__devstate_dts_ord_44 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1611
@uart_stm32_data_1 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null, void (%struct.device*, i8*)* null, i8* null }, align 4, !dbg !1706
@__device_dts_ord_44 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.64, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_1 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_44, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_1 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_44, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1599
@__init___device_dts_ord_44 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_44 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1601
@__devicehdl_dts_ord_50 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !778
@.str.2.65 = private unnamed_addr constant [16 x i8] c"serial@40011400\00", align 1
@uart_stm32_cfg_2 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073812480 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_2, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_50, void (%struct.device*)* @uart_stm32_irq_config_func_2 }, align 4, !dbg !1708
@__devstate_dts_ord_50 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1613
@uart_stm32_data_2 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null, void (%struct.device*, i8*)* null, i8* null }, align 4, !dbg !1723
@__device_dts_ord_50 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2.65, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_2 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_50, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_2 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_50, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1605
@__init___device_dts_ord_50 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_50 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1607
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1615
@__pinctrl_dev_config__device_dts_ord_47 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_47, i32 0, i32 0), i8 1 }, align 4, !dbg !1623
@__pinctrl_states__device_dts_ord_47 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_47, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1646
@__pinctrl_state_pins_0__device_dts_ord_47 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1649
@uart_stm32_irq_config_func_0.__isr_uart_stm32_isr_irq_0 = internal global %struct._isr_list { i32 37, i32 0, i8* bitcast (void (%struct.device*)* @uart_stm32_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_47 to i8*) }, section ".intList", align 4, !dbg !1652
@__device_dts_ord_9 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.37, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_9, i8* null, i16* getelementptr inbounds ([14 x i16], [14 x i16]* @__devicehdl_dts_ord_9, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !857
@pclken_1 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 131072 }], align 4, !dbg !1693
@__pinctrl_dev_config__device_dts_ord_44 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_44, i32 0, i32 0), i8 1 }, align 4, !dbg !1695
@__pinctrl_states__device_dts_ord_44 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_44, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1697
@__pinctrl_state_pins_0__device_dts_ord_44 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 71, i32 512 }, %struct._thread_arch { i32 103, i32 0 }], align 4, !dbg !1699
@uart_stm32_irq_config_func_1.__isr_uart_stm32_isr_irq_1 = internal global %struct._isr_list { i32 38, i32 0, i8* bitcast (void (%struct.device*)* @uart_stm32_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_44 to i8*) }, section ".intList", align 4, !dbg !1701
@pclken_2 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 32 }], align 4, !dbg !1710
@__pinctrl_dev_config__device_dts_ord_50 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_50, i32 0, i32 0), i8 1 }, align 4, !dbg !1712
@__pinctrl_states__device_dts_ord_50 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_50, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1714
@__pinctrl_state_pins_0__device_dts_ord_50 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1224, i32 512 }, %struct._thread_arch { i32 1256, i32 0 }], align 4, !dbg !1716
@uart_stm32_irq_config_func_2.__isr_uart_stm32_isr_irq_2 = internal global %struct._isr_list { i32 71, i32 0, i8* bitcast (void (%struct.device*)* @uart_stm32_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_50 to i8*) }, section ".intList", align 4, !dbg !1718
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1725
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1834
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1836
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1832
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1803
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_25, %struct.device* @__device_dts_ord_20, %struct.device* @__device_dts_ord_72, %struct.device* @__device_dts_ord_23, %struct.device* @__device_dts_ord_73, %struct.device* @__device_dts_ord_74, %struct.device* @__device_dts_ord_75, %struct.device* @__device_dts_ord_76, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1838
@__device_dts_ord_25 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.53, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_25, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_25, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1280
@__device_dts_ord_20 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.54, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_20, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_20, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1294
@__device_dts_ord_72 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.55, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_72, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_72, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1303
@__device_dts_ord_23 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.56, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_23, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_23, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1312
@__device_dts_ord_73 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_73, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_73, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1318
@__device_dts_ord_74 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.57, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_74, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_74, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1324
@__device_dts_ord_75 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_75, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_75, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1330
@__device_dts_ord_76 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_76, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_76, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1336
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1928
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1970
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1973
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1979
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !1985
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2194
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2203
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2210
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2215
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.115 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.117, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.118, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.119, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.120, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.121, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.122, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.116, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.123, i32 0, i32 0)], align 4, !dbg !2241
@.str.117 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.118 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.119 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.120 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.121 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.122 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.116 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.123 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2353
@.str.8 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !2366
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2474
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2477
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2479
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2208
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2205
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2481
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2517
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2515
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2072
@.str.194 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1
@__init_statics_init_pre = internal constant %struct.init_entry { i32 (%struct.device*)* @statics_init, %struct.device* null }, section ".z_init_PRE_KERNEL_130_", align 4, !dbg !2520
@_k_heap_list_start = external dso_local global [0 x %struct.k_heap], align 4
@_k_heap_list_end = external dso_local global [0 x %struct.k_heap], align 4

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3211 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #25, !dbg !3215, !srcloc !3216
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #25, !dbg !3217, !srcloc !3218
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #25, !dbg !3219, !srcloc !3220
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #25, !dbg !3221, !srcloc !3222
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #25, !dbg !3223, !srcloc !3224
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #25, !dbg !3225, !srcloc !3226
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #25, !dbg !3227, !srcloc !3228
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #25, !dbg !3229, !srcloc !3230
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #25, !dbg !3231, !srcloc !3232
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #25, !dbg !3233, !srcloc !3234
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #25, !dbg !3235, !srcloc !3236
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #25, !dbg !3237, !srcloc !3238
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #25, !dbg !3239, !srcloc !3240
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #25, !dbg !3241, !srcloc !3242
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #25, !dbg !3243, !srcloc !3244
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #25, !dbg !3245, !srcloc !3246
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #25, !dbg !3247, !srcloc !3248
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #25, !dbg !3249, !srcloc !3250
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #25, !dbg !3251, !srcloc !3252
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #25, !dbg !3253, !srcloc !3254
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #25, !dbg !3255, !srcloc !3256
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #25, !dbg !3257, !srcloc !3258
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #25, !dbg !3259, !srcloc !3260
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #25, !dbg !3261, !srcloc !3262
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #25, !dbg !3263, !srcloc !3264
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #25, !dbg !3265, !srcloc !3266
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #25, !dbg !3267, !srcloc !3268
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #25, !dbg !3269, !srcloc !3272
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #25, !dbg !3273, !srcloc !3274
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #25, !dbg !3275, !srcloc !3276
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #25, !dbg !3277, !srcloc !3278
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #25, !dbg !3279, !srcloc !3280
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #25, !dbg !3281, !srcloc !3282
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #25, !dbg !3283, !srcloc !3284
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #25, !dbg !3285, !srcloc !3286
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #25, !dbg !3287, !srcloc !3288
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #25, !dbg !3289, !srcloc !3290
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #25, !dbg !3291, !srcloc !3292
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #25, !dbg !3293, !srcloc !3294
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #25, !dbg !3295, !srcloc !3296
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #25, !dbg !3297, !srcloc !3298
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #25, !dbg !3299, !srcloc !3300
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #25, !dbg !3301, !srcloc !3302
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #25, !dbg !3303, !srcloc !3304
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #25, !dbg !3305, !srcloc !3306
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #25, !dbg !3307, !srcloc !3308
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #25, !dbg !3309, !srcloc !3310
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #25, !dbg !3311, !srcloc !3312
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #25, !dbg !3313, !srcloc !3314
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #25, !dbg !3315, !srcloc !3316
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #25, !dbg !3317, !srcloc !3318
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #25, !dbg !3319, !srcloc !3320
  ret void, !dbg !3321
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @main() local_unnamed_addr #2 !dbg !3324 {
  tail call void @console_getline_init() #26, !dbg !3329
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i32 0, i32 0)) #26, !dbg !3330
  br label %1, !dbg !3331

1:                                                ; preds = %0, %1
  %2 = tail call i8* @console_getline() #26, !dbg !3332
  call void @llvm.dbg.value(metadata i8* %2, metadata !3327, metadata !DIExpression()), !dbg !3333
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), i8* noundef %2) #26, !dbg !3334
  %3 = tail call i32 @strlen(i8* noundef %2) #26, !dbg !3335
  %4 = add i32 %3, -1, !dbg !3336
  %5 = getelementptr inbounds i8, i8* %2, i32 %4, !dbg !3337
  %6 = load i8, i8* %5, align 1, !dbg !3337
  %7 = zext i8 %6 to i32, !dbg !3337
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2, i32 0, i32 0), i32 noundef %7) #26, !dbg !3338
  br label %1, !dbg !3331, !llvm.loop !3339
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #3

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !3341 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3343, metadata !DIExpression()), !dbg !3344
  ret i32 0, !dbg !3345
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !3346 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !3350, metadata !DIExpression()), !dbg !3351
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !3352
  ret void, !dbg !3353
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #5 !dbg !3354 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !3357
  ret i8* %1, !dbg !3358
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !3359 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3371, metadata !DIExpression()), !dbg !3380
  call void @llvm.dbg.value(metadata i8* %0, metadata !3370, metadata !DIExpression()), !dbg !3380
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #27, !dbg !3381
  ret void, !dbg !3383
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !3384 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3388, metadata !DIExpression()), !dbg !3390
  call void @llvm.dbg.value(metadata i8* %1, metadata !3389, metadata !DIExpression()), !dbg !3390
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3391
  %4 = tail call i32 %3(i32 noundef %0) #26, !dbg !3391
  ret i32 %4, !dbg !3392
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !3393 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3405, metadata !DIExpression()), !dbg !3406
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3402, metadata !DIExpression()), !dbg !3406
  call void @llvm.dbg.value(metadata i8* %1, metadata !3403, metadata !DIExpression()), !dbg !3406
  call void @llvm.dbg.value(metadata i8* %2, metadata !3404, metadata !DIExpression()), !dbg !3406
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #26, !dbg !3407
  ret void, !dbg !3408
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !3409 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3413, metadata !DIExpression()), !dbg !3416
  call void @llvm.dbg.value(metadata i32 %1, metadata !3414, metadata !DIExpression()), !dbg !3416
  call void @llvm.dbg.value(metadata i32 0, metadata !3415, metadata !DIExpression()), !dbg !3416
  %3 = icmp eq i32 %1, 0, !dbg !3417
  br i1 %3, label %13, label %4, !dbg !3420

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3415, metadata !DIExpression()), !dbg !3416
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3421
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !3423
  %8 = load i8, i8* %7, align 1, !dbg !3423
  %9 = zext i8 %8 to i32, !dbg !3423
  %10 = tail call i32 %6(i32 noundef %9) #26, !dbg !3421
  %11 = add nuw i32 %5, 1, !dbg !3424
  call void @llvm.dbg.value(metadata i32 %11, metadata !3415, metadata !DIExpression()), !dbg !3416
  %12 = icmp eq i32 %11, %1, !dbg !3417
  br i1 %12, label %13, label %4, !dbg !3420, !llvm.loop !3425

13:                                               ; preds = %4, %2
  ret void, !dbg !3427
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !3428 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3432, metadata !DIExpression()), !dbg !3434
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !3435
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !3435
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !3433, metadata !DIExpression()), !dbg !3436
  call void @llvm.va_start(i8* nonnull %3), !dbg !3437
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !3438
  %5 = load i32, i32* %4, align 4, !dbg !3438
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !3438
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #27, !dbg !3438
  call void @llvm.va_end(i8* nonnull %3), !dbg !3439
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !3440
  ret void, !dbg !3440
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #7

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #7

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !3441 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3445, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i32 %1, metadata !3446, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i8* %2, metadata !3447, metadata !DIExpression()), !dbg !3450
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !3451
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !3451
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !3448, metadata !DIExpression()), !dbg !3452
  call void @llvm.va_start(i8* nonnull %5), !dbg !3453
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !3454
  %7 = load i32, i32* %6, align 4, !dbg !3454
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !3454
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #27, !dbg !3454
  call void @llvm.dbg.value(metadata i32 %9, metadata !3449, metadata !DIExpression()), !dbg !3450
  call void @llvm.va_end(i8* nonnull %5), !dbg !3455
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !3456
  ret i32 %9, !dbg !3457
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !3458 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3465, metadata !DIExpression()), !dbg !3472
  call void @llvm.dbg.value(metadata i8* %0, metadata !3462, metadata !DIExpression()), !dbg !3472
  call void @llvm.dbg.value(metadata i32 %1, metadata !3463, metadata !DIExpression()), !dbg !3472
  call void @llvm.dbg.value(metadata i8* %2, metadata !3464, metadata !DIExpression()), !dbg !3472
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !3473
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #25, !dbg !3473
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !3466, metadata !DIExpression()), !dbg !3474
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !3475
  store i8* %0, i8** %7, align 4, !dbg !3475
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !3475
  store i32 %1, i32* %8, align 4, !dbg !3475
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !3475
  store i32 0, i32* %9, align 4, !dbg !3475
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #27, !dbg !3476
  %10 = load i32, i32* %9, align 4, !dbg !3477
  %11 = load i32, i32* %8, align 4, !dbg !3479
  %12 = icmp slt i32 %10, %11, !dbg !3480
  br i1 %12, label %13, label %15, !dbg !3481

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !3482
  store i8 0, i8* %14, align 1, !dbg !3484
  br label %15, !dbg !3485

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #25, !dbg !3486
  ret i32 %10, !dbg !3487
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #8 !dbg !3488 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3493, metadata !DIExpression()), !dbg !3495
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !3494, metadata !DIExpression()), !dbg !3495
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !3496
  %4 = load i8*, i8** %3, align 4, !dbg !3496
  %5 = icmp eq i8* %4, null, !dbg !3498
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !3499
  br i1 %5, label %12, label %8, !dbg !3500

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !3501
  %10 = load i32, i32* %9, align 4, !dbg !3501
  %11 = icmp slt i32 %7, %10, !dbg !3502
  br i1 %11, label %15, label %12, !dbg !3503

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !3504
  %14 = add nsw i32 %7, 1, !dbg !3506
  store i32 %14, i32* %13, align 4, !dbg !3506
  br label %25, !dbg !3507

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !3508
  %17 = icmp eq i32 %7, %16, !dbg !3510
  br i1 %17, label %18, label %21, !dbg !3511

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !3512
  store i32 %19, i32* %6, align 4, !dbg !3512
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3514
  store i8 0, i8* %20, align 1, !dbg !3515
  br label %25, !dbg !3516

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !3517
  %23 = add nsw i32 %7, 1, !dbg !3519
  store i32 %23, i32* %6, align 4, !dbg !3519
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3520
  store i8 %22, i8* %24, align 1, !dbg !3521
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !3522
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #2 !dbg !3523 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !3533, metadata !DIExpression()), !dbg !3537
  call void @llvm.dbg.value(metadata i8* %1, metadata !3534, metadata !DIExpression()), !dbg !3537
  call void @llvm.dbg.value(metadata i8* %2, metadata !3535, metadata !DIExpression()), !dbg !3537
  call void @llvm.dbg.value(metadata i8* %3, metadata !3536, metadata !DIExpression()), !dbg !3537
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #26, !dbg !3538
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #28, !dbg !3539
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #27, !dbg !3540
  unreachable, !dbg !3541
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #9 !dbg !3542 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #28, !dbg !3646
  ret %struct.k_thread* %1, !dbg !3647
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3648 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3653, metadata !DIExpression()), !dbg !3654
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3655, !srcloc !3657
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #26, !dbg !3658
  ret void, !dbg !3659
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #9 !dbg !3660 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3661, !srcloc !3663
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #26, !dbg !3664
  ret %struct.k_thread* %1, !dbg !3665
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define dso_local void @sys_heap_free(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #10 !dbg !3666 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3677, metadata !DIExpression()), !dbg !3681
  call void @llvm.dbg.value(metadata i8* %1, metadata !3678, metadata !DIExpression()), !dbg !3681
  %3 = icmp eq i8* %1, null, !dbg !3682
  br i1 %3, label %8, label %4, !dbg !3684

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3685
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !3685
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !3679, metadata !DIExpression()), !dbg !3681
  %7 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #27, !dbg !3686, !range !3687
  call void @llvm.dbg.value(metadata i32 %7, metadata !3680, metadata !DIExpression()), !dbg !3681
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %7, i1 noundef zeroext false) #27, !dbg !3688
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #27, !dbg !3689
  br label %8

8:                                                ; preds = %2, %4
  ret void, !dbg !3690
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !3691 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3695, metadata !DIExpression()), !dbg !3699
  call void @llvm.dbg.value(metadata i8* %1, metadata !3696, metadata !DIExpression()), !dbg !3699
  call void @llvm.dbg.value(metadata i8* %1, metadata !3697, metadata !DIExpression()), !dbg !3699
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !3700
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !3698, metadata !DIExpression()), !dbg !3699
  %4 = getelementptr inbounds i8, i8* %1, i32 -4, !dbg !3701
  %5 = ptrtoint i8* %4 to i32, !dbg !3702
  %6 = ptrtoint %struct.chunk_unit_t* %3 to i32, !dbg !3702
  %7 = sub i32 %5, %6, !dbg !3702
  %8 = lshr i32 %7, 3, !dbg !3703
  ret i32 %8, !dbg !3704
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #8 !dbg !3705 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3709, metadata !DIExpression()), !dbg !3714
  call void @llvm.dbg.value(metadata i32 %1, metadata !3710, metadata !DIExpression()), !dbg !3714
  call void @llvm.dbg.value(metadata i1 %2, metadata !3711, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3714
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !3715
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !3712, metadata !DIExpression()), !dbg !3714
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3713, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3714
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !3716
  %6 = bitcast i8* %5 to i16*, !dbg !3716
  %7 = load i16, i16* %6, align 2, !dbg !3716
  %8 = and i16 %7, -2, !dbg !3720
  %9 = zext i1 %2 to i16, !dbg !3720
  %10 = or i16 %8, %9, !dbg !3720
  store i16 %10, i16* %6, align 2, !dbg !3716
  ret void, !dbg !3721
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3722 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3726, metadata !DIExpression()), !dbg !3728
  call void @llvm.dbg.value(metadata i32 %1, metadata !3727, metadata !DIExpression()), !dbg !3728
  %3 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !3729
  %4 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %3) #27, !dbg !3731
  br i1 %4, label %7, label %5, !dbg !3732

5:                                                ; preds = %2
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %3) #27, !dbg !3733
  %6 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !3735
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #27, !dbg !3736
  br label %7, !dbg !3737

7:                                                ; preds = %5, %2
  %8 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !3738, !range !3740
  %9 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %8) #27, !dbg !3741
  br i1 %9, label %13, label %10, !dbg !3742

10:                                               ; preds = %7
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %8) #27, !dbg !3743
  %11 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !3745, !range !3740
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %11, i32 noundef %1) #27, !dbg !3746
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !3747
  call void @llvm.dbg.value(metadata i32 %12, metadata !3727, metadata !DIExpression()), !dbg !3728
  br label %13, !dbg !3748

13:                                               ; preds = %10, %7
  %14 = phi i32 [ %1, %7 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !3727, metadata !DIExpression()), !dbg !3728
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %14) #27, !dbg !3749
  ret void, !dbg !3750
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3751 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3755, metadata !DIExpression()), !dbg !3757
  call void @llvm.dbg.value(metadata i32 %1, metadata !3756, metadata !DIExpression()), !dbg !3757
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !3758
  %4 = add i32 %3, %1, !dbg !3759
  ret i32 %4, !dbg !3760
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3761 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3765, metadata !DIExpression()), !dbg !3767
  call void @llvm.dbg.value(metadata i32 %1, metadata !3766, metadata !DIExpression()), !dbg !3767
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #27, !dbg !3768
  %4 = and i32 %3, 1, !dbg !3769
  %5 = icmp ne i32 %4, 0, !dbg !3768
  ret i1 %5, !dbg !3770
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3771 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3773, metadata !DIExpression()), !dbg !3778
  call void @llvm.dbg.value(metadata i32 %1, metadata !3774, metadata !DIExpression()), !dbg !3778
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !3779, !range !3780
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #27, !dbg !3781
  call void @llvm.dbg.value(metadata i32 %4, metadata !3775, metadata !DIExpression()), !dbg !3782
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #27, !dbg !3783
  ret void, !dbg !3784
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !3785 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3789, metadata !DIExpression()), !dbg !3794
  call void @llvm.dbg.value(metadata i32 %1, metadata !3790, metadata !DIExpression()), !dbg !3794
  call void @llvm.dbg.value(metadata i32 %2, metadata !3791, metadata !DIExpression()), !dbg !3794
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !3795
  %5 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %2) #27, !dbg !3796
  %6 = add i32 %5, %4, !dbg !3797
  call void @llvm.dbg.value(metadata i32 %6, metadata !3792, metadata !DIExpression()), !dbg !3794
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #27, !dbg !3798
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #27, !dbg !3799
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #27, !dbg !3800
  ret void, !dbg !3801
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3802 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3804, metadata !DIExpression()), !dbg !3806
  call void @llvm.dbg.value(metadata i32 %1, metadata !3805, metadata !DIExpression()), !dbg !3806
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #27, !dbg !3807
  %4 = sub i32 %1, %3, !dbg !3808
  ret i32 %4, !dbg !3809
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3810 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3812, metadata !DIExpression()), !dbg !3817
  call void @llvm.dbg.value(metadata i32 %1, metadata !3813, metadata !DIExpression()), !dbg !3817
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !3818, !range !3780
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #27, !dbg !3819
  call void @llvm.dbg.value(metadata i32 %4, metadata !3814, metadata !DIExpression()), !dbg !3820
  tail call fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #27, !dbg !3821
  ret void, !dbg !3822
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3823 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3827, metadata !DIExpression()), !dbg !3829
  call void @llvm.dbg.value(metadata i32 %1, metadata !3828, metadata !DIExpression()), !dbg !3829
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #27, !dbg !3830
  %4 = lshr i32 %3, 1, !dbg !3831
  ret i32 %4, !dbg !3832
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #9 !dbg !3833 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3837, metadata !DIExpression()), !dbg !3840
  call void @llvm.dbg.value(metadata i32 %1, metadata !3838, metadata !DIExpression()), !dbg !3840
  %3 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %0) #27, !dbg !3841
  %4 = add i32 %1, 1, !dbg !3842
  %5 = sub i32 %4, %3, !dbg !3843
  call void @llvm.dbg.value(metadata i32 %5, metadata !3839, metadata !DIExpression()), !dbg !3840
  %6 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 false), !dbg !3844, !range !3845
  %7 = sub nsw i32 31, %6, !dbg !3846
  ret i32 %7, !dbg !3847
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !3848 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3852, metadata !DIExpression()), !dbg !3861
  call void @llvm.dbg.value(metadata i32 %1, metadata !3853, metadata !DIExpression()), !dbg !3861
  call void @llvm.dbg.value(metadata i32 %2, metadata !3854, metadata !DIExpression()), !dbg !3861
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %2), metadata !3855, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !3861
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, i32 0, !dbg !3862
  %5 = load i32, i32* %4, align 4, !dbg !3862
  %6 = icmp eq i32 %5, 0, !dbg !3863
  br i1 %6, label %7, label %12, !dbg !3864

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !3865
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !3867
  %10 = load i32, i32* %9, align 4, !dbg !3868
  %11 = or i32 %10, %8, !dbg !3868
  store i32 %11, i32* %9, align 4, !dbg !3868
  store i32 %1, i32* %4, align 4, !dbg !3869
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #27, !dbg !3870
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #27, !dbg !3871
  br label %14, !dbg !3872

12:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %5, metadata !3857, metadata !DIExpression()), !dbg !3873
  %13 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5) #27, !dbg !3874, !range !3875
  call void @llvm.dbg.value(metadata i32 %13, metadata !3860, metadata !DIExpression()), !dbg !3873
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %13) #27, !dbg !3876
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %5) #27, !dbg !3877
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %13, i32 noundef %1) #27, !dbg !3878
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5, i32 noundef %1) #27, !dbg !3879
  br label %14

14:                                               ; preds = %12, %7
  ret void, !dbg !3880
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3881 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3883, metadata !DIExpression()), !dbg !3886
  call void @llvm.dbg.value(metadata i32 %1, metadata !3884, metadata !DIExpression()), !dbg !3886
  call void @llvm.dbg.value(metadata i32 %2, metadata !3885, metadata !DIExpression()), !dbg !3886
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2, i32 noundef %2) #27, !dbg !3887
  ret void, !dbg !3888
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3889 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3891, metadata !DIExpression()), !dbg !3894
  call void @llvm.dbg.value(metadata i32 %1, metadata !3892, metadata !DIExpression()), !dbg !3894
  call void @llvm.dbg.value(metadata i32 %2, metadata !3893, metadata !DIExpression()), !dbg !3894
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3, i32 noundef %2) #27, !dbg !3895
  ret void, !dbg !3896
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !3897 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3899, metadata !DIExpression()), !dbg !3901
  call void @llvm.dbg.value(metadata i32 %1, metadata !3900, metadata !DIExpression()), !dbg !3901
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #27, !dbg !3902
  ret i32 %3, !dbg !3903
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #5 !dbg !3904 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3908, metadata !DIExpression()), !dbg !3913
  call void @llvm.dbg.value(metadata i32 %1, metadata !3909, metadata !DIExpression()), !dbg !3913
  call void @llvm.dbg.value(metadata i32 %2, metadata !3910, metadata !DIExpression()), !dbg !3913
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !3914
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !3911, metadata !DIExpression()), !dbg !3913
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3912, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3913
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3912, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3913
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !3915
  call void @llvm.dbg.value(metadata i8* %5, metadata !3912, metadata !DIExpression()), !dbg !3913
  %6 = bitcast i8* %5 to i16*, !dbg !3916
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !3919
  %8 = load i16, i16* %7, align 2, !dbg !3919
  %9 = zext i16 %8 to i32, !dbg !3919
  ret i32 %9, !dbg !3920
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef readnone %0) unnamed_addr #11 !dbg !3921 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3925, metadata !DIExpression()), !dbg !3926
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !3927
  ret %struct.chunk_unit_t* %2, !dbg !3928
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @chunk_set(%struct.z_heap* noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #4 !dbg !3929 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3933, metadata !DIExpression()), !dbg !3939
  call void @llvm.dbg.value(metadata i32 %1, metadata !3934, metadata !DIExpression()), !dbg !3939
  call void @llvm.dbg.value(metadata i32 %2, metadata !3935, metadata !DIExpression()), !dbg !3939
  call void @llvm.dbg.value(metadata i32 %3, metadata !3936, metadata !DIExpression()), !dbg !3939
  %5 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !3940
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %5, metadata !3937, metadata !DIExpression()), !dbg !3939
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %5, i32 %1), metadata !3938, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3939
  %6 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %5, i32 %1, i32 0, i32 0, !dbg !3941
  call void @llvm.dbg.value(metadata i8* %6, metadata !3938, metadata !DIExpression()), !dbg !3939
  %7 = trunc i32 %3 to i16, !dbg !3942
  %8 = bitcast i8* %6 to i16*, !dbg !3945
  %9 = getelementptr inbounds i16, i16* %8, i32 %2, !dbg !3946
  store i16 %7, i16* %9, align 2, !dbg !3947
  ret void, !dbg !3948
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @min_chunk_size(%struct.z_heap* nocapture noundef readnone %0) unnamed_addr #11 !dbg !3949 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3953, metadata !DIExpression()), !dbg !3954
  %2 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %0, i32 noundef 1) #27, !dbg !3955
  ret i32 %2, !dbg !3956
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bytes_to_chunksz(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !3957 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3961, metadata !DIExpression()), !dbg !3963
  call void @llvm.dbg.value(metadata i32 %1, metadata !3962, metadata !DIExpression()), !dbg !3963
  %3 = add i32 %1, 4, !dbg !3964
  %4 = tail call fastcc i32 @chunksz(i32 noundef %3) #27, !dbg !3965
  ret i32 %4, !dbg !3966
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz(i32 noundef %0) unnamed_addr #11 !dbg !3967 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3971, metadata !DIExpression()), !dbg !3972
  %2 = add i32 %0, 7, !dbg !3973
  %3 = lshr i32 %2, 3, !dbg !3974
  ret i32 %3, !dbg !3975
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3976 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3980, metadata !DIExpression()), !dbg !3983
  call void @llvm.dbg.value(metadata i32 %1, metadata !3981, metadata !DIExpression()), !dbg !3983
  call void @llvm.dbg.value(metadata i32 %2, metadata !3982, metadata !DIExpression()), !dbg !3983
  %4 = shl i32 %2, 1, !dbg !3984
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1, i32 noundef %4) #27, !dbg !3985
  ret void, !dbg !3986
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3987 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3989, metadata !DIExpression()), !dbg !3992
  call void @llvm.dbg.value(metadata i32 %1, metadata !3990, metadata !DIExpression()), !dbg !3992
  call void @llvm.dbg.value(metadata i32 %2, metadata !3991, metadata !DIExpression()), !dbg !3992
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef %2) #27, !dbg !3993
  ret void, !dbg !3994
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !3995 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3997, metadata !DIExpression()), !dbg !4005
  call void @llvm.dbg.value(metadata i32 %1, metadata !3998, metadata !DIExpression()), !dbg !4005
  call void @llvm.dbg.value(metadata i32 %2, metadata !3999, metadata !DIExpression()), !dbg !4005
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, !dbg !4006
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %4, metadata !4000, metadata !DIExpression()), !dbg !4005
  %5 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !4007
  %6 = icmp eq i32 %5, %1, !dbg !4008
  br i1 %6, label %7, label %14, !dbg !4009

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !4010
  %9 = xor i32 %8, -1, !dbg !4012
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4013
  %11 = load i32, i32* %10, align 4, !dbg !4014
  %12 = and i32 %11, %9, !dbg !4014
  store i32 %12, i32* %10, align 4, !dbg !4014
  %13 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !4015
  store i32 0, i32* %13, align 4, !dbg !4016
  br label %17, !dbg !4017

14:                                               ; preds = %3
  %15 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !4018
  call void @llvm.dbg.value(metadata i32 %15, metadata !4001, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i32 %5, metadata !4004, metadata !DIExpression()), !dbg !4019
  %16 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !4020
  store i32 %5, i32* %16, align 4, !dbg !4021
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %15, i32 noundef %5) #27, !dbg !4022
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %5, i32 noundef %15) #27, !dbg !4023
  br label %17

17:                                               ; preds = %14, %7
  ret void, !dbg !4024
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4025 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4027, metadata !DIExpression()), !dbg !4029
  call void @llvm.dbg.value(metadata i32 %1, metadata !4028, metadata !DIExpression()), !dbg !4029
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #27, !dbg !4030
  ret i32 %3, !dbg !4031
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @sys_heap_usable_size(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #5 !dbg !4032 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4036, metadata !DIExpression()), !dbg !4043
  call void @llvm.dbg.value(metadata i8* %1, metadata !4037, metadata !DIExpression()), !dbg !4043
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4044
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !4044
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !4038, metadata !DIExpression()), !dbg !4043
  %5 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %4, i8* noundef %1) #27, !dbg !4045
  call void @llvm.dbg.value(metadata i32 %5, metadata !4039, metadata !DIExpression()), !dbg !4043
  %6 = ptrtoint i8* %1 to i32, !dbg !4046
  call void @llvm.dbg.value(metadata i32 %6, metadata !4040, metadata !DIExpression()), !dbg !4043
  %7 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %4) #27, !dbg !4047
  %8 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %7, i32 %5, !dbg !4047
  %9 = ptrtoint %struct.chunk_unit_t* %8 to i32, !dbg !4048
  call void @llvm.dbg.value(metadata i32 %9, metadata !4041, metadata !DIExpression()), !dbg !4043
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %5) #27, !dbg !4049
  %11 = shl i32 %10, 3, !dbg !4050
  call void @llvm.dbg.value(metadata i32 %11, metadata !4042, metadata !DIExpression()), !dbg !4043
  %12 = sub i32 %9, %6, !dbg !4051
  %13 = add i32 %12, %11, !dbg !4052
  ret i32 %13, !dbg !4053
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 !dbg !4054 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4058, metadata !DIExpression()), !dbg !4064
  call void @llvm.dbg.value(metadata i32 %1, metadata !4059, metadata !DIExpression()), !dbg !4064
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4065
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !4065
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !4060, metadata !DIExpression()), !dbg !4064
  %5 = icmp eq i32 %1, 0, !dbg !4066
  br i1 %5, label %19, label %6, !dbg !4068

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %4, i32 noundef %1) #27, !dbg !4069
  br i1 %7, label %19, label %8, !dbg !4070

8:                                                ; preds = %6
  %9 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %4, i32 noundef %1) #27, !dbg !4071, !range !3687
  call void @llvm.dbg.value(metadata i32 %9, metadata !4062, metadata !DIExpression()), !dbg !4064
  %10 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %4, i32 noundef %9) #27, !dbg !4072
  call void @llvm.dbg.value(metadata i32 %10, metadata !4063, metadata !DIExpression()), !dbg !4064
  %11 = icmp eq i32 %10, 0, !dbg !4073
  br i1 %11, label %19, label %12, !dbg !4075

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #27, !dbg !4076
  %14 = icmp ugt i32 %13, %9, !dbg !4078
  br i1 %14, label %15, label %17, !dbg !4079

15:                                               ; preds = %12
  %16 = add i32 %10, %9, !dbg !4080
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %4, i32 noundef %10, i32 noundef %16) #27, !dbg !4082
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %4, i32 noundef %16) #27, !dbg !4083
  br label %17, !dbg !4084

17:                                               ; preds = %15, %12
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %4, i32 noundef %10, i1 noundef zeroext true) #27, !dbg !4085
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %4, i32 noundef %10) #27, !dbg !4086
  call void @llvm.dbg.value(metadata i8* %18, metadata !4061, metadata !DIExpression()), !dbg !4064
  br label %19, !dbg !4087

19:                                               ; preds = %17, %8, %2, %6
  %20 = phi i8* [ null, %6 ], [ null, %2 ], [ %18, %17 ], [ null, %8 ], !dbg !4064
  ret i8* %20, !dbg !4088
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @size_too_big(%struct.z_heap* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4089 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4093, metadata !DIExpression()), !dbg !4095
  call void @llvm.dbg.value(metadata i32 %1, metadata !4094, metadata !DIExpression()), !dbg !4095
  %3 = lshr i32 %1, 3, !dbg !4096
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !4097
  %5 = load i32, i32* %4, align 4, !dbg !4097
  %6 = icmp uge i32 %3, %5, !dbg !4098
  ret i1 %6, !dbg !4099
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @alloc_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !4100 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4104, metadata !DIExpression()), !dbg !4119
  call void @llvm.dbg.value(metadata i32 %1, metadata !4105, metadata !DIExpression()), !dbg !4119
  %3 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !4120
  call void @llvm.dbg.value(metadata i32 %3, metadata !4106, metadata !DIExpression()), !dbg !4119
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %3), metadata !4107, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !4119
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %3, i32 0, !dbg !4121
  %5 = load i32, i32* %4, align 4, !dbg !4121
  %6 = icmp eq i32 %5, 0, !dbg !4122
  br i1 %6, label %19, label %7, !dbg !4123

7:                                                ; preds = %2, %13
  %8 = phi i32 [ %14, %13 ], [ %5, %2 ], !dbg !4124
  %9 = phi i32 [ %15, %13 ], [ 3, %2 ], !dbg !4125
  call void @llvm.dbg.value(metadata i32 %9, metadata !4111, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i32 %8, metadata !4112, metadata !DIExpression()), !dbg !4126
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #27, !dbg !4127
  %11 = icmp ult i32 %10, %1, !dbg !4129
  br i1 %11, label %13, label %12, !dbg !4130

12:                                               ; preds = %7
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %8, i32 noundef %3) #27, !dbg !4131
  br label %30

13:                                               ; preds = %7
  %14 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #27, !dbg !4133
  store i32 %14, i32* %4, align 4, !dbg !4134
  %15 = add nsw i32 %9, -1, !dbg !4135
  call void @llvm.dbg.value(metadata i32 %15, metadata !4111, metadata !DIExpression()), !dbg !4125
  %16 = icmp eq i32 %15, 0, !dbg !4135
  %17 = icmp eq i32 %14, %5
  %18 = select i1 %16, i1 true, i1 %17, !dbg !4136
  br i1 %18, label %19, label %7, !dbg !4136, !llvm.loop !4137

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4140
  %21 = load i32, i32* %20, align 4, !dbg !4140
  %22 = add nsw i32 %3, 1, !dbg !4141
  %23 = shl nsw i32 -1, %22, !dbg !4141
  %24 = and i32 %21, %23, !dbg !4142
  call void @llvm.dbg.value(metadata i32 %24, metadata !4114, metadata !DIExpression()), !dbg !4119
  %25 = icmp eq i32 %24, 0, !dbg !4143
  br i1 %25, label %30, label %26, !dbg !4144

26:                                               ; preds = %19
  %27 = tail call i32 @llvm.cttz.i32(i32 %24, i1 true), !dbg !4145, !range !3845
  call void @llvm.dbg.value(metadata i32 %27, metadata !4115, metadata !DIExpression()), !dbg !4146
  %28 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %27, i32 0, !dbg !4147
  %29 = load i32, i32* %28, align 4, !dbg !4147
  call void @llvm.dbg.value(metadata i32 %29, metadata !4118, metadata !DIExpression()), !dbg !4146
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %29, i32 noundef %27) #27, !dbg !4148
  br label %30

30:                                               ; preds = %12, %26, %19
  %31 = phi i32 [ %29, %26 ], [ 0, %19 ], [ %8, %12 ], !dbg !4119
  ret i32 %31, !dbg !4149
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @split_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !4150 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4152, metadata !DIExpression()), !dbg !4158
  call void @llvm.dbg.value(metadata i32 %1, metadata !4153, metadata !DIExpression()), !dbg !4158
  call void @llvm.dbg.value(metadata i32 %2, metadata !4154, metadata !DIExpression()), !dbg !4158
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !4159
  call void @llvm.dbg.value(metadata i32 %4, metadata !4155, metadata !DIExpression()), !dbg !4158
  %5 = sub i32 %2, %1, !dbg !4160
  call void @llvm.dbg.value(metadata i32 %5, metadata !4156, metadata !DIExpression()), !dbg !4158
  %6 = sub i32 %4, %5, !dbg !4161
  call void @llvm.dbg.value(metadata i32 %6, metadata !4157, metadata !DIExpression()), !dbg !4158
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %5) #27, !dbg !4162
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %6) #27, !dbg !4163
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %5) #27, !dbg !4164
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #27, !dbg !4165
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #27, !dbg !4166
  ret void, !dbg !4167
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @chunk_mem(%struct.z_heap* noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4168 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4172, metadata !DIExpression()), !dbg !4176
  call void @llvm.dbg.value(metadata i32 %1, metadata !4173, metadata !DIExpression()), !dbg !4176
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !4177
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !4174, metadata !DIExpression()), !dbg !4176
  %4 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %3, i32 %1, i32 0, i32 4, !dbg !4178
  call void @llvm.dbg.value(metadata i8* %4, metadata !4175, metadata !DIExpression()), !dbg !4176
  ret i8* %4, !dbg !4179
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #3

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_aligned_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !4180 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4184, metadata !DIExpression()), !dbg !4196
  call void @llvm.dbg.value(metadata i32 %1, metadata !4185, metadata !DIExpression()), !dbg !4196
  call void @llvm.dbg.value(metadata i32 %2, metadata !4186, metadata !DIExpression()), !dbg !4196
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4197
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !4197
  call void @llvm.dbg.value(metadata %struct.z_heap* %5, metadata !4187, metadata !DIExpression()), !dbg !4196
  %6 = sub i32 0, %1, !dbg !4198
  %7 = and i32 %6, %1, !dbg !4199
  call void @llvm.dbg.value(metadata i32 %7, metadata !4189, metadata !DIExpression()), !dbg !4196
  %8 = icmp eq i32 %7, %1, !dbg !4200
  br i1 %8, label %13, label %9, !dbg !4202

9:                                                ; preds = %3
  %10 = sub i32 %1, %7, !dbg !4203
  call void @llvm.dbg.value(metadata i32 %10, metadata !4185, metadata !DIExpression()), !dbg !4196
  %11 = icmp ult i32 %7, 4, !dbg !4205
  %12 = select i1 %11, i32 %7, i32 4, !dbg !4205
  br label %17, !dbg !4205

13:                                               ; preds = %3
  %14 = icmp ult i32 %1, 5, !dbg !4206
  br i1 %14, label %15, label %17, !dbg !4209

15:                                               ; preds = %13
  %16 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2) #27, !dbg !4210
  br label %57, !dbg !4212

17:                                               ; preds = %9, %13
  %18 = phi i32 [ 0, %13 ], [ %7, %9 ], !dbg !4196
  %19 = phi i32 [ 4, %13 ], [ %12, %9 ], !dbg !4213
  %20 = phi i32 [ %1, %13 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !4185, metadata !DIExpression()), !dbg !4196
  call void @llvm.dbg.value(metadata i32 %19, metadata !4188, metadata !DIExpression()), !dbg !4196
  call void @llvm.dbg.value(metadata i32 %18, metadata !4189, metadata !DIExpression()), !dbg !4196
  %21 = icmp eq i32 %2, 0, !dbg !4214
  br i1 %21, label %57, label %22, !dbg !4216

22:                                               ; preds = %17
  %23 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %5, i32 noundef %2) #27, !dbg !4217
  br i1 %23, label %57, label %24, !dbg !4218

24:                                               ; preds = %22
  %25 = sub i32 %2, %19, !dbg !4219
  %26 = add i32 %25, %20, !dbg !4220
  %27 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %5, i32 noundef %26) #27, !dbg !4221, !range !3687
  call void @llvm.dbg.value(metadata i32 %27, metadata !4190, metadata !DIExpression()), !dbg !4196
  %28 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %5, i32 noundef %27) #27, !dbg !4222
  call void @llvm.dbg.value(metadata i32 %28, metadata !4191, metadata !DIExpression()), !dbg !4196
  %29 = icmp eq i32 %28, 0, !dbg !4223
  br i1 %29, label %57, label %30, !dbg !4225

30:                                               ; preds = %24
  %31 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %5, i32 noundef %28) #27, !dbg !4226
  call void @llvm.dbg.value(metadata i8* %31, metadata !4192, metadata !DIExpression()), !dbg !4196
  %32 = getelementptr inbounds i8, i8* %31, i32 %18, !dbg !4227
  %33 = ptrtoint i8* %32 to i32, !dbg !4227
  %34 = add i32 %20, -1, !dbg !4227
  %35 = add i32 %34, %33, !dbg !4227
  %36 = sub i32 0, %20, !dbg !4227
  %37 = and i32 %35, %36, !dbg !4227
  %38 = inttoptr i32 %37 to i8*, !dbg !4228
  %39 = sub i32 0, %18, !dbg !4229
  %40 = getelementptr inbounds i8, i8* %38, i32 %39, !dbg !4229
  call void @llvm.dbg.value(metadata i8* %40, metadata !4192, metadata !DIExpression()), !dbg !4196
  %41 = getelementptr inbounds i8, i8* %40, i32 %2, !dbg !4230
  %42 = ptrtoint i8* %41 to i32, !dbg !4230
  %43 = add i32 %42, 7, !dbg !4230
  %44 = and i32 %43, -8, !dbg !4230
  call void @llvm.dbg.value(metadata i32 %44, metadata !4193, metadata !DIExpression()), !dbg !4196
  %45 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %5, i8* noundef %40) #27, !dbg !4231
  call void @llvm.dbg.value(metadata i32 %45, metadata !4194, metadata !DIExpression()), !dbg !4196
  %46 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %5) #27, !dbg !4232
  %47 = ptrtoint %struct.chunk_unit_t* %46 to i32, !dbg !4233
  %48 = sub i32 %44, %47, !dbg !4233
  %49 = ashr exact i32 %48, 3, !dbg !4233
  call void @llvm.dbg.value(metadata i32 %49, metadata !4195, metadata !DIExpression()), !dbg !4196
  %50 = icmp ugt i32 %45, %28, !dbg !4234
  br i1 %50, label %51, label %52, !dbg !4236

51:                                               ; preds = %30
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %28, i32 noundef %45) #27, !dbg !4237
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %28) #27, !dbg !4239
  br label %52, !dbg !4240

52:                                               ; preds = %51, %30
  %53 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %5, i32 noundef %45) #27, !dbg !4241
  %54 = icmp ugt i32 %53, %49, !dbg !4243
  br i1 %54, label %55, label %56, !dbg !4244

55:                                               ; preds = %52
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %45, i32 noundef %49) #27, !dbg !4245
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %49) #27, !dbg !4247
  br label %56, !dbg !4248

56:                                               ; preds = %55, %52
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %5, i32 noundef %45, i1 noundef zeroext true) #27, !dbg !4249
  br label %57

57:                                               ; preds = %56, %24, %17, %22, %15
  %58 = phi i8* [ %16, %15 ], [ null, %22 ], [ null, %17 ], [ %40, %56 ], [ null, %24 ], !dbg !4196
  ret i8* %58, !dbg !4250
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_realloc(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !4251 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4255, metadata !DIExpression()), !dbg !4274
  call void @llvm.dbg.value(metadata i8* %1, metadata !4256, metadata !DIExpression()), !dbg !4274
  call void @llvm.dbg.value(metadata i32 %2, metadata !4257, metadata !DIExpression()), !dbg !4274
  call void @llvm.dbg.value(metadata i32 %3, metadata !4258, metadata !DIExpression()), !dbg !4274
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4275
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !4275
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !4259, metadata !DIExpression()), !dbg !4274
  %7 = icmp eq i8* %1, null, !dbg !4276
  br i1 %7, label %8, label %10, !dbg !4278

8:                                                ; preds = %4
  %9 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #27, !dbg !4279
  br label %59, !dbg !4281

10:                                               ; preds = %4
  %11 = icmp eq i32 %3, 0, !dbg !4282
  br i1 %11, label %12, label %13, !dbg !4284

12:                                               ; preds = %10
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #27, !dbg !4285
  br label %59, !dbg !4287

13:                                               ; preds = %10
  %14 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %6, i32 noundef %3) #27, !dbg !4288
  br i1 %14, label %59, label %15, !dbg !4290

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #27, !dbg !4291, !range !3687
  call void @llvm.dbg.value(metadata i32 %16, metadata !4260, metadata !DIExpression()), !dbg !4274
  %17 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %16) #27, !dbg !4292
  call void @llvm.dbg.value(metadata i32 %17, metadata !4261, metadata !DIExpression()), !dbg !4274
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %6, i32 noundef %16) #27, !dbg !4293
  %19 = ptrtoint i8* %1 to i32, !dbg !4294
  %20 = ptrtoint i8* %18 to i32, !dbg !4294
  %21 = sub i32 %19, %20, !dbg !4294
  call void @llvm.dbg.value(metadata i32 %21, metadata !4262, metadata !DIExpression()), !dbg !4274
  %22 = add i32 %21, %3, !dbg !4295
  %23 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %6, i32 noundef %22) #27, !dbg !4296
  call void @llvm.dbg.value(metadata i32 %23, metadata !4263, metadata !DIExpression()), !dbg !4274
  %24 = icmp eq i32 %2, 0, !dbg !4297
  br i1 %24, label %29, label %25, !dbg !4298

25:                                               ; preds = %15
  %26 = add i32 %2, -1, !dbg !4299
  %27 = and i32 %26, %19, !dbg !4300
  %28 = icmp eq i32 %27, 0, !dbg !4300
  br i1 %28, label %29, label %49, !dbg !4301

29:                                               ; preds = %25, %15
  %30 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #27, !dbg !4302
  %31 = icmp eq i32 %23, %30, !dbg !4303
  br i1 %31, label %59, label %32, !dbg !4304

32:                                               ; preds = %29
  %33 = icmp ult i32 %23, %30, !dbg !4305
  br i1 %33, label %34, label %36, !dbg !4306

34:                                               ; preds = %32
  %35 = add i32 %23, %16, !dbg !4307
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %35) #27, !dbg !4309
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #27, !dbg !4310
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %35) #27, !dbg !4311
  br label %59, !dbg !4312

36:                                               ; preds = %32
  %37 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %17) #27, !dbg !4313
  br i1 %37, label %49, label %38, !dbg !4314

38:                                               ; preds = %36
  %39 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #27, !dbg !4315
  %40 = add i32 %39, %30, !dbg !4316
  %41 = icmp ult i32 %40, %23, !dbg !4317
  br i1 %41, label %49, label %42, !dbg !4318

42:                                               ; preds = %38
  %43 = sub i32 %23, %30, !dbg !4319
  call void @llvm.dbg.value(metadata i32 %43, metadata !4264, metadata !DIExpression()), !dbg !4320
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %6, i32 noundef %17) #27, !dbg !4321
  %44 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #27, !dbg !4322
  %45 = icmp ult i32 %43, %44, !dbg !4324
  br i1 %45, label %46, label %48, !dbg !4325

46:                                               ; preds = %42
  %47 = add i32 %43, %17, !dbg !4326
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %17, i32 noundef %47) #27, !dbg !4328
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %6, i32 noundef %47) #27, !dbg !4329
  br label %48, !dbg !4330

48:                                               ; preds = %46, %42
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %17) #27, !dbg !4331
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #27, !dbg !4332
  br label %59

49:                                               ; preds = %38, %36, %25
  %50 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #27, !dbg !4333
  call void @llvm.dbg.value(metadata i8* %50, metadata !4270, metadata !DIExpression()), !dbg !4274
  %51 = icmp eq i8* %50, null, !dbg !4334
  br i1 %51, label %59, label %52, !dbg !4335

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #27, !dbg !4336, !range !3780
  %54 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %53) #27, !dbg !4337
  %55 = sub i32 %54, %21, !dbg !4338
  call void @llvm.dbg.value(metadata i32 %55, metadata !4271, metadata !DIExpression()), !dbg !4339
  %56 = icmp ult i32 %55, %3, !dbg !4340
  %57 = select i1 %56, i32 %55, i32 %3, !dbg !4340
  %58 = tail call i8* @memcpy(i8* noundef nonnull %50, i8* noundef nonnull %1, i32 noundef %57) #26, !dbg !4341
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #27, !dbg !4342
  br label %59, !dbg !4343

59:                                               ; preds = %34, %48, %29, %52, %49, %13, %12, %8
  %60 = phi i8* [ %9, %8 ], [ null, %12 ], [ null, %13 ], [ %1, %34 ], [ %1, %48 ], [ %1, %29 ], [ %50, %52 ], [ null, %49 ], !dbg !4274
  ret i8* %60, !dbg !4344
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4345 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4349, metadata !DIExpression()), !dbg !4351
  call void @llvm.dbg.value(metadata i32 %1, metadata !4350, metadata !DIExpression()), !dbg !4351
  %3 = shl i32 %1, 3, !dbg !4352
  %4 = add i32 %3, -4, !dbg !4353
  ret i32 %4, !dbg !4354
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local void @sys_heap_init(%struct.sys_heap* nocapture noundef writeonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !4355 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4359, metadata !DIExpression()), !dbg !4370
  call void @llvm.dbg.value(metadata i8* %1, metadata !4360, metadata !DIExpression()), !dbg !4370
  call void @llvm.dbg.value(metadata i32 %2, metadata !4361, metadata !DIExpression()), !dbg !4370
  %4 = add i32 %2, -4, !dbg !4371
  call void @llvm.dbg.value(metadata i32 %4, metadata !4361, metadata !DIExpression()), !dbg !4370
  %5 = ptrtoint i8* %1 to i32, !dbg !4372
  %6 = add i32 %5, 7, !dbg !4372
  %7 = and i32 %6, -8, !dbg !4372
  call void @llvm.dbg.value(metadata i32 %7, metadata !4362, metadata !DIExpression()), !dbg !4370
  %8 = getelementptr inbounds i8, i8* %1, i32 %4, !dbg !4373
  %9 = ptrtoint i8* %8 to i32, !dbg !4373
  %10 = and i32 %9, -8, !dbg !4373
  call void @llvm.dbg.value(metadata i32 %10, metadata !4363, metadata !DIExpression()), !dbg !4370
  %11 = sub i32 %10, %7, !dbg !4374
  %12 = lshr exact i32 %11, 3, !dbg !4375
  call void @llvm.dbg.value(metadata i32 %12, metadata !4364, metadata !DIExpression()), !dbg !4370
  %13 = inttoptr i32 %7 to %struct.z_heap*, !dbg !4376
  call void @llvm.dbg.value(metadata %struct.z_heap* %13, metadata !4365, metadata !DIExpression()), !dbg !4370
  %14 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4377
  store %struct.z_heap* %13, %struct.z_heap** %14, align 4, !dbg !4378
  %15 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 1, !dbg !4379
  store i32 %12, i32* %15, align 8, !dbg !4380
  %16 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 2, !dbg !4381
  store i32 0, i32* %16, align 4, !dbg !4382
  %17 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %13, i32 noundef %12) #27, !dbg !4383
  call void @llvm.dbg.value(metadata i32 %17, metadata !4366, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4370
  %18 = shl i32 %17, 2, !dbg !4384
  %19 = add i32 %18, 20, !dbg !4385
  %20 = tail call fastcc i32 @chunksz(i32 noundef %19) #27, !dbg !4386
  call void @llvm.dbg.value(metadata i32 %20, metadata !4367, metadata !DIExpression()), !dbg !4370
  call void @llvm.dbg.value(metadata i32 0, metadata !4368, metadata !DIExpression()), !dbg !4387
  %21 = icmp slt i32 %17, 0, !dbg !4388
  br i1 %21, label %22, label %24, !dbg !4390

22:                                               ; preds = %24, %3
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef %20) #27, !dbg !4391
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef 0) #27, !dbg !4392
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i1 noundef zeroext true) #27, !dbg !4393
  %23 = sub i32 %12, %20, !dbg !4394
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %23) #27, !dbg !4395
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %20) #27, !dbg !4396
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef 0) #27, !dbg !4397
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef %23) #27, !dbg !4398
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i1 noundef zeroext true) #27, !dbg !4399
  tail call fastcc void @free_list_add(%struct.z_heap* noundef nonnull %13, i32 noundef %20) #27, !dbg !4400
  ret void, !dbg !4401

24:                                               ; preds = %3, %24
  %25 = phi i32 [ %27, %24 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %25, metadata !4368, metadata !DIExpression()), !dbg !4387
  %26 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 3, i32 %25, i32 0, !dbg !4402
  store i32 0, i32* %26, align 4, !dbg !4404
  %27 = add nuw i32 %25, 1, !dbg !4405
  call void @llvm.dbg.value(metadata i32 %27, metadata !4368, metadata !DIExpression()), !dbg !4387
  %28 = icmp eq i32 %25, %17, !dbg !4388
  br i1 %28, label %22, label %24, !dbg !4390, !llvm.loop !4406
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4408 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4421, metadata !DIExpression()), !dbg !4549
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4418, metadata !DIExpression()), !dbg !4549
  call void @llvm.dbg.value(metadata i8* %1, metadata !4419, metadata !DIExpression()), !dbg !4549
  call void @llvm.dbg.value(metadata i8* %2, metadata !4420, metadata !DIExpression()), !dbg !4549
  call void @llvm.dbg.value(metadata i32 %4, metadata !4422, metadata !DIExpression()), !dbg !4549
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4550
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #25, !dbg !4550
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4423, metadata !DIExpression()), !dbg !4551
  call void @llvm.dbg.value(metadata i32 0, metadata !4427, metadata !DIExpression()), !dbg !4549
  call void @llvm.dbg.value(metadata i1 undef, metadata !4429, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4549
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4552

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4552

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4553
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4421, metadata !DIExpression()), !dbg !4549
  call void @llvm.dbg.value(metadata i8* %30, metadata !4420, metadata !DIExpression()), !dbg !4549
  call void @llvm.dbg.value(metadata i32 %29, metadata !4427, metadata !DIExpression()), !dbg !4549
  %31 = load i8, i8* %30, align 1, !dbg !4554
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4552

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4554
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4555
  call void @llvm.dbg.value(metadata i8* %34, metadata !4420, metadata !DIExpression()), !dbg !4549
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #26, !dbg !4555
  call void @llvm.dbg.value(metadata i32 %35, metadata !4431, metadata !DIExpression()), !dbg !4556
  %36 = icmp slt i32 %35, 0, !dbg !4557
  %37 = add i32 %29, 1, !dbg !4555
  call void @llvm.dbg.value(metadata i32 undef, metadata !4427, metadata !DIExpression()), !dbg !4549
  br i1 %36, label %365, label %28, !llvm.loop !4559

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #25, !dbg !4561
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4436, metadata !DIExpression()), !dbg !4562
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4562
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4481, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4484, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.value(metadata i8* %30, metadata !4487, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.value(metadata i32 -1, metadata !4488, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.value(metadata i32 -1, metadata !4489, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.value(metadata i8* null, metadata !4490, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.value(metadata i8* %14, metadata !4491, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.value(metadata i8 0, metadata !4492, metadata !DIExpression()), !dbg !4563
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #27, !dbg !4564
  call void @llvm.dbg.value(metadata i8* %39, metadata !4420, metadata !DIExpression()), !dbg !4549
  %40 = load i24, i24* %15, align 8, !dbg !4565
  %41 = and i24 %40, 256, !dbg !4565
  %42 = icmp eq i24 %41, 0, !dbg !4565
  br i1 %42, label %51, label %43, !dbg !4567

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4568
  call void @llvm.dbg.value(metadata i8* %44, metadata !4421, metadata !DIExpression()), !dbg !4549
  %45 = bitcast i8* %27 to i32*, !dbg !4568
  %46 = load i32, i32* %45, align 4, !dbg !4568
  call void @llvm.dbg.value(metadata i32 %46, metadata !4488, metadata !DIExpression()), !dbg !4563
  %47 = icmp slt i32 %46, 0, !dbg !4570
  br i1 %47, label %48, label %56, !dbg !4572

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4573
  store i24 %49, i24* %15, align 8, !dbg !4573
  %50 = sub nsw i32 0, %46, !dbg !4575
  call void @llvm.dbg.value(metadata i32 %50, metadata !4488, metadata !DIExpression()), !dbg !4563
  br label %56, !dbg !4576

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4577
  %53 = icmp eq i24 %52, 0, !dbg !4577
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4579
  br label %56, !dbg !4579

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4580
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4563
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4421, metadata !DIExpression()), !dbg !4549
  call void @llvm.dbg.value(metadata i32 %58, metadata !4488, metadata !DIExpression()), !dbg !4563
  %60 = and i24 %57, 1024, !dbg !4580
  %61 = icmp eq i24 %60, 0, !dbg !4580
  br i1 %61, label %69, label %62, !dbg !4581

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4582
  call void @llvm.dbg.value(metadata i8* %63, metadata !4421, metadata !DIExpression()), !dbg !4549
  %64 = bitcast i8* %59 to i32*, !dbg !4582
  %65 = load i32, i32* %64, align 4, !dbg !4582
  call void @llvm.dbg.value(metadata i32 %65, metadata !4493, metadata !DIExpression()), !dbg !4583
  %66 = icmp slt i32 %65, 0, !dbg !4584
  br i1 %66, label %67, label %74, !dbg !4586

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4587
  store i24 %68, i24* %15, align 8, !dbg !4587
  br label %74, !dbg !4589

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4590
  %71 = icmp eq i24 %70, 0, !dbg !4590
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4592
  br label %74, !dbg !4592

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4593
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4563
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4563
  call void @llvm.dbg.value(metadata i8* %77, metadata !4421, metadata !DIExpression()), !dbg !4549
  call void @llvm.dbg.value(metadata i32 %76, metadata !4489, metadata !DIExpression()), !dbg !4563
  store i32 0, i32* %16, align 4, !dbg !4594
  store i32 0, i32* %17, align 8, !dbg !4595
  %78 = lshr i24 %75, 16, !dbg !4593
  call void @llvm.dbg.value(metadata i24 %78, metadata !4496, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4563
  %79 = lshr i24 %75, 11, !dbg !4596
  %80 = and i24 %79, 15, !dbg !4596
  %81 = zext i24 %80 to i32, !dbg !4596
  call void @llvm.dbg.value(metadata i32 %81, metadata !4497, metadata !DIExpression()), !dbg !4563
  %82 = trunc i24 %78 to i3, !dbg !4597
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4597

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4598

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4601
  call void @llvm.dbg.value(metadata i8* %85, metadata !4421, metadata !DIExpression()), !dbg !4549
  %86 = bitcast i8* %77 to i32*, !dbg !4601
  %87 = load i32, i32* %86, align 4, !dbg !4601
  %88 = sext i32 %87 to i64, !dbg !4601
  store i64 %88, i64* %20, align 8, !dbg !4603
  br label %115, !dbg !4604

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4605
  call void @llvm.dbg.value(metadata i8* %90, metadata !4421, metadata !DIExpression()), !dbg !4549
  %91 = bitcast i8* %77 to i32*, !dbg !4605
  %92 = load i32, i32* %91, align 4, !dbg !4605
  %93 = sext i32 %92 to i64, !dbg !4605
  store i64 %93, i64* %20, align 8, !dbg !4608
  br label %115, !dbg !4609

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4610
  %96 = add i32 %95, 7, !dbg !4610
  %97 = and i32 %96, -8, !dbg !4610
  %98 = inttoptr i32 %97 to i8*, !dbg !4610
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4610
  call void @llvm.dbg.value(metadata i8* %99, metadata !4421, metadata !DIExpression()), !dbg !4549
  %100 = inttoptr i32 %97 to i64*, !dbg !4610
  %101 = load i64, i64* %100, align 8, !dbg !4610
  store i64 %101, i64* %20, align 8, !dbg !4611
  br label %115, !dbg !4612

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4613
  %104 = add i32 %103, 7, !dbg !4613
  %105 = and i32 %104, -8, !dbg !4613
  %106 = inttoptr i32 %105 to i8*, !dbg !4613
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4613
  call void @llvm.dbg.value(metadata i8* %107, metadata !4421, metadata !DIExpression()), !dbg !4549
  %108 = inttoptr i32 %105 to i64*, !dbg !4613
  %109 = load i64, i64* %108, align 8, !dbg !4613
  store i64 %109, i64* %20, align 8, !dbg !4614
  br label %115, !dbg !4615

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4616
  call void @llvm.dbg.value(metadata i8* %111, metadata !4421, metadata !DIExpression()), !dbg !4549
  %112 = bitcast i8* %77 to i32*, !dbg !4616
  %113 = load i32, i32* %112, align 4, !dbg !4616
  %114 = sext i32 %113 to i64, !dbg !4617
  store i64 %114, i64* %20, align 8, !dbg !4618
  br label %115, !dbg !4619

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !4620
  call void @llvm.dbg.value(metadata i8* %117, metadata !4421, metadata !DIExpression()), !dbg !4549
  %118 = trunc i24 %79 to i4, !dbg !4621
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !4621

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !4622
  %121 = ashr exact i64 %120, 56, !dbg !4622
  store i64 %121, i64* %20, align 8, !dbg !4625
  br label %177, !dbg !4626

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !4627
  %124 = ashr exact i64 %123, 48, !dbg !4627
  store i64 %124, i64* %20, align 8, !dbg !4630
  br label %177, !dbg !4631

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !4632

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4635
  call void @llvm.dbg.value(metadata i8* %127, metadata !4421, metadata !DIExpression()), !dbg !4549
  %128 = bitcast i8* %77 to i32*, !dbg !4635
  %129 = load i32, i32* %128, align 4, !dbg !4635
  %130 = zext i32 %129 to i64, !dbg !4635
  store i64 %130, i64* %20, align 8, !dbg !4637
  br label %157, !dbg !4638

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4639
  call void @llvm.dbg.value(metadata i8* %132, metadata !4421, metadata !DIExpression()), !dbg !4549
  call void @llvm.dbg.value(metadata i8* %132, metadata !4421, metadata !DIExpression()), !dbg !4549
  %133 = bitcast i8* %77 to i32*, !dbg !4639
  %134 = load i32, i32* %133, align 4, !dbg !4639
  %135 = zext i32 %134 to i64, !dbg !4639
  store i64 %135, i64* %20, align 8, !dbg !4639
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !4641
  %138 = add i32 %137, 7, !dbg !4641
  %139 = and i32 %138, -8, !dbg !4641
  %140 = inttoptr i32 %139 to i8*, !dbg !4641
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !4641
  call void @llvm.dbg.value(metadata i8* %141, metadata !4421, metadata !DIExpression()), !dbg !4549
  %142 = inttoptr i32 %139 to i64*, !dbg !4641
  %143 = load i64, i64* %142, align 8, !dbg !4641
  store i64 %143, i64* %20, align 8, !dbg !4642
  br label %157, !dbg !4643

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !4644
  %146 = add i32 %145, 7, !dbg !4644
  %147 = and i32 %146, -8, !dbg !4644
  %148 = inttoptr i32 %147 to i8*, !dbg !4644
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !4644
  call void @llvm.dbg.value(metadata i8* %149, metadata !4421, metadata !DIExpression()), !dbg !4549
  %150 = inttoptr i32 %147 to i64*, !dbg !4644
  %151 = load i64, i64* %150, align 8, !dbg !4644
  store i64 %151, i64* %20, align 8, !dbg !4645
  br label %157, !dbg !4646

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4647
  call void @llvm.dbg.value(metadata i8* %153, metadata !4421, metadata !DIExpression()), !dbg !4549
  %154 = bitcast i8* %77 to i32*, !dbg !4647
  %155 = load i32, i32* %154, align 4, !dbg !4647
  %156 = zext i32 %155 to i64, !dbg !4648
  store i64 %156, i64* %20, align 8, !dbg !4649
  br label %157, !dbg !4650

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !4651
  call void @llvm.dbg.value(metadata i8* %159, metadata !4421, metadata !DIExpression()), !dbg !4549
  %160 = trunc i24 %79 to i4, !dbg !4652
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !4652

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !4653
  store i64 %162, i64* %20, align 8, !dbg !4656
  br label %177, !dbg !4657

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !4658
  store i64 %164, i64* %20, align 8, !dbg !4661
  br label %177, !dbg !4662

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !4663
  %167 = add i32 %166, 7, !dbg !4663
  %168 = and i32 %167, -8, !dbg !4663
  %169 = inttoptr i32 %168 to i8*, !dbg !4663
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !4663
  call void @llvm.dbg.value(metadata i8* %170, metadata !4421, metadata !DIExpression()), !dbg !4549
  call void @llvm.dbg.value(metadata i8* %170, metadata !4421, metadata !DIExpression()), !dbg !4549
  %171 = inttoptr i32 %168 to double*, !dbg !4663
  %172 = load double, double* %171, align 8, !dbg !4663
  store double %172, double* %19, align 8, !dbg !4663
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4667
  call void @llvm.dbg.value(metadata i8* %174, metadata !4421, metadata !DIExpression()), !dbg !4549
  %175 = bitcast i8* %77 to i8**, !dbg !4667
  %176 = load i8*, i8** %175, align 4, !dbg !4667
  store i8* %176, i8** %18, align 8, !dbg !4670
  br label %177, !dbg !4671

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4563
  call void @llvm.dbg.value(metadata i8* %178, metadata !4421, metadata !DIExpression()), !dbg !4549
  %179 = and i24 %75, 3, !dbg !4672
  %180 = icmp eq i24 %179, 0, !dbg !4672
  br i1 %180, label %185, label %181, !dbg !4672

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #27, !dbg !4673
  call void @llvm.dbg.value(metadata i32 %182, metadata !4498, metadata !DIExpression()), !dbg !4674
  %183 = icmp slt i32 %182, 0, !dbg !4675
  %184 = add i32 %182, %29, !dbg !4673
  call void @llvm.dbg.value(metadata i32 undef, metadata !4427, metadata !DIExpression()), !dbg !4549
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !4677
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !4678

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #26, !dbg !4679
  call void @llvm.dbg.value(metadata i32 %188, metadata !4502, metadata !DIExpression()), !dbg !4680
  %189 = icmp slt i32 %188, 0, !dbg !4681
  %190 = add i32 %29, 1, !dbg !4679
  call void @llvm.dbg.value(metadata i32 undef, metadata !4427, metadata !DIExpression()), !dbg !4549
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !4683
  call void @llvm.dbg.value(metadata i8* %192, metadata !4490, metadata !DIExpression()), !dbg !4563
  %193 = icmp sgt i32 %76, -1, !dbg !4684
  br i1 %193, label %194, label %196, !dbg !4686

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #26, !dbg !4687
  call void @llvm.dbg.value(metadata i32 %195, metadata !4505, metadata !DIExpression()), !dbg !4689
  br label %241, !dbg !4690

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #26, !dbg !4691
  call void @llvm.dbg.value(metadata i32 %197, metadata !4505, metadata !DIExpression()), !dbg !4689
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4490, metadata !DIExpression()), !dbg !4563
  %199 = load i64, i64* %20, align 8, !dbg !4693
  %200 = trunc i64 %199 to i8, !dbg !4694
  store i8 %200, i8* %10, align 1, !dbg !4695
  call void @llvm.dbg.value(metadata i8* %23, metadata !4491, metadata !DIExpression()), !dbg !4563
  br label %245, !dbg !4696

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !4697
  %203 = icmp eq i24 %202, 0, !dbg !4697
  %204 = trunc i24 %75 to i8, !dbg !4699
  %205 = shl i8 %204, 1, !dbg !4699
  %206 = and i8 %205, 32, !dbg !4699
  %207 = select i1 %203, i8 %206, i8 43, !dbg !4699
  call void @llvm.dbg.value(metadata i8 %207, metadata !4492, metadata !DIExpression()), !dbg !4563
  %208 = load i64, i64* %20, align 8, !dbg !4700
  call void @llvm.dbg.value(metadata i64 %208, metadata !4428, metadata !DIExpression()), !dbg !4549
  %209 = icmp slt i64 %208, 0, !dbg !4701
  br i1 %209, label %210, label %212, !dbg !4703

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4492, metadata !DIExpression()), !dbg !4563
  %211 = sub nsw i64 0, %208, !dbg !4704
  store i64 %211, i64* %20, align 8, !dbg !4706
  br label %212, !dbg !4707

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4563
  call void @llvm.dbg.value(metadata i8 %213, metadata !4492, metadata !DIExpression()), !dbg !4563
  %214 = load i64, i64* %20, align 8, !dbg !4708
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #27, !dbg !4709
  call void @llvm.dbg.value(metadata i8* %215, metadata !4490, metadata !DIExpression()), !dbg !4563
  br label %216, !dbg !4710

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !4711
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !4712
  call void @llvm.dbg.value(metadata i8* %218, metadata !4490, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.value(metadata i8 %217, metadata !4492, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.label(metadata !4548), !dbg !4713
  %219 = icmp sgt i32 %76, -1, !dbg !4714
  br i1 %219, label %222, label %220, !dbg !4715

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !4716
  br label %245, !dbg !4715

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !4718
  %224 = sub i32 %22, %223, !dbg !4718
  call void @llvm.dbg.value(metadata i32 %224, metadata !4507, metadata !DIExpression()), !dbg !4719
  %225 = load i24, i24* %15, align 8, !dbg !4720
  %226 = and i24 %225, -65, !dbg !4720
  store i24 %226, i24* %15, align 8, !dbg !4720
  %227 = icmp ugt i32 %76, %224, !dbg !4721
  br i1 %227, label %228, label %245, !dbg !4723

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !4724
  store i32 %229, i32* %16, align 4, !dbg !4726
  br label %245, !dbg !4727

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !4728
  %232 = icmp eq i8* %231, null, !dbg !4730
  br i1 %232, label %245, label %233, !dbg !4731

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !4732
  %235 = zext i32 %234 to i64, !dbg !4732
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #27, !dbg !4734
  call void @llvm.dbg.value(metadata i8* %236, metadata !4490, metadata !DIExpression()), !dbg !4563
  %237 = load i24, i24* %15, align 8, !dbg !4735
  %238 = or i24 %237, 1048576, !dbg !4735
  store i24 %238, i24* %15, align 8, !dbg !4735
  store i8 120, i8* %21, align 1, !dbg !4736
  br label %216, !dbg !4737

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !4738
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #27, !dbg !4741
  br label %363, !dbg !4742

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !4743
  call void @llvm.dbg.value(metadata i32 %242, metadata !4505, metadata !DIExpression()), !dbg !4689
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !4744
  call void @llvm.dbg.value(metadata i32 -1, metadata !4489, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.value(metadata i32 %29, metadata !4427, metadata !DIExpression()), !dbg !4549
  call void @llvm.dbg.value(metadata i8* %192, metadata !4490, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.value(metadata i8* %243, metadata !4491, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.value(metadata i8 0, metadata !4492, metadata !DIExpression()), !dbg !4563
  %244 = icmp eq i8* %192, null, !dbg !4745
  br i1 %244, label %363, label %245, !dbg !4747, !llvm.loop !4559

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !4716
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4510, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4563
  call void @llvm.dbg.value(metadata i32 0, metadata !4511, metadata !DIExpression()), !dbg !4563
  %250 = zext i8 %249 to i32, !dbg !4748
  %251 = icmp eq i8 %249, 0, !dbg !4750
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4510, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4563
  call void @llvm.dbg.value(metadata i32 undef, metadata !4510, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4510, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4563
  call void @llvm.dbg.value(metadata i32 undef, metadata !4510, metadata !DIExpression()), !dbg !4563
  %252 = icmp sgt i32 %58, 0, !dbg !4751
  br i1 %252, label %253, label %302, !dbg !4752

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !4716
  %255 = icmp eq i24 %254, 0, !dbg !4716
  %256 = ptrtoint i8* %248 to i32, !dbg !4753
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4510, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4563
  %257 = ptrtoint i8* %247 to i32, !dbg !4753
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4510, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4563
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4510, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4563
  %258 = xor i1 %251, true, !dbg !4754
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4510, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4563
  %259 = sext i1 %258 to i32, !dbg !4754
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4510, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4563
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4510, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4563
  %260 = lshr i24 %246, 19, !dbg !4755
  %261 = and i24 %260, 1, !dbg !4755
  %262 = select i1 %255, i24 %261, i24 2, !dbg !4755
  %263 = zext i24 %262 to i32, !dbg !4755
  %264 = add i32 %257, %259, !dbg !4755
  %265 = add i32 %256, %263, !dbg !4755
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4510, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4563
  %266 = and i24 %246, 4194304, !dbg !4756
  %267 = icmp eq i24 %266, 0, !dbg !4756
  %268 = load i32, i32* %16, align 4, !dbg !4758
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4510, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4563
  call void @llvm.dbg.value(metadata i32 undef, metadata !4510, metadata !DIExpression()), !dbg !4563
  %269 = load i32, i32* %17, align 8, !dbg !4759
  %270 = select i1 %267, i32 0, i32 %269, !dbg !4759
  call void @llvm.dbg.value(metadata i32 undef, metadata !4510, metadata !DIExpression()), !dbg !4563
  %271 = add i32 %264, %58, !dbg !4759
  %272 = add i32 %265, %268, !dbg !4759
  %273 = add i32 %272, %270, !dbg !4760
  %274 = sub i32 %271, %273, !dbg !4760
  call void @llvm.dbg.value(metadata i32 %274, metadata !4488, metadata !DIExpression()), !dbg !4563
  %275 = and i24 %246, 4, !dbg !4761
  %276 = icmp eq i24 %275, 0, !dbg !4761
  br i1 %276, label %277, label %302, !dbg !4762

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4512, metadata !DIExpression()), !dbg !4763
  %278 = and i24 %246, 64, !dbg !4764
  %279 = icmp eq i24 %278, 0, !dbg !4764
  %280 = select i1 %279, i1 true, i1 %251, !dbg !4765
  %281 = select i1 %279, i8 %249, i8 0, !dbg !4765
  %282 = select i1 %279, i32 32, i32 48, !dbg !4765
  br i1 %280, label %287, label %283, !dbg !4765

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #26, !dbg !4766
  call void @llvm.dbg.value(metadata i32 %284, metadata !4517, metadata !DIExpression()), !dbg !4767
  %285 = icmp slt i32 %284, 0, !dbg !4768
  %286 = add i32 %29, 1, !dbg !4766
  call void @llvm.dbg.value(metadata i32 undef, metadata !4427, metadata !DIExpression()), !dbg !4549
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4563
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4553
  call void @llvm.dbg.value(metadata i32 %290, metadata !4427, metadata !DIExpression()), !dbg !4549
  call void @llvm.dbg.value(metadata i8 undef, metadata !4512, metadata !DIExpression()), !dbg !4763
  call void @llvm.dbg.value(metadata i8 %288, metadata !4492, metadata !DIExpression()), !dbg !4563
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !4770
  %292 = add i32 %291, -1, !dbg !4770
  br label %293, !dbg !4770

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !4771
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4553
  call void @llvm.dbg.value(metadata i32 %295, metadata !4427, metadata !DIExpression()), !dbg !4549
  call void @llvm.dbg.value(metadata i32 %294, metadata !4488, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.value(metadata i32 %294, metadata !4488, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4563
  %296 = icmp sgt i32 %294, 0, !dbg !4772
  br i1 %296, label %297, label %302, !dbg !4770

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !4773
  call void @llvm.dbg.value(metadata i32 %298, metadata !4488, metadata !DIExpression()), !dbg !4563
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #26, !dbg !4774
  call void @llvm.dbg.value(metadata i32 %299, metadata !4523, metadata !DIExpression()), !dbg !4775
  %300 = icmp slt i32 %299, 0, !dbg !4776
  %301 = add i32 %295, 1, !dbg !4774
  call void @llvm.dbg.value(metadata i32 undef, metadata !4427, metadata !DIExpression()), !dbg !4549
  br i1 %300, label %361, label %293, !llvm.loop !4778

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4563
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4563
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4553
  call void @llvm.dbg.value(metadata i32 %305, metadata !4427, metadata !DIExpression()), !dbg !4549
  call void @llvm.dbg.value(metadata i32 %304, metadata !4488, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.value(metadata i8 %303, metadata !4492, metadata !DIExpression()), !dbg !4563
  %306 = icmp eq i8 %303, 0, !dbg !4780
  br i1 %306, label %312, label %307, !dbg !4781

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !4782
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #26, !dbg !4783
  call void @llvm.dbg.value(metadata i32 %309, metadata !4526, metadata !DIExpression()), !dbg !4784
  %310 = icmp slt i32 %309, 0, !dbg !4785
  %311 = add i32 %305, 1, !dbg !4783
  call void @llvm.dbg.value(metadata i32 undef, metadata !4427, metadata !DIExpression()), !dbg !4549
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4553
  call void @llvm.dbg.value(metadata i32 %313, metadata !4427, metadata !DIExpression()), !dbg !4549
  %314 = lshr i24 %246, 20, !dbg !4787
  %315 = lshr i24 %246, 19, !dbg !4788
  %316 = or i24 %314, %315, !dbg !4789
  %317 = and i24 %316, 1, !dbg !4789
  %318 = icmp eq i24 %317, 0, !dbg !4789
  br i1 %318, label %323, label %319, !dbg !4790

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #26, !dbg !4791
  call void @llvm.dbg.value(metadata i32 %320, metadata !4530, metadata !DIExpression()), !dbg !4792
  %321 = icmp slt i32 %320, 0, !dbg !4793
  %322 = add i32 %313, 1, !dbg !4791
  call void @llvm.dbg.value(metadata i32 undef, metadata !4427, metadata !DIExpression()), !dbg !4549
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4553
  call void @llvm.dbg.value(metadata i32 %324, metadata !4427, metadata !DIExpression()), !dbg !4549
  %325 = and i24 %246, 1048576, !dbg !4795
  %326 = icmp eq i24 %325, 0, !dbg !4795
  br i1 %326, label %333, label %327, !dbg !4796

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !4797
  %329 = zext i8 %328 to i32, !dbg !4797
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #26, !dbg !4797
  call void @llvm.dbg.value(metadata i32 %330, metadata !4536, metadata !DIExpression()), !dbg !4798
  %331 = icmp slt i32 %330, 0, !dbg !4799
  %332 = add i32 %324, 1, !dbg !4797
  call void @llvm.dbg.value(metadata i32 undef, metadata !4427, metadata !DIExpression()), !dbg !4549
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4553
  call void @llvm.dbg.value(metadata i32 %334, metadata !4427, metadata !DIExpression()), !dbg !4549
  %335 = load i32, i32* %16, align 4, !dbg !4801
  call void @llvm.dbg.value(metadata i32 %335, metadata !4511, metadata !DIExpression()), !dbg !4563
  br label %336, !dbg !4802

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !4803
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4553
  call void @llvm.dbg.value(metadata i32 %338, metadata !4427, metadata !DIExpression()), !dbg !4549
  call void @llvm.dbg.value(metadata i32 %337, metadata !4511, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4563
  %339 = icmp sgt i32 %337, 0, !dbg !4804
  br i1 %339, label %340, label %345, !dbg !4802

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !4805
  call void @llvm.dbg.value(metadata i32 %341, metadata !4511, metadata !DIExpression()), !dbg !4563
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #26, !dbg !4806
  call void @llvm.dbg.value(metadata i32 %342, metadata !4540, metadata !DIExpression()), !dbg !4807
  %343 = icmp slt i32 %342, 0, !dbg !4808
  %344 = add i32 %338, 1, !dbg !4806
  call void @llvm.dbg.value(metadata i32 undef, metadata !4427, metadata !DIExpression()), !dbg !4549
  br i1 %343, label %361, label %336, !llvm.loop !4810

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #27, !dbg !4812
  call void @llvm.dbg.value(metadata i32 %346, metadata !4543, metadata !DIExpression()), !dbg !4813
  %347 = icmp slt i32 %346, 0, !dbg !4814
  call void @llvm.dbg.value(metadata i32 undef, metadata !4427, metadata !DIExpression()), !dbg !4549
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !4812
  call void @llvm.dbg.value(metadata i32 %349, metadata !4427, metadata !DIExpression()), !dbg !4549
  call void @llvm.dbg.value(metadata i32 %304, metadata !4488, metadata !DIExpression()), !dbg !4563
  %350 = icmp sgt i32 %304, 0, !dbg !4816
  br i1 %350, label %351, label %363, !dbg !4817

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !4817
  %353 = add i32 %352, %338, !dbg !4817
  br label %354, !dbg !4817

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4427, metadata !DIExpression()), !dbg !4549
  call void @llvm.dbg.value(metadata i32 %355, metadata !4488, metadata !DIExpression()), !dbg !4563
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #26, !dbg !4818
  call void @llvm.dbg.value(metadata i32 %356, metadata !4545, metadata !DIExpression()), !dbg !4819
  %357 = icmp slt i32 %356, 0, !dbg !4820
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !4822
  call void @llvm.dbg.value(metadata i32 undef, metadata !4427, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4549
  call void @llvm.dbg.value(metadata i32 %359, metadata !4488, metadata !DIExpression()), !dbg !4563
  %360 = icmp sgt i32 %355, 1, !dbg !4816
  br i1 %360, label %354, label %363, !dbg !4817, !llvm.loop !4823

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4427, metadata !DIExpression()), !dbg !4549
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #25, !dbg !4560
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4553
  call void @llvm.dbg.value(metadata i32 %364, metadata !4427, metadata !DIExpression()), !dbg !4549
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #25, !dbg !4560
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4549
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #25, !dbg !4825
  ret i32 %366, !dbg !4825
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #13

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !4826 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4830, metadata !DIExpression()), !dbg !4832
  call void @llvm.dbg.value(metadata i8* %1, metadata !4831, metadata !DIExpression()), !dbg !4832
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !4833
  store i24 0, i24* %3, align 4, !dbg !4833
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !4833
  store i8 0, i8* %4, align 1, !dbg !4833
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !4833
  store i32 0, i32* %5, align 4, !dbg !4833
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !4833
  store i32 0, i32* %6, align 4, !dbg !4833
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4834
  call void @llvm.dbg.value(metadata i8* %7, metadata !4831, metadata !DIExpression()), !dbg !4832
  %8 = load i8, i8* %7, align 1, !dbg !4835
  %9 = icmp eq i8 %8, 37, !dbg !4837
  br i1 %9, label %10, label %12, !dbg !4838

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4839
  call void @llvm.dbg.value(metadata i8* %11, metadata !4831, metadata !DIExpression()), !dbg !4832
  store i8 37, i8* %4, align 1, !dbg !4841
  br label %18, !dbg !4842

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #27, !dbg !4843
  call void @llvm.dbg.value(metadata i8* %13, metadata !4831, metadata !DIExpression()), !dbg !4832
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #27, !dbg !4844
  call void @llvm.dbg.value(metadata i8* %14, metadata !4831, metadata !DIExpression()), !dbg !4832
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #27, !dbg !4845
  call void @llvm.dbg.value(metadata i8* %15, metadata !4831, metadata !DIExpression()), !dbg !4832
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #27, !dbg !4846
  call void @llvm.dbg.value(metadata i8* %16, metadata !4831, metadata !DIExpression()), !dbg !4832
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #27, !dbg !4847
  call void @llvm.dbg.value(metadata i8* %17, metadata !4831, metadata !DIExpression()), !dbg !4832
  br label %18, !dbg !4848

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !4832
  ret i8* %19, !dbg !4849
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !4850 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4854, metadata !DIExpression()), !dbg !4861
  call void @llvm.dbg.value(metadata i8* %1, metadata !4855, metadata !DIExpression()), !dbg !4861
  call void @llvm.dbg.value(metadata i8* %2, metadata !4856, metadata !DIExpression()), !dbg !4861
  call void @llvm.dbg.value(metadata i8* %3, metadata !4857, metadata !DIExpression()), !dbg !4861
  call void @llvm.dbg.value(metadata i32 0, metadata !4858, metadata !DIExpression()), !dbg !4861
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !4862

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !4863
  call void @llvm.dbg.value(metadata i32 %9, metadata !4858, metadata !DIExpression()), !dbg !4861
  call void @llvm.dbg.value(metadata i8* %8, metadata !4856, metadata !DIExpression()), !dbg !4861
  %10 = icmp ult i8* %8, %3, !dbg !4864
  br i1 %10, label %11, label %13, !dbg !4865

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !4866
  br label %17, !dbg !4865

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !4867

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !4868
  %16 = icmp eq i8 %15, 0, !dbg !4867
  br i1 %16, label %24, label %17, !dbg !4862

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !4866
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !4869
  call void @llvm.dbg.value(metadata i8* %19, metadata !4856, metadata !DIExpression()), !dbg !4861
  %20 = zext i8 %18 to i32, !dbg !4870
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #26, !dbg !4871
  call void @llvm.dbg.value(metadata i32 %21, metadata !4859, metadata !DIExpression()), !dbg !4872
  %22 = icmp slt i32 %21, 0, !dbg !4873
  %23 = add i32 %9, 1, !dbg !4875
  call void @llvm.dbg.value(metadata i32 undef, metadata !4858, metadata !DIExpression()), !dbg !4861
  br i1 %22, label %24, label %7, !llvm.loop !4876

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !4861
  ret i32 %25, !dbg !4878
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #14 !dbg !4879 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !4883, metadata !DIExpression()), !dbg !4893
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !4884, metadata !DIExpression()), !dbg !4893
  call void @llvm.dbg.value(metadata i8* %2, metadata !4885, metadata !DIExpression()), !dbg !4893
  call void @llvm.dbg.value(metadata i8* %3, metadata !4886, metadata !DIExpression()), !dbg !4893
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !4894
  %6 = load i8, i8* %5, align 1, !dbg !4894
  %7 = zext i8 %6 to i32, !dbg !4895
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #27, !dbg !4896
  %9 = icmp eq i32 %8, 0, !dbg !4896
  call void @llvm.dbg.value(metadata i1 %9, metadata !4887, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4893
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #27, !dbg !4897
  call void @llvm.dbg.value(metadata i32 %10, metadata !4888, metadata !DIExpression()), !dbg !4893
  %11 = ptrtoint i8* %3 to i32, !dbg !4898
  %12 = ptrtoint i8* %2 to i32, !dbg !4898
  %13 = sub i32 %11, %12, !dbg !4898
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !4899
  call void @llvm.dbg.value(metadata i8* %14, metadata !4890, metadata !DIExpression()), !dbg !4893
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !4900

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !4893
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !4883, metadata !DIExpression()), !dbg !4893
  call void @llvm.dbg.value(metadata i8* %18, metadata !4890, metadata !DIExpression()), !dbg !4893
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !4901
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !4902
  call void @llvm.dbg.value(metadata i32 %25, metadata !4891, metadata !DIExpression()), !dbg !4903
  %26 = icmp ult i32 %25, 10, !dbg !4904
  %27 = select i1 %26, i32 48, i32 %16, !dbg !4905
  %28 = add i32 %27, %25, !dbg !4903
  %29 = trunc i32 %28 to i8, !dbg !4905
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !4906
  call void @llvm.dbg.value(metadata i8* %30, metadata !4890, metadata !DIExpression()), !dbg !4893
  store i8 %29, i8* %30, align 1, !dbg !4907
  call void @llvm.dbg.value(metadata i64 %22, metadata !4883, metadata !DIExpression()), !dbg !4893
  %31 = icmp uge i64 %19, %15, !dbg !4908
  %32 = icmp ugt i8* %30, %2, !dbg !4909
  %33 = and i1 %31, %32, !dbg !4909
  br i1 %33, label %17, label %34, !dbg !4910, !llvm.loop !4911

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !4913
  %36 = load i24, i24* %35, align 4, !dbg !4913
  %37 = and i24 %36, 32, !dbg !4913
  %38 = icmp eq i24 %37, 0, !dbg !4913
  br i1 %38, label %44, label %39, !dbg !4915

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !4916

40:                                               ; preds = %39
  br label %41, !dbg !4918

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !4922
  store i24 %43, i24* %35, align 4, !dbg !4922
  br label %44, !dbg !4923

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !4923
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #8 !dbg !4924 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4930, metadata !DIExpression()), !dbg !4933
  call void @llvm.dbg.value(metadata i8* %1, metadata !4931, metadata !DIExpression()), !dbg !4933
  call void @llvm.dbg.value(metadata i32 %2, metadata !4932, metadata !DIExpression()), !dbg !4933
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !4934
  %5 = load i24, i24* %4, align 4, !dbg !4934
  %6 = lshr i24 %5, 11, !dbg !4934
  %7 = and i24 %6, 15, !dbg !4934
  %8 = zext i24 %7 to i32, !dbg !4934
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !4935

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !4936
  store i32 %2, i32* %10, align 4, !dbg !4938
  br label %28, !dbg !4939

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !4940
  store i8 %12, i8* %1, align 1, !dbg !4941
  br label %28, !dbg !4942

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !4943
  %15 = bitcast i8* %1 to i16*, !dbg !4944
  store i16 %14, i16* %15, align 2, !dbg !4945
  br label %28, !dbg !4946

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !4947
  store i32 %2, i32* %17, align 4, !dbg !4948
  br label %28, !dbg !4949

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !4950
  %20 = bitcast i8* %1 to i64*, !dbg !4951
  store i64 %19, i64* %20, align 8, !dbg !4952
  br label %28, !dbg !4953

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !4954
  %23 = bitcast i8* %1 to i64*, !dbg !4955
  store i64 %22, i64* %23, align 8, !dbg !4956
  br label %28, !dbg !4957

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !4958
  store i32 %2, i32* %25, align 4, !dbg !4959
  br label %28, !dbg !4960

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !4961
  store i32 %2, i32* %27, align 4, !dbg !4962
  br label %28, !dbg !4963

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !4964
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #11 !dbg !4965 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4968, metadata !DIExpression()), !dbg !4969
  %2 = add i32 %0, -65, !dbg !4970
  %3 = icmp ult i32 %2, 26, !dbg !4971
  %4 = zext i1 %3 to i32, !dbg !4971
  ret i32 %4, !dbg !4972
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #11 !dbg !4973 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !4977, metadata !DIExpression()), !dbg !4978
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !4979

2:                                                ; preds = %1
  br label %4, !dbg !4980

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !4982

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !4983
  ret i32 %5, !dbg !4984
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #14 !dbg !4985 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4987, metadata !DIExpression()), !dbg !4990
  call void @llvm.dbg.value(metadata i8* %1, metadata !4988, metadata !DIExpression()), !dbg !4990
  call void @llvm.dbg.value(metadata i8 1, metadata !4989, metadata !DIExpression()), !dbg !4990
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !4991

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !4989, metadata !DIExpression()), !dbg !4990
  call void @llvm.dbg.value(metadata i8* %5, metadata !4988, metadata !DIExpression()), !dbg !4990
  %6 = load i8, i8* %5, align 1, !dbg !4992
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !4994

7:                                                ; preds = %4
  br label %11, !dbg !4995

8:                                                ; preds = %4
  br label %11, !dbg !4997

9:                                                ; preds = %4
  br label %11, !dbg !4998

10:                                               ; preds = %4
  br label %11, !dbg !4999

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5000
  %14 = or i24 %13, %12, !dbg !5000
  store i24 %14, i24* %3, align 4, !dbg !5000
  call void @llvm.dbg.value(metadata i8 poison, metadata !4989, metadata !DIExpression()), !dbg !4990
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !4988, metadata !DIExpression()), !dbg !4990
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !4989, metadata !DIExpression()), !dbg !4990
  call void @llvm.dbg.value(metadata i8* %15, metadata !4988, metadata !DIExpression()), !dbg !4990
  %17 = load i24, i24* %3, align 4, !dbg !5001
  %18 = and i24 %17, 68, !dbg !5003
  %19 = icmp eq i24 %18, 68, !dbg !5003
  br i1 %19, label %20, label %22, !dbg !5003

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5004
  store i24 %21, i24* %3, align 4, !dbg !5004
  br label %22, !dbg !5006

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5007
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5008 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5010, metadata !DIExpression()), !dbg !5014
  call void @llvm.dbg.value(metadata i8* %1, metadata !5011, metadata !DIExpression()), !dbg !5014
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5015
  %5 = load i24, i24* %4, align 4, !dbg !5016
  %6 = or i24 %5, 128, !dbg !5016
  store i24 %6, i24* %4, align 4, !dbg !5016
  call void @llvm.dbg.value(metadata i8* %1, metadata !5011, metadata !DIExpression()), !dbg !5014
  %7 = load i8, i8* %1, align 1, !dbg !5017
  %8 = icmp eq i8 %7, 42, !dbg !5019
  br i1 %8, label %9, label %12, !dbg !5020

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5021
  store i24 %10, i24* %4, align 4, !dbg !5021
  call void @llvm.dbg.value(metadata i8* %1, metadata !5011, metadata !DIExpression()), !dbg !5014
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5023
  call void @llvm.dbg.value(metadata i8* %11, metadata !5011, metadata !DIExpression()), !dbg !5014
  store i8* %11, i8** %3, align 4, !dbg !5023
  br label %29, !dbg !5024

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5012, metadata !DIExpression()), !dbg !5014
  call void @llvm.dbg.value(metadata i8** %3, metadata !5011, metadata !DIExpression(DW_OP_deref)), !dbg !5014
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #27, !dbg !5025
  call void @llvm.dbg.value(metadata i32 %13, metadata !5013, metadata !DIExpression()), !dbg !5014
  %14 = load i8*, i8** %3, align 4, !dbg !5026
  call void @llvm.dbg.value(metadata i8* %14, metadata !5011, metadata !DIExpression()), !dbg !5014
  %15 = icmp eq i8* %14, %1, !dbg !5028
  br i1 %15, label %29, label %16, !dbg !5029

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5030
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5032
  store i32 %13, i32* %18, align 4, !dbg !5033
  %19 = lshr i32 %13, 31, !dbg !5034
  %20 = lshr i24 %17, 1, !dbg !5035
  %21 = and i24 %20, 1, !dbg !5035
  %22 = zext i24 %21 to i32, !dbg !5035
  %23 = or i32 %19, %22, !dbg !5035
  %24 = trunc i32 %23 to i24, !dbg !5035
  %25 = shl nuw nsw i24 %24, 1, !dbg !5035
  %26 = and i24 %17, -131, !dbg !5035
  %27 = or i24 %26, 128, !dbg !5035
  %28 = or i24 %25, %27, !dbg !5035
  store i24 %28, i24* %4, align 4, !dbg !5035
  br label %29, !dbg !5036

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5014
  ret i8* %30, !dbg !5037
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5038 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5040, metadata !DIExpression()), !dbg !5043
  call void @llvm.dbg.value(metadata i8* %1, metadata !5041, metadata !DIExpression()), !dbg !5043
  %4 = load i8, i8* %1, align 1, !dbg !5044
  %5 = icmp eq i8 %4, 46, !dbg !5045
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5046
  %7 = load i24, i24* %6, align 4, !dbg !5047
  %8 = select i1 %5, i24 512, i24 0, !dbg !5047
  %9 = and i24 %7, -513, !dbg !5047
  %10 = or i24 %9, %8, !dbg !5047
  store i24 %10, i24* %6, align 4, !dbg !5047
  br i1 %5, label %11, label %32, !dbg !5048

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5041, metadata !DIExpression()), !dbg !5043
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5049
  call void @llvm.dbg.value(metadata i8* %12, metadata !5041, metadata !DIExpression()), !dbg !5043
  store i8* %12, i8** %3, align 4, !dbg !5049
  %13 = load i8, i8* %12, align 1, !dbg !5050
  %14 = icmp eq i8 %13, 42, !dbg !5052
  br i1 %14, label %15, label %18, !dbg !5053

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5054
  store i24 %16, i24* %6, align 4, !dbg !5054
  call void @llvm.dbg.value(metadata i8* %12, metadata !5041, metadata !DIExpression()), !dbg !5043
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5056
  call void @llvm.dbg.value(metadata i8* %17, metadata !5041, metadata !DIExpression()), !dbg !5043
  store i8* %17, i8** %3, align 4, !dbg !5056
  br label %32, !dbg !5057

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5041, metadata !DIExpression(DW_OP_deref)), !dbg !5043
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #27, !dbg !5058
  call void @llvm.dbg.value(metadata i32 %19, metadata !5042, metadata !DIExpression()), !dbg !5043
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5059
  store i32 %19, i32* %20, align 4, !dbg !5060
  %21 = lshr i32 %19, 31, !dbg !5061
  %22 = load i24, i24* %6, align 4, !dbg !5062
  %23 = lshr i24 %22, 1, !dbg !5062
  %24 = and i24 %23, 1, !dbg !5062
  %25 = zext i24 %24 to i32, !dbg !5062
  %26 = or i32 %21, %25, !dbg !5062
  %27 = trunc i32 %26 to i24, !dbg !5062
  %28 = shl nuw nsw i24 %27, 1, !dbg !5062
  %29 = and i24 %22, -3, !dbg !5062
  %30 = or i24 %28, %29, !dbg !5062
  store i24 %30, i24* %6, align 4, !dbg !5062
  %31 = load i8*, i8** %3, align 4, !dbg !5063
  call void @llvm.dbg.value(metadata i8* %31, metadata !5041, metadata !DIExpression()), !dbg !5043
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5043
  ret i8* %33, !dbg !5064
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #8 !dbg !5065 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5067, metadata !DIExpression()), !dbg !5069
  call void @llvm.dbg.value(metadata i8* %1, metadata !5068, metadata !DIExpression()), !dbg !5069
  %3 = load i8, i8* %1, align 1, !dbg !5070
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5071

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5072
  call void @llvm.dbg.value(metadata i8* %5, metadata !5068, metadata !DIExpression()), !dbg !5069
  %6 = load i8, i8* %5, align 1, !dbg !5075
  %7 = icmp eq i8 %6, 104, !dbg !5076
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5077
  %9 = load i24, i24* %8, align 4, !dbg !5077
  %10 = and i24 %9, -30721, !dbg !5077
  br i1 %7, label %11, label %14, !dbg !5078

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5079
  store i24 %12, i24* %8, align 4, !dbg !5079
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5081
  call void @llvm.dbg.value(metadata i8* %13, metadata !5068, metadata !DIExpression()), !dbg !5069
  br label %56, !dbg !5082

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5083
  store i24 %15, i24* %8, align 4, !dbg !5083
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5085
  call void @llvm.dbg.value(metadata i8* %17, metadata !5068, metadata !DIExpression()), !dbg !5069
  %18 = load i8, i8* %17, align 1, !dbg !5087
  %19 = icmp eq i8 %18, 108, !dbg !5088
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5089
  %21 = load i24, i24* %20, align 4, !dbg !5089
  %22 = and i24 %21, -30721, !dbg !5089
  br i1 %19, label %23, label %26, !dbg !5090

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5091
  store i24 %24, i24* %20, align 4, !dbg !5091
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5093
  call void @llvm.dbg.value(metadata i8* %25, metadata !5068, metadata !DIExpression()), !dbg !5069
  br label %56, !dbg !5094

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5095
  store i24 %27, i24* %20, align 4, !dbg !5095
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5097
  %30 = load i24, i24* %29, align 4, !dbg !5098
  %31 = and i24 %30, -30721, !dbg !5098
  %32 = or i24 %31, 10240, !dbg !5098
  store i24 %32, i24* %29, align 4, !dbg !5098
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5099
  call void @llvm.dbg.value(metadata i8* %33, metadata !5068, metadata !DIExpression()), !dbg !5069
  br label %56, !dbg !5100

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5101
  %36 = load i24, i24* %35, align 4, !dbg !5102
  %37 = and i24 %36, -30721, !dbg !5102
  %38 = or i24 %37, 12288, !dbg !5102
  store i24 %38, i24* %35, align 4, !dbg !5102
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5103
  call void @llvm.dbg.value(metadata i8* %39, metadata !5068, metadata !DIExpression()), !dbg !5069
  br label %56, !dbg !5104

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5105
  %42 = load i24, i24* %41, align 4, !dbg !5106
  %43 = and i24 %42, -30721, !dbg !5106
  %44 = or i24 %43, 14336, !dbg !5106
  store i24 %44, i24* %41, align 4, !dbg !5106
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5107
  call void @llvm.dbg.value(metadata i8* %45, metadata !5068, metadata !DIExpression()), !dbg !5069
  br label %56, !dbg !5108

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5109
  %48 = load i24, i24* %47, align 4, !dbg !5110
  %49 = and i24 %48, -30723, !dbg !5110
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5111
  call void @llvm.dbg.value(metadata i8* %50, metadata !5068, metadata !DIExpression()), !dbg !5069
  %51 = or i24 %49, 16386, !dbg !5112
  store i24 %51, i24* %47, align 4, !dbg !5112
  br label %56, !dbg !5113

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5114
  %54 = load i24, i24* %53, align 4, !dbg !5115
  %55 = and i24 %54, -30721, !dbg !5115
  store i24 %55, i24* %53, align 4, !dbg !5115
  br label %56, !dbg !5116

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5068, metadata !DIExpression()), !dbg !5069
  ret i8* %57, !dbg !5117
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #8 !dbg !5118 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5120, metadata !DIExpression()), !dbg !5125
  call void @llvm.dbg.value(metadata i8* %1, metadata !5121, metadata !DIExpression()), !dbg !5125
  call void @llvm.dbg.value(metadata i8 0, metadata !5122, metadata !DIExpression()), !dbg !5125
  call void @llvm.dbg.value(metadata i8* %1, metadata !5121, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5125
  %3 = load i8, i8* %1, align 1, !dbg !5126
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5127
  store i8 %3, i8* %4, align 1, !dbg !5128
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5129

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5130

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5131
  %9 = load i24, i24* %8, align 4, !dbg !5131
  %10 = and i24 %9, -458753, !dbg !5131
  %11 = or i24 %10, %7, !dbg !5131
  call void @llvm.dbg.label(metadata !5123), !dbg !5132
  %12 = and i24 %9, 30720, !dbg !5133
  %13 = icmp eq i24 %12, 16384, !dbg !5133
  %14 = zext i1 %13 to i24, !dbg !5135
  %15 = or i24 %11, %14, !dbg !5135
  %16 = icmp eq i8 %3, 99, !dbg !5136
  br i1 %16, label %17, label %43, !dbg !5138

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5139
  %19 = icmp ne i24 %18, 0, !dbg !5139
  call void @llvm.dbg.value(metadata i1 %19, metadata !5122, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5125
  br label %43, !dbg !5141

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5142
  %22 = load i24, i24* %21, align 4, !dbg !5143
  %23 = and i24 %22, -458753, !dbg !5143
  %24 = or i24 %23, 262144, !dbg !5143
  call void @llvm.dbg.value(metadata i8 1, metadata !5122, metadata !DIExpression()), !dbg !5125
  br label %43, !dbg !5144

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5147
  %27 = load i24, i24* %26, align 4, !dbg !5148
  %28 = and i24 %27, -458753, !dbg !5148
  %29 = or i24 %28, 196608, !dbg !5148
  %30 = and i24 %27, 30720, !dbg !5149
  %31 = icmp eq i24 %30, 16384, !dbg !5149
  br label %43, !dbg !5151

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5152
  %34 = load i24, i24* %33, align 4, !dbg !5153
  %35 = and i24 %34, -458753, !dbg !5153
  %36 = or i24 %35, 196608, !dbg !5153
  %37 = and i24 %34, 30720, !dbg !5154
  %38 = icmp ne i24 %37, 0, !dbg !5154
  br label %43, !dbg !5156

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5157
  %41 = load i24, i24* %40, align 4, !dbg !5158
  %42 = or i24 %41, 1, !dbg !5158
  br label %43, !dbg !5159

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5160
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5161
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5162
  call void @llvm.dbg.value(metadata i8* %48, metadata !5121, metadata !DIExpression()), !dbg !5125
  call void @llvm.dbg.value(metadata i8 poison, metadata !5122, metadata !DIExpression()), !dbg !5125
  %49 = lshr i24 %44, 1, !dbg !5160
  %50 = and i24 %49, 1, !dbg !5160
  %51 = zext i24 %50 to i32, !dbg !5160
  %52 = or i32 %51, %47, !dbg !5160
  %53 = trunc i32 %52 to i24, !dbg !5160
  %54 = shl nuw nsw i24 %53, 1, !dbg !5160
  %55 = and i24 %44, -3, !dbg !5160
  %56 = or i24 %54, %55, !dbg !5160
  store i24 %56, i24* %46, align 4, !dbg !5160
  ret i8* %48, !dbg !5163
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #14 !dbg !5164 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5169, metadata !DIExpression()), !dbg !5172
  %2 = load i8*, i8** %0, align 4, !dbg !5173
  call void @llvm.dbg.value(metadata i8* %2, metadata !5170, metadata !DIExpression()), !dbg !5172
  call void @llvm.dbg.value(metadata i32 0, metadata !5171, metadata !DIExpression()), !dbg !5172
  %3 = load i8, i8* %2, align 1, !dbg !5174
  %4 = zext i8 %3 to i32, !dbg !5175
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #27, !dbg !5176
  %6 = icmp eq i32 %5, 0, !dbg !5177
  br i1 %6, label %19, label %7, !dbg !5177

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5171, metadata !DIExpression()), !dbg !5172
  call void @llvm.dbg.value(metadata i8* %10, metadata !5170, metadata !DIExpression()), !dbg !5172
  %11 = mul i32 %9, 10, !dbg !5178
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5180
  call void @llvm.dbg.value(metadata i8* %12, metadata !5170, metadata !DIExpression()), !dbg !5172
  %13 = add i32 %11, -48, !dbg !5181
  %14 = add i32 %13, %8, !dbg !5182
  call void @llvm.dbg.value(metadata i32 %14, metadata !5171, metadata !DIExpression()), !dbg !5172
  %15 = load i8, i8* %12, align 1, !dbg !5174
  %16 = zext i8 %15 to i32, !dbg !5175
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #27, !dbg !5176
  %18 = icmp eq i32 %17, 0, !dbg !5177
  br i1 %18, label %19, label %7, !dbg !5177, !llvm.loop !5183

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5172
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5172
  store i8* %20, i8** %0, align 4, !dbg !5185
  ret i32 %21, !dbg !5186
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #11 !dbg !5187 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5189, metadata !DIExpression()), !dbg !5190
  %2 = add i32 %0, -48, !dbg !5191
  %3 = icmp ult i32 %2, 10, !dbg !5192
  %4 = zext i1 %3 to i32, !dbg !5192
  ret i32 %4, !dbg !5193
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5194 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #25, !dbg !5196, !srcloc !5197
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #25, !dbg !5198, !srcloc !5199
  tail call void asm sideeffect ".globl\09CONFIG_UART_INTERRUPT_DRIVEN\0A\09.equ\09CONFIG_UART_INTERRUPT_DRIVEN,1\0A\09.type\09CONFIG_UART_INTERRUPT_DRIVEN,%object", ""() #25, !dbg !5200, !srcloc !5201
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #25, !dbg !5202, !srcloc !5203
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #25, !dbg !5204, !srcloc !5205
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #25, !dbg !5206, !srcloc !5207
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,85\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #25, !dbg !5208, !srcloc !5209
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #25, !dbg !5210, !srcloc !5211
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #25, !dbg !5212, !srcloc !5213
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,512\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #25, !dbg !5214, !srcloc !5215
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #25, !dbg !5216, !srcloc !5217
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #25, !dbg !5218, !srcloc !5219
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #25, !dbg !5220, !srcloc !5221
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #25, !dbg !5222, !srcloc !5223
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #25, !dbg !5224, !srcloc !5225
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #25, !dbg !5226, !srcloc !5227
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #25, !dbg !5228, !srcloc !5229
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #25, !dbg !5230, !srcloc !5231
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #25, !dbg !5232, !srcloc !5233
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #25, !dbg !5234, !srcloc !5235
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #25, !dbg !5236, !srcloc !5237
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #25, !dbg !5238, !srcloc !5239
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #25, !dbg !5240, !srcloc !5241
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #25, !dbg !5242, !srcloc !5243
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #25, !dbg !5244, !srcloc !5245
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #25, !dbg !5246, !srcloc !5247
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #25, !dbg !5248, !srcloc !5249
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #25, !dbg !5250, !srcloc !5251
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #25, !dbg !5252, !srcloc !5253
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #25, !dbg !5254, !srcloc !5255
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_PARTITIONS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_PARTITIONS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_PARTITIONS_ENABLED,%object", ""() #25, !dbg !5256, !srcloc !5257
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #25, !dbg !5258, !srcloc !5259
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #25, !dbg !5260, !srcloc !5261
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED\0A\09.equ\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED,%object", ""() #25, !dbg !5262, !srcloc !5263
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #25, !dbg !5264, !srcloc !5265
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #25, !dbg !5266, !srcloc !5267
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #25, !dbg !5268, !srcloc !5269
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #25, !dbg !5270, !srcloc !5271
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #25, !dbg !5272, !srcloc !5273
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #25, !dbg !5274, !srcloc !5275
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #25, !dbg !5276, !srcloc !5277
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #25, !dbg !5278, !srcloc !5279
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,%object", ""() #25, !dbg !5280, !srcloc !5281
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #25, !dbg !5282, !srcloc !5283
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #25, !dbg !5284, !srcloc !5285
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #25, !dbg !5286, !srcloc !5287
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #25, !dbg !5288, !srcloc !5289
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #25, !dbg !5290, !srcloc !5291
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #25, !dbg !5292, !srcloc !5293
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #25, !dbg !5294, !srcloc !5295
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #25, !dbg !5296, !srcloc !5297
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #25, !dbg !5298, !srcloc !5299
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ZEPHYR_BT_HCI_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ZEPHYR_BT_HCI_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ZEPHYR_BT_HCI_SPI_ENABLED,%object", ""() #25, !dbg !5300, !srcloc !5301
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #25, !dbg !5302, !srcloc !5303
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #25, !dbg !5304, !srcloc !5305
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #25, !dbg !5306, !srcloc !5307
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #25, !dbg !5308, !srcloc !5309
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #25, !dbg !5310, !srcloc !5311
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #25, !dbg !5312, !srcloc !5313
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #25, !dbg !5314, !srcloc !5315
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #25, !dbg !5316, !srcloc !5317
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #25, !dbg !5318, !srcloc !5319
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #25, !dbg !5320, !srcloc !5321
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #25, !dbg !5322, !srcloc !5323
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #25, !dbg !5324, !srcloc !5325
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #25, !dbg !5326, !srcloc !5327
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #25, !dbg !5328, !srcloc !5329
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #25, !dbg !5330, !srcloc !5331
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #25, !dbg !5332, !srcloc !5333
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #25, !dbg !5334, !srcloc !5335
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #25, !dbg !5336, !srcloc !5337
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #25, !dbg !5338, !srcloc !5339
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #25, !dbg !5340, !srcloc !5341
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #25, !dbg !5342, !srcloc !5343
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #25, !dbg !5344, !srcloc !5345
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #25, !dbg !5346, !srcloc !5347
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #25, !dbg !5348, !srcloc !5349
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #25, !dbg !5350, !srcloc !5351
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #25, !dbg !5352, !srcloc !5353
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #25, !dbg !5354, !srcloc !5355
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #25, !dbg !5356, !srcloc !5357
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #25, !dbg !5358, !srcloc !5359
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #25, !dbg !5360, !srcloc !5361
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #25, !dbg !5362, !srcloc !5363
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #25, !dbg !5364, !srcloc !5365
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #25, !dbg !5366, !srcloc !5367
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_CARBON\0A\09.equ\09CONFIG_BOARD_96B_CARBON,1\0A\09.type\09CONFIG_BOARD_96B_CARBON,%object", ""() #25, !dbg !5368, !srcloc !5369
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #25, !dbg !5370, !srcloc !5371
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #25, !dbg !5372, !srcloc !5373
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #25, !dbg !5374, !srcloc !5375
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #25, !dbg !5376, !srcloc !5377
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #25, !dbg !5378, !srcloc !5379
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F401XE\0A\09.equ\09CONFIG_SOC_STM32F401XE,1\0A\09.type\09CONFIG_SOC_STM32F401XE,%object", ""() #25, !dbg !5380, !srcloc !5381
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #25, !dbg !5382, !srcloc !5383
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #25, !dbg !5384, !srcloc !5385
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #25, !dbg !5386, !srcloc !5387
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #25, !dbg !5388, !srcloc !5389
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #25, !dbg !5390, !srcloc !5391
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #25, !dbg !5392, !srcloc !5393
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #25, !dbg !5394, !srcloc !5395
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #25, !dbg !5396, !srcloc !5397
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #25, !dbg !5398, !srcloc !5399
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #25, !dbg !5400, !srcloc !5401
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #25, !dbg !5402, !srcloc !5403
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #25, !dbg !5404, !srcloc !5405
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #25, !dbg !5406, !srcloc !5407
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #25, !dbg !5408, !srcloc !5409
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #25, !dbg !5410, !srcloc !5411
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #25, !dbg !5412, !srcloc !5413
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #25, !dbg !5414, !srcloc !5415
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #25, !dbg !5416, !srcloc !5417
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #25, !dbg !5418, !srcloc !5419
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #25, !dbg !5420, !srcloc !5421
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #25, !dbg !5422, !srcloc !5423
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #25, !dbg !5424, !srcloc !5425
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #25, !dbg !5426, !srcloc !5427
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #25, !dbg !5428, !srcloc !5429
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #25, !dbg !5430, !srcloc !5431
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #25, !dbg !5432, !srcloc !5433
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #25, !dbg !5434, !srcloc !5435
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #25, !dbg !5436, !srcloc !5437
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #25, !dbg !5438, !srcloc !5439
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,96\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #25, !dbg !5440, !srcloc !5441
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #25, !dbg !5442, !srcloc !5443
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #25, !dbg !5444, !srcloc !5445
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #25, !dbg !5446, !srcloc !5447
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #25, !dbg !5448, !srcloc !5449
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #25, !dbg !5450, !srcloc !5451
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #25, !dbg !5452, !srcloc !5453
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #25, !dbg !5454, !srcloc !5455
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #25, !dbg !5456, !srcloc !5457
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #25, !dbg !5458, !srcloc !5459
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #25, !dbg !5460, !srcloc !5461
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #25, !dbg !5462, !srcloc !5463
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #25, !dbg !5464, !srcloc !5465
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #25, !dbg !5466, !srcloc !5467
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #25, !dbg !5468, !srcloc !5469
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #25, !dbg !5470, !srcloc !5471
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #25, !dbg !5472, !srcloc !5473
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #25, !dbg !5474, !srcloc !5475
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #25, !dbg !5476, !srcloc !5477
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #25, !dbg !5478, !srcloc !5479
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #25, !dbg !5480, !srcloc !5481
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #25, !dbg !5482, !srcloc !5483
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #25, !dbg !5484, !srcloc !5485
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !5486, !srcloc !5487
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #25, !dbg !5488, !srcloc !5489
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #25, !dbg !5490, !srcloc !5491
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #25, !dbg !5492, !srcloc !5493
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #25, !dbg !5494, !srcloc !5495
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #25, !dbg !5496, !srcloc !5497
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #25, !dbg !5498, !srcloc !5499
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #25, !dbg !5500, !srcloc !5501
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #25, !dbg !5502, !srcloc !5503
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #25, !dbg !5504, !srcloc !5505
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #25, !dbg !5506, !srcloc !5507
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #25, !dbg !5508, !srcloc !5509
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #25, !dbg !5510, !srcloc !5511
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #25, !dbg !5512, !srcloc !5513
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #25, !dbg !5514, !srcloc !5515
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #25, !dbg !5516, !srcloc !5517
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #25, !dbg !5518, !srcloc !5519
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #25, !dbg !5520, !srcloc !5521
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #25, !dbg !5522, !srcloc !5523
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #25, !dbg !5524, !srcloc !5525
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #25, !dbg !5526, !srcloc !5527
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #25, !dbg !5528, !srcloc !5529
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #25, !dbg !5530, !srcloc !5531
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #25, !dbg !5532, !srcloc !5533
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #25, !dbg !5534, !srcloc !5535
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #25, !dbg !5536, !srcloc !5537
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #25, !dbg !5538, !srcloc !5539
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #25, !dbg !5540, !srcloc !5541
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #25, !dbg !5542, !srcloc !5543
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #25, !dbg !5544, !srcloc !5545
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #25, !dbg !5546, !srcloc !5547
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #25, !dbg !5548, !srcloc !5549
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #25, !dbg !5550, !srcloc !5551
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #25, !dbg !5552, !srcloc !5553
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #25, !dbg !5554, !srcloc !5555
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #25, !dbg !5556, !srcloc !5557
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #25, !dbg !5558, !srcloc !5559
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #25, !dbg !5560, !srcloc !5561
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #25, !dbg !5562, !srcloc !5563
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #25, !dbg !5564, !srcloc !5565
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #25, !dbg !5566, !srcloc !5567
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #25, !dbg !5568, !srcloc !5569
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #25, !dbg !5570, !srcloc !5571
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #25, !dbg !5572, !srcloc !5573
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #25, !dbg !5574, !srcloc !5575
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #25, !dbg !5576, !srcloc !5577
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !5578, !srcloc !5579
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #25, !dbg !5580, !srcloc !5581
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #25, !dbg !5582, !srcloc !5583
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #25, !dbg !5584, !srcloc !5585
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HANDLER\0A\09.equ\09CONFIG_CONSOLE_HANDLER,1\0A\09.type\09CONFIG_CONSOLE_HANDLER,%object", ""() #25, !dbg !5586, !srcloc !5587
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #25, !dbg !5588, !srcloc !5589
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #25, !dbg !5590, !srcloc !5591
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #25, !dbg !5592, !srcloc !5593
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #25, !dbg !5594, !srcloc !5595
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #25, !dbg !5596, !srcloc !5597
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #25, !dbg !5598, !srcloc !5599
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #25, !dbg !5600, !srcloc !5601
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #25, !dbg !5602, !srcloc !5603
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #25, !dbg !5604, !srcloc !5605
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #25, !dbg !5606, !srcloc !5607
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #25, !dbg !5608, !srcloc !5609
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #25, !dbg !5610, !srcloc !5611
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #25, !dbg !5612, !srcloc !5613
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #25, !dbg !5614, !srcloc !5615
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #25, !dbg !5616, !srcloc !5617
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #25, !dbg !5618, !srcloc !5619
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #25, !dbg !5620, !srcloc !5621
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #25, !dbg !5622, !srcloc !5623
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #25, !dbg !5624, !srcloc !5625
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #25, !dbg !5626, !srcloc !5627
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #25, !dbg !5628, !srcloc !5629
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #25, !dbg !5630, !srcloc !5631
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #25, !dbg !5632, !srcloc !5633
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #25, !dbg !5634, !srcloc !5635
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #25, !dbg !5636, !srcloc !5637
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #25, !dbg !5638, !srcloc !5639
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,16000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #25, !dbg !5640, !srcloc !5641
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #25, !dbg !5642, !srcloc !5643
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #25, !dbg !5644, !srcloc !5645
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #25, !dbg !5646, !srcloc !5647
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #25, !dbg !5648, !srcloc !5649
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #25, !dbg !5650, !srcloc !5651
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #25, !dbg !5652, !srcloc !5653
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #25, !dbg !5654, !srcloc !5655
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #25, !dbg !5656, !srcloc !5657
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #25, !dbg !5658, !srcloc !5659
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #25, !dbg !5660, !srcloc !5661
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #25, !dbg !5662, !srcloc !5663
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #25, !dbg !5664, !srcloc !5665
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #25, !dbg !5666, !srcloc !5667
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #25, !dbg !5668, !srcloc !5669
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #25, !dbg !5670, !srcloc !5671
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #25, !dbg !5672, !srcloc !5673
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #25, !dbg !5674, !srcloc !5675
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #25, !dbg !5676, !srcloc !5677
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #25, !dbg !5678, !srcloc !5679
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #25, !dbg !5680, !srcloc !5681
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #25, !dbg !5682, !srcloc !5683
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #25, !dbg !5684, !srcloc !5685
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #25, !dbg !5686, !srcloc !5687
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #25, !dbg !5688, !srcloc !5689
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #25, !dbg !5690, !srcloc !5691
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_SUBSYS\0A\09.equ\09CONFIG_CONSOLE_SUBSYS,1\0A\09.type\09CONFIG_CONSOLE_SUBSYS,%object", ""() #25, !dbg !5692, !srcloc !5693
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_GETLINE\0A\09.equ\09CONFIG_CONSOLE_GETLINE,1\0A\09.type\09CONFIG_CONSOLE_GETLINE,%object", ""() #25, !dbg !5694, !srcloc !5695
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #25, !dbg !5696, !srcloc !5697
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #25, !dbg !5698, !srcloc !5699
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #25, !dbg !5700, !srcloc !5701
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #25, !dbg !5702, !srcloc !5703
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #25, !dbg !5704, !srcloc !5705
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !5706, !srcloc !5707
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #25, !dbg !5708, !srcloc !5709
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #25, !dbg !5710, !srcloc !5711
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #25, !dbg !5712, !srcloc !5713
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #25, !dbg !5714, !srcloc !5715
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #25, !dbg !5716, !srcloc !5717
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #25, !dbg !5718, !srcloc !5719
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #25, !dbg !5720, !srcloc !5721
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #25, !dbg !5722, !srcloc !5723
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #25, !dbg !5724, !srcloc !5725
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #25, !dbg !5726, !srcloc !5727
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #25, !dbg !5728, !srcloc !5729
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #25, !dbg !5730, !srcloc !5731
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #25, !dbg !5732, !srcloc !5733
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #25, !dbg !5734, !srcloc !5735
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #25, !dbg !5736, !srcloc !5737
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #25, !dbg !5738, !srcloc !5739
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #25, !dbg !5740, !srcloc !5741
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #25, !dbg !5742, !srcloc !5743
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #25, !dbg !5744, !srcloc !5745
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #25, !dbg !5746, !srcloc !5747
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #25, !dbg !5748, !srcloc !5749
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #25, !dbg !5750, !srcloc !5751
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #25, !dbg !5752, !srcloc !5753
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #25, !dbg !5754, !srcloc !5755
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #25, !dbg !5756, !srcloc !5757
  ret void, !dbg !5758
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !5759 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5761, metadata !DIExpression()), !dbg !5763
  tail call fastcc void @LL_FLASH_EnableInstCache() #27, !dbg !5764
  tail call fastcc void @LL_FLASH_EnableDataCache() #27, !dbg !5765
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !5766, !srcloc !5775
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !5766
  call void @llvm.dbg.value(metadata i32 %3, metadata !5772, metadata !DIExpression()) #25, !dbg !5776
  call void @llvm.dbg.value(metadata i32 undef, metadata !5773, metadata !DIExpression()) #25, !dbg !5776
  call void @llvm.dbg.value(metadata i32 %3, metadata !5762, metadata !DIExpression()), !dbg !5763
  call void @llvm.dbg.value(metadata i32 %3, metadata !5777, metadata !DIExpression()) #25, !dbg !5782
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !5784, !srcloc !5785
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !5786
  ret i32 0, !dbg !5787
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #15 !dbg !5788 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5790
  %2 = or i32 %1, 512, !dbg !5790
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5790
  ret void, !dbg !5791
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #15 !dbg !5792 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5793
  %2 = or i32 %1, 1024, !dbg !5793
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5793
  ret void, !dbg !5794
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #11 !dbg !5795 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5797, metadata !DIExpression()), !dbg !5798
  ret i32 0, !dbg !5799
}

; Function Attrs: noinline nounwind optsize
define dso_local nonnull i8* @console_getline() local_unnamed_addr #1 !dbg !341 {
  %1 = load %struct.console_input*, %struct.console_input** @console_getline.cmd, align 4, !dbg !5800
  %2 = icmp eq %struct.console_input* %1, null, !dbg !5802
  br i1 %2, label %5, label %3, !dbg !5803

3:                                                ; preds = %0
  %4 = bitcast %struct.console_input* %1 to i8*, !dbg !5804
  tail call void @k_queue_append(%struct.k_queue* noundef getelementptr inbounds (%struct.k_fifo, %struct.k_fifo* @free_queue, i32 0, i32 0), i8* noundef nonnull %4) #26, !dbg !5804
  br label %5, !dbg !5807

5:                                                ; preds = %3, %0
  %6 = tail call fastcc i8* @k_queue_get() #27, !dbg !5808
  call void @llvm.dbg.value(metadata i8* %6, metadata !346, metadata !DIExpression()), !dbg !5809
  store i8* %6, i8** bitcast (%struct.console_input** @console_getline.cmd to i8**), align 4, !dbg !5810
  %7 = getelementptr inbounds i8, i8* %6, i32 5, !dbg !5811
  ret i8* %7, !dbg !5812
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @k_queue_get() unnamed_addr #1 !dbg !5813 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !5823, metadata !DIExpression()), !dbg !5824
  call void @llvm.dbg.value(metadata %struct.k_queue* getelementptr inbounds (%struct.k_fifo, %struct.k_fifo* @used_queue, i32 0, i32 0), metadata !5822, metadata !DIExpression()), !dbg !5824
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !5825, !srcloc !5827
  %1 = tail call i8* @z_impl_k_queue_get(%struct.k_queue* noundef getelementptr inbounds (%struct.k_fifo, %struct.k_fifo* @used_queue, i32 0, i32 0), [1 x i64] [i64 -1]) #26, !dbg !5828
  ret i8* %1, !dbg !5829
}

; Function Attrs: noinline nounwind optsize
define dso_local void @console_getline_init() local_unnamed_addr #1 !dbg !5830 {
  call void @llvm.dbg.value(metadata i32 0, metadata !5832, metadata !DIExpression()), !dbg !5833
  call void @llvm.dbg.value(metadata i32 0, metadata !5832, metadata !DIExpression()), !dbg !5833
  tail call void @k_queue_append(%struct.k_queue* noundef getelementptr inbounds (%struct.k_fifo, %struct.k_fifo* @free_queue, i32 0, i32 0), i8* noundef nonnull bitcast ([2 x %struct.console_input]* @line_bufs to i8*)) #26, !dbg !5834
  call void @llvm.dbg.value(metadata i32 0, metadata !5832, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5833
  call void @llvm.dbg.value(metadata i32 0, metadata !5832, metadata !DIExpression()), !dbg !5833
  tail call void @k_queue_append(%struct.k_queue* noundef getelementptr inbounds (%struct.k_fifo, %struct.k_fifo* @free_queue, i32 0, i32 0), i8* noundef nonnull bitcast (%struct.console_input* getelementptr inbounds ([2 x %struct.console_input], [2 x %struct.console_input]* @line_bufs, i32 0, i32 1) to i8*)) #26, !dbg !5834
  call void @llvm.dbg.value(metadata i32 0, metadata !5832, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5833
  tail call void @uart_register_input(%struct.k_fifo* noundef nonnull @free_queue, %struct.k_fifo* noundef nonnull @used_queue, i8 (i8*, i8)* noundef null) #26, !dbg !5839
  ret void, !dbg !5840
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !5841 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5890, metadata !DIExpression()), !dbg !5892
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !5891, metadata !DIExpression()), !dbg !5892
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #26, !dbg !5893
  ret void, !dbg !5894
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !5895 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5912, metadata !DIExpression()), !dbg !5915
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !5913, metadata !DIExpression()), !dbg !5915
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !5916
  %4 = load i32, i32* %3, align 4, !dbg !5916
  call void @llvm.dbg.value(metadata i32 %4, metadata !5914, metadata !DIExpression()), !dbg !5915
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #27, !dbg !5917
  ret void, !dbg !5918
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #2 !dbg !5919 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5923, metadata !DIExpression()), !dbg !5926
  call void @llvm.dbg.value(metadata i8* %0, metadata !5924, metadata !DIExpression()), !dbg !5926
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !5927
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #25, !dbg !5927
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !5925, metadata !DIExpression()), !dbg !5928
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !5928
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !5929
  %5 = bitcast i8* %4 to i32*, !dbg !5929
  %6 = load i32, i32* %5, align 4, !dbg !5929
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !5930
  store i32 %6, i32* %7, align 4, !dbg !5931
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #27, !dbg !5932
  unreachable, !dbg !5933
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !5934 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5937, metadata !DIExpression()), !dbg !5938
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #27, !dbg !5939
  ret void, !dbg !5940
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !5941 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5945, metadata !DIExpression()), !dbg !5946
  %2 = icmp sgt i32 %0, -1, !dbg !5947
  br i1 %2, label %3, label %8, !dbg !5949

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !5950, !srcloc !5952
  %4 = and i32 %0, 31, !dbg !5953
  %5 = shl nuw i32 1, %4, !dbg !5954
  %6 = lshr i32 %0, 5, !dbg !5955
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !5956
  store volatile i32 %5, i32* %7, align 4, !dbg !5957
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !5958, !srcloc !5959
  br label %8, !dbg !5960

8:                                                ; preds = %3, %1
  ret void, !dbg !5961
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !5962 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5964, metadata !DIExpression()), !dbg !5965
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #27, !dbg !5966
  ret void, !dbg !5967
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !5968 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5970, metadata !DIExpression()), !dbg !5971
  %2 = icmp sgt i32 %0, -1, !dbg !5972
  br i1 %2, label %3, label %8, !dbg !5974

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !5975
  %5 = shl nuw i32 1, %4, !dbg !5977
  %6 = lshr i32 %0, 5, !dbg !5978
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !5979
  store volatile i32 %5, i32* %7, align 4, !dbg !5980
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !5981, !srcloc !5985
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !5986, !srcloc !5989
  br label %8, !dbg !5990

8:                                                ; preds = %3, %1
  ret void, !dbg !5991
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #16 !dbg !5992 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5996, metadata !DIExpression()), !dbg !5997
  %2 = lshr i32 %0, 5, !dbg !5998
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !5999
  %4 = load volatile i32, i32* %3, align 4, !dbg !5999
  %5 = and i32 %0, 31, !dbg !6000
  %6 = shl nuw i32 1, %5, !dbg !6000
  %7 = and i32 %4, %6, !dbg !6001
  ret i32 %7, !dbg !6002
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !6003 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6007, metadata !DIExpression()), !dbg !6010
  call void @llvm.dbg.value(metadata i32 %1, metadata !6008, metadata !DIExpression()), !dbg !6010
  call void @llvm.dbg.value(metadata i32 %2, metadata !6009, metadata !DIExpression()), !dbg !6010
  %4 = add i32 %1, 1, !dbg !6011
  call void @llvm.dbg.value(metadata i32 %4, metadata !6008, metadata !DIExpression()), !dbg !6010
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #27, !dbg !6014
  ret void, !dbg !6015
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !6016 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6020, metadata !DIExpression()), !dbg !6022
  call void @llvm.dbg.value(metadata i32 %1, metadata !6021, metadata !DIExpression()), !dbg !6022
  %3 = trunc i32 %1 to i8, !dbg !6023
  %4 = shl i8 %3, 4, !dbg !6023
  %5 = and i32 %0, 15, !dbg !6025
  %6 = add nsw i32 %5, -4, !dbg !6025
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6025
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6025
  %9 = icmp slt i32 %0, 0, !dbg !6025
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6025
  store volatile i8 %4, i8* %10, align 1, !dbg !6023
  ret void, !dbg !6026
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !6027 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6029, metadata !DIExpression()), !dbg !6030
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #26, !dbg !6031
  ret void, !dbg !6032
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6033 {
  tail call void @z_SysNmiOnReset() #26, !dbg !6035
  tail call void @z_arm_int_exit() #26, !dbg !6036
  ret void, !dbg !6037
}

; Function Attrs: optsize
declare !dbg !6038 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6039 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #2 !dbg !6041 {
  tail call fastcc void @relocate_vector_table() #27, !dbg !6043
  tail call fastcc void @z_arm_floating_point_init() #27, !dbg !6044
  tail call void @z_bss_zero() #26, !dbg !6045
  tail call void @z_data_copy() #26, !dbg !6046
  tail call void @z_arm_interrupt_init() #26, !dbg !6047
  tail call void @z_cstart() #29, !dbg !6048
  unreachable, !dbg !6048
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6049 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6050
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !6051, !srcloc !6054
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6055, !srcloc !6058
  ret void, !dbg !6059
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !6060 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6061
  %2 = and i32 %1, -15728641, !dbg !6061
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6061
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #25, !dbg !6062, !srcloc !6069
  call void @llvm.dbg.value(metadata i32 %3, metadata !6067, metadata !DIExpression()) #25, !dbg !6070
  %4 = and i32 %3, -5, !dbg !6071
  call void @llvm.dbg.value(metadata i32 %4, metadata !6072, metadata !DIExpression()) #25, !dbg !6077
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #25, !dbg !6079, !srcloc !6080
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6081, !srcloc !6058
  ret void, !dbg !6083
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6084 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6087, metadata !DIExpression()), !dbg !6088
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6089
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !6090
  store i32 %0, i32* %3, align 4, !dbg !6091
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6092
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !6093
  store i32 %4, i32* %5, align 4, !dbg !6094
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6095
  %7 = or i32 %6, 268435456, !dbg !6095
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6095
  call void @llvm.dbg.value(metadata i32 0, metadata !6096, metadata !DIExpression()) #25, !dbg !6099
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #25, !dbg !6101, !srcloc !6102
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6103
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !6104
  %10 = load i32, i32* %9, align 4, !dbg !6104
  ret i32 %10, !dbg !6105
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #4 !dbg !6106 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6216, metadata !DIExpression()), !dbg !6224
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !6217, metadata !DIExpression()), !dbg !6224
  call void @llvm.dbg.value(metadata i8* %2, metadata !6218, metadata !DIExpression()), !dbg !6224
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !6219, metadata !DIExpression()), !dbg !6224
  call void @llvm.dbg.value(metadata i8* %4, metadata !6220, metadata !DIExpression()), !dbg !6224
  call void @llvm.dbg.value(metadata i8* %5, metadata !6221, metadata !DIExpression()), !dbg !6224
  call void @llvm.dbg.value(metadata i8* %6, metadata !6222, metadata !DIExpression()), !dbg !6224
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !6225
  call void @llvm.dbg.value(metadata i8* %8, metadata !6223, metadata !DIExpression()), !dbg !6224
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !6226
  %10 = bitcast i8* %9 to i32*, !dbg !6226
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !6227
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !6228
  %12 = bitcast i8* %8 to i32*, !dbg !6229
  store i32 %11, i32* %12, align 4, !dbg !6230
  %13 = ptrtoint i8* %4 to i32, !dbg !6231
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !6232
  %15 = bitcast i8* %14 to i32*, !dbg !6232
  store i32 %13, i32* %15, align 4, !dbg !6233
  %16 = ptrtoint i8* %5 to i32, !dbg !6234
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !6235
  %18 = bitcast i8* %17 to i32*, !dbg !6235
  store i32 %16, i32* %18, align 4, !dbg !6236
  %19 = ptrtoint i8* %6 to i32, !dbg !6237
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !6238
  %21 = bitcast i8* %20 to i32*, !dbg !6238
  store i32 %19, i32* %21, align 4, !dbg !6239
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !6240
  %23 = bitcast i8* %22 to i32*, !dbg !6240
  store i32 16777216, i32* %23, align 4, !dbg !6241
  %24 = ptrtoint i8* %8 to i32, !dbg !6242
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !6243
  store i32 %24, i32* %25, align 8, !dbg !6244
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !6245
  store i32 0, i32* %26, align 4, !dbg !6246
  ret void, !dbg !6247
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !6248 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6253, metadata !DIExpression()), !dbg !6259
  call void @llvm.dbg.value(metadata i32 %1, metadata !6254, metadata !DIExpression()), !dbg !6259
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6260
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !6255, metadata !DIExpression()), !dbg !6259
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !6261
  br i1 %4, label %19, label %5, !dbg !6263

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !6258, metadata !DIExpression()), !dbg !6259
  %6 = icmp eq i32 %0, -22, !dbg !6264
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !6264
  %8 = load i32, i32* %7, align 4, !dbg !6264
  br i1 %6, label %16, label %9, !dbg !6266

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !6264
  %11 = icmp ule i32 %10, %0, !dbg !6264
  %12 = icmp ugt i32 %8, %0, !dbg !6264
  %13 = and i1 %12, %11, !dbg !6264
  %14 = icmp ugt i32 %8, %1, !dbg !6264
  %15 = and i1 %14, %13, !dbg !6264
  br i1 %15, label %18, label %19, !dbg !6264

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !6264
  br i1 %17, label %18, label %19, !dbg !6266

18:                                               ; preds = %9, %16
  br label %19, !dbg !6267

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !6259
  ret i32 %20, !dbg !6269
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #2 !dbg !6270 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6274, metadata !DIExpression()), !dbg !6277
  call void @llvm.dbg.value(metadata i8* %1, metadata !6275, metadata !DIExpression()), !dbg !6277
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !6276, metadata !DIExpression()), !dbg !6277
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6278
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #26, !dbg !6279
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #25, !dbg !6280, !srcloc !6281
  unreachable, !dbg !6282
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !6283 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6301, metadata !DIExpression()), !dbg !6311
  call void @llvm.dbg.value(metadata i32 %1, metadata !6302, metadata !DIExpression()), !dbg !6311
  call void @llvm.dbg.value(metadata i32 %2, metadata !6303, metadata !DIExpression()), !dbg !6311
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !6304, metadata !DIExpression()), !dbg !6311
  call void @llvm.dbg.value(metadata i32 0, metadata !6305, metadata !DIExpression()), !dbg !6311
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6312
  %9 = and i32 %8, 511, !dbg !6313
  call void @llvm.dbg.value(metadata i32 %9, metadata !6306, metadata !DIExpression()), !dbg !6311
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #25, !dbg !6314
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #25, !dbg !6314
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !6315
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #25, !dbg !6315
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !6310, metadata !DIExpression()), !dbg !6316
  call void @llvm.dbg.value(metadata i32 0, metadata !6317, metadata !DIExpression()) #25, !dbg !6320
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #25, !dbg !6322, !srcloc !6323
  call void @llvm.dbg.value(metadata i8* %6, metadata !6308, metadata !DIExpression(DW_OP_deref)), !dbg !6311
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #27, !dbg !6324
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !6309, metadata !DIExpression()), !dbg !6311
  call void @llvm.dbg.value(metadata i8* %5, metadata !6307, metadata !DIExpression(DW_OP_deref)), !dbg !6311
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #27, !dbg !6325
  call void @llvm.dbg.value(metadata i32 %12, metadata !6305, metadata !DIExpression()), !dbg !6311
  %13 = load i8, i8* %5, align 1, !dbg !6326, !range !6328
  call void @llvm.dbg.value(metadata i8 %13, metadata !6307, metadata !DIExpression()), !dbg !6311
  %14 = icmp eq i8 %13, 0, !dbg !6326
  br i1 %14, label %15, label %32, !dbg !6329

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !6330
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #26, !dbg !6331
  %18 = load i8, i8* %6, align 1, !dbg !6332, !range !6328
  call void @llvm.dbg.value(metadata i8 %18, metadata !6308, metadata !DIExpression()), !dbg !6311
  %19 = icmp eq i8 %18, 0, !dbg !6332
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !6334
  %21 = load i32, i32* %20, align 4, !dbg !6334
  br i1 %19, label %27, label %22, !dbg !6335

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !6336
  %24 = icmp eq i32 %23, 0, !dbg !6339
  br i1 %24, label %25, label %31, !dbg !6340

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !6341
  br label %29, !dbg !6343

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !6344
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !6334
  br label %31, !dbg !6346

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #26, !dbg !6346
  br label %32, !dbg !6347

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #25, !dbg !6347
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #25, !dbg !6347
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #25, !dbg !6347
  ret void, !dbg !6347
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #4 !dbg !6348 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6353, metadata !DIExpression()), !dbg !6359
  call void @llvm.dbg.value(metadata i32 %1, metadata !6354, metadata !DIExpression()), !dbg !6359
  call void @llvm.dbg.value(metadata i32 %2, metadata !6355, metadata !DIExpression()), !dbg !6359
  call void @llvm.dbg.value(metadata i8* %3, metadata !6356, metadata !DIExpression()), !dbg !6359
  call void @llvm.dbg.value(metadata i8 0, metadata !6357, metadata !DIExpression()), !dbg !6359
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !6358, metadata !DIExpression()), !dbg !6359
  store i8 0, i8* %3, align 1, !dbg !6360
  %5 = icmp ult i32 %2, -16777216, !dbg !6361
  %6 = and i32 %2, 12
  %7 = icmp eq i32 %6, 8
  %8 = or i1 %5, %7, !dbg !6363
  br i1 %8, label %16, label %9, !dbg !6363

9:                                                ; preds = %4
  %10 = and i32 %2, 8, !dbg !6364
  %11 = icmp eq i32 %10, 0, !dbg !6364
  br i1 %11, label %12, label %13, !dbg !6366

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %0, metadata !6358, metadata !DIExpression()), !dbg !6359
  store i8 1, i8* %3, align 1, !dbg !6369
  br label %13

13:                                               ; preds = %9, %12
  %14 = phi i32 [ %0, %12 ], [ %1, %9 ]
  %15 = inttoptr i32 %14 to %struct.__esf*, !dbg !6359
  call void @llvm.dbg.value(metadata %struct.__esf* %15, metadata !6358, metadata !DIExpression()), !dbg !6359
  br label %16, !dbg !6372

16:                                               ; preds = %4, %13
  %17 = phi %struct.__esf* [ %15, %13 ], [ null, %4 ], !dbg !6359
  ret %struct.__esf* %17, !dbg !6373
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !6374 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6378, metadata !DIExpression()), !dbg !6382
  call void @llvm.dbg.value(metadata i32 %1, metadata !6379, metadata !DIExpression()), !dbg !6382
  call void @llvm.dbg.value(metadata i8* %2, metadata !6380, metadata !DIExpression()), !dbg !6382
  call void @llvm.dbg.value(metadata i32 0, metadata !6381, metadata !DIExpression()), !dbg !6382
  store i8 0, i8* %2, align 1, !dbg !6383
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !6384

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #27, !dbg !6385
  call void @llvm.dbg.value(metadata i32 %5, metadata !6381, metadata !DIExpression()), !dbg !6382
  br label %11, !dbg !6387

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #27, !dbg !6388
  call void @llvm.dbg.value(metadata i32 %7, metadata !6381, metadata !DIExpression()), !dbg !6382
  br label %11, !dbg !6389

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #27, !dbg !6390
  call void @llvm.dbg.value(metadata i32 0, metadata !6381, metadata !DIExpression()), !dbg !6382
  br label %11, !dbg !6391

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #27, !dbg !6392
  call void @llvm.dbg.value(metadata i32 0, metadata !6381, metadata !DIExpression()), !dbg !6382
  br label %11, !dbg !6393

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #27, !dbg !6394
  br label %11, !dbg !6395

11:                                               ; preds = %4, %6, %8, %9, %10, %3
  %12 = phi i32 [ 0, %3 ], [ %5, %4 ], [ %7, %6 ], [ 0, %8 ], [ 0, %9 ], [ 0, %10 ]
  ret i32 %12, !dbg !6396
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6397 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6401, metadata !DIExpression()), !dbg !6404
  call void @llvm.dbg.value(metadata i8* %1, metadata !6402, metadata !DIExpression()), !dbg !6404
  call void @llvm.dbg.value(metadata i32 0, metadata !6403, metadata !DIExpression()), !dbg !6404
  store i8 0, i8* %1, align 1, !dbg !6405
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6406
  %4 = and i32 %3, 2, !dbg !6408
  %5 = icmp eq i32 %4, 0, !dbg !6409
  br i1 %5, label %6, label %33, !dbg !6410

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6411
  %8 = icmp sgt i32 %7, -1, !dbg !6413
  br i1 %8, label %9, label %33, !dbg !6414

9:                                                ; preds = %6
  %10 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6415
  %11 = and i32 %10, 1073741824, !dbg !6417
  %12 = icmp eq i32 %11, 0, !dbg !6418
  br i1 %12, label %33, label %13, !dbg !6419

13:                                               ; preds = %9
  %14 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #27, !dbg !6420
  br i1 %14, label %15, label %18, !dbg !6423

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6424
  %17 = load i32, i32* %16, align 4, !dbg !6424
  call void @llvm.dbg.value(metadata i32 %17, metadata !6403, metadata !DIExpression()), !dbg !6404
  br label %33, !dbg !6426

18:                                               ; preds = %13
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6427
  %20 = and i32 %19, 255, !dbg !6429
  %21 = icmp eq i32 %20, 0, !dbg !6430
  br i1 %21, label %24, label %22, !dbg !6431

22:                                               ; preds = %18
  %23 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #27, !dbg !6432
  call void @llvm.dbg.value(metadata i32 %23, metadata !6403, metadata !DIExpression()), !dbg !6404
  br label %33, !dbg !6434

24:                                               ; preds = %18
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6435
  %26 = and i32 %25, 65280, !dbg !6437
  %27 = icmp eq i32 %26, 0, !dbg !6438
  br i1 %27, label %29, label %28, !dbg !6439

28:                                               ; preds = %24
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #27, !dbg !6440
  call void @llvm.dbg.value(metadata i32 0, metadata !6403, metadata !DIExpression()), !dbg !6404
  br label %33, !dbg !6442

29:                                               ; preds = %24
  %30 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6443
  %31 = icmp ult i32 %30, 65536, !dbg !6445
  br i1 %31, label %33, label %32, !dbg !6446

32:                                               ; preds = %29
  tail call fastcc void @usage_fault() #27, !dbg !6447
  call void @llvm.dbg.value(metadata i32 0, metadata !6403, metadata !DIExpression()), !dbg !6404
  br label %33, !dbg !6449

33:                                               ; preds = %6, %9, %15, %28, %29, %32, %22, %2
  %34 = phi i32 [ 0, %2 ], [ 0, %6 ], [ %17, %15 ], [ %23, %22 ], [ 0, %28 ], [ 0, %32 ], [ 0, %29 ], [ 0, %9 ], !dbg !6404
  call void @llvm.dbg.value(metadata i32 %34, metadata !6403, metadata !DIExpression()), !dbg !6404
  ret i32 %34, !dbg !6450
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !6451 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6453, metadata !DIExpression()), !dbg !6466
  call void @llvm.dbg.value(metadata i32 %1, metadata !6454, metadata !DIExpression()), !dbg !6466
  call void @llvm.dbg.value(metadata i8* %2, metadata !6455, metadata !DIExpression()), !dbg !6466
  call void @llvm.dbg.value(metadata i32 0, metadata !6456, metadata !DIExpression()), !dbg !6466
  call void @llvm.dbg.value(metadata i32 -22, metadata !6457, metadata !DIExpression()), !dbg !6466
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6467
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6469
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6471
  %7 = and i32 %6, 2, !dbg !6472
  %8 = icmp eq i32 %7, 0, !dbg !6473
  br i1 %8, label %19, label %9, !dbg !6474

9:                                                ; preds = %3
  %10 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !6475
  call void @llvm.dbg.value(metadata i32 %10, metadata !6458, metadata !DIExpression()), !dbg !6476
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6477
  %12 = and i32 %11, 128, !dbg !6479
  %13 = icmp eq i32 %12, 0, !dbg !6480
  br i1 %13, label %19, label %14, !dbg !6481

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !6457, metadata !DIExpression()), !dbg !6466
  %15 = icmp eq i32 %1, 0, !dbg !6482
  br i1 %15, label %19, label %16, !dbg !6485

16:                                               ; preds = %14
  %17 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6486
  %18 = and i32 %17, -129, !dbg !6486
  store volatile i32 %18, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6486
  br label %19, !dbg !6488

19:                                               ; preds = %9, %16, %14, %3
  %20 = phi i32 [ -22, %3 ], [ %10, %16 ], [ %10, %14 ], [ -22, %9 ], !dbg !6466
  call void @llvm.dbg.value(metadata i32 %20, metadata !6457, metadata !DIExpression()), !dbg !6466
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6489
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6491
  %23 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6493
  %24 = and i32 %23, 16, !dbg !6494
  %25 = icmp eq i32 %24, 0, !dbg !6494
  br i1 %25, label %26, label %30, !dbg !6495

26:                                               ; preds = %19
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6496
  %28 = and i32 %27, 2, !dbg !6497
  %29 = icmp eq i32 %28, 0, !dbg !6497
  br i1 %29, label %39, label %30, !dbg !6498

30:                                               ; preds = %26, %19
  %31 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6499
  %32 = and i32 %31, 2048, !dbg !6500
  %33 = icmp eq i32 %32, 0, !dbg !6500
  br i1 %33, label %39, label %34, !dbg !6501

34:                                               ; preds = %30
  %35 = ptrtoint %struct.__esf* %0 to i32, !dbg !6502
  %36 = tail call i32 @z_check_thread_stack_fail(i32 noundef %20, i32 noundef %35) #26, !dbg !6503
  call void @llvm.dbg.value(metadata i32 %36, metadata !6461, metadata !DIExpression()), !dbg !6504
  %37 = icmp eq i32 %36, 0, !dbg !6505
  br i1 %37, label %39, label %38, !dbg !6507

38:                                               ; preds = %34
  call void @llvm.dbg.value(metadata i32 %36, metadata !6508, metadata !DIExpression()) #25, !dbg !6511
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %36) #25, !dbg !6514, !srcloc !6515
  call void @llvm.dbg.value(metadata i32 2, metadata !6456, metadata !DIExpression()), !dbg !6466
  br label %39, !dbg !6516

39:                                               ; preds = %38, %34, %30, %26
  %40 = phi i32 [ 0, %30 ], [ 0, %26 ], [ 2, %38 ], [ 0, %34 ], !dbg !6466
  call void @llvm.dbg.value(metadata i32 %40, metadata !6456, metadata !DIExpression()), !dbg !6466
  %41 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6517
  %42 = and i32 %41, 32, !dbg !6519
  %43 = icmp eq i32 %42, 0, !dbg !6520
  br i1 %43, label %47, label %44, !dbg !6521

44:                                               ; preds = %39
  %45 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6522
  %46 = and i32 %45, -8193, !dbg !6522
  store volatile i32 %46, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6522
  br label %47, !dbg !6524

47:                                               ; preds = %44, %39
  %48 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6525
  %49 = or i32 %48, 255, !dbg !6525
  store volatile i32 %49, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6525
  store i8 0, i8* %2, align 1, !dbg !6526
  ret i32 %40, !dbg !6527
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !6528 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6532, metadata !DIExpression()), !dbg !6539
  call void @llvm.dbg.value(metadata i32 %0, metadata !6533, metadata !DIExpression()), !dbg !6539
  call void @llvm.dbg.value(metadata i8* %1, metadata !6534, metadata !DIExpression()), !dbg !6539
  call void @llvm.dbg.value(metadata i32 0, metadata !6535, metadata !DIExpression()), !dbg !6539
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6540
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6542
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6544
  %6 = and i32 %5, 512, !dbg !6545
  %7 = icmp eq i32 %6, 0, !dbg !6545
  br i1 %7, label %18, label %8, !dbg !6546

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !6547
  call void @llvm.dbg.value(metadata i32 %9, metadata !6536, metadata !DIExpression()), !dbg !6548
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6549
  %11 = and i32 %10, 32768, !dbg !6551
  %12 = icmp ne i32 %11, 0, !dbg !6552
  %13 = icmp ne i32 %0, 0
  %14 = and i1 %13, %12, !dbg !6553
  br i1 %14, label %15, label %18, !dbg !6553

15:                                               ; preds = %8
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6554
  %17 = and i32 %16, -32769, !dbg !6554
  store volatile i32 %17, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6554
  br label %18, !dbg !6558

18:                                               ; preds = %8, %15, %2
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6559
  %20 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6561
  %21 = and i32 %20, 256, !dbg !6563
  %22 = icmp eq i32 %21, 0, !dbg !6564
  br i1 %22, label %23, label %25, !dbg !6565

23:                                               ; preds = %18
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6566
  br label %25

25:                                               ; preds = %18, %23
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6568
  %27 = or i32 %26, 65280, !dbg !6568
  store volatile i32 %27, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6568
  store i8 0, i8* %1, align 1, !dbg !6569
  ret void, !dbg !6570
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #15 !dbg !6571 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6577, metadata !DIExpression()), !dbg !6579
  call void @llvm.dbg.value(metadata i32 0, metadata !6578, metadata !DIExpression()), !dbg !6579
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6580
  %2 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6582
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6584
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6586
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6588
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6590
  %7 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6592
  %8 = or i32 %7, -65536, !dbg !6592
  store volatile i32 %8, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6592
  ret void, !dbg !6593
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !6594 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6598, metadata !DIExpression()), !dbg !6600
  call void @llvm.dbg.value(metadata i8* %0, metadata !6599, metadata !DIExpression()), !dbg !6600
  store i8 0, i8* %0, align 1, !dbg !6601
  ret void, !dbg !6602
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6603 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6607, metadata !DIExpression()), !dbg !6610
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !6611
  %3 = load i32, i32* %2, align 4, !dbg !6611
  %4 = inttoptr i32 %3 to i16*, !dbg !6612
  call void @llvm.dbg.value(metadata i16* %4, metadata !6608, metadata !DIExpression()), !dbg !6610
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6613
  %6 = or i32 %5, 256, !dbg !6613
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6613
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !6614, !srcloc !6617
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6618, !srcloc !6621
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !6622
  %8 = load i16, i16* %7, align 2, !dbg !6623
  call void @llvm.dbg.value(metadata i16 %8, metadata !6609, metadata !DIExpression()), !dbg !6610
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6624
  %10 = and i32 %9, -257, !dbg !6624
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6624
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !6625, !srcloc !6617
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6627, !srcloc !6621
  %11 = icmp eq i16 %8, -8446, !dbg !6629
  ret i1 %11, !dbg !6631
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #15 !dbg !6632 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6633
  %2 = or i32 %1, 16, !dbg !6633
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6633
  ret void, !dbg !6634
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #15 !dbg !6635 {
  call void @llvm.dbg.value(metadata i32 0, metadata !6638, metadata !DIExpression()), !dbg !6639
  br label %1, !dbg !6640

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !6638, metadata !DIExpression()), !dbg !6639
  tail call fastcc void @__NVIC_SetPriority.16(i32 noundef %2) #27, !dbg !6642
  %3 = add nuw nsw i32 %2, 1, !dbg !6645
  call void @llvm.dbg.value(metadata i32 %3, metadata !6638, metadata !DIExpression()), !dbg !6639
  %4 = icmp eq i32 %3, 85, !dbg !6646
  br i1 %4, label %5, label %1, !dbg !6640, !llvm.loop !6647

5:                                                ; preds = %1
  ret void, !dbg !6649
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.16(i32 noundef %0) unnamed_addr #15 !dbg !6650 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6652, metadata !DIExpression()), !dbg !6654
  call void @llvm.dbg.value(metadata i32 1, metadata !6653, metadata !DIExpression()), !dbg !6654
  %2 = and i32 %0, 15, !dbg !6655
  %3 = add nsw i32 %2, -4, !dbg !6655
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !6655
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6655
  %6 = icmp slt i32 %0, 0, !dbg !6655
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !6655
  store volatile i8 16, i8* %7, align 1, !dbg !6656
  ret void, !dbg !6658
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !6659 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6765, metadata !DIExpression()), !dbg !6766
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6767
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !6769
  br i1 %3, label %4, label %12, !dbg !6770

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !6771, !srcloc !6783
  call void @llvm.dbg.value(metadata i32 %5, metadata !6774, metadata !DIExpression()) #25, !dbg !6784
  %6 = icmp eq i32 %5, 0, !dbg !6785
  br i1 %6, label %12, label %7, !dbg !6786

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6787
  %9 = or i32 %8, 268435456, !dbg !6787
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6787
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6789
  %11 = and i32 %10, -32769, !dbg !6789
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6789
  br label %12, !dbg !6790

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #26, !dbg !6791
  ret void, !dbg !6792
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !6793 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #26, !dbg !6794
  ret void, !dbg !6795
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !373 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !488, metadata !DIExpression()), !dbg !6796
  call void @llvm.dbg.value(metadata i8 0, metadata !489, metadata !DIExpression()), !dbg !6796
  call void @llvm.dbg.value(metadata i32 64, metadata !491, metadata !DIExpression()), !dbg !6796
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !6797
  %3 = load i32, i32* %2, align 4, !dbg !6797
  %4 = add i32 %3, -64, !dbg !6799
  call void @llvm.dbg.value(metadata i32 %4, metadata !490, metadata !DIExpression()), !dbg !6796
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !6800
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !6801
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !6802
  call void @llvm.dbg.value(metadata i8 1, metadata !489, metadata !DIExpression()), !dbg !6796
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #26, !dbg !6803
  ret void, !dbg !6804
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !6805 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !6806
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !6807, !srcloc !6810
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6811, !srcloc !6814
  ret void, !dbg !6815
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !6816 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #25, !dbg !6817, !srcloc !6820
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !6821
  ret void, !dbg !6822
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #17 !dbg !6823 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6838, metadata !DIExpression()), !dbg !6842
  call void @llvm.dbg.value(metadata i8 %1, metadata !6839, metadata !DIExpression()), !dbg !6842
  call void @llvm.dbg.value(metadata i32 %2, metadata !6840, metadata !DIExpression()), !dbg !6842
  call void @llvm.dbg.value(metadata i32 %3, metadata !6841, metadata !DIExpression()), !dbg !6842
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #27, !dbg !6843
  ret void, !dbg !6845
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #17 !dbg !6846 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6851, metadata !DIExpression()), !dbg !6856
  call void @llvm.dbg.value(metadata i8 %1, metadata !6852, metadata !DIExpression()), !dbg !6856
  call void @llvm.dbg.value(metadata i32 undef, metadata !6853, metadata !DIExpression()), !dbg !6856
  call void @llvm.dbg.value(metadata i32 undef, metadata !6854, metadata !DIExpression()), !dbg !6856
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !6857
  call void @llvm.dbg.value(metadata i8 %3, metadata !6855, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6856
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #27, !dbg !6858
  call void @llvm.dbg.value(metadata i32 %4, metadata !6855, metadata !DIExpression()), !dbg !6856
  %5 = trunc i32 %4 to i8, !dbg !6859
  store i8 %5, i8* @static_regions_num, align 1, !dbg !6860
  ret void, !dbg !6861
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #17 !dbg !6862 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6866, metadata !DIExpression()), !dbg !6872
  call void @llvm.dbg.value(metadata i8 %1, metadata !6867, metadata !DIExpression()), !dbg !6872
  call void @llvm.dbg.value(metadata i8 %2, metadata !6868, metadata !DIExpression()), !dbg !6872
  call void @llvm.dbg.value(metadata i1 %3, metadata !6869, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6872
  %5 = zext i8 %2 to i32, !dbg !6873
  call void @llvm.dbg.value(metadata i32 %5, metadata !6871, metadata !DIExpression()), !dbg !6872
  call void @llvm.dbg.value(metadata i32 0, metadata !6870, metadata !DIExpression()), !dbg !6872
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !6871, metadata !DIExpression()), !dbg !6872
  call void @llvm.dbg.value(metadata i32 0, metadata !6870, metadata !DIExpression()), !dbg !6872
  %7 = icmp eq i8 %1, 0, !dbg !6874
  br i1 %7, label %29, label %8, !dbg !6877

8:                                                ; preds = %4, %25
  %9 = phi i32 [ %26, %25 ], [ %5, %4 ]
  %10 = phi i32 [ %27, %25 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6871, metadata !DIExpression()), !dbg !6872
  call void @llvm.dbg.value(metadata i32 %10, metadata !6870, metadata !DIExpression()), !dbg !6872
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !6878
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !6881
  %13 = load i32, i32* %12, align 4, !dbg !6881
  %14 = icmp eq i32 %13, 0, !dbg !6882
  br i1 %14, label %25, label %15, !dbg !6883

15:                                               ; preds = %8
  br i1 %3, label %16, label %19, !dbg !6884

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #27, !dbg !6886
  %18 = icmp eq i32 %17, 0, !dbg !6886
  br i1 %18, label %29, label %19, !dbg !6887

19:                                               ; preds = %16, %15
  %20 = trunc i32 %9 to i8, !dbg !6888
  %21 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %20, %struct.z_arm_mpu_partition* noundef nonnull %11) #27, !dbg !6889
  call void @llvm.dbg.value(metadata i32 %21, metadata !6871, metadata !DIExpression()), !dbg !6872
  %22 = icmp eq i32 %21, -22, !dbg !6890
  br i1 %22, label %29, label %23, !dbg !6892

23:                                               ; preds = %19
  %24 = add nsw i32 %21, 1, !dbg !6893
  call void @llvm.dbg.value(metadata i32 %24, metadata !6871, metadata !DIExpression()), !dbg !6872
  br label %25, !dbg !6894

25:                                               ; preds = %8, %23
  %26 = phi i32 [ %9, %8 ], [ %24, %23 ], !dbg !6872
  call void @llvm.dbg.value(metadata i32 %26, metadata !6871, metadata !DIExpression()), !dbg !6872
  %27 = add nuw nsw i32 %10, 1, !dbg !6895
  call void @llvm.dbg.value(metadata i32 %27, metadata !6870, metadata !DIExpression()), !dbg !6872
  %28 = icmp eq i32 %27, %6, !dbg !6874
  br i1 %28, label %29, label %8, !dbg !6877, !llvm.loop !6896

29:                                               ; preds = %16, %19, %25, %4
  %30 = phi i32 [ %5, %4 ], [ %26, %25 ], [ -22, %19 ], [ -22, %16 ], !dbg !6872
  ret i32 %30, !dbg !6898
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #18 !dbg !6899 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6903, metadata !DIExpression()), !dbg !6905
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !6906
  %3 = load i32, i32* %2, align 4, !dbg !6906
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !6907, !range !3845
  %5 = icmp ult i32 %4, 2, !dbg !6907
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !6908
  br i1 %7, label %8, label %15, !dbg !6908

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !6909
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !6910
  %11 = load i32, i32* %10, align 4, !dbg !6910
  %12 = and i32 %11, %9, !dbg !6911
  %13 = icmp eq i32 %12, 0, !dbg !6912
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !6904, metadata !DIExpression()), !dbg !6905
  ret i32 %16, !dbg !6913
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #17 !dbg !6914 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !6918, metadata !DIExpression()), !dbg !6921
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !6919, metadata !DIExpression()), !dbg !6921
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !6922
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #25, !dbg !6922
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !6920, metadata !DIExpression()), !dbg !6923
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !6924
  %6 = load i32, i32* %5, align 4, !dbg !6924
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !6925
  store i32 %6, i32* %7, align 4, !dbg !6926
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !6927
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !6928
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !6929
  %11 = load i32, i32* %10, align 4, !dbg !6929
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* noundef nonnull %8, %struct.z_heap_bucket* noundef nonnull %9, i32 noundef %11) #27, !dbg !6930
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #27, !dbg !6931
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #25, !dbg !6932
  ret i32 %12, !dbg !6933
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* nocapture noundef writeonly %0, %struct.z_heap_bucket* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #10 !dbg !6934 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !6941, metadata !DIExpression()), !dbg !6945
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !6942, metadata !DIExpression()), !dbg !6945
  call void @llvm.dbg.value(metadata i32 undef, metadata !6943, metadata !DIExpression()), !dbg !6945
  call void @llvm.dbg.value(metadata i32 %2, metadata !6944, metadata !DIExpression()), !dbg !6945
  %4 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %1, i32 0, i32 0, !dbg !6946
  %5 = load i32, i32* %4, align 4, !dbg !6946
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #27, !dbg !6947
  %7 = or i32 %6, %5, !dbg !6948
  %8 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !6949
  store i32 %7, i32* %8, align 4, !dbg !6950
  ret void, !dbg !6951
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !6952 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !6956, metadata !DIExpression()), !dbg !6958
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !6957, metadata !DIExpression()), !dbg !6958
  %3 = zext i8 %0 to i32, !dbg !6959
  %4 = icmp ugt i8 %0, 7, !dbg !6961
  br i1 %4, label %6, label %5, !dbg !6962

5:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #27, !dbg !6963
  br label %6, !dbg !6964

6:                                                ; preds = %2, %5
  %7 = phi i32 [ %3, %5 ], [ -22, %2 ], !dbg !6958
  ret i32 %7, !dbg !6965
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !6966 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6970, metadata !DIExpression()), !dbg !6972
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !6971, metadata !DIExpression()), !dbg !6972
  tail call fastcc void @set_region_number(i32 noundef %0) #27, !dbg !6973
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !6974
  %4 = load i32, i32* %3, align 4, !dbg !6974
  %5 = and i32 %4, -32, !dbg !6975
  %6 = or i32 %5, %0, !dbg !6976
  %7 = or i32 %6, 16, !dbg !6976
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !6977
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !6978
  %9 = load i32, i32* %8, align 4, !dbg !6978
  %10 = or i32 %9, 1, !dbg !6979
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !6980
  ret void, !dbg !6981
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #15 !dbg !6982 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6985, metadata !DIExpression()), !dbg !6986
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !6987
  ret void, !dbg !6988
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #9 !dbg !6989 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6993, metadata !DIExpression()), !dbg !6994
  %2 = icmp ult i32 %0, 33, !dbg !6995
  br i1 %2, label %11, label %3, !dbg !6997

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !6998
  br i1 %4, label %11, label %5, !dbg !7000

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !7001
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !7002, !range !3845
  %8 = mul nsw i32 %7, -2, !dbg !7003
  %9 = add nsw i32 %8, 62, !dbg !7003
  %10 = and i32 %9, 62, !dbg !7004
  br label %11, !dbg !7005

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !6994
  ret i32 %12, !dbg !7006
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #3

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #17 !dbg !7007 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7011, metadata !DIExpression()), !dbg !7013
  call void @llvm.dbg.value(metadata i8 %1, metadata !7012, metadata !DIExpression()), !dbg !7013
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #27, !dbg !7014
  ret void, !dbg !7016
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #17 !dbg !7017 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7021, metadata !DIExpression()), !dbg !7028
  call void @llvm.dbg.value(metadata i8 %1, metadata !7022, metadata !DIExpression()), !dbg !7028
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7029
  call void @llvm.dbg.value(metadata i8 %3, metadata !7023, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7028
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #27, !dbg !7030
  call void @llvm.dbg.value(metadata i32 %4, metadata !7023, metadata !DIExpression()), !dbg !7028
  %5 = icmp ne i32 %4, -22, !dbg !7031
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !7032
  call void @llvm.dbg.value(metadata i32 %4, metadata !7024, metadata !DIExpression()), !dbg !7033
  br i1 %7, label %8, label %12, !dbg !7032

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7024, metadata !DIExpression()), !dbg !7033
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #27, !dbg !7034
  %10 = add i32 %9, 1, !dbg !7037
  call void @llvm.dbg.value(metadata i32 %10, metadata !7024, metadata !DIExpression()), !dbg !7033
  %11 = icmp eq i32 %10, 8, !dbg !7038
  br i1 %11, label %12, label %8, !dbg !7039, !llvm.loop !7040

12:                                               ; preds = %8, %2
  ret void, !dbg !7042
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #15 !dbg !7043 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7046, metadata !DIExpression()), !dbg !7047
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7048
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7049
  ret void, !dbg !7050
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !7051 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !7056
  %2 = icmp ugt i32 %1, 8, !dbg !7058
  br i1 %2, label %14, label %3, !dbg !7059

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #27, !dbg !7060
  call void @llvm.dbg.value(metadata i32 0, metadata !7055, metadata !DIExpression()), !dbg !7061
  %4 = icmp eq i32 %1, 0, !dbg !7062
  br i1 %4, label %12, label %5, !dbg !7065

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !7065

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7055, metadata !DIExpression()), !dbg !7061
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !7066
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #27, !dbg !7068
  %10 = add nuw i32 %8, 1, !dbg !7069
  call void @llvm.dbg.value(metadata i32 %10, metadata !7055, metadata !DIExpression()), !dbg !7061
  %11 = icmp eq i32 %10, %1, !dbg !7062
  br i1 %11, label %12, label %7, !dbg !7065, !llvm.loop !7070

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !7072
  store i8 %13, i8* @static_regions_num, align 1, !dbg !7073
  tail call void @arm_core_mpu_enable() #27, !dbg !7074
  br label %14, !dbg !7075

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !7061
  ret i32 %15, !dbg !7076
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !7077 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7084, metadata !DIExpression()), !dbg !7087
  call void @llvm.dbg.value(metadata i8* %1, metadata !7085, metadata !DIExpression()), !dbg !7087
  call void @llvm.dbg.value(metadata i8* %0, metadata !7086, metadata !DIExpression()), !dbg !7087
  %3 = load i8, i8* %1, align 1, !dbg !7088
  %4 = icmp eq i8 %3, 0, !dbg !7089
  br i1 %4, label %13, label %5, !dbg !7090

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !7084, metadata !DIExpression()), !dbg !7087
  call void @llvm.dbg.value(metadata i8* %8, metadata !7085, metadata !DIExpression()), !dbg !7087
  store i8 %6, i8* %7, align 1, !dbg !7091
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7093
  call void @llvm.dbg.value(metadata i8* %9, metadata !7084, metadata !DIExpression()), !dbg !7087
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7094
  call void @llvm.dbg.value(metadata i8* %10, metadata !7085, metadata !DIExpression()), !dbg !7087
  %11 = load i8, i8* %10, align 1, !dbg !7088
  %12 = icmp eq i8 %11, 0, !dbg !7089
  br i1 %12, label %13, label %5, !dbg !7090, !llvm.loop !7095

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !7097
  ret i8* %0, !dbg !7098
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7099 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7103, metadata !DIExpression()), !dbg !7107
  call void @llvm.dbg.value(metadata i8* %1, metadata !7104, metadata !DIExpression()), !dbg !7107
  call void @llvm.dbg.value(metadata i32 %2, metadata !7105, metadata !DIExpression()), !dbg !7107
  call void @llvm.dbg.value(metadata i8* %0, metadata !7106, metadata !DIExpression()), !dbg !7107
  %4 = icmp eq i32 %2, 0, !dbg !7108
  br i1 %4, label %22, label %5, !dbg !7109

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7103, metadata !DIExpression()), !dbg !7107
  call void @llvm.dbg.value(metadata i32 %7, metadata !7105, metadata !DIExpression()), !dbg !7107
  call void @llvm.dbg.value(metadata i8* %8, metadata !7104, metadata !DIExpression()), !dbg !7107
  %9 = load i8, i8* %8, align 1, !dbg !7110
  %10 = icmp eq i8 %9, 0, !dbg !7111
  br i1 %10, label %16, label %11, !dbg !7112

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !7113
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7115
  call void @llvm.dbg.value(metadata i8* %12, metadata !7104, metadata !DIExpression()), !dbg !7107
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7116
  call void @llvm.dbg.value(metadata i8* %13, metadata !7103, metadata !DIExpression()), !dbg !7107
  %14 = add i32 %7, -1, !dbg !7117
  call void @llvm.dbg.value(metadata i32 %14, metadata !7105, metadata !DIExpression()), !dbg !7107
  %15 = icmp eq i32 %14, 0, !dbg !7108
  br i1 %15, label %22, label %5, !dbg !7109, !llvm.loop !7118

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !7103, metadata !DIExpression()), !dbg !7107
  call void @llvm.dbg.value(metadata i32 %18, metadata !7105, metadata !DIExpression()), !dbg !7107
  store i8 0, i8* %17, align 1, !dbg !7120
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7122
  call void @llvm.dbg.value(metadata i8* %19, metadata !7103, metadata !DIExpression()), !dbg !7107
  %20 = add i32 %18, -1, !dbg !7123
  call void @llvm.dbg.value(metadata i32 %20, metadata !7105, metadata !DIExpression()), !dbg !7107
  %21 = icmp eq i32 %20, 0, !dbg !7124
  br i1 %21, label %22, label %16, !dbg !7125, !llvm.loop !7126

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !7128
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7129 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7133, metadata !DIExpression()), !dbg !7136
  call void @llvm.dbg.value(metadata i32 %1, metadata !7134, metadata !DIExpression()), !dbg !7136
  call void @llvm.dbg.value(metadata i32 %1, metadata !7135, metadata !DIExpression()), !dbg !7136
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7137

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !7133, metadata !DIExpression()), !dbg !7136
  %6 = load i8, i8* %5, align 1, !dbg !7138
  %7 = icmp eq i8 %6, %3, !dbg !7139
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !7140
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7141
  call void @llvm.dbg.value(metadata i8* %10, metadata !7133, metadata !DIExpression()), !dbg !7136
  br i1 %9, label %11, label %4, !dbg !7140, !llvm.loop !7143

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !7145
  ret i8* %12, !dbg !7146
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7147 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7149, metadata !DIExpression()), !dbg !7152
  call void @llvm.dbg.value(metadata i32 %1, metadata !7150, metadata !DIExpression()), !dbg !7152
  call void @llvm.dbg.value(metadata i8* null, metadata !7151, metadata !DIExpression()), !dbg !7152
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7153

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !7152
  call void @llvm.dbg.value(metadata i8* %6, metadata !7151, metadata !DIExpression()), !dbg !7152
  call void @llvm.dbg.value(metadata i8* %5, metadata !7149, metadata !DIExpression()), !dbg !7152
  %7 = load i8, i8* %5, align 1, !dbg !7154
  %8 = icmp eq i8 %7, %3, !dbg !7157
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !7158
  call void @llvm.dbg.value(metadata i8* %9, metadata !7151, metadata !DIExpression()), !dbg !7152
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7159
  call void @llvm.dbg.value(metadata i8* %10, metadata !7149, metadata !DIExpression()), !dbg !7152
  %11 = icmp eq i8 %7, 0, !dbg !7160
  br i1 %11, label %12, label %4, !dbg !7160, !llvm.loop !7161

12:                                               ; preds = %4
  ret i8* %9, !dbg !7163
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #19 !dbg !7164 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7168, metadata !DIExpression()), !dbg !7170
  call void @llvm.dbg.value(metadata i32 0, metadata !7169, metadata !DIExpression()), !dbg !7170
  %2 = load i8, i8* %0, align 1, !dbg !7171
  %3 = icmp eq i8 %2, 0, !dbg !7172
  br i1 %3, label %11, label %4, !dbg !7173

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7169, metadata !DIExpression()), !dbg !7170
  call void @llvm.dbg.value(metadata i8* %6, metadata !7168, metadata !DIExpression()), !dbg !7170
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7174
  call void @llvm.dbg.value(metadata i8* %7, metadata !7168, metadata !DIExpression()), !dbg !7170
  %8 = add i32 %5, 1, !dbg !7176
  call void @llvm.dbg.value(metadata i32 %8, metadata !7169, metadata !DIExpression()), !dbg !7170
  %9 = load i8, i8* %7, align 1, !dbg !7171
  %10 = icmp eq i8 %9, 0, !dbg !7172
  br i1 %10, label %11, label %4, !dbg !7173, !llvm.loop !7177

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !7170
  ret i32 %12, !dbg !7179
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7180 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7184, metadata !DIExpression()), !dbg !7187
  call void @llvm.dbg.value(metadata i32 %1, metadata !7185, metadata !DIExpression()), !dbg !7187
  call void @llvm.dbg.value(metadata i32 0, metadata !7186, metadata !DIExpression()), !dbg !7187
  %3 = load i8, i8* %0, align 1, !dbg !7188
  %4 = icmp ne i8 %3, 0, !dbg !7189
  %5 = icmp ne i32 %1, 0, !dbg !7190
  %6 = and i1 %4, %5, !dbg !7190
  br i1 %6, label %7, label %16, !dbg !7191

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7186, metadata !DIExpression()), !dbg !7187
  call void @llvm.dbg.value(metadata i8* %9, metadata !7184, metadata !DIExpression()), !dbg !7187
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7192
  call void @llvm.dbg.value(metadata i8* %10, metadata !7184, metadata !DIExpression()), !dbg !7187
  %11 = add nuw i32 %8, 1, !dbg !7194
  call void @llvm.dbg.value(metadata i32 %11, metadata !7186, metadata !DIExpression()), !dbg !7187
  %12 = load i8, i8* %10, align 1, !dbg !7188
  %13 = icmp ne i8 %12, 0, !dbg !7189
  %14 = icmp ult i32 %11, %1, !dbg !7190
  %15 = select i1 %13, i1 %14, i1 false, !dbg !7190
  br i1 %15, label %7, label %16, !dbg !7191, !llvm.loop !7195

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !7187
  ret i32 %17, !dbg !7197
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #19 !dbg !7198 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7202, metadata !DIExpression()), !dbg !7204
  call void @llvm.dbg.value(metadata i8* %1, metadata !7203, metadata !DIExpression()), !dbg !7204
  %3 = load i8, i8* %0, align 1, !dbg !7205
  %4 = load i8, i8* %1, align 1, !dbg !7206
  %5 = icmp ne i8 %3, %4, !dbg !7207
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !7208
  br i1 %7, label %18, label %8, !dbg !7208

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7203, metadata !DIExpression()), !dbg !7204
  call void @llvm.dbg.value(metadata i8* %10, metadata !7202, metadata !DIExpression()), !dbg !7204
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7209
  call void @llvm.dbg.value(metadata i8* %11, metadata !7202, metadata !DIExpression()), !dbg !7204
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7211
  call void @llvm.dbg.value(metadata i8* %12, metadata !7203, metadata !DIExpression()), !dbg !7204
  %13 = load i8, i8* %11, align 1, !dbg !7205
  %14 = load i8, i8* %12, align 1, !dbg !7206
  %15 = icmp ne i8 %13, %14, !dbg !7207
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !7208
  br i1 %17, label %18, label %8, !dbg !7208, !llvm.loop !7212

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !7205
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !7206
  %21 = zext i8 %19 to i32, !dbg !7215
  %22 = zext i8 %20 to i32, !dbg !7216
  %23 = sub nsw i32 %21, %22, !dbg !7217
  ret i32 %23, !dbg !7218
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7219 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7223, metadata !DIExpression()), !dbg !7226
  call void @llvm.dbg.value(metadata i8* %1, metadata !7224, metadata !DIExpression()), !dbg !7226
  call void @llvm.dbg.value(metadata i32 %2, metadata !7225, metadata !DIExpression()), !dbg !7226
  %4 = icmp eq i32 %2, 0, !dbg !7227
  br i1 %4, label %23, label %5, !dbg !7227

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !7225, metadata !DIExpression()), !dbg !7226
  call void @llvm.dbg.value(metadata i8* %7, metadata !7224, metadata !DIExpression()), !dbg !7226
  call void @llvm.dbg.value(metadata i8* %8, metadata !7223, metadata !DIExpression()), !dbg !7226
  %9 = load i8, i8* %8, align 1, !dbg !7228
  %10 = load i8, i8* %7, align 1, !dbg !7229
  %11 = icmp ne i8 %9, %10, !dbg !7230
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !7231
  br i1 %13, label %19, label %14, !dbg !7231

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7232
  call void @llvm.dbg.value(metadata i8* %15, metadata !7223, metadata !DIExpression()), !dbg !7226
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7234
  call void @llvm.dbg.value(metadata i8* %16, metadata !7224, metadata !DIExpression()), !dbg !7226
  %17 = add i32 %6, -1, !dbg !7235
  call void @llvm.dbg.value(metadata i32 %17, metadata !7225, metadata !DIExpression()), !dbg !7226
  %18 = icmp eq i32 %17, 0, !dbg !7227
  br i1 %18, label %23, label %5, !dbg !7227, !llvm.loop !7236

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !7239
  %21 = zext i8 %10 to i32, !dbg !7240
  %22 = sub nsw i32 %20, %21, !dbg !7241
  br label %23, !dbg !7242

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !7242
  ret i32 %24, !dbg !7243
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #14 !dbg !7244 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7249, metadata !DIExpression()), !dbg !7254
  call void @llvm.dbg.value(metadata i8* %1, metadata !7250, metadata !DIExpression()), !dbg !7254
  call void @llvm.dbg.value(metadata i8** %2, metadata !7251, metadata !DIExpression()), !dbg !7254
  %4 = icmp eq i8* %0, null, !dbg !7255
  br i1 %4, label %5, label %7, !dbg !7255

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !7256
  br label %7, !dbg !7255

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !7255
  call void @llvm.dbg.value(metadata i8* %8, metadata !7252, metadata !DIExpression()), !dbg !7254
  %9 = load i8, i8* %8, align 1, !dbg !7257
  %10 = icmp eq i8 %9, 0, !dbg !7257
  br i1 %10, label %33, label %11, !dbg !7258

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7252, metadata !DIExpression()), !dbg !7254
  %14 = zext i8 %12 to i32, !dbg !7257
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #27, !dbg !7259
  %16 = icmp eq i8* %15, null, !dbg !7258
  br i1 %16, label %21, label %17, !dbg !7260

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7261
  call void @llvm.dbg.value(metadata i8* %18, metadata !7252, metadata !DIExpression()), !dbg !7254
  %19 = load i8, i8* %18, align 1, !dbg !7257
  %20 = icmp eq i8 %19, 0, !dbg !7257
  br i1 %20, label %33, label %11, !dbg !7258, !llvm.loop !7263

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !7253, metadata !DIExpression()), !dbg !7254
  %24 = zext i8 %22 to i32, !dbg !7265
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #27, !dbg !7266
  %26 = icmp eq i8* %25, null, !dbg !7267
  br i1 %26, label %27, label %31, !dbg !7268

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7269
  call void @llvm.dbg.value(metadata i8* %28, metadata !7253, metadata !DIExpression()), !dbg !7254
  %29 = load i8, i8* %28, align 1, !dbg !7265
  %30 = icmp eq i8 %29, 0, !dbg !7265
  br i1 %30, label %33, label %21, !dbg !7271, !llvm.loop !7272

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !7274
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7277
  br label %33, !dbg !7278

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !7254
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !7254
  store i8* %34, i8** %2, align 4, !dbg !7254
  ret i8* %35, !dbg !7279
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !7280 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7282, metadata !DIExpression()), !dbg !7284
  call void @llvm.dbg.value(metadata i8* %1, metadata !7283, metadata !DIExpression()), !dbg !7284
  %3 = tail call i32 @strlen(i8* noundef %0) #27, !dbg !7285
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7286
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #27, !dbg !7287
  ret i8* %0, !dbg !7288
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7289 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7291, metadata !DIExpression()), !dbg !7296
  call void @llvm.dbg.value(metadata i8* %1, metadata !7292, metadata !DIExpression()), !dbg !7296
  call void @llvm.dbg.value(metadata i32 %2, metadata !7293, metadata !DIExpression()), !dbg !7296
  call void @llvm.dbg.value(metadata i8* %0, metadata !7294, metadata !DIExpression()), !dbg !7296
  %4 = tail call i32 @strlen(i8* noundef %0) #27, !dbg !7297
  call void @llvm.dbg.value(metadata i32 %4, metadata !7295, metadata !DIExpression()), !dbg !7296
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !7298
  call void @llvm.dbg.value(metadata i8* %5, metadata !7291, metadata !DIExpression()), !dbg !7296
  call void @llvm.dbg.value(metadata i8* %1, metadata !7292, metadata !DIExpression()), !dbg !7296
  call void @llvm.dbg.value(metadata i32 %2, metadata !7293, metadata !DIExpression()), !dbg !7296
  call void @llvm.dbg.value(metadata i32 %2, metadata !7293, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7296
  %6 = icmp eq i32 %2, 0, !dbg !7299
  br i1 %6, label %18, label %7, !dbg !7300

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !7301
  call void @llvm.dbg.value(metadata i8* %9, metadata !7291, metadata !DIExpression()), !dbg !7296
  call void @llvm.dbg.value(metadata i8* %10, metadata !7292, metadata !DIExpression()), !dbg !7296
  %12 = load i8, i8* %10, align 1, !dbg !7302
  %13 = icmp eq i8 %12, 0, !dbg !7303
  br i1 %13, label %18, label %14, !dbg !7304

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7305
  call void @llvm.dbg.value(metadata i8* %15, metadata !7292, metadata !DIExpression()), !dbg !7296
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7307
  call void @llvm.dbg.value(metadata i8* %16, metadata !7291, metadata !DIExpression()), !dbg !7296
  store i8 %12, i8* %9, align 1, !dbg !7308
  call void @llvm.dbg.value(metadata i32 %11, metadata !7293, metadata !DIExpression()), !dbg !7296
  call void @llvm.dbg.value(metadata i32 %11, metadata !7293, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7296
  %17 = icmp eq i32 %11, 0, !dbg !7299
  br i1 %17, label %18, label %7, !dbg !7300, !llvm.loop !7309

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !7296
  store i8 0, i8* %19, align 1, !dbg !7311
  ret i8* %0, !dbg !7312
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7313 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7317, metadata !DIExpression()), !dbg !7322
  call void @llvm.dbg.value(metadata i8* %1, metadata !7318, metadata !DIExpression()), !dbg !7322
  call void @llvm.dbg.value(metadata i32 %2, metadata !7319, metadata !DIExpression()), !dbg !7322
  call void @llvm.dbg.value(metadata i8* %0, metadata !7320, metadata !DIExpression()), !dbg !7322
  call void @llvm.dbg.value(metadata i8* %1, metadata !7321, metadata !DIExpression()), !dbg !7322
  %4 = icmp eq i32 %2, 0, !dbg !7323
  br i1 %4, label %31, label %5, !dbg !7325

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7321, metadata !DIExpression()), !dbg !7322
  call void @llvm.dbg.value(metadata i8* %0, metadata !7320, metadata !DIExpression()), !dbg !7322
  call void @llvm.dbg.value(metadata i32 %2, metadata !7319, metadata !DIExpression()), !dbg !7322
  %6 = add i32 %2, -1, !dbg !7326
  call void @llvm.dbg.value(metadata i32 %6, metadata !7319, metadata !DIExpression()), !dbg !7322
  %7 = icmp eq i32 %6, 0, !dbg !7327
  br i1 %7, label %23, label %8, !dbg !7328

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !7329
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !7329
  br label %11, !dbg !7329

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7321, metadata !DIExpression()), !dbg !7322
  call void @llvm.dbg.value(metadata i8* %14, metadata !7320, metadata !DIExpression()), !dbg !7322
  %15 = load i8, i8* %14, align 1, !dbg !7330
  %16 = load i8, i8* %13, align 1, !dbg !7331
  %17 = icmp eq i8 %15, %16, !dbg !7332
  br i1 %17, label %18, label %23, !dbg !7329

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !7333
  call void @llvm.dbg.value(metadata i8* %19, metadata !7320, metadata !DIExpression()), !dbg !7322
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7335
  call void @llvm.dbg.value(metadata i8* %20, metadata !7321, metadata !DIExpression()), !dbg !7322
  call void @llvm.dbg.value(metadata i32 %12, metadata !7319, metadata !DIExpression()), !dbg !7322
  %21 = add i32 %12, -1, !dbg !7326
  call void @llvm.dbg.value(metadata i32 %21, metadata !7319, metadata !DIExpression()), !dbg !7322
  %22 = icmp eq i32 %21, 0, !dbg !7327
  br i1 %22, label %23, label %11, !dbg !7328, !llvm.loop !7336

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !7322
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !7322
  %26 = load i8, i8* %24, align 1, !dbg !7338
  %27 = zext i8 %26 to i32, !dbg !7338
  %28 = load i8, i8* %25, align 1, !dbg !7339
  %29 = zext i8 %28 to i32, !dbg !7339
  %30 = sub nsw i32 %27, %29, !dbg !7340
  br label %31, !dbg !7341

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !7322
  ret i32 %32, !dbg !7342
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7343 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7347, metadata !DIExpression()), !dbg !7352
  call void @llvm.dbg.value(metadata i8* %1, metadata !7348, metadata !DIExpression()), !dbg !7352
  call void @llvm.dbg.value(metadata i32 %2, metadata !7349, metadata !DIExpression()), !dbg !7352
  call void @llvm.dbg.value(metadata i8* %0, metadata !7350, metadata !DIExpression()), !dbg !7352
  call void @llvm.dbg.value(metadata i8* %1, metadata !7351, metadata !DIExpression()), !dbg !7352
  %4 = ptrtoint i8* %0 to i32, !dbg !7353
  %5 = ptrtoint i8* %1 to i32, !dbg !7353
  %6 = sub i32 %4, %5, !dbg !7353
  %7 = icmp ult i32 %6, %2, !dbg !7355
  br i1 %7, label %10, label %8, !dbg !7356

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7351, metadata !DIExpression()), !dbg !7352
  call void @llvm.dbg.value(metadata i8* %0, metadata !7350, metadata !DIExpression()), !dbg !7352
  call void @llvm.dbg.value(metadata i32 %2, metadata !7349, metadata !DIExpression()), !dbg !7352
  %9 = icmp eq i32 %2, 0, !dbg !7357
  br i1 %9, label %26, label %17, !dbg !7359

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !7349, metadata !DIExpression()), !dbg !7352
  %12 = add i32 %11, -1, !dbg !7360
  call void @llvm.dbg.value(metadata i32 %12, metadata !7349, metadata !DIExpression()), !dbg !7352
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !7363
  %14 = load i8, i8* %13, align 1, !dbg !7363
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !7364
  store i8 %14, i8* %15, align 1, !dbg !7365
  %16 = icmp eq i32 %12, 0, !dbg !7366
  br i1 %16, label %26, label %10, !dbg !7367, !llvm.loop !7368

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !7351, metadata !DIExpression()), !dbg !7352
  call void @llvm.dbg.value(metadata i8* %19, metadata !7350, metadata !DIExpression()), !dbg !7352
  call void @llvm.dbg.value(metadata i32 %20, metadata !7349, metadata !DIExpression()), !dbg !7352
  %21 = load i8, i8* %18, align 1, !dbg !7370
  store i8 %21, i8* %19, align 1, !dbg !7372
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !7373
  call void @llvm.dbg.value(metadata i8* %22, metadata !7350, metadata !DIExpression()), !dbg !7352
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !7374
  call void @llvm.dbg.value(metadata i8* %23, metadata !7351, metadata !DIExpression()), !dbg !7352
  %24 = add i32 %20, -1, !dbg !7375
  call void @llvm.dbg.value(metadata i32 %24, metadata !7349, metadata !DIExpression()), !dbg !7352
  %25 = icmp eq i32 %24, 0, !dbg !7357
  br i1 %25, label %26, label %17, !dbg !7359, !llvm.loop !7376

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !7378
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7379 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7385, metadata !DIExpression()), !dbg !7390
  call void @llvm.dbg.value(metadata i8* %1, metadata !7386, metadata !DIExpression()), !dbg !7390
  call void @llvm.dbg.value(metadata i32 %2, metadata !7387, metadata !DIExpression()), !dbg !7390
  call void @llvm.dbg.value(metadata i8* %0, metadata !7388, metadata !DIExpression()), !dbg !7390
  call void @llvm.dbg.value(metadata i8* %1, metadata !7389, metadata !DIExpression()), !dbg !7390
  %4 = icmp eq i32 %2, 0, !dbg !7391
  br i1 %4, label %14, label %5, !dbg !7392

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7389, metadata !DIExpression()), !dbg !7390
  call void @llvm.dbg.value(metadata i8* %7, metadata !7388, metadata !DIExpression()), !dbg !7390
  call void @llvm.dbg.value(metadata i32 %8, metadata !7387, metadata !DIExpression()), !dbg !7390
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7393
  call void @llvm.dbg.value(metadata i8* %9, metadata !7389, metadata !DIExpression()), !dbg !7390
  %10 = load i8, i8* %6, align 1, !dbg !7395
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7396
  call void @llvm.dbg.value(metadata i8* %11, metadata !7388, metadata !DIExpression()), !dbg !7390
  store i8 %10, i8* %7, align 1, !dbg !7397
  %12 = add i32 %8, -1, !dbg !7398
  call void @llvm.dbg.value(metadata i32 %12, metadata !7387, metadata !DIExpression()), !dbg !7390
  %13 = icmp eq i32 %12, 0, !dbg !7391
  br i1 %13, label %14, label %5, !dbg !7392, !llvm.loop !7399

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !7401
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #20 !dbg !7402 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7406, metadata !DIExpression()), !dbg !7411
  call void @llvm.dbg.value(metadata i32 %1, metadata !7407, metadata !DIExpression()), !dbg !7411
  call void @llvm.dbg.value(metadata i32 %2, metadata !7408, metadata !DIExpression()), !dbg !7411
  call void @llvm.dbg.value(metadata i8* %0, metadata !7409, metadata !DIExpression()), !dbg !7411
  %4 = trunc i32 %1 to i8, !dbg !7412
  call void @llvm.dbg.value(metadata i8 %4, metadata !7410, metadata !DIExpression()), !dbg !7411
  call void @llvm.dbg.value(metadata i32 %2, metadata !7408, metadata !DIExpression()), !dbg !7411
  call void @llvm.dbg.value(metadata i8* %0, metadata !7409, metadata !DIExpression()), !dbg !7411
  %5 = icmp eq i32 %2, 0, !dbg !7413
  br i1 %5, label %12, label %6, !dbg !7414

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !7408, metadata !DIExpression()), !dbg !7411
  call void @llvm.dbg.value(metadata i8* %8, metadata !7409, metadata !DIExpression()), !dbg !7411
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7415
  call void @llvm.dbg.value(metadata i8* %9, metadata !7409, metadata !DIExpression()), !dbg !7411
  store i8 %4, i8* %8, align 1, !dbg !7417
  %10 = add i32 %7, -1, !dbg !7418
  call void @llvm.dbg.value(metadata i32 %10, metadata !7408, metadata !DIExpression()), !dbg !7411
  %11 = icmp eq i32 %10, 0, !dbg !7413
  br i1 %11, label %12, label %6, !dbg !7414, !llvm.loop !7419

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !7421
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7422 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7426, metadata !DIExpression()), !dbg !7432
  call void @llvm.dbg.value(metadata i32 %1, metadata !7427, metadata !DIExpression()), !dbg !7432
  call void @llvm.dbg.value(metadata i32 %2, metadata !7428, metadata !DIExpression()), !dbg !7432
  %4 = icmp eq i32 %2, 0, !dbg !7433
  br i1 %4, label %17, label %5, !dbg !7434

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !7435

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !7436
  call void @llvm.dbg.value(metadata i8* %9, metadata !7429, metadata !DIExpression()), !dbg !7436
  call void @llvm.dbg.value(metadata i32 %8, metadata !7428, metadata !DIExpression()), !dbg !7432
  call void @llvm.dbg.value(metadata i8* %9, metadata !7429, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7436
  %10 = load i8, i8* %9, align 1, !dbg !7437
  %11 = icmp eq i8 %10, %6, !dbg !7440
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !7441
  call void @llvm.dbg.value(metadata i8* %12, metadata !7429, metadata !DIExpression()), !dbg !7436
  call void @llvm.dbg.value(metadata i32 %13, metadata !7428, metadata !DIExpression()), !dbg !7432
  br i1 %15, label %16, label %7, !dbg !7441, !llvm.loop !7442

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !7444

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !7432
  ret i8* %19, !dbg !7445
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !7446 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !7448, metadata !DIExpression()), !dbg !7449
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !7450
  ret void, !dbg !7451
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #11 !dbg !7452 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7454, metadata !DIExpression()), !dbg !7455
  ret i32 -1, !dbg !7456
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !7457 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7461, metadata !DIExpression()), !dbg !7463
  call void @llvm.dbg.value(metadata i32* %1, metadata !7462, metadata !DIExpression()), !dbg !7463
  %3 = ptrtoint i32* %1 to i32, !dbg !7464
  %4 = and i32 %3, -2, !dbg !7464
  %5 = icmp eq i32 %4, 2, !dbg !7464
  br i1 %5, label %6, label %9, !dbg !7464

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !7465
  %8 = tail call i32 %7(i32 noundef %0) #26, !dbg !7465
  br label %9, !dbg !7466

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !7466
  ret i32 %10, !dbg !7467
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !7468 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7470, metadata !DIExpression()), !dbg !7472
  call void @llvm.dbg.value(metadata i32* %1, metadata !7471, metadata !DIExpression()), !dbg !7472
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #27, !dbg !7473
  ret i32 %3, !dbg !7474
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !7475 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7478, metadata !DIExpression()), !dbg !7480
  call void @llvm.dbg.value(metadata i32* %1, metadata !7479, metadata !DIExpression()), !dbg !7480
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !7481, !srcloc !7483
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #27, !dbg !7484
  ret i32 %3, !dbg !7485
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !7486 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7491, metadata !DIExpression()), !dbg !7495
  call void @llvm.dbg.value(metadata i32* %1, metadata !7492, metadata !DIExpression()), !dbg !7495
  %3 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !7496
  call void @llvm.dbg.value(metadata i32 %3, metadata !7493, metadata !DIExpression()), !dbg !7495
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #27, !dbg !7497
  call void @llvm.dbg.value(metadata i32 %4, metadata !7494, metadata !DIExpression()), !dbg !7495
  %5 = icmp ne i32 %3, %4, !dbg !7498
  %6 = sext i1 %5 to i32, !dbg !7499
  ret i32 %6, !dbg !7500
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !7501 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7505, metadata !DIExpression()), !dbg !7509
  call void @llvm.dbg.value(metadata i32 %1, metadata !7506, metadata !DIExpression()), !dbg !7509
  call void @llvm.dbg.value(metadata i32 %2, metadata !7507, metadata !DIExpression()), !dbg !7509
  call void @llvm.dbg.value(metadata i32* %3, metadata !7508, metadata !DIExpression()), !dbg !7509
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #27, !dbg !7510
  ret i32 %5, !dbg !7511
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !7512 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7514, metadata !DIExpression()), !dbg !7518
  call void @llvm.dbg.value(metadata i32 %1, metadata !7515, metadata !DIExpression()), !dbg !7518
  call void @llvm.dbg.value(metadata i32 %2, metadata !7516, metadata !DIExpression()), !dbg !7518
  call void @llvm.dbg.value(metadata i32* %3, metadata !7517, metadata !DIExpression()), !dbg !7518
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !7519, !srcloc !7521
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #27, !dbg !7522
  ret i32 %5, !dbg !7523
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !7524 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7526, metadata !DIExpression()), !dbg !7534
  call void @llvm.dbg.value(metadata i32 %1, metadata !7527, metadata !DIExpression()), !dbg !7534
  call void @llvm.dbg.value(metadata i32 %2, metadata !7528, metadata !DIExpression()), !dbg !7534
  call void @llvm.dbg.value(metadata i32* %3, metadata !7529, metadata !DIExpression()), !dbg !7534
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !7535
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !7537
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !7537
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !7537
  br i1 %11, label %33, label %12, !dbg !7537

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !7534
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !7534
  call void @llvm.dbg.value(metadata i8* %14, metadata !7532, metadata !DIExpression()), !dbg !7534
  call void @llvm.dbg.value(metadata i32 %13, metadata !7530, metadata !DIExpression()), !dbg !7534
  call void @llvm.dbg.value(metadata i32 %1, metadata !7531, metadata !DIExpression()), !dbg !7534
  br label %15, !dbg !7538

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !7540
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !7534
  call void @llvm.dbg.value(metadata i8* %17, metadata !7532, metadata !DIExpression()), !dbg !7534
  call void @llvm.dbg.value(metadata i32 %16, metadata !7531, metadata !DIExpression()), !dbg !7534
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !7541
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7544
  call void @llvm.dbg.value(metadata i8* %19, metadata !7532, metadata !DIExpression()), !dbg !7534
  %20 = load i8, i8* %17, align 1, !dbg !7545
  %21 = zext i8 %20 to i32, !dbg !7546
  %22 = tail call i32 %18(i32 noundef %21) #26, !dbg !7541
  %23 = icmp eq i32 %22, -1, !dbg !7547
  br i1 %23, label %30, label %24, !dbg !7548

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !7549
  call void @llvm.dbg.value(metadata i32 %25, metadata !7531, metadata !DIExpression()), !dbg !7534
  %26 = icmp eq i32 %25, 0, !dbg !7550
  br i1 %26, label %27, label %15, !dbg !7551, !llvm.loop !7552

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !7554
  call void @llvm.dbg.value(metadata i32 %28, metadata !7530, metadata !DIExpression()), !dbg !7534
  %29 = icmp eq i32 %28, 0, !dbg !7555
  br i1 %29, label %30, label %12, !dbg !7556, !llvm.loop !7557

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !7534
  call void @llvm.dbg.value(metadata i32 %31, metadata !7530, metadata !DIExpression()), !dbg !7534
  call void @llvm.dbg.label(metadata !7533), !dbg !7560
  %32 = sub i32 %2, %31, !dbg !7561
  br label %33, !dbg !7562

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !7534
  ret i32 %34, !dbg !7563
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !7564 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7568, metadata !DIExpression()), !dbg !7569
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #27, !dbg !7570
  %3 = icmp eq i32 %2, -1, !dbg !7572
  br i1 %3, label %8, label %4, !dbg !7573

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #27, !dbg !7574
  %6 = icmp eq i32 %5, -1, !dbg !7575
  %7 = sext i1 %6 to i32, !dbg !7574
  br label %8, !dbg !7576

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !7569
  ret i32 %9, !dbg !7577
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !7578 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7580, metadata !DIExpression()), !dbg !7581
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #27, !dbg !7582
  ret void, !dbg !7583
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !7584 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7588, metadata !DIExpression()), !dbg !7594
  call void @llvm.dbg.value(metadata i32 %1, metadata !7589, metadata !DIExpression()), !dbg !7594
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !7590, metadata !DIExpression()), !dbg !7594
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !7595
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !7595
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !7595
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !7591, metadata !DIExpression()), !dbg !7594
  call void @llvm.dbg.value(metadata i32 %0, metadata !7593, metadata !DIExpression()), !dbg !7594
  %7 = icmp slt i32 %0, %1, !dbg !7596
  br i1 %7, label %8, label %22, !dbg !7599

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7593, metadata !DIExpression()), !dbg !7594
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #27, !dbg !7600
  %11 = icmp eq i32 %10, 0, !dbg !7600
  br i1 %11, label %19, label %12, !dbg !7603

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #27, !dbg !7604
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !7606
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !7606
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !7608
  br i1 %15, label %19, label %16, !dbg !7609

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !7610
  %18 = load i8*, i8** %17, align 4, !dbg !7610
  tail call void %14(i32 noundef %9, i8* noundef %18) #26, !dbg !7611
  br label %19, !dbg !7612

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !7613
  call void @llvm.dbg.value(metadata i32 %20, metadata !7593, metadata !DIExpression()), !dbg !7594
  %21 = icmp eq i32 %20, %1, !dbg !7596
  br i1 %21, label %22, label %8, !dbg !7599, !llvm.loop !7614

22:                                               ; preds = %19, %3
  ret void, !dbg !7616
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #16 !dbg !7617 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7619, metadata !DIExpression()), !dbg !7620
  %2 = shl nuw i32 1, %0, !dbg !7621
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #27, !dbg !7624
  ret i32 %3, !dbg !7625
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #15 !dbg !7626 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7630, metadata !DIExpression()), !dbg !7631
  %2 = shl nuw i32 1, %0, !dbg !7632
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #27, !dbg !7635
  ret void, !dbg !7636
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7637 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7640, metadata !DIExpression()), !dbg !7641
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !7642
  ret void, !dbg !7643
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #16 !dbg !7644 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7646, metadata !DIExpression()), !dbg !7647
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !7648
  %3 = and i32 %2, %0, !dbg !7648
  %4 = icmp eq i32 %3, %0, !dbg !7649
  %5 = zext i1 %4 to i32, !dbg !7649
  ret i32 %5, !dbg !7650
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !7651 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7653, metadata !DIExpression()), !dbg !7654
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #27, !dbg !7655
  ret void, !dbg !7656
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !7657 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7659, metadata !DIExpression()), !dbg !7660
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #27, !dbg !7661
  ret void, !dbg !7662
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !7663 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7665, metadata !DIExpression()), !dbg !7666
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #27, !dbg !7667
  ret void, !dbg !7668
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !7669 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7671, metadata !DIExpression()), !dbg !7672
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #27, !dbg !7673
  ret void, !dbg !7674
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !7675 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7677, metadata !DIExpression()), !dbg !7678
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #27, !dbg !7679
  ret void, !dbg !7680
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !7681 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7683, metadata !DIExpression()), !dbg !7684
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #27, !dbg !7685
  ret void, !dbg !7686
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !7687 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7689, metadata !DIExpression()), !dbg !7690
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #27, !dbg !7691
  ret void, !dbg !7692
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !7693 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7695, metadata !DIExpression()), !dbg !7696
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #27, !dbg !7697
  ret void, !dbg !7698
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !7699 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7701, metadata !DIExpression()), !dbg !7702
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #27, !dbg !7703
  ret void, !dbg !7704
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !7705 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7707, metadata !DIExpression()), !dbg !7708
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #27, !dbg !7709
  ret void, !dbg !7710
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !7711 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7713, metadata !DIExpression()), !dbg !7714
  tail call fastcc void @__stm32_exti_connect_irqs() #27, !dbg !7715
  ret i32 0, !dbg !7716
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !716 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !720, metadata !DIExpression()), !dbg !7717
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #26, !dbg !7718
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #26, !dbg !7720
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #26, !dbg !7722
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #26, !dbg !7724
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #26, !dbg !7726
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #26, !dbg !7728
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #26, !dbg !7730
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #26, !dbg !7732
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #26, !dbg !7734
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #26, !dbg !7736
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #26, !dbg !7738
  ret void, !dbg !7740
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !7741 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7743, metadata !DIExpression()), !dbg !7745
  call void @llvm.dbg.value(metadata i32 0, metadata !7744, metadata !DIExpression()), !dbg !7745
  %2 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !7746
  %3 = load i32, i32* %2, align 4, !dbg !7746
  call void @llvm.dbg.value(metadata i32 %3, metadata !7744, metadata !DIExpression()), !dbg !7745
  %4 = shl nuw i32 1, %0, !dbg !7747
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #27, !dbg !7748
  tail call void @arch_irq_enable(i32 noundef %3) #26, !dbg !7749
  ret void, !dbg !7750
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7751 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7753, metadata !DIExpression()), !dbg !7754
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !7755
  %3 = or i32 %2, %0, !dbg !7755
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !7755
  ret void, !dbg !7756
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #15 !dbg !7757 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7759, metadata !DIExpression()), !dbg !7760
  %2 = icmp slt i32 %0, 32, !dbg !7761
  br i1 %2, label %3, label %5, !dbg !7763

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !7764
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #27, !dbg !7766
  br label %5, !dbg !7767

5:                                                ; preds = %1, %3
  ret void, !dbg !7768
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7769 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7771, metadata !DIExpression()), !dbg !7772
  %2 = xor i32 %0, -1, !dbg !7773
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !7773
  %4 = and i32 %3, %2, !dbg !7773
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !7773
  ret void, !dbg !7774
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #15 !dbg !7775 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7779, metadata !DIExpression()), !dbg !7781
  call void @llvm.dbg.value(metadata i32 %1, metadata !7780, metadata !DIExpression()), !dbg !7781
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !7782

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !7783
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #27, !dbg !7785
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #27, !dbg !7786
  br label %11, !dbg !7787

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !7788
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #27, !dbg !7789
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #27, !dbg !7790
  br label %11, !dbg !7791

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !7792
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #27, !dbg !7793
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #27, !dbg !7794
  br label %11, !dbg !7795

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !7796
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #27, !dbg !7797
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #27, !dbg !7798
  br label %11, !dbg !7799

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !7800
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7801 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7803, metadata !DIExpression()), !dbg !7804
  %2 = xor i32 %0, -1, !dbg !7805
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !7805
  %4 = and i32 %3, %2, !dbg !7805
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !7805
  ret void, !dbg !7806
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7807 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7809, metadata !DIExpression()), !dbg !7810
  %2 = xor i32 %0, -1, !dbg !7811
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !7811
  %4 = and i32 %3, %2, !dbg !7811
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !7811
  ret void, !dbg !7812
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7813 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7815, metadata !DIExpression()), !dbg !7816
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !7817
  %3 = or i32 %2, %0, !dbg !7817
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !7817
  ret void, !dbg !7818
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7819 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7821, metadata !DIExpression()), !dbg !7822
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !7823
  %3 = or i32 %2, %0, !dbg !7823
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !7823
  ret void, !dbg !7824
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #8 !dbg !7825 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7829, metadata !DIExpression()), !dbg !7835
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !7830, metadata !DIExpression()), !dbg !7835
  call void @llvm.dbg.value(metadata i8* %2, metadata !7831, metadata !DIExpression()), !dbg !7835
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_39, metadata !7832, metadata !DIExpression()), !dbg !7835
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !7834, metadata !DIExpression()), !dbg !7835
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !7836
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !7836
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !7838
  br i1 %6, label %7, label %9, !dbg !7839

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !7840
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !7841
  store i8* %2, i8** %8, align 4, !dbg !7842
  br label %9, !dbg !7843

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !7835
  ret i32 %10, !dbg !7844
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #4 !dbg !7845 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7847, metadata !DIExpression()), !dbg !7850
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_39, metadata !7848, metadata !DIExpression()), !dbg !7850
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !7849, metadata !DIExpression()), !dbg !7850
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !7851
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !7852
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !7853
  store i8* null, i8** %3, align 4, !dbg !7854
  ret void, !dbg !7855
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !7856 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7858, metadata !DIExpression()), !dbg !7863
  call void @llvm.dbg.value(metadata i8* %1, metadata !7859, metadata !DIExpression()), !dbg !7863
  call void @llvm.dbg.value(metadata i8* %1, metadata !7860, metadata !DIExpression()), !dbg !7863
  %3 = bitcast i8* %1 to i32*, !dbg !7864
  %4 = load i32, i32* %3, align 4, !dbg !7864
  %5 = add i32 %4, -169, !dbg !7864
  %6 = icmp ult i32 %5, -121, !dbg !7864
  br i1 %6, label %15, label %7, !dbg !7866

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !7867
  %9 = inttoptr i32 %8 to i32*, !dbg !7868
  call void @llvm.dbg.value(metadata i32* %9, metadata !7861, metadata !DIExpression()), !dbg !7863
  %10 = load volatile i32, i32* %9, align 4, !dbg !7869
  call void @llvm.dbg.value(metadata i32 %10, metadata !7862, metadata !DIExpression()), !dbg !7863
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !7870
  %12 = bitcast i8* %11 to i32*, !dbg !7870
  %13 = load i32, i32* %12, align 4, !dbg !7870
  %14 = or i32 %13, %10, !dbg !7871
  call void @llvm.dbg.value(metadata i32 %14, metadata !7862, metadata !DIExpression()), !dbg !7863
  store volatile i32 %14, i32* %9, align 4, !dbg !7872
  br label %15, !dbg !7873

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !7863
  ret i32 %16, !dbg !7874
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !7875 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7877, metadata !DIExpression()), !dbg !7882
  call void @llvm.dbg.value(metadata i8* %1, metadata !7878, metadata !DIExpression()), !dbg !7882
  call void @llvm.dbg.value(metadata i8* %1, metadata !7879, metadata !DIExpression()), !dbg !7882
  %3 = bitcast i8* %1 to i32*, !dbg !7883
  %4 = load i32, i32* %3, align 4, !dbg !7883
  %5 = add i32 %4, -169, !dbg !7883
  %6 = icmp ult i32 %5, -121, !dbg !7883
  br i1 %6, label %16, label %7, !dbg !7885

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !7886
  %9 = inttoptr i32 %8 to i32*, !dbg !7887
  call void @llvm.dbg.value(metadata i32* %9, metadata !7880, metadata !DIExpression()), !dbg !7882
  %10 = load volatile i32, i32* %9, align 4, !dbg !7888
  call void @llvm.dbg.value(metadata i32 %10, metadata !7881, metadata !DIExpression()), !dbg !7882
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !7889
  %12 = bitcast i8* %11 to i32*, !dbg !7889
  %13 = load i32, i32* %12, align 4, !dbg !7889
  %14 = xor i32 %13, -1, !dbg !7890
  %15 = and i32 %10, %14, !dbg !7891
  call void @llvm.dbg.value(metadata i32 %15, metadata !7881, metadata !DIExpression()), !dbg !7882
  store volatile i32 %15, i32* %9, align 4, !dbg !7892
  br label %16, !dbg !7893

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !7882
  ret i32 %17, !dbg !7894
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !7895 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7897, metadata !DIExpression()), !dbg !7905
  call void @llvm.dbg.value(metadata i8* %1, metadata !7898, metadata !DIExpression()), !dbg !7905
  call void @llvm.dbg.value(metadata i32* %2, metadata !7899, metadata !DIExpression()), !dbg !7905
  call void @llvm.dbg.value(metadata i8* %1, metadata !7900, metadata !DIExpression()), !dbg !7905
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !7906
  call void @llvm.dbg.value(metadata i32 %4, metadata !7901, metadata !DIExpression()), !dbg !7905
  call void @llvm.dbg.value(metadata i32 undef, metadata !7902, metadata !DIExpression()), !dbg !7905
  call void @llvm.dbg.value(metadata i32 undef, metadata !7903, metadata !DIExpression()), !dbg !7905
  call void @llvm.dbg.value(metadata i32 %4, metadata !7904, metadata !DIExpression()), !dbg !7905
  %5 = bitcast i8* %1 to i32*, !dbg !7907
  %6 = load i32, i32* %5, align 4, !dbg !7907
  switch i32 %6, label %21 [
    i32 48, label %19
    i32 52, label %19
    i32 56, label %19
    i32 64, label %7
    i32 68, label %9
    i32 168, label %19
    i32 6, label %19
    i32 1, label %11
    i32 2, label %14
    i32 4, label %17
    i32 5, label %18
  ], !dbg !7908

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #27, !dbg !7909
  call void @llvm.dbg.value(metadata i32 %8, metadata !7902, metadata !DIExpression()), !dbg !7905
  br label %19, !dbg !7910

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 1) #27, !dbg !7912
  call void @llvm.dbg.value(metadata i32 %10, metadata !7903, metadata !DIExpression()), !dbg !7905
  br label %19, !dbg !7913

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #26, !dbg !7914
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12, i32 noundef 4) #27, !dbg !7915
  br label %19, !dbg !7916

14:                                               ; preds = %3
  %15 = tail call i32 @get_pllsrc_frequency() #26, !dbg !7917
  %16 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %15, i32 noundef 7) #27, !dbg !7918
  br label %19, !dbg !7919

17:                                               ; preds = %3
  br label %19, !dbg !7920

18:                                               ; preds = %3
  br label %19, !dbg !7921

19:                                               ; preds = %3, %3, %3, %3, %3, %18, %17, %14, %11, %9, %7
  %20 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ %16, %14 ], [ 0, %17 ], [ 32000, %18 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %20, i32* %2, align 4, !dbg !7922
  br label %21, !dbg !7923

21:                                               ; preds = %19, %3
  %22 = phi i32 [ -134, %3 ], [ 0, %19 ], !dbg !7905
  ret i32 %22, !dbg !7923
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #15 !dbg !7924 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7926, metadata !DIExpression()), !dbg !7934
  call void @llvm.dbg.value(metadata i8* %1, metadata !7927, metadata !DIExpression()), !dbg !7934
  call void @llvm.dbg.value(metadata i8* %2, metadata !7928, metadata !DIExpression()), !dbg !7934
  call void @llvm.dbg.value(metadata i8* %1, metadata !7929, metadata !DIExpression()), !dbg !7934
  %4 = bitcast i8* %1 to i32*, !dbg !7935
  %5 = load i32, i32* %4, align 4, !dbg !7935
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #27, !dbg !7936
  call void @llvm.dbg.value(metadata i32 %6, metadata !7933, metadata !DIExpression()), !dbg !7934
  %7 = icmp slt i32 %6, 0, !dbg !7937
  br i1 %7, label %22, label %8, !dbg !7939

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7929, metadata !DIExpression()), !dbg !7934
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !7940
  %10 = bitcast i8* %9 to i32*, !dbg !7940
  %11 = load i32, i32* %10, align 4, !dbg !7940
  %12 = lshr i32 %11, 16, !dbg !7940
  %13 = and i32 %12, 7, !dbg !7940
  %14 = lshr i32 %11, 8, !dbg !7941
  %15 = and i32 %14, 31, !dbg !7941
  %16 = shl i32 %13, %15, !dbg !7942
  call void @llvm.dbg.value(metadata i32 %16, metadata !7932, metadata !DIExpression()), !dbg !7934
  %17 = and i32 %11, 255, !dbg !7943
  %18 = or i32 %17, 1073887232, !dbg !7944
  %19 = inttoptr i32 %18 to i32*, !dbg !7945
  call void @llvm.dbg.value(metadata i32* %19, metadata !7930, metadata !DIExpression()), !dbg !7934
  %20 = load volatile i32, i32* %19, align 4, !dbg !7946
  call void @llvm.dbg.value(metadata i32 %20, metadata !7931, metadata !DIExpression()), !dbg !7934
  %21 = or i32 %16, %20, !dbg !7947
  call void @llvm.dbg.value(metadata i32 %21, metadata !7931, metadata !DIExpression()), !dbg !7934
  store volatile i32 %21, i32* %19, align 4, !dbg !7948
  br label %22, !dbg !7949

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !7934
  ret i32 %23, !dbg !7950
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #11 !dbg !7951 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7955, metadata !DIExpression()), !dbg !7957
  call void @llvm.dbg.value(metadata i32 0, metadata !7956, metadata !DIExpression()), !dbg !7957
  %2 = add i32 %0, -1, !dbg !7958
  %3 = icmp ult i32 %2, 6, !dbg !7958
  br i1 %3, label %4, label %7, !dbg !7958

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !7958
  %6 = load i32, i32* %5, align 4, !dbg !7958
  call void @llvm.dbg.value(metadata i32 %6, metadata !7956, metadata !DIExpression()), !dbg !7957
  br label %7, !dbg !7959

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !7957
  ret i32 %8, !dbg !7960
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !7961 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7965, metadata !DIExpression()), !dbg !7967
  call void @llvm.dbg.value(metadata i32 %1, metadata !7966, metadata !DIExpression()), !dbg !7967
  %3 = udiv i32 %0, %1, !dbg !7968
  ret i32 %3, !dbg !7969
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !7970 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7974, metadata !DIExpression()), !dbg !7978
  call void @llvm.dbg.value(metadata i32 16, metadata !7975, metadata !DIExpression()), !dbg !7978
  call void @llvm.dbg.value(metadata i32 336, metadata !7976, metadata !DIExpression()), !dbg !7978
  call void @llvm.dbg.value(metadata i32 %1, metadata !7977, metadata !DIExpression()), !dbg !7978
  %3 = mul i32 %0, 336, !dbg !7979
  %4 = shl nsw i32 %1, 4, !dbg !7980
  %5 = udiv i32 %3, %4, !dbg !7981
  ret i32 %5, !dbg !7982
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !7983 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !7985, metadata !DIExpression()), !dbg !7988
  tail call void @config_enable_default_clocks() #26, !dbg !7989
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #26, !dbg !7990
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #27, !dbg !7990
  %4 = lshr i32 %3, 4, !dbg !7990
  %5 = and i32 %4, 15, !dbg !7990
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !7990
  %7 = load i8, i8* %6, align 1, !dbg !7990
  %8 = zext i8 %7 to i32, !dbg !7990
  %9 = lshr i32 %2, %8, !dbg !7990
  call void @llvm.dbg.value(metadata i32 %9, metadata !7986, metadata !DIExpression()), !dbg !7988
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !7987, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !7988
  %10 = icmp ult i32 %9, 84000000, !dbg !7991
  br i1 %10, label %11, label %13, !dbg !7993

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #26, !dbg !7994
  br label %13, !dbg !7996

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #27, !dbg !7997
  tail call fastcc void @set_up_plls() #27, !dbg !7998
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #27, !dbg !7999
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #27, !dbg !8002
  br label %14, !dbg !8003

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #27, !dbg !8004
  %16 = icmp eq i32 %15, 8, !dbg !8005
  br i1 %16, label %17, label %14, !dbg !8003, !llvm.loop !8006

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !8008
  br i1 %18, label %19, label %21, !dbg !8010

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #26, !dbg !8011
  br label %21, !dbg !8013

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !8014
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #27, !dbg !8015
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #27, !dbg !8016
  ret i32 0, !dbg !8017
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #16 !dbg !8018 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8020
  %2 = and i32 %1, 240, !dbg !8020
  ret i32 %2, !dbg !8021
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #15 !dbg !8022 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #27, !dbg !8023
  tail call fastcc void @LL_RCC_HSE_Enable() #27, !dbg !8028
  br label %1, !dbg !8029

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #27, !dbg !8030
  %3 = icmp eq i32 %2, 1, !dbg !8031
  br i1 %3, label %4, label %1, !dbg !8029, !llvm.loop !8032

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #27, !dbg !8034
  br label %5, !dbg !8037

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #27, !dbg !8038
  %7 = icmp eq i32 %6, 1, !dbg !8039
  br i1 %7, label %8, label %5, !dbg !8037, !llvm.loop !8040

8:                                                ; preds = %5
  ret void, !dbg !8042
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !8043 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #27, !dbg !8044
  %2 = icmp eq i32 %1, 8, !dbg !8046
  br i1 %2, label %3, label %4, !dbg !8047

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #27, !dbg !8048
  tail call fastcc void @stm32_clock_switch_to_hsi() #27, !dbg !8050
  br label %4, !dbg !8051

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #27, !dbg !8052
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8053
  %6 = and i32 %5, -196609, !dbg !8053
  %7 = or i32 %6, 65536, !dbg !8053
  store volatile i32 %7, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8053
  %8 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8054
  %9 = and i32 %8, -251658241, !dbg !8054
  %10 = or i32 %9, 117440512, !dbg !8054
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8054
  tail call void @config_pll_sysclock() #26, !dbg !8055
  tail call fastcc void @LL_RCC_PLL_Enable() #27, !dbg !8056
  br label %11, !dbg !8057

11:                                               ; preds = %11, %4
  %12 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #27, !dbg !8058
  %13 = icmp eq i32 %12, 1, !dbg !8059
  br i1 %13, label %14, label %11, !dbg !8057, !llvm.loop !8060

14:                                               ; preds = %11
  ret void, !dbg !8062
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #15 !dbg !8063 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8065, metadata !DIExpression()), !dbg !8066
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8067
  %2 = and i32 %1, -241, !dbg !8067
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8067
  ret void, !dbg !8068
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #15 !dbg !8069 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8071, metadata !DIExpression()), !dbg !8072
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8073
  %3 = and i32 %2, -4, !dbg !8073
  %4 = or i32 %3, %0, !dbg !8073
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8073
  ret void, !dbg !8074
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #16 !dbg !8075 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8076
  %2 = and i32 %1, 12, !dbg !8076
  ret i32 %2, !dbg !8077
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #15 !dbg !8078 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !8080, metadata !DIExpression()), !dbg !8081
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8082
  %2 = and i32 %1, -7169, !dbg !8082
  %3 = or i32 %2, 4096, !dbg !8082
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8082
  ret void, !dbg !8083
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #15 !dbg !8084 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8086, metadata !DIExpression()), !dbg !8087
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8088
  %2 = and i32 %1, -57345, !dbg !8088
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8088
  ret void, !dbg !8089
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #15 !dbg !8090 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #27, !dbg !8091
  %2 = icmp eq i32 %1, 1, !dbg !8093
  br i1 %2, label %7, label %3, !dbg !8094

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #27, !dbg !8095
  br label %4, !dbg !8097

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #27, !dbg !8098
  %6 = icmp eq i32 %5, 1, !dbg !8099
  br i1 %6, label %7, label %4, !dbg !8097, !llvm.loop !8100

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #27, !dbg !8102
  br label %8, !dbg !8103

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #27, !dbg !8104
  %10 = icmp eq i32 %9, 0, !dbg !8105
  br i1 %10, label %11, label %8, !dbg !8103, !llvm.loop !8106

11:                                               ; preds = %8
  ret void, !dbg !8108
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #15 !dbg !8109 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8110
  %2 = and i32 %1, -16777217, !dbg !8110
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8110
  ret void, !dbg !8111
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #15 !dbg !8112 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8113
  %2 = or i32 %1, 16777216, !dbg !8113
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8113
  ret void, !dbg !8114
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #16 !dbg !8115 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8116
  %2 = lshr i32 %1, 25, !dbg !8117
  %3 = and i32 %2, 1, !dbg !8117
  ret i32 %3, !dbg !8118
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #16 !dbg !8119 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8120
  %2 = lshr i32 %1, 1, !dbg !8121
  %3 = and i32 %2, 1, !dbg !8121
  ret i32 %3, !dbg !8122
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #15 !dbg !8123 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8124
  %2 = or i32 %1, 1, !dbg !8124
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8124
  ret void, !dbg !8125
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #15 !dbg !8126 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8127
  %2 = and i32 %1, -262145, !dbg !8127
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8127
  ret void, !dbg !8128
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #15 !dbg !8129 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8130
  %2 = or i32 %1, 65536, !dbg !8130
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8130
  ret void, !dbg !8131
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #16 !dbg !8132 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8133
  %2 = lshr i32 %1, 17, !dbg !8134
  %3 = and i32 %2, 1, !dbg !8134
  ret i32 %3, !dbg !8135
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #15 !dbg !8136 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8137
  %2 = or i32 %1, 1, !dbg !8137
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8137
  ret void, !dbg !8138
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #16 !dbg !8139 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8140
  %2 = lshr i32 %1, 1, !dbg !8141
  %3 = and i32 %2, 1, !dbg !8141
  ret i32 %3, !dbg !8142
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #11 !dbg !8143 {
  ret i32 16000000, !dbg !8145
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #15 !dbg !8149 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #27, !dbg !8150
  ret void, !dbg !8151
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #15 !dbg !8152 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !8156, metadata !DIExpression()), !dbg !8160
  call void @llvm.dbg.value(metadata i32 16, metadata !8157, metadata !DIExpression()), !dbg !8160
  call void @llvm.dbg.value(metadata i32 336, metadata !8158, metadata !DIExpression()), !dbg !8160
  call void @llvm.dbg.value(metadata i32 65536, metadata !8159, metadata !DIExpression()), !dbg !8160
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8161
  %2 = and i32 %1, -4227072, !dbg !8161
  %3 = or i32 %2, 4215824, !dbg !8161
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8161
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8162
  %5 = and i32 %4, -196609, !dbg !8162
  %6 = or i32 %5, 65536, !dbg !8162
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8162
  ret void, !dbg !8163
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #17 !dbg !8164 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #27, !dbg !8165
  ret void, !dbg !8166
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #17 !dbg !8167 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !8170, metadata !DIExpression()), !dbg !8172
  %2 = bitcast i32* %1 to i8*, !dbg !8173
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !8173
  call void @llvm.dbg.declare(metadata i32* %1, metadata !8171, metadata !DIExpression()), !dbg !8174
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8175
  %4 = or i32 %3, 268435456, !dbg !8175
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8175
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8176
  %6 = and i32 %5, 268435456, !dbg !8176
  store volatile i32 %6, i32* %1, align 4, !dbg !8177
  %7 = load volatile i32, i32* %1, align 4, !dbg !8178
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !8179
  ret void, !dbg !8179
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8180 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8182, metadata !DIExpression()), !dbg !8183
  %2 = tail call fastcc zeroext i1 @device_is_ready() #27, !dbg !8184
  br i1 %2, label %3, label %4, !dbg !8186

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #27, !dbg !8187
  br label %4, !dbg !8188

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !8183
  ret i32 %5, !dbg !8189
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !8190 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !8195, metadata !DIExpression()), !dbg !8196
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8197, !srcloc !8199
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #27, !dbg !8200
  ret i1 %1, !dbg !8201
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !8202 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #26, !dbg !8203
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #26, !dbg !8204
  ret void, !dbg !8205
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !8206 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8208, metadata !DIExpression()), !dbg !8209
  %2 = icmp eq i32 %0, 10, !dbg !8210
  br i1 %2, label %3, label %4, !dbg !8212

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #27, !dbg !8213
  br label %4, !dbg !8215

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !8216
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #27, !dbg !8217
  ret i32 %0, !dbg !8218
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8219 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !8222, metadata !DIExpression()), !dbg !8224
  call void @llvm.dbg.value(metadata i8 %0, metadata !8223, metadata !DIExpression()), !dbg !8224
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8225, !srcloc !8227
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #27, !dbg !8228
  ret void, !dbg !8229
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8230 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !8232, metadata !DIExpression()), !dbg !8235
  call void @llvm.dbg.value(metadata i8 %0, metadata !8233, metadata !DIExpression()), !dbg !8235
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_47, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8236
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !8234, metadata !DIExpression()), !dbg !8235
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !8237
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !8237
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_47, i8 noundef zeroext %0) #26, !dbg !8238
  ret void, !dbg !8239
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !8240 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !8242, metadata !DIExpression()), !dbg !8243
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_47) #26, !dbg !8244
  ret i1 %1, !dbg !8245
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_register_input(%struct.k_fifo* noundef %0, %struct.k_fifo* noundef %1, i8 (i8*, i8)* noundef %2) local_unnamed_addr #1 !dbg !8246 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !8250, metadata !DIExpression()), !dbg !8253
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !8251, metadata !DIExpression()), !dbg !8253
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !8252, metadata !DIExpression()), !dbg !8253
  store %struct.k_fifo* %0, %struct.k_fifo** @avail_queue, align 4, !dbg !8254
  store %struct.k_fifo* %1, %struct.k_fifo** @lines_queue, align 4, !dbg !8255
  store i8 (i8*, i8)* %2, i8 (i8*, i8)** @completion_cb, align 4, !dbg !8256
  tail call fastcc void @console_input_init() #27, !dbg !8257
  ret void, !dbg !8258
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @console_input_init() unnamed_addr #1 !dbg !8259 {
  %1 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #25, !dbg !8262
  tail call fastcc void @uart_irq_rx_disable() #27, !dbg !8263
  tail call fastcc void @uart_irq_tx_disable() #27, !dbg !8264
  tail call fastcc void @uart_irq_callback_set() #27, !dbg !8265
  %2 = call fastcc i32 @uart_irq_rx_ready() #27, !dbg !8266
  %3 = icmp eq i32 %2, 0, !dbg !8267
  br i1 %3, label %8, label %4, !dbg !8267

4:                                                ; preds = %0, %4
  call void @llvm.dbg.value(metadata i8* %1, metadata !8261, metadata !DIExpression(DW_OP_deref)), !dbg !8268
  %5 = call fastcc i32 @uart_fifo_read(i8* noundef nonnull %1) #27, !dbg !8269
  %6 = call fastcc i32 @uart_irq_rx_ready() #27, !dbg !8266
  %7 = icmp eq i32 %6, 0, !dbg !8267
  br i1 %7, label %8, label %4, !dbg !8267, !llvm.loop !8271

8:                                                ; preds = %4, %0
  call fastcc void @uart_irq_rx_enable() #27, !dbg !8273
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #25, !dbg !8274
  ret void, !dbg !8274
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_rx_disable() unnamed_addr #1 !dbg !8275 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !8277, metadata !DIExpression()), !dbg !8278
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8279, !srcloc !8281
  tail call fastcc void @z_impl_uart_irq_rx_disable() #27, !dbg !8282
  ret void, !dbg !8283
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_tx_disable() unnamed_addr #1 !dbg !8284 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !8286, metadata !DIExpression()), !dbg !8287
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8288, !srcloc !8290
  tail call fastcc void @z_impl_uart_irq_tx_disable() #27, !dbg !8291
  ret void, !dbg !8292
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_callback_set() unnamed_addr #1 !dbg !8293 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !8297, metadata !DIExpression()), !dbg !8299
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* @uart_console_isr, metadata !8298, metadata !DIExpression()), !dbg !8299
  tail call fastcc void @uart_irq_callback_user_data_set() #27, !dbg !8300
  ret void, !dbg !8301
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_rx_ready() unnamed_addr #1 !dbg !8302 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !8304, metadata !DIExpression()), !dbg !8306
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_47, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8307
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !8305, metadata !DIExpression()), !dbg !8306
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 13, !dbg !8308
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !8308
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !8310
  br i1 %4, label %7, label %5, !dbg !8311

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_47) #26, !dbg !8312
  br label %7, !dbg !8313

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !8306
  ret i32 %8, !dbg !8314
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_fifo_read(i8* noundef %0) unnamed_addr #1 !dbg !8315 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !8317, metadata !DIExpression()), !dbg !8321
  call void @llvm.dbg.value(metadata i8* %0, metadata !8318, metadata !DIExpression()), !dbg !8321
  call void @llvm.dbg.value(metadata i32 1, metadata !8319, metadata !DIExpression()), !dbg !8321
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_47, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8322
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !8320, metadata !DIExpression()), !dbg !8321
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 6, !dbg !8323
  %4 = load i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)** %3, align 4, !dbg !8323
  %5 = icmp eq i32 (%struct.device*, i8*, i32)* %4, null, !dbg !8325
  br i1 %5, label %8, label %6, !dbg !8326

6:                                                ; preds = %1
  %7 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_47, i8* noundef %0, i32 noundef 1) #26, !dbg !8327
  br label %8, !dbg !8328

8:                                                ; preds = %1, %6
  %9 = phi i32 [ %7, %6 ], [ -88, %1 ], !dbg !8321
  ret i32 %9, !dbg !8329
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_rx_enable() unnamed_addr #1 !dbg !8330 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !8332, metadata !DIExpression()), !dbg !8333
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8334, !srcloc !8336
  tail call fastcc void @z_impl_uart_irq_rx_enable() #27, !dbg !8337
  ret void, !dbg !8338
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_rx_enable() unnamed_addr #1 !dbg !8339 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !8341, metadata !DIExpression()), !dbg !8343
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_47, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8344
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !8342, metadata !DIExpression()), !dbg !8343
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 10, !dbg !8345
  %3 = load void (%struct.device*)*, void (%struct.device*)** %2, align 4, !dbg !8345
  %4 = icmp eq void (%struct.device*)* %3, null, !dbg !8347
  br i1 %4, label %6, label %5, !dbg !8348

5:                                                ; preds = %0
  tail call void %3(%struct.device* noundef nonnull @__device_dts_ord_47) #26, !dbg !8349
  br label %6, !dbg !8351

6:                                                ; preds = %5, %0
  ret void, !dbg !8352
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_console_isr(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) #1 !dbg !1076 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1078, metadata !DIExpression()), !dbg !8353
  call void @llvm.dbg.value(metadata i8* %1, metadata !1079, metadata !DIExpression()), !dbg !8353
  %4 = call fastcc i32 @uart_irq_update() #27, !dbg !8354
  %5 = icmp eq i32 %4, 0, !dbg !8354
  br i1 %5, label %89, label %6, !dbg !8355

6:                                                ; preds = %2, %86
  %7 = call fastcc i32 @uart_irq_is_pending() #27, !dbg !8356
  %8 = icmp eq i32 %7, 0, !dbg !8355
  br i1 %8, label %89, label %9, !dbg !8357

9:                                                ; preds = %6
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #25, !dbg !8358
  %10 = call fastcc i32 @uart_irq_rx_ready() #27, !dbg !8359
  %11 = icmp eq i32 %10, 0, !dbg !8359
  br i1 %11, label %86, label %12, !dbg !8361, !llvm.loop !8362

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i8* %3, metadata !1080, metadata !DIExpression(DW_OP_deref)), !dbg !8364
  %13 = call fastcc i32 @read_uart(i8* noundef nonnull %3) #27, !dbg !8365
  call void @llvm.dbg.value(metadata i32 %13, metadata !1082, metadata !DIExpression()), !dbg !8364
  %14 = icmp slt i32 %13, 0, !dbg !8366
  br i1 %14, label %85, label %15, !dbg !8368

15:                                               ; preds = %12
  %16 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !8369
  %17 = icmp eq %struct.console_input* %16, null, !dbg !8369
  br i1 %17, label %18, label %23, !dbg !8370

18:                                               ; preds = %15
  %19 = load %struct.k_fifo*, %struct.k_fifo** @avail_queue, align 4, !dbg !8371
  %20 = getelementptr inbounds %struct.k_fifo, %struct.k_fifo* %19, i32 0, i32 0, !dbg !8371
  %21 = call fastcc i8* @k_queue_get.48(%struct.k_queue* noundef %20) #27, !dbg !8371
  call void @llvm.dbg.value(metadata i8* %21, metadata !1083, metadata !DIExpression()), !dbg !8372
  store i8* %21, i8** bitcast (%struct.console_input** @uart_console_isr.cmd to i8**), align 4, !dbg !8373
  %22 = icmp eq i8* %21, null, !dbg !8374
  br i1 %22, label %85, label %23, !dbg !8376

23:                                               ; preds = %18, %15
  %24 = call fastcc zeroext i1 @atomic_test_bit(i32 noundef 1) #27, !dbg !8377
  br i1 %24, label %25, label %29, !dbg !8379

25:                                               ; preds = %23
  %26 = load i8, i8* %3, align 1, !dbg !8380
  call void @llvm.dbg.value(metadata i8 %26, metadata !1080, metadata !DIExpression()), !dbg !8364
  %27 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !8382
  %28 = getelementptr inbounds %struct.console_input, %struct.console_input* %27, i32 0, i32 2, i32 0, !dbg !8382
  call fastcc void @handle_ansi(i8 noundef zeroext %26, i8* noundef nonnull %28) #27, !dbg !8383
  br label %86, !dbg !8384, !llvm.loop !8362

29:                                               ; preds = %23
  %30 = call fastcc zeroext i1 @atomic_test_and_clear_bit(i32 noundef 0) #27, !dbg !8385
  %31 = load i8, i8* %3, align 1, !dbg !8364
  call void @llvm.dbg.value(metadata i8 %31, metadata !1080, metadata !DIExpression()), !dbg !8364
  call void @llvm.dbg.value(metadata i8 %31, metadata !1080, metadata !DIExpression()), !dbg !8364
  br i1 %30, label %32, label %35, !dbg !8387

32:                                               ; preds = %29
  %33 = icmp eq i8 %31, 91, !dbg !8388
  br i1 %33, label %34, label %86, !dbg !8391, !llvm.loop !8362

34:                                               ; preds = %32
  call fastcc void @atomic_set_bit(i32 noundef 1) #27, !dbg !8392
  call fastcc void @atomic_set_bit(i32 noundef 2) #27, !dbg !8394
  br label %86, !dbg !8395, !llvm.loop !8362

35:                                               ; preds = %29
  %36 = zext i8 %31 to i32, !dbg !8396
  %37 = call fastcc i32 @isprint(i32 noundef %36) #27, !dbg !8398
  %38 = icmp eq i32 %37, 0, !dbg !8398
  br i1 %38, label %39, label %74, !dbg !8399

39:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i8 undef, metadata !1080, metadata !DIExpression()), !dbg !8364
  switch i8 %31, label %86 [
    i8 8, label %40
    i8 127, label %40
    i8 27, label %49
    i8 13, label %50
    i8 9, label %61
  ], !dbg !8400, !llvm.loop !8362

40:                                               ; preds = %39, %39
  %41 = load i8, i8* @cur, align 1, !dbg !8402
  %42 = icmp eq i8 %41, 0, !dbg !8405
  br i1 %42, label %86, label %43, !dbg !8406, !llvm.loop !8362

43:                                               ; preds = %40
  %44 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !8407
  %45 = add i8 %41, -1, !dbg !8409
  store i8 %45, i8* @cur, align 1, !dbg !8409
  %46 = zext i8 %45 to i32, !dbg !8407
  %47 = getelementptr inbounds %struct.console_input, %struct.console_input* %44, i32 0, i32 2, i32 %46, !dbg !8407
  %48 = load i8, i8* @end, align 1, !dbg !8410
  call fastcc void @del_char(i8* noundef nonnull %47, i8 noundef zeroext %48) #27, !dbg !8411
  br label %86, !dbg !8412, !llvm.loop !8362

49:                                               ; preds = %39
  call fastcc void @atomic_set_bit(i32 noundef 0) #27, !dbg !8413
  br label %86, !dbg !8414, !llvm.loop !8362

50:                                               ; preds = %39
  %51 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !8415
  %52 = load i8, i8* @cur, align 1, !dbg !8416
  %53 = zext i8 %52 to i32, !dbg !8416
  %54 = load i8, i8* @end, align 1, !dbg !8417
  %55 = zext i8 %54 to i32, !dbg !8417
  %56 = add nuw nsw i32 %55, %53, !dbg !8418
  %57 = getelementptr inbounds %struct.console_input, %struct.console_input* %51, i32 0, i32 2, i32 %56, !dbg !8415
  store i8 0, i8* %57, align 1, !dbg !8419
  call fastcc void @uart_poll_out(i8 noundef zeroext 13) #27, !dbg !8420
  call fastcc void @uart_poll_out(i8 noundef zeroext 10) #27, !dbg !8421
  store i8 0, i8* @cur, align 1, !dbg !8422
  store i8 0, i8* @end, align 1, !dbg !8423
  %58 = load %struct.k_fifo*, %struct.k_fifo** @lines_queue, align 4, !dbg !8424
  %59 = getelementptr inbounds %struct.k_fifo, %struct.k_fifo* %58, i32 0, i32 0, !dbg !8424
  %60 = load i8*, i8** bitcast (%struct.console_input** @uart_console_isr.cmd to i8**), align 4, !dbg !8424
  call void @k_queue_append(%struct.k_queue* noundef %59, i8* noundef %60) #26, !dbg !8424
  store %struct.console_input* null, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !8426
  br label %86, !dbg !8427, !llvm.loop !8362

61:                                               ; preds = %39
  %62 = load i8 (i8*, i8)*, i8 (i8*, i8)** @completion_cb, align 4, !dbg !8428
  %63 = icmp eq i8 (i8*, i8)* %62, null, !dbg !8428
  %64 = load i8, i8* @end, align 1
  %65 = icmp ne i8 %64, 0
  %66 = select i1 %63, i1 true, i1 %65, !dbg !8430
  br i1 %66, label %86, label %67, !dbg !8430, !llvm.loop !8362

67:                                               ; preds = %61
  %68 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !8431
  %69 = getelementptr inbounds %struct.console_input, %struct.console_input* %68, i32 0, i32 2, i32 0, !dbg !8431
  %70 = load i8, i8* @cur, align 1, !dbg !8433
  %71 = call zeroext i8 %62(i8* noundef nonnull %69, i8 noundef zeroext %70) #26, !dbg !8434
  %72 = load i8, i8* @cur, align 1, !dbg !8435
  %73 = add i8 %72, %71, !dbg !8435
  store i8 %73, i8* @cur, align 1, !dbg !8435
  br label %86, !dbg !8436, !llvm.loop !8362

74:                                               ; preds = %35
  %75 = load i8, i8* @cur, align 1, !dbg !8437
  %76 = zext i8 %75 to i32, !dbg !8437
  %77 = load i8, i8* @end, align 1, !dbg !8439
  %78 = zext i8 %77 to i32, !dbg !8439
  %79 = add nuw nsw i32 %78, %76, !dbg !8440
  %80 = icmp ult i32 %79, 127, !dbg !8441
  br i1 %80, label %81, label %86, !dbg !8442

81:                                               ; preds = %74
  %82 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !8443
  %83 = add i8 %75, 1, !dbg !8445
  store i8 %83, i8* @cur, align 1, !dbg !8445
  %84 = getelementptr inbounds %struct.console_input, %struct.console_input* %82, i32 0, i32 2, i32 %76, !dbg !8443
  call void @llvm.dbg.value(metadata i8 %31, metadata !1080, metadata !DIExpression()), !dbg !8364
  call fastcc void @insert_char(i8* noundef nonnull %84, i8 noundef zeroext %31, i8 noundef zeroext %77) #27, !dbg !8446
  br label %86, !dbg !8447

85:                                               ; preds = %12, %18
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #25, !dbg !8363
  br label %89

86:                                               ; preds = %74, %81, %49, %50, %43, %40, %67, %61, %39, %32, %34, %9, %25
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #25, !dbg !8363
  %87 = call fastcc i32 @uart_irq_update() #27, !dbg !8354
  %88 = icmp eq i32 %87, 0, !dbg !8354
  br i1 %88, label %89, label %6, !dbg !8355

89:                                               ; preds = %6, %86, %2, %85
  ret void, !dbg !8448
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_callback_user_data_set() unnamed_addr #1 !dbg !8449 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !8451, metadata !DIExpression()), !dbg !8455
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* @uart_console_isr, metadata !8452, metadata !DIExpression()), !dbg !8455
  call void @llvm.dbg.value(metadata i8* null, metadata !8453, metadata !DIExpression()), !dbg !8455
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_47, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8456
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !8454, metadata !DIExpression()), !dbg !8455
  %2 = icmp eq %struct.uart_driver_api* %1, null, !dbg !8457
  br i1 %2, label %8, label %3, !dbg !8459

3:                                                ; preds = %0
  %4 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 18, !dbg !8460
  %5 = load void (%struct.device*, void (%struct.device*, i8*)*, i8*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)** %4, align 4, !dbg !8460
  %6 = icmp eq void (%struct.device*, void (%struct.device*, i8*)*, i8*)* %5, null, !dbg !8461
  br i1 %6, label %8, label %7, !dbg !8462

7:                                                ; preds = %3
  tail call void %5(%struct.device* noundef nonnull @__device_dts_ord_47, void (%struct.device*, i8*)* noundef nonnull @uart_console_isr, i8* noundef null) #26, !dbg !8463
  br label %8, !dbg !8465

8:                                                ; preds = %7, %3, %0
  ret void, !dbg !8466
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_update() unnamed_addr #1 !dbg !8467 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !8469, metadata !DIExpression()), !dbg !8470
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8471, !srcloc !8473
  %1 = tail call fastcc i32 @z_impl_uart_irq_update() #27, !dbg !8474
  ret i32 %1, !dbg !8475
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_is_pending() unnamed_addr #1 !dbg !8476 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !8478, metadata !DIExpression()), !dbg !8479
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8480, !srcloc !8482
  %1 = tail call fastcc i32 @z_impl_uart_irq_is_pending() #27, !dbg !8483
  ret i32 %1, !dbg !8484
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @read_uart(i8* noundef %0) unnamed_addr #1 !dbg !8485 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !8489, metadata !DIExpression()), !dbg !8493
  call void @llvm.dbg.value(metadata i8* %0, metadata !8490, metadata !DIExpression()), !dbg !8493
  call void @llvm.dbg.value(metadata i32 1, metadata !8491, metadata !DIExpression()), !dbg !8493
  %2 = tail call fastcc i32 @uart_fifo_read(i8* noundef %0) #27, !dbg !8494
  call void @llvm.dbg.value(metadata i32 %2, metadata !8492, metadata !DIExpression()), !dbg !8493
  %3 = icmp slt i32 %2, 0, !dbg !8495
  br i1 %3, label %4, label %5, !dbg !8497

4:                                                ; preds = %1
  tail call fastcc void @uart_irq_rx_disable() #27, !dbg !8498
  br label %5, !dbg !8500

5:                                                ; preds = %1, %4
  %6 = phi i32 [ -5, %4 ], [ %2, %1 ], !dbg !8493
  ret i32 %6, !dbg !8501
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @k_queue_get.48(%struct.k_queue* noundef %0) unnamed_addr #1 !dbg !8502 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !8512, metadata !DIExpression()), !dbg !8513
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !8511, metadata !DIExpression()), !dbg !8513
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8514, !srcloc !8516
  %2 = tail call i8* @z_impl_k_queue_get(%struct.k_queue* noundef %0, [1 x i64] zeroinitializer) #26, !dbg !8517
  ret i8* %2, !dbg !8518
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @atomic_test_bit(i32 noundef %0) unnamed_addr #16 !dbg !8519 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !8525, metadata !DIExpression()), !dbg !8529
  call void @llvm.dbg.value(metadata i32 %0, metadata !8526, metadata !DIExpression()), !dbg !8529
  %2 = tail call fastcc i32 @atomic_get() #27, !dbg !8530
  call void @llvm.dbg.value(metadata i32 %2, metadata !8527, metadata !DIExpression()), !dbg !8529
  %3 = and i32 %0, 31, !dbg !8531
  %4 = shl nuw i32 1, %3, !dbg !8532
  %5 = and i32 %2, %4, !dbg !8532
  %6 = icmp ne i32 %5, 0, !dbg !8532
  ret i1 %6, !dbg !8533
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @handle_ansi(i8 noundef zeroext %0, i8* nocapture noundef %1) unnamed_addr #1 !dbg !8534 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !8538, metadata !DIExpression()), !dbg !8541
  call void @llvm.dbg.value(metadata i8* %1, metadata !8539, metadata !DIExpression()), !dbg !8541
  %3 = tail call fastcc zeroext i1 @atomic_test_and_clear_bit(i32 noundef 2) #27, !dbg !8542
  br i1 %3, label %4, label %11, !dbg !8544

4:                                                ; preds = %2
  %5 = zext i8 %0 to i32, !dbg !8545
  %6 = tail call fastcc i32 @isdigit.50(i32 noundef %5) #27, !dbg !8548
  %7 = icmp eq i32 %6, 0, !dbg !8548
  br i1 %7, label %8, label %9, !dbg !8549

8:                                                ; preds = %4
  store i32 1, i32* @ansi_val, align 4, !dbg !8550
  br label %34, !dbg !8552

9:                                                ; preds = %4
  tail call fastcc void @atomic_set_bit(i32 noundef 3) #27, !dbg !8553
  %10 = add nsw i32 %5, -48, !dbg !8554
  store i32 %10, i32* @ansi_val, align 4, !dbg !8555
  store i32 0, i32* @ansi_val_2, align 4, !dbg !8556
  br label %81, !dbg !8557

11:                                               ; preds = %2
  %12 = tail call fastcc zeroext i1 @atomic_test_bit(i32 noundef 3) #27, !dbg !8558
  br i1 %12, label %13, label %34, !dbg !8560

13:                                               ; preds = %11
  %14 = zext i8 %0 to i32, !dbg !8561
  %15 = tail call fastcc i32 @isdigit.50(i32 noundef %14) #27, !dbg !8564
  %16 = icmp eq i32 %15, 0, !dbg !8564
  br i1 %16, label %29, label %17, !dbg !8565

17:                                               ; preds = %13
  %18 = tail call fastcc zeroext i1 @atomic_test_bit(i32 noundef 4) #27, !dbg !8566
  br i1 %18, label %19, label %24, !dbg !8569

19:                                               ; preds = %17
  %20 = load i32, i32* @ansi_val_2, align 4, !dbg !8570
  %21 = mul i32 %20, 10, !dbg !8570
  %22 = add nsw i32 %14, -48, !dbg !8572
  %23 = add i32 %22, %21, !dbg !8573
  store i32 %23, i32* @ansi_val_2, align 4, !dbg !8573
  br label %81, !dbg !8574

24:                                               ; preds = %17
  %25 = load i32, i32* @ansi_val, align 4, !dbg !8575
  %26 = mul i32 %25, 10, !dbg !8575
  %27 = add nsw i32 %14, -48, !dbg !8577
  %28 = add i32 %27, %26, !dbg !8578
  store i32 %28, i32* @ansi_val, align 4, !dbg !8578
  br label %81

29:                                               ; preds = %13
  %30 = icmp eq i8 %0, 59, !dbg !8579
  br i1 %30, label %31, label %33, !dbg !8581

31:                                               ; preds = %29
  %32 = tail call fastcc zeroext i1 @atomic_test_and_set_bit() #27, !dbg !8582
  br i1 %32, label %33, label %81, !dbg !8583

33:                                               ; preds = %31, %29
  tail call fastcc void @atomic_clear_bit(i32 noundef 3) #27, !dbg !8584
  tail call fastcc void @atomic_clear_bit(i32 noundef 4) #27, !dbg !8585
  br label %34, !dbg !8586

34:                                               ; preds = %11, %33, %8
  call void @llvm.dbg.label(metadata !8540), !dbg !8587
  switch i8 %0, label %80 [
    i8 68, label %35
    i8 67, label %45
    i8 72, label %55
    i8 70, label %63
    i8 126, label %71
  ], !dbg !8588

35:                                               ; preds = %34
  %36 = load i32, i32* @ansi_val, align 4, !dbg !8589
  %37 = load i8, i8* @cur, align 1, !dbg !8592
  %38 = zext i8 %37 to i32, !dbg !8592
  %39 = icmp ugt i32 %36, %38, !dbg !8593
  br i1 %39, label %80, label %40, !dbg !8594

40:                                               ; preds = %35
  %41 = load i8, i8* @end, align 1, !dbg !8595
  %42 = trunc i32 %36 to i8, !dbg !8595
  %43 = add i8 %41, %42, !dbg !8595
  store i8 %43, i8* @end, align 1, !dbg !8595
  %44 = sub i8 %37, %42, !dbg !8596
  store i8 %44, i8* @cur, align 1, !dbg !8596
  tail call fastcc void @cursor_backward(i32 noundef %36) #27, !dbg !8597
  br label %80, !dbg !8598

45:                                               ; preds = %34
  %46 = load i32, i32* @ansi_val, align 4, !dbg !8599
  %47 = load i8, i8* @end, align 1, !dbg !8601
  %48 = zext i8 %47 to i32, !dbg !8601
  %49 = icmp ugt i32 %46, %48, !dbg !8602
  br i1 %49, label %80, label %50, !dbg !8603

50:                                               ; preds = %45
  %51 = trunc i32 %46 to i8, !dbg !8604
  %52 = sub i8 %47, %51, !dbg !8604
  store i8 %52, i8* @end, align 1, !dbg !8604
  %53 = load i8, i8* @cur, align 1, !dbg !8605
  %54 = add i8 %53, %51, !dbg !8605
  store i8 %54, i8* @cur, align 1, !dbg !8605
  tail call fastcc void @cursor_forward(i32 noundef %46) #27, !dbg !8606
  br label %80, !dbg !8607

55:                                               ; preds = %34
  %56 = load i8, i8* @cur, align 1, !dbg !8608
  %57 = icmp eq i8 %56, 0, !dbg !8608
  br i1 %57, label %80, label %58, !dbg !8610

58:                                               ; preds = %55
  %59 = zext i8 %56 to i32, !dbg !8611
  tail call fastcc void @cursor_backward(i32 noundef %59) #27, !dbg !8612
  %60 = load i8, i8* @cur, align 1, !dbg !8613
  %61 = load i8, i8* @end, align 1, !dbg !8614
  %62 = add i8 %61, %60, !dbg !8614
  store i8 %62, i8* @end, align 1, !dbg !8614
  store i8 0, i8* @cur, align 1, !dbg !8615
  br label %80, !dbg !8616

63:                                               ; preds = %34
  %64 = load i8, i8* @end, align 1, !dbg !8617
  %65 = icmp eq i8 %64, 0, !dbg !8617
  br i1 %65, label %80, label %66, !dbg !8619

66:                                               ; preds = %63
  %67 = zext i8 %64 to i32, !dbg !8620
  tail call fastcc void @cursor_forward(i32 noundef %67) #27, !dbg !8621
  %68 = load i8, i8* @end, align 1, !dbg !8622
  %69 = load i8, i8* @cur, align 1, !dbg !8623
  %70 = add i8 %69, %68, !dbg !8623
  store i8 %70, i8* @cur, align 1, !dbg !8623
  store i8 0, i8* @end, align 1, !dbg !8624
  br label %80, !dbg !8625

71:                                               ; preds = %34
  %72 = load i8, i8* @end, align 1, !dbg !8626
  %73 = icmp eq i8 %72, 0, !dbg !8626
  br i1 %73, label %80, label %74, !dbg !8628

74:                                               ; preds = %71
  tail call fastcc void @cursor_forward(i32 noundef 1) #27, !dbg !8629
  %75 = load i8, i8* @cur, align 1, !dbg !8630
  %76 = zext i8 %75 to i32, !dbg !8631
  %77 = getelementptr inbounds i8, i8* %1, i32 %76, !dbg !8631
  %78 = load i8, i8* @end, align 1, !dbg !8632
  %79 = add i8 %78, -1, !dbg !8632
  store i8 %79, i8* @end, align 1, !dbg !8632
  tail call fastcc void @del_char(i8* noundef %77, i8 noundef zeroext %79) #27, !dbg !8633
  br label %80, !dbg !8634

80:                                               ; preds = %34, %71, %63, %55, %45, %35, %74, %66, %58, %50, %40
  tail call fastcc void @atomic_clear_bit(i32 noundef 1) #27, !dbg !8635
  br label %81, !dbg !8636

81:                                               ; preds = %31, %19, %24, %80, %9
  ret void, !dbg !8636
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @atomic_test_and_clear_bit(i32 noundef %0) unnamed_addr #16 !dbg !8637 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !8642, metadata !DIExpression()), !dbg !8646
  call void @llvm.dbg.value(metadata i32 %0, metadata !8643, metadata !DIExpression()), !dbg !8646
  %2 = and i32 %0, 31, !dbg !8647
  %3 = shl nuw i32 1, %2, !dbg !8647
  call void @llvm.dbg.value(metadata i32 %3, metadata !8644, metadata !DIExpression()), !dbg !8646
  %4 = xor i32 %3, -1, !dbg !8648
  %5 = tail call fastcc i32 @atomic_and(i32 noundef %4) #27, !dbg !8649
  call void @llvm.dbg.value(metadata i32 %5, metadata !8645, metadata !DIExpression()), !dbg !8646
  %6 = and i32 %5, %3, !dbg !8650
  %7 = icmp ne i32 %6, 0, !dbg !8651
  ret i1 %7, !dbg !8652
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_set_bit(i32 noundef %0) unnamed_addr #16 !dbg !8653 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !8657, metadata !DIExpression()), !dbg !8660
  call void @llvm.dbg.value(metadata i32 %0, metadata !8658, metadata !DIExpression()), !dbg !8660
  %2 = and i32 %0, 31, !dbg !8661
  %3 = shl nuw i32 1, %2, !dbg !8661
  call void @llvm.dbg.value(metadata i32 %3, metadata !8659, metadata !DIExpression()), !dbg !8660
  %4 = tail call fastcc i32 @atomic_or(i32 noundef %3) #27, !dbg !8662
  ret void, !dbg !8663
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #11 !dbg !8664 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8666, metadata !DIExpression()), !dbg !8667
  %2 = add i32 %0, -32, !dbg !8668
  %3 = icmp ult i32 %2, 95, !dbg !8668
  %4 = zext i1 %3 to i32, !dbg !8668
  ret i32 %4, !dbg !8669
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @del_char(i8* nocapture noundef %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !8670 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8674, metadata !DIExpression()), !dbg !8676
  call void @llvm.dbg.value(metadata i8 %1, metadata !8675, metadata !DIExpression()), !dbg !8676
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 8) #27, !dbg !8677
  %3 = icmp eq i8 %1, 0, !dbg !8678
  br i1 %3, label %4, label %5, !dbg !8680

4:                                                ; preds = %2
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 32) #27, !dbg !8681
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 8) #27, !dbg !8683
  br label %14, !dbg !8684

5:                                                ; preds = %2
  tail call fastcc void @cursor_save() #27, !dbg !8685
  call void @llvm.dbg.value(metadata i8 %1, metadata !8675, metadata !DIExpression()), !dbg !8676
  call void @llvm.dbg.value(metadata i8* %0, metadata !8674, metadata !DIExpression()), !dbg !8676
  call void @llvm.dbg.value(metadata i8 %1, metadata !8675, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8676
  br label %6, !dbg !8686

6:                                                ; preds = %5, %6
  %7 = phi i8 [ %1, %5 ], [ %9, %6 ]
  %8 = phi i8* [ %0, %5 ], [ %10, %6 ]
  call void @llvm.dbg.value(metadata i8 %7, metadata !8675, metadata !DIExpression()), !dbg !8676
  call void @llvm.dbg.value(metadata i8* %8, metadata !8674, metadata !DIExpression()), !dbg !8676
  %9 = add i8 %7, -1, !dbg !8687
  call void @llvm.dbg.value(metadata i8 %9, metadata !8675, metadata !DIExpression()), !dbg !8676
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8688
  %11 = load i8, i8* %10, align 1, !dbg !8690
  store i8 %11, i8* %8, align 1, !dbg !8691
  call void @llvm.dbg.value(metadata i8* %10, metadata !8674, metadata !DIExpression()), !dbg !8676
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %11) #27, !dbg !8692
  call void @llvm.dbg.value(metadata i8 %9, metadata !8675, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8676
  %12 = icmp eq i8 %9, 0, !dbg !8693
  br i1 %12, label %13, label %6, !dbg !8686, !llvm.loop !8694

13:                                               ; preds = %6
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 32) #27, !dbg !8696
  tail call fastcc void @cursor_restore() #27, !dbg !8697
  br label %14, !dbg !8698

14:                                               ; preds = %13, %4
  ret void, !dbg !8698
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @insert_char(i8* nocapture noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2) unnamed_addr #1 !dbg !8699 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8703, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata i8 %1, metadata !8704, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata i8 %2, metadata !8705, metadata !DIExpression()), !dbg !8707
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %1) #27, !dbg !8708
  %4 = icmp eq i8 %2, 0, !dbg !8709
  br i1 %4, label %5, label %6, !dbg !8711

5:                                                ; preds = %3
  store i8 %1, i8* %0, align 1, !dbg !8712
  br label %17, !dbg !8714

6:                                                ; preds = %3
  %7 = load i8, i8* %0, align 1, !dbg !8715
  call void @llvm.dbg.value(metadata i8 %7, metadata !8706, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata i8* %0, metadata !8703, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8707
  store i8 %1, i8* %0, align 1, !dbg !8716
  tail call fastcc void @cursor_save() #27, !dbg !8717
  call void @llvm.dbg.value(metadata i8 %7, metadata !8706, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata i8 %2, metadata !8705, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata i8* %0, metadata !8703, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8707
  call void @llvm.dbg.value(metadata i8 %2, metadata !8705, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8707
  br label %8, !dbg !8718

8:                                                ; preds = %6, %8
  %9 = phi i8* [ %0, %6 ], [ %12, %8 ]
  %10 = phi i8 [ %7, %6 ], [ %14, %8 ]
  %11 = phi i8 [ %2, %6 ], [ %13, %8 ]
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8707
  call void @llvm.dbg.value(metadata i8 %10, metadata !8706, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata i8 %11, metadata !8705, metadata !DIExpression()), !dbg !8707
  %13 = add i8 %11, -1, !dbg !8719
  call void @llvm.dbg.value(metadata i8 %13, metadata !8705, metadata !DIExpression()), !dbg !8707
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %10) #27, !dbg !8720
  %14 = load i8, i8* %12, align 1, !dbg !8722
  call void @llvm.dbg.value(metadata i8 %14, metadata !8704, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata i8* %12, metadata !8703, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8707
  store i8 %10, i8* %12, align 1, !dbg !8723
  call void @llvm.dbg.value(metadata i8 %14, metadata !8706, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata i8* %12, metadata !8703, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8707
  call void @llvm.dbg.value(metadata i8 %13, metadata !8705, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8707
  %15 = icmp eq i8 %13, 0, !dbg !8724
  br i1 %15, label %16, label %8, !dbg !8718, !llvm.loop !8725

16:                                               ; preds = %8
  tail call fastcc void @cursor_restore() #27, !dbg !8727
  br label %17, !dbg !8728

17:                                               ; preds = %16, %5
  ret void, !dbg !8728
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_save() unnamed_addr #1 !dbg !8729 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.49, i32 0, i32 0)) #26, !dbg !8730
  ret void, !dbg !8731
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_restore() unnamed_addr #1 !dbg !8732 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i32 0, i32 0)) #26, !dbg !8733
  ret void, !dbg !8734
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_or(i32 noundef %0) unnamed_addr #16 !dbg !8735 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !8740, metadata !DIExpression()), !dbg !8742
  call void @llvm.dbg.value(metadata i32 %0, metadata !8741, metadata !DIExpression()), !dbg !8742
  %2 = atomicrmw or i32* @esc_state, i32 %0 seq_cst, align 4, !dbg !8743
  ret i32 %2, !dbg !8744
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_and(i32 noundef %0) unnamed_addr #16 !dbg !8745 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !8747, metadata !DIExpression()), !dbg !8749
  call void @llvm.dbg.value(metadata i32 %0, metadata !8748, metadata !DIExpression()), !dbg !8749
  %2 = atomicrmw and i32* @esc_state, i32 %0 seq_cst, align 4, !dbg !8750
  ret i32 %2, !dbg !8751
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit.50(i32 noundef %0) unnamed_addr #11 !dbg !8752 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8754, metadata !DIExpression()), !dbg !8755
  %2 = add i32 %0, -48, !dbg !8756
  %3 = icmp ult i32 %2, 10, !dbg !8757
  %4 = zext i1 %3 to i32, !dbg !8757
  ret i32 %4, !dbg !8758
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @atomic_test_and_set_bit() unnamed_addr #16 !dbg !8759 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !8761, metadata !DIExpression()), !dbg !8765
  call void @llvm.dbg.value(metadata i32 4, metadata !8762, metadata !DIExpression()), !dbg !8765
  call void @llvm.dbg.value(metadata i32 16, metadata !8763, metadata !DIExpression()), !dbg !8765
  %1 = tail call fastcc i32 @atomic_or(i32 noundef 16) #27, !dbg !8766
  call void @llvm.dbg.value(metadata i32 %1, metadata !8764, metadata !DIExpression()), !dbg !8765
  %2 = and i32 %1, 16, !dbg !8767
  %3 = icmp ne i32 %2, 0, !dbg !8768
  ret i1 %3, !dbg !8769
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_clear_bit(i32 noundef %0) unnamed_addr #16 !dbg !8770 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !8772, metadata !DIExpression()), !dbg !8775
  call void @llvm.dbg.value(metadata i32 %0, metadata !8773, metadata !DIExpression()), !dbg !8775
  %2 = and i32 %0, 31, !dbg !8776
  %3 = shl nuw i32 1, %2, !dbg !8776
  call void @llvm.dbg.value(metadata i32 %3, metadata !8774, metadata !DIExpression()), !dbg !8775
  %4 = xor i32 %3, -1, !dbg !8777
  %5 = tail call fastcc i32 @atomic_and(i32 noundef %4) #27, !dbg !8778
  ret void, !dbg !8779
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_backward(i32 noundef %0) unnamed_addr #1 !dbg !8780 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8782, metadata !DIExpression()), !dbg !8783
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i32 0, i32 0), i32 noundef %0) #26, !dbg !8784
  ret void, !dbg !8785
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_forward(i32 noundef %0) unnamed_addr #1 !dbg !8786 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8788, metadata !DIExpression()), !dbg !8789
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.51, i32 0, i32 0), i32 noundef %0) #26, !dbg !8790
  ret void, !dbg !8791
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_get() unnamed_addr #16 !dbg !8792 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !8796, metadata !DIExpression()), !dbg !8797
  %1 = load atomic i32, i32* @esc_state seq_cst, align 4, !dbg !8798
  ret i32 %1, !dbg !8799
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_uart_irq_is_pending() unnamed_addr #1 !dbg !8800 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !8802, metadata !DIExpression()), !dbg !8804
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_47, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8805
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !8803, metadata !DIExpression()), !dbg !8804
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 16, !dbg !8806
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !8806
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !8808
  br i1 %4, label %7, label %5, !dbg !8809

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_47) #26, !dbg !8810
  br label %7, !dbg !8811

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !8804
  ret i32 %8, !dbg !8812
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_uart_irq_update() unnamed_addr #1 !dbg !8813 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !8815, metadata !DIExpression()), !dbg !8817
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_47, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8818
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !8816, metadata !DIExpression()), !dbg !8817
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 17, !dbg !8819
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !8819
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !8821
  br i1 %4, label %7, label %5, !dbg !8822

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_47) #26, !dbg !8823
  br label %7, !dbg !8824

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !8817
  ret i32 %8, !dbg !8825
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_tx_disable() unnamed_addr #1 !dbg !8826 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !8828, metadata !DIExpression()), !dbg !8830
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_47, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8831
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !8829, metadata !DIExpression()), !dbg !8830
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 8, !dbg !8832
  %3 = load void (%struct.device*)*, void (%struct.device*)** %2, align 4, !dbg !8832
  %4 = icmp eq void (%struct.device*)* %3, null, !dbg !8834
  br i1 %4, label %6, label %5, !dbg !8835

5:                                                ; preds = %0
  tail call void %3(%struct.device* noundef nonnull @__device_dts_ord_47) #26, !dbg !8836
  br label %6, !dbg !8838

6:                                                ; preds = %5, %0
  ret void, !dbg !8839
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_rx_disable() unnamed_addr #1 !dbg !8840 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !8842, metadata !DIExpression()), !dbg !8844
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_47, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8845
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !8843, metadata !DIExpression()), !dbg !8844
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 11, !dbg !8846
  %3 = load void (%struct.device*)*, void (%struct.device*)** %2, align 4, !dbg !8846
  %4 = icmp eq void (%struct.device*)* %3, null, !dbg !8848
  br i1 %4, label %6, label %5, !dbg !8849

5:                                                ; preds = %0
  tail call void %3(%struct.device* noundef nonnull @__device_dts_ord_47) #26, !dbg !8850
  br label %6, !dbg !8852

6:                                                ; preds = %5, %0
  ret void, !dbg !8853
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !8854 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8856, metadata !DIExpression()), !dbg !8861
  call void @llvm.dbg.value(metadata i8 %1, metadata !8857, metadata !DIExpression()), !dbg !8861
  call void @llvm.dbg.value(metadata i32 %2, metadata !8858, metadata !DIExpression()), !dbg !8861
  %5 = bitcast i32* %4 to i8*, !dbg !8862
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !8862
  call void @llvm.dbg.value(metadata i32* %4, metadata !8860, metadata !DIExpression(DW_OP_deref)), !dbg !8861
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #27, !dbg !8863
  call void @llvm.dbg.value(metadata i32 %6, metadata !8859, metadata !DIExpression()), !dbg !8861
  %7 = icmp eq i32 %6, 0, !dbg !8864
  br i1 %7, label %8, label %31, !dbg !8866

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !8859, metadata !DIExpression()), !dbg !8861
  %9 = and i32 %2, 131072, !dbg !8867
  %10 = icmp eq i32 %9, 0, !dbg !8869
  br i1 %10, label %28, label %11, !dbg !8870

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !8871
  %13 = icmp eq i32 %12, 0, !dbg !8874
  br i1 %13, label %18, label %14, !dbg !8875

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !8876
  %16 = shl nuw i32 1, %15, !dbg !8876
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #27, !dbg !8878
  br label %25, !dbg !8879

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !8880
  %20 = icmp eq i32 %19, 0, !dbg !8882
  %21 = zext i8 %1 to i32, !dbg !8861
  br i1 %20, label %25, label %22, !dbg !8883

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !8884
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #27, !dbg !8886
  br label %25, !dbg !8887

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !8888
  %27 = load i32, i32* %4, align 4, !dbg !8889
  call void @llvm.dbg.value(metadata i32 %30, metadata !8860, metadata !DIExpression()), !dbg !8861
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #27, !dbg !8890
  br label %31, !dbg !8891

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !8888
  %30 = load i32, i32* %4, align 4, !dbg !8889
  call void @llvm.dbg.value(metadata i32 %30, metadata !8860, metadata !DIExpression()), !dbg !8861
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #27, !dbg !8890
  call void @llvm.dbg.value(metadata i32 0, metadata !8859, metadata !DIExpression()), !dbg !8861
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !8892
  ret i32 %6, !dbg !8892
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #16 !dbg !8893 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8897, metadata !DIExpression()), !dbg !8902
  call void @llvm.dbg.value(metadata i32* %1, metadata !8898, metadata !DIExpression()), !dbg !8902
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8903
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8903
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8903
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8899, metadata !DIExpression()), !dbg !8902
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8904
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8904
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8904
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8901, metadata !DIExpression()), !dbg !8902
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #27, !dbg !8905
  store i32 %9, i32* %1, align 4, !dbg !8906
  ret i32 0, !dbg !8907
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #15 !dbg !8908 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8910, metadata !DIExpression()), !dbg !8916
  call void @llvm.dbg.value(metadata i32 %1, metadata !8911, metadata !DIExpression()), !dbg !8916
  call void @llvm.dbg.value(metadata i32 %2, metadata !8912, metadata !DIExpression()), !dbg !8916
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8917
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !8917
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !8917
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !8913, metadata !DIExpression()), !dbg !8916
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !8918
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !8918
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !8918
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !8914, metadata !DIExpression()), !dbg !8916
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #27, !dbg !8919
  call void @llvm.dbg.value(metadata i32 %10, metadata !8915, metadata !DIExpression()), !dbg !8916
  %11 = xor i32 %1, -1, !dbg !8920
  %12 = and i32 %10, %11, !dbg !8921
  %13 = and i32 %2, %1, !dbg !8922
  %14 = or i32 %12, %13, !dbg !8923
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #27, !dbg !8924
  ret i32 0, !dbg !8925
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !8926 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8928, metadata !DIExpression()), !dbg !8932
  call void @llvm.dbg.value(metadata i32 %1, metadata !8929, metadata !DIExpression()), !dbg !8932
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8933
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8933
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8933
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8930, metadata !DIExpression()), !dbg !8932
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8934
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8934
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8934
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8931, metadata !DIExpression()), !dbg !8932
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !8935
  store volatile i32 %1, i32* %9, align 4, !dbg !8935
  ret i32 0, !dbg !8936
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !8937 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8939, metadata !DIExpression()), !dbg !8943
  call void @llvm.dbg.value(metadata i32 %1, metadata !8940, metadata !DIExpression()), !dbg !8943
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8944
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8944
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8944
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8941, metadata !DIExpression()), !dbg !8943
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8945
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8945
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8945
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8942, metadata !DIExpression()), !dbg !8943
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #27, !dbg !8946
  ret i32 0, !dbg !8947
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !8948 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8950, metadata !DIExpression()), !dbg !8954
  call void @llvm.dbg.value(metadata i32 %1, metadata !8951, metadata !DIExpression()), !dbg !8954
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8955
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8955
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8955
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8952, metadata !DIExpression()), !dbg !8954
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8956
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8956
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8956
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8953, metadata !DIExpression()), !dbg !8954
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !8957
  %10 = load volatile i32, i32* %9, align 4, !dbg !8957
  %11 = xor i32 %10, %1, !dbg !8957
  store volatile i32 %11, i32* %9, align 4, !dbg !8957
  ret i32 0, !dbg !8958
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !8959 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8961, metadata !DIExpression()), !dbg !8971
  call void @llvm.dbg.value(metadata i8 %1, metadata !8962, metadata !DIExpression()), !dbg !8971
  call void @llvm.dbg.value(metadata i32 %2, metadata !8963, metadata !DIExpression()), !dbg !8971
  call void @llvm.dbg.value(metadata i32 %3, metadata !8964, metadata !DIExpression()), !dbg !8971
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8972
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !8972
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !8972
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !8965, metadata !DIExpression()), !dbg !8971
  call void @llvm.dbg.value(metadata i8* undef, metadata !8966, metadata !DIExpression()), !dbg !8971
  call void @llvm.dbg.value(metadata i32 0, metadata !8968, metadata !DIExpression()), !dbg !8971
  call void @llvm.dbg.value(metadata i32 0, metadata !8969, metadata !DIExpression()), !dbg !8971
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !8973

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !8974
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #27, !dbg !8978
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !8979
  %12 = load i32, i32* %11, align 4, !dbg !8979
  %13 = icmp eq i32 %10, %12, !dbg !8980
  br i1 %13, label %14, label %29, !dbg !8981

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #26, !dbg !8982
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #26, !dbg !8984
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #26, !dbg !8985
  br label %29, !dbg !8986

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8987
  %17 = load i8*, i8** %16, align 4, !dbg !8987
  call void @llvm.dbg.value(metadata i8* %17, metadata !8966, metadata !DIExpression()), !dbg !8971
  %18 = zext i8 %1 to i32, !dbg !8988
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #26, !dbg !8990
  %20 = icmp eq i32 %19, 0, !dbg !8991
  br i1 %20, label %21, label %29, !dbg !8992

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !8993
  %23 = load i32, i32* %22, align 4, !dbg !8993
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #27, !dbg !8994
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !8995

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !8968, metadata !DIExpression()), !dbg !8971
  br label %27, !dbg !8996

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !8968, metadata !DIExpression()), !dbg !8971
  br label %27, !dbg !8998

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !8968, metadata !DIExpression()), !dbg !8971
  br label %27, !dbg !8999

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !8971
  call void @llvm.dbg.value(metadata i32 %28, metadata !8968, metadata !DIExpression()), !dbg !8971
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #26, !dbg !9000
  tail call void @stm32_exti_enable(i32 noundef %18) #26, !dbg !9001
  br label %29, !dbg !9001

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !8971
  call void @llvm.dbg.value(metadata i32 %30, metadata !8969, metadata !DIExpression()), !dbg !8971
  call void @llvm.dbg.label(metadata !8970), !dbg !9002
  ret i32 %30, !dbg !9003
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #14 !dbg !9004 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9006, metadata !DIExpression()), !dbg !9010
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9007, metadata !DIExpression()), !dbg !9010
  call void @llvm.dbg.value(metadata i1 %2, metadata !9008, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9010
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9011
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !9011
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !9011
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !9009, metadata !DIExpression()), !dbg !9010
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !9012
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #27, !dbg !9013
  ret i32 %8, !dbg !9014
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #14 !dbg !9015 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9021, metadata !DIExpression()), !dbg !9024
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9022, metadata !DIExpression()), !dbg !9024
  call void @llvm.dbg.value(metadata i1 %2, metadata !9023, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9024
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #27, !dbg !9025
  br i1 %4, label %10, label %5, !dbg !9027

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9028
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #27, !dbg !9031
  %8 = or i1 %7, %2, !dbg !9032
  %9 = select i1 %8, i32 0, i32 -22, !dbg !9032
  br i1 %2, label %11, label %13, !dbg !9032

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !9033

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9034
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #27, !dbg !9037
  br label %13, !dbg !9038

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !9024
  ret i32 %14, !dbg !9039
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9040 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9044, metadata !DIExpression()), !dbg !9045
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !9046
  %3 = icmp eq %struct._snode* %2, null, !dbg !9046
  ret i1 %3, !dbg !9046
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #14 !dbg !9047 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9051, metadata !DIExpression()), !dbg !9055
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9052, metadata !DIExpression()), !dbg !9055
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9053, metadata !DIExpression()), !dbg !9055
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !9056
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9054, metadata !DIExpression()), !dbg !9055
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9053, metadata !DIExpression()), !dbg !9055
  %4 = icmp eq %struct._snode* %3, null, !dbg !9058
  br i1 %4, label %15, label %5, !dbg !9056

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9054, metadata !DIExpression()), !dbg !9055
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9053, metadata !DIExpression()), !dbg !9055
  %6 = icmp eq %struct._snode* %3, %1, !dbg !9060
  br i1 %6, label %9, label %11, !dbg !9063

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9054, metadata !DIExpression()), !dbg !9055
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9053, metadata !DIExpression()), !dbg !9055
  %8 = icmp eq %struct._snode* %13, %1, !dbg !9060
  br i1 %8, label %9, label %11, !dbg !9063, !llvm.loop !9064

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #27, !dbg !9065
  br label %15, !dbg !9065

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9054, metadata !DIExpression()), !dbg !9055
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9053, metadata !DIExpression()), !dbg !9055
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #27, !dbg !9058
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9054, metadata !DIExpression()), !dbg !9055
  %14 = icmp eq %struct._snode* %13, null, !dbg !9058
  br i1 %14, label %15, label %7, !dbg !9056, !llvm.loop !9064

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !9067
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #8 !dbg !9068 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9072, metadata !DIExpression()), !dbg !9074
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9073, metadata !DIExpression()), !dbg !9074
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !9075
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #27, !dbg !9075
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #27, !dbg !9075
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #27, !dbg !9076
  %5 = icmp eq %struct._snode* %4, null, !dbg !9076
  br i1 %5, label %6, label %8, !dbg !9075

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !9078
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #27, !dbg !9078
  br label %8, !dbg !9078

8:                                                ; preds = %6, %2
  ret void, !dbg !9075
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9080 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9084, metadata !DIExpression()), !dbg !9085
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9086
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9086
  ret %struct._snode* %3, !dbg !9087
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !9088 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9092, metadata !DIExpression()), !dbg !9094
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9093, metadata !DIExpression()), !dbg !9094
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9095
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9096
  ret void, !dbg !9097
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !9098 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9100, metadata !DIExpression()), !dbg !9102
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9101, metadata !DIExpression()), !dbg !9102
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9103
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9104
  ret void, !dbg !9105
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9106 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9108, metadata !DIExpression()), !dbg !9109
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9110
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9110
  ret %struct._snode* %3, !dbg !9111
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !9112 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9114, metadata !DIExpression()), !dbg !9116
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9115, metadata !DIExpression()), !dbg !9116
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9117
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9118
  ret void, !dbg !9119
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #8 !dbg !9120 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9124, metadata !DIExpression()), !dbg !9127
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9125, metadata !DIExpression()), !dbg !9127
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !9126, metadata !DIExpression()), !dbg !9127
  %4 = icmp eq %struct._snode* %1, null, !dbg !9128
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #27, !dbg !9130
  br i1 %4, label %6, label %11, !dbg !9131

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #27, !dbg !9132
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #27, !dbg !9134
  %8 = icmp eq %struct._snode* %7, %2, !dbg !9134
  br i1 %8, label %9, label %15, !dbg !9132

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !9136
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #27, !dbg !9136
  br label %15, !dbg !9136

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #27, !dbg !9138
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #27, !dbg !9140
  %13 = icmp eq %struct._snode* %12, %2, !dbg !9140
  br i1 %13, label %14, label %15, !dbg !9138

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #27, !dbg !9142
  br label %15, !dbg !9142

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #27, !dbg !9131
  ret void, !dbg !9131
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #5 !dbg !9144 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9148, metadata !DIExpression()), !dbg !9149
  %2 = icmp eq %struct._snode* %0, null, !dbg !9150
  br i1 %2, label %5, label %3, !dbg !9150

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #27, !dbg !9150
  br label %5, !dbg !9150

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !9150
  ret %struct._snode* %6, !dbg !9150
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9151 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9153, metadata !DIExpression()), !dbg !9154
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #27, !dbg !9155
  ret %struct._snode* %2, !dbg !9155
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9156 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9158, metadata !DIExpression()), !dbg !9159
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9160
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9160
  ret %struct._snode* %3, !dbg !9161
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !9162 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9164, metadata !DIExpression()), !dbg !9167
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #27, !dbg !9168, !range !9169
  call void @llvm.dbg.value(metadata i32 %2, metadata !9165, metadata !DIExpression()), !dbg !9167
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #27, !dbg !9170
  call void @llvm.dbg.value(metadata i32 %3, metadata !9166, metadata !DIExpression()), !dbg !9167
  ret i32 %3, !dbg !9171
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !9172 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9174, metadata !DIExpression()), !dbg !9177
  call void @llvm.dbg.value(metadata i8* %1, metadata !9175, metadata !DIExpression()), !dbg !9177
  call void @llvm.dbg.value(metadata i8* %1, metadata !9176, metadata !DIExpression()), !dbg !9177
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !9178
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !9178
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9179
  %6 = bitcast i8* %5 to %struct.device**, !dbg !9179
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !9179
  %8 = shl nuw i32 1, %0, !dbg !9180
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #27, !dbg !9181
  ret void, !dbg !9182
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9183 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !9187, metadata !DIExpression()), !dbg !9193
  call void @llvm.dbg.value(metadata i32 %1, metadata !9188, metadata !DIExpression()), !dbg !9193
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9189, metadata !DIExpression()), !dbg !9193
  %4 = bitcast i64* %3 to i8*, !dbg !9194
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #25, !dbg !9194
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !9191, metadata !DIExpression()), !dbg !9193
  store i64 70368744177732, i64* %3, align 8, !dbg !9195
  call void @llvm.dbg.value(metadata i64* %3, metadata !9191, metadata !DIExpression(DW_OP_deref)), !dbg !9193
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #27, !dbg !9196
  call void @llvm.dbg.value(metadata i32 %5, metadata !9192, metadata !DIExpression()), !dbg !9193
  %6 = icmp eq i32 %5, 0, !dbg !9197
  br i1 %6, label %7, label %8, !dbg !9199

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #27, !dbg !9200
  br label %8, !dbg !9201

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #25, !dbg !9202
  ret void, !dbg !9202
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !9203 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9205, metadata !DIExpression()), !dbg !9208
  call void @llvm.dbg.value(metadata i8* %0, metadata !9206, metadata !DIExpression()), !dbg !9208
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_9, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !9209
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !9207, metadata !DIExpression()), !dbg !9208
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !9210
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !9210
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_9, i8* noundef %0) #26, !dbg !9211
  ret i32 %5, !dbg !9212
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9213 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9215, metadata !DIExpression()), !dbg !9218
  call void @llvm.dbg.value(metadata i32 %1, metadata !9216, metadata !DIExpression()), !dbg !9218
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #27, !dbg !9219
  call void @llvm.dbg.value(metadata i32 %3, metadata !9217, metadata !DIExpression()), !dbg !9218
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #27, !dbg !9220
  ret void, !dbg !9221
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #11 !dbg !9222 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9226, metadata !DIExpression()), !dbg !9227
  %2 = sdiv i32 %0, 4, !dbg !9228
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !9229
  %6 = add nsw i32 %5, 16, !dbg !9230
  %7 = shl i32 15, %6, !dbg !9231
  %8 = or i32 %7, %2, !dbg !9232
  ret i32 %8, !dbg !9233
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9234 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9238, metadata !DIExpression()), !dbg !9240
  call void @llvm.dbg.value(metadata i32 %1, metadata !9239, metadata !DIExpression()), !dbg !9240
  %3 = and i32 %1, 255, !dbg !9241
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !9241
  %5 = load volatile i32, i32* %4, align 4, !dbg !9241
  %6 = lshr i32 %1, 16, !dbg !9241
  %7 = xor i32 %6, -1, !dbg !9241
  %8 = and i32 %5, %7, !dbg !9241
  call void @llvm.dbg.value(metadata i32 %6, metadata !9242, metadata !DIExpression()) #25, !dbg !9246
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #30, !dbg !9248, !srcloc !9249
  call void @llvm.dbg.value(metadata i32 %9, metadata !9245, metadata !DIExpression()) #25, !dbg !9246
  call void @llvm.dbg.value(metadata i32 %9, metadata !9250, metadata !DIExpression()) #25, !dbg !9255
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #25, !dbg !9257, !range !3845
  %11 = shl i32 %0, %10, !dbg !9241
  %12 = or i32 %11, %8, !dbg !9241
  store volatile i32 %12, i32* %4, align 4, !dbg !9241
  ret void, !dbg !9258
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9259 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9263, metadata !DIExpression()), !dbg !9268
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !9264, metadata !DIExpression()), !dbg !9268
  call void @llvm.dbg.value(metadata i32 %2, metadata !9265, metadata !DIExpression()), !dbg !9268
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !9269
  %5 = icmp eq %struct._snode* %4, null, !dbg !9269
  br i1 %5, label %21, label %6, !dbg !9269

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #27, !dbg !9271
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9267, metadata !DIExpression()), !dbg !9268
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !9266, metadata !DIExpression()), !dbg !9268
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !9272
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !9272
  %11 = load i32, i32* %10, align 4, !dbg !9272
  %12 = and i32 %11, %2, !dbg !9276
  %13 = icmp eq i32 %12, 0, !dbg !9276
  br i1 %13, label %19, label %14, !dbg !9277

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !9266, metadata !DIExpression()), !dbg !9268
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !9278
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !9278
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !9278
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #26, !dbg !9280
  br label %19, !dbg !9281

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9266, metadata !DIExpression()), !dbg !9268
  %20 = icmp eq %struct._snode* %8, null, !dbg !9282
  br i1 %20, label %21, label %6, !dbg !9282

21:                                               ; preds = %19, %3
  ret void, !dbg !9283
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !9284 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9286, metadata !DIExpression()), !dbg !9287
  %2 = and i32 %0, 255, !dbg !9288
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !9288
  %4 = load volatile i32, i32* %3, align 4, !dbg !9288
  %5 = lshr i32 %0, 16, !dbg !9288
  %6 = and i32 %4, %5, !dbg !9288
  call void @llvm.dbg.value(metadata i32 %5, metadata !9242, metadata !DIExpression()) #25, !dbg !9289
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #30, !dbg !9291, !srcloc !9249
  call void @llvm.dbg.value(metadata i32 %7, metadata !9245, metadata !DIExpression()) #25, !dbg !9289
  call void @llvm.dbg.value(metadata i32 %7, metadata !9250, metadata !DIExpression()) #25, !dbg !9292
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #25, !dbg !9294, !range !3845
  %9 = lshr i32 %6, %8, !dbg !9295
  ret i32 %9, !dbg !9296
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9297 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9302, metadata !DIExpression()), !dbg !9304
  call void @llvm.dbg.value(metadata i32 %1, metadata !9303, metadata !DIExpression()), !dbg !9304
  %3 = shl i32 %1, 16, !dbg !9305
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !9305
  store volatile i32 %3, i32* %4, align 4, !dbg !9305
  ret void, !dbg !9306
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #16 !dbg !9307 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9311, metadata !DIExpression()), !dbg !9312
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9313
  %3 = load volatile i32, i32* %2, align 4, !dbg !9313
  ret i32 %3, !dbg !9314
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9315 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9317, metadata !DIExpression()), !dbg !9319
  call void @llvm.dbg.value(metadata i32 %1, metadata !9318, metadata !DIExpression()), !dbg !9319
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9320
  store volatile i32 %1, i32* %3, align 4, !dbg !9320
  ret void, !dbg !9321
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #16 !dbg !9322 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9324, metadata !DIExpression()), !dbg !9325
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !9326
  %3 = load volatile i32, i32* %2, align 4, !dbg !9326
  ret i32 %3, !dbg !9327
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #8 !dbg !9328 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9332, metadata !DIExpression()), !dbg !9334
  call void @llvm.dbg.value(metadata i32* %1, metadata !9333, metadata !DIExpression()), !dbg !9334
  %3 = and i32 %0, 131072, !dbg !9335
  %4 = icmp eq i32 %3, 0, !dbg !9337
  br i1 %4, label %22, label %5, !dbg !9338

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !9339
  %6 = and i32 %0, 2, !dbg !9341
  %7 = icmp eq i32 %6, 0, !dbg !9343
  br i1 %7, label %11, label %8, !dbg !9344

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !9345
  %10 = icmp eq i32 %9, 0, !dbg !9345
  br i1 %10, label %33, label %11, !dbg !9348

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !9349
  store i32 %12, i32* %1, align 4, !dbg !9349
  %13 = and i32 %0, 16, !dbg !9350
  %14 = icmp eq i32 %13, 0, !dbg !9352
  br i1 %14, label %17, label %15, !dbg !9353

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !9354
  br label %31, !dbg !9356

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !9357
  %19 = icmp eq i32 %18, 0, !dbg !9359
  br i1 %19, label %33, label %20, !dbg !9360

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !9361
  br label %31, !dbg !9363

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !9364
  %24 = icmp eq i32 %23, 0, !dbg !9366
  br i1 %24, label %31, label %25, !dbg !9367

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !9368
  %27 = icmp eq i32 %26, 0, !dbg !9371
  br i1 %27, label %28, label %31, !dbg !9372

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !9373
  br label %33, !dbg !9374

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !9334
  ret i32 %34, !dbg !9374
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !9375 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9379, metadata !DIExpression()), !dbg !9390
  call void @llvm.dbg.value(metadata i32 %1, metadata !9380, metadata !DIExpression()), !dbg !9390
  call void @llvm.dbg.value(metadata i32 %2, metadata !9381, metadata !DIExpression()), !dbg !9390
  call void @llvm.dbg.value(metadata i32 %3, metadata !9382, metadata !DIExpression()), !dbg !9390
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9391
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9391
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9391
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9383, metadata !DIExpression()), !dbg !9390
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !9392
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !9392
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !9392
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !9384, metadata !DIExpression()), !dbg !9390
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #27, !dbg !9393
  call void @llvm.dbg.value(metadata i32 %11, metadata !9385, metadata !DIExpression()), !dbg !9390
  %12 = and i32 %2, 48, !dbg !9394
  call void @llvm.dbg.value(metadata i32 %12, metadata !9386, metadata !DIExpression()), !dbg !9390
  call void @llvm.dbg.value(metadata i32 %2, metadata !9387, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !9390
  call void @llvm.dbg.value(metadata i32 %2, metadata !9388, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !9390
  call void @llvm.dbg.value(metadata i32 %2, metadata !9389, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !9390
  %13 = lshr i32 %2, 6, !dbg !9395
  %14 = and i32 %13, 1, !dbg !9395
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #27, !dbg !9396
  %15 = lshr i32 %2, 7, !dbg !9397
  %16 = and i32 %15, 3, !dbg !9397
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #27, !dbg !9398
  %17 = lshr i32 %2, 9, !dbg !9399
  %18 = and i32 %17, 3, !dbg !9399
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #27, !dbg !9400
  %19 = icmp eq i32 %12, 32, !dbg !9401
  br i1 %19, label %20, label %24, !dbg !9403

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !9404
  br i1 %21, label %22, label %23, !dbg !9407

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #27, !dbg !9408
  br label %24, !dbg !9410

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #27, !dbg !9411
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !9413
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #27, !dbg !9414
  ret void, !dbg !9415
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #11 !dbg !9416 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9418, metadata !DIExpression()), !dbg !9420
  %2 = shl nuw i32 1, %0, !dbg !9421
  call void @llvm.dbg.value(metadata i32 %2, metadata !9419, metadata !DIExpression()), !dbg !9420
  ret i32 %2, !dbg !9422
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !9423 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9427, metadata !DIExpression()), !dbg !9430
  call void @llvm.dbg.value(metadata i32 %1, metadata !9428, metadata !DIExpression()), !dbg !9430
  call void @llvm.dbg.value(metadata i32 %2, metadata !9429, metadata !DIExpression()), !dbg !9430
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !9431
  %5 = load volatile i32, i32* %4, align 4, !dbg !9431
  %6 = xor i32 %1, -1, !dbg !9431
  %7 = and i32 %5, %6, !dbg !9431
  %8 = mul i32 %2, %1, !dbg !9431
  %9 = or i32 %7, %8, !dbg !9431
  store volatile i32 %9, i32* %4, align 4, !dbg !9431
  ret void, !dbg !9432
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9433 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9435, metadata !DIExpression()), !dbg !9438
  call void @llvm.dbg.value(metadata i32 %1, metadata !9436, metadata !DIExpression()), !dbg !9438
  call void @llvm.dbg.value(metadata i32 %2, metadata !9437, metadata !DIExpression()), !dbg !9438
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !9439
  %5 = load volatile i32, i32* %4, align 4, !dbg !9439
  call void @llvm.dbg.value(metadata i32 %1, metadata !9242, metadata !DIExpression()) #25, !dbg !9440
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !9442, !srcloc !9249
  call void @llvm.dbg.value(metadata i32 %6, metadata !9245, metadata !DIExpression()) #25, !dbg !9440
  call void @llvm.dbg.value(metadata i32 %6, metadata !9250, metadata !DIExpression()) #25, !dbg !9443
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !9445, !range !3845
  %8 = shl nuw nsw i32 %7, 1, !dbg !9439
  %9 = shl i32 3, %8, !dbg !9439
  %10 = xor i32 %9, -1, !dbg !9439
  %11 = and i32 %5, %10, !dbg !9439
  call void @llvm.dbg.value(metadata i32 %1, metadata !9242, metadata !DIExpression()) #25, !dbg !9446
  call void @llvm.dbg.value(metadata i32 %6, metadata !9245, metadata !DIExpression()) #25, !dbg !9446
  call void @llvm.dbg.value(metadata i32 %6, metadata !9250, metadata !DIExpression()) #25, !dbg !9448
  %12 = shl i32 %2, %8, !dbg !9439
  %13 = or i32 %11, %12, !dbg !9439
  store volatile i32 %13, i32* %4, align 4, !dbg !9439
  ret void, !dbg !9450
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9451 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9453, metadata !DIExpression()), !dbg !9456
  call void @llvm.dbg.value(metadata i32 %1, metadata !9454, metadata !DIExpression()), !dbg !9456
  call void @llvm.dbg.value(metadata i32 %2, metadata !9455, metadata !DIExpression()), !dbg !9456
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !9457
  %5 = load volatile i32, i32* %4, align 4, !dbg !9457
  call void @llvm.dbg.value(metadata i32 %1, metadata !9242, metadata !DIExpression()) #25, !dbg !9458
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !9460, !srcloc !9249
  call void @llvm.dbg.value(metadata i32 %6, metadata !9245, metadata !DIExpression()) #25, !dbg !9458
  call void @llvm.dbg.value(metadata i32 %6, metadata !9250, metadata !DIExpression()) #25, !dbg !9461
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !9463, !range !3845
  %8 = shl nuw nsw i32 %7, 1, !dbg !9457
  %9 = shl i32 3, %8, !dbg !9457
  %10 = xor i32 %9, -1, !dbg !9457
  %11 = and i32 %5, %10, !dbg !9457
  call void @llvm.dbg.value(metadata i32 %1, metadata !9242, metadata !DIExpression()) #25, !dbg !9464
  call void @llvm.dbg.value(metadata i32 %6, metadata !9245, metadata !DIExpression()) #25, !dbg !9464
  call void @llvm.dbg.value(metadata i32 %6, metadata !9250, metadata !DIExpression()) #25, !dbg !9466
  %12 = shl i32 %2, %8, !dbg !9457
  %13 = or i32 %11, %12, !dbg !9457
  store volatile i32 %13, i32* %4, align 4, !dbg !9457
  ret void, !dbg !9468
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9469 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9471, metadata !DIExpression()), !dbg !9474
  call void @llvm.dbg.value(metadata i32 %1, metadata !9472, metadata !DIExpression()), !dbg !9474
  call void @llvm.dbg.value(metadata i32 %2, metadata !9473, metadata !DIExpression()), !dbg !9474
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !9475
  %5 = load volatile i32, i32* %4, align 4, !dbg !9475
  call void @llvm.dbg.value(metadata i32 %1, metadata !9242, metadata !DIExpression()) #25, !dbg !9476
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !9478, !srcloc !9249
  call void @llvm.dbg.value(metadata i32 %6, metadata !9245, metadata !DIExpression()) #25, !dbg !9476
  call void @llvm.dbg.value(metadata i32 %6, metadata !9250, metadata !DIExpression()) #25, !dbg !9479
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !9481, !range !3845
  %8 = shl nuw nsw i32 %7, 2, !dbg !9475
  %9 = shl i32 15, %8, !dbg !9475
  %10 = xor i32 %9, -1, !dbg !9475
  %11 = and i32 %5, %10, !dbg !9475
  call void @llvm.dbg.value(metadata i32 %1, metadata !9242, metadata !DIExpression()) #25, !dbg !9482
  call void @llvm.dbg.value(metadata i32 %6, metadata !9245, metadata !DIExpression()) #25, !dbg !9482
  call void @llvm.dbg.value(metadata i32 %6, metadata !9250, metadata !DIExpression()) #25, !dbg !9484
  %12 = shl i32 %2, %8, !dbg !9475
  %13 = or i32 %11, %12, !dbg !9475
  store volatile i32 %13, i32* %4, align 4, !dbg !9475
  ret void, !dbg !9486
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9487 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9489, metadata !DIExpression()), !dbg !9492
  call void @llvm.dbg.value(metadata i32 %1, metadata !9490, metadata !DIExpression()), !dbg !9492
  call void @llvm.dbg.value(metadata i32 %2, metadata !9491, metadata !DIExpression()), !dbg !9492
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !9493
  %5 = load volatile i32, i32* %4, align 4, !dbg !9493
  %6 = lshr i32 %1, 8, !dbg !9493
  call void @llvm.dbg.value(metadata i32 %6, metadata !9242, metadata !DIExpression()) #25, !dbg !9494
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #30, !dbg !9496, !srcloc !9249
  call void @llvm.dbg.value(metadata i32 %7, metadata !9245, metadata !DIExpression()) #25, !dbg !9494
  call void @llvm.dbg.value(metadata i32 %7, metadata !9250, metadata !DIExpression()) #25, !dbg !9497
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #25, !dbg !9499, !range !3845
  %9 = shl nuw nsw i32 %8, 2, !dbg !9493
  %10 = shl i32 15, %9, !dbg !9493
  %11 = xor i32 %10, -1, !dbg !9493
  %12 = and i32 %5, %11, !dbg !9493
  call void @llvm.dbg.value(metadata i32 %6, metadata !9242, metadata !DIExpression()) #25, !dbg !9500
  call void @llvm.dbg.value(metadata i32 %7, metadata !9245, metadata !DIExpression()) #25, !dbg !9500
  call void @llvm.dbg.value(metadata i32 %7, metadata !9250, metadata !DIExpression()) #25, !dbg !9502
  %13 = shl i32 %2, %9, !dbg !9493
  %14 = or i32 %12, %13, !dbg !9493
  store volatile i32 %14, i32* %4, align 4, !dbg !9493
  ret void, !dbg !9504
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9505 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9507, metadata !DIExpression()), !dbg !9510
  call void @llvm.dbg.value(metadata i32 %1, metadata !9508, metadata !DIExpression()), !dbg !9510
  call void @llvm.dbg.value(metadata i32 %2, metadata !9509, metadata !DIExpression()), !dbg !9510
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !9511
  %5 = load volatile i32, i32* %4, align 4, !dbg !9511
  call void @llvm.dbg.value(metadata i32 %1, metadata !9242, metadata !DIExpression()) #25, !dbg !9512
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !9514, !srcloc !9249
  call void @llvm.dbg.value(metadata i32 %6, metadata !9245, metadata !DIExpression()) #25, !dbg !9512
  call void @llvm.dbg.value(metadata i32 %6, metadata !9250, metadata !DIExpression()) #25, !dbg !9515
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !9517, !range !3845
  %8 = shl nuw nsw i32 %7, 1, !dbg !9511
  %9 = shl i32 3, %8, !dbg !9511
  %10 = xor i32 %9, -1, !dbg !9511
  %11 = and i32 %5, %10, !dbg !9511
  call void @llvm.dbg.value(metadata i32 %1, metadata !9242, metadata !DIExpression()) #25, !dbg !9518
  call void @llvm.dbg.value(metadata i32 %6, metadata !9245, metadata !DIExpression()) #25, !dbg !9518
  call void @llvm.dbg.value(metadata i32 %6, metadata !9250, metadata !DIExpression()) #25, !dbg !9520
  %12 = shl i32 %2, %8, !dbg !9511
  %13 = or i32 %11, %12, !dbg !9511
  store volatile i32 %13, i32* %4, align 4, !dbg !9511
  ret void, !dbg !9522
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !9523 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9525, metadata !DIExpression()), !dbg !9528
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9529
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !9529
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !9529
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !9526, metadata !DIExpression()), !dbg !9528
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !9530
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !9531
  %6 = tail call fastcc zeroext i1 @device_is_ready.59() #27, !dbg !9532
  br i1 %6, label %7, label %11, !dbg !9534

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #27, !dbg !9535
  call void @llvm.dbg.value(metadata i32 %8, metadata !9527, metadata !DIExpression()), !dbg !9528
  %9 = icmp slt i32 %8, 0, !dbg !9536
  %10 = select i1 %9, i32 %8, i32 0, !dbg !9538
  br label %11, !dbg !9538

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !9528
  ret i32 %12, !dbg !9539
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.59() unnamed_addr #1 !dbg !9540 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9544, metadata !DIExpression()), !dbg !9545
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !9546, !srcloc !9548
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.60() #27, !dbg !9549
  ret i1 %1, !dbg !9550
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !9551 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9555, metadata !DIExpression()), !dbg !9560
  call void @llvm.dbg.value(metadata i8 1, metadata !9556, metadata !DIExpression()), !dbg !9560
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* undef, metadata !9557, metadata !DIExpression()), !dbg !9560
  call void @llvm.dbg.value(metadata i32 0, metadata !9558, metadata !DIExpression()), !dbg !9560
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9559, metadata !DIExpression()), !dbg !9560
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9561
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !9561
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !9561
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !9557, metadata !DIExpression()), !dbg !9560
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !9562
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !9565
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #27, !dbg !9566
  call void @llvm.dbg.value(metadata i32 %7, metadata !9558, metadata !DIExpression()), !dbg !9560
  call void @llvm.dbg.value(metadata i32 %7, metadata !9558, metadata !DIExpression()), !dbg !9560
  ret i32 %7, !dbg !9567
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.60() unnamed_addr #1 !dbg !9568 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9570, metadata !DIExpression()), !dbg !9571
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_9) #26, !dbg !9572
  ret i1 %1, !dbg !9573
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !9574 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9578, metadata !DIExpression()), !dbg !9586
  call void @llvm.dbg.value(metadata i32 %1, metadata !9579, metadata !DIExpression()), !dbg !9586
  call void @llvm.dbg.value(metadata i32 %2, metadata !9580, metadata !DIExpression()), !dbg !9586
  call void @llvm.dbg.value(metadata i32 %3, metadata !9581, metadata !DIExpression()), !dbg !9586
  call void @llvm.dbg.value(metadata i32 0, metadata !9582, metadata !DIExpression()), !dbg !9586
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #27, !dbg !9587
  %5 = icmp eq i32 %3, 17, !dbg !9588
  br i1 %5, label %6, label %14, !dbg !9589

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !9590
  call void @llvm.dbg.value(metadata i32 %7, metadata !9583, metadata !DIExpression()), !dbg !9591
  %8 = icmp eq i32 %7, 0, !dbg !9592
  %9 = shl nuw i32 1, %1, !dbg !9594
  br i1 %8, label %12, label %10, !dbg !9595

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #27, !dbg !9596
  br label %14, !dbg !9598

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #27, !dbg !9599
  br label %14, !dbg !9602

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !9603
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #17 !dbg !9604 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9606, metadata !DIExpression()), !dbg !9610
  call void @llvm.dbg.value(metadata i8* %1, metadata !9607, metadata !DIExpression()), !dbg !9610
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9611
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9611
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9611
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9608, metadata !DIExpression()), !dbg !9610
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9612
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9612
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #27, !dbg !9614
  %9 = icmp eq i32 %8, 0, !dbg !9614
  br i1 %9, label %12, label %10, !dbg !9615

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9616
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #27, !dbg !9618
  br label %12, !dbg !9619

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9620
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #27, !dbg !9622
  %15 = icmp eq i32 %14, 0, !dbg !9622
  br i1 %15, label %19, label %16, !dbg !9623

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9624
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #27, !dbg !9625
  store i8 %18, i8* %1, align 1, !dbg !9626
  br label %19, !dbg !9627

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !9610
  ret i32 %20, !dbg !9628
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !9629 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9631, metadata !DIExpression()), !dbg !9635
  call void @llvm.dbg.value(metadata i8 %1, metadata !9632, metadata !DIExpression()), !dbg !9635
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9636
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9636
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9636
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9633, metadata !DIExpression()), !dbg !9635
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !9637

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9638
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #27, !dbg !9641
  %10 = icmp eq i32 %9, 0, !dbg !9641
  br i1 %10, label %18, label %11, !dbg !9642

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !9643, !srcloc !9650
  call void @llvm.dbg.value(metadata i32 undef, metadata !9646, metadata !DIExpression()) #25, !dbg !9651
  call void @llvm.dbg.value(metadata i32 undef, metadata !9647, metadata !DIExpression()) #25, !dbg !9651
  call void @llvm.dbg.value(metadata i32 undef, metadata !9634, metadata !DIExpression()), !dbg !9635
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9652
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #27, !dbg !9654
  %15 = icmp eq i32 %14, 0, !dbg !9654
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !9643
  br i1 %15, label %17, label %19, !dbg !9655

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !9646, metadata !DIExpression()) #25, !dbg !9651
  call void @llvm.dbg.value(metadata i32 %16, metadata !9634, metadata !DIExpression()), !dbg !9635
  call void @llvm.dbg.value(metadata i32 undef, metadata !9656, metadata !DIExpression()) #25, !dbg !9659
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #25, !dbg !9661, !srcloc !9662
  br label %18, !dbg !9663

18:                                               ; preds = %17, %7
  br label %7, !dbg !9638, !llvm.loop !9664

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !9643
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9666
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #27, !dbg !9667
  call void @llvm.dbg.value(metadata i32 %20, metadata !9656, metadata !DIExpression()) #25, !dbg !9668
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #25, !dbg !9670, !srcloc !9662
  ret void, !dbg !9671
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #17 !dbg !9672 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9674, metadata !DIExpression()), !dbg !9677
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9678
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9678
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9678
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9675, metadata !DIExpression()), !dbg !9677
  call void @llvm.dbg.value(metadata i32 0, metadata !9676, metadata !DIExpression()), !dbg !9677
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9679
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9679
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #27, !dbg !9681
  %8 = icmp ne i32 %7, 0, !dbg !9681
  %9 = zext i1 %8 to i32, !dbg !9682
  call void @llvm.dbg.value(metadata i32 %9, metadata !9676, metadata !DIExpression()), !dbg !9677
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9683
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #27, !dbg !9685
  %12 = icmp eq i32 %11, 0, !dbg !9685
  %13 = or i32 %9, 2, !dbg !9686
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !9686
  call void @llvm.dbg.value(metadata i32 %14, metadata !9676, metadata !DIExpression()), !dbg !9677
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9687
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #27, !dbg !9689
  %17 = icmp eq i32 %16, 0, !dbg !9689
  %18 = or i32 %14, 4, !dbg !9690
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !9690
  call void @llvm.dbg.value(metadata i32 %19, metadata !9676, metadata !DIExpression()), !dbg !9677
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9691
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #27, !dbg !9693
  %22 = icmp eq i32 %21, 0, !dbg !9693
  %23 = or i32 %19, 8, !dbg !9694
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !9694
  call void @llvm.dbg.value(metadata i32 %24, metadata !9676, metadata !DIExpression()), !dbg !9677
  %25 = and i32 %24, 8, !dbg !9695
  %26 = icmp eq i32 %25, 0, !dbg !9695
  br i1 %26, label %29, label %27, !dbg !9697

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9698
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #27, !dbg !9700
  br label %29, !dbg !9701

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !9702
  %31 = icmp eq i32 %30, 0, !dbg !9702
  br i1 %31, label %34, label %32, !dbg !9704

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9705
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #27, !dbg !9707
  br label %34, !dbg !9708

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !9709
  %36 = icmp eq i32 %35, 0, !dbg !9709
  br i1 %36, label %39, label %37, !dbg !9711

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9712
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #27, !dbg !9714
  br label %39, !dbg !9715

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !9716
  %41 = icmp eq i32 %40, 0, !dbg !9716
  br i1 %41, label %44, label %42, !dbg !9718

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9719
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #27, !dbg !9721
  br label %44, !dbg !9722

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9723
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #27, !dbg !9724
  ret i32 %24, !dbg !9725
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !9726 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9728, metadata !DIExpression()), !dbg !9737
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9729, metadata !DIExpression()), !dbg !9737
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9738
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9738
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9738
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9730, metadata !DIExpression()), !dbg !9737
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9739
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !9739
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !9739
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !9731, metadata !DIExpression()), !dbg !9737
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9740
  %10 = load i8, i8* %9, align 4, !dbg !9740
  %11 = zext i8 %10 to i32, !dbg !9741
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #27, !dbg !9742
  call void @llvm.dbg.value(metadata i32 %12, metadata !9733, metadata !DIExpression()), !dbg !9737
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9743
  %14 = load i8, i8* %13, align 1, !dbg !9743
  %15 = zext i8 %14 to i32, !dbg !9744
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #27, !dbg !9745
  call void @llvm.dbg.value(metadata i32 %16, metadata !9734, metadata !DIExpression()), !dbg !9737
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9746
  %18 = load i8, i8* %17, align 2, !dbg !9746
  %19 = zext i8 %18 to i32, !dbg !9747
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #27, !dbg !9748
  call void @llvm.dbg.value(metadata i32 %20, metadata !9735, metadata !DIExpression()), !dbg !9737
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9749
  %22 = load i8, i8* %21, align 1, !dbg !9749
  %23 = zext i8 %22 to i32, !dbg !9750
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #27, !dbg !9751
  call void @llvm.dbg.value(metadata i32 %24, metadata !9736, metadata !DIExpression()), !dbg !9737
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !9752

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !9754
  br i1 %26, label %69, label %27, !dbg !9756

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !9757

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !9758
  br i1 %29, label %65, label %30, !dbg !9758

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !9760
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !9737
  br i1 %31, label %38, label %34, !dbg !9762

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !9763
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073812480, label %36
  ], !dbg !9763

36:                                               ; preds = %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !9766
  br i1 %37, label %38, label %69, !dbg !9767

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9768
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #27, !dbg !9769
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #27, !dbg !9770
  %41 = icmp eq i32 %12, %40, !dbg !9772
  br i1 %41, label %43, label %42, !dbg !9773

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #27, !dbg !9774
  br label %43, !dbg !9776

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #27, !dbg !9777
  %45 = icmp eq i32 %16, %44, !dbg !9779
  br i1 %45, label %47, label %46, !dbg !9780

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #27, !dbg !9781
  br label %47, !dbg !9783

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #27, !dbg !9784
  %49 = icmp eq i32 %20, %48, !dbg !9786
  br i1 %49, label %51, label %50, !dbg !9787

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #27, !dbg !9788
  br label %51, !dbg !9790

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #27, !dbg !9791
  %53 = icmp eq i32 %24, %52, !dbg !9793
  br i1 %53, label %55, label %54, !dbg !9794

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #27, !dbg !9795
  br label %55, !dbg !9797

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !9798
  %57 = load i32, i32* %56, align 4, !dbg !9798
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !9800
  %59 = load i32, i32* %58, align 4, !dbg !9800
  %60 = icmp eq i32 %57, %59, !dbg !9801
  br i1 %60, label %63, label %61, !dbg !9802

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #27, !dbg !9803
  %62 = load i32, i32* %56, align 4, !dbg !9805
  store i32 %62, i32* %58, align 4, !dbg !9806
  br label %63, !dbg !9807

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !9808
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #27, !dbg !9809
  br label %69, !dbg !9810

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !9758
  %67 = and i8 %66, 1, !dbg !9758
  %68 = icmp eq i8 %67, 0, !dbg !9758
  br i1 %68, label %30, label %69, !dbg !9758

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !9737
  ret i32 %70, !dbg !9811
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #21 !dbg !9812 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9814, metadata !DIExpression()), !dbg !9817
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9815, metadata !DIExpression()), !dbg !9817
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9818
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !9818
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !9818
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !9816, metadata !DIExpression()), !dbg !9817
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !9819
  %7 = load i32, i32* %6, align 4, !dbg !9819
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !9820
  store i32 %7, i32* %8, align 4, !dbg !9821
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #27, !dbg !9822, !range !9823
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #27, !dbg !9824
  %11 = trunc i32 %10 to i8, !dbg !9824
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9825
  store i8 %11, i8* %12, align 4, !dbg !9826
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #27, !dbg !9827, !range !9828
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #27, !dbg !9829
  %15 = trunc i32 %14 to i8, !dbg !9829
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9830
  store i8 %15, i8* %16, align 1, !dbg !9831
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #27, !dbg !9832
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #27, !dbg !9833, !range !9823
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #27, !dbg !9834
  %20 = trunc i32 %19 to i8, !dbg !9834
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9835
  store i8 %20, i8* %21, align 2, !dbg !9836
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #27, !dbg !9837, !range !9838
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #27, !dbg !9839
  %24 = trunc i32 %23 to i8, !dbg !9839
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9840
  store i8 %24, i8* %25, align 1, !dbg !9841
  ret i32 0, !dbg !9842
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_fifo_fill(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) #1 !dbg !9843 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9845, metadata !DIExpression()), !dbg !9851
  call void @llvm.dbg.value(metadata i8* %1, metadata !9846, metadata !DIExpression()), !dbg !9851
  call void @llvm.dbg.value(metadata i32 %2, metadata !9847, metadata !DIExpression()), !dbg !9851
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9852
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !9852
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !9852
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !9848, metadata !DIExpression()), !dbg !9851
  call void @llvm.dbg.value(metadata i8 0, metadata !9849, metadata !DIExpression()), !dbg !9851
  %7 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !9853
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9853
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #27, !dbg !9855
  %10 = icmp eq i32 %9, 0, !dbg !9855
  br i1 %10, label %30, label %11, !dbg !9856

11:                                               ; preds = %3
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !9857, !srcloc !9650
  %13 = extractvalue { i32, i32 } %12, 0, !dbg !9857
  call void @llvm.dbg.value(metadata i32 %13, metadata !9646, metadata !DIExpression()) #25, !dbg !9859
  call void @llvm.dbg.value(metadata i32 undef, metadata !9647, metadata !DIExpression()) #25, !dbg !9859
  call void @llvm.dbg.value(metadata i32 %13, metadata !9850, metadata !DIExpression()), !dbg !9851
  call void @llvm.dbg.value(metadata i8 0, metadata !9849, metadata !DIExpression()), !dbg !9851
  %14 = icmp sgt i32 %2, 0, !dbg !9860
  br i1 %14, label %15, label %28, !dbg !9861

15:                                               ; preds = %11, %21
  %16 = phi i32 [ %26, %21 ], [ 0, %11 ]
  %17 = phi i8 [ %23, %21 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8 %17, metadata !9849, metadata !DIExpression()), !dbg !9851
  %18 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9862
  %19 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %18) #27, !dbg !9863
  %20 = icmp eq i32 %19, 0, !dbg !9861
  br i1 %20, label %28, label %21, !dbg !9864

21:                                               ; preds = %15
  %22 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9865
  %23 = add i8 %17, 1, !dbg !9867
  call void @llvm.dbg.value(metadata i8 %23, metadata !9849, metadata !DIExpression()), !dbg !9851
  %24 = getelementptr inbounds i8, i8* %1, i32 %16, !dbg !9868
  %25 = load i8, i8* %24, align 1, !dbg !9868
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %22, i8 noundef zeroext %25) #27, !dbg !9869
  %26 = zext i8 %23 to i32, !dbg !9870
  %27 = icmp slt i32 %26, %2, !dbg !9860
  br i1 %27, label %15, label %28, !dbg !9861, !llvm.loop !9871

28:                                               ; preds = %15, %21, %11
  %29 = phi i32 [ 0, %11 ], [ %26, %21 ], [ %16, %15 ], !dbg !9870
  call void @llvm.dbg.value(metadata i32 %13, metadata !9656, metadata !DIExpression()) #25, !dbg !9873
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #25, !dbg !9875, !srcloc !9662
  br label %30, !dbg !9876

30:                                               ; preds = %3, %28
  %31 = phi i32 [ %29, %28 ], [ 0, %3 ], !dbg !9851
  ret i32 %31, !dbg !9877
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_fifo_read(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) #17 !dbg !9878 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9880, metadata !DIExpression()), !dbg !9885
  call void @llvm.dbg.value(metadata i8* %1, metadata !9881, metadata !DIExpression()), !dbg !9885
  call void @llvm.dbg.value(metadata i32 %2, metadata !9882, metadata !DIExpression()), !dbg !9885
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9886
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !9886
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !9886
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !9883, metadata !DIExpression()), !dbg !9885
  call void @llvm.dbg.value(metadata i8 0, metadata !9884, metadata !DIExpression()), !dbg !9885
  %7 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !9887
  call void @llvm.dbg.value(metadata i8 0, metadata !9884, metadata !DIExpression()), !dbg !9885
  %8 = icmp sgt i32 %2, 0, !dbg !9888
  br i1 %8, label %9, label %28, !dbg !9889

9:                                                ; preds = %3, %25
  %10 = phi i32 [ %26, %25 ], [ 0, %3 ]
  %11 = phi i8 [ %18, %25 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i8 %11, metadata !9884, metadata !DIExpression()), !dbg !9885
  %12 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9887
  %13 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %12) #27, !dbg !9890
  %14 = icmp eq i32 %13, 0, !dbg !9889
  br i1 %14, label %28, label %15, !dbg !9891

15:                                               ; preds = %9
  %16 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9892
  %17 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %16) #27, !dbg !9894
  %18 = add i8 %11, 1, !dbg !9895
  call void @llvm.dbg.value(metadata i8 %18, metadata !9884, metadata !DIExpression()), !dbg !9885
  %19 = getelementptr inbounds i8, i8* %1, i32 %10, !dbg !9896
  store i8 %17, i8* %19, align 1, !dbg !9897
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9898
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %20) #27, !dbg !9900
  %22 = icmp eq i32 %21, 0, !dbg !9900
  br i1 %22, label %25, label %23, !dbg !9901

23:                                               ; preds = %15
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9902
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %24) #27, !dbg !9904
  br label %25, !dbg !9905

25:                                               ; preds = %23, %15
  call void @llvm.dbg.value(metadata i8 %18, metadata !9884, metadata !DIExpression()), !dbg !9885
  %26 = zext i8 %18 to i32, !dbg !9906
  %27 = icmp slt i32 %26, %2, !dbg !9888
  br i1 %27, label %9, label %28, !dbg !9889, !llvm.loop !9907

28:                                               ; preds = %9, %25, %3
  %29 = phi i32 [ 0, %3 ], [ %26, %25 ], [ %10, %9 ], !dbg !9906
  ret i32 %29, !dbg !9909
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_tx_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9910 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9912, metadata !DIExpression()), !dbg !9914
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9915
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9915
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9915
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9913, metadata !DIExpression()), !dbg !9914
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9916
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9916
  tail call fastcc void @LL_USART_EnableIT_TC(%struct.USART_TypeDef* noundef %6) #27, !dbg !9917
  ret void, !dbg !9918
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_tx_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9919 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9921, metadata !DIExpression()), !dbg !9923
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9924
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9924
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9924
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9922, metadata !DIExpression()), !dbg !9923
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9925
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9925
  tail call fastcc void @LL_USART_DisableIT_TC(%struct.USART_TypeDef* noundef %6) #27, !dbg !9926
  ret void, !dbg !9927
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_tx_ready(%struct.device* nocapture noundef readonly %0) #16 !dbg !9928 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9930, metadata !DIExpression()), !dbg !9932
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9933
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9933
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9933
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9931, metadata !DIExpression()), !dbg !9932
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9934
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9934
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %6) #27, !dbg !9935
  %8 = icmp eq i32 %7, 0, !dbg !9935
  br i1 %8, label %14, label %9, !dbg !9936

9:                                                ; preds = %1
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9937
  %11 = tail call fastcc i32 @LL_USART_IsEnabledIT_TC(%struct.USART_TypeDef* noundef %10) #27, !dbg !9938
  %12 = icmp ne i32 %11, 0, !dbg !9936
  %13 = zext i1 %12 to i32
  br label %14

14:                                               ; preds = %9, %1
  %15 = phi i32 [ 0, %1 ], [ %13, %9 ]
  ret i32 %15, !dbg !9939
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_rx_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9940 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9942, metadata !DIExpression()), !dbg !9944
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9945
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9945
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9945
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9943, metadata !DIExpression()), !dbg !9944
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9946
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9946
  tail call fastcc void @LL_USART_EnableIT_RXNE(%struct.USART_TypeDef* noundef %6) #27, !dbg !9947
  ret void, !dbg !9948
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_rx_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9949 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9951, metadata !DIExpression()), !dbg !9953
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9954
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9954
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9954
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9952, metadata !DIExpression()), !dbg !9953
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9955
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9955
  tail call fastcc void @LL_USART_DisableIT_RXNE(%struct.USART_TypeDef* noundef %6) #27, !dbg !9956
  ret void, !dbg !9957
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_tx_complete(%struct.device* nocapture noundef readonly %0) #16 !dbg !9958 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9960, metadata !DIExpression()), !dbg !9962
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9963
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9963
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9963
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9961, metadata !DIExpression()), !dbg !9962
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9964
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9964
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_TC(%struct.USART_TypeDef* noundef %6) #27, !dbg !9965
  ret i32 %7, !dbg !9966
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_rx_ready(%struct.device* nocapture noundef readonly %0) #16 !dbg !9967 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9969, metadata !DIExpression()), !dbg !9971
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9972
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9972
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9972
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9970, metadata !DIExpression()), !dbg !9971
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9973
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9973
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %6) #27, !dbg !9974
  ret i32 %7, !dbg !9975
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_err_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9976 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9978, metadata !DIExpression()), !dbg !9980
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9981
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9981
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9981
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9979, metadata !DIExpression()), !dbg !9980
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9982
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9982
  tail call fastcc void @LL_USART_EnableIT_ERROR(%struct.USART_TypeDef* noundef %6) #27, !dbg !9983
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9984
  %8 = ptrtoint %struct.USART_TypeDef* %7 to i32, !dbg !9984
  switch i32 %8, label %11 [
    i32 1073811456, label %9
    i32 1073759232, label %9
    i32 1073812480, label %9
  ], !dbg !9984

9:                                                ; preds = %1, %1, %1
  tail call fastcc void @LL_USART_EnableIT_LBD(%struct.USART_TypeDef* noundef %7) #27, !dbg !9986
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9988
  br label %11, !dbg !9989

11:                                               ; preds = %1, %9
  %12 = phi %struct.USART_TypeDef* [ %7, %1 ], [ %10, %9 ], !dbg !9988
  tail call fastcc void @LL_USART_EnableIT_PE(%struct.USART_TypeDef* noundef %12) #27, !dbg !9990
  ret void, !dbg !9991
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_err_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9992 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9994, metadata !DIExpression()), !dbg !9996
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9997
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9997
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9997
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9995, metadata !DIExpression()), !dbg !9996
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9998
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9998
  tail call fastcc void @LL_USART_DisableIT_ERROR(%struct.USART_TypeDef* noundef %6) #27, !dbg !9999
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10000
  %8 = ptrtoint %struct.USART_TypeDef* %7 to i32, !dbg !10000
  switch i32 %8, label %11 [
    i32 1073811456, label %9
    i32 1073759232, label %9
    i32 1073812480, label %9
  ], !dbg !10000

9:                                                ; preds = %1, %1, %1
  tail call fastcc void @LL_USART_DisableIT_LBD(%struct.USART_TypeDef* noundef %7) #27, !dbg !10002
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10004
  br label %11, !dbg !10005

11:                                               ; preds = %1, %9
  %12 = phi %struct.USART_TypeDef* [ %7, %1 ], [ %10, %9 ], !dbg !10004
  tail call fastcc void @LL_USART_DisableIT_PE(%struct.USART_TypeDef* noundef %12) #27, !dbg !10006
  ret void, !dbg !10007
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_is_pending(%struct.device* nocapture noundef readonly %0) #16 !dbg !10008 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10010, metadata !DIExpression()), !dbg !10012
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10013
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10013
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10013
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10011, metadata !DIExpression()), !dbg !10012
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10014
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10014
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %6) #27, !dbg !10015
  %8 = icmp eq i32 %7, 0, !dbg !10015
  br i1 %8, label %13, label %9, !dbg !10016

9:                                                ; preds = %1
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10017
  %11 = tail call fastcc i32 @LL_USART_IsEnabledIT_RXNE(%struct.USART_TypeDef* noundef %10) #27, !dbg !10018
  %12 = icmp eq i32 %11, 0, !dbg !10018
  br i1 %12, label %13, label %22, !dbg !10019

13:                                               ; preds = %9, %1
  %14 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10020
  %15 = tail call fastcc i32 @LL_USART_IsActiveFlag_TC(%struct.USART_TypeDef* noundef %14) #27, !dbg !10021
  %16 = icmp eq i32 %15, 0, !dbg !10021
  br i1 %16, label %22, label %17, !dbg !10022

17:                                               ; preds = %13
  %18 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10023
  %19 = tail call fastcc i32 @LL_USART_IsEnabledIT_TC(%struct.USART_TypeDef* noundef %18) #27, !dbg !10024
  %20 = icmp ne i32 %19, 0, !dbg !10022
  %21 = zext i1 %20 to i32
  br label %22

22:                                               ; preds = %13, %17, %9
  %23 = phi i32 [ 1, %9 ], [ 0, %13 ], [ %21, %17 ]
  ret i32 %23, !dbg !10025
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @uart_stm32_irq_update(%struct.device* nocapture noundef readnone %0) #11 !dbg !10026 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10028, metadata !DIExpression()), !dbg !10029
  ret i32 1, !dbg !10030
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal void @uart_stm32_irq_callback_set(%struct.device* nocapture noundef readonly %0, void (%struct.device*, i8*)* noundef %1, i8* noundef %2) #8 !dbg !10031 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10033, metadata !DIExpression()), !dbg !10037
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* %1, metadata !10034, metadata !DIExpression()), !dbg !10037
  call void @llvm.dbg.value(metadata i8* %2, metadata !10035, metadata !DIExpression()), !dbg !10037
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10038
  %5 = bitcast i8** %4 to %struct.uart_stm32_data**, !dbg !10038
  %6 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %5, align 4, !dbg !10038
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %6, metadata !10036, metadata !DIExpression()), !dbg !10037
  %7 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %6, i32 0, i32 2, !dbg !10039
  store void (%struct.device*, i8*)* %1, void (%struct.device*, i8*)** %7, align 4, !dbg !10040
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %6, i32 0, i32 3, !dbg !10041
  store i8* %2, i8** %8, align 4, !dbg !10042
  ret void, !dbg !10043
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10044 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10049, metadata !DIExpression()), !dbg !10050
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10051
  %3 = load volatile i32, i32* %2, align 4, !dbg !10051
  %4 = lshr i32 %3, 5, !dbg !10052
  %5 = and i32 %4, 1, !dbg !10052
  ret i32 %5, !dbg !10053
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsEnabledIT_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10054 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10056, metadata !DIExpression()), !dbg !10057
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10058
  %3 = load volatile i32, i32* %2, align 4, !dbg !10058
  %4 = lshr i32 %3, 5, !dbg !10059
  %5 = and i32 %4, 1, !dbg !10059
  ret i32 %5, !dbg !10060
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10061 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10063, metadata !DIExpression()), !dbg !10064
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10065
  %3 = load volatile i32, i32* %2, align 4, !dbg !10065
  %4 = lshr i32 %3, 6, !dbg !10066
  %5 = and i32 %4, 1, !dbg !10066
  ret i32 %5, !dbg !10067
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsEnabledIT_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10068 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10070, metadata !DIExpression()), !dbg !10071
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10072
  %3 = load volatile i32, i32* %2, align 4, !dbg !10072
  %4 = lshr i32 %3, 6, !dbg !10073
  %5 = and i32 %4, 1, !dbg !10073
  ret i32 %5, !dbg !10074
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_ERROR(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10075 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10079, metadata !DIExpression()), !dbg !10082
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5
  br label %3, !dbg !10083

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10084, metadata !DIExpression()) #25, !dbg !10090
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !10093, !srcloc !10094
  call void @llvm.dbg.value(metadata i32 %4, metadata !10089, metadata !DIExpression()) #25, !dbg !10090
  %5 = and i32 %4, -2, !dbg !10095
  call void @llvm.dbg.value(metadata i32 %5, metadata !10080, metadata !DIExpression()), !dbg !10096
  call void @llvm.dbg.value(metadata i32 %5, metadata !10097, metadata !DIExpression()) #25, !dbg !10104
  call void @llvm.dbg.value(metadata i32* %2, metadata !10102, metadata !DIExpression()) #25, !dbg !10104
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !10106, !srcloc !10107
  call void @llvm.dbg.value(metadata i32 %6, metadata !10103, metadata !DIExpression()) #25, !dbg !10104
  %7 = icmp eq i32 %6, 0, !dbg !10083
  br i1 %7, label %8, label %3, !dbg !10095, !llvm.loop !10108

8:                                                ; preds = %3
  ret void, !dbg !10109
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_DisableIT_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10110 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10112, metadata !DIExpression()), !dbg !10113
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10114
  %3 = load volatile i32, i32* %2, align 4, !dbg !10114
  %4 = and i32 %3, -65, !dbg !10114
  store volatile i32 %4, i32* %2, align 4, !dbg !10114
  ret void, !dbg !10115
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10116 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10118, metadata !DIExpression()), !dbg !10121
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10122

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10084, metadata !DIExpression()) #25, !dbg !10123
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !10126, !srcloc !10094
  call void @llvm.dbg.value(metadata i32 %4, metadata !10089, metadata !DIExpression()) #25, !dbg !10123
  %5 = and i32 %4, -257, !dbg !10127
  call void @llvm.dbg.value(metadata i32 %5, metadata !10119, metadata !DIExpression()), !dbg !10128
  call void @llvm.dbg.value(metadata i32 %5, metadata !10097, metadata !DIExpression()) #25, !dbg !10129
  call void @llvm.dbg.value(metadata i32* %2, metadata !10102, metadata !DIExpression()) #25, !dbg !10129
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !10131, !srcloc !10107
  call void @llvm.dbg.value(metadata i32 %6, metadata !10103, metadata !DIExpression()) #25, !dbg !10129
  %7 = icmp eq i32 %6, 0, !dbg !10122
  br i1 %7, label %8, label %3, !dbg !10127, !llvm.loop !10132

8:                                                ; preds = %3
  ret void, !dbg !10133
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_ERROR(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10134 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10136, metadata !DIExpression()), !dbg !10139
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5
  br label %3, !dbg !10140

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10084, metadata !DIExpression()) #25, !dbg !10141
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !10144, !srcloc !10094
  call void @llvm.dbg.value(metadata i32 %4, metadata !10089, metadata !DIExpression()) #25, !dbg !10141
  %5 = or i32 %4, 1, !dbg !10145
  call void @llvm.dbg.value(metadata i32 %5, metadata !10137, metadata !DIExpression()), !dbg !10146
  call void @llvm.dbg.value(metadata i32 %5, metadata !10097, metadata !DIExpression()) #25, !dbg !10147
  call void @llvm.dbg.value(metadata i32* %2, metadata !10102, metadata !DIExpression()) #25, !dbg !10147
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !10149, !srcloc !10107
  call void @llvm.dbg.value(metadata i32 %6, metadata !10103, metadata !DIExpression()) #25, !dbg !10147
  %7 = icmp eq i32 %6, 0, !dbg !10140
  br i1 %7, label %8, label %3, !dbg !10145, !llvm.loop !10150

8:                                                ; preds = %3
  ret void, !dbg !10151
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableIT_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10152 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10154, metadata !DIExpression()), !dbg !10155
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10156
  %3 = load volatile i32, i32* %2, align 4, !dbg !10156
  %4 = or i32 %3, 64, !dbg !10156
  store volatile i32 %4, i32* %2, align 4, !dbg !10156
  ret void, !dbg !10157
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10158 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10160, metadata !DIExpression()), !dbg !10163
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10164

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10084, metadata !DIExpression()) #25, !dbg !10165
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !10168, !srcloc !10094
  call void @llvm.dbg.value(metadata i32 %4, metadata !10089, metadata !DIExpression()) #25, !dbg !10165
  %5 = or i32 %4, 256, !dbg !10169
  call void @llvm.dbg.value(metadata i32 %5, metadata !10161, metadata !DIExpression()), !dbg !10170
  call void @llvm.dbg.value(metadata i32 %5, metadata !10097, metadata !DIExpression()) #25, !dbg !10171
  call void @llvm.dbg.value(metadata i32* %2, metadata !10102, metadata !DIExpression()) #25, !dbg !10171
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !10173, !srcloc !10107
  call void @llvm.dbg.value(metadata i32 %6, metadata !10103, metadata !DIExpression()) #25, !dbg !10171
  %7 = icmp eq i32 %6, 0, !dbg !10164
  br i1 %7, label %8, label %3, !dbg !10169, !llvm.loop !10174

8:                                                ; preds = %3
  ret void, !dbg !10175
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10176 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10178, metadata !DIExpression()), !dbg !10181
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10182

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10084, metadata !DIExpression()) #25, !dbg !10183
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !10186, !srcloc !10094
  call void @llvm.dbg.value(metadata i32 %4, metadata !10089, metadata !DIExpression()) #25, !dbg !10183
  %5 = and i32 %4, -33, !dbg !10187
  call void @llvm.dbg.value(metadata i32 %5, metadata !10179, metadata !DIExpression()), !dbg !10188
  call void @llvm.dbg.value(metadata i32 %5, metadata !10097, metadata !DIExpression()) #25, !dbg !10189
  call void @llvm.dbg.value(metadata i32* %2, metadata !10102, metadata !DIExpression()) #25, !dbg !10189
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !10191, !srcloc !10107
  call void @llvm.dbg.value(metadata i32 %6, metadata !10103, metadata !DIExpression()) #25, !dbg !10189
  %7 = icmp eq i32 %6, 0, !dbg !10182
  br i1 %7, label %8, label %3, !dbg !10187, !llvm.loop !10192

8:                                                ; preds = %3
  ret void, !dbg !10193
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10194 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10196, metadata !DIExpression()), !dbg !10199
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10200

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10084, metadata !DIExpression()) #25, !dbg !10201
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !10204, !srcloc !10094
  call void @llvm.dbg.value(metadata i32 %4, metadata !10089, metadata !DIExpression()) #25, !dbg !10201
  %5 = or i32 %4, 32, !dbg !10205
  call void @llvm.dbg.value(metadata i32 %5, metadata !10197, metadata !DIExpression()), !dbg !10206
  call void @llvm.dbg.value(metadata i32 %5, metadata !10097, metadata !DIExpression()) #25, !dbg !10207
  call void @llvm.dbg.value(metadata i32* %2, metadata !10102, metadata !DIExpression()) #25, !dbg !10207
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !10209, !srcloc !10107
  call void @llvm.dbg.value(metadata i32 %6, metadata !10103, metadata !DIExpression()) #25, !dbg !10207
  %7 = icmp eq i32 %6, 0, !dbg !10200
  br i1 %7, label %8, label %3, !dbg !10205, !llvm.loop !10210

8:                                                ; preds = %3
  ret void, !dbg !10211
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10212 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10214, metadata !DIExpression()), !dbg !10215
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10216
  %3 = load volatile i32, i32* %2, align 4, !dbg !10216
  %4 = lshr i32 %3, 7, !dbg !10217
  %5 = and i32 %4, 1, !dbg !10217
  ret i32 %5, !dbg !10218
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10219 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10221, metadata !DIExpression()), !dbg !10224
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10225

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10084, metadata !DIExpression()) #25, !dbg !10226
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !10229, !srcloc !10094
  call void @llvm.dbg.value(metadata i32 %4, metadata !10089, metadata !DIExpression()) #25, !dbg !10226
  %5 = and i32 %4, -65, !dbg !10230
  call void @llvm.dbg.value(metadata i32 %5, metadata !10222, metadata !DIExpression()), !dbg !10231
  call void @llvm.dbg.value(metadata i32 %5, metadata !10097, metadata !DIExpression()) #25, !dbg !10232
  call void @llvm.dbg.value(metadata i32* %2, metadata !10102, metadata !DIExpression()) #25, !dbg !10232
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !10234, !srcloc !10107
  call void @llvm.dbg.value(metadata i32 %6, metadata !10103, metadata !DIExpression()) #25, !dbg !10232
  %7 = icmp eq i32 %6, 0, !dbg !10225
  br i1 %7, label %8, label %3, !dbg !10230, !llvm.loop !10235

8:                                                ; preds = %3
  ret void, !dbg !10236
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10237 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10239, metadata !DIExpression()), !dbg !10242
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10243

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10084, metadata !DIExpression()) #25, !dbg !10244
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !10247, !srcloc !10094
  call void @llvm.dbg.value(metadata i32 %4, metadata !10089, metadata !DIExpression()) #25, !dbg !10244
  %5 = or i32 %4, 64, !dbg !10248
  call void @llvm.dbg.value(metadata i32 %5, metadata !10240, metadata !DIExpression()), !dbg !10249
  call void @llvm.dbg.value(metadata i32 %5, metadata !10097, metadata !DIExpression()) #25, !dbg !10250
  call void @llvm.dbg.value(metadata i32* %2, metadata !10102, metadata !DIExpression()) #25, !dbg !10250
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !10252, !srcloc !10107
  call void @llvm.dbg.value(metadata i32 %6, metadata !10103, metadata !DIExpression()) #25, !dbg !10250
  %7 = icmp eq i32 %6, 0, !dbg !10243
  br i1 %7, label %8, label %3, !dbg !10248, !llvm.loop !10253

8:                                                ; preds = %3
  ret void, !dbg !10254
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10255 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10259, metadata !DIExpression()), !dbg !10260
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10261
  %3 = load volatile i32, i32* %2, align 4, !dbg !10261
  %4 = trunc i32 %3 to i8, !dbg !10262
  ret i8 %4, !dbg !10263
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10264 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10266, metadata !DIExpression()), !dbg !10267
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10268
  %3 = load volatile i32, i32* %2, align 4, !dbg !10268
  %4 = lshr i32 %3, 3, !dbg !10269
  %5 = and i32 %4, 1, !dbg !10269
  ret i32 %5, !dbg !10270
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10271 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10273, metadata !DIExpression()), !dbg !10275
  %3 = bitcast i32* %2 to i8*, !dbg !10276
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10276
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10274, metadata !DIExpression()), !dbg !10277
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10278
  %5 = load volatile i32, i32* %4, align 4, !dbg !10278
  store volatile i32 %5, i32* %2, align 4, !dbg !10279
  %6 = load volatile i32, i32* %2, align 4, !dbg !10280
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10281
  %8 = load volatile i32, i32* %7, align 4, !dbg !10281
  store volatile i32 %8, i32* %2, align 4, !dbg !10282
  %9 = load volatile i32, i32* %2, align 4, !dbg !10283
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10284
  ret void, !dbg !10284
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !10285 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10289, metadata !DIExpression()), !dbg !10291
  call void @llvm.dbg.value(metadata i8 %1, metadata !10290, metadata !DIExpression()), !dbg !10291
  %3 = zext i8 %1 to i32, !dbg !10292
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10293
  store volatile i32 %3, i32* %4, align 4, !dbg !10294
  ret void, !dbg !10295
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !10296 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10300, metadata !DIExpression()), !dbg !10302
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10303
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10303
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10303
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10301, metadata !DIExpression()), !dbg !10302
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10304
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10304
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #27, !dbg !10305
  ret i32 %7, !dbg !10306
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #11 !dbg !10307 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10311, metadata !DIExpression()), !dbg !10312
  %2 = icmp eq i32 %0, 1024, !dbg !10313
  %3 = select i1 %2, i32 2, i32 0, !dbg !10313
  %4 = icmp eq i32 %0, 1536, !dbg !10313
  %5 = select i1 %4, i32 1, i32 %3, !dbg !10313
  ret i32 %5, !dbg !10314
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !10315 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10317, metadata !DIExpression()), !dbg !10319
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10320
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10320
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10320
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10318, metadata !DIExpression()), !dbg !10319
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10321
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10321
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #27, !dbg !10322
  ret i32 %7, !dbg !10323
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #9 !dbg !10324 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10328, metadata !DIExpression()), !dbg !10329
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !10330
  %3 = icmp ult i32 %2, 4, !dbg !10330
  br i1 %3, label %4, label %7, !dbg !10330

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !10330
  %6 = load i32, i32* %5, align 4, !dbg !10330
  br label %7, !dbg !10330

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !10331
  ret i32 %8, !dbg !10333
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !10334 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10336, metadata !DIExpression()), !dbg !10338
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10339
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10339
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10339
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10337, metadata !DIExpression()), !dbg !10338
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10340
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10340
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #27, !dbg !10341
  ret i32 %7, !dbg !10342
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !10343 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10347, metadata !DIExpression()), !dbg !10349
  call void @llvm.dbg.value(metadata i32 %1, metadata !10348, metadata !DIExpression()), !dbg !10349
  %3 = icmp eq i32 %0, 4096, !dbg !10350
  %4 = icmp eq i32 %1, 0, !dbg !10350
  %5 = select i1 %4, i32 4, i32 3, !dbg !10350
  %6 = select i1 %4, i32 3, i32 2, !dbg !10350
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !10350
  ret i32 %7, !dbg !10351
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !10352 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10354, metadata !DIExpression()), !dbg !10356
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10357
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10357
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10357
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10355, metadata !DIExpression()), !dbg !10356
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10358
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10358
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #27, !dbg !10359
  ret i32 %7, !dbg !10360
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #11 !dbg !10361 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10365, metadata !DIExpression()), !dbg !10366
  %2 = icmp eq i32 %0, 768, !dbg !10367
  %3 = zext i1 %2 to i32, !dbg !10366
  ret i32 %3, !dbg !10369
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10370 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10372, metadata !DIExpression()), !dbg !10373
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10374
  %3 = load volatile i32, i32* %2, align 4, !dbg !10374
  %4 = and i32 %3, 768, !dbg !10374
  ret i32 %4, !dbg !10375
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10376 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10378, metadata !DIExpression()), !dbg !10379
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10380
  %3 = load volatile i32, i32* %2, align 4, !dbg !10380
  %4 = and i32 %3, 4096, !dbg !10380
  ret i32 %4, !dbg !10381
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10382 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10384, metadata !DIExpression()), !dbg !10385
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10386
  %3 = load volatile i32, i32* %2, align 4, !dbg !10386
  %4 = and i32 %3, 12288, !dbg !10386
  ret i32 %4, !dbg !10387
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10388 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10390, metadata !DIExpression()), !dbg !10391
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10392
  %3 = load volatile i32, i32* %2, align 4, !dbg !10392
  %4 = and i32 %3, 1536, !dbg !10392
  ret i32 %4, !dbg !10393
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #11 !dbg !10394 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10398, metadata !DIExpression()), !dbg !10399
  %2 = icmp eq i32 %0, 2, !dbg !10400
  %3 = select i1 %2, i32 1024, i32 0, !dbg !10400
  %4 = icmp eq i32 %0, 1, !dbg !10400
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !10400
  ret i32 %5, !dbg !10401
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #11 !dbg !10402 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10406, metadata !DIExpression()), !dbg !10407
  %2 = icmp ult i32 %0, 3, !dbg !10408
  br i1 %2, label %3, label %6, !dbg !10408

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !10408
  %5 = load i32, i32* %4, align 4, !dbg !10408
  br label %6, !dbg !10408

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !10409
  ret i32 %7, !dbg !10411
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !10412 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10416, metadata !DIExpression()), !dbg !10418
  call void @llvm.dbg.value(metadata i32 %1, metadata !10417, metadata !DIExpression()), !dbg !10418
  %3 = icmp eq i32 %0, 4, !dbg !10419
  %4 = icmp eq i32 %1, 0, !dbg !10419
  %5 = select i1 %4, i32 0, i32 4096, !dbg !10419
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !10419
  ret i32 %6, !dbg !10420
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #11 !dbg !10421 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10425, metadata !DIExpression()), !dbg !10426
  %2 = icmp eq i32 %0, 1, !dbg !10427
  %3 = select i1 %2, i32 768, i32 0, !dbg !10426
  ret i32 %3, !dbg !10429
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10430 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10432, metadata !DIExpression()), !dbg !10433
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10434
  %3 = load volatile i32, i32* %2, align 4, !dbg !10434
  %4 = and i32 %3, -8193, !dbg !10434
  store volatile i32 %4, i32* %2, align 4, !dbg !10434
  ret void, !dbg !10435
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !10436 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10440, metadata !DIExpression()), !dbg !10443
  call void @llvm.dbg.value(metadata i32 %1, metadata !10441, metadata !DIExpression()), !dbg !10443
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10444
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10444
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10444
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10442, metadata !DIExpression()), !dbg !10443
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10445
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10445
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #27, !dbg !10446
  ret void, !dbg !10447
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !10448 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10450, metadata !DIExpression()), !dbg !10453
  call void @llvm.dbg.value(metadata i32 %1, metadata !10451, metadata !DIExpression()), !dbg !10453
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10454
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10454
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10454
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10452, metadata !DIExpression()), !dbg !10453
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10455
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10455
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #27, !dbg !10456
  ret void, !dbg !10457
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !10458 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10460, metadata !DIExpression()), !dbg !10463
  call void @llvm.dbg.value(metadata i32 %1, metadata !10461, metadata !DIExpression()), !dbg !10463
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10464
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10464
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10464
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10462, metadata !DIExpression()), !dbg !10463
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10465
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10465
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #27, !dbg !10466
  ret void, !dbg !10467
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !10468 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10470, metadata !DIExpression()), !dbg !10473
  call void @llvm.dbg.value(metadata i32 %1, metadata !10471, metadata !DIExpression()), !dbg !10473
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10474
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10474
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10474
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10472, metadata !DIExpression()), !dbg !10473
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10475
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10475
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #27, !dbg !10476
  ret void, !dbg !10477
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !10478 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10480, metadata !DIExpression()), !dbg !10485
  call void @llvm.dbg.value(metadata i32 %1, metadata !10481, metadata !DIExpression()), !dbg !10485
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10486
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !10486
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !10486
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !10482, metadata !DIExpression()), !dbg !10485
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10487
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !10487
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !10487
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !10483, metadata !DIExpression()), !dbg !10485
  %10 = bitcast i32* %3 to i8*, !dbg !10488
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #25, !dbg !10488
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !10489
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !10489
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !10493
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !10493
  %15 = load i8*, i8** %14, align 4, !dbg !10493
  call void @llvm.dbg.value(metadata i32* %3, metadata !10484, metadata !DIExpression(DW_OP_deref)), !dbg !10485
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #27, !dbg !10494
  %17 = icmp slt i32 %16, 0, !dbg !10495
  br i1 %17, label %23, label %18, !dbg !10496

18:                                               ; preds = %2
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !10497
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !10497
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %20) #27, !dbg !10498
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !10499
  %22 = load i32, i32* %3, align 4, !dbg !10500
  call void @llvm.dbg.value(metadata i32 %22, metadata !10484, metadata !DIExpression()), !dbg !10485
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %21, i32 noundef %22, i32 noundef %1) #27, !dbg !10501
  br label %23, !dbg !10502

23:                                               ; preds = %2, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #25, !dbg !10502
  ret void, !dbg !10502
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10503 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10505, metadata !DIExpression()), !dbg !10506
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10507
  %3 = load volatile i32, i32* %2, align 4, !dbg !10507
  %4 = or i32 %3, 8192, !dbg !10507
  store volatile i32 %4, i32* %2, align 4, !dbg !10507
  ret void, !dbg !10508
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !10509 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10511, metadata !DIExpression()), !dbg !10515
  call void @llvm.dbg.value(metadata i8* %1, metadata !10512, metadata !DIExpression()), !dbg !10515
  call void @llvm.dbg.value(metadata i32* %2, metadata !10513, metadata !DIExpression()), !dbg !10515
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10516
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !10516
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !10516
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !10514, metadata !DIExpression()), !dbg !10515
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !10517
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !10517
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !10519
  br i1 %9, label %12, label %10, !dbg !10520

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #26, !dbg !10521
  br label %12, !dbg !10522

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !10515
  ret i32 %13, !dbg !10523
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10524 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10528, metadata !DIExpression()), !dbg !10530
  call void @llvm.dbg.value(metadata i32 0, metadata !10529, metadata !DIExpression()), !dbg !10530
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10531
  %3 = load volatile i32, i32* %2, align 4, !dbg !10531
  %4 = and i32 %3, -32769, !dbg !10531
  store volatile i32 %4, i32* %2, align 4, !dbg !10531
  ret void, !dbg !10532
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !10533 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10537, metadata !DIExpression()), !dbg !10541
  call void @llvm.dbg.value(metadata i32 %1, metadata !10538, metadata !DIExpression()), !dbg !10541
  call void @llvm.dbg.value(metadata i32 0, metadata !10539, metadata !DIExpression()), !dbg !10541
  call void @llvm.dbg.value(metadata i32 %2, metadata !10540, metadata !DIExpression()), !dbg !10541
  %4 = zext i32 %1 to i64, !dbg !10542
  %5 = mul nuw nsw i64 %4, 25, !dbg !10542
  %6 = zext i32 %2 to i64, !dbg !10542
  %7 = shl nuw nsw i64 %6, 2, !dbg !10542
  %8 = udiv i64 %5, %7, !dbg !10542
  %9 = trunc i64 %8 to i32, !dbg !10542
  %10 = udiv i32 %9, 100, !dbg !10542
  %11 = shl nuw nsw i32 %10, 4, !dbg !10542
  %12 = mul i32 %10, -100, !dbg !10542
  %13 = add i32 %12, %9, !dbg !10542
  %14 = shl i32 %13, 4, !dbg !10542
  %15 = add i32 %14, 50, !dbg !10542
  %16 = udiv i32 %15, 100, !dbg !10542
  %17 = and i32 %16, 240, !dbg !10542
  %18 = add nuw nsw i32 %17, %11, !dbg !10542
  %19 = and i32 %16, 15, !dbg !10542
  %20 = and i32 %18, 65520, !dbg !10545
  %21 = or i32 %20, %19, !dbg !10545
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !10546
  store volatile i32 %21, i32* %22, align 4, !dbg !10547
  ret void, !dbg !10548
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10549 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10551, metadata !DIExpression()), !dbg !10553
  call void @llvm.dbg.value(metadata i32 %1, metadata !10552, metadata !DIExpression()), !dbg !10553
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10554
  %4 = load volatile i32, i32* %3, align 4, !dbg !10554
  %5 = and i32 %4, -769, !dbg !10554
  %6 = or i32 %5, %1, !dbg !10554
  store volatile i32 %6, i32* %3, align 4, !dbg !10554
  ret void, !dbg !10555
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10556 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10558, metadata !DIExpression()), !dbg !10560
  call void @llvm.dbg.value(metadata i32 %1, metadata !10559, metadata !DIExpression()), !dbg !10560
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10561
  %4 = load volatile i32, i32* %3, align 4, !dbg !10561
  %5 = and i32 %4, -4097, !dbg !10561
  %6 = or i32 %5, %1, !dbg !10561
  store volatile i32 %6, i32* %3, align 4, !dbg !10561
  ret void, !dbg !10562
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10563 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10565, metadata !DIExpression()), !dbg !10567
  call void @llvm.dbg.value(metadata i32 %1, metadata !10566, metadata !DIExpression()), !dbg !10567
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10568
  %4 = load volatile i32, i32* %3, align 4, !dbg !10568
  %5 = and i32 %4, -12289, !dbg !10568
  %6 = or i32 %5, %1, !dbg !10568
  store volatile i32 %6, i32* %3, align 4, !dbg !10568
  ret void, !dbg !10569
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10570 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10572, metadata !DIExpression()), !dbg !10574
  call void @llvm.dbg.value(metadata i32 %1, metadata !10573, metadata !DIExpression()), !dbg !10574
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10575
  %4 = load volatile i32, i32* %3, align 4, !dbg !10575
  %5 = and i32 %4, -1537, !dbg !10575
  %6 = or i32 %5, %1, !dbg !10575
  store volatile i32 %6, i32* %3, align 4, !dbg !10575
  ret void, !dbg !10576
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10577 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10579, metadata !DIExpression()), !dbg !10580
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10581
  %3 = load volatile i32, i32* %2, align 4, !dbg !10581
  %4 = and i32 %3, 1, !dbg !10581
  ret i32 %4, !dbg !10582
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10583 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10585, metadata !DIExpression()), !dbg !10586
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10587
  %3 = load volatile i32, i32* %2, align 4, !dbg !10587
  %4 = lshr i32 %3, 1, !dbg !10588
  %5 = and i32 %4, 1, !dbg !10588
  ret i32 %5, !dbg !10589
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10590 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10592, metadata !DIExpression()), !dbg !10593
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10594
  %3 = load volatile i32, i32* %2, align 4, !dbg !10594
  %4 = lshr i32 %3, 8, !dbg !10595
  %5 = and i32 %4, 1, !dbg !10595
  ret i32 %5, !dbg !10596
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10597 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10599, metadata !DIExpression()), !dbg !10600
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10601
  store volatile i32 -257, i32* %2, align 4, !dbg !10601
  ret void, !dbg !10602
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10603 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10605, metadata !DIExpression()), !dbg !10607
  %3 = bitcast i32* %2 to i8*, !dbg !10608
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10608
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10606, metadata !DIExpression()), !dbg !10609
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10610
  %5 = load volatile i32, i32* %4, align 4, !dbg !10610
  store volatile i32 %5, i32* %2, align 4, !dbg !10611
  %6 = load volatile i32, i32* %2, align 4, !dbg !10612
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10613
  %8 = load volatile i32, i32* %7, align 4, !dbg !10613
  store volatile i32 %8, i32* %2, align 4, !dbg !10614
  %9 = load volatile i32, i32* %2, align 4, !dbg !10615
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10616
  ret void, !dbg !10616
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10617 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10619, metadata !DIExpression()), !dbg !10621
  %3 = bitcast i32* %2 to i8*, !dbg !10622
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10622
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10620, metadata !DIExpression()), !dbg !10623
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10624
  %5 = load volatile i32, i32* %4, align 4, !dbg !10624
  store volatile i32 %5, i32* %2, align 4, !dbg !10625
  %6 = load volatile i32, i32* %2, align 4, !dbg !10626
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10627
  %8 = load volatile i32, i32* %7, align 4, !dbg !10627
  store volatile i32 %8, i32* %2, align 4, !dbg !10628
  %9 = load volatile i32, i32* %2, align 4, !dbg !10629
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10630
  ret void, !dbg !10630
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10631 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10633, metadata !DIExpression()), !dbg !10635
  %3 = bitcast i32* %2 to i8*, !dbg !10636
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10636
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10634, metadata !DIExpression()), !dbg !10637
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10638
  %5 = load volatile i32, i32* %4, align 4, !dbg !10638
  store volatile i32 %5, i32* %2, align 4, !dbg !10639
  %6 = load volatile i32, i32* %2, align 4, !dbg !10640
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10641
  %8 = load volatile i32, i32* %7, align 4, !dbg !10641
  store volatile i32 %8, i32* %2, align 4, !dbg !10642
  %9 = load volatile i32, i32* %2, align 4, !dbg !10643
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10644
  ret void, !dbg !10644
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_config_func_0(%struct.device* nocapture noundef readnone %0) #1 !dbg !1654 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1656, metadata !DIExpression()), !dbg !10645
  tail call void @z_arm_irq_priority_set(i32 noundef 37, i32 noundef 0, i32 noundef 0) #26, !dbg !10646
  tail call void @arch_irq_enable(i32 noundef 37) #26, !dbg !10648
  ret void, !dbg !10648
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_config_func_1(%struct.device* nocapture noundef readnone %0) #1 !dbg !1703 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1705, metadata !DIExpression()), !dbg !10649
  tail call void @z_arm_irq_priority_set(i32 noundef 38, i32 noundef 0, i32 noundef 0) #26, !dbg !10650
  tail call void @arch_irq_enable(i32 noundef 38) #26, !dbg !10652
  ret void, !dbg !10652
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_config_func_2(%struct.device* nocapture noundef readnone %0) #1 !dbg !1720 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1722, metadata !DIExpression()), !dbg !10653
  tail call void @z_arm_irq_priority_set(i32 noundef 71, i32 noundef 0, i32 noundef 0) #26, !dbg !10654
  tail call void @arch_irq_enable(i32 noundef 71) #26, !dbg !10656
  ret void, !dbg !10656
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_isr(%struct.device* noundef %0) #1 !dbg !10657 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10659, metadata !DIExpression()), !dbg !10661
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10662
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !10662
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !10662
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !10660, metadata !DIExpression()), !dbg !10661
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 2, !dbg !10663
  %6 = load void (%struct.device*, i8*)*, void (%struct.device*, i8*)** %5, align 4, !dbg !10663
  %7 = icmp eq void (%struct.device*, i8*)* %6, null, !dbg !10665
  br i1 %7, label %11, label %8, !dbg !10666

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 3, !dbg !10667
  %10 = load i8*, i8** %9, align 4, !dbg !10667
  tail call void %6(%struct.device* noundef nonnull %0, i8* noundef %10) #26, !dbg !10669
  br label %11, !dbg !10670

11:                                               ; preds = %8, %1
  ret void, !dbg !10671
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* noundef %0) #1 !dbg !10672 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10674, metadata !DIExpression()), !dbg !10680
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10681
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10681
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10681
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10675, metadata !DIExpression()), !dbg !10680
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10682
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !10682
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !10682
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !10676, metadata !DIExpression()), !dbg !10680
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #27, !dbg !10683
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !10684
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !10684
  %10 = tail call fastcc zeroext i1 @device_is_ready.67(%struct.device* noundef %9) #27, !dbg !10686
  br i1 %10, label %11, label %51, !dbg !10687

11:                                               ; preds = %1
  %12 = load %struct.device*, %struct.device** %8, align 4, !dbg !10688
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !10689
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !10689
  %15 = load i8*, i8** %14, align 4, !dbg !10689
  %16 = tail call fastcc i32 @clock_control_on.68(%struct.device* noundef %12, i8* noundef %15) #27, !dbg !10690
  call void @llvm.dbg.value(metadata i32 %16, metadata !10679, metadata !DIExpression()), !dbg !10680
  %17 = icmp eq i32 %16, 0, !dbg !10691
  br i1 %17, label %18, label %51, !dbg !10693

18:                                               ; preds = %11
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !10694
  %20 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %19, align 4, !dbg !10694
  %21 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %20) #27, !dbg !10695
  call void @llvm.dbg.value(metadata i32 %21, metadata !10679, metadata !DIExpression()), !dbg !10680
  %22 = icmp slt i32 %21, 0, !dbg !10696
  br i1 %22, label %51, label %23, !dbg !10698

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10699
  %25 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10699
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %25) #27, !dbg !10700
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10701
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %26) #27, !dbg !10702
  %27 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !10703
  %28 = load i32, i32* %27, align 4, !dbg !10703
  switch i32 %28, label %30 [
    i32 2, label %31
    i32 1, label %29
  ], !dbg !10705

29:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 1536, metadata !10677, metadata !DIExpression()), !dbg !10680
  call void @llvm.dbg.value(metadata i32 4096, metadata !10678, metadata !DIExpression()), !dbg !10680
  br label %31, !dbg !10706

30:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 0, metadata !10677, metadata !DIExpression()), !dbg !10680
  call void @llvm.dbg.value(metadata i32 0, metadata !10678, metadata !DIExpression()), !dbg !10680
  br label %31

31:                                               ; preds = %23, %29, %30
  %32 = phi i32 [ 1536, %29 ], [ 0, %30 ], [ 1024, %23 ], !dbg !10709
  %33 = phi i32 [ 4096, %29 ], [ 0, %30 ], [ 4096, %23 ], !dbg !10709
  call void @llvm.dbg.value(metadata i32 %33, metadata !10678, metadata !DIExpression()), !dbg !10680
  call void @llvm.dbg.value(metadata i32 %32, metadata !10677, metadata !DIExpression()), !dbg !10680
  %34 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10710
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %34, i32 noundef %33, i32 noundef %32) #27, !dbg !10711
  %35 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !10712
  %36 = load i8, i8* %35, align 4, !dbg !10712, !range !6328
  %37 = icmp eq i8 %36, 0, !dbg !10712
  br i1 %37, label %39, label %38, !dbg !10714

38:                                               ; preds = %31
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #27, !dbg !10715
  br label %39, !dbg !10717

39:                                               ; preds = %38, %31
  %40 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !10718
  %41 = load i32, i32* %40, align 4, !dbg !10718
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %41) #27, !dbg !10719
  %42 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !10720
  %43 = load i8, i8* %42, align 4, !dbg !10720, !range !6328
  %44 = icmp eq i8 %43, 0, !dbg !10720
  br i1 %44, label %47, label %45, !dbg !10722

45:                                               ; preds = %39
  %46 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10723
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %46) #27, !dbg !10725
  br label %47, !dbg !10726

47:                                               ; preds = %45, %39
  %48 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10727
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %48) #27, !dbg !10728
  %49 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 10, !dbg !10729
  %50 = load void (%struct.device*)*, void (%struct.device*)** %49, align 4, !dbg !10729
  tail call void %50(%struct.device* noundef nonnull %0) #26, !dbg !10730
  br label %51, !dbg !10731

51:                                               ; preds = %18, %11, %1, %47
  %52 = phi i32 [ 0, %47 ], [ -19, %1 ], [ %16, %11 ], [ %21, %18 ], !dbg !10680
  ret i32 %52, !dbg !10732
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10733 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10735, metadata !DIExpression()), !dbg !10739
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10740
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !10740
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !10740
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !10736, metadata !DIExpression()), !dbg !10739
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10737, metadata !DIExpression()), !dbg !10739
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !10741
  store %struct.device* @__device_dts_ord_9, %struct.device** %5, align 4, !dbg !10742
  ret void, !dbg !10743
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.67(%struct.device* noundef %0) unnamed_addr #1 !dbg !10744 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10748, metadata !DIExpression()), !dbg !10749
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10750, !srcloc !10752
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.69(%struct.device* noundef %0) #27, !dbg !10753
  ret i1 %2, !dbg !10754
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.68(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !10755 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10757, metadata !DIExpression()), !dbg !10760
  call void @llvm.dbg.value(metadata i8* %1, metadata !10758, metadata !DIExpression()), !dbg !10760
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10761
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !10761
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !10761
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !10759, metadata !DIExpression()), !dbg !10760
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !10762
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !10762
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #26, !dbg !10763
  ret i32 %8, !dbg !10764
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !10765 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10769, metadata !DIExpression()), !dbg !10773
  call void @llvm.dbg.value(metadata i8 0, metadata !10770, metadata !DIExpression()), !dbg !10773
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !10774
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !10774
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10772, metadata !DIExpression(DW_OP_deref)), !dbg !10773
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #26, !dbg !10775
  call void @llvm.dbg.value(metadata i32 %4, metadata !10771, metadata !DIExpression()), !dbg !10773
  %5 = icmp slt i32 %4, 0, !dbg !10776
  br i1 %5, label %9, label %6, !dbg !10778

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !10779
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !10772, metadata !DIExpression()), !dbg !10773
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #27, !dbg !10780
  br label %9, !dbg !10781

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !10773
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !10782
  ret i32 %10, !dbg !10782
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10783 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10785, metadata !DIExpression()), !dbg !10789
  call void @llvm.dbg.value(metadata i32 12, metadata !10786, metadata !DIExpression()), !dbg !10789
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10790

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10084, metadata !DIExpression()) #25, !dbg !10791
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !10794, !srcloc !10094
  call void @llvm.dbg.value(metadata i32 %4, metadata !10089, metadata !DIExpression()) #25, !dbg !10791
  %5 = or i32 %4, 12, !dbg !10795
  call void @llvm.dbg.value(metadata i32 %5, metadata !10787, metadata !DIExpression()), !dbg !10796
  call void @llvm.dbg.value(metadata i32 %5, metadata !10097, metadata !DIExpression()) #25, !dbg !10797
  call void @llvm.dbg.value(metadata i32* %2, metadata !10102, metadata !DIExpression()) #25, !dbg !10797
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !10799, !srcloc !10107
  call void @llvm.dbg.value(metadata i32 %6, metadata !10103, metadata !DIExpression()) #25, !dbg !10797
  %7 = icmp eq i32 %6, 0, !dbg !10790
  br i1 %7, label %8, label %3, !dbg !10795, !llvm.loop !10800

8:                                                ; preds = %3
  ret void, !dbg !10801
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !10802 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10804, metadata !DIExpression()), !dbg !10808
  call void @llvm.dbg.value(metadata i32 %1, metadata !10805, metadata !DIExpression()), !dbg !10808
  call void @llvm.dbg.value(metadata i32 %2, metadata !10806, metadata !DIExpression()), !dbg !10808
  call void @llvm.dbg.value(metadata i32 0, metadata !10807, metadata !DIExpression()), !dbg !10808
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10809
  %5 = load volatile i32, i32* %4, align 4, !dbg !10809
  %6 = and i32 %5, -5633, !dbg !10809
  %7 = or i32 %2, %1, !dbg !10809
  %8 = or i32 %7, %6, !dbg !10809
  store volatile i32 %8, i32* %4, align 4, !dbg !10809
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10810
  %10 = load volatile i32, i32* %9, align 4, !dbg !10810
  %11 = and i32 %10, -12289, !dbg !10810
  store volatile i32 %11, i32* %9, align 4, !dbg !10810
  ret void, !dbg !10811
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10812 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10814, metadata !DIExpression()), !dbg !10815
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10816
  %3 = load volatile i32, i32* %2, align 4, !dbg !10816
  %4 = or i32 %3, 8, !dbg !10816
  store volatile i32 %4, i32* %2, align 4, !dbg !10816
  ret void, !dbg !10817
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !10818 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !10822, metadata !DIExpression()), !dbg !10825
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !10823, metadata !DIExpression()), !dbg !10825
  call void @llvm.dbg.value(metadata i32 0, metadata !10824, metadata !DIExpression()), !dbg !10825
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !10826
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !10826
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !10827
  %5 = load i8, i8* %4, align 4, !dbg !10827
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #26, !dbg !10828
  ret i32 %6, !dbg !10829
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.69(%struct.device* noundef %0) unnamed_addr #1 !dbg !10830 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10832, metadata !DIExpression()), !dbg !10833
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #26, !dbg !10834
  ret i1 %2, !dbg !10835
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #15 !dbg !10836 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10838, metadata !DIExpression()), !dbg !10839
  tail call fastcc void @__NVIC_SetPriority.71() #27, !dbg !10840
  store i32 8399, i32* @last_load, align 4, !dbg !10841
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10842
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10843
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10844
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10845
  %3 = or i32 %2, 7, !dbg !10845
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10845
  ret i32 0, !dbg !10846
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.71() unnamed_addr #15 !dbg !10847 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !10849, metadata !DIExpression()), !dbg !10851
  call void @llvm.dbg.value(metadata i32 1, metadata !10850, metadata !DIExpression()), !dbg !10851
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !10852
  ret void, !dbg !10855
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !10856 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10858, metadata !DIExpression()), !dbg !10860
  %2 = tail call fastcc i32 @elapsed() #27, !dbg !10861
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10862
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10863
  %5 = add i32 %4, %3, !dbg !10863
  store i32 %5, i32* @cycle_count, align 4, !dbg !10863
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10864
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !10865
  %7 = sub i32 %5, %6, !dbg !10868
  %8 = udiv i32 %7, 8400, !dbg !10869
  call void @llvm.dbg.value(metadata i32 %8, metadata !10859, metadata !DIExpression()), !dbg !10860
  %9 = mul nuw i32 %8, 8400, !dbg !10870
  %10 = add i32 %9, %6, !dbg !10871
  store i32 %10, i32* @announced_cycles, align 4, !dbg !10871
  tail call void @sys_clock_announce(i32 noundef %8) #26, !dbg !10872
  tail call void @z_arm_int_exit() #26, !dbg !10873
  ret void, !dbg !10874
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #15 !dbg !10875 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10880
  call void @llvm.dbg.value(metadata i32 %1, metadata !10877, metadata !DIExpression()), !dbg !10881
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10882
  call void @llvm.dbg.value(metadata i32 %2, metadata !10878, metadata !DIExpression()), !dbg !10881
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10883
  call void @llvm.dbg.value(metadata i32 %3, metadata !10879, metadata !DIExpression()), !dbg !10881
  %4 = and i32 %2, 65536, !dbg !10884
  %5 = icmp ne i32 %4, 0, !dbg !10884
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !10886
  %8 = load i32, i32* @last_load, align 4, !dbg !10881
  br i1 %7, label %9, label %13, !dbg !10886

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10887
  %11 = add i32 %10, %8, !dbg !10887
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !10887
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10889
  br label %13, !dbg !10890

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !10891
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10892
  %16 = add i32 %14, %15, !dbg !10893
  ret i32 %16, !dbg !10894
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !10895 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10899, metadata !DIExpression()), !dbg !10912
  call void @llvm.dbg.value(metadata i1 %1, metadata !10900, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10912
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !10913
  br i1 %4, label %5, label %8, !dbg !10913

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10915
  %7 = and i32 %6, -2, !dbg !10915
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10915
  store i32 -16777216, i32* @last_load, align 4, !dbg !10917
  br label %54, !dbg !10918

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !10919
  call void @llvm.dbg.value(metadata i32 %9, metadata !10904, metadata !DIExpression()), !dbg !10912
  br i1 %3, label %18, label %10, !dbg !10920

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !10920
  call void @llvm.dbg.value(metadata i32 undef, metadata !10899, metadata !DIExpression()), !dbg !10912
  %12 = icmp slt i32 %11, 1, !dbg !10921
  br i1 %12, label %18, label %13, !dbg !10921

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !10921
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !10921
  %16 = mul nuw nsw i32 %15, 8400, !dbg !10921
  %17 = add nuw nsw i32 %16, 8399, !dbg !10921
  br label %18, !dbg !10921

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !10899, metadata !DIExpression()), !dbg !10912
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10922, metadata !DIExpression()) #25, !dbg !10929
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !10931, !srcloc !10937
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !10931
  call void @llvm.dbg.value(metadata i32 %21, metadata !10934, metadata !DIExpression()) #25, !dbg !10938
  call void @llvm.dbg.value(metadata i32 undef, metadata !10935, metadata !DIExpression()) #25, !dbg !10938
  call void @llvm.dbg.value(metadata i32 %21, metadata !10928, metadata !DIExpression()) #25, !dbg !10929
  call void @llvm.dbg.value(metadata i32 %21, metadata !10905, metadata !DIExpression()), !dbg !10912
  %22 = tail call fastcc i32 @elapsed() #27, !dbg !10939
  call void @llvm.dbg.value(metadata i32 %22, metadata !10910, metadata !DIExpression()), !dbg !10912
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10940
  call void @llvm.dbg.value(metadata i32 %23, metadata !10902, metadata !DIExpression()), !dbg !10912
  %24 = load i32, i32* @cycle_count, align 4, !dbg !10941
  %25 = add i32 %24, %22, !dbg !10941
  store i32 %25, i32* @cycle_count, align 4, !dbg !10941
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10942
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !10943
  %27 = sub i32 %25, %26, !dbg !10944
  call void @llvm.dbg.value(metadata i32 %27, metadata !10911, metadata !DIExpression()), !dbg !10912
  %28 = icmp slt i32 %27, 0, !dbg !10945
  br i1 %28, label %38, label %29, !dbg !10947

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !10901, metadata !DIExpression()), !dbg !10912
  call void @llvm.dbg.value(metadata i32 undef, metadata !10901, metadata !DIExpression()), !dbg !10912
  %30 = add nuw i32 %19, %27, !dbg !10948
  %31 = urem i32 %30, 8400, !dbg !10950
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !10901, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10912
  %32 = sub nuw nsw i32 %19, %31, !dbg !10951
  call void @llvm.dbg.value(metadata i32 %32, metadata !10901, metadata !DIExpression()), !dbg !10912
  %33 = icmp ugt i32 %32, 1024, !dbg !10952
  br i1 %33, label %34, label %36, !dbg !10952

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !10901, metadata !DIExpression()), !dbg !10912
  %35 = icmp ugt i32 %32, 16766400, !dbg !10953
  br i1 %35, label %38, label %36, !dbg !10955

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1024, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1024, %18 ], [ 16766400, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !10956
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10957
  call void @llvm.dbg.value(metadata i32 %40, metadata !10903, metadata !DIExpression()), !dbg !10912
  %41 = add nsw i32 %39, -1, !dbg !10958
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10959
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10960
  %42 = icmp ult i32 %23, %40, !dbg !10961
  br i1 %42, label %43, label %48, !dbg !10963

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !10964
  %45 = add i32 %23, %9, !dbg !10966
  %46 = sub i32 %45, %40, !dbg !10967
  %47 = add i32 %46, %44, !dbg !10964
  br label %52, !dbg !10968

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !10969
  %50 = load i32, i32* @cycle_count, align 4, !dbg !10971
  %51 = add i32 %49, %50, !dbg !10971
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !10972
  store i32 %53, i32* @cycle_count, align 4, !dbg !10972
  call void @llvm.dbg.value(metadata i32 %21, metadata !10973, metadata !DIExpression()) #25, !dbg !10979
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10978, metadata !DIExpression()) #25, !dbg !10979
  call void @llvm.dbg.value(metadata i32 %21, metadata !10981, metadata !DIExpression()) #25, !dbg !10984
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #25, !dbg !10986, !srcloc !10987
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !10988
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !10989 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10922, metadata !DIExpression()) #25, !dbg !10993
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !10995, !srcloc !10937
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !10995
  call void @llvm.dbg.value(metadata i32 %2, metadata !10934, metadata !DIExpression()) #25, !dbg !10997
  call void @llvm.dbg.value(metadata i32 undef, metadata !10935, metadata !DIExpression()) #25, !dbg !10997
  call void @llvm.dbg.value(metadata i32 %2, metadata !10928, metadata !DIExpression()) #25, !dbg !10993
  call void @llvm.dbg.value(metadata i32 %2, metadata !10991, metadata !DIExpression()), !dbg !10998
  %3 = tail call fastcc i32 @elapsed() #27, !dbg !10999
  %4 = load i32, i32* @cycle_count, align 4, !dbg !11000
  %5 = add i32 %4, %3, !dbg !11001
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !11002
  %7 = sub i32 %5, %6, !dbg !11003
  call void @llvm.dbg.value(metadata i32 %7, metadata !10992, metadata !DIExpression()), !dbg !10998
  call void @llvm.dbg.value(metadata i32 %2, metadata !10973, metadata !DIExpression()) #25, !dbg !11004
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10978, metadata !DIExpression()) #25, !dbg !11004
  call void @llvm.dbg.value(metadata i32 %2, metadata !10981, metadata !DIExpression()) #25, !dbg !11006
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !11008, !srcloc !10987
  %8 = udiv i32 %7, 8400, !dbg !11009
  ret i32 %8, !dbg !11010
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !11011 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10922, metadata !DIExpression()) #25, !dbg !11015
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !11017, !srcloc !10937
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !11017
  call void @llvm.dbg.value(metadata i32 %2, metadata !10934, metadata !DIExpression()) #25, !dbg !11019
  call void @llvm.dbg.value(metadata i32 undef, metadata !10935, metadata !DIExpression()) #25, !dbg !11019
  call void @llvm.dbg.value(metadata i32 %2, metadata !10928, metadata !DIExpression()) #25, !dbg !11015
  call void @llvm.dbg.value(metadata i32 %2, metadata !11013, metadata !DIExpression()), !dbg !11020
  %3 = tail call fastcc i32 @elapsed() #27, !dbg !11021
  %4 = load i32, i32* @cycle_count, align 4, !dbg !11022
  %5 = add i32 %4, %3, !dbg !11023
  call void @llvm.dbg.value(metadata i32 %5, metadata !11014, metadata !DIExpression()), !dbg !11020
  call void @llvm.dbg.value(metadata i32 %2, metadata !10973, metadata !DIExpression()) #25, !dbg !11024
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10978, metadata !DIExpression()) #25, !dbg !11024
  call void @llvm.dbg.value(metadata i32 %2, metadata !10981, metadata !DIExpression()) #25, !dbg !11026
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !11028, !srcloc !10987
  ret i32 %5, !dbg !11029
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #15 !dbg !11030 {
  %1 = load i32, i32* @last_load, align 4, !dbg !11031
  %2 = icmp eq i32 %1, -16777216, !dbg !11033
  br i1 %2, label %3, label %6, !dbg !11034

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11035
  %5 = or i32 %4, 1, !dbg !11035
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11035
  br label %6, !dbg !11037

6:                                                ; preds = %3, %0
  ret void, !dbg !11038
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #15 !dbg !11039 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11040
  %2 = and i32 %1, -2, !dbg !11040
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11040
  ret void, !dbg !11041
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #14 !dbg !11042 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11068, metadata !DIExpression()), !dbg !11071
  call void @llvm.dbg.value(metadata i8 %1, metadata !11069, metadata !DIExpression()), !dbg !11071
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11070, metadata !DIExpression()), !dbg !11071
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !11072
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11072
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !11071
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11073
  %8 = load i8, i8* %6, align 4, !dbg !11074
  %9 = zext i8 %8 to i32, !dbg !11075
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !11075
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !11076
  br i1 %11, label %18, label %24, !dbg !11077

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !11071
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11073
  %14 = load i8, i8* %6, align 4, !dbg !11074
  %15 = zext i8 %14 to i32, !dbg !11075
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !11075
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !11076
  br i1 %17, label %18, label %24, !dbg !11077, !llvm.loop !11078

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !11080
  %21 = load i8, i8* %20, align 1, !dbg !11080
  %22 = icmp eq i8 %21, %1, !dbg !11083
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !11084
  br i1 %22, label %24, label %12, !dbg !11085

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !11071
  ret i32 %25, !dbg !11086
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11087 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !11098, metadata !DIExpression()), !dbg !11114
  call void @llvm.dbg.value(metadata i8 %1, metadata !11099, metadata !DIExpression()), !dbg !11114
  call void @llvm.dbg.value(metadata i32 %2, metadata !11100, metadata !DIExpression()), !dbg !11114
  call void @llvm.dbg.value(metadata i32 0, metadata !11103, metadata !DIExpression()), !dbg !11114
  call void @llvm.dbg.value(metadata i32 0, metadata !11104, metadata !DIExpression()), !dbg !11114
  call void @llvm.dbg.value(metadata i8 0, metadata !11105, metadata !DIExpression()), !dbg !11115
  %4 = icmp eq i8 %1, 0, !dbg !11116
  br i1 %4, label %35, label %5, !dbg !11117

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !11116
  br label %9, !dbg !11117

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !11105, metadata !DIExpression()), !dbg !11115
  call void @llvm.dbg.value(metadata i32 %29, metadata !11103, metadata !DIExpression()), !dbg !11114
  %8 = icmp eq i32 %34, %6, !dbg !11116
  br i1 %8, label %35, label %9, !dbg !11117, !llvm.loop !11118

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11105, metadata !DIExpression()), !dbg !11115
  call void @llvm.dbg.value(metadata i32 %11, metadata !11103, metadata !DIExpression()), !dbg !11114
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !11120
  %13 = load i32, i32* %12, align 4, !dbg !11120
  call void @llvm.dbg.value(metadata i32 %13, metadata !11102, metadata !DIExpression()), !dbg !11114
  %14 = and i32 %13, 31, !dbg !11121
  %15 = icmp ult i32 %14, 16, !dbg !11122
  br i1 %15, label %16, label %20, !dbg !11123

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !11124
  %18 = load i32, i32* %17, align 4, !dbg !11124
  %19 = or i32 %18, 32, !dbg !11126
  call void @llvm.dbg.value(metadata i32 %19, metadata !11103, metadata !DIExpression()), !dbg !11114
  br label %28, !dbg !11127

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !11128

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !11129
  %23 = load i32, i32* %22, align 4, !dbg !11129
  call void @llvm.dbg.value(metadata i32 %23, metadata !11107, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !11130
  %24 = lshr i32 %23, 7, !dbg !11131
  %25 = and i32 %24, 16, !dbg !11131
  %26 = or i32 %25, %23, !dbg !11131
  call void @llvm.dbg.value(metadata i32 %26, metadata !11103, metadata !DIExpression()), !dbg !11114
  br label %28, !dbg !11132

27:                                               ; preds = %20
  br label %28, !dbg !11133

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ 48, %20 ], [ %11, %27 ], !dbg !11114
  call void @llvm.dbg.value(metadata i32 %29, metadata !11103, metadata !DIExpression()), !dbg !11114
  %30 = lshr i32 %13, 5, !dbg !11133
  %31 = and i32 %30, 255, !dbg !11133
  call void @llvm.dbg.value(metadata i32 %31, metadata !11101, metadata !DIExpression()), !dbg !11114
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #27, !dbg !11134
  call void @llvm.dbg.value(metadata i32 %32, metadata !11104, metadata !DIExpression()), !dbg !11114
  %33 = icmp slt i32 %32, 0, !dbg !11135
  %34 = add nuw nsw i32 %10, 1, !dbg !11137
  call void @llvm.dbg.value(metadata i32 %34, metadata !11105, metadata !DIExpression()), !dbg !11115
  br i1 %33, label %35, label %7, !dbg !11138

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !11139
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11140 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11144, metadata !DIExpression()), !dbg !11148
  call void @llvm.dbg.value(metadata i32 %1, metadata !11145, metadata !DIExpression()), !dbg !11148
  call void @llvm.dbg.value(metadata i32 %2, metadata !11146, metadata !DIExpression()), !dbg !11148
  %4 = icmp ugt i32 %0, 175, !dbg !11149
  br i1 %4, label %16, label %5, !dbg !11151

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !11152
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !11153
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !11153
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !11147, metadata !DIExpression()), !dbg !11148
  %9 = add nsw i32 %6, -8, !dbg !11154
  %10 = icmp ult i32 %9, 3, !dbg !11154
  br i1 %10, label %16, label %11, !dbg !11156

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.76(%struct.device* noundef %8) #27, !dbg !11157
  br i1 %12, label %13, label %16, !dbg !11158

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !11159
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #26, !dbg !11160
  br label %16, !dbg !11161

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !11148
  ret i32 %17, !dbg !11162
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.76(%struct.device* noundef %0) unnamed_addr #1 !dbg !11163 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11167, metadata !DIExpression()), !dbg !11168
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !11169, !srcloc !11171
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.77(%struct.device* noundef %0) #27, !dbg !11172
  ret i1 %2, !dbg !11173
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.77(%struct.device* noundef %0) unnamed_addr #1 !dbg !11174 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11176, metadata !DIExpression()), !dbg !11177
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #26, !dbg !11178
  ret i1 %2, !dbg !11179
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #11 !dbg !11180 {
  ret void, !dbg !11181
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #16 !dbg !11182 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11184, metadata !DIExpression()), !dbg !11189
  call void @llvm.dbg.value(metadata i32 0, metadata !11185, metadata !DIExpression()), !dbg !11189
  call void @llvm.dbg.value(metadata i32 2, metadata !11186, metadata !DIExpression()), !dbg !11189
  call void @llvm.dbg.value(metadata i32 0, metadata !11187, metadata !DIExpression()), !dbg !11189
  call void @llvm.dbg.value(metadata i32 2, metadata !11188, metadata !DIExpression()), !dbg !11189
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11190
  %2 = and i32 %1, 12, !dbg !11191
  call void @llvm.dbg.value(metadata i32 %2, metadata !11184, metadata !DIExpression()), !dbg !11189
  %3 = icmp eq i32 %2, 8, !dbg !11192
  br i1 %3, label %4, label %18, !dbg !11192

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11193
  call void @llvm.dbg.value(metadata i32 %5, metadata !11187, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !11189
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11195
  %7 = and i32 %6, 63, !dbg !11196
  call void @llvm.dbg.value(metadata i32 %7, metadata !11188, metadata !DIExpression()), !dbg !11189
  %8 = udiv i32 16000000, %7, !dbg !11197
  %9 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11197
  %10 = lshr i32 %9, 6, !dbg !11197
  %11 = and i32 %10, 511, !dbg !11197
  %12 = mul i32 %11, %8, !dbg !11197
  call void @llvm.dbg.value(metadata i32 %12, metadata !11185, metadata !DIExpression()), !dbg !11189
  call void @llvm.dbg.value(metadata i32 %12, metadata !11185, metadata !DIExpression()), !dbg !11189
  call void @llvm.dbg.value(metadata i32 %12, metadata !11185, metadata !DIExpression()), !dbg !11189
  %13 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11199
  %14 = lshr i32 %13, 15, !dbg !11200
  %15 = and i32 %14, 6, !dbg !11200
  %16 = add nuw nsw i32 %15, 2, !dbg !11200
  call void @llvm.dbg.value(metadata i32 %16, metadata !11186, metadata !DIExpression()), !dbg !11189
  %17 = udiv i32 %12, %16, !dbg !11201
  br label %18, !dbg !11202

18:                                               ; preds = %0, %4
  %19 = phi i32 [ %17, %4 ], [ 16000000, %0 ]
  store i32 %19, i32* @SystemCoreClock, align 4, !dbg !11203
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11204
  %21 = lshr i32 %20, 4, !dbg !11205
  %22 = and i32 %21, 15, !dbg !11205
  %23 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %22, !dbg !11206
  %24 = load i8, i8* %23, align 1, !dbg !11206
  %25 = zext i8 %24 to i32, !dbg !11206
  call void @llvm.dbg.value(metadata i32 %25, metadata !11184, metadata !DIExpression()), !dbg !11189
  %26 = lshr i32 %19, %25, !dbg !11207
  store i32 %26, i32* @SystemCoreClock, align 4, !dbg !11207
  ret void, !dbg !11208
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !11209 {
  ret i32 0, !dbg !11214
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !11215 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11241, metadata !DIExpression()), !dbg !11252
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !11253
  br i1 %3, label %311, label %4, !dbg !11255

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11256
  %6 = load i32, i32* %5, align 4, !dbg !11256
  %7 = and i32 %6, 1, !dbg !11258
  %8 = icmp eq i32 %7, 0, !dbg !11259
  br i1 %8, label %66, label %9, !dbg !11260

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11261
  %11 = and i32 %10, 12, !dbg !11261
  %12 = icmp eq i32 %11, 4, !dbg !11264
  br i1 %12, label %21, label %13, !dbg !11265

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11266
  %15 = and i32 %14, 12, !dbg !11266
  %16 = icmp eq i32 %15, 8, !dbg !11267
  br i1 %16, label %17, label %29, !dbg !11268

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11269
  %19 = and i32 %18, 4194304, !dbg !11270
  %20 = icmp eq i32 %19, 0, !dbg !11271
  br i1 %20, label %29, label %21, !dbg !11272

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11273
  %23 = and i32 %22, 131072, !dbg !11273
  %24 = icmp eq i32 %23, 0, !dbg !11273
  br i1 %24, label %66, label %25, !dbg !11276

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11277
  %27 = load i32, i32* %26, align 4, !dbg !11277
  %28 = icmp eq i32 %27, 0, !dbg !11278
  br i1 %28, label %311, label %66, !dbg !11279

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11280
  %31 = load i32, i32* %30, align 4, !dbg !11280
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !11284

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11285
  %34 = or i32 %33, 65536, !dbg !11285
  br label %45, !dbg !11285

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11287
  %37 = or i32 %36, 262144, !dbg !11287
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11287
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11287
  %39 = or i32 %38, 65536, !dbg !11287
  br label %45, !dbg !11287

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11290
  %42 = and i32 %41, -65537, !dbg !11290
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11290
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11290
  %44 = and i32 %43, -262145, !dbg !11290
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11292
  %47 = load i32, i32* %30, align 4, !dbg !11293
  %48 = icmp eq i32 %47, 0, !dbg !11295
  %49 = tail call i32 @HAL_GetTick() #26, !dbg !11296
  call void @llvm.dbg.value(metadata i32 %49, metadata !11242, metadata !DIExpression()), !dbg !11252
  call void @llvm.dbg.value(metadata i32 %49, metadata !11242, metadata !DIExpression()), !dbg !11252
  br i1 %48, label %58, label %50, !dbg !11297

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11298
  %52 = and i32 %51, 131072, !dbg !11300
  %53 = icmp eq i32 %52, 0, !dbg !11300
  br i1 %53, label %54, label %66, !dbg !11301

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #26, !dbg !11302
  %56 = sub i32 %55, %49, !dbg !11305
  %57 = icmp ugt i32 %56, 100, !dbg !11306
  br i1 %57, label %311, label %50, !dbg !11307, !llvm.loop !11308

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11310
  %60 = and i32 %59, 131072, !dbg !11310
  %61 = icmp eq i32 %60, 0, !dbg !11310
  br i1 %61, label %66, label %62, !dbg !11312

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #26, !dbg !11313
  %64 = sub i32 %63, %49, !dbg !11316
  %65 = icmp ugt i32 %64, 100, !dbg !11317
  br i1 %65, label %311, label %58, !dbg !11318, !llvm.loop !11319

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !11321
  %68 = and i32 %67, 2, !dbg !11323
  %69 = icmp eq i32 %68, 0, !dbg !11324
  br i1 %69, label %121, label %70, !dbg !11325

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11326
  %72 = and i32 %71, 12, !dbg !11326
  %73 = icmp eq i32 %72, 0, !dbg !11329
  br i1 %73, label %82, label %74, !dbg !11330

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11331
  %76 = and i32 %75, 12, !dbg !11331
  %77 = icmp eq i32 %76, 8, !dbg !11332
  br i1 %77, label %78, label %90, !dbg !11333

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11334
  %80 = and i32 %79, 4194304, !dbg !11335
  %81 = icmp eq i32 %80, 0, !dbg !11336
  br i1 %81, label %82, label %90, !dbg !11337

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11338
  %84 = and i32 %83, 2, !dbg !11338
  %85 = icmp eq i32 %84, 0, !dbg !11338
  br i1 %85, label %114, label %86, !dbg !11341

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11342
  %88 = load i32, i32* %87, align 4, !dbg !11342
  %89 = icmp eq i32 %88, 1, !dbg !11343
  br i1 %89, label %114, label %311, !dbg !11344

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11345
  %92 = load i32, i32* %91, align 4, !dbg !11345
  %93 = icmp eq i32 %92, 0, !dbg !11348
  br i1 %93, label %104, label %94, !dbg !11349

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !11350
  %95 = tail call i32 @HAL_GetTick() #26, !dbg !11352
  call void @llvm.dbg.value(metadata i32 %95, metadata !11242, metadata !DIExpression()), !dbg !11252
  br label %96, !dbg !11353

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11354
  %98 = and i32 %97, 2, !dbg !11355
  %99 = icmp eq i32 %98, 0, !dbg !11355
  br i1 %99, label %100, label %114, !dbg !11353

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #26, !dbg !11356
  %102 = sub i32 %101, %95, !dbg !11359
  %103 = icmp ugt i32 %102, 2, !dbg !11360
  br i1 %103, label %311, label %96, !dbg !11361, !llvm.loop !11362

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !11364
  %105 = tail call i32 @HAL_GetTick() #26, !dbg !11366
  call void @llvm.dbg.value(metadata i32 %105, metadata !11242, metadata !DIExpression()), !dbg !11252
  br label %106, !dbg !11367

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11368
  %108 = and i32 %107, 2, !dbg !11368
  %109 = icmp eq i32 %108, 0, !dbg !11368
  br i1 %109, label %121, label %110, !dbg !11367

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #26, !dbg !11369
  %112 = sub i32 %111, %105, !dbg !11372
  %113 = icmp ugt i32 %112, 2, !dbg !11373
  br i1 %113, label %311, label %106, !dbg !11374, !llvm.loop !11375

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11377
  %116 = and i32 %115, -249, !dbg !11377
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !11377
  %118 = load i32, i32* %117, align 4, !dbg !11377
  %119 = shl i32 %118, 3, !dbg !11377
  %120 = or i32 %119, %116, !dbg !11377
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11377
  br label %121, !dbg !11378

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !11378
  %123 = and i32 %122, 8, !dbg !11380
  %124 = icmp eq i32 %123, 0, !dbg !11381
  br i1 %124, label %149, label %125, !dbg !11382

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !11383
  %127 = load i32, i32* %126, align 4, !dbg !11383
  %128 = icmp eq i32 %127, 0, !dbg !11386
  br i1 %128, label %139, label %129, !dbg !11387

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !11388
  %130 = tail call i32 @HAL_GetTick() #26, !dbg !11390
  call void @llvm.dbg.value(metadata i32 %130, metadata !11242, metadata !DIExpression()), !dbg !11252
  br label %131, !dbg !11391

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11392
  %133 = and i32 %132, 2, !dbg !11393
  %134 = icmp eq i32 %133, 0, !dbg !11393
  br i1 %134, label %135, label %149, !dbg !11391

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #26, !dbg !11394
  %137 = sub i32 %136, %130, !dbg !11397
  %138 = icmp ugt i32 %137, 2, !dbg !11398
  br i1 %138, label %311, label %131, !dbg !11399, !llvm.loop !11400

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !11402
  %140 = tail call i32 @HAL_GetTick() #26, !dbg !11404
  call void @llvm.dbg.value(metadata i32 %140, metadata !11242, metadata !DIExpression()), !dbg !11252
  br label %141, !dbg !11405

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11406
  %143 = and i32 %142, 2, !dbg !11406
  %144 = icmp eq i32 %143, 0, !dbg !11406
  br i1 %144, label %149, label %145, !dbg !11405

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #26, !dbg !11407
  %147 = sub i32 %146, %140, !dbg !11410
  %148 = icmp ugt i32 %147, 2, !dbg !11411
  br i1 %148, label %311, label %141, !dbg !11412, !llvm.loop !11413

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !11415
  %151 = and i32 %150, 4, !dbg !11416
  %152 = icmp eq i32 %151, 0, !dbg !11417
  br i1 %152, label %221, label %153, !dbg !11418

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !11244, metadata !DIExpression()), !dbg !11419
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11420
  %155 = and i32 %154, 268435456, !dbg !11420
  %156 = icmp eq i32 %155, 0, !dbg !11420
  br i1 %156, label %157, label %164, !dbg !11421

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !11422
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !11422
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11248, metadata !DIExpression()), !dbg !11422
  store volatile i32 0, i32* %2, align 4, !dbg !11422
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11422
  %160 = or i32 %159, 268435456, !dbg !11422
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11422
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11422
  %162 = and i32 %161, 268435456, !dbg !11422
  store volatile i32 %162, i32* %2, align 4, !dbg !11422
  %163 = load volatile i32, i32* %2, align 4, !dbg !11422
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !11423
  call void @llvm.dbg.value(metadata i32 1, metadata !11244, metadata !DIExpression()), !dbg !11419
  br label %164, !dbg !11424

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !11244, metadata !DIExpression()), !dbg !11419
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11425
  %166 = and i32 %165, 256, !dbg !11425
  %167 = icmp eq i32 %166, 0, !dbg !11425
  br i1 %167, label %168, label %180, !dbg !11427

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11428
  %170 = or i32 %169, 256, !dbg !11428
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11428
  %171 = tail call i32 @HAL_GetTick() #26, !dbg !11430
  call void @llvm.dbg.value(metadata i32 %171, metadata !11242, metadata !DIExpression()), !dbg !11252
  br label %172, !dbg !11431

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11432
  %174 = and i32 %173, 256, !dbg !11432
  %175 = icmp eq i32 %174, 0, !dbg !11432
  br i1 %175, label %176, label %180, !dbg !11431

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #26, !dbg !11433
  %178 = sub i32 %177, %171, !dbg !11436
  %179 = icmp ugt i32 %178, 2, !dbg !11437
  br i1 %179, label %311, label %172, !dbg !11438, !llvm.loop !11439

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11441
  %182 = load i32, i32* %181, align 4, !dbg !11441
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !11444

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11445
  %185 = or i32 %184, 1, !dbg !11445
  br label %196, !dbg !11445

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11447
  %188 = or i32 %187, 4, !dbg !11447
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11447
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11447
  %190 = or i32 %189, 1, !dbg !11447
  br label %196, !dbg !11447

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11450
  %193 = and i32 %192, -2, !dbg !11450
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11450
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11450
  %195 = and i32 %194, -5, !dbg !11450
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11452
  %198 = load i32, i32* %181, align 4, !dbg !11453
  %199 = icmp eq i32 %198, 0, !dbg !11455
  %200 = tail call i32 @HAL_GetTick() #26, !dbg !11456
  call void @llvm.dbg.value(metadata i32 %200, metadata !11242, metadata !DIExpression()), !dbg !11252
  call void @llvm.dbg.value(metadata i32 %200, metadata !11242, metadata !DIExpression()), !dbg !11252
  br i1 %199, label %209, label %201, !dbg !11457

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11458
  %203 = and i32 %202, 2, !dbg !11460
  %204 = icmp eq i32 %203, 0, !dbg !11460
  br i1 %204, label %205, label %217, !dbg !11461

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #26, !dbg !11462
  %207 = sub i32 %206, %200, !dbg !11465
  %208 = icmp ugt i32 %207, 5000, !dbg !11466
  br i1 %208, label %311, label %201, !dbg !11467, !llvm.loop !11468

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11470
  %211 = and i32 %210, 2, !dbg !11470
  %212 = icmp eq i32 %211, 0, !dbg !11470
  br i1 %212, label %217, label %213, !dbg !11472

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #26, !dbg !11473
  %215 = sub i32 %214, %200, !dbg !11476
  %216 = icmp ugt i32 %215, 5000, !dbg !11477
  br i1 %216, label %311, label %209, !dbg !11478, !llvm.loop !11479

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !11481

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11482
  %220 = and i32 %219, -268435457, !dbg !11482
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11482
  br label %221, !dbg !11485

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !11486
  %223 = load i32, i32* %222, align 4, !dbg !11486
  %224 = icmp eq i32 %223, 0, !dbg !11488
  br i1 %224, label %310, label %225, !dbg !11489

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11490
  %227 = and i32 %226, 12, !dbg !11490
  %228 = icmp eq i32 %227, 8, !dbg !11493
  br i1 %228, label %277, label %229, !dbg !11494

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !11495
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !11498
  %231 = tail call i32 @HAL_GetTick() #26, !dbg !11498
  call void @llvm.dbg.value(metadata i32 %231, metadata !11242, metadata !DIExpression()), !dbg !11252
  call void @llvm.dbg.value(metadata i32 %231, metadata !11242, metadata !DIExpression()), !dbg !11252
  br i1 %230, label %232, label %269, !dbg !11499

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11500
  %234 = and i32 %233, 33554432, !dbg !11500
  %235 = icmp eq i32 %234, 0, !dbg !11500
  br i1 %235, label %240, label %236, !dbg !11502

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #26, !dbg !11503
  %238 = sub i32 %237, %231, !dbg !11506
  %239 = icmp ugt i32 %238, 2, !dbg !11507
  br i1 %239, label %311, label %232, !dbg !11508, !llvm.loop !11509

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11511
  %242 = load i32, i32* %241, align 4, !dbg !11511
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11511
  %244 = load i32, i32* %243, align 4, !dbg !11511
  %245 = or i32 %244, %242, !dbg !11511
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11511
  %247 = load i32, i32* %246, align 4, !dbg !11511
  %248 = shl i32 %247, 6, !dbg !11511
  %249 = or i32 %245, %248, !dbg !11511
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11511
  %251 = load i32, i32* %250, align 4, !dbg !11511
  %252 = shl i32 %251, 15, !dbg !11511
  %253 = add i32 %252, -65536, !dbg !11511
  %254 = and i32 %253, -65536, !dbg !11511
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11511
  %256 = load i32, i32* %255, align 4, !dbg !11511
  %257 = shl i32 %256, 24, !dbg !11511
  %258 = or i32 %249, %257, !dbg !11511
  %259 = or i32 %258, %254, !dbg !11511
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11511
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !11512
  %260 = tail call i32 @HAL_GetTick() #26, !dbg !11513
  call void @llvm.dbg.value(metadata i32 %260, metadata !11242, metadata !DIExpression()), !dbg !11252
  br label %261, !dbg !11514

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11515
  %263 = and i32 %262, 33554432, !dbg !11516
  %264 = icmp eq i32 %263, 0, !dbg !11516
  br i1 %264, label %265, label %310, !dbg !11514

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #26, !dbg !11517
  %267 = sub i32 %266, %260, !dbg !11520
  %268 = icmp ugt i32 %267, 2, !dbg !11521
  br i1 %268, label %311, label %261, !dbg !11522, !llvm.loop !11523

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11525
  %271 = and i32 %270, 33554432, !dbg !11525
  %272 = icmp eq i32 %271, 0, !dbg !11525
  br i1 %272, label %310, label %273, !dbg !11527

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #26, !dbg !11528
  %275 = sub i32 %274, %231, !dbg !11531
  %276 = icmp ugt i32 %275, 2, !dbg !11532
  br i1 %276, label %311, label %269, !dbg !11533, !llvm.loop !11534

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !11536
  br i1 %278, label %311, label %279, !dbg !11539

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11540
  call void @llvm.dbg.value(metadata i32 %280, metadata !11243, metadata !DIExpression()), !dbg !11252
  %281 = and i32 %280, 4194304, !dbg !11542
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11544
  %283 = load i32, i32* %282, align 4, !dbg !11544
  %284 = icmp eq i32 %281, %283, !dbg !11545
  br i1 %284, label %285, label %311, !dbg !11546

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !11547
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11548
  %288 = load i32, i32* %287, align 4, !dbg !11548
  %289 = icmp eq i32 %286, %288, !dbg !11549
  br i1 %289, label %290, label %311, !dbg !11550

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !11551
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11552
  %293 = load i32, i32* %292, align 4, !dbg !11552
  %294 = shl i32 %293, 6, !dbg !11553
  %295 = icmp eq i32 %291, %294, !dbg !11554
  br i1 %295, label %296, label %311, !dbg !11555

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !11556
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11557
  %299 = load i32, i32* %298, align 4, !dbg !11557
  %300 = shl i32 %299, 15, !dbg !11558
  %301 = add i32 %300, -65536, !dbg !11558
  %302 = and i32 %301, -65536, !dbg !11558
  %303 = icmp eq i32 %297, %302, !dbg !11559
  br i1 %303, label %304, label %311, !dbg !11560

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !11561
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11562
  %307 = load i32, i32* %306, align 4, !dbg !11562
  %308 = shl i32 %307, 24, !dbg !11563
  %309 = icmp eq i32 %305, %308, !dbg !11564
  br i1 %309, label %310, label %311, !dbg !11565

310:                                              ; preds = %269, %261, %304, %221
  br label %311, !dbg !11566

311:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %277, %86, %25, %1, %310
  %312 = phi i32 [ 0, %310 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !11252
  ret i32 %312, !dbg !11567
}

; Function Attrs: optsize
declare !dbg !11568 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !11570 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !11583, metadata !DIExpression()), !dbg !11586
  call void @llvm.dbg.value(metadata i32 %1, metadata !11584, metadata !DIExpression()), !dbg !11586
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !11587
  br i1 %3, label %115, label %4, !dbg !11589

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11590
  %6 = and i32 %5, 7, !dbg !11590
  %7 = icmp ult i32 %6, %1, !dbg !11592
  br i1 %7, label %8, label %13, !dbg !11593

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !11594
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !11594
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11596
  %11 = and i32 %10, 7, !dbg !11596
  %12 = icmp eq i32 %11, %1, !dbg !11598
  br i1 %12, label %13, label %115, !dbg !11599

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !11600
  %15 = load i32, i32* %14, align 4, !dbg !11600
  %16 = and i32 %15, 2, !dbg !11602
  %17 = icmp eq i32 %16, 0, !dbg !11603
  br i1 %17, label %39, label %18, !dbg !11604

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !11605
  %20 = icmp eq i32 %19, 0, !dbg !11608
  br i1 %20, label %25, label %21, !dbg !11609

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11610
  %23 = or i32 %22, 7168, !dbg !11610
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11610
  %24 = load i32, i32* %14, align 4, !dbg !11612
  br label %25, !dbg !11614

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !11612
  %27 = and i32 %26, 8, !dbg !11615
  %28 = icmp eq i32 %27, 0, !dbg !11616
  br i1 %28, label %32, label %29, !dbg !11617

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11618
  %31 = or i32 %30, 57344, !dbg !11618
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11618
  br label %32, !dbg !11620

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11621
  %34 = and i32 %33, -241, !dbg !11621
  %35 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !11621
  %36 = load i32, i32* %35, align 4, !dbg !11621
  %37 = or i32 %34, %36, !dbg !11621
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11621
  %38 = load i32, i32* %14, align 4, !dbg !11622
  br label %39, !dbg !11624

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !11622
  %41 = and i32 %40, 1, !dbg !11625
  %42 = icmp eq i32 %41, 0, !dbg !11626
  br i1 %42, label %73, label %43, !dbg !11627

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !11628
  %45 = load i32, i32* %44, align 4, !dbg !11628
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !11631

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11632
  %48 = and i32 %47, 131072, !dbg !11635
  %49 = icmp eq i32 %48, 0, !dbg !11635
  br i1 %49, label %115, label %58, !dbg !11636

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11637
  %52 = and i32 %51, 33554432, !dbg !11641
  %53 = icmp eq i32 %52, 0, !dbg !11641
  br i1 %53, label %115, label %58, !dbg !11642

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11643
  %56 = and i32 %55, 2, !dbg !11646
  %57 = icmp eq i32 %56, 0, !dbg !11646
  br i1 %57, label %115, label %58, !dbg !11647

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11648
  %60 = and i32 %59, -4, !dbg !11648
  %61 = or i32 %60, %45, !dbg !11648
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11648
  %62 = tail call i32 @HAL_GetTick() #26, !dbg !11649
  call void @llvm.dbg.value(metadata i32 %62, metadata !11585, metadata !DIExpression()), !dbg !11586
  br label %63, !dbg !11650

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11651
  %65 = and i32 %64, 12, !dbg !11651
  %66 = load i32, i32* %44, align 4, !dbg !11652
  %67 = shl i32 %66, 2, !dbg !11653
  %68 = icmp eq i32 %65, %67, !dbg !11654
  br i1 %68, label %73, label %69, !dbg !11650

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #26, !dbg !11655
  %71 = sub i32 %70, %62, !dbg !11658
  %72 = icmp ugt i32 %71, 5000, !dbg !11659
  br i1 %72, label %115, label %63, !dbg !11660, !llvm.loop !11661

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11663
  %75 = and i32 %74, 7, !dbg !11663
  %76 = icmp ugt i32 %75, %1, !dbg !11665
  br i1 %76, label %77, label %82, !dbg !11666

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !11667
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !11667
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11669
  %80 = and i32 %79, 7, !dbg !11669
  %81 = icmp eq i32 %80, %1, !dbg !11671
  br i1 %81, label %82, label %115, !dbg !11672

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !11673
  %84 = and i32 %83, 4, !dbg !11675
  %85 = icmp eq i32 %84, 0, !dbg !11676
  br i1 %85, label %93, label %86, !dbg !11677

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11678
  %88 = and i32 %87, -7169, !dbg !11678
  %89 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !11678
  %90 = load i32, i32* %89, align 4, !dbg !11678
  %91 = or i32 %88, %90, !dbg !11678
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11678
  %92 = load i32, i32* %14, align 4, !dbg !11680
  br label %93, !dbg !11682

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !11680
  %95 = and i32 %94, 8, !dbg !11683
  %96 = icmp eq i32 %95, 0, !dbg !11684
  br i1 %96, label %104, label %97, !dbg !11685

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11686
  %99 = and i32 %98, -57345, !dbg !11686
  %100 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !11686
  %101 = load i32, i32* %100, align 4, !dbg !11686
  %102 = shl i32 %101, 3, !dbg !11686
  %103 = or i32 %102, %99, !dbg !11686
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11686
  br label %104, !dbg !11688

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #27, !dbg !11689
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11690
  %107 = lshr i32 %106, 4, !dbg !11691
  %108 = and i32 %107, 15, !dbg !11691
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !11692
  %110 = load i8, i8* %109, align 1, !dbg !11692
  %111 = zext i8 %110 to i32, !dbg !11692
  %112 = lshr i32 %105, %111, !dbg !11693
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !11694
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !11695
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #26, !dbg !11696
  br label %115, !dbg !11697

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !11586
  ret i32 %116, !dbg !11698
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !11699 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11701, metadata !DIExpression()), !dbg !11705
  call void @llvm.dbg.value(metadata i32 0, metadata !11702, metadata !DIExpression()), !dbg !11705
  call void @llvm.dbg.value(metadata i32 0, metadata !11703, metadata !DIExpression()), !dbg !11705
  call void @llvm.dbg.value(metadata i32 0, metadata !11704, metadata !DIExpression()), !dbg !11705
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11706
  %2 = and i32 %1, 12, !dbg !11707
  %3 = icmp eq i32 %2, 8, !dbg !11708
  br i1 %3, label %4, label %21, !dbg !11708

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11709
  %6 = and i32 %5, 63, !dbg !11712
  call void @llvm.dbg.value(metadata i32 %6, metadata !11701, metadata !DIExpression()), !dbg !11705
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11713
  %8 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11715
  %9 = lshr i32 %8, 6, !dbg !11715
  %10 = and i32 %9, 511, !dbg !11715
  %11 = zext i32 %10 to i64, !dbg !11715
  %12 = mul nuw nsw i64 %11, 16000000, !dbg !11715
  %13 = zext i32 %6 to i64, !dbg !11715
  %14 = udiv i64 %12, %13, !dbg !11715
  %15 = trunc i64 %14 to i32, !dbg !11715
  call void @llvm.dbg.value(metadata i32 %15, metadata !11702, metadata !DIExpression()), !dbg !11705
  call void @llvm.dbg.value(metadata i32 %15, metadata !11702, metadata !DIExpression()), !dbg !11705
  call void @llvm.dbg.value(metadata i32 %15, metadata !11702, metadata !DIExpression()), !dbg !11705
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11716
  %17 = lshr i32 %16, 15, !dbg !11717
  %18 = and i32 %17, 6, !dbg !11717
  %19 = add nuw nsw i32 %18, 2, !dbg !11717
  call void @llvm.dbg.value(metadata i32 %19, metadata !11703, metadata !DIExpression()), !dbg !11705
  %20 = udiv i32 %15, %19, !dbg !11718
  call void @llvm.dbg.value(metadata i32 %20, metadata !11704, metadata !DIExpression()), !dbg !11705
  br label %21, !dbg !11719

21:                                               ; preds = %0, %4
  %22 = phi i32 [ %20, %4 ], [ 16000000, %0 ], !dbg !11720
  call void @llvm.dbg.value(metadata i32 %22, metadata !11704, metadata !DIExpression()), !dbg !11705
  ret i32 %22, !dbg !11721
}

; Function Attrs: optsize
declare !dbg !11722 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11725 {
  %4 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11729, metadata !DIExpression()), !dbg !11749
  call void @llvm.dbg.value(metadata i32 %1, metadata !11730, metadata !DIExpression()), !dbg !11749
  call void @llvm.dbg.value(metadata i32 %2, metadata !11731, metadata !DIExpression()), !dbg !11749
  %7 = bitcast %struct.RCC_ClkInitTypeDef* %4 to i8*, !dbg !11750
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #25, !dbg !11750
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %4, metadata !11732, metadata !DIExpression()), !dbg !11751
  %8 = icmp eq i32 %0, 0, !dbg !11752
  br i1 %8, label %9, label %23, !dbg !11753

9:                                                ; preds = %3
  %10 = bitcast i32* %5 to i8*, !dbg !11754
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10), !dbg !11754
  call void @llvm.dbg.declare(metadata i32* %5, metadata !11742, metadata !DIExpression()), !dbg !11754
  store volatile i32 0, i32* %5, align 4, !dbg !11754
  %11 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11754
  %12 = or i32 %11, 1, !dbg !11754
  store volatile i32 %12, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11754
  %13 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11754
  %14 = and i32 %13, 1, !dbg !11754
  store volatile i32 %14, i32* %5, align 4, !dbg !11754
  %15 = load volatile i32, i32* %5, align 4, !dbg !11754
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10), !dbg !11755
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !11756
  store i32 256, i32* %16, align 4, !dbg !11757
  %17 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !11758
  store i32 2, i32* %17, align 4, !dbg !11759
  %18 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !11760
  store i32 3, i32* %18, align 4, !dbg !11761
  %19 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !11762
  store i32 0, i32* %19, align 4, !dbg !11763
  %20 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !11764
  store i32 0, i32* %20, align 4, !dbg !11765
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #26, !dbg !11766
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11767
  %22 = and i32 %21, -123731969, !dbg !11767
  br label %38, !dbg !11768

23:                                               ; preds = %3
  %24 = bitcast i32* %6 to i8*, !dbg !11769
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24), !dbg !11769
  call void @llvm.dbg.declare(metadata i32* %6, metadata !11746, metadata !DIExpression()), !dbg !11769
  store volatile i32 0, i32* %6, align 4, !dbg !11769
  %25 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11769
  %26 = or i32 %25, 4, !dbg !11769
  store volatile i32 %26, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11769
  %27 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11769
  %28 = and i32 %27, 4, !dbg !11769
  store volatile i32 %28, i32* %6, align 4, !dbg !11769
  %29 = load volatile i32, i32* %6, align 4, !dbg !11769
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24), !dbg !11770
  %30 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !11771
  store i32 512, i32* %30, align 4, !dbg !11772
  %31 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !11773
  store i32 2, i32* %31, align 4, !dbg !11774
  %32 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !11775
  store i32 3, i32* %32, align 4, !dbg !11776
  %33 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !11777
  store i32 0, i32* %33, align 4, !dbg !11778
  %34 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !11779
  store i32 0, i32* %34, align 4, !dbg !11780
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073874944 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #26, !dbg !11781
  %35 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11782
  %36 = and i32 %35, 134217727, !dbg !11782
  %37 = shl i32 %2, 3, !dbg !11782
  br label %38

38:                                               ; preds = %23, %9
  %39 = phi i32 [ %37, %23 ], [ %2, %9 ]
  %40 = phi i32 [ %36, %23 ], [ %22, %9 ]
  %41 = or i32 %39, %1, !dbg !11783
  %42 = or i32 %41, %40, !dbg !11783
  store volatile i32 %42, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11783
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #25, !dbg !11784
  ret void, !dbg !11784
}

; Function Attrs: optsize
declare !dbg !11785 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.RCC_ClkInitTypeDef* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #15 !dbg !11789 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !11790
  ret void, !dbg !11791
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #15 !dbg !11792 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !11793
  ret void, !dbg !11794
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #5 !dbg !11795 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !11796
  ret i32 %1, !dbg !11797
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #16 !dbg !11798 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #27, !dbg !11799
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11800
  %3 = lshr i32 %2, 10, !dbg !11801
  %4 = and i32 %3, 7, !dbg !11801
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11802
  %6 = load i8, i8* %5, align 1, !dbg !11802
  %7 = zext i8 %6 to i32, !dbg !11802
  %8 = lshr i32 %1, %7, !dbg !11803
  ret i32 %8, !dbg !11804
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #16 !dbg !11805 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #27, !dbg !11806
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11807
  %3 = lshr i32 %2, 13, !dbg !11808
  %4 = and i32 %3, 7, !dbg !11808
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11809
  %6 = load i8, i8* %5, align 1, !dbg !11809
  %7 = zext i8 %6 to i32, !dbg !11809
  %8 = lshr i32 %1, %7, !dbg !11810
  ret i32 %8, !dbg !11811
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !11812 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11816, metadata !DIExpression()), !dbg !11817
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11818
  store i32 15, i32* %2, align 4, !dbg !11819
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11820
  %4 = and i32 %3, 262144, !dbg !11822
  %5 = icmp eq i32 %4, 0, !dbg !11823
  br i1 %5, label %8, label %6, !dbg !11824

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11825
  store i32 327680, i32* %7, align 4, !dbg !11827
  br label %15, !dbg !11828

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11829
  %10 = and i32 %9, 65536, !dbg !11831
  %11 = icmp eq i32 %10, 0, !dbg !11832
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11833
  br i1 %11, label %14, label %13, !dbg !11834

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !11835
  br label %15, !dbg !11837

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !11838
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11840
  %17 = and i32 %16, 1, !dbg !11842
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11843
  store i32 %17, i32* %18, align 4, !dbg !11845
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11846
  %20 = lshr i32 %19, 3, !dbg !11847
  %21 = and i32 %20, 31, !dbg !11847
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !11848
  store i32 %21, i32* %22, align 4, !dbg !11849
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11850
  %24 = and i32 %23, 4, !dbg !11852
  %25 = icmp eq i32 %24, 0, !dbg !11853
  br i1 %25, label %28, label %26, !dbg !11854

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11855
  store i32 5, i32* %27, align 4, !dbg !11857
  br label %35, !dbg !11858

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11859
  %30 = and i32 %29, 1, !dbg !11861
  %31 = icmp eq i32 %30, 0, !dbg !11862
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11863
  br i1 %31, label %34, label %33, !dbg !11864

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !11865
  br label %35, !dbg !11867

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !11868
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11870
  %37 = and i32 %36, 1, !dbg !11872
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !11873
  store i32 %37, i32* %38, align 4, !dbg !11875
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11876
  %40 = and i32 %39, 16777216, !dbg !11878
  %41 = icmp eq i32 %40, 0, !dbg !11879
  %42 = select i1 %41, i32 1, i32 2, !dbg !11880
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !11881
  store i32 %42, i32* %43, align 4, !dbg !11883
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11884
  %45 = and i32 %44, 4194304, !dbg !11885
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11886
  store i32 %45, i32* %46, align 4, !dbg !11887
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11888
  %48 = and i32 %47, 63, !dbg !11889
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11890
  store i32 %48, i32* %49, align 4, !dbg !11891
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11892
  %51 = lshr i32 %50, 6, !dbg !11893
  %52 = and i32 %51, 511, !dbg !11893
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11894
  store i32 %52, i32* %53, align 4, !dbg !11895
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11896
  %55 = shl i32 %54, 1, !dbg !11897
  %56 = and i32 %55, 393216, !dbg !11897
  %57 = add nuw nsw i32 %56, 131072, !dbg !11897
  %58 = lshr exact i32 %57, 16, !dbg !11898
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11899
  store i32 %58, i32* %59, align 4, !dbg !11900
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11901
  %61 = lshr i32 %60, 24, !dbg !11902
  %62 = and i32 %61, 15, !dbg !11902
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11903
  store i32 %62, i32* %63, align 4, !dbg !11904
  ret void, !dbg !11905
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #16 !dbg !11906 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !11910, metadata !DIExpression()), !dbg !11912
  call void @llvm.dbg.value(metadata i32* %1, metadata !11911, metadata !DIExpression()), !dbg !11912
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !11913
  store i32 15, i32* %3, align 4, !dbg !11914
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11915
  %5 = and i32 %4, 3, !dbg !11916
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !11917
  store i32 %5, i32* %6, align 4, !dbg !11918
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11919
  %8 = and i32 %7, 240, !dbg !11920
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !11921
  store i32 %8, i32* %9, align 4, !dbg !11922
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11923
  %11 = and i32 %10, 7168, !dbg !11924
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !11925
  store i32 %11, i32* %12, align 4, !dbg !11926
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11927
  %14 = lshr i32 %13, 3, !dbg !11928
  %15 = and i32 %14, 7168, !dbg !11928
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !11929
  store i32 %15, i32* %16, align 4, !dbg !11930
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11931
  %18 = and i32 %17, 7, !dbg !11932
  store i32 %18, i32* %1, align 4, !dbg !11933
  ret void, !dbg !11934
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !11935 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11936
  %2 = and i32 %1, 128, !dbg !11936
  %3 = icmp eq i32 %2, 0, !dbg !11936
  br i1 %3, label %5, label %4, !dbg !11938

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #27, !dbg !11939
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !11941
  br label %5, !dbg !11942

5:                                                ; preds = %4, %0
  ret void, !dbg !11943
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !11944 {
  ret void, !dbg !11945
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #15 !dbg !11946 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11949, metadata !DIExpression()), !dbg !11950
  tail call fastcc void @LL_InitTick(i32 noundef %0) #27, !dbg !11951
  ret void, !dbg !11952
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #15 !dbg !11953 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11956, metadata !DIExpression()), !dbg !11958
  call void @llvm.dbg.value(metadata i32 1000, metadata !11957, metadata !DIExpression()), !dbg !11958
  %2 = udiv i32 %0, 1000, !dbg !11959
  %3 = add nsw i32 %2, -1, !dbg !11960
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11961
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11962
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11963
  ret void, !dbg !11964
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #17 !dbg !11965 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11967, metadata !DIExpression()), !dbg !11969
  %3 = bitcast i32* %2 to i8*, !dbg !11970
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11970
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11968, metadata !DIExpression()), !dbg !11971
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11972
  store volatile i32 %4, i32* %2, align 4, !dbg !11971
  %5 = load volatile i32, i32* %2, align 4, !dbg !11973
  %6 = icmp eq i32 %0, -1, !dbg !11974
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !11967, metadata !DIExpression()), !dbg !11969
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !11969
  call void @llvm.dbg.value(metadata i32 %8, metadata !11967, metadata !DIExpression()), !dbg !11969
  br label %9, !dbg !11976

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11967, metadata !DIExpression()), !dbg !11969
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11977
  call void @llvm.dbg.value(metadata i32 undef, metadata !11967, metadata !DIExpression()), !dbg !11969
  %12 = shl i32 %11, 15, !dbg !11969
  %13 = ashr i32 %12, 31, !dbg !11969
  %14 = add i32 %13, %10, !dbg !11969
  call void @llvm.dbg.value(metadata i32 %14, metadata !11967, metadata !DIExpression()), !dbg !11969
  %15 = icmp eq i32 %14, 0, !dbg !11976
  br i1 %15, label %16, label %9, !dbg !11976

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11980
  ret void, !dbg !11980
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #4 !dbg !11981 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11983, metadata !DIExpression()), !dbg !11984
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !11985
  ret void, !dbg !11986
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #15 !dbg !11987 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11992, metadata !DIExpression()), !dbg !11997
  call void @llvm.dbg.value(metadata i32 0, metadata !11995, metadata !DIExpression()), !dbg !11997
  call void @llvm.dbg.value(metadata i32 0, metadata !11996, metadata !DIExpression()), !dbg !11997
  %2 = icmp eq i32 %0, 0, !dbg !11998
  br i1 %2, label %35, label %3, !dbg !12000

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #27, !dbg !12001
  %5 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #27, !dbg !12004
  %6 = icmp eq i32 %5, 32768, !dbg !12006
  br i1 %6, label %7, label %12, !dbg !12007

7:                                                ; preds = %3
  %8 = icmp ugt i32 %0, 60000000, !dbg !12008
  br i1 %8, label %12, label %9, !dbg !12011

9:                                                ; preds = %7
  %10 = icmp ugt i32 %0, 30000000, !dbg !12012
  %11 = zext i1 %10 to i32, !dbg !12015
  call void @llvm.dbg.value(metadata i32 %11, metadata !11995, metadata !DIExpression()), !dbg !11997
  br label %12, !dbg !12015

12:                                               ; preds = %7, %9, %3
  %13 = phi i32 [ %11, %9 ], [ 0, %3 ], [ 2, %7 ], !dbg !11997
  call void @llvm.dbg.value(metadata i32 %13, metadata !11995, metadata !DIExpression()), !dbg !11997
  %14 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #27, !dbg !12016
  %15 = icmp eq i32 %14, 16384, !dbg !12018
  br i1 %15, label %16, label %24, !dbg !12019

16:                                               ; preds = %12
  %17 = icmp ugt i32 %0, 60000000, !dbg !12020
  %18 = icmp eq i32 %13, 0
  %19 = and i1 %17, %18, !dbg !12023
  br i1 %19, label %24, label %20, !dbg !12023

20:                                               ; preds = %16
  %21 = icmp ugt i32 %0, 30000000, !dbg !12024
  %22 = and i1 %21, %18, !dbg !12027
  %23 = select i1 %22, i32 1, i32 %13, !dbg !12027
  call void @llvm.dbg.value(metadata i32 %23, metadata !11995, metadata !DIExpression()), !dbg !11997
  br label %24, !dbg !12027

24:                                               ; preds = %16, %20, %12
  %25 = phi i32 [ %23, %20 ], [ %13, %12 ], [ 2, %16 ], !dbg !12028
  call void @llvm.dbg.value(metadata i32 %25, metadata !11995, metadata !DIExpression()), !dbg !11997
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %25) #27, !dbg !12029
  call void @llvm.dbg.value(metadata i32 2, metadata !11993, metadata !DIExpression()), !dbg !11997
  br label %26, !dbg !12030

26:                                               ; preds = %26, %24
  %27 = phi i32 [ 2, %24 ], [ %29, %26 ], !dbg !12028
  call void @llvm.dbg.value(metadata i32 %27, metadata !11993, metadata !DIExpression()), !dbg !11997
  %28 = tail call fastcc i32 @LL_FLASH_GetLatency() #27, !dbg !12031
  call void @llvm.dbg.value(metadata i32 %28, metadata !11994, metadata !DIExpression()), !dbg !11997
  %29 = add nsw i32 %27, -1, !dbg !12033
  call void @llvm.dbg.value(metadata i32 %29, metadata !11993, metadata !DIExpression()), !dbg !11997
  %30 = icmp ne i32 %28, %25, !dbg !12034
  %31 = icmp ne i32 %29, 0, !dbg !12035
  %32 = select i1 %30, i1 %31, i1 false, !dbg !12035
  br i1 %32, label %26, label %33, !dbg !12036, !llvm.loop !12037

33:                                               ; preds = %26
  %34 = zext i1 %30 to i32
  br label %35

35:                                               ; preds = %33, %1
  %36 = phi i32 [ 1, %1 ], [ %34, %33 ], !dbg !12039
  call void @llvm.dbg.value(metadata i32 %36, metadata !11996, metadata !DIExpression()), !dbg !11997
  ret i32 %36, !dbg !12040
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #16 !dbg !12041 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12043
  %2 = and i32 %1, 49152, !dbg !12043
  ret i32 %2, !dbg !12044
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #15 !dbg !12045 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12047, metadata !DIExpression()), !dbg !12048
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12049
  %3 = and i32 %2, -8, !dbg !12049
  %4 = or i32 %3, %0, !dbg !12049
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12049
  ret void, !dbg !12050
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #16 !dbg !12051 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12052
  %2 = and i32 %1, 7, !dbg !12052
  ret i32 %2, !dbg !12053
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !12054 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !12072, metadata !DIExpression()), !dbg !12076
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12073, metadata !DIExpression()), !dbg !12076
  call void @llvm.dbg.value(metadata i32 0, metadata !12074, metadata !DIExpression()), !dbg !12076
  call void @llvm.dbg.value(metadata i32 0, metadata !12075, metadata !DIExpression()), !dbg !12076
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #27, !dbg !12077
  %4 = icmp eq i32 %3, 0, !dbg !12079
  br i1 %4, label %5, label %21, !dbg !12080

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #27, !dbg !12081
  call void @llvm.dbg.value(metadata i32 %6, metadata !12075, metadata !DIExpression()), !dbg !12076
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.86() #27, !dbg !12083
  %8 = icmp eq i32 %7, 1, !dbg !12085
  br i1 %8, label %13, label %9, !dbg !12086

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.87() #27, !dbg !12087
  br label %10, !dbg !12089

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.86() #27, !dbg !12090
  %12 = icmp eq i32 %11, 1, !dbg !12091
  br i1 %12, label %13, label %10, !dbg !12089, !llvm.loop !12092

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !12094
  %15 = load i32, i32* %14, align 4, !dbg !12094
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !12095
  %17 = load i32, i32* %16, align 4, !dbg !12095
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !12096
  %19 = load i32, i32* %18, align 4, !dbg !12096
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.88(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #27, !dbg !12097
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #27, !dbg !12098
  call void @llvm.dbg.value(metadata i32 %20, metadata !12074, metadata !DIExpression()), !dbg !12076
  br label %21, !dbg !12099

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !12100
  call void @llvm.dbg.value(metadata i32 %22, metadata !12074, metadata !DIExpression()), !dbg !12076
  ret i32 %22, !dbg !12101
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #16 !dbg !12102 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12106, metadata !DIExpression()), !dbg !12107
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.90() #27, !dbg !12108
  %2 = icmp ne i32 %1, 0, !dbg !12110
  call void @llvm.dbg.value(metadata i1 %2, metadata !12106, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12107
  %3 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #27, !dbg !12111
  %4 = icmp ne i32 %3, 0, !dbg !12113
  %5 = select i1 %4, i1 true, i1 %2, !dbg !12114
  %6 = zext i1 %5 to i32, !dbg !12114
  call void @llvm.dbg.value(metadata i32 %6, metadata !12106, metadata !DIExpression()), !dbg !12107
  ret i32 %6, !dbg !12115
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #5 !dbg !12116 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12120, metadata !DIExpression()), !dbg !12123
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12121, metadata !DIExpression()), !dbg !12123
  call void @llvm.dbg.value(metadata i32 0, metadata !12122, metadata !DIExpression()), !dbg !12123
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !12124
  %4 = load i32, i32* %3, align 4, !dbg !12124
  %5 = and i32 %4, 63, !dbg !12125
  %6 = udiv i32 %0, %5, !dbg !12126
  call void @llvm.dbg.value(metadata i32 %6, metadata !12122, metadata !DIExpression()), !dbg !12123
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !12127
  %8 = load i32, i32* %7, align 4, !dbg !12127
  %9 = and i32 %8, 511, !dbg !12128
  %10 = mul i32 %9, %6, !dbg !12129
  call void @llvm.dbg.value(metadata i32 %10, metadata !12122, metadata !DIExpression()), !dbg !12123
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !12130
  %12 = load i32, i32* %11, align 4, !dbg !12130
  %13 = lshr i32 %12, 15, !dbg !12131
  %14 = and i32 %13, 131070, !dbg !12131
  %15 = add nuw nsw i32 %14, 2, !dbg !12131
  %16 = udiv i32 %10, %15, !dbg !12132
  call void @llvm.dbg.value(metadata i32 %16, metadata !12122, metadata !DIExpression()), !dbg !12123
  ret i32 %16, !dbg !12133
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.86() unnamed_addr #16 !dbg !12134 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12135
  %2 = lshr i32 %1, 1, !dbg !12136
  %3 = and i32 %2, 1, !dbg !12136
  ret i32 %3, !dbg !12137
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.87() unnamed_addr #15 !dbg !12138 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12139
  %2 = or i32 %1, 1, !dbg !12139
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12139
  ret void, !dbg !12140
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.88(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #15 !dbg !12141 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12143, metadata !DIExpression()), !dbg !12147
  call void @llvm.dbg.value(metadata i32 %1, metadata !12144, metadata !DIExpression()), !dbg !12147
  call void @llvm.dbg.value(metadata i32 %2, metadata !12145, metadata !DIExpression()), !dbg !12147
  call void @llvm.dbg.value(metadata i32 %3, metadata !12146, metadata !DIExpression()), !dbg !12147
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12148
  %6 = and i32 %5, -4227072, !dbg !12148
  %7 = or i32 %1, %0, !dbg !12148
  %8 = shl i32 %2, 6, !dbg !12148
  %9 = or i32 %7, %8, !dbg !12148
  %10 = or i32 %9, %6, !dbg !12148
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12148
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12149
  %12 = and i32 %11, -196609, !dbg !12149
  %13 = or i32 %12, %3, !dbg !12149
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12149
  ret void, !dbg !12150
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #15 !dbg !12151 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12155, metadata !DIExpression()), !dbg !12159
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12156, metadata !DIExpression()), !dbg !12159
  call void @llvm.dbg.value(metadata i32 0, metadata !12157, metadata !DIExpression()), !dbg !12159
  call void @llvm.dbg.value(metadata i32 0, metadata !12158, metadata !DIExpression()), !dbg !12159
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !12160
  %4 = load i32, i32* %3, align 4, !dbg !12160
  %5 = lshr i32 %4, 4, !dbg !12160
  %6 = and i32 %5, 15, !dbg !12160
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !12160
  %8 = load i8, i8* %7, align 1, !dbg !12160
  %9 = zext i8 %8 to i32, !dbg !12160
  %10 = lshr i32 %0, %9, !dbg !12160
  call void @llvm.dbg.value(metadata i32 %10, metadata !12158, metadata !DIExpression()), !dbg !12159
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !12161
  %12 = icmp ult i32 %11, %10, !dbg !12163
  br i1 %12, label %13, label %16, !dbg !12164

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #27, !dbg !12165
  call void @llvm.dbg.value(metadata i32 %14, metadata !12157, metadata !DIExpression()), !dbg !12159
  %15 = icmp eq i32 %14, 0, !dbg !12167
  br i1 %15, label %16, label %30, !dbg !12169

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.89() #27, !dbg !12170
  br label %17, !dbg !12172

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.90() #27, !dbg !12173
  %19 = icmp eq i32 %18, 1, !dbg !12174
  br i1 %19, label %20, label %17, !dbg !12172, !llvm.loop !12175

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !12177
  tail call fastcc void @LL_RCC_SetAHBPrescaler.91(i32 noundef %21) #27, !dbg !12178
  tail call fastcc void @LL_RCC_SetSysClkSource.92() #27, !dbg !12179
  br label %22, !dbg !12180

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.93() #27, !dbg !12181
  %24 = icmp eq i32 %23, 8, !dbg !12182
  br i1 %24, label %25, label %22, !dbg !12180, !llvm.loop !12183

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !12185
  %27 = load i32, i32* %26, align 4, !dbg !12185
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.94(i32 noundef %27) #27, !dbg !12186
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !12187
  %29 = load i32, i32* %28, align 4, !dbg !12187
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.95(i32 noundef %29) #27, !dbg !12188
  br label %30, !dbg !12189

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !12190
  %33 = icmp ugt i32 %32, %10, !dbg !12192
  br i1 %33, label %34, label %36, !dbg !12193

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #27, !dbg !12194
  call void @llvm.dbg.value(metadata i32 %35, metadata !12157, metadata !DIExpression()), !dbg !12159
  br label %36, !dbg !12196

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !12159
  call void @llvm.dbg.value(metadata i32 %37, metadata !12157, metadata !DIExpression()), !dbg !12159
  %38 = icmp eq i32 %37, 0, !dbg !12197
  br i1 %38, label %39, label %40, !dbg !12199

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #27, !dbg !12200
  br label %40, !dbg !12202

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !12203
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.89() unnamed_addr #15 !dbg !12204 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12205
  %2 = or i32 %1, 16777216, !dbg !12205
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12205
  ret void, !dbg !12206
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.90() unnamed_addr #16 !dbg !12207 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12208
  %2 = lshr i32 %1, 25, !dbg !12209
  %3 = and i32 %2, 1, !dbg !12209
  ret i32 %3, !dbg !12210
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.91(i32 noundef %0) unnamed_addr #15 !dbg !12211 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12213, metadata !DIExpression()), !dbg !12214
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12215
  %3 = and i32 %2, -241, !dbg !12215
  %4 = or i32 %3, %0, !dbg !12215
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12215
  ret void, !dbg !12216
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.92() unnamed_addr #15 !dbg !12217 {
  call void @llvm.dbg.value(metadata i32 2, metadata !12219, metadata !DIExpression()), !dbg !12220
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12221
  %2 = and i32 %1, -4, !dbg !12221
  %3 = or i32 %2, 2, !dbg !12221
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12221
  ret void, !dbg !12222
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.93() unnamed_addr #16 !dbg !12223 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12224
  %2 = and i32 %1, 12, !dbg !12224
  ret i32 %2, !dbg !12225
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.94(i32 noundef %0) unnamed_addr #15 !dbg !12226 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12228, metadata !DIExpression()), !dbg !12229
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12230
  %3 = and i32 %2, -7169, !dbg !12230
  %4 = or i32 %3, %0, !dbg !12230
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12230
  ret void, !dbg !12231
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.95(i32 noundef %0) unnamed_addr #15 !dbg !12232 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12234, metadata !DIExpression()), !dbg !12235
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12236
  %3 = and i32 %2, -57345, !dbg !12236
  %4 = or i32 %3, %0, !dbg !12236
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12236
  ret void, !dbg !12237
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #16 !dbg !12238 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12239
  %2 = lshr i32 %1, 27, !dbg !12240
  %3 = and i32 %2, 1, !dbg !12240
  ret i32 %3, !dbg !12241
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #15 !dbg !12242 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12246, metadata !DIExpression()), !dbg !12252
  call void @llvm.dbg.value(metadata i32 %1, metadata !12247, metadata !DIExpression()), !dbg !12252
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !12248, metadata !DIExpression()), !dbg !12252
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !12249, metadata !DIExpression()), !dbg !12252
  call void @llvm.dbg.value(metadata i32 0, metadata !12250, metadata !DIExpression()), !dbg !12252
  call void @llvm.dbg.value(metadata i32 0, metadata !12251, metadata !DIExpression()), !dbg !12252
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #27, !dbg !12253
  %6 = icmp eq i32 %5, 0, !dbg !12255
  br i1 %6, label %7, label %27, !dbg !12256

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #27, !dbg !12257
  call void @llvm.dbg.value(metadata i32 %8, metadata !12251, metadata !DIExpression()), !dbg !12252
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.96() #27, !dbg !12259
  %10 = icmp eq i32 %9, 1, !dbg !12261
  br i1 %10, label %19, label %11, !dbg !12262

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !12263
  br i1 %12, label %13, label %14, !dbg !12266

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #27, !dbg !12267
  br label %15, !dbg !12269

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.97() #27, !dbg !12270
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.98() #27, !dbg !12272
  br label %16, !dbg !12273

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.96() #27, !dbg !12274
  %18 = icmp eq i32 %17, 1, !dbg !12275
  br i1 %18, label %19, label %16, !dbg !12273, !llvm.loop !12276

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !12278
  %21 = load i32, i32* %20, align 4, !dbg !12278
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !12279
  %23 = load i32, i32* %22, align 4, !dbg !12279
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !12280
  %25 = load i32, i32* %24, align 4, !dbg !12280
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.88(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #27, !dbg !12281
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #27, !dbg !12282
  call void @llvm.dbg.value(metadata i32 %26, metadata !12250, metadata !DIExpression()), !dbg !12252
  br label %27, !dbg !12283

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !12284
  call void @llvm.dbg.value(metadata i32 %28, metadata !12250, metadata !DIExpression()), !dbg !12252
  ret i32 %28, !dbg !12285
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.96() unnamed_addr #16 !dbg !12286 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12287
  %2 = lshr i32 %1, 17, !dbg !12288
  %3 = and i32 %2, 1, !dbg !12288
  ret i32 %3, !dbg !12289
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #15 !dbg !12290 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12291
  %2 = or i32 %1, 262144, !dbg !12291
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12291
  ret void, !dbg !12292
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.97() unnamed_addr #15 !dbg !12293 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12294
  %2 = and i32 %1, -262145, !dbg !12294
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12294
  ret void, !dbg !12295
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.98() unnamed_addr #15 !dbg !12296 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12297
  %2 = or i32 %1, 65536, !dbg !12297
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12297
  ret void, !dbg !12298
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #22 !dbg !12299 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12302, metadata !DIExpression()), !dbg !12318
  call void @llvm.dbg.value(metadata i32 undef, metadata !12302, metadata !DIExpression()), !dbg !12318
  call void @llvm.dbg.value(metadata i32 undef, metadata !12302, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !12318
  ret void, !dbg !12319
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !12320 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12324, metadata !DIExpression()), !dbg !12326
  %2 = icmp eq i8* %0, null, !dbg !12327
  br i1 %2, label %29, label %3, !dbg !12329

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !12330
  %5 = icmp eq i8 %4, 0, !dbg !12331
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !12332
  br i1 %6, label %29, label %8, !dbg !12332

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12325, metadata !DIExpression()), !dbg !12326
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !12333

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !12325, metadata !DIExpression()), !dbg !12326
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #27, !dbg !12335
  br i1 %10, label %11, label %15, !dbg !12340

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !12341
  %13 = load i8*, i8** %12, align 4, !dbg !12341
  %14 = icmp eq i8* %13, %0, !dbg !12342
  br i1 %14, label %29, label %15, !dbg !12343

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !12344
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !12325, metadata !DIExpression()), !dbg !12326
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !12345
  br i1 %17, label %7, label %8, !dbg !12346, !llvm.loop !12347

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !12325, metadata !DIExpression()), !dbg !12326
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #27, !dbg !12349
  br i1 %20, label %21, label %26, !dbg !12353

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !12354
  %23 = load i8*, i8** %22, align 4, !dbg !12354
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #26, !dbg !12355
  %25 = icmp eq i32 %24, 0, !dbg !12356
  br i1 %25, label %29, label %26, !dbg !12357

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !12358
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !12325, metadata !DIExpression()), !dbg !12326
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !12359
  br i1 %28, label %29, label %18, !dbg !12333, !llvm.loop !12360

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !12326
  ret %struct.device* %30, !dbg !12362
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #5 !dbg !12363 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12367, metadata !DIExpression()), !dbg !12368
  %2 = icmp eq %struct.device* %0, null, !dbg !12369
  br i1 %2, label %14, label %3, !dbg !12371

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !12372
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !12372
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !12373
  %7 = load i8, i8* %6, align 1, !dbg !12373
  %8 = and i8 %7, 1, !dbg !12373
  %9 = icmp eq i8 %8, 0, !dbg !12373
  br i1 %9, label %14, label %10, !dbg !12374

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !12375
  %12 = load i8, i8* %11, align 1, !dbg !12375
  %13 = icmp eq i8 %12, 0, !dbg !12376
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !12368
  ret i1 %15, !dbg !12377
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #4 !dbg !12378 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !12383, metadata !DIExpression()), !dbg !12384
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !12385
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !12386
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !12387 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12395, metadata !DIExpression()), !dbg !12400
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !12396, metadata !DIExpression()), !dbg !12400
  call void @llvm.dbg.value(metadata i8* %2, metadata !12397, metadata !DIExpression()), !dbg !12400
  %5 = bitcast i32* %4 to i8*, !dbg !12401
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !12401
  call void @llvm.dbg.value(metadata i32 0, metadata !12398, metadata !DIExpression()), !dbg !12400
  store i32 0, i32* %4, align 4, !dbg !12402
  call void @llvm.dbg.value(metadata i32* %4, metadata !12398, metadata !DIExpression(DW_OP_deref)), !dbg !12400
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #27, !dbg !12403
  call void @llvm.dbg.value(metadata i16* %6, metadata !12399, metadata !DIExpression()), !dbg !12400
  %7 = load i32, i32* %4, align 4, !dbg !12404
  call void @llvm.dbg.value(metadata i32 %7, metadata !12398, metadata !DIExpression()), !dbg !12400
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #27, !dbg !12405
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !12406
  ret i32 %8, !dbg !12407
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !12408 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12412, metadata !DIExpression()), !dbg !12418
  call void @llvm.dbg.value(metadata i32* %1, metadata !12413, metadata !DIExpression()), !dbg !12418
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !12419
  %4 = load i16*, i16** %3, align 4, !dbg !12419
  call void @llvm.dbg.value(metadata i16* %4, metadata !12414, metadata !DIExpression()), !dbg !12418
  %5 = icmp eq i16* %4, null, !dbg !12420
  br i1 %5, label %14, label %6, !dbg !12421

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !12422
  call void @llvm.dbg.value(metadata i32 %7, metadata !12415, metadata !DIExpression()), !dbg !12422
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !12423
  %9 = load i16, i16* %8, align 2, !dbg !12423
  %10 = add i16 %9, -32767, !dbg !12424
  %11 = icmp ult i16 %10, 2, !dbg !12424
  %12 = add i32 %7, 1, !dbg !12425
  call void @llvm.dbg.value(metadata i32 %12, metadata !12415, metadata !DIExpression()), !dbg !12422
  br i1 %11, label %13, label %6, !dbg !12424, !llvm.loop !12427

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !12430
  br label %14, !dbg !12431

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !12432
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !12433 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !12437, metadata !DIExpression()), !dbg !12448
  call void @llvm.dbg.value(metadata i32 %1, metadata !12438, metadata !DIExpression()), !dbg !12448
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !12439, metadata !DIExpression()), !dbg !12448
  call void @llvm.dbg.value(metadata i8* %3, metadata !12440, metadata !DIExpression()), !dbg !12448
  call void @llvm.dbg.value(metadata i32 0, metadata !12441, metadata !DIExpression()), !dbg !12449
  %5 = icmp eq i32 %1, 0, !dbg !12450
  br i1 %5, label %16, label %8, !dbg !12451

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !12441, metadata !DIExpression()), !dbg !12449
  %7 = icmp eq i32 %15, %1, !dbg !12450
  br i1 %7, label %16, label %8, !dbg !12451, !llvm.loop !12452

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !12441, metadata !DIExpression()), !dbg !12449
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !12454
  %11 = load i16, i16* %10, align 2, !dbg !12454
  call void @llvm.dbg.value(metadata i16 %11, metadata !12443, metadata !DIExpression()), !dbg !12455
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #27, !dbg !12456
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !12446, metadata !DIExpression()), !dbg !12455
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #26, !dbg !12457
  call void @llvm.dbg.value(metadata i32 %13, metadata !12447, metadata !DIExpression()), !dbg !12455
  %14 = icmp slt i32 %13, 0, !dbg !12458
  %15 = add nuw i32 %9, 1, !dbg !12460
  call void @llvm.dbg.value(metadata i32 %15, metadata !12441, metadata !DIExpression()), !dbg !12449
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !12461
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #11 !dbg !12462 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !12466, metadata !DIExpression()), !dbg !12469
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !12467, metadata !DIExpression()), !dbg !12469
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !12468, metadata !DIExpression()), !dbg !12469
  %2 = sext i16 %0 to i32, !dbg !12470
  %3 = icmp slt i16 %0, 1, !dbg !12472
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !12473
  %6 = add nsw i32 %2, -1, !dbg !12473
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !12473
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !12473
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !12467, metadata !DIExpression()), !dbg !12469
  ret %struct.device* %8, !dbg !12474
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !12475 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12477, metadata !DIExpression()), !dbg !12482
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !12478, metadata !DIExpression()), !dbg !12482
  call void @llvm.dbg.value(metadata i8* %2, metadata !12479, metadata !DIExpression()), !dbg !12482
  %5 = bitcast i32* %4 to i8*, !dbg !12483
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !12483
  call void @llvm.dbg.value(metadata i32 0, metadata !12480, metadata !DIExpression()), !dbg !12482
  store i32 0, i32* %4, align 4, !dbg !12484
  call void @llvm.dbg.value(metadata i32* %4, metadata !12480, metadata !DIExpression(DW_OP_deref)), !dbg !12482
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #27, !dbg !12485
  call void @llvm.dbg.value(metadata i16* %6, metadata !12481, metadata !DIExpression()), !dbg !12482
  %7 = load i32, i32* %4, align 4, !dbg !12486
  call void @llvm.dbg.value(metadata i32 %7, metadata !12480, metadata !DIExpression()), !dbg !12482
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #27, !dbg !12487
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !12488
  ret i32 %8, !dbg !12489
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !12490 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12492, metadata !DIExpression()), !dbg !12497
  call void @llvm.dbg.value(metadata i32* %1, metadata !12493, metadata !DIExpression()), !dbg !12497
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !12498
  %4 = load i16*, i16** %3, align 4, !dbg !12498
  call void @llvm.dbg.value(metadata i16* %4, metadata !12494, metadata !DIExpression()), !dbg !12497
  call void @llvm.dbg.value(metadata i32 0, metadata !12495, metadata !DIExpression()), !dbg !12497
  call void @llvm.dbg.value(metadata i32 0, metadata !12496, metadata !DIExpression()), !dbg !12497
  %5 = icmp eq i16* %4, null, !dbg !12499
  br i1 %5, label %22, label %6, !dbg !12501

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !12495, metadata !DIExpression()), !dbg !12497
  call void @llvm.dbg.value(metadata i16* %8, metadata !12494, metadata !DIExpression()), !dbg !12497
  %9 = load i16, i16* %8, align 2, !dbg !12502
  %10 = icmp eq i16 %9, -32768, !dbg !12506
  call void @llvm.dbg.value(metadata i32 undef, metadata !12495, metadata !DIExpression()), !dbg !12497
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !12507
  call void @llvm.dbg.value(metadata i16* %11, metadata !12494, metadata !DIExpression()), !dbg !12497
  %12 = zext i1 %10 to i32, !dbg !12508
  %13 = add i32 %7, %12, !dbg !12508
  call void @llvm.dbg.value(metadata i32 %13, metadata !12495, metadata !DIExpression()), !dbg !12497
  %14 = icmp eq i32 %13, 2, !dbg !12509
  br i1 %14, label %15, label %6, !dbg !12510

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !12497
  call void @llvm.dbg.value(metadata i32 %16, metadata !12496, metadata !DIExpression()), !dbg !12497
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !12511
  %18 = load i16, i16* %17, align 2, !dbg !12511
  %19 = icmp eq i16 %18, 32767, !dbg !12512
  %20 = add i32 %16, 1, !dbg !12513
  call void @llvm.dbg.value(metadata i32 %20, metadata !12496, metadata !DIExpression()), !dbg !12497
  br i1 %19, label %21, label %15, !dbg !12515, !llvm.loop !12516

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !12518
  br label %22, !dbg !12519

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !12520
  call void @llvm.dbg.value(metadata i16* %23, metadata !12494, metadata !DIExpression()), !dbg !12497
  ret i16* %23, !dbg !12521
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #5 !dbg !12522 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12525
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !12526
  ret i32* %2, !dbg !12527
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #11 !dbg !12528 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !12676, metadata !DIExpression()), !dbg !12679
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !12677, metadata !DIExpression()), !dbg !12679
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12678, metadata !DIExpression()), !dbg !12679
  ret void, !dbg !12680
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !12681 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12685, metadata !DIExpression()), !dbg !12687
  call void @llvm.dbg.value(metadata i32 %1, metadata !12686, metadata !DIExpression()), !dbg !12687
  ret void, !dbg !12688
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !12689 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12693, metadata !DIExpression()), !dbg !12695
  call void @llvm.dbg.value(metadata i32 %1, metadata !12694, metadata !DIExpression()), !dbg !12695
  ret void, !dbg !12696
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !12697 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12701, metadata !DIExpression()), !dbg !12703
  call void @llvm.dbg.value(metadata i8* %1, metadata !12702, metadata !DIExpression()), !dbg !12703
  ret i32 -134, !dbg !12704
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !12705 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12709, metadata !DIExpression()), !dbg !12711
  call void @llvm.dbg.value(metadata i8* %1, metadata !12710, metadata !DIExpression()), !dbg !12711
  ret i32 -134, !dbg !12712
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !12713 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12716, metadata !DIExpression()), !dbg !12717
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !12718, !srcloc !12724
  call void @llvm.dbg.value(metadata i32 undef, metadata !12721, metadata !DIExpression()) #25, !dbg !12725
  call void @llvm.dbg.value(metadata i32 undef, metadata !12722, metadata !DIExpression()) #25, !dbg !12725
  br label %3, !dbg !12726

3:                                                ; preds = %3, %1
  br label %3, !dbg !12727, !llvm.loop !12730
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12733 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12737, metadata !DIExpression()), !dbg !12739
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12738, metadata !DIExpression()), !dbg !12739
  tail call void @arch_system_halt(i32 noundef %0) #31, !dbg !12740
  unreachable, !dbg !12740
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !12741 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12743, metadata !DIExpression()), !dbg !12744
  tail call void @arch_system_halt(i32 noundef %0) #31, !dbg !12745
  unreachable, !dbg !12745
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12746 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12748, metadata !DIExpression()), !dbg !12752
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12749, metadata !DIExpression()), !dbg !12752
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !12753, !srcloc !12724
  call void @llvm.dbg.value(metadata i32 undef, metadata !12721, metadata !DIExpression()) #25, !dbg !12755
  call void @llvm.dbg.value(metadata i32 undef, metadata !12722, metadata !DIExpression()) #25, !dbg !12755
  call void @llvm.dbg.value(metadata i32 undef, metadata !12750, metadata !DIExpression()), !dbg !12752
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12751, metadata !DIExpression()), !dbg !12752
  %4 = icmp eq %struct.__esf* %1, null, !dbg !12756
  br i1 %4, label %6, label %5, !dbg !12758

5:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #27, !dbg !12759
  br label %7, !dbg !12760

6:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #27, !dbg !12759
  br label %7, !dbg !12763

7:                                                ; preds = %6, %5
  %8 = extractvalue { i32, i32 } %3, 0, !dbg !12753
  call void @llvm.dbg.value(metadata i32 %8, metadata !12721, metadata !DIExpression()) #25, !dbg !12755
  call void @llvm.dbg.value(metadata i32 %8, metadata !12750, metadata !DIExpression()), !dbg !12752
  %9 = tail call fastcc %struct.k_thread* @k_current_get.105() #28, !dbg !12765
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !12751, metadata !DIExpression()), !dbg !12752
  call void @llvm.dbg.value(metadata i32 undef, metadata !12766, metadata !DIExpression()) #25, !dbg !12769
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !12771, !srcloc !12772
  tail call fastcc void @k_thread_abort.106(%struct.k_thread* noundef %9) #27, !dbg !12773
  ret void, !dbg !12776
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.105() unnamed_addr #9 !dbg !12777 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.107() #28, !dbg !12781
  ret %struct.k_thread* %1, !dbg !12782
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.106(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12783 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12787, metadata !DIExpression()), !dbg !12788
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !12789, !srcloc !12791
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #26, !dbg !12792
  ret void, !dbg !12793
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.107() unnamed_addr #9 !dbg !12794 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !12795, !srcloc !12797
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #26, !dbg !12798
  ret %struct.k_thread* %1, !dbg !12799
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12800 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12804, metadata !DIExpression()), !dbg !12807
  call void @llvm.dbg.value(metadata i32 %1, metadata !12805, metadata !DIExpression()), !dbg !12807
  call void @llvm.dbg.value(metadata i32 %2, metadata !12806, metadata !DIExpression()), !dbg !12807
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #26, !dbg !12808
  ret void, !dbg !12809
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12810 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12814, metadata !DIExpression()), !dbg !12817
  call void @llvm.dbg.value(metadata i8* %1, metadata !12815, metadata !DIExpression()), !dbg !12817
  call void @llvm.dbg.value(metadata i32 %2, metadata !12816, metadata !DIExpression()), !dbg !12817
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #26, !dbg !12818
  ret void, !dbg !12819
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !12820 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #27, !dbg !12821
  ret void, !dbg !12822
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !12823 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12825, metadata !DIExpression()), !dbg !12826
  tail call fastcc void @init_idle_thread(i32 noundef %0) #27, !dbg !12827
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12828
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !12829
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !12830
  %4 = trunc i32 %0 to i8, !dbg !12831
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !12832
  store i8 %4, i8* %5, align 4, !dbg !12833
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !12834
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #27, !dbg !12835
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !12836
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !12837
  store i8* %8, i8** %9, align 4, !dbg !12838
  ret void, !dbg !12839
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !12840 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12842, metadata !DIExpression()), !dbg !12848
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12849
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12843, metadata !DIExpression()), !dbg !12848
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !12850
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !12844, metadata !DIExpression()), !dbg !12848
  call void @llvm.dbg.value(metadata i8* null, metadata !12847, metadata !DIExpression()), !dbg !12848
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !12851
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !12852
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #26, !dbg !12853
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #27, !dbg !12854
  ret void, !dbg !12855
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #11 !dbg !12856 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !12860, metadata !DIExpression()), !dbg !12861
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !12862
  ret i8* %2, !dbg !12863
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !12864 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12869, metadata !DIExpression()), !dbg !12870
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12871
  %3 = load i8, i8* %2, align 1, !dbg !12872
  %4 = and i8 %3, -5, !dbg !12872
  store i8 %4, i8* %2, align 1, !dbg !12872
  ret void, !dbg !12873
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #2 !dbg !12874 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #27, !dbg !12877
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #26, !dbg !12878
  %3 = ptrtoint i8* %2 to i32, !dbg !12887
  %4 = add i32 %3, 2048, !dbg !12888
  call void @llvm.dbg.value(metadata i32 %4, metadata !12882, metadata !DIExpression()) #25, !dbg !12889
  call void @llvm.dbg.value(metadata i32 %4, metadata !12890, metadata !DIExpression()) #25, !dbg !12893
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #25, !dbg !12895, !srcloc !12896
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12897
  %6 = or i32 %5, 512, !dbg !12897
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12897
  tail call fastcc void @__NVIC_SetPriority.114(i32 noundef -2, i32 noundef 255) #26, !dbg !12898
  tail call fastcc void @__NVIC_SetPriority.114(i32 noundef -5, i32 noundef 0) #26, !dbg !12901
  tail call fastcc void @__NVIC_SetPriority.114(i32 noundef -12, i32 noundef 0) #26, !dbg !12902
  tail call fastcc void @__NVIC_SetPriority.114(i32 noundef -11, i32 noundef 0) #26, !dbg !12903
  tail call fastcc void @__NVIC_SetPriority.114(i32 noundef -10, i32 noundef 0) #26, !dbg !12904
  tail call fastcc void @__NVIC_SetPriority.114(i32 noundef -4, i32 noundef 0) #26, !dbg !12905
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12906
  %8 = or i32 %7, 458752, !dbg !12906
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12906
  tail call void @z_arm_fault_init() #26, !dbg !12907
  tail call void @z_arm_cpu_idle_init() #26, !dbg !12908
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !12909
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !12912
  %9 = tail call i32 @z_arm_mpu_init() #26, !dbg !12913
  tail call void @z_arm_configure_static_mpu_regions() #26, !dbg !12914
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !12915
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #25, !dbg !12915
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !12876, metadata !DIExpression()), !dbg !12916
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #27, !dbg !12917
  call void @z_device_state_init() #26, !dbg !12918
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #27, !dbg !12919
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #27, !dbg !12920
  %11 = call fastcc i8* @prepare_multithreading() #27, !dbg !12921
  call fastcc void @switch_to_main_thread(i8* noundef %11) #31, !dbg !12922
  unreachable, !dbg !12922
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2217 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2221, metadata !DIExpression()), !dbg !12923
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !12924
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !12924
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2222, metadata !DIExpression()), !dbg !12923
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2222, metadata !DIExpression()), !dbg !12923
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !12925
  br i1 %7, label %8, label %35, !dbg !12926

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2222, metadata !DIExpression()), !dbg !12923
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !12927
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !12927
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2232, metadata !DIExpression()), !dbg !12928
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !12929
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !12929
  %14 = tail call i32 %13(%struct.device* noundef %11) #26, !dbg !12930
  call void @llvm.dbg.value(metadata i32 %14, metadata !2236, metadata !DIExpression()), !dbg !12928
  %15 = icmp eq %struct.device* %11, null, !dbg !12931
  br i1 %15, label %32, label %16, !dbg !12933

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !12934
  br i1 %17, label %26, label %18, !dbg !12937

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !12938
  call void @llvm.dbg.value(metadata i32 %19, metadata !2236, metadata !DIExpression()), !dbg !12928
  %20 = icmp ult i32 %19, 255, !dbg !12940
  %21 = select i1 %20, i32 %19, i32 255, !dbg !12940
  call void @llvm.dbg.value(metadata i32 %21, metadata !2236, metadata !DIExpression()), !dbg !12928
  %22 = trunc i32 %21 to i8, !dbg !12941
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12942
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !12942
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !12943
  store i8 %22, i8* %25, align 1, !dbg !12944
  br label %26, !dbg !12945

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12946
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !12946
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !12947
  %30 = load i8, i8* %29, align 1, !dbg !12948
  %31 = or i8 %30, 1, !dbg !12948
  store i8 %31, i8* %29, align 1, !dbg !12948
  br label %32, !dbg !12949

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !12950
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2222, metadata !DIExpression()), !dbg !12923
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !12925
  br i1 %34, label %8, label %35, !dbg !12926, !llvm.loop !12951

35:                                               ; preds = %32, %1
  ret void, !dbg !12953
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.114(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !12954 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12956, metadata !DIExpression()), !dbg !12958
  call void @llvm.dbg.value(metadata i32 %1, metadata !12957, metadata !DIExpression()), !dbg !12958
  %3 = trunc i32 %1 to i8, !dbg !12959
  %4 = shl i8 %3, 4, !dbg !12959
  %5 = and i32 %0, 15, !dbg !12962
  %6 = add nsw i32 %5, -4, !dbg !12963
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !12964
  store volatile i8 %4, i8* %7, align 1, !dbg !12965
  ret void, !dbg !12966
}

; Function Attrs: optsize
declare !dbg !12967 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #4 !dbg !12968 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12971, metadata !DIExpression()), !dbg !12972
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12973
  store i8 1, i8* %2, align 1, !dbg !12974
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !12975
  store i8 1, i8* %3, align 4, !dbg !12976
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !12977
  store i32 0, i32* %4, align 4, !dbg !12978
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !12979
  store i32 0, i32* %5, align 4, !dbg !12980
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !12981
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !12982
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12983
  ret void, !dbg !12984
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !12985 {
  tail call void @z_sched_init() #26, !dbg !12988
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12989
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.115, i32 0, i32 0)) #26, !dbg !12990
  call void @llvm.dbg.value(metadata i8* %1, metadata !12987, metadata !DIExpression()), !dbg !12991
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #27, !dbg !12992
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #26, !dbg !12993
  tail call void @z_init_cpu(i32 noundef 0) #27, !dbg !12994
  ret i8* %1, !dbg !12995
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #2 !dbg !12996 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13000, metadata !DIExpression()), !dbg !13001
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #26, !dbg !13002
  unreachable, !dbg !13003
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !13004 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13006, metadata !DIExpression()), !dbg !13009
  call void @llvm.dbg.value(metadata i8* %1, metadata !13007, metadata !DIExpression()), !dbg !13009
  call void @llvm.dbg.value(metadata i8* %2, metadata !13008, metadata !DIExpression()), !dbg !13009
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !13010
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #27, !dbg !13011
  tail call void @boot_banner() #26, !dbg !13012
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #27, !dbg !13013
  tail call void @z_init_static_threads() #26, !dbg !13014
  tail call void @main() #26, !dbg !13015
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13016
  %5 = and i8 %4, -2, !dbg !13016
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13016
  ret void, !dbg !13017
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !13018 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13028, metadata !DIExpression()), !dbg !13030
  call void @llvm.dbg.value(metadata i8* %1, metadata !13029, metadata !DIExpression()), !dbg !13030
  ret void, !dbg !13031
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !13032 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13034, metadata !DIExpression()), !dbg !13036
  call void @llvm.dbg.value(metadata i8* %1, metadata !13035, metadata !DIExpression()), !dbg !13036
  ret void, !dbg !13037
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !13038 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !13039, !srcloc !13046
  call void @llvm.dbg.value(metadata i32 %1, metadata !13042, metadata !DIExpression()) #25, !dbg !13047
  %2 = icmp ne i32 %1, 0, !dbg !13048
  ret i1 %2, !dbg !13049
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #8 !dbg !13050 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13051
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13052
  %3 = load i8, i8* %2, align 4, !dbg !13053
  %4 = or i8 %3, 1, !dbg !13053
  store i8 %4, i8* %2, align 4, !dbg !13053
  ret void, !dbg !13054
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #8 !dbg !13055 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13056
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13057
  %3 = load i8, i8* %2, align 4, !dbg !13058
  %4 = and i8 %3, -2, !dbg !13058
  store i8 %4, i8* %2, align 4, !dbg !13058
  ret void, !dbg !13059
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #5 !dbg !13060 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13061
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13062
  %3 = load i8, i8* %2, align 4, !dbg !13062
  %4 = and i8 %3, 1, !dbg !13063
  %5 = icmp ne i8 %4, 0, !dbg !13064
  ret i1 %5, !dbg !13065
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !13066 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13070, metadata !DIExpression()), !dbg !13072
  call void @llvm.dbg.value(metadata i8* %1, metadata !13071, metadata !DIExpression()), !dbg !13072
  ret i32 -88, !dbg !13073
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !13074 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13078, metadata !DIExpression()), !dbg !13079
  ret i8* null, !dbg !13080
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #11 !dbg !13081 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13085, metadata !DIExpression()), !dbg !13088
  call void @llvm.dbg.value(metadata i8* %1, metadata !13086, metadata !DIExpression()), !dbg !13088
  call void @llvm.dbg.value(metadata i32 %2, metadata !13087, metadata !DIExpression()), !dbg !13088
  ret i32 -88, !dbg !13089
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2243 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2357, metadata !DIExpression()), !dbg !13090
  call void @llvm.dbg.value(metadata i8* %1, metadata !2358, metadata !DIExpression()), !dbg !13090
  call void @llvm.dbg.value(metadata i32 %2, metadata !2359, metadata !DIExpression()), !dbg !13090
  call void @llvm.dbg.value(metadata i32 0, metadata !2360, metadata !DIExpression()), !dbg !13090
  call void @llvm.dbg.value(metadata i8 undef, metadata !2362, metadata !DIExpression()), !dbg !13090
  %4 = icmp eq i8* %1, null, !dbg !13091
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !13093
  br i1 %6, label %46, label %7, !dbg !13093

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13094
  %9 = load i8, i8* %8, align 1, !dbg !13094
  call void @llvm.dbg.value(metadata i8 %9, metadata !2362, metadata !DIExpression()), !dbg !13090
  %10 = add i32 %2, -1, !dbg !13095
  call void @llvm.dbg.value(metadata i32 %10, metadata !2359, metadata !DIExpression()), !dbg !13090
  call void @llvm.dbg.value(metadata i8 0, metadata !2363, metadata !DIExpression()), !dbg !13096
  call void @llvm.dbg.value(metadata i8 %9, metadata !2362, metadata !DIExpression()), !dbg !13090
  call void @llvm.dbg.value(metadata i32 0, metadata !2360, metadata !DIExpression()), !dbg !13090
  %11 = icmp eq i8 %9, 0, !dbg !13097
  br i1 %11, label %12, label %15, !dbg !13099

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !13100
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !13101
  store i8 0, i8* %14, align 1, !dbg !13102
  br label %46, !dbg !13103

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2363, metadata !DIExpression()), !dbg !13096
  call void @llvm.dbg.value(metadata i8 %17, metadata !2362, metadata !DIExpression()), !dbg !13090
  call void @llvm.dbg.value(metadata i32 %18, metadata !2360, metadata !DIExpression()), !dbg !13090
  %19 = zext i8 %17 to i32, !dbg !13104
  %20 = zext i8 %16 to i32, !dbg !13105
  %21 = shl nuw i32 1, %20, !dbg !13105
  call void @llvm.dbg.value(metadata i32 %21, metadata !2361, metadata !DIExpression()), !dbg !13090
  %22 = and i32 %21, %19, !dbg !13107
  %23 = icmp eq i32 %22, 0, !dbg !13109
  br i1 %23, label %42, label %24, !dbg !13110

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !13111
  %26 = sub i32 %10, %18, !dbg !13112
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !13113
  %28 = load i8*, i8** %27, align 4, !dbg !13113
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !13114
  %30 = load i32, i32* %29, align 4, !dbg !13114
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #27, !dbg !13115
  %32 = add i32 %31, %18, !dbg !13116
  call void @llvm.dbg.value(metadata i32 %32, metadata !2360, metadata !DIExpression()), !dbg !13090
  %33 = trunc i32 %21 to i8, !dbg !13117
  %34 = xor i8 %33, -1, !dbg !13117
  %35 = and i8 %17, %34, !dbg !13117
  call void @llvm.dbg.value(metadata i8 %35, metadata !2362, metadata !DIExpression()), !dbg !13090
  %36 = icmp eq i8 %35, 0, !dbg !13118
  br i1 %36, label %12, label %37, !dbg !13120

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !13121
  %39 = sub i32 %10, %32, !dbg !13123
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i32 noundef 1) #27, !dbg !13124
  %41 = add i32 %40, %32, !dbg !13125
  call void @llvm.dbg.value(metadata i32 %41, metadata !2360, metadata !DIExpression()), !dbg !13090
  br label %42, !dbg !13126

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !13090
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !13090
  call void @llvm.dbg.value(metadata i8 %44, metadata !2362, metadata !DIExpression()), !dbg !13090
  call void @llvm.dbg.value(metadata i32 %43, metadata !2360, metadata !DIExpression()), !dbg !13090
  %45 = add i8 %16, 1, !dbg !13127
  call void @llvm.dbg.value(metadata i8 %45, metadata !2363, metadata !DIExpression()), !dbg !13096
  br label %15, !dbg !13099

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.116, i32 0, i32 0), %3 ], !dbg !13090
  ret i8* %47, !dbg !13128
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !13129 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13133, metadata !DIExpression()), !dbg !13138
  call void @llvm.dbg.value(metadata i32 %1, metadata !13134, metadata !DIExpression()), !dbg !13138
  call void @llvm.dbg.value(metadata i8* %2, metadata !13135, metadata !DIExpression()), !dbg !13138
  call void @llvm.dbg.value(metadata i32 %3, metadata !13136, metadata !DIExpression()), !dbg !13138
  %5 = icmp ult i32 %1, %3, !dbg !13139
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !13139
  call void @llvm.dbg.value(metadata i32 %6, metadata !13137, metadata !DIExpression()), !dbg !13138
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #26, !dbg !13140
  ret i32 %6, !dbg !13141
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13142 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13146, metadata !DIExpression()), !dbg !13147
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #26, !dbg !13148
  ret void, !dbg !13149
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !13150 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13159, metadata !DIExpression()), !dbg !13170
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13160, metadata !DIExpression()), !dbg !13170
  call void @llvm.dbg.value(metadata i32 %2, metadata !13161, metadata !DIExpression()), !dbg !13170
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13162, metadata !DIExpression()), !dbg !13170
  call void @llvm.dbg.value(metadata i8* %4, metadata !13163, metadata !DIExpression()), !dbg !13170
  call void @llvm.dbg.value(metadata i8* %5, metadata !13164, metadata !DIExpression()), !dbg !13170
  call void @llvm.dbg.value(metadata i8* %6, metadata !13165, metadata !DIExpression()), !dbg !13170
  call void @llvm.dbg.value(metadata i32 %7, metadata !13166, metadata !DIExpression()), !dbg !13170
  call void @llvm.dbg.value(metadata i32 %8, metadata !13167, metadata !DIExpression()), !dbg !13170
  call void @llvm.dbg.value(metadata i8* undef, metadata !13168, metadata !DIExpression()), !dbg !13170
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !13171
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %11) #27, !dbg !13172
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !13173
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #27, !dbg !13174
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #27, !dbg !13175
  call void @llvm.dbg.value(metadata i8* %13, metadata !13169, metadata !DIExpression()), !dbg !13170
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #26, !dbg !13176
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !13177
  store i8* null, i8** %14, align 4, !dbg !13178
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13179
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !13179
  br i1 %16, label %20, label %17, !dbg !13181

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !13182
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !13182
  br label %20, !dbg !13183

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !13170
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !13184
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !13186
  ret i8* %13, !dbg !13187
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #4 !dbg !13188 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13193, metadata !DIExpression()), !dbg !13194
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !13195
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #27, !dbg !13196
  ret void, !dbg !13197
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #4 !dbg !13198 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !13203, metadata !DIExpression()), !dbg !13207
  call void @llvm.dbg.value(metadata i32 %1, metadata !13204, metadata !DIExpression()), !dbg !13207
  call void @llvm.dbg.value(metadata i32 %2, metadata !13205, metadata !DIExpression()), !dbg !13207
  call void @llvm.dbg.value(metadata i32 %3, metadata !13206, metadata !DIExpression()), !dbg !13207
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !13208
  store %union.anon* null, %union.anon** %5, align 8, !dbg !13209
  %6 = trunc i32 %3 to i8, !dbg !13210
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !13211
  store i8 %6, i8* %7, align 4, !dbg !13212
  %8 = trunc i32 %2 to i8, !dbg !13213
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !13214
  store i8 %8, i8* %9, align 1, !dbg !13215
  %10 = trunc i32 %1 to i8, !dbg !13216
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !13217
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !13217
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !13217
  store i8 %10, i8* %13, align 2, !dbg !13218
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !13219
  store i8 0, i8* %14, align 1, !dbg !13220
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #27, !dbg !13221
  ret void, !dbg !13222
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !13223 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13227, metadata !DIExpression()), !dbg !13235
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13228, metadata !DIExpression()), !dbg !13235
  call void @llvm.dbg.value(metadata i32 %2, metadata !13229, metadata !DIExpression()), !dbg !13235
  call void @llvm.dbg.value(metadata i32 0, metadata !13234, metadata !DIExpression()), !dbg !13235
  %4 = add i32 %2, 7, !dbg !13236
  %5 = and i32 %4, -8, !dbg !13236
  %6 = add i32 %5, 64, !dbg !13236
  call void @llvm.dbg.value(metadata i32 %6, metadata !13230, metadata !DIExpression()), !dbg !13235
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.126(%struct.z_thread_stack_element* noundef %1) #27, !dbg !13238
  call void @llvm.dbg.value(metadata i8* %7, metadata !13233, metadata !DIExpression()), !dbg !13235
  call void @llvm.dbg.value(metadata i32 %5, metadata !13231, metadata !DIExpression()), !dbg !13235
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !13239
  call void @llvm.dbg.value(metadata i8* %8, metadata !13232, metadata !DIExpression()), !dbg !13235
  call void @llvm.dbg.value(metadata i32 0, metadata !13234, metadata !DIExpression()), !dbg !13235
  %9 = ptrtoint i8* %7 to i32, !dbg !13240
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !13241
  store i32 %9, i32* %10, align 4, !dbg !13242
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !13243
  store i32 %5, i32* %11, align 4, !dbg !13244
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !13245
  store i32 0, i32* %12, align 4, !dbg !13246
  call void @llvm.dbg.value(metadata i8* %8, metadata !13232, metadata !DIExpression()), !dbg !13235
  ret i8* %8, !dbg !13247
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.126(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #11 !dbg !13248 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !13252, metadata !DIExpression()), !dbg !13253
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !13254
  ret i8* %2, !dbg !13255
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !13256 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !13261, metadata !DIExpression()), !dbg !13262
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !13263
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #27, !dbg !13264
  ret void, !dbg !13265
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !13266 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13268, metadata !DIExpression()), !dbg !13269
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13270
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #27, !dbg !13271
  ret void, !dbg !13272
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !13273 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13277, metadata !DIExpression()), !dbg !13278
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13279
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !13280
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13281
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !13282
  ret void, !dbg !13283
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !13284 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13289, metadata !DIExpression()), !dbg !13290
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13291
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13292
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13293
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13294
  ret void, !dbg !13295
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !13296 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !13313, metadata !DIExpression()), !dbg !13314
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13304, metadata !DIExpression()), !dbg !13314
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13305, metadata !DIExpression()), !dbg !13314
  call void @llvm.dbg.value(metadata i32 %2, metadata !13306, metadata !DIExpression()), !dbg !13314
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13307, metadata !DIExpression()), !dbg !13314
  call void @llvm.dbg.value(metadata i8* %4, metadata !13308, metadata !DIExpression()), !dbg !13314
  call void @llvm.dbg.value(metadata i8* %5, metadata !13309, metadata !DIExpression()), !dbg !13314
  call void @llvm.dbg.value(metadata i8* %6, metadata !13310, metadata !DIExpression()), !dbg !13314
  call void @llvm.dbg.value(metadata i32 %7, metadata !13311, metadata !DIExpression()), !dbg !13314
  call void @llvm.dbg.value(metadata i32 %8, metadata !13312, metadata !DIExpression()), !dbg !13314
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #27, !dbg !13315
  %13 = icmp eq i64 %11, -1, !dbg !13316
  br i1 %13, label %15, label %14, !dbg !13318

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #27, !dbg !13319
  br label %15, !dbg !13321

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !13322
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13323 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !13328, metadata !DIExpression()), !dbg !13329
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13327, metadata !DIExpression()), !dbg !13329
  %4 = icmp eq i64 %3, 0, !dbg !13330
  br i1 %4, label %5, label %6, !dbg !13332

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #27, !dbg !13333
  br label %7, !dbg !13335

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #27, !dbg !13336
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !13338
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13339 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13343, metadata !DIExpression()), !dbg !13344
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !13345, !srcloc !13347
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #27, !dbg !13348
  ret void, !dbg !13349
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13350 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13353, metadata !DIExpression()), !dbg !13354
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13352, metadata !DIExpression()), !dbg !13354
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13355
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #26, !dbg !13356
  ret void, !dbg !13357
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !13358 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !13360, metadata !DIExpression()), !dbg !13380
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !13381

1:                                                ; preds = %2
  tail call void @k_sched_lock() #26, !dbg !13382
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !13378, metadata !DIExpression()), !dbg !13383
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !13384

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !13360, metadata !DIExpression()), !dbg !13380
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !13385
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !13385
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !13388
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !13388
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !13389
  %9 = load i32, i32* %8, align 4, !dbg !13389
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !13390
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !13390
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !13391
  %13 = load i8*, i8** %12, align 4, !dbg !13391
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !13392
  %15 = load i8*, i8** %14, align 4, !dbg !13392
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !13393
  %17 = load i8*, i8** %16, align 4, !dbg !13393
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !13394
  %19 = load i32, i32* %18, align 4, !dbg !13394
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !13395
  %21 = load i32, i32* %20, align 4, !dbg !13395
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #27, !dbg !13396
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !13397
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !13398
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !13399
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !13399
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !13400
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !13360, metadata !DIExpression()), !dbg !13380
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13401
  br i1 %27, label %2, label %1, !dbg !13381, !llvm.loop !13403

28:                                               ; preds = %0
  tail call void @k_sched_lock() #26, !dbg !13382
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !13378, metadata !DIExpression()), !dbg !13383
  br label %29, !dbg !13384

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #26, !dbg !13405
  ret void, !dbg !13406

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !13378, metadata !DIExpression()), !dbg !13383
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !13407
  %33 = load i32, i32* %32, align 4, !dbg !13407
  %34 = icmp eq i32 %33, -1, !dbg !13411
  br i1 %34, label %43, label %35, !dbg !13412

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !13413
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !13413
  %38 = icmp sgt i32 %33, 0, !dbg !13415
  %39 = select i1 %38, i32 %33, i32 0, !dbg !13415
  %40 = zext i32 %39 to i64, !dbg !13415
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %40) #27, !dbg !13415
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !13416
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #27, !dbg !13416
  br label %43, !dbg !13417

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !13418
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !13378, metadata !DIExpression()), !dbg !13383
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13419
  br i1 %45, label %30, label %29, !dbg !13384, !llvm.loop !13421
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !13423 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13428, metadata !DIExpression()), !dbg !13429
  call void @llvm.dbg.value(metadata i64 %0, metadata !13430, metadata !DIExpression()), !dbg !13447
  call void @llvm.dbg.value(metadata i32 1000, metadata !13435, metadata !DIExpression()), !dbg !13447
  call void @llvm.dbg.value(metadata i32 10000, metadata !13436, metadata !DIExpression()), !dbg !13447
  call void @llvm.dbg.value(metadata i8 1, metadata !13437, metadata !DIExpression()), !dbg !13447
  call void @llvm.dbg.value(metadata i8 0, metadata !13438, metadata !DIExpression()), !dbg !13447
  call void @llvm.dbg.value(metadata i8 1, metadata !13439, metadata !DIExpression()), !dbg !13447
  call void @llvm.dbg.value(metadata i8 0, metadata !13440, metadata !DIExpression()), !dbg !13447
  call void @llvm.dbg.value(metadata i8 1, metadata !13441, metadata !DIExpression()), !dbg !13447
  call void @llvm.dbg.value(metadata i8 0, metadata !13442, metadata !DIExpression()), !dbg !13447
  call void @llvm.dbg.value(metadata i64 0, metadata !13443, metadata !DIExpression()), !dbg !13447
  call void @llvm.dbg.value(metadata i64 0, metadata !13443, metadata !DIExpression()), !dbg !13447
  %2 = mul i64 %0, 10, !dbg !13449
  ret i64 %2, !dbg !13455
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #2 !dbg !13456 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !13458, metadata !DIExpression()), !dbg !13462
  call void @llvm.dbg.value(metadata i8* %1, metadata !13459, metadata !DIExpression()), !dbg !13462
  call void @llvm.dbg.value(metadata i8* %2, metadata !13460, metadata !DIExpression()), !dbg !13462
  call void @llvm.dbg.value(metadata i8* %3, metadata !13461, metadata !DIExpression()), !dbg !13462
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13463
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !13464
  %7 = load i8, i8* %6, align 4, !dbg !13465
  %8 = or i8 %7, 4, !dbg !13465
  store i8 %8, i8* %6, align 4, !dbg !13465
  tail call void @z_thread_essential_clear() #27, !dbg !13466
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #29, !dbg !13467
  unreachable, !dbg !13467
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !13468 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13472, metadata !DIExpression()), !dbg !13473
  ret i32 -134, !dbg !13474
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #11 !dbg !13475 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13479, metadata !DIExpression()), !dbg !13481
  call void @llvm.dbg.value(metadata i32 %1, metadata !13480, metadata !DIExpression()), !dbg !13481
  ret i32 -134, !dbg !13482
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #11 !dbg !13483 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13490, metadata !DIExpression()), !dbg !13492
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !13491, metadata !DIExpression()), !dbg !13492
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !13493
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !13495
  %6 = select i1 %5, i32 -22, i32 0, !dbg !13492
  ret i32 %6, !dbg !13496
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #11 !dbg !13497 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13501, metadata !DIExpression()), !dbg !13502
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !13503
  %3 = select i1 %2, i32 -22, i32 0, !dbg !13502
  ret i32 %3, !dbg !13505
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !13506 {
  tail call void @sys_clock_idle_exit() #26, !dbg !13508
  ret void, !dbg !13509
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #2 !dbg !13510 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13512, metadata !DIExpression()), !dbg !13515
  call void @llvm.dbg.value(metadata i8* %1, metadata !13513, metadata !DIExpression()), !dbg !13515
  call void @llvm.dbg.value(metadata i8* %2, metadata !13514, metadata !DIExpression()), !dbg !13515
  br label %4, !dbg !13516

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13517, !srcloc !13524
  call void @llvm.dbg.value(metadata i32 undef, metadata !13520, metadata !DIExpression()) #25, !dbg !13525
  call void @llvm.dbg.value(metadata i32 undef, metadata !13521, metadata !DIExpression()) #25, !dbg !13525
  tail call fastcc void @k_cpu_idle() #27, !dbg !13526
  br label %4, !dbg !13516, !llvm.loop !13527
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !13529 {
  tail call void @arch_cpu_idle() #26, !dbg !13530
  ret void, !dbg !13531
}

; Function Attrs: optsize
declare !dbg !13532 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_queue_node_peek(%struct.z_heap_bucket* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !13533 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !13537, metadata !DIExpression()), !dbg !13543
  call void @llvm.dbg.value(metadata i1 %1, metadata !13538, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13543
  %3 = icmp eq %struct.z_heap_bucket* %0, null, !dbg !13544
  br i1 %3, label %13, label %4, !dbg !13545

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i8 @sys_sfnode_flags_get(%struct.z_heap_bucket* noundef nonnull %0) #27, !dbg !13546
  %6 = icmp eq i8 %5, 0, !dbg !13547
  br i1 %6, label %13, label %7, !dbg !13548

7:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !13540, metadata !DIExpression()), !dbg !13549
  %8 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 1, !dbg !13550
  %9 = bitcast %struct.z_heap_bucket* %8 to i8**, !dbg !13550
  %10 = load i8*, i8** %9, align 4, !dbg !13550
  call void @llvm.dbg.value(metadata i8* %10, metadata !13539, metadata !DIExpression()), !dbg !13543
  br i1 %1, label %11, label %15, !dbg !13551

11:                                               ; preds = %7
  %12 = bitcast %struct.z_heap_bucket* %0 to i8*, !dbg !13552
  tail call void @k_free(i8* noundef nonnull %12) #26, !dbg !13553
  br label %15, !dbg !13556

13:                                               ; preds = %4, %2
  %14 = bitcast %struct.z_heap_bucket* %0 to i8*, !dbg !13557
  call void @llvm.dbg.value(metadata i8* %14, metadata !13539, metadata !DIExpression()), !dbg !13543
  br label %15

15:                                               ; preds = %7, %11, %13
  %16 = phi i8* [ %14, %13 ], [ %10, %11 ], [ %10, %7 ], !dbg !13559
  call void @llvm.dbg.value(metadata i8* %16, metadata !13539, metadata !DIExpression()), !dbg !13543
  ret i8* %16, !dbg !13560
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i8 @sys_sfnode_flags_get(%struct.z_heap_bucket* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13561 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !13565, metadata !DIExpression()), !dbg !13566
  %2 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !13567
  %3 = load i32, i32* %2, align 4, !dbg !13567
  %4 = trunc i32 %3 to i8, !dbg !13568
  %5 = and i8 %4, 3, !dbg !13568
  ret i8 %5, !dbg !13569
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_impl_k_queue_init(%struct.k_queue* noundef %0) local_unnamed_addr #4 !dbg !13570 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13591, metadata !DIExpression()), !dbg !13592
  %2 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !13593
  tail call fastcc void @sys_sflist_init(%struct._sflist* noundef %2) #27, !dbg !13594
  %3 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 2, !dbg !13595
  tail call fastcc void @z_waitq_init.131(%union.anon* noundef nonnull %3) #27, !dbg !13596
  ret void, !dbg !13597
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_sflist_init(%struct._sflist* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !13598 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13603, metadata !DIExpression()), !dbg !13604
  %2 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 0, !dbg !13605
  store %struct.z_heap_bucket* null, %struct.z_heap_bucket** %2, align 4, !dbg !13606
  %3 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 1, !dbg !13607
  store %struct.z_heap_bucket* null, %struct.z_heap_bucket** %3, align 4, !dbg !13608
  ret void, !dbg !13609
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.131(%union.anon* noundef %0) unnamed_addr #4 !dbg !13610 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13615, metadata !DIExpression()), !dbg !13616
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !13617
  tail call fastcc void @sys_dlist_init.132(%struct._dnode* noundef %2) #27, !dbg !13618
  ret void, !dbg !13619
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.132(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !13620 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13625, metadata !DIExpression()), !dbg !13626
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13627
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13628
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13629
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13630
  ret void, !dbg !13631
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_queue_cancel_wait(%struct.k_queue* noundef %0) local_unnamed_addr #1 !dbg !13632 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13634, metadata !DIExpression()), !dbg !13720
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13721, metadata !DIExpression()) #25, !dbg !13728
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13730, !srcloc !13736
  call void @llvm.dbg.value(metadata i32 undef, metadata !13733, metadata !DIExpression()) #25, !dbg !13737
  call void @llvm.dbg.value(metadata i32 undef, metadata !13734, metadata !DIExpression()) #25, !dbg !13737
  call void @llvm.dbg.value(metadata i32 undef, metadata !13727, metadata !DIExpression()) #25, !dbg !13728
  call void @llvm.dbg.value(metadata i32 undef, metadata !13635, metadata !DIExpression()), !dbg !13720
  %3 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 2, !dbg !13738
  %4 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef nonnull %3) #26, !dbg !13739
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13640, metadata !DIExpression()), !dbg !13720
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !13740
  br i1 %5, label %7, label %6, !dbg !13742

6:                                                ; preds = %1
  tail call fastcc void @prepare_thread_to_run(%struct.k_thread* noundef nonnull %4, i8* noundef null) #27, !dbg !13743
  br label %7, !dbg !13745

7:                                                ; preds = %6, %1
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !13730
  call void @llvm.dbg.value(metadata i32 %8, metadata !13733, metadata !DIExpression()) #25, !dbg !13737
  call void @llvm.dbg.value(metadata i32 %8, metadata !13727, metadata !DIExpression()) #25, !dbg !13728
  call void @llvm.dbg.value(metadata i32 %8, metadata !13635, metadata !DIExpression()), !dbg !13720
  %9 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 1, !dbg !13746
  %10 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !13747
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %9, [1 x i32] %10) #26, !dbg !13747
  ret void, !dbg !13748
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prepare_thread_to_run(%struct.k_thread* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !13749 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13753, metadata !DIExpression()), !dbg !13755
  call void @llvm.dbg.value(metadata i8* %1, metadata !13754, metadata !DIExpression()), !dbg !13755
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13756, metadata !DIExpression()), !dbg !13764
  call void @llvm.dbg.value(metadata i32 0, metadata !13762, metadata !DIExpression()), !dbg !13764
  call void @llvm.dbg.value(metadata i8* %1, metadata !13763, metadata !DIExpression()), !dbg !13764
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13766, metadata !DIExpression()), !dbg !13772
  call void @llvm.dbg.value(metadata i32 0, metadata !13771, metadata !DIExpression()), !dbg !13772
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 1, !dbg !13774
  store i32 0, i32* %3, align 4, !dbg !13775
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 6, !dbg !13776
  store i8* %1, i8** %4, align 4, !dbg !13777
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #26, !dbg !13778
  ret void, !dbg !13779
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_queue_insert(%struct.k_queue* noundef %0, i8* noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13780 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13784, metadata !DIExpression()), !dbg !13787
  call void @llvm.dbg.value(metadata i8* %1, metadata !13785, metadata !DIExpression()), !dbg !13787
  call void @llvm.dbg.value(metadata i8* %2, metadata !13786, metadata !DIExpression()), !dbg !13787
  %4 = tail call fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef %1, i8* noundef %2, i1 noundef zeroext false, i1 noundef zeroext false) #27, !dbg !13788
  ret void, !dbg !13789
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef %1, i8* noundef %2, i1 noundef zeroext %3, i1 noundef zeroext %4) unnamed_addr #1 !dbg !13790 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13794, metadata !DIExpression()), !dbg !13804
  call void @llvm.dbg.value(metadata i8* %1, metadata !13795, metadata !DIExpression()), !dbg !13804
  call void @llvm.dbg.value(metadata i8* %2, metadata !13796, metadata !DIExpression()), !dbg !13804
  call void @llvm.dbg.value(metadata i1 %3, metadata !13797, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13804
  call void @llvm.dbg.value(metadata i1 %4, metadata !13798, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13804
  %6 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 1, !dbg !13805
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13721, metadata !DIExpression()) #25, !dbg !13806
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13808, !srcloc !13736
  %8 = extractvalue { i32, i32 } %7, 0, !dbg !13808
  call void @llvm.dbg.value(metadata i32 %8, metadata !13733, metadata !DIExpression()) #25, !dbg !13810
  call void @llvm.dbg.value(metadata i32 undef, metadata !13734, metadata !DIExpression()) #25, !dbg !13810
  call void @llvm.dbg.value(metadata i32 %8, metadata !13727, metadata !DIExpression()) #25, !dbg !13806
  call void @llvm.dbg.value(metadata i32 %8, metadata !13800, metadata !DIExpression()), !dbg !13804
  br i1 %4, label %9, label %13, !dbg !13811

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !13812
  %11 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %10) #27, !dbg !13815
  %12 = bitcast %struct.z_heap_bucket* %11 to i8*, !dbg !13815
  call void @llvm.dbg.value(metadata i8* %12, metadata !13795, metadata !DIExpression()), !dbg !13804
  br label %13, !dbg !13816

13:                                               ; preds = %9, %5
  %14 = phi i8* [ %12, %9 ], [ %1, %5 ]
  call void @llvm.dbg.value(metadata i8* %14, metadata !13795, metadata !DIExpression()), !dbg !13804
  %15 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 2, !dbg !13817
  %16 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef nonnull %15) #26, !dbg !13818
  call void @llvm.dbg.value(metadata %struct.k_thread* %16, metadata !13799, metadata !DIExpression()), !dbg !13804
  %17 = icmp eq %struct.k_thread* %16, null, !dbg !13819
  br i1 %17, label %20, label %18, !dbg !13821

18:                                               ; preds = %13
  tail call fastcc void @prepare_thread_to_run(%struct.k_thread* noundef nonnull %16, i8* noundef %2) #27, !dbg !13822
  %19 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !13824
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %6, [1 x i32] %19) #26, !dbg !13824
  br label %36, !dbg !13825

20:                                               ; preds = %13
  br i1 %3, label %21, label %29, !dbg !13826

21:                                               ; preds = %20
  %22 = tail call fastcc i8* @z_thread_malloc() #27, !dbg !13827
  call void @llvm.dbg.value(metadata i8* %22, metadata !13801, metadata !DIExpression()), !dbg !13828
  %23 = icmp eq i8* %22, null, !dbg !13829
  br i1 %23, label %24, label %25, !dbg !13831

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 %8, metadata !13832, metadata !DIExpression()) #25, !dbg !13838
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13837, metadata !DIExpression()) #25, !dbg !13838
  call void @llvm.dbg.value(metadata i32 %8, metadata !13841, metadata !DIExpression()) #25, !dbg !13844
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !13846, !srcloc !13847
  call void @llvm.dbg.value(metadata i8* %22, metadata !13796, metadata !DIExpression()), !dbg !13804
  br label %36

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i8* %22, metadata !13801, metadata !DIExpression()), !dbg !13828
  %26 = getelementptr inbounds i8, i8* %22, i32 4, !dbg !13848
  %27 = bitcast i8* %26 to i8**, !dbg !13848
  store i8* %2, i8** %27, align 4, !dbg !13849
  %28 = bitcast i8* %22 to %struct.z_heap_bucket*, !dbg !13850
  tail call fastcc void @sys_sfnode_init(%struct.z_heap_bucket* noundef nonnull %28, i8 noundef zeroext 1) #27, !dbg !13851
  call void @llvm.dbg.value(metadata i8* %22, metadata !13796, metadata !DIExpression()), !dbg !13804
  br label %31

29:                                               ; preds = %20
  %30 = bitcast i8* %2 to %struct.z_heap_bucket*, !dbg !13852
  tail call fastcc void @sys_sfnode_init(%struct.z_heap_bucket* noundef %30, i8 noundef zeroext 0) #27, !dbg !13854
  br label %31

31:                                               ; preds = %25, %29
  %32 = phi %struct.z_heap_bucket* [ %28, %25 ], [ %30, %29 ], !dbg !13855
  call void @llvm.dbg.value(metadata i8* undef, metadata !13796, metadata !DIExpression()), !dbg !13804
  %33 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !13856
  %34 = bitcast i8* %14 to %struct.z_heap_bucket*, !dbg !13857
  tail call fastcc void @sys_sflist_insert(%struct._sflist* noundef %33, %struct.z_heap_bucket* noundef %34, %struct.z_heap_bucket* noundef %32) #27, !dbg !13858
  %35 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !13859
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %6, [1 x i32] %35) #26, !dbg !13859
  br label %36, !dbg !13860

36:                                               ; preds = %24, %31, %18
  %37 = phi i32 [ 0, %18 ], [ 0, %31 ], [ -12, %24 ], !dbg !13804
  ret i32 %37, !dbg !13861
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13862 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13866, metadata !DIExpression()), !dbg !13867
  %2 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 1, !dbg !13868
  %3 = load %struct.z_heap_bucket*, %struct.z_heap_bucket** %2, align 4, !dbg !13868
  ret %struct.z_heap_bucket* %3, !dbg !13869
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_thread_malloc() unnamed_addr #1 !dbg !13870 {
  call void @llvm.dbg.value(metadata i32 8, metadata !13873, metadata !DIExpression()), !dbg !13874
  %1 = tail call i8* @z_thread_aligned_alloc(i32 noundef 0, i32 noundef 8) #26, !dbg !13875
  ret i8* %1, !dbg !13876
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_sfnode_init(%struct.z_heap_bucket* nocapture noundef writeonly %0, i8 noundef zeroext %1) unnamed_addr #4 !dbg !13877 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !13881, metadata !DIExpression()), !dbg !13883
  call void @llvm.dbg.value(metadata i8 %1, metadata !13882, metadata !DIExpression()), !dbg !13883
  %3 = zext i8 %1 to i32, !dbg !13884
  %4 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !13885
  store i32 %3, i32* %4, align 4, !dbg !13886
  ret void, !dbg !13887
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_sflist_insert(%struct._sflist* nocapture noundef %0, %struct.z_heap_bucket* noundef %1, %struct.z_heap_bucket* noundef %2) unnamed_addr #8 !dbg !13888 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13892, metadata !DIExpression()), !dbg !13895
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !13893, metadata !DIExpression()), !dbg !13895
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %2, metadata !13894, metadata !DIExpression()), !dbg !13895
  %4 = icmp eq %struct.z_heap_bucket* %1, null, !dbg !13896
  br i1 %4, label %5, label %6, !dbg !13898

5:                                                ; preds = %3
  tail call fastcc void @sys_sflist_prepend(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %2) #27, !dbg !13899
  br label %11, !dbg !13899

6:                                                ; preds = %3
  %7 = tail call fastcc %struct.z_heap_bucket* @z_sfnode_next_peek(%struct.z_heap_bucket* noundef nonnull %1) #27, !dbg !13901
  %8 = icmp eq %struct.z_heap_bucket* %7, null, !dbg !13901
  br i1 %8, label %9, label %10, !dbg !13896

9:                                                ; preds = %6
  tail call fastcc void @sys_sflist_append(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %2) #27, !dbg !13903
  br label %11, !dbg !13903

10:                                               ; preds = %6
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef %2, %struct.z_heap_bucket* noundef nonnull %7) #27, !dbg !13905
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef nonnull %1, %struct.z_heap_bucket* noundef %2) #27, !dbg !13905
  br label %11

11:                                               ; preds = %9, %10, %5
  ret void, !dbg !13898
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_sflist_prepend(%struct._sflist* nocapture noundef %0, %struct.z_heap_bucket* noundef %1) unnamed_addr #8 !dbg !13907 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13911, metadata !DIExpression()), !dbg !13913
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !13912, metadata !DIExpression()), !dbg !13913
  %3 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %0) #27, !dbg !13914
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef %1, %struct.z_heap_bucket* noundef %3) #27, !dbg !13914
  tail call fastcc void @z_sflist_head_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %1) #27, !dbg !13914
  %4 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #27, !dbg !13915
  %5 = icmp eq %struct.z_heap_bucket* %4, null, !dbg !13915
  br i1 %5, label %6, label %8, !dbg !13914

6:                                                ; preds = %2
  %7 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %0) #27, !dbg !13917
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %7) #27, !dbg !13917
  br label %8, !dbg !13917

8:                                                ; preds = %6, %2
  ret void, !dbg !13914
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.z_heap_bucket* @z_sfnode_next_peek(%struct.z_heap_bucket* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13919 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !13923, metadata !DIExpression()), !dbg !13924
  %2 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !13925
  %3 = load i32, i32* %2, align 4, !dbg !13925
  %4 = and i32 %3, -4, !dbg !13926
  %5 = inttoptr i32 %4 to %struct.z_heap_bucket*, !dbg !13927
  ret %struct.z_heap_bucket* %5, !dbg !13928
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_sflist_append(%struct._sflist* nocapture noundef %0, %struct.z_heap_bucket* noundef %1) unnamed_addr #8 !dbg !13929 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13931, metadata !DIExpression()), !dbg !13933
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !13932, metadata !DIExpression()), !dbg !13933
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef %1, %struct.z_heap_bucket* noundef null) #27, !dbg !13934
  %3 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #27, !dbg !13935
  %4 = icmp eq %struct.z_heap_bucket* %3, null, !dbg !13935
  br i1 %4, label %5, label %6, !dbg !13934

5:                                                ; preds = %2
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %1) #27, !dbg !13937
  tail call fastcc void @z_sflist_head_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %1) #27, !dbg !13937
  br label %7, !dbg !13937

6:                                                ; preds = %2
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef nonnull %3, %struct.z_heap_bucket* noundef %1) #27, !dbg !13939
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %1) #27, !dbg !13939
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !13934
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* nocapture noundef %0, %struct.z_heap_bucket* noundef %1) unnamed_addr #8 !dbg !13941 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !13945, metadata !DIExpression()), !dbg !13948
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !13946, metadata !DIExpression()), !dbg !13948
  %3 = tail call fastcc zeroext i8 @sys_sfnode_flags_get(%struct.z_heap_bucket* noundef %0) #27, !dbg !13949
  call void @llvm.dbg.value(metadata i8 %3, metadata !13947, metadata !DIExpression()), !dbg !13948
  %4 = zext i8 %3 to i32, !dbg !13950
  %5 = ptrtoint %struct.z_heap_bucket* %1 to i32, !dbg !13951
  %6 = or i32 %4, %5, !dbg !13952
  %7 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !13953
  store i32 %6, i32* %7, align 4, !dbg !13954
  ret void, !dbg !13955
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_sflist_tail_set(%struct._sflist* nocapture noundef writeonly %0, %struct.z_heap_bucket* noundef %1) unnamed_addr #4 !dbg !13956 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13958, metadata !DIExpression()), !dbg !13960
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !13959, metadata !DIExpression()), !dbg !13960
  %3 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 1, !dbg !13961
  store %struct.z_heap_bucket* %1, %struct.z_heap_bucket** %3, align 4, !dbg !13962
  ret void, !dbg !13963
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_sflist_head_set(%struct._sflist* nocapture noundef writeonly %0, %struct.z_heap_bucket* noundef %1) unnamed_addr #4 !dbg !13964 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13966, metadata !DIExpression()), !dbg !13968
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !13967, metadata !DIExpression()), !dbg !13968
  %3 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 0, !dbg !13969
  store %struct.z_heap_bucket* %1, %struct.z_heap_bucket** %3, align 4, !dbg !13970
  ret void, !dbg !13971
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13972 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13974, metadata !DIExpression()), !dbg !13975
  %2 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 0, !dbg !13976
  %3 = load %struct.z_heap_bucket*, %struct.z_heap_bucket** %2, align 4, !dbg !13976
  ret %struct.z_heap_bucket* %3, !dbg !13977
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_queue_append(%struct.k_queue* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !13978 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13982, metadata !DIExpression()), !dbg !13984
  call void @llvm.dbg.value(metadata i8* %1, metadata !13983, metadata !DIExpression()), !dbg !13984
  %3 = tail call fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef null, i8* noundef %1, i1 noundef zeroext false, i1 noundef zeroext true) #27, !dbg !13985
  ret void, !dbg !13986
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_queue_prepend(%struct.k_queue* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !13987 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13989, metadata !DIExpression()), !dbg !13991
  call void @llvm.dbg.value(metadata i8* %1, metadata !13990, metadata !DIExpression()), !dbg !13991
  %3 = tail call fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef null, i8* noundef %1, i1 noundef zeroext false, i1 noundef zeroext false) #27, !dbg !13992
  ret void, !dbg !13993
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_queue_alloc_append(%struct.k_queue* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !13994 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13998, metadata !DIExpression()), !dbg !14001
  call void @llvm.dbg.value(metadata i8* %1, metadata !13999, metadata !DIExpression()), !dbg !14001
  %3 = tail call fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef null, i8* noundef %1, i1 noundef zeroext true, i1 noundef zeroext true) #27, !dbg !14002
  call void @llvm.dbg.value(metadata i32 %3, metadata !14000, metadata !DIExpression()), !dbg !14001
  ret i32 %3, !dbg !14003
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_queue_alloc_prepend(%struct.k_queue* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !14004 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14006, metadata !DIExpression()), !dbg !14009
  call void @llvm.dbg.value(metadata i8* %1, metadata !14007, metadata !DIExpression()), !dbg !14009
  %3 = tail call fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef null, i8* noundef %1, i1 noundef zeroext true, i1 noundef zeroext false) #27, !dbg !14010
  call void @llvm.dbg.value(metadata i32 %3, metadata !14008, metadata !DIExpression()), !dbg !14009
  ret i32 %3, !dbg !14011
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_queue_append_list(%struct.k_queue* noundef %0, i8* noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !14012 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14016, metadata !DIExpression()), !dbg !14021
  call void @llvm.dbg.value(metadata i8* %1, metadata !14017, metadata !DIExpression()), !dbg !14021
  call void @llvm.dbg.value(metadata i8* %2, metadata !14018, metadata !DIExpression()), !dbg !14021
  %4 = icmp eq i8* %1, null, !dbg !14022
  %5 = icmp eq i8* %2, null, !dbg !14022
  %6 = or i1 %4, %5, !dbg !14022
  br i1 %6, label %29, label %7, !dbg !14022

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 1, !dbg !14024
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13721, metadata !DIExpression()) #25, !dbg !14025
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14027, !srcloc !13736
  %10 = extractvalue { i32, i32 } %9, 0, !dbg !14027
  call void @llvm.dbg.value(metadata i32 %10, metadata !13733, metadata !DIExpression()) #25, !dbg !14029
  call void @llvm.dbg.value(metadata i32 undef, metadata !13734, metadata !DIExpression()) #25, !dbg !14029
  call void @llvm.dbg.value(metadata i32 %10, metadata !13727, metadata !DIExpression()) #25, !dbg !14025
  call void @llvm.dbg.value(metadata i32 %10, metadata !14019, metadata !DIExpression()), !dbg !14021
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14020, metadata !DIExpression()), !dbg !14021
  %11 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 2, !dbg !14030
  %12 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef nonnull %11) #26, !dbg !14033
  call void @llvm.dbg.value(metadata %struct.k_thread* %12, metadata !14020, metadata !DIExpression()), !dbg !14021
  call void @llvm.dbg.value(metadata %struct.k_thread* %12, metadata !14020, metadata !DIExpression()), !dbg !14021
  call void @llvm.dbg.value(metadata i8* %1, metadata !14017, metadata !DIExpression()), !dbg !14021
  %13 = icmp eq %struct.k_thread* %12, null, !dbg !14034
  br i1 %13, label %24, label %14, !dbg !14035

14:                                               ; preds = %7, %14
  %15 = phi %struct.k_thread* [ %19, %14 ], [ %12, %7 ]
  %16 = phi i8* [ %18, %14 ], [ %1, %7 ]
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !14020, metadata !DIExpression()), !dbg !14021
  call void @llvm.dbg.value(metadata i8* %16, metadata !14017, metadata !DIExpression()), !dbg !14021
  tail call fastcc void @prepare_thread_to_run(%struct.k_thread* noundef nonnull %15, i8* noundef nonnull %16) #27, !dbg !14036
  %17 = bitcast i8* %16 to i8**, !dbg !14038
  %18 = load i8*, i8** %17, align 4, !dbg !14039
  call void @llvm.dbg.value(metadata i8* %18, metadata !14017, metadata !DIExpression()), !dbg !14021
  %19 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef nonnull %11) #26, !dbg !14040
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !14020, metadata !DIExpression()), !dbg !14021
  %20 = icmp ne i8* %18, null, !dbg !14041
  %21 = icmp ne %struct.k_thread* %19, null, !dbg !14034
  %22 = select i1 %20, i1 %21, i1 false, !dbg !14034
  br i1 %22, label %14, label %23, !dbg !14035, !llvm.loop !14042

23:                                               ; preds = %14
  br i1 %20, label %24, label %27, !dbg !14044

24:                                               ; preds = %7, %23
  %25 = phi i8* [ %18, %23 ], [ %1, %7 ]
  %26 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !14045
  tail call fastcc void @sys_sflist_append_list(%struct._sflist* noundef %26, i8* noundef nonnull %25, i8* noundef %2) #27, !dbg !14048
  br label %27, !dbg !14049

27:                                               ; preds = %23, %24
  %28 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !14050
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %8, [1 x i32] %28) #26, !dbg !14050
  br label %29

29:                                               ; preds = %3, %27
  %30 = phi i32 [ 0, %27 ], [ -22, %3 ], !dbg !14021
  ret i32 %30, !dbg !14051
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_sflist_append_list(%struct._sflist* nocapture noundef %0, i8* noundef %1, i8* noundef %2) unnamed_addr #8 !dbg !14052 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !14056, metadata !DIExpression()), !dbg !14059
  call void @llvm.dbg.value(metadata i8* %1, metadata !14057, metadata !DIExpression()), !dbg !14059
  call void @llvm.dbg.value(metadata i8* %2, metadata !14058, metadata !DIExpression()), !dbg !14059
  %4 = icmp ne i8* %1, null, !dbg !14060
  %5 = icmp ne i8* %2, null, !dbg !14060
  %6 = and i1 %4, %5, !dbg !14060
  br i1 %6, label %7, label %15, !dbg !14060

7:                                                ; preds = %3
  %8 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #27, !dbg !14062
  %9 = icmp eq %struct.z_heap_bucket* %8, null, !dbg !14062
  %10 = bitcast i8* %1 to %struct.z_heap_bucket*, !dbg !14065
  br i1 %9, label %11, label %12, !dbg !14066

11:                                               ; preds = %7
  tail call fastcc void @z_sflist_head_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef nonnull %10) #27, !dbg !14067
  br label %13, !dbg !14067

12:                                               ; preds = %7
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef nonnull %8, %struct.z_heap_bucket* noundef nonnull %10) #27, !dbg !14069
  br label %13

13:                                               ; preds = %12, %11
  %14 = bitcast i8* %2 to %struct.z_heap_bucket*, !dbg !14066
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef nonnull %14) #27, !dbg !14066
  br label %15, !dbg !14066

15:                                               ; preds = %13, %3
  ret void, !dbg !14071
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_queue_merge_slist(%struct.k_queue* noundef %0, %struct._slist* nocapture noundef %1) local_unnamed_addr #1 !dbg !14072 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14088, metadata !DIExpression()), !dbg !14091
  call void @llvm.dbg.value(metadata %struct._slist* %1, metadata !14089, metadata !DIExpression()), !dbg !14091
  %3 = tail call fastcc zeroext i1 @sys_slist_is_empty.135(%struct._slist* noundef %1) #27, !dbg !14092
  br i1 %3, label %13, label %4, !dbg !14094

4:                                                ; preds = %2
  %5 = bitcast %struct._slist* %1 to i8**, !dbg !14095
  %6 = load i8*, i8** %5, align 4, !dbg !14095
  %7 = getelementptr inbounds %struct._slist, %struct._slist* %1, i32 0, i32 1, !dbg !14096
  %8 = bitcast %struct._snode** %7 to i8**, !dbg !14096
  %9 = load i8*, i8** %8, align 4, !dbg !14096
  %10 = tail call i32 @k_queue_append_list(%struct.k_queue* noundef %0, i8* noundef %6, i8* noundef %9) #27, !dbg !14097
  call void @llvm.dbg.value(metadata i32 %10, metadata !14090, metadata !DIExpression()), !dbg !14091
  %11 = icmp eq i32 %10, 0, !dbg !14098
  br i1 %11, label %12, label %13, !dbg !14100

12:                                               ; preds = %4
  tail call fastcc void @sys_slist_init(%struct._slist* noundef nonnull %1) #27, !dbg !14101
  br label %13, !dbg !14102

13:                                               ; preds = %4, %2, %12
  %14 = phi i32 [ 0, %12 ], [ -22, %2 ], [ %10, %4 ], !dbg !14091
  ret i32 %14, !dbg !14103
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty.135(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14104 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !14108, metadata !DIExpression()), !dbg !14109
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head.136(%struct._slist* noundef %0) #27, !dbg !14110
  %3 = icmp eq %struct._snode* %2, null, !dbg !14110
  ret i1 %3, !dbg !14110
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_slist_init(%struct._slist* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !14111 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !14115, metadata !DIExpression()), !dbg !14116
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !14117
  store %struct._snode* null, %struct._snode** %2, align 4, !dbg !14118
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !14119
  store %struct._snode* null, %struct._snode** %3, align 4, !dbg !14120
  ret void, !dbg !14121
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head.136(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14122 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !14126, metadata !DIExpression()), !dbg !14127
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !14128
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !14128
  ret %struct._snode* %3, !dbg !14129
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_impl_k_queue_get(%struct.k_queue* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !14130 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14139, metadata !DIExpression()), !dbg !14146
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14138, metadata !DIExpression()), !dbg !14146
  %3 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 1, !dbg !14147
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13721, metadata !DIExpression()) #25, !dbg !14148
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14150, !srcloc !13736
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !14150
  call void @llvm.dbg.value(metadata i32 %5, metadata !13733, metadata !DIExpression()) #25, !dbg !14152
  call void @llvm.dbg.value(metadata i32 undef, metadata !13734, metadata !DIExpression()) #25, !dbg !14152
  call void @llvm.dbg.value(metadata i32 %5, metadata !13727, metadata !DIExpression()) #25, !dbg !14148
  call void @llvm.dbg.value(metadata i32 %5, metadata !14140, metadata !DIExpression()), !dbg !14146
  %6 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !14153
  %7 = tail call fastcc zeroext i1 @sys_sflist_is_empty(%struct._sflist* noundef %6) #27, !dbg !14153
  br i1 %7, label %11, label %8, !dbg !14154, !prof !14155

8:                                                ; preds = %2
  %9 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_get_not_empty(%struct._sflist* noundef %6) #27, !dbg !14156
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %9, metadata !14142, metadata !DIExpression()), !dbg !14157
  %10 = tail call i8* @z_queue_node_peek(%struct.z_heap_bucket* noundef %9, i1 noundef zeroext true) #27, !dbg !14158
  call void @llvm.dbg.value(metadata i8* %10, metadata !14141, metadata !DIExpression()), !dbg !14146
  call void @llvm.dbg.value(metadata i32 %5, metadata !13832, metadata !DIExpression()) #25, !dbg !14159
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13837, metadata !DIExpression()) #25, !dbg !14159
  call void @llvm.dbg.value(metadata i32 %5, metadata !13841, metadata !DIExpression()) #25, !dbg !14161
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #25, !dbg !14163, !srcloc !13847
  br label %24

11:                                               ; preds = %2
  %12 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %12, metadata !14139, metadata !DIExpression()), !dbg !14146
  %13 = icmp eq i64 %12, 0, !dbg !14164
  br i1 %13, label %14, label %15, !dbg !14166

14:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %5, metadata !13832, metadata !DIExpression()) #25, !dbg !14167
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13837, metadata !DIExpression()) #25, !dbg !14167
  call void @llvm.dbg.value(metadata i32 %5, metadata !13841, metadata !DIExpression()) #25, !dbg !14170
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #25, !dbg !14172, !srcloc !13847
  br label %24, !dbg !14173

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 2, !dbg !14174
  %17 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !14175
  %18 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %3, [1 x i32] %17, %union.anon* noundef nonnull %16, [1 x i64] %1) #26, !dbg !14175
  call void @llvm.dbg.value(metadata i32 %18, metadata !14145, metadata !DIExpression()), !dbg !14146
  %19 = icmp eq i32 %18, 0, !dbg !14176
  br i1 %19, label %20, label %24, !dbg !14177

20:                                               ; preds = %15
  %21 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14178
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %21, i32 0, i32 0, i32 6, !dbg !14179
  %23 = load i8*, i8** %22, align 4, !dbg !14179
  br label %24, !dbg !14177

24:                                               ; preds = %20, %15, %14, %8
  %25 = phi i8* [ %10, %8 ], [ null, %14 ], [ %23, %20 ], [ null, %15 ], !dbg !14146
  ret i8* %25, !dbg !14180
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_sflist_is_empty(%struct._sflist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14181 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !14185, metadata !DIExpression()), !dbg !14186
  %2 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %0) #27, !dbg !14187
  %3 = icmp eq %struct.z_heap_bucket* %2, null, !dbg !14187
  ret i1 %3, !dbg !14187
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc %struct.z_heap_bucket* @sys_sflist_get_not_empty(%struct._sflist* nocapture noundef %0) unnamed_addr #8 !dbg !14188 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !14190, metadata !DIExpression()), !dbg !14192
  %2 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %0) #27, !dbg !14193
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %2, metadata !14191, metadata !DIExpression()), !dbg !14192
  %3 = tail call fastcc %struct.z_heap_bucket* @z_sfnode_next_peek(%struct.z_heap_bucket* noundef %2) #27, !dbg !14193
  tail call fastcc void @z_sflist_head_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %3) #27, !dbg !14193
  %4 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #27, !dbg !14194
  %5 = icmp eq %struct.z_heap_bucket* %4, %2, !dbg !14194
  br i1 %5, label %6, label %8, !dbg !14193

6:                                                ; preds = %1
  %7 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %0) #27, !dbg !14196
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %7) #27, !dbg !14196
  br label %8, !dbg !14196

8:                                                ; preds = %6, %1
  ret %struct.z_heap_bucket* %2, !dbg !14193
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local zeroext i1 @k_queue_remove(%struct.k_queue* nocapture noundef %0, i8* noundef %1) local_unnamed_addr #14 !dbg !14198 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14202, metadata !DIExpression()), !dbg !14205
  call void @llvm.dbg.value(metadata i8* %1, metadata !14203, metadata !DIExpression()), !dbg !14205
  %3 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !14206
  %4 = bitcast i8* %1 to %struct.z_heap_bucket*, !dbg !14207
  %5 = tail call fastcc zeroext i1 @sys_sflist_find_and_remove(%struct._sflist* noundef %3, %struct.z_heap_bucket* noundef %4) #27, !dbg !14208
  call void @llvm.dbg.value(metadata i1 %5, metadata !14204, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14205
  ret i1 %5, !dbg !14209
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_sflist_find_and_remove(%struct._sflist* nocapture noundef %0, %struct.z_heap_bucket* noundef %1) unnamed_addr #14 !dbg !14210 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !14214, metadata !DIExpression()), !dbg !14218
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !14215, metadata !DIExpression()), !dbg !14218
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* null, metadata !14216, metadata !DIExpression()), !dbg !14218
  %3 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %0) #27, !dbg !14219
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %3, metadata !14217, metadata !DIExpression()), !dbg !14218
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* null, metadata !14216, metadata !DIExpression()), !dbg !14218
  %4 = icmp eq %struct.z_heap_bucket* %3, null, !dbg !14221
  br i1 %4, label %15, label %5, !dbg !14219

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %3, metadata !14217, metadata !DIExpression()), !dbg !14218
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* null, metadata !14216, metadata !DIExpression()), !dbg !14218
  %6 = icmp eq %struct.z_heap_bucket* %3, %1, !dbg !14223
  br i1 %6, label %9, label %11, !dbg !14226

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %13, metadata !14217, metadata !DIExpression()), !dbg !14218
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %12, metadata !14216, metadata !DIExpression()), !dbg !14218
  %8 = icmp eq %struct.z_heap_bucket* %13, %1, !dbg !14223
  br i1 %8, label %9, label %11, !dbg !14226, !llvm.loop !14227

9:                                                ; preds = %7, %5
  %10 = phi %struct.z_heap_bucket* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_sflist_remove(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %10, %struct.z_heap_bucket* noundef %1) #27, !dbg !14228
  br label %15, !dbg !14228

11:                                               ; preds = %5, %7
  %12 = phi %struct.z_heap_bucket* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %12, metadata !14217, metadata !DIExpression()), !dbg !14218
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %12, metadata !14216, metadata !DIExpression()), !dbg !14218
  %13 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_next(%struct.z_heap_bucket* noundef nonnull %12) #27, !dbg !14221
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %13, metadata !14217, metadata !DIExpression()), !dbg !14218
  %14 = icmp eq %struct.z_heap_bucket* %13, null, !dbg !14221
  br i1 %14, label %15, label %7, !dbg !14219, !llvm.loop !14227

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !14230
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_sflist_remove(%struct._sflist* nocapture noundef %0, %struct.z_heap_bucket* noundef %1, %struct.z_heap_bucket* noundef %2) unnamed_addr #8 !dbg !14231 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !14233, metadata !DIExpression()), !dbg !14236
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !14234, metadata !DIExpression()), !dbg !14236
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %2, metadata !14235, metadata !DIExpression()), !dbg !14236
  %4 = icmp eq %struct.z_heap_bucket* %1, null, !dbg !14237
  %5 = tail call fastcc %struct.z_heap_bucket* @z_sfnode_next_peek(%struct.z_heap_bucket* noundef %2) #27, !dbg !14239
  br i1 %4, label %6, label %11, !dbg !14240

6:                                                ; preds = %3
  tail call fastcc void @z_sflist_head_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %5) #27, !dbg !14241
  %7 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #27, !dbg !14243
  %8 = icmp eq %struct.z_heap_bucket* %7, %2, !dbg !14243
  br i1 %8, label %9, label %15, !dbg !14241

9:                                                ; preds = %6
  %10 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %0) #27, !dbg !14245
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %10) #27, !dbg !14245
  br label %15, !dbg !14245

11:                                               ; preds = %3
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef nonnull %1, %struct.z_heap_bucket* noundef %5) #27, !dbg !14247
  %12 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #27, !dbg !14249
  %13 = icmp eq %struct.z_heap_bucket* %12, %2, !dbg !14249
  br i1 %13, label %14, label %15, !dbg !14247

14:                                               ; preds = %11
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef nonnull %1) #27, !dbg !14251
  br label %15, !dbg !14251

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef %2, %struct.z_heap_bucket* noundef null) #27, !dbg !14240
  ret void, !dbg !14240
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.z_heap_bucket* @sys_sflist_peek_next(%struct.z_heap_bucket* noundef readonly %0) unnamed_addr #5 !dbg !14253 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !14255, metadata !DIExpression()), !dbg !14256
  %2 = icmp eq %struct.z_heap_bucket* %0, null, !dbg !14257
  br i1 %2, label %5, label %3, !dbg !14257

3:                                                ; preds = %1
  %4 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_next_no_check(%struct.z_heap_bucket* noundef nonnull %0) #27, !dbg !14257
  br label %5, !dbg !14257

5:                                                ; preds = %1, %3
  %6 = phi %struct.z_heap_bucket* [ %4, %3 ], [ null, %1 ], !dbg !14257
  ret %struct.z_heap_bucket* %6, !dbg !14257
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.z_heap_bucket* @sys_sflist_peek_next_no_check(%struct.z_heap_bucket* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14258 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !14260, metadata !DIExpression()), !dbg !14261
  %2 = tail call fastcc %struct.z_heap_bucket* @z_sfnode_next_peek(%struct.z_heap_bucket* noundef %0) #27, !dbg !14262
  ret %struct.z_heap_bucket* %2, !dbg !14262
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_queue_unique_append(%struct.k_queue* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !14263 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14265, metadata !DIExpression()), !dbg !14268
  call void @llvm.dbg.value(metadata i8* %1, metadata !14266, metadata !DIExpression()), !dbg !14268
  %3 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !14269
  %4 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %3) #27, !dbg !14269
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %4, metadata !14267, metadata !DIExpression()), !dbg !14268
  %5 = icmp eq %struct.z_heap_bucket* %4, null, !dbg !14271
  br i1 %5, label %14, label %6, !dbg !14269

6:                                                ; preds = %2
  %7 = bitcast i8* %1 to %struct.z_heap_bucket*
  br label %8, !dbg !14269

8:                                                ; preds = %6, %11
  %9 = phi %struct.z_heap_bucket* [ %4, %6 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %9, metadata !14267, metadata !DIExpression()), !dbg !14268
  %10 = icmp eq %struct.z_heap_bucket* %9, %7, !dbg !14273
  br i1 %10, label %15, label %11, !dbg !14276

11:                                               ; preds = %8
  %12 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_next(%struct.z_heap_bucket* noundef nonnull %9) #27, !dbg !14271
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %12, metadata !14267, metadata !DIExpression()), !dbg !14268
  %13 = icmp eq %struct.z_heap_bucket* %12, null, !dbg !14271
  br i1 %13, label %14, label %8, !dbg !14269, !llvm.loop !14277

14:                                               ; preds = %11, %2
  tail call void @k_queue_append(%struct.k_queue* noundef %0, i8* noundef %1) #27, !dbg !14279
  br label %15, !dbg !14280

15:                                               ; preds = %8, %14
  %16 = phi i1 [ true, %14 ], [ false, %8 ]
  ret i1 %16, !dbg !14281
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_impl_k_queue_peek_head(%struct.k_queue* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !14282 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14286, metadata !DIExpression()), !dbg !14288
  %2 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !14289
  %3 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %2) #27, !dbg !14290
  %4 = tail call i8* @z_queue_node_peek(%struct.z_heap_bucket* noundef %3, i1 noundef zeroext false) #27, !dbg !14291
  call void @llvm.dbg.value(metadata i8* %4, metadata !14287, metadata !DIExpression()), !dbg !14288
  ret i8* %4, !dbg !14292
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_impl_k_queue_peek_tail(%struct.k_queue* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !14293 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14295, metadata !DIExpression()), !dbg !14297
  %2 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !14298
  %3 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %2) #27, !dbg !14299
  %4 = tail call i8* @z_queue_node_peek(%struct.z_heap_bucket* noundef %3, i1 noundef zeroext false) #27, !dbg !14300
  call void @llvm.dbg.value(metadata i8* %4, metadata !14296, metadata !DIExpression()), !dbg !14297
  ret i8* %4, !dbg !14301
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !14302 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14306, metadata !DIExpression()), !dbg !14310
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14307, metadata !DIExpression()), !dbg !14310
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14311
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !14311
  %5 = load i8, i8* %4, align 2, !dbg !14311
  call void @llvm.dbg.value(metadata i8 %5, metadata !14308, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14310
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !14312
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !14312
  %8 = load i8, i8* %7, align 2, !dbg !14312
  call void @llvm.dbg.value(metadata i8 %8, metadata !14309, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14310
  %9 = icmp eq i8 %8, %5, !dbg !14313
  %10 = sext i8 %5 to i32, !dbg !14315
  %11 = sext i8 %8 to i32, !dbg !14315
  %12 = sub nsw i32 %11, %10, !dbg !14315
  %13 = select i1 %9, i32 0, i32 %12, !dbg !14315
  ret i32 %13, !dbg !14316
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !14317 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14321, metadata !DIExpression()), !dbg !14322
  %2 = tail call fastcc i32 @slice_time() #27, !dbg !14323
  %3 = icmp eq i32 %2, 0, !dbg !14325
  br i1 %3, label %8, label %4, !dbg !14326

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #26, !dbg !14327
  %6 = add i32 %5, %2, !dbg !14329
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14330
  %7 = tail call fastcc i32 @slice_time() #27, !dbg !14331
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #26, !dbg !14332
  br label %8, !dbg !14333

8:                                                ; preds = %4, %1
  ret void, !dbg !14334
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #5 !dbg !14335 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14339, metadata !DIExpression()), !dbg !14341
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !14342
  call void @llvm.dbg.value(metadata i32 %1, metadata !14340, metadata !DIExpression()), !dbg !14341
  ret i32 %1, !dbg !14343
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14344 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14348, metadata !DIExpression()), !dbg !14357
  call void @llvm.dbg.value(metadata i32 %1, metadata !14349, metadata !DIExpression()), !dbg !14357
  call void @llvm.dbg.value(metadata i32 0, metadata !14350, metadata !DIExpression()), !dbg !14358
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14359, metadata !DIExpression()) #25, !dbg !14366
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14368, !srcloc !14374
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !14368
  call void @llvm.dbg.value(metadata i32 %4, metadata !14371, metadata !DIExpression()) #25, !dbg !14375
  call void @llvm.dbg.value(metadata i32 undef, metadata !14372, metadata !DIExpression()) #25, !dbg !14375
  call void @llvm.dbg.value(metadata i32 %4, metadata !14365, metadata !DIExpression()) #25, !dbg !14366
  call void @llvm.dbg.value(metadata i32 %4, metadata !14356, metadata !DIExpression()), !dbg !14358
  call void @llvm.dbg.value(metadata i32 undef, metadata !14350, metadata !DIExpression()), !dbg !14358
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14376
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #27, !dbg !14379
  %6 = icmp sgt i32 %0, 0, !dbg !14380
  %7 = icmp sgt i32 %5, 2, !dbg !14382
  %8 = select i1 %7, i32 %5, i32 2, !dbg !14382
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !14382
  store i32 %9, i32* @slice_ticks, align 4, !dbg !14383
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !14384
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #27, !dbg !14385
  call void @llvm.dbg.value(metadata i32 %4, metadata !14386, metadata !DIExpression()) #25, !dbg !14392
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14391, metadata !DIExpression()) #25, !dbg !14392
  call void @llvm.dbg.value(metadata i32 %4, metadata !14394, metadata !DIExpression()) #25, !dbg !14397
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !14399, !srcloc !14400
  call void @llvm.dbg.value(metadata i32 1, metadata !14350, metadata !DIExpression()), !dbg !14358
  call void @llvm.dbg.value(metadata i32 undef, metadata !14350, metadata !DIExpression()), !dbg !14358
  ret void, !dbg !14401
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #11 !dbg !14402 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14404, metadata !DIExpression()), !dbg !14405
  call void @llvm.dbg.value(metadata i32 %0, metadata !14406, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14421
  call void @llvm.dbg.value(metadata i32 1000, metadata !14409, metadata !DIExpression()), !dbg !14421
  call void @llvm.dbg.value(metadata i32 10000, metadata !14410, metadata !DIExpression()), !dbg !14421
  call void @llvm.dbg.value(metadata i8 1, metadata !14411, metadata !DIExpression()), !dbg !14421
  call void @llvm.dbg.value(metadata i1 true, metadata !14412, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14421
  call void @llvm.dbg.value(metadata i1 true, metadata !14413, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14421
  call void @llvm.dbg.value(metadata i8 0, metadata !14414, metadata !DIExpression()), !dbg !14421
  call void @llvm.dbg.value(metadata i1 true, metadata !14415, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14421
  call void @llvm.dbg.value(metadata i1 false, metadata !14416, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14421
  call void @llvm.dbg.value(metadata i64 0, metadata !14417, metadata !DIExpression()), !dbg !14421
  call void @llvm.dbg.value(metadata i64 0, metadata !14417, metadata !DIExpression()), !dbg !14421
  %2 = mul i32 %0, 10, !dbg !14423
  ret i32 %2, !dbg !14429
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !14430 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14432, metadata !DIExpression()), !dbg !14434
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14359, metadata !DIExpression()) #25, !dbg !14435
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14437, !srcloc !14374
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14437
  call void @llvm.dbg.value(metadata i32 %3, metadata !14371, metadata !DIExpression()) #25, !dbg !14439
  call void @llvm.dbg.value(metadata i32 undef, metadata !14372, metadata !DIExpression()) #25, !dbg !14439
  call void @llvm.dbg.value(metadata i32 %3, metadata !14365, metadata !DIExpression()) #25, !dbg !14435
  call void @llvm.dbg.value(metadata i32 %3, metadata !14433, metadata !DIExpression()), !dbg !14434
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !14440
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14442
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !14443
  br i1 %6, label %7, label %8, !dbg !14444

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #27, !dbg !14445
  call void @llvm.dbg.value(metadata i32 %3, metadata !14386, metadata !DIExpression()) #25, !dbg !14447
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14391, metadata !DIExpression()) #25, !dbg !14447
  call void @llvm.dbg.value(metadata i32 %3, metadata !14394, metadata !DIExpression()) #25, !dbg !14449
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !14451, !srcloc !14400
  br label %24, !dbg !14452

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !14453
  %9 = tail call fastcc i32 @slice_time() #27, !dbg !14454
  %10 = icmp eq i32 %9, 0, !dbg !14454
  br i1 %10, label %21, label %11, !dbg !14456

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #27, !dbg !14457
  br i1 %12, label %13, label %21, !dbg !14458

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14459
  %15 = icmp sgt i32 %14, %0, !dbg !14462
  br i1 %15, label %19, label %16, !dbg !14463

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !14464
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #27, !dbg !14464
  call void @llvm.dbg.value(metadata i32 %18, metadata !14433, metadata !DIExpression()), !dbg !14434
  br label %22, !dbg !14466

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !14467
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14467
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14469
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !14434
  call void @llvm.dbg.value(metadata i32 %23, metadata !14433, metadata !DIExpression()), !dbg !14434
  call void @llvm.dbg.value(metadata i32 %23, metadata !14386, metadata !DIExpression()) #25, !dbg !14471
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14391, metadata !DIExpression()) #25, !dbg !14471
  call void @llvm.dbg.value(metadata i32 %23, metadata !14394, metadata !DIExpression()) #25, !dbg !14473
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #25, !dbg !14475, !srcloc !14400
  br label %24, !dbg !14476

24:                                               ; preds = %22, %7
  ret void, !dbg !14476
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #5 !dbg !14477 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14481, metadata !DIExpression()), !dbg !14483
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #27, !dbg !14484
  %3 = icmp eq i32 %2, 0, !dbg !14484
  br i1 %3, label %16, label %4, !dbg !14485

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #27, !dbg !14486
  br i1 %5, label %16, label %6, !dbg !14487

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14488
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !14488
  %9 = load i8, i8* %8, align 2, !dbg !14488
  %10 = sext i8 %9 to i32, !dbg !14489
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !14490
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #27, !dbg !14491
  br i1 %12, label %16, label %13, !dbg !14492

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #27, !dbg !14493
  %15 = xor i1 %14, true, !dbg !14494
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !14483
  call void @llvm.dbg.value(metadata i1 %17, metadata !14482, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14483
  ret i1 %17, !dbg !14495
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !14496 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14500, metadata !DIExpression()), !dbg !14502
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14503
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14501, metadata !DIExpression()), !dbg !14502
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #27, !dbg !14504
  br i1 %3, label %5, label %4, !dbg !14506

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #27, !dbg !14507
  br label %5, !dbg !14509

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !14500, metadata !DIExpression()), !dbg !14502
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #27, !dbg !14510
  ret i32 %6, !dbg !14511
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14512 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14514, metadata !DIExpression()), !dbg !14516
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14517
  %3 = load i8, i8* %2, align 1, !dbg !14517
  call void @llvm.dbg.value(metadata i8 %3, metadata !14515, metadata !DIExpression()), !dbg !14516
  %4 = and i8 %3, 31, !dbg !14518
  %5 = icmp ne i8 %4, 0, !dbg !14519
  ret i1 %5, !dbg !14520
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14521 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14523, metadata !DIExpression()), !dbg !14524
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #27, !dbg !14525
  br i1 %2, label %3, label %7, !dbg !14527

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14528, metadata !DIExpression()) #25, !dbg !14531
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14534
  %5 = load i8, i8* %4, align 1, !dbg !14535
  %6 = and i8 %5, 127, !dbg !14535
  store i8 %6, i8* %4, align 1, !dbg !14535
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14536, metadata !DIExpression()) #25, !dbg !14539
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !14543
  br label %7, !dbg !14544

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14545, metadata !DIExpression()) #25, !dbg !14548
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14550
  %9 = load i8, i8* %8, align 1, !dbg !14551
  %10 = or i8 %9, -128, !dbg !14551
  store i8 %10, i8* %8, align 1, !dbg !14551
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14552, metadata !DIExpression()) #25, !dbg !14555
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14559, metadata !DIExpression()) #25, !dbg !14567
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14565, metadata !DIExpression()) #25, !dbg !14567
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !14569
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !14566, metadata !DIExpression()) #25, !dbg !14567
  %12 = icmp eq %struct._dnode* %11, null, !dbg !14571
  br i1 %12, label %23, label %13, !dbg !14569

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !14566, metadata !DIExpression()) #25, !dbg !14567
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !14573
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !14566, metadata !DIExpression()) #25, !dbg !14567
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #26, !dbg !14574
  %17 = icmp sgt i32 %16, 0, !dbg !14577
  br i1 %17, label %18, label %20, !dbg !14578

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14579
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #26, !dbg !14581
  br label %25, !dbg !14582

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #26, !dbg !14571
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !14566, metadata !DIExpression()) #25, !dbg !14567
  %22 = icmp eq %struct._dnode* %21, null, !dbg !14571
  br i1 %22, label %23, label %13, !dbg !14569, !llvm.loop !14583

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14585
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #26, !dbg !14586
  br label %25, !dbg !14587

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14588
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !14589
  %28 = zext i1 %27 to i32, !dbg !14589
  tail call fastcc void @update_cache(i32 noundef %28) #27, !dbg !14590
  ret void, !dbg !14591
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14592 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14594, metadata !DIExpression()), !dbg !14595
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #27, !dbg !14596
  ret i1 %2, !dbg !14597
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #8 !dbg !14598 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !14600, metadata !DIExpression()), !dbg !14602
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14601, metadata !DIExpression()), !dbg !14602
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !14603
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #27, !dbg !14604
  ret void, !dbg !14605
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #5 !dbg !14606 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14610, metadata !DIExpression()), !dbg !14611
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #27, !dbg !14612
  br i1 %2, label %6, label %3, !dbg !14612

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14613
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14613
  br label %6, !dbg !14612

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !14612
  ret %struct._dnode* %7, !dbg !14614
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !14615 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14619, metadata !DIExpression()), !dbg !14623
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14620, metadata !DIExpression()), !dbg !14623
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14624
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14624
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14621, metadata !DIExpression()), !dbg !14623
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14625
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !14626
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14627
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !14628
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14629
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14630
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14631
  ret void, !dbg !14632
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !14633 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14637, metadata !DIExpression()), !dbg !14639
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14638, metadata !DIExpression()), !dbg !14639
  %3 = icmp eq %struct._dnode* %1, null, !dbg !14640
  br i1 %3, label %6, label %4, !dbg !14641

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #27, !dbg !14642
  br label %6, !dbg !14641

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !14641
  ret %struct._dnode* %7, !dbg !14643
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !14644 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14648, metadata !DIExpression()), !dbg !14651
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14649, metadata !DIExpression()), !dbg !14651
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14652
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14652
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14650, metadata !DIExpression()), !dbg !14651
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14653
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !14654
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14655
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !14656
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14657
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14658
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14659
  ret void, !dbg !14660
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !14661 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14663, metadata !DIExpression()), !dbg !14665
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !14666
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14673, metadata !DIExpression()) #25, !dbg !14675
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14676
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !14677
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !14677
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14664, metadata !DIExpression()), !dbg !14665
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14678, metadata !DIExpression()) #25, !dbg !14684
  call void @llvm.dbg.value(metadata i32 %0, metadata !14683, metadata !DIExpression()) #25, !dbg !14684
  %6 = icmp eq i32 %0, 0, !dbg !14687
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14689
  br i1 %6, label %8, label %15, !dbg !14690

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #26, !dbg !14691
  br i1 %9, label %15, label %10, !dbg !14693

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #26, !dbg !14694
  br i1 %11, label %15, label %12, !dbg !14696

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #26, !dbg !14697
  %14 = icmp eq i32 %13, 0, !dbg !14697
  br i1 %14, label %18, label %15, !dbg !14699

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !14700
  br i1 %16, label %18, label %17, !dbg !14703

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #27, !dbg !14704
  br label %18, !dbg !14706

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !14689
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14689
  ret void, !dbg !14707
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #5 !dbg !14708 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14712, metadata !DIExpression()), !dbg !14715
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14713, metadata !DIExpression()), !dbg !14715
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #27, !dbg !14716
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !14714, metadata !DIExpression()), !dbg !14715
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14713, metadata !DIExpression()), !dbg !14715
  ret %struct.k_thread* %3, !dbg !14717
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14718 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14720, metadata !DIExpression()), !dbg !14721
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14722
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #27, !dbg !14723
  %4 = xor i1 %3, true, !dbg !14724
  ret i1 %4, !dbg !14725
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14726 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14728, metadata !DIExpression()), !dbg !14729
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !14730
  %3 = load i16, i16* %2, align 2, !dbg !14730
  %4 = icmp ult i16 %3, 128, !dbg !14731
  %5 = zext i1 %4 to i32, !dbg !14731
  ret i32 %5, !dbg !14732
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14733 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14739, metadata !DIExpression()), !dbg !14740
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14741
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #27, !dbg !14742
  %4 = xor i1 %3, true, !dbg !14743
  ret i1 %4, !dbg !14744
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14745 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14751, metadata !DIExpression()), !dbg !14752
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14753
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14753
  %4 = icmp ne %struct._dnode* %3, null, !dbg !14754
  ret i1 %4, !dbg !14755
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !14756 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14758, metadata !DIExpression()), !dbg !14760
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14759, metadata !DIExpression()), !dbg !14760
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14761
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14761
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !14762
  br i1 %5, label %9, label %6, !dbg !14763

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14764
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !14764
  br label %9, !dbg !14763

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !14763
  ret %struct._dnode* %10, !dbg !14765
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !14766 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14770, metadata !DIExpression()), !dbg !14771
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14772
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14772
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !14773
  ret i1 %4, !dbg !14774
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #8 !dbg !14775 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14779, metadata !DIExpression()), !dbg !14782
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14783
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14783
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14780, metadata !DIExpression()), !dbg !14782
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14784
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14784
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !14781, metadata !DIExpression()), !dbg !14782
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !14785
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !14786
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !14787
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !14788
  tail call fastcc void @sys_dnode_init.139(%struct._dnode* noundef %0) #27, !dbg !14789
  ret void, !dbg !14790
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.139(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !14791 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14793, metadata !DIExpression()), !dbg !14794
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14795
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14796
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14797
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14798
  ret void, !dbg !14799
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14800 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14804, metadata !DIExpression()), !dbg !14806
  call void @llvm.dbg.value(metadata i32 128, metadata !14805, metadata !DIExpression()), !dbg !14806
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14807
  %3 = load i8, i8* %2, align 1, !dbg !14807
  %4 = icmp slt i8 %3, 0, !dbg !14808
  ret i1 %4, !dbg !14809
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !14810 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14814, metadata !DIExpression()), !dbg !14816
  call void @llvm.dbg.value(metadata i32 %1, metadata !14815, metadata !DIExpression()), !dbg !14816
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #27, !dbg !14817
  ret i1 %3, !dbg !14818
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #11 !dbg !14819 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14821, metadata !DIExpression()), !dbg !14822
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !14823
  ret i1 %2, !dbg !14824
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !14825 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14827, metadata !DIExpression()), !dbg !14829
  call void @llvm.dbg.value(metadata i32 %1, metadata !14828, metadata !DIExpression()), !dbg !14829
  %3 = icmp slt i32 %0, %1, !dbg !14830
  ret i1 %3, !dbg !14831
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14832 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14834, metadata !DIExpression()), !dbg !14838
  call void @llvm.dbg.value(metadata i32 0, metadata !14835, metadata !DIExpression()), !dbg !14839
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14359, metadata !DIExpression()) #25, !dbg !14840
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14842, !srcloc !14374
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14842
  call void @llvm.dbg.value(metadata i32 %3, metadata !14371, metadata !DIExpression()) #25, !dbg !14844
  call void @llvm.dbg.value(metadata i32 undef, metadata !14372, metadata !DIExpression()) #25, !dbg !14844
  call void @llvm.dbg.value(metadata i32 %3, metadata !14365, metadata !DIExpression()) #25, !dbg !14840
  call void @llvm.dbg.value(metadata i32 %3, metadata !14837, metadata !DIExpression()), !dbg !14839
  call void @llvm.dbg.value(metadata i32 undef, metadata !14835, metadata !DIExpression()), !dbg !14839
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #27, !dbg !14845
  call void @llvm.dbg.value(metadata i32 %3, metadata !14386, metadata !DIExpression()) #25, !dbg !14850
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14391, metadata !DIExpression()) #25, !dbg !14850
  call void @llvm.dbg.value(metadata i32 %3, metadata !14394, metadata !DIExpression()) #25, !dbg !14852
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !14854, !srcloc !14400
  call void @llvm.dbg.value(metadata i32 1, metadata !14835, metadata !DIExpression()), !dbg !14839
  call void @llvm.dbg.value(metadata i32 undef, metadata !14835, metadata !DIExpression()), !dbg !14839
  ret void, !dbg !14855
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14856 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14858, metadata !DIExpression()), !dbg !14859
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #27, !dbg !14860
  br i1 %2, label %24, label %3, !dbg !14862

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #27, !dbg !14863
  br i1 %4, label %5, label %24, !dbg !14864

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14545, metadata !DIExpression()) #25, !dbg !14865
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14868
  %7 = load i8, i8* %6, align 1, !dbg !14869
  %8 = or i8 %7, -128, !dbg !14869
  store i8 %8, i8* %6, align 1, !dbg !14869
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14552, metadata !DIExpression()) #25, !dbg !14870
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14559, metadata !DIExpression()) #25, !dbg !14872
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14565, metadata !DIExpression()) #25, !dbg !14872
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !14874
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !14566, metadata !DIExpression()) #25, !dbg !14872
  %10 = icmp eq %struct._dnode* %9, null, !dbg !14875
  br i1 %10, label %21, label %11, !dbg !14874

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !14566, metadata !DIExpression()) #25, !dbg !14872
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !14876
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14566, metadata !DIExpression()) #25, !dbg !14872
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #26, !dbg !14877
  %15 = icmp sgt i32 %14, 0, !dbg !14878
  br i1 %15, label %16, label %18, !dbg !14879

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14880
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #26, !dbg !14881
  br label %23, !dbg !14882

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #26, !dbg !14875
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !14566, metadata !DIExpression()) #25, !dbg !14872
  %20 = icmp eq %struct._dnode* %19, null, !dbg !14875
  br i1 %20, label %21, label %11, !dbg !14874, !llvm.loop !14883

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14885
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #26, !dbg !14886
  br label %23, !dbg !14887

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #27, !dbg !14888
  br label %24, !dbg !14889

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !14890
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14891 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14893, metadata !DIExpression()), !dbg !14894
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #27, !dbg !14895
  br i1 %2, label %6, label %3, !dbg !14896

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #27, !dbg !14897
  %5 = xor i1 %4, true, !dbg !14896
  br label %6, !dbg !14896

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !14898
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14899 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14901, metadata !DIExpression()), !dbg !14905
  call void @llvm.dbg.value(metadata i32 0, metadata !14902, metadata !DIExpression()), !dbg !14906
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14359, metadata !DIExpression()) #25, !dbg !14907
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14909, !srcloc !14374
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14909
  call void @llvm.dbg.value(metadata i32 %3, metadata !14371, metadata !DIExpression()) #25, !dbg !14911
  call void @llvm.dbg.value(metadata i32 undef, metadata !14372, metadata !DIExpression()) #25, !dbg !14911
  call void @llvm.dbg.value(metadata i32 %3, metadata !14365, metadata !DIExpression()) #25, !dbg !14907
  call void @llvm.dbg.value(metadata i32 %3, metadata !14904, metadata !DIExpression()), !dbg !14906
  call void @llvm.dbg.value(metadata i32 undef, metadata !14902, metadata !DIExpression()), !dbg !14906
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #27, !dbg !14912
  call void @llvm.dbg.value(metadata i32 %3, metadata !14386, metadata !DIExpression()) #25, !dbg !14915
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14391, metadata !DIExpression()) #25, !dbg !14915
  call void @llvm.dbg.value(metadata i32 %3, metadata !14394, metadata !DIExpression()) #25, !dbg !14917
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !14919, !srcloc !14400
  call void @llvm.dbg.value(metadata i32 1, metadata !14902, metadata !DIExpression()), !dbg !14906
  call void @llvm.dbg.value(metadata i32 undef, metadata !14902, metadata !DIExpression()), !dbg !14906
  ret void, !dbg !14920
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14921 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14923, metadata !DIExpression()), !dbg !14925
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14359, metadata !DIExpression()) #25, !dbg !14926
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14928, !srcloc !14374
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14928
  call void @llvm.dbg.value(metadata i32 %3, metadata !14371, metadata !DIExpression()) #25, !dbg !14930
  call void @llvm.dbg.value(metadata i32 undef, metadata !14372, metadata !DIExpression()) #25, !dbg !14930
  call void @llvm.dbg.value(metadata i32 %3, metadata !14365, metadata !DIExpression()) #25, !dbg !14926
  call void @llvm.dbg.value(metadata i32 %3, metadata !14924, metadata !DIExpression()), !dbg !14925
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #27, !dbg !14931
  br i1 %4, label %5, label %6, !dbg !14933

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !14386, metadata !DIExpression()) #25, !dbg !14934
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14391, metadata !DIExpression()) #25, !dbg !14934
  call void @llvm.dbg.value(metadata i32 %3, metadata !14394, metadata !DIExpression()) #25, !dbg !14937
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !14939, !srcloc !14400
  br label %8, !dbg !14940

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.144(%struct.k_thread* noundef %0) #27, !dbg !14941
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #27, !dbg !14942
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !14943
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #27, !dbg !14943
  br label %8, !dbg !14944

8:                                                ; preds = %6, %5
  ret void, !dbg !14944
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14945 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14947, metadata !DIExpression()), !dbg !14948
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14949
  %3 = load i8, i8* %2, align 1, !dbg !14949
  %4 = and i8 %3, 4, !dbg !14950
  %5 = icmp eq i8 %4, 0, !dbg !14951
  ret i1 %5, !dbg !14952
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.144(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !14953 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14955, metadata !DIExpression()), !dbg !14956
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14957
  %3 = load i8, i8* %2, align 1, !dbg !14958
  %4 = and i8 %3, -5, !dbg !14958
  store i8 %4, i8* %2, align 1, !dbg !14958
  ret void, !dbg !14959
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !14960 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !14963, metadata !DIExpression()), !dbg !14964
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14962, metadata !DIExpression()), !dbg !14964
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #27, !dbg !14965
  br i1 %4, label %5, label %9, !dbg !14967

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #27, !dbg !14968
  br i1 %6, label %7, label %9, !dbg !14969

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !14970, metadata !DIExpression()) #25, !dbg !14976
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14975, metadata !DIExpression()) #25, !dbg !14976
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #26, !dbg !14979
  br label %10, !dbg !14980

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !14386, metadata !DIExpression()) #25, !dbg !14981
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14391, metadata !DIExpression()) #25, !dbg !14981
  call void @llvm.dbg.value(metadata i32 %3, metadata !14394, metadata !DIExpression()) #25, !dbg !14984
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !14986, !srcloc !14400
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !14987
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !14988 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14992, metadata !DIExpression()), !dbg !14993
  call void @llvm.dbg.value(metadata i32 %0, metadata !14994, metadata !DIExpression()), !dbg !14999
  %2 = icmp eq i32 %0, 0, !dbg !15001
  br i1 %2, label %3, label %6, !dbg !15002

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !15003, !srcloc !15010
  call void @llvm.dbg.value(metadata i32 %4, metadata !15006, metadata !DIExpression()) #25, !dbg !15011
  %5 = icmp eq i32 %4, 0, !dbg !15012
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !14993
  ret i1 %7, !dbg !15013
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #5 !dbg !15014 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15017
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15016, metadata !DIExpression()), !dbg !15018
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15019
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !15020
  ret i1 %3, !dbg !15021
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !15022 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15024, metadata !DIExpression()), !dbg !15026
  %2 = tail call i32 @arch_swap(i32 noundef %0) #26, !dbg !15027
  call void @llvm.dbg.value(metadata i32 %2, metadata !15025, metadata !DIExpression()), !dbg !15026
  ret i32 %2, !dbg !15028
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15029 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15031, metadata !DIExpression()), !dbg !15035
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #27, !dbg !15036
  call void @llvm.dbg.value(metadata i32 0, metadata !15032, metadata !DIExpression()), !dbg !15037
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14359, metadata !DIExpression()) #25, !dbg !15038
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15040, !srcloc !14374
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !15040
  call void @llvm.dbg.value(metadata i32 %4, metadata !14371, metadata !DIExpression()) #25, !dbg !15042
  call void @llvm.dbg.value(metadata i32 undef, metadata !14372, metadata !DIExpression()) #25, !dbg !15042
  call void @llvm.dbg.value(metadata i32 %4, metadata !14365, metadata !DIExpression()) #25, !dbg !15038
  call void @llvm.dbg.value(metadata i32 %4, metadata !15034, metadata !DIExpression()), !dbg !15037
  call void @llvm.dbg.value(metadata i32 undef, metadata !15032, metadata !DIExpression()), !dbg !15037
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #27, !dbg !15043
  br i1 %5, label %6, label %10, !dbg !15047

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14528, metadata !DIExpression()) #25, !dbg !15048
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15051
  %8 = load i8, i8* %7, align 1, !dbg !15052
  %9 = and i8 %8, 127, !dbg !15052
  store i8 %9, i8* %7, align 1, !dbg !15052
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14536, metadata !DIExpression()) #25, !dbg !15053
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !15055
  br label %10, !dbg !15056

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #27, !dbg !15057
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15058
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !15059
  %13 = zext i1 %12 to i32, !dbg !15059
  tail call fastcc void @update_cache(i32 noundef %13) #27, !dbg !15060
  call void @llvm.dbg.value(metadata i32 %4, metadata !14386, metadata !DIExpression()) #25, !dbg !15061
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14391, metadata !DIExpression()) #25, !dbg !15061
  call void @llvm.dbg.value(metadata i32 %4, metadata !14394, metadata !DIExpression()) #25, !dbg !15063
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !15065, !srcloc !14400
  call void @llvm.dbg.value(metadata i32 1, metadata !15032, metadata !DIExpression()), !dbg !15037
  call void @llvm.dbg.value(metadata i32 undef, metadata !15032, metadata !DIExpression()), !dbg !15037
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15066
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !15068
  br i1 %15, label %16, label %17, !dbg !15069

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #27, !dbg !15070
  br label %17, !dbg !15072

17:                                               ; preds = %16, %10
  ret void, !dbg !15073
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15074 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15076, metadata !DIExpression()), !dbg !15077
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15078
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !15079
  ret i32 %3, !dbg !15080
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15081 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15083, metadata !DIExpression()), !dbg !15084
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15085
  %3 = load i8, i8* %2, align 1, !dbg !15086
  %4 = or i8 %3, 16, !dbg !15086
  store i8 %4, i8* %2, align 1, !dbg !15086
  ret void, !dbg !15087
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !15088 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15089, !srcloc !14374
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15089
  call void @llvm.dbg.value(metadata i32 %2, metadata !14371, metadata !DIExpression()) #25, !dbg !15091
  call void @llvm.dbg.value(metadata i32 undef, metadata !14372, metadata !DIExpression()) #25, !dbg !15091
  tail call void @z_reschedule_irqlock(i32 noundef %2) #27, !dbg !15092
  ret void, !dbg !15093
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !15094 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15096, metadata !DIExpression()), !dbg !15097
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #27, !dbg !15098
  br i1 %2, label %3, label %5, !dbg !15100

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #27, !dbg !15101
  br label %6, !dbg !15103

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !14394, metadata !DIExpression()) #25, !dbg !15104
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #25, !dbg !15107, !srcloc !14400
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !15108
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15109 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15111, metadata !DIExpression()), !dbg !15113
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14359, metadata !DIExpression()) #25, !dbg !15114
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15116, !srcloc !14374
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15116
  call void @llvm.dbg.value(metadata i32 %3, metadata !14371, metadata !DIExpression()) #25, !dbg !15118
  call void @llvm.dbg.value(metadata i32 undef, metadata !14372, metadata !DIExpression()) #25, !dbg !15118
  call void @llvm.dbg.value(metadata i32 %3, metadata !14365, metadata !DIExpression()) #25, !dbg !15114
  call void @llvm.dbg.value(metadata i32 %3, metadata !15112, metadata !DIExpression()), !dbg !15113
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #27, !dbg !15119
  br i1 %4, label %6, label %5, !dbg !15121

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !14386, metadata !DIExpression()) #25, !dbg !15122
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14391, metadata !DIExpression()) #25, !dbg !15122
  call void @llvm.dbg.value(metadata i32 %3, metadata !14394, metadata !DIExpression()) #25, !dbg !15125
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15127, !srcloc !14400
  br label %8, !dbg !15128

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #27, !dbg !15129
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #27, !dbg !15130
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !15131
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #27, !dbg !15131
  br label %8, !dbg !15132

8:                                                ; preds = %6, %5
  ret void, !dbg !15132
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15133 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15135, metadata !DIExpression()), !dbg !15136
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15137
  %3 = load i8, i8* %2, align 1, !dbg !15137
  %4 = and i8 %3, 16, !dbg !15138
  %5 = icmp ne i8 %4, 0, !dbg !15139
  ret i1 %5, !dbg !15140
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15141 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15143, metadata !DIExpression()), !dbg !15144
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15145
  %3 = load i8, i8* %2, align 1, !dbg !15146
  %4 = and i8 %3, -17, !dbg !15146
  store i8 %4, i8* %2, align 1, !dbg !15146
  ret void, !dbg !15147
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15148 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15158, metadata !DIExpression()), !dbg !15162
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15156, metadata !DIExpression()), !dbg !15162
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15157, metadata !DIExpression()), !dbg !15162
  call void @llvm.dbg.value(metadata i32 0, metadata !15159, metadata !DIExpression()), !dbg !15163
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14359, metadata !DIExpression()) #25, !dbg !15164
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15166, !srcloc !14374
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !15166
  call void @llvm.dbg.value(metadata i32 %5, metadata !14371, metadata !DIExpression()) #25, !dbg !15168
  call void @llvm.dbg.value(metadata i32 undef, metadata !14372, metadata !DIExpression()) #25, !dbg !15168
  call void @llvm.dbg.value(metadata i32 %5, metadata !14365, metadata !DIExpression()) #25, !dbg !15164
  call void @llvm.dbg.value(metadata i32 %5, metadata !15161, metadata !DIExpression()), !dbg !15163
  call void @llvm.dbg.value(metadata i32 undef, metadata !15159, metadata !DIExpression()), !dbg !15163
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #27, !dbg !15169
  call void @llvm.dbg.value(metadata i32 %5, metadata !14386, metadata !DIExpression()) #25, !dbg !15172
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14391, metadata !DIExpression()) #25, !dbg !15172
  call void @llvm.dbg.value(metadata i32 %5, metadata !14394, metadata !DIExpression()) #25, !dbg !15174
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #25, !dbg !15176, !srcloc !14400
  call void @llvm.dbg.value(metadata i32 1, metadata !15159, metadata !DIExpression()), !dbg !15163
  call void @llvm.dbg.value(metadata i32 undef, metadata !15159, metadata !DIExpression()), !dbg !15163
  ret void, !dbg !15177
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !15178 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15182, metadata !DIExpression()), !dbg !15183
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15180, metadata !DIExpression()), !dbg !15183
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15181, metadata !DIExpression()), !dbg !15183
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #27, !dbg !15184
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #27, !dbg !15185
  ret void, !dbg !15186
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !15187 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15191, metadata !DIExpression()), !dbg !15193
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15192, metadata !DIExpression()), !dbg !15193
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #27, !dbg !15194
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #27, !dbg !15195
  %3 = icmp eq %union.anon* %1, null, !dbg !15196
  br i1 %3, label %21, label %4, !dbg !15198

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15199
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !15201
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !15202
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !14559, metadata !DIExpression()) #25, !dbg !15203
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14565, metadata !DIExpression()) #25, !dbg !15203
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #26, !dbg !15205
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !14566, metadata !DIExpression()) #25, !dbg !15203
  %8 = icmp eq %struct._dnode* %7, null, !dbg !15206
  br i1 %8, label %19, label %9, !dbg !15205

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14566, metadata !DIExpression()) #25, !dbg !15203
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !15207
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !14566, metadata !DIExpression()) #25, !dbg !15203
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #26, !dbg !15208
  %13 = icmp sgt i32 %12, 0, !dbg !15209
  br i1 %13, label %14, label %16, !dbg !15210

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15211
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #26, !dbg !15212
  br label %21, !dbg !15213

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #26, !dbg !15206
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !14566, metadata !DIExpression()) #25, !dbg !15203
  %18 = icmp eq %struct._dnode* %17, null, !dbg !15206
  br i1 %18, label %19, label %9, !dbg !15205, !llvm.loop !15214

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15216
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #26, !dbg !15217
  br label %21, !dbg !15218

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !15219
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15220 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15225, metadata !DIExpression()), !dbg !15226
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15224, metadata !DIExpression()), !dbg !15226
  %4 = icmp eq i64 %3, -1, !dbg !15227
  br i1 %4, label %6, label %5, !dbg !15229

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.147(%struct.k_thread* noundef %0, [1 x i64] %1) #27, !dbg !15230
  br label %6, !dbg !15232

6:                                                ; preds = %5, %2
  ret void, !dbg !15233
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.147(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15234 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15237, metadata !DIExpression()), !dbg !15238
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15236, metadata !DIExpression()), !dbg !15238
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15239
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #26, !dbg !15240
  ret void, !dbg !15241
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !15242 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15244, metadata !DIExpression()), !dbg !15252
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !15253
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !15253
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15245, metadata !DIExpression()), !dbg !15252
  call void @llvm.dbg.value(metadata i32 0, metadata !15246, metadata !DIExpression()), !dbg !15254
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14359, metadata !DIExpression()) #25, !dbg !15255
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15257, !srcloc !14374
  call void @llvm.dbg.value(metadata i32 undef, metadata !14371, metadata !DIExpression()) #25, !dbg !15259
  call void @llvm.dbg.value(metadata i32 undef, metadata !14372, metadata !DIExpression()) #25, !dbg !15259
  call void @llvm.dbg.value(metadata i32 undef, metadata !14365, metadata !DIExpression()) #25, !dbg !15255
  call void @llvm.dbg.value(metadata i32 undef, metadata !15248, metadata !DIExpression()), !dbg !15254
  call void @llvm.dbg.value(metadata i32 undef, metadata !15246, metadata !DIExpression()), !dbg !15254
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !15260
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !15261
  %7 = load i8, i8* %6, align 1, !dbg !15261
  %8 = and i8 %7, 40, !dbg !15262
  %9 = icmp eq i8 %8, 0, !dbg !15262
  call void @llvm.dbg.value(metadata i1 %9, metadata !15249, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15263
  br i1 %9, label %10, label %17, !dbg !15264

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !15265
  %12 = bitcast void (%struct._timeout*)** %11 to %union.anon**, !dbg !15265
  %13 = load %union.anon*, %union.anon** %12, align 8, !dbg !15265
  %14 = icmp eq %union.anon* %13, null, !dbg !15269
  br i1 %14, label %16, label %15, !dbg !15270

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #27, !dbg !15271
  br label %16, !dbg !15273

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.144(%struct.k_thread* noundef nonnull %3) #27, !dbg !15274
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #27, !dbg !15275
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #27, !dbg !15276
  br label %17, !dbg !15277

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !15257
  call void @llvm.dbg.value(metadata i32 %18, metadata !14371, metadata !DIExpression()) #25, !dbg !15259
  call void @llvm.dbg.value(metadata i32 %18, metadata !14365, metadata !DIExpression()) #25, !dbg !15255
  call void @llvm.dbg.value(metadata i32 %18, metadata !15248, metadata !DIExpression()), !dbg !15254
  call void @llvm.dbg.value(metadata i32 undef, metadata !14386, metadata !DIExpression()) #25, !dbg !15278
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14391, metadata !DIExpression()) #25, !dbg !15278
  call void @llvm.dbg.value(metadata i32 undef, metadata !14394, metadata !DIExpression()) #25, !dbg !15280
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #25, !dbg !15282, !srcloc !14400
  call void @llvm.dbg.value(metadata i32 1, metadata !15246, metadata !DIExpression()), !dbg !15254
  call void @llvm.dbg.value(metadata i32 undef, metadata !15246, metadata !DIExpression()), !dbg !15254
  ret void, !dbg !15283
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15284 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15286, metadata !DIExpression()), !dbg !15287
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !15288
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #27, !dbg !15289
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15290
  store %union.anon* null, %union.anon** %2, align 8, !dbg !15291
  ret void, !dbg !15292
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15293 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15295, metadata !DIExpression()), !dbg !15296
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15297
  %3 = load i8, i8* %2, align 1, !dbg !15298
  %4 = and i8 %3, -3, !dbg !15298
  store i8 %4, i8* %2, align 1, !dbg !15298
  ret void, !dbg !15299
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15300 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15302, metadata !DIExpression()), !dbg !15303
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #27, !dbg !15304
  br i1 %2, label %3, label %7, !dbg !15306

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14528, metadata !DIExpression()) #25, !dbg !15307
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15310
  %5 = load i8, i8* %4, align 1, !dbg !15311
  %6 = and i8 %5, 127, !dbg !15311
  store i8 %6, i8* %4, align 1, !dbg !15311
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14536, metadata !DIExpression()) #25, !dbg !15312
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !15314
  br label %7, !dbg !15315

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15316
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !15317
  %10 = zext i1 %9 to i32, !dbg !15317
  tail call fastcc void @update_cache(i32 noundef %10) #27, !dbg !15318
  ret void, !dbg !15319
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15320 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15322, metadata !DIExpression()), !dbg !15323
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15324
  %3 = load i8, i8* %2, align 1, !dbg !15325
  %4 = or i8 %3, 2, !dbg !15325
  store i8 %4, i8* %2, align 1, !dbg !15325
  ret void, !dbg !15326
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #23 !dbg !15327 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15329, metadata !DIExpression()), !dbg !15333
  call void @llvm.dbg.value(metadata i32 0, metadata !15330, metadata !DIExpression()), !dbg !15334
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14359, metadata !DIExpression()) #25, !dbg !15335
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15337, !srcloc !14374
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15337
  call void @llvm.dbg.value(metadata i32 %3, metadata !14371, metadata !DIExpression()) #25, !dbg !15339
  call void @llvm.dbg.value(metadata i32 undef, metadata !14372, metadata !DIExpression()) #25, !dbg !15339
  call void @llvm.dbg.value(metadata i32 %3, metadata !14365, metadata !DIExpression()) #25, !dbg !15335
  call void @llvm.dbg.value(metadata i32 %3, metadata !15332, metadata !DIExpression()), !dbg !15334
  call void @llvm.dbg.value(metadata i32 undef, metadata !15330, metadata !DIExpression()), !dbg !15334
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #27, !dbg !15340
  call void @llvm.dbg.value(metadata i32 %3, metadata !14386, metadata !DIExpression()) #25, !dbg !15343
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14391, metadata !DIExpression()) #25, !dbg !15343
  call void @llvm.dbg.value(metadata i32 %3, metadata !14394, metadata !DIExpression()) #25, !dbg !15345
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15347, !srcloc !14400
  call void @llvm.dbg.value(metadata i32 1, metadata !15330, metadata !DIExpression()), !dbg !15334
  call void @llvm.dbg.value(metadata i32 undef, metadata !15330, metadata !DIExpression()), !dbg !15334
  ret void, !dbg !15348
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15349 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15355, metadata !DIExpression()), !dbg !15360
  call void @llvm.dbg.value(metadata i32 %0, metadata !15353, metadata !DIExpression()), !dbg !15360
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15354, metadata !DIExpression()), !dbg !15360
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15361
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #27, !dbg !15362
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15363
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15364
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #27, !dbg !15365
  call void @llvm.dbg.value(metadata i32 %6, metadata !15356, metadata !DIExpression()), !dbg !15360
  call void @llvm.dbg.value(metadata i32 0, metadata !15357, metadata !DIExpression()), !dbg !15366
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14359, metadata !DIExpression()) #25, !dbg !15367
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15369, !srcloc !14374
  call void @llvm.dbg.value(metadata i32 undef, metadata !14371, metadata !DIExpression()) #25, !dbg !15371
  call void @llvm.dbg.value(metadata i32 undef, metadata !14372, metadata !DIExpression()) #25, !dbg !15371
  call void @llvm.dbg.value(metadata i32 undef, metadata !14365, metadata !DIExpression()) #25, !dbg !15367
  call void @llvm.dbg.value(metadata i32 undef, metadata !15359, metadata !DIExpression()), !dbg !15366
  call void @llvm.dbg.value(metadata i32 undef, metadata !15357, metadata !DIExpression()), !dbg !15366
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15372
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15376
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !15377
  br i1 %10, label %11, label %12, !dbg !15378

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15379
  br label %12, !dbg !15381

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !15369
  call void @llvm.dbg.value(metadata i32 %13, metadata !14371, metadata !DIExpression()) #25, !dbg !15371
  call void @llvm.dbg.value(metadata i32 %13, metadata !14365, metadata !DIExpression()) #25, !dbg !15367
  call void @llvm.dbg.value(metadata i32 %13, metadata !15359, metadata !DIExpression()), !dbg !15366
  call void @llvm.dbg.value(metadata i32 undef, metadata !14386, metadata !DIExpression()) #25, !dbg !15382
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14391, metadata !DIExpression()) #25, !dbg !15382
  call void @llvm.dbg.value(metadata i32 undef, metadata !14394, metadata !DIExpression()) #25, !dbg !15384
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #25, !dbg !15386, !srcloc !14400
  call void @llvm.dbg.value(metadata i32 1, metadata !15357, metadata !DIExpression()), !dbg !15366
  call void @llvm.dbg.value(metadata i32 undef, metadata !15357, metadata !DIExpression()), !dbg !15366
  ret i32 %6, !dbg !15387
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !15388 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15393, metadata !DIExpression()), !dbg !15396
  call void @llvm.dbg.value(metadata i64 undef, metadata !15395, metadata !DIExpression()), !dbg !15396
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15392, metadata !DIExpression()), !dbg !15396
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !15394, metadata !DIExpression()), !dbg !15396
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15397
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15398
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14359, metadata !DIExpression()) #25, !dbg !15399
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15401, !srcloc !14374
  call void @llvm.dbg.value(metadata i32 undef, metadata !14371, metadata !DIExpression()) #25, !dbg !15403
  call void @llvm.dbg.value(metadata i32 undef, metadata !14372, metadata !DIExpression()) #25, !dbg !15403
  call void @llvm.dbg.value(metadata i32 undef, metadata !14365, metadata !DIExpression()) #25, !dbg !15399
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15404
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %union.anon* noundef %2, [1 x i64] %3) #27, !dbg !15405
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !14970, metadata !DIExpression()) #25, !dbg !15406
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14975, metadata !DIExpression()) #25, !dbg !15406
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #26, !dbg !15408
  ret i32 %9, !dbg !15409
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15410 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15414, metadata !DIExpression()), !dbg !15419
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15415, metadata !DIExpression()), !dbg !15419
  call void @llvm.dbg.value(metadata i32 0, metadata !15416, metadata !DIExpression()), !dbg !15420
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14359, metadata !DIExpression()) #25, !dbg !15421
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15423, !srcloc !14374
  call void @llvm.dbg.value(metadata i32 undef, metadata !14371, metadata !DIExpression()) #25, !dbg !15425
  call void @llvm.dbg.value(metadata i32 undef, metadata !14372, metadata !DIExpression()) #25, !dbg !15425
  call void @llvm.dbg.value(metadata i32 undef, metadata !14365, metadata !DIExpression()) #25, !dbg !15421
  call void @llvm.dbg.value(metadata i32 undef, metadata !15418, metadata !DIExpression()), !dbg !15420
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15415, metadata !DIExpression()), !dbg !15419
  call void @llvm.dbg.value(metadata i32 undef, metadata !15416, metadata !DIExpression()), !dbg !15420
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #27, !dbg !15426
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15415, metadata !DIExpression()), !dbg !15419
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !15429
  br i1 %5, label %7, label %6, !dbg !15431

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #27, !dbg !15432
  br label %7, !dbg !15434

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !15423
  call void @llvm.dbg.value(metadata i32 %8, metadata !14371, metadata !DIExpression()) #25, !dbg !15425
  call void @llvm.dbg.value(metadata i32 %8, metadata !14365, metadata !DIExpression()) #25, !dbg !15421
  call void @llvm.dbg.value(metadata i32 %8, metadata !15418, metadata !DIExpression()), !dbg !15420
  call void @llvm.dbg.value(metadata i32 undef, metadata !14386, metadata !DIExpression()) #25, !dbg !15435
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14391, metadata !DIExpression()) #25, !dbg !15435
  call void @llvm.dbg.value(metadata i32 undef, metadata !14394, metadata !DIExpression()) #25, !dbg !15437
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !15439, !srcloc !14400
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15415, metadata !DIExpression()), !dbg !15419
  call void @llvm.dbg.value(metadata i32 undef, metadata !15416, metadata !DIExpression()), !dbg !15420
  ret %struct.k_thread* %4, !dbg !15440
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15441 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15443, metadata !DIExpression()), !dbg !15448
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15444, metadata !DIExpression()), !dbg !15448
  call void @llvm.dbg.value(metadata i32 0, metadata !15445, metadata !DIExpression()), !dbg !15449
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14359, metadata !DIExpression()) #25, !dbg !15450
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15452, !srcloc !14374
  call void @llvm.dbg.value(metadata i32 undef, metadata !14371, metadata !DIExpression()) #25, !dbg !15454
  call void @llvm.dbg.value(metadata i32 undef, metadata !14372, metadata !DIExpression()) #25, !dbg !15454
  call void @llvm.dbg.value(metadata i32 undef, metadata !14365, metadata !DIExpression()) #25, !dbg !15450
  call void @llvm.dbg.value(metadata i32 undef, metadata !15447, metadata !DIExpression()), !dbg !15449
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15444, metadata !DIExpression()), !dbg !15448
  call void @llvm.dbg.value(metadata i32 undef, metadata !15445, metadata !DIExpression()), !dbg !15449
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #27, !dbg !15455
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15444, metadata !DIExpression()), !dbg !15448
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !15458
  br i1 %5, label %8, label %6, !dbg !15460

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #27, !dbg !15461
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #27, !dbg !15463
  br label %8, !dbg !15464

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15452
  call void @llvm.dbg.value(metadata i32 %9, metadata !14371, metadata !DIExpression()) #25, !dbg !15454
  call void @llvm.dbg.value(metadata i32 %9, metadata !14365, metadata !DIExpression()) #25, !dbg !15450
  call void @llvm.dbg.value(metadata i32 %9, metadata !15447, metadata !DIExpression()), !dbg !15449
  call void @llvm.dbg.value(metadata i32 undef, metadata !14386, metadata !DIExpression()) #25, !dbg !15465
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14391, metadata !DIExpression()) #25, !dbg !15465
  call void @llvm.dbg.value(metadata i32 undef, metadata !14394, metadata !DIExpression()) #25, !dbg !15467
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !15469, !srcloc !14400
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15444, metadata !DIExpression()), !dbg !15448
  call void @llvm.dbg.value(metadata i32 undef, metadata !15445, metadata !DIExpression()), !dbg !15449
  ret %struct.k_thread* %4, !dbg !15470
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15471 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15473, metadata !DIExpression()), !dbg !15474
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15329, metadata !DIExpression()) #25, !dbg !15475
  call void @llvm.dbg.value(metadata i32 0, metadata !15330, metadata !DIExpression()) #25, !dbg !15477
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14359, metadata !DIExpression()) #25, !dbg !15478
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15480, !srcloc !14374
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15480
  call void @llvm.dbg.value(metadata i32 %3, metadata !14371, metadata !DIExpression()) #25, !dbg !15482
  call void @llvm.dbg.value(metadata i32 undef, metadata !14372, metadata !DIExpression()) #25, !dbg !15482
  call void @llvm.dbg.value(metadata i32 %3, metadata !14365, metadata !DIExpression()) #25, !dbg !15478
  call void @llvm.dbg.value(metadata i32 %3, metadata !15332, metadata !DIExpression()) #25, !dbg !15477
  call void @llvm.dbg.value(metadata i32 undef, metadata !15330, metadata !DIExpression()) #25, !dbg !15477
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #26, !dbg !15483
  call void @llvm.dbg.value(metadata i32 %3, metadata !14386, metadata !DIExpression()) #25, !dbg !15484
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14391, metadata !DIExpression()) #25, !dbg !15484
  call void @llvm.dbg.value(metadata i32 %3, metadata !14394, metadata !DIExpression()) #25, !dbg !15486
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15488, !srcloc !14400
  call void @llvm.dbg.value(metadata i32 1, metadata !15330, metadata !DIExpression()) #25, !dbg !15477
  call void @llvm.dbg.value(metadata i32 undef, metadata !15330, metadata !DIExpression()) #25, !dbg !15477
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #27, !dbg !15489
  ret void, !dbg !15490
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15491 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15493, metadata !DIExpression()), !dbg !15499
  call void @llvm.dbg.value(metadata i32 %1, metadata !15494, metadata !DIExpression()), !dbg !15499
  call void @llvm.dbg.value(metadata i8 0, metadata !15495, metadata !DIExpression()), !dbg !15499
  call void @llvm.dbg.value(metadata i32 0, metadata !15496, metadata !DIExpression()), !dbg !15500
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14359, metadata !DIExpression()) #25, !dbg !15501
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15503, !srcloc !14374
  call void @llvm.dbg.value(metadata i32 undef, metadata !14371, metadata !DIExpression()) #25, !dbg !15505
  call void @llvm.dbg.value(metadata i32 undef, metadata !14372, metadata !DIExpression()) #25, !dbg !15505
  call void @llvm.dbg.value(metadata i32 undef, metadata !14365, metadata !DIExpression()) #25, !dbg !15501
  call void @llvm.dbg.value(metadata i32 undef, metadata !15498, metadata !DIExpression()), !dbg !15500
  call void @llvm.dbg.value(metadata i8 poison, metadata !15495, metadata !DIExpression()), !dbg !15499
  call void @llvm.dbg.value(metadata i32 undef, metadata !15496, metadata !DIExpression()), !dbg !15500
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #27, !dbg !15506
  call void @llvm.dbg.value(metadata i1 %6, metadata !15495, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15499
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !15509

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14528, metadata !DIExpression()) #25, !dbg !15510
  %11 = load i8, i8* %4, align 1, !dbg !15516
  %12 = and i8 %11, 127, !dbg !15516
  store i8 %12, i8* %4, align 1, !dbg !15516
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14536, metadata !DIExpression()) #25, !dbg !15517
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !15519
  store i8 %9, i8* %8, align 2, !dbg !15520
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14545, metadata !DIExpression()) #25, !dbg !15521
  %13 = load i8, i8* %4, align 1, !dbg !15523
  %14 = or i8 %13, -128, !dbg !15523
  store i8 %14, i8* %4, align 1, !dbg !15523
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14552, metadata !DIExpression()) #25, !dbg !15524
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14559, metadata !DIExpression()) #25, !dbg !15526
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14565, metadata !DIExpression()) #25, !dbg !15526
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !15528
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !14566, metadata !DIExpression()) #25, !dbg !15526
  %16 = icmp eq %struct._dnode* %15, null, !dbg !15529
  br i1 %16, label %26, label %17, !dbg !15528

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !14566, metadata !DIExpression()) #25, !dbg !15526
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !15530
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !14566, metadata !DIExpression()) #25, !dbg !15526
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #26, !dbg !15531
  %21 = icmp sgt i32 %20, 0, !dbg !15532
  br i1 %21, label %22, label %23, !dbg !15533

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #26, !dbg !15534
  br label %27, !dbg !15535

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #26, !dbg !15529
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14566, metadata !DIExpression()) #25, !dbg !15526
  %25 = icmp eq %struct._dnode* %24, null, !dbg !15529
  br i1 %25, label %26, label %17, !dbg !15528, !llvm.loop !15536

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #26, !dbg !15538
  br label %27, !dbg !15539

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #27, !dbg !15540
  br label %29, !dbg !15541

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !15542
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !15503
  call void @llvm.dbg.value(metadata i32 %30, metadata !14371, metadata !DIExpression()) #25, !dbg !15505
  call void @llvm.dbg.value(metadata i32 %30, metadata !14365, metadata !DIExpression()) #25, !dbg !15501
  call void @llvm.dbg.value(metadata i32 %30, metadata !15498, metadata !DIExpression()), !dbg !15500
  call void @llvm.dbg.value(metadata i32 undef, metadata !14386, metadata !DIExpression()) #25, !dbg !15544
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14391, metadata !DIExpression()) #25, !dbg !15544
  call void @llvm.dbg.value(metadata i32 undef, metadata !14394, metadata !DIExpression()) #25, !dbg !15546
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #25, !dbg !15548, !srcloc !14400
  call void @llvm.dbg.value(metadata i8 poison, metadata !15495, metadata !DIExpression()), !dbg !15499
  call void @llvm.dbg.value(metadata i32 undef, metadata !15496, metadata !DIExpression()), !dbg !15500
  ret i1 %6, !dbg !15549
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15550 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15554, metadata !DIExpression()), !dbg !15557
  call void @llvm.dbg.value(metadata i32 %1, metadata !15555, metadata !DIExpression()), !dbg !15557
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #27, !dbg !15558
  call void @llvm.dbg.value(metadata i1 %3, metadata !15556, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15557
  br i1 %3, label %4, label %12, !dbg !15559

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15561
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15562
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15562
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15562
  %9 = load i8, i8* %8, align 1, !dbg !15562
  %10 = icmp eq i8 %9, 0, !dbg !15563
  br i1 %10, label %11, label %12, !dbg !15564

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #27, !dbg !15565
  br label %12, !dbg !15567

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !15568
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !15569 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15571, metadata !DIExpression()), !dbg !15574
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14359, metadata !DIExpression()) #25, !dbg !15575
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15577, !srcloc !14374
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15577
  call void @llvm.dbg.value(metadata i32 %2, metadata !14371, metadata !DIExpression()) #25, !dbg !15579
  call void @llvm.dbg.value(metadata i32 undef, metadata !14372, metadata !DIExpression()) #25, !dbg !15579
  call void @llvm.dbg.value(metadata i32 %2, metadata !14365, metadata !DIExpression()) #25, !dbg !15575
  call void @llvm.dbg.value(metadata i32 %2, metadata !15573, metadata !DIExpression()), !dbg !15574
  call void @llvm.dbg.value(metadata i32 undef, metadata !15571, metadata !DIExpression()), !dbg !15574
  tail call fastcc void @z_sched_lock() #27, !dbg !15580
  call void @llvm.dbg.value(metadata i32 %2, metadata !14386, metadata !DIExpression()) #25, !dbg !15583
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14391, metadata !DIExpression()) #25, !dbg !15583
  call void @llvm.dbg.value(metadata i32 %2, metadata !14394, metadata !DIExpression()) #25, !dbg !15585
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !15587, !srcloc !14400
  call void @llvm.dbg.value(metadata i32 1, metadata !15571, metadata !DIExpression()), !dbg !15574
  call void @llvm.dbg.value(metadata i32 undef, metadata !15571, metadata !DIExpression()), !dbg !15574
  ret void, !dbg !15588
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !15589 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15590
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !15591
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !15591
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !15591
  %5 = load i8, i8* %4, align 1, !dbg !15592
  %6 = add i8 %5, -1, !dbg !15592
  store i8 %6, i8* %4, align 1, !dbg !15592
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !15593, !srcloc !15595
  ret void, !dbg !15596
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !15597 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15599, metadata !DIExpression()), !dbg !15602
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14359, metadata !DIExpression()) #25, !dbg !15603
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15605, !srcloc !14374
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15605
  call void @llvm.dbg.value(metadata i32 %2, metadata !14371, metadata !DIExpression()) #25, !dbg !15607
  call void @llvm.dbg.value(metadata i32 undef, metadata !14372, metadata !DIExpression()) #25, !dbg !15607
  call void @llvm.dbg.value(metadata i32 %2, metadata !14365, metadata !DIExpression()) #25, !dbg !15603
  call void @llvm.dbg.value(metadata i32 %2, metadata !15601, metadata !DIExpression()), !dbg !15602
  call void @llvm.dbg.value(metadata i32 undef, metadata !15599, metadata !DIExpression()), !dbg !15602
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15608
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !15611
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !15611
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !15611
  %7 = load i8, i8* %6, align 1, !dbg !15612
  %8 = add i8 %7, 1, !dbg !15612
  store i8 %8, i8* %6, align 1, !dbg !15612
  tail call fastcc void @update_cache(i32 noundef 0) #27, !dbg !15613
  call void @llvm.dbg.value(metadata i32 %2, metadata !14386, metadata !DIExpression()) #25, !dbg !15614
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14391, metadata !DIExpression()) #25, !dbg !15614
  call void @llvm.dbg.value(metadata i32 %2, metadata !14394, metadata !DIExpression()) #25, !dbg !15616
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !15618, !srcloc !14400
  call void @llvm.dbg.value(metadata i32 1, metadata !15599, metadata !DIExpression()), !dbg !15602
  call void @llvm.dbg.value(metadata i32 undef, metadata !15599, metadata !DIExpression()), !dbg !15602
  tail call fastcc void @z_reschedule_unlocked() #27, !dbg !15619
  ret void, !dbg !15620
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #5 !dbg !15621 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15622
  ret %struct.k_thread* %1, !dbg !15623
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !15624 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !15628, metadata !DIExpression()), !dbg !15633
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !15629, metadata !DIExpression()), !dbg !15633
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !15634
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15630, metadata !DIExpression()), !dbg !15633
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !15635
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15631, metadata !DIExpression()), !dbg !15633
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #27, !dbg !15636
  call void @llvm.dbg.value(metadata i32 %5, metadata !15632, metadata !DIExpression()), !dbg !15633
  %6 = icmp sgt i32 %5, 0, !dbg !15637
  br i1 %6, label %17, label %7, !dbg !15639

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !15640
  br i1 %8, label %17, label %9, !dbg !15642

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !15643
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !15643
  %12 = load i32, i32* %11, align 8, !dbg !15643
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !15645
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !15645
  %15 = load i32, i32* %14, align 8, !dbg !15645
  %16 = icmp ult i32 %12, %15, !dbg !15646
  br label %17, !dbg !15647

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !15648
  ret i1 %18, !dbg !15649
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !15650 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15667, metadata !DIExpression()), !dbg !15682
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15668, metadata !DIExpression()), !dbg !15682
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !15683
  %5 = load i32, i32* %4, align 4, !dbg !15684
  %6 = add nsw i32 %5, 1, !dbg !15684
  store i32 %6, i32* %4, align 4, !dbg !15684
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !15685
  store i32 %5, i32* %7, align 8, !dbg !15686
  %8 = load i32, i32* %4, align 4, !dbg !15687
  %9 = icmp eq i32 %8, 0, !dbg !15688
  br i1 %9, label %10, label %32, !dbg !15689

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !15690
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #25, !dbg !15690
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !15670, metadata !DIExpression()), !dbg !15690
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15690
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !15690
  %14 = load i32, i32* %13, align 4, !dbg !15690
  %15 = shl i32 %14, 2, !dbg !15690
  %16 = alloca i8, i32 %15, align 8, !dbg !15690
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !15690
  store i8* %16, i8** %17, align 4, !dbg !15690
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !15690
  %19 = alloca i8, i32 %14, align 8, !dbg !15690
  store i8* %19, i8** %18, align 4, !dbg !15690
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !15690
  store i32 -1, i32* %20, align 4, !dbg !15690
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #26, !dbg !15691
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !15679, metadata !DIExpression()), !dbg !15692
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !15669, metadata !DIExpression()), !dbg !15682
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !15693
  br i1 %22, label %23, label %24, !dbg !15690

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #25, !dbg !15693
  br label %32, !dbg !15694

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !15669, metadata !DIExpression()), !dbg !15682
  %26 = load i32, i32* %4, align 4, !dbg !15695
  %27 = add nsw i32 %26, 1, !dbg !15695
  store i32 %27, i32* %4, align 4, !dbg !15695
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !15697
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !15697
  store i32 %26, i32* %29, align 8, !dbg !15698
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #26, !dbg !15691
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !15679, metadata !DIExpression()), !dbg !15692
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !15669, metadata !DIExpression()), !dbg !15682
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !15693
  br i1 %31, label %23, label %24, !dbg !15690, !llvm.loop !15699

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15701
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !15702
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #26, !dbg !15703
  ret void, !dbg !15704
}

; Function Attrs: optsize
declare !dbg !15705 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !15710 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !15713 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15715, metadata !DIExpression()), !dbg !15717
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15716, metadata !DIExpression()), !dbg !15717
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15718
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !15719
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #26, !dbg !15720
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !15721
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !15721
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !15723
  br i1 %7, label %8, label %10, !dbg !15724

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !15725
  store i32 0, i32* %9, align 4, !dbg !15727
  br label %10, !dbg !15728

10:                                               ; preds = %8, %2
  ret void, !dbg !15729
}

; Function Attrs: optsize
declare !dbg !15730 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !15731 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15735, metadata !DIExpression()), !dbg !15738
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15736, metadata !DIExpression()), !dbg !15738
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15739
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #27, !dbg !15740
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !15737, metadata !DIExpression()), !dbg !15738
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15736, metadata !DIExpression()), !dbg !15738
  ret %struct.k_thread* %4, !dbg !15741
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !15742 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !15746, metadata !DIExpression()), !dbg !15747
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #26, !dbg !15748
  ret %struct.rbnode* %2, !dbg !15749
}

; Function Attrs: optsize
declare !dbg !15750 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #18 !dbg !15753 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !15765, metadata !DIExpression()), !dbg !15769
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !15770
  %3 = load i32, i32* %2, align 4, !dbg !15770
  %4 = icmp eq i32 %3, 0, !dbg !15772
  br i1 %4, label %10, label %5, !dbg !15773

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15766, metadata !DIExpression()), !dbg !15769
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !15774, !range !3845
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !15775
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !15767, metadata !DIExpression()), !dbg !15769
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #27, !dbg !15776
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !15768, metadata !DIExpression()), !dbg !15769
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15766, metadata !DIExpression()), !dbg !15769
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !15769
  ret %struct.k_thread* %11, !dbg !15777
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15778 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15782, metadata !DIExpression()), !dbg !15785
  call void @llvm.dbg.value(metadata i32 0, metadata !15783, metadata !DIExpression()), !dbg !15785
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #27, !dbg !15786
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15784, metadata !DIExpression()), !dbg !15785
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15787
  br i1 %3, label %8, label %4, !dbg !15788

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #27, !dbg !15789
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #27, !dbg !15791
  call void @llvm.dbg.value(metadata i32 1, metadata !15783, metadata !DIExpression()), !dbg !15785
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #27, !dbg !15786
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15784, metadata !DIExpression()), !dbg !15785
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !15787
  br i1 %7, label %8, label %4, !dbg !15788, !llvm.loop !15792

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !15785
  ret i32 %9, !dbg !15794
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #5 !dbg !15795 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15797, metadata !DIExpression()), !dbg !15798
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !15799
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #27, !dbg !15800
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !15801
  ret %struct.k_thread* %4, !dbg !15802
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #4 !dbg !15803 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !15812, metadata !DIExpression()), !dbg !15813
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !15814
  tail call fastcc void @sys_dlist_init.158(%struct._dnode* noundef nonnull %2) #27, !dbg !15815
  ret void, !dbg !15816
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.158(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !15817 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15821, metadata !DIExpression()), !dbg !15822
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15823
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15824
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15825
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15826
  ret void, !dbg !15827
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !15828 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #27, !dbg !15829
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #27, !dbg !15830
  ret void, !dbg !15831
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #5 !dbg !15832 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15837, metadata !DIExpression()), !dbg !15838
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15839
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !15839
  %4 = load i8, i8* %3, align 2, !dbg !15839
  %5 = sext i8 %4 to i32, !dbg !15840
  ret i32 %5, !dbg !15841
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15842 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15846, metadata !DIExpression()), !dbg !15849
  call void @llvm.dbg.value(metadata i32 %1, metadata !15847, metadata !DIExpression()), !dbg !15849
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15848, metadata !DIExpression()), !dbg !15849
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #27, !dbg !15850
  ret void, !dbg !15851
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !15852 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #27, !dbg !15853
  br i1 %1, label %8, label %2, !dbg !15854

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #26, !dbg !15855
  br i1 %3, label %8, label %4, !dbg !15856

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15857
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #27, !dbg !15858
  %7 = xor i1 %6, true, !dbg !15856
  br label %8, !dbg !15856

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !15859
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #5 !dbg !15860 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !15861, !range !6328
  %2 = icmp eq i8 %1, 0, !dbg !15861
  ret i1 %2, !dbg !15862
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !15863 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14359, metadata !DIExpression()) #25, !dbg !15866
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15868, !srcloc !14374
  call void @llvm.dbg.value(metadata i32 undef, metadata !14371, metadata !DIExpression()) #25, !dbg !15870
  call void @llvm.dbg.value(metadata i32 undef, metadata !14372, metadata !DIExpression()) #25, !dbg !15870
  call void @llvm.dbg.value(metadata i32 undef, metadata !14365, metadata !DIExpression()) #25, !dbg !15866
  call void @llvm.dbg.value(metadata i32 undef, metadata !15865, metadata !DIExpression()), !dbg !15871
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15872
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14528, metadata !DIExpression()) #25, !dbg !15875
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !15877
  %4 = load i8, i8* %3, align 1, !dbg !15878
  %5 = and i8 %4, 127, !dbg !15878
  store i8 %5, i8* %3, align 1, !dbg !15878
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14536, metadata !DIExpression()) #25, !dbg !15879
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #26, !dbg !15881
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15882
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14545, metadata !DIExpression()) #25, !dbg !15883
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !15885
  %8 = load i8, i8* %7, align 1, !dbg !15886
  %9 = or i8 %8, -128, !dbg !15886
  store i8 %9, i8* %7, align 1, !dbg !15886
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14552, metadata !DIExpression()) #25, !dbg !15887
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14559, metadata !DIExpression()) #25, !dbg !15889
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14565, metadata !DIExpression()) #25, !dbg !15889
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !15891
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14566, metadata !DIExpression()) #25, !dbg !15889
  %11 = icmp eq %struct._dnode* %10, null, !dbg !15892
  br i1 %11, label %22, label %12, !dbg !15891

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !14566, metadata !DIExpression()) #25, !dbg !15889
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !15893
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !14566, metadata !DIExpression()) #25, !dbg !15889
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #26, !dbg !15894
  %16 = icmp sgt i32 %15, 0, !dbg !15895
  br i1 %16, label %17, label %19, !dbg !15896

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !15897
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #26, !dbg !15898
  br label %24, !dbg !15899

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #26, !dbg !15892
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14566, metadata !DIExpression()) #25, !dbg !15889
  %21 = icmp eq %struct._dnode* %20, null, !dbg !15892
  br i1 %21, label %22, label %12, !dbg !15891, !llvm.loop !15900

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !15902
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #26, !dbg !15903
  br label %24, !dbg !15904

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !15868
  call void @llvm.dbg.value(metadata i32 %25, metadata !14371, metadata !DIExpression()) #25, !dbg !15870
  call void @llvm.dbg.value(metadata i32 %25, metadata !14365, metadata !DIExpression()) #25, !dbg !15866
  call void @llvm.dbg.value(metadata i32 %25, metadata !15865, metadata !DIExpression()), !dbg !15871
  tail call fastcc void @update_cache(i32 noundef 1) #27, !dbg !15905
  call void @llvm.dbg.value(metadata i32 undef, metadata !14970, metadata !DIExpression()) #25, !dbg !15906
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14975, metadata !DIExpression()) #25, !dbg !15906
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #26, !dbg !15908
  ret void, !dbg !15909
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !15910 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !15914, metadata !DIExpression()), !dbg !15917
  %3 = icmp eq i64 %2, -1, !dbg !15918
  br i1 %3, label %4, label %6, !dbg !15920

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15921
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #27, !dbg !15923
  br label %11, !dbg !15924

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !15915, metadata !DIExpression()), !dbg !15917
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #27, !dbg !15925
  %8 = sext i32 %7 to i64, !dbg !15925
  call void @llvm.dbg.value(metadata i64 %8, metadata !15915, metadata !DIExpression()), !dbg !15917
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %8) #27, !dbg !15926
  %10 = trunc i64 %9 to i32, !dbg !15926
  call void @llvm.dbg.value(metadata i32 %10, metadata !15916, metadata !DIExpression()), !dbg !15917
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !15917
  ret i32 %12, !dbg !15927
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15928 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15932, metadata !DIExpression()), !dbg !15933
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !15934, !srcloc !15936
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #27, !dbg !15937
  ret void, !dbg !15938
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !15939 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15943, metadata !DIExpression()), !dbg !15947
  %2 = icmp eq i64 %0, 0, !dbg !15948
  br i1 %2, label %3, label %4, !dbg !15950

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #27, !dbg !15951
  br label %29, !dbg !15953

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !15945, metadata !DIExpression()), !dbg !15947
  %5 = icmp sgt i64 %0, -3, !dbg !15954
  br i1 %5, label %6, label %10, !dbg !15956

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #26, !dbg !15957
  %8 = trunc i64 %0 to i32, !dbg !15959
  %9 = add i32 %7, %8, !dbg !15959
  call void @llvm.dbg.value(metadata i32 %9, metadata !15944, metadata !DIExpression()), !dbg !15947
  br label %13, !dbg !15960

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !15961
  %12 = sub i32 -2, %11, !dbg !15961
  call void @llvm.dbg.value(metadata i32 %12, metadata !15944, metadata !DIExpression()), !dbg !15947
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !15963
  call void @llvm.dbg.value(metadata i32 %14, metadata !15944, metadata !DIExpression()), !dbg !15947
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14359, metadata !DIExpression()) #25, !dbg !15964
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15966, !srcloc !14374
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !15966
  call void @llvm.dbg.value(metadata i32 %16, metadata !14371, metadata !DIExpression()) #25, !dbg !15968
  call void @llvm.dbg.value(metadata i32 undef, metadata !14372, metadata !DIExpression()) #25, !dbg !15968
  call void @llvm.dbg.value(metadata i32 %16, metadata !14365, metadata !DIExpression()) #25, !dbg !15964
  call void @llvm.dbg.value(metadata i32 %16, metadata !15946, metadata !DIExpression()), !dbg !15947
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15969
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !15970
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #27, !dbg !15971
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15972
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !15973
  tail call fastcc void @z_add_thread_timeout.147(%struct.k_thread* noundef %18, [1 x i64] %19) #27, !dbg !15973
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15974
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #27, !dbg !15975
  call void @llvm.dbg.value(metadata i32 %16, metadata !14970, metadata !DIExpression()) #25, !dbg !15976
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14975, metadata !DIExpression()) #25, !dbg !15976
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #26, !dbg !15978
  %22 = zext i32 %14 to i64, !dbg !15979
  %23 = tail call i32 @sys_clock_tick_get_32() #26, !dbg !15980
  %24 = zext i32 %23 to i64, !dbg !15980
  %25 = sub nsw i64 %22, %24, !dbg !15981
  call void @llvm.dbg.value(metadata i64 %25, metadata !15943, metadata !DIExpression()), !dbg !15947
  %26 = icmp sgt i64 %25, 0, !dbg !15982
  %27 = select i1 %26, i64 %25, i64 0, !dbg !15982
  %28 = trunc i64 %27 to i32, !dbg !15982
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !15947
  ret i32 %30, !dbg !15983
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #11 !dbg !15984 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15986, metadata !DIExpression()), !dbg !15987
  call void @llvm.dbg.value(metadata i64 %0, metadata !14406, metadata !DIExpression()), !dbg !15988
  call void @llvm.dbg.value(metadata i32 10000, metadata !14409, metadata !DIExpression()), !dbg !15988
  call void @llvm.dbg.value(metadata i32 1000, metadata !14410, metadata !DIExpression()), !dbg !15988
  call void @llvm.dbg.value(metadata i8 1, metadata !14411, metadata !DIExpression()), !dbg !15988
  call void @llvm.dbg.value(metadata i1 false, metadata !14412, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15988
  call void @llvm.dbg.value(metadata i1 false, metadata !14413, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15988
  call void @llvm.dbg.value(metadata i8 0, metadata !14414, metadata !DIExpression()), !dbg !15988
  call void @llvm.dbg.value(metadata i1 false, metadata !14415, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15988
  call void @llvm.dbg.value(metadata i1 true, metadata !14416, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15988
  call void @llvm.dbg.value(metadata i64 0, metadata !14417, metadata !DIExpression()), !dbg !15988
  call void @llvm.dbg.value(metadata i64 0, metadata !14417, metadata !DIExpression()), !dbg !15988
  call void @llvm.dbg.value(metadata i64 %0, metadata !14406, metadata !DIExpression()), !dbg !15988
  %2 = udiv i64 %0, 10, !dbg !15990
  ret i64 %2, !dbg !15994
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !15995 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !15996, !srcloc !15998
  tail call void @z_impl_k_yield() #27, !dbg !15999
  ret void, !dbg !16000
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !16001 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16005, metadata !DIExpression()), !dbg !16007
  %2 = sext i32 %0 to i64, !dbg !16008
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #27, !dbg !16009
  call void @llvm.dbg.value(metadata i64 %3, metadata !16006, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16007
  %4 = shl i64 %3, 32, !dbg !16010
  %5 = ashr exact i64 %4, 32, !dbg !16010
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #27, !dbg !16011
  call void @llvm.dbg.value(metadata i32 %6, metadata !16006, metadata !DIExpression()), !dbg !16007
  %7 = sext i32 %6 to i64, !dbg !16012
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #27, !dbg !16013
  %9 = trunc i64 %8 to i32, !dbg !16013
  ret i32 %9, !dbg !16014
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !16015 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16017, metadata !DIExpression()), !dbg !16018
  call void @llvm.dbg.value(metadata i64 %0, metadata !14406, metadata !DIExpression()), !dbg !16019
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14409, metadata !DIExpression()), !dbg !16019
  call void @llvm.dbg.value(metadata i32 10000, metadata !14410, metadata !DIExpression()), !dbg !16019
  call void @llvm.dbg.value(metadata i8 1, metadata !14411, metadata !DIExpression()), !dbg !16019
  call void @llvm.dbg.value(metadata i1 false, metadata !14412, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16019
  call void @llvm.dbg.value(metadata i1 true, metadata !14413, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16019
  call void @llvm.dbg.value(metadata i8 0, metadata !14414, metadata !DIExpression()), !dbg !16019
  call void @llvm.dbg.value(metadata i1 false, metadata !14415, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16019
  call void @llvm.dbg.value(metadata i1 true, metadata !14416, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16019
  call void @llvm.dbg.value(metadata i64 0, metadata !14417, metadata !DIExpression()), !dbg !16019
  call void @llvm.dbg.value(metadata i64 0, metadata !14417, metadata !DIExpression()), !dbg !16019
  %2 = add i64 %0, 99, !dbg !16021
  call void @llvm.dbg.value(metadata i64 %2, metadata !14406, metadata !DIExpression()), !dbg !16019
  %3 = udiv i64 %2, 100, !dbg !16022
  ret i64 %3, !dbg !16023
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #11 !dbg !16024 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16026, metadata !DIExpression()), !dbg !16027
  call void @llvm.dbg.value(metadata i64 %0, metadata !14406, metadata !DIExpression()), !dbg !16028
  call void @llvm.dbg.value(metadata i32 10000, metadata !14409, metadata !DIExpression()), !dbg !16028
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14410, metadata !DIExpression()), !dbg !16028
  call void @llvm.dbg.value(metadata i8 1, metadata !14411, metadata !DIExpression()), !dbg !16028
  call void @llvm.dbg.value(metadata i1 false, metadata !14412, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16028
  call void @llvm.dbg.value(metadata i1 false, metadata !14413, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16028
  call void @llvm.dbg.value(metadata i8 0, metadata !14414, metadata !DIExpression()), !dbg !16028
  call void @llvm.dbg.value(metadata i1 true, metadata !14415, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16028
  call void @llvm.dbg.value(metadata i1 false, metadata !14416, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16028
  call void @llvm.dbg.value(metadata i64 0, metadata !14417, metadata !DIExpression()), !dbg !16028
  call void @llvm.dbg.value(metadata i64 0, metadata !14417, metadata !DIExpression()), !dbg !16028
  %2 = mul i64 %0, 100, !dbg !16030
  ret i64 %2, !dbg !16032
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16033 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16035, metadata !DIExpression()), !dbg !16036
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #27, !dbg !16037
  br i1 %2, label %14, label %3, !dbg !16039

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #27, !dbg !16040
  %5 = icmp slt i32 %4, 0, !dbg !16042
  br i1 %5, label %6, label %10, !dbg !16043

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16044
  %8 = load i8, i8* %7, align 1, !dbg !16044
  %9 = icmp eq i8 %8, 16, !dbg !16047
  br i1 %9, label %10, label %14, !dbg !16048

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #27, !dbg !16049
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #27, !dbg !16050
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !16051, !srcloc !15010
  call void @llvm.dbg.value(metadata i32 %11, metadata !15006, metadata !DIExpression()) #25, !dbg !16055
  %12 = icmp eq i32 %11, 0, !dbg !16056
  br i1 %12, label %13, label %14, !dbg !16057

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #27, !dbg !16058
  br label %14, !dbg !16060

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !16061
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !16062 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16064, metadata !DIExpression()), !dbg !16065
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16066
  %3 = load i8, i8* %2, align 1, !dbg !16066
  %4 = and i8 %3, 2, !dbg !16067
  %5 = icmp ne i8 %4, 0, !dbg !16068
  ret i1 %5, !dbg !16069
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #5 !dbg !16070 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16075
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16074, metadata !DIExpression()), !dbg !16076
  ret %struct.k_thread* %1, !dbg !16077
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !16078 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !16079, !srcloc !15010
  call void @llvm.dbg.value(metadata i32 %1, metadata !15006, metadata !DIExpression()) #25, !dbg !16082
  %2 = icmp eq i32 %1, 0, !dbg !16083
  br i1 %2, label %3, label %8, !dbg !16084

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16085
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #27, !dbg !16086
  %6 = icmp ne i32 %5, 0, !dbg !16084
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !16087
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16088 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16090, metadata !DIExpression()), !dbg !16092
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14359, metadata !DIExpression()) #25, !dbg !16093
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16095, !srcloc !14374
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16095
  call void @llvm.dbg.value(metadata i32 %3, metadata !14371, metadata !DIExpression()) #25, !dbg !16097
  call void @llvm.dbg.value(metadata i32 undef, metadata !14372, metadata !DIExpression()) #25, !dbg !16097
  call void @llvm.dbg.value(metadata i32 %3, metadata !14365, metadata !DIExpression()) #25, !dbg !16093
  call void @llvm.dbg.value(metadata i32 %3, metadata !16091, metadata !DIExpression()), !dbg !16092
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !16098
  %5 = load i8, i8* %4, align 4, !dbg !16098
  %6 = and i8 %5, 1, !dbg !16100
  %7 = icmp eq i8 %6, 0, !dbg !16101
  br i1 %7, label %9, label %8, !dbg !16102

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !14386, metadata !DIExpression()) #25, !dbg !16103
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14391, metadata !DIExpression()) #25, !dbg !16103
  call void @llvm.dbg.value(metadata i32 %3, metadata !14394, metadata !DIExpression()) #25, !dbg !16106
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16108, !srcloc !14400
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #25, !dbg !16109, !srcloc !16111
  br label %24, !dbg !16112

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16113
  %11 = load i8, i8* %10, align 1, !dbg !16113
  %12 = and i8 %11, 8, !dbg !16115
  %13 = icmp eq i8 %12, 0, !dbg !16116
  br i1 %13, label %15, label %14, !dbg !16117

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !14386, metadata !DIExpression()) #25, !dbg !16118
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14391, metadata !DIExpression()) #25, !dbg !16118
  call void @llvm.dbg.value(metadata i32 %3, metadata !14394, metadata !DIExpression()) #25, !dbg !16121
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16123, !srcloc !14400
  br label %24, !dbg !16124

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #27, !dbg !16125
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16126
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !16128
  br i1 %17, label %18, label %23, !dbg !16129

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !16130, !srcloc !15010
  call void @llvm.dbg.value(metadata i32 %19, metadata !15006, metadata !DIExpression()) #25, !dbg !16133
  %20 = icmp eq i32 %19, 0, !dbg !16134
  br i1 %20, label %21, label %23, !dbg !16135

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !14970, metadata !DIExpression()) #25, !dbg !16136
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14975, metadata !DIExpression()) #25, !dbg !16136
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #26, !dbg !16139
  br label %23, !dbg !16140

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !14386, metadata !DIExpression()) #25, !dbg !16141
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14391, metadata !DIExpression()) #25, !dbg !16141
  call void @llvm.dbg.value(metadata i32 %3, metadata !14394, metadata !DIExpression()) #25, !dbg !16143
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16145, !srcloc !14400
  br label %24, !dbg !16146

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !16146
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16147 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16149, metadata !DIExpression()), !dbg !16150
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16151
  %3 = load i8, i8* %2, align 1, !dbg !16151
  %4 = and i8 %3, 8, !dbg !16153
  %5 = icmp eq i8 %4, 0, !dbg !16154
  br i1 %5, label %6, label %20, !dbg !16155

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !16156
  %8 = or i8 %7, 8, !dbg !16156
  store i8 %8, i8* %2, align 1, !dbg !16156
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #27, !dbg !16158
  br i1 %9, label %10, label %12, !dbg !16160

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14528, metadata !DIExpression()) #25, !dbg !16161
  %11 = and i8 %8, 95, !dbg !16164
  store i8 %11, i8* %2, align 1, !dbg !16164
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14536, metadata !DIExpression()) #25, !dbg !16165
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #26, !dbg !16167
  br label %12, !dbg !16168

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16169
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !16169
  %15 = icmp eq %union.anon* %14, null, !dbg !16171
  br i1 %15, label %17, label %16, !dbg !16172

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #27, !dbg !16173
  br label %17, !dbg !16175

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #27, !dbg !16176
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16177
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #27, !dbg !16178
  tail call fastcc void @update_cache(i32 noundef 1) #27, !dbg !16179
  br label %20, !dbg !16180

20:                                               ; preds = %17, %1
  ret void, !dbg !16181
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !16182 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16186, metadata !DIExpression()), !dbg !16188
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #27, !dbg !16189
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16187, metadata !DIExpression()), !dbg !16188
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16190
  br i1 %3, label %10, label %4, !dbg !16191

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #27, !dbg !16192
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #27, !dbg !16194
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16195, metadata !DIExpression()), !dbg !16201
  call void @llvm.dbg.value(metadata i32 0, metadata !16200, metadata !DIExpression()), !dbg !16201
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !16203
  store i32 0, i32* %7, align 4, !dbg !16204
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #27, !dbg !16205
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #27, !dbg !16189
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16187, metadata !DIExpression()), !dbg !16188
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !16190
  br i1 %9, label %10, label %4, !dbg !16191, !llvm.loop !16206

10:                                               ; preds = %4, %1
  ret void, !dbg !16208
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !16209 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16214, metadata !DIExpression()), !dbg !16217
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16213, metadata !DIExpression()), !dbg !16217
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14359, metadata !DIExpression()) #25, !dbg !16218
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16220, !srcloc !14374
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !16220
  call void @llvm.dbg.value(metadata i32 %4, metadata !14371, metadata !DIExpression()) #25, !dbg !16222
  call void @llvm.dbg.value(metadata i32 undef, metadata !14372, metadata !DIExpression()) #25, !dbg !16222
  call void @llvm.dbg.value(metadata i32 %4, metadata !14365, metadata !DIExpression()) #25, !dbg !16218
  call void @llvm.dbg.value(metadata i32 %4, metadata !16215, metadata !DIExpression()), !dbg !16217
  call void @llvm.dbg.value(metadata i32 0, metadata !16216, metadata !DIExpression()), !dbg !16217
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16223
  %6 = load i8, i8* %5, align 1, !dbg !16223
  %7 = and i8 %6, 8, !dbg !16225
  %8 = icmp eq i8 %7, 0, !dbg !16226
  br i1 %8, label %9, label %24, !dbg !16227

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !16214, metadata !DIExpression()), !dbg !16217
  %11 = icmp eq i64 %10, 0, !dbg !16228
  br i1 %11, label %24, label %12, !dbg !16230

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16231
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !16233
  br i1 %14, label %24, label %15, !dbg !16234

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16235
  %17 = load %union.anon*, %union.anon** %16, align 8, !dbg !16235
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !16236
  %19 = icmp eq %union.anon* %17, %18, !dbg !16237
  br i1 %19, label %24, label %20, !dbg !16238

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16239
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %union.anon* noundef nonnull %21) #27, !dbg !16241
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16242
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #27, !dbg !16243
  call void @llvm.dbg.value(metadata i32 %4, metadata !14970, metadata !DIExpression()) #25, !dbg !16244
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14975, metadata !DIExpression()) #25, !dbg !16244
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #26, !dbg !16246
  call void @llvm.dbg.value(metadata i32 %23, metadata !16216, metadata !DIExpression()), !dbg !16217
  br label %26, !dbg !16247

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !16248
  call void @llvm.dbg.value(metadata i32 %25, metadata !16216, metadata !DIExpression()), !dbg !16217
  call void @llvm.dbg.value(metadata i32 %4, metadata !14386, metadata !DIExpression()) #25, !dbg !16249
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14391, metadata !DIExpression()) #25, !dbg !16249
  call void @llvm.dbg.value(metadata i32 %4, metadata !14394, metadata !DIExpression()) #25, !dbg !16251
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !16253, !srcloc !14400
  br label %26, !dbg !16254

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !16217
  ret i32 %27, !dbg !16255
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !16256 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16260, metadata !DIExpression()), !dbg !16268
  call void @llvm.dbg.value(metadata i32 %1, metadata !16261, metadata !DIExpression()), !dbg !16268
  call void @llvm.dbg.value(metadata i8* %2, metadata !16262, metadata !DIExpression()), !dbg !16268
  call void @llvm.dbg.value(metadata i8 0, metadata !16264, metadata !DIExpression()), !dbg !16268
  call void @llvm.dbg.value(metadata i32 0, metadata !16265, metadata !DIExpression()), !dbg !16269
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14359, metadata !DIExpression()) #25, !dbg !16270
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16272, !srcloc !14374
  call void @llvm.dbg.value(metadata i32 undef, metadata !14371, metadata !DIExpression()) #25, !dbg !16274
  call void @llvm.dbg.value(metadata i32 undef, metadata !14372, metadata !DIExpression()) #25, !dbg !16274
  call void @llvm.dbg.value(metadata i32 undef, metadata !14365, metadata !DIExpression()) #25, !dbg !16270
  call void @llvm.dbg.value(metadata i32 undef, metadata !16267, metadata !DIExpression()), !dbg !16269
  call void @llvm.dbg.value(metadata i8 poison, metadata !16264, metadata !DIExpression()), !dbg !16268
  call void @llvm.dbg.value(metadata i32 undef, metadata !16265, metadata !DIExpression()), !dbg !16269
  %5 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #27, !dbg !16275
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16263, metadata !DIExpression()), !dbg !16268
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !16278
  br i1 %7, label %12, label %8, !dbg !16280

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16281, metadata !DIExpression()), !dbg !16288
  call void @llvm.dbg.value(metadata i32 %1, metadata !16286, metadata !DIExpression()), !dbg !16288
  call void @llvm.dbg.value(metadata i8* %2, metadata !16287, metadata !DIExpression()), !dbg !16288
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16195, metadata !DIExpression()), !dbg !16291
  call void @llvm.dbg.value(metadata i32 %1, metadata !16200, metadata !DIExpression()), !dbg !16291
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !16293
  store i32 %1, i32* %9, align 4, !dbg !16294
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !16295
  store i8* %2, i8** %10, align 4, !dbg !16296
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #27, !dbg !16297
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #27, !dbg !16298
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #27, !dbg !16299
  call void @llvm.dbg.value(metadata i8 1, metadata !16264, metadata !DIExpression()), !dbg !16268
  br label %12, !dbg !16300

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !16272
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !16272
  call void @llvm.dbg.value(metadata i32 %14, metadata !14371, metadata !DIExpression()) #25, !dbg !16274
  call void @llvm.dbg.value(metadata i32 %14, metadata !14365, metadata !DIExpression()) #25, !dbg !16270
  call void @llvm.dbg.value(metadata i32 %14, metadata !16267, metadata !DIExpression()), !dbg !16269
  call void @llvm.dbg.value(metadata i8 poison, metadata !16264, metadata !DIExpression()), !dbg !16268
  call void @llvm.dbg.value(metadata i32 undef, metadata !14386, metadata !DIExpression()) #25, !dbg !16301
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14391, metadata !DIExpression()) #25, !dbg !16301
  call void @llvm.dbg.value(metadata i32 undef, metadata !14394, metadata !DIExpression()) #25, !dbg !16303
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #25, !dbg !16305, !srcloc !14400
  call void @llvm.dbg.value(metadata i32 undef, metadata !16265, metadata !DIExpression()), !dbg !16269
  ret i1 %13, !dbg !16306
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !16307 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16312, metadata !DIExpression()), !dbg !16317
  call void @llvm.dbg.value(metadata i64 undef, metadata !16314, metadata !DIExpression()), !dbg !16317
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16311, metadata !DIExpression()), !dbg !16317
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !16313, metadata !DIExpression()), !dbg !16317
  call void @llvm.dbg.value(metadata i8** %4, metadata !16315, metadata !DIExpression()), !dbg !16317
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #27, !dbg !16318
  call void @llvm.dbg.value(metadata i32 %6, metadata !16316, metadata !DIExpression()), !dbg !16317
  %7 = icmp eq i8** %4, null, !dbg !16319
  br i1 %7, label %12, label %8, !dbg !16321

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16322
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16324
  %11 = load i8*, i8** %10, align 4, !dbg !16324
  store i8* %11, i8** %4, align 4, !dbg !16325
  br label %12, !dbg !16326

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !16327
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !16328 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #26, !dbg !16330
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #26, !dbg !16331
  ret void, !dbg !16332
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16333 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !16343, metadata !DIExpression()), !dbg !16360
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16341, metadata !DIExpression()), !dbg !16360
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !16342, metadata !DIExpression()), !dbg !16360
  %5 = icmp eq i64 %4, -1, !dbg !16361
  br i1 %5, label %55, label %6, !dbg !16363

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !16364
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !16365
  call void @llvm.dbg.value(metadata i32 0, metadata !16344, metadata !DIExpression()), !dbg !16366
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16367, metadata !DIExpression()) #25, !dbg !16374
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16376, !srcloc !16382
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !16376
  call void @llvm.dbg.value(metadata i32 %9, metadata !16379, metadata !DIExpression()) #25, !dbg !16383
  call void @llvm.dbg.value(metadata i32 undef, metadata !16380, metadata !DIExpression()) #25, !dbg !16383
  call void @llvm.dbg.value(metadata i32 %9, metadata !16373, metadata !DIExpression()) #25, !dbg !16374
  call void @llvm.dbg.value(metadata i32 %9, metadata !16350, metadata !DIExpression()), !dbg !16366
  call void @llvm.dbg.value(metadata i32 undef, metadata !16344, metadata !DIExpression()), !dbg !16366
  %10 = icmp slt i64 %4, -1, !dbg !16384
  br i1 %10, label %11, label %17, !dbg !16385

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !16386
  %13 = add i64 %4, %12, !dbg !16387
  %14 = sub i64 -2, %13, !dbg !16387
  call void @llvm.dbg.value(metadata i64 %14, metadata !16354, metadata !DIExpression()), !dbg !16388
  %15 = icmp sgt i64 %14, 1, !dbg !16389
  %16 = select i1 %15, i64 %14, i64 1, !dbg !16389
  br label %22, !dbg !16390

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !16391
  %19 = tail call fastcc i32 @elapsed.169() #27, !dbg !16393
  %20 = sext i32 %19 to i64, !dbg !16393
  %21 = add nsw i64 %18, %20, !dbg !16394
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !16395
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16396
  store i64 %23, i64* %24, align 8, !dbg !16397
  %25 = tail call fastcc %struct._timeout* @first() #27, !dbg !16398
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !16351, metadata !DIExpression()), !dbg !16400
  %26 = icmp eq %struct._timeout* %25, null, !dbg !16401
  br i1 %26, label %42, label %27, !dbg !16401

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !16402
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !16351, metadata !DIExpression()), !dbg !16400
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !16406
  %31 = load i64, i64* %30, align 8, !dbg !16406
  %32 = icmp slt i64 %28, %31, !dbg !16407
  br i1 %32, label %33, label %38, !dbg !16408

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !16406
  %35 = sub nsw i64 %31, %28, !dbg !16409
  store i64 %35, i64* %34, align 8, !dbg !16409
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !16411
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16412
  tail call fastcc void @sys_dlist_insert.170(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #27, !dbg !16413
  br label %44, !dbg !16414

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !16415
  store i64 %39, i64* %24, align 8, !dbg !16415
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #27, !dbg !16416
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !16351, metadata !DIExpression()), !dbg !16400
  %41 = icmp eq %struct._timeout* %40, null, !dbg !16401
  br i1 %41, label %42, label %27, !dbg !16401, !llvm.loop !16417

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16419
  tail call fastcc void @sys_dlist_append.171(%struct._dnode* noundef %43) #27, !dbg !16422
  br label %44, !dbg !16423

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #27, !dbg !16424
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !16425
  br i1 %46, label %47, label %54, !dbg !16426

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #27, !dbg !16427
  call void @llvm.dbg.value(metadata i32 %48, metadata !16357, metadata !DIExpression()), !dbg !16428
  %49 = icmp ne i32 %48, 0, !dbg !16429
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !16431
  br i1 %52, label %54, label %53, !dbg !16431

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #26, !dbg !16432
  br label %54, !dbg !16434

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !16435, metadata !DIExpression()) #25, !dbg !16441
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16440, metadata !DIExpression()) #25, !dbg !16441
  call void @llvm.dbg.value(metadata i32 %9, metadata !16443, metadata !DIExpression()) #25, !dbg !16446
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !16448, !srcloc !16449
  call void @llvm.dbg.value(metadata i32 undef, metadata !16344, metadata !DIExpression()), !dbg !16366
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !16450
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.169() unnamed_addr #1 !dbg !16451 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !16454
  %2 = icmp eq i32 %1, 0, !dbg !16455
  br i1 %2, label %3, label %5, !dbg !16454

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #26, !dbg !16456
  br label %5, !dbg !16454

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !16454
  ret i32 %6, !dbg !16457
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #5 !dbg !16458 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.174() #27, !dbg !16464
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16462, metadata !DIExpression()), !dbg !16465
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !16466
  ret %struct._timeout* %2, !dbg !16467
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.170(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !16468 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16472, metadata !DIExpression()), !dbg !16476
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16473, metadata !DIExpression()), !dbg !16476
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16477
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16477
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16474, metadata !DIExpression()), !dbg !16476
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16478
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !16479
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16480
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !16481
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16482
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16483
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16484
  ret void, !dbg !16485
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #5 !dbg !16486 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16490, metadata !DIExpression()), !dbg !16492
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16493
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.172(%struct._dnode* noundef %2) #27, !dbg !16494
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16491, metadata !DIExpression()), !dbg !16492
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !16495
  ret %struct._timeout* %4, !dbg !16496
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.171(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !16497 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16502, metadata !DIExpression()), !dbg !16505
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16503, metadata !DIExpression()), !dbg !16505
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16506
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !16504, metadata !DIExpression()), !dbg !16505
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16507
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !16508
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16509
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !16510
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !16511
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !16512
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16513
  ret void, !dbg !16514
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !16515 {
  %1 = tail call fastcc %struct._timeout* @first() #27, !dbg !16520
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !16517, metadata !DIExpression()), !dbg !16521
  %2 = tail call fastcc i32 @elapsed.169() #27, !dbg !16522
  call void @llvm.dbg.value(metadata i32 %2, metadata !16518, metadata !DIExpression()), !dbg !16521
  %3 = icmp eq %struct._timeout* %1, null, !dbg !16523
  br i1 %3, label %14, label %4, !dbg !16525

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !16526
  %6 = load i64, i64* %5, align 8, !dbg !16526
  %7 = sext i32 %2 to i64, !dbg !16527
  %8 = sub nsw i64 %6, %7, !dbg !16528
  %9 = icmp sgt i64 %8, 2147483647, !dbg !16529
  br i1 %9, label %14, label %10, !dbg !16530

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !16531
  %12 = select i1 %11, i64 %8, i64 0, !dbg !16531
  %13 = trunc i64 %12 to i32, !dbg !16531
  call void @llvm.dbg.value(metadata i32 %13, metadata !16519, metadata !DIExpression()), !dbg !16521
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !16533
  call void @llvm.dbg.value(metadata i32 %15, metadata !16519, metadata !DIExpression()), !dbg !16521
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16534
  %17 = icmp ne i32 %16, 0, !dbg !16536
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !16537
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !16537
  call void @llvm.dbg.value(metadata i32 %20, metadata !16519, metadata !DIExpression()), !dbg !16521
  ret i32 %20, !dbg !16538
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.172(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !16539 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16543, metadata !DIExpression()), !dbg !16545
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16544, metadata !DIExpression()), !dbg !16545
  %2 = icmp eq %struct._dnode* %0, null, !dbg !16546
  br i1 %2, label %5, label %3, !dbg !16547

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.173(%struct._dnode* noundef nonnull %0) #27, !dbg !16548
  br label %5, !dbg !16547

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !16547
  ret %struct._dnode* %6, !dbg !16549
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.173(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !16550 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16552, metadata !DIExpression()), !dbg !16554
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16553, metadata !DIExpression()), !dbg !16554
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16555
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !16556
  br i1 %3, label %7, label %4, !dbg !16557

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16558
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !16558
  br label %7, !dbg !16557

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !16557
  ret %struct._dnode* %8, !dbg !16559
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.174() unnamed_addr #5 !dbg !16560 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16564, metadata !DIExpression()), !dbg !16565
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.175() #27, !dbg !16566
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !16566
  ret %struct._dnode* %3, !dbg !16567
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.175() unnamed_addr #5 !dbg !16568 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16572, metadata !DIExpression()), !dbg !16573
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !16574
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !16575
  ret i1 %2, !dbg !16576
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16577 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16581, metadata !DIExpression()), !dbg !16586
  call void @llvm.dbg.value(metadata i32 -22, metadata !16582, metadata !DIExpression()), !dbg !16586
  call void @llvm.dbg.value(metadata i32 0, metadata !16583, metadata !DIExpression()), !dbg !16587
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16367, metadata !DIExpression()) #25, !dbg !16588
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16590, !srcloc !16382
  call void @llvm.dbg.value(metadata i32 undef, metadata !16379, metadata !DIExpression()) #25, !dbg !16592
  call void @llvm.dbg.value(metadata i32 undef, metadata !16380, metadata !DIExpression()) #25, !dbg !16592
  call void @llvm.dbg.value(metadata i32 undef, metadata !16373, metadata !DIExpression()) #25, !dbg !16588
  call void @llvm.dbg.value(metadata i32 undef, metadata !16585, metadata !DIExpression()), !dbg !16587
  call void @llvm.dbg.value(metadata i32 -22, metadata !16582, metadata !DIExpression()), !dbg !16586
  call void @llvm.dbg.value(metadata i32 undef, metadata !16583, metadata !DIExpression()), !dbg !16587
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !16582, metadata !DIExpression()), !dbg !16586
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.178(%struct._dnode* noundef %3) #27, !dbg !16593
  br i1 %4, label %5, label %6, !dbg !16597

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #27, !dbg !16598
  call void @llvm.dbg.value(metadata i32 0, metadata !16582, metadata !DIExpression()), !dbg !16586
  br label %6, !dbg !16600

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !16586
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !16590
  call void @llvm.dbg.value(metadata i32 %8, metadata !16379, metadata !DIExpression()) #25, !dbg !16592
  call void @llvm.dbg.value(metadata i32 %8, metadata !16373, metadata !DIExpression()) #25, !dbg !16588
  call void @llvm.dbg.value(metadata i32 %8, metadata !16585, metadata !DIExpression()), !dbg !16587
  call void @llvm.dbg.value(metadata i32 %7, metadata !16582, metadata !DIExpression()), !dbg !16586
  call void @llvm.dbg.value(metadata i32 undef, metadata !16435, metadata !DIExpression()) #25, !dbg !16601
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16440, metadata !DIExpression()) #25, !dbg !16601
  call void @llvm.dbg.value(metadata i32 undef, metadata !16443, metadata !DIExpression()) #25, !dbg !16603
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !16605, !srcloc !16449
  call void @llvm.dbg.value(metadata i32 undef, metadata !16583, metadata !DIExpression()), !dbg !16587
  ret i32 %7, !dbg !16606
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.178(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !16607 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16613, metadata !DIExpression()), !dbg !16614
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16615
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16615
  %4 = icmp ne %struct._dnode* %3, null, !dbg !16616
  ret i1 %4, !dbg !16617
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #8 !dbg !16618 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16620, metadata !DIExpression()), !dbg !16621
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #27, !dbg !16622
  %3 = icmp eq %struct._timeout* %2, null, !dbg !16624
  br i1 %3, label %10, label %4, !dbg !16625

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16626
  %6 = load i64, i64* %5, align 8, !dbg !16626
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !16628
  %8 = load i64, i64* %7, align 8, !dbg !16629
  %9 = add nsw i64 %8, %6, !dbg !16629
  store i64 %9, i64* %7, align 8, !dbg !16629
  br label %10, !dbg !16630

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16631
  tail call fastcc void @sys_dlist_remove.179(%struct._dnode* noundef %11) #27, !dbg !16632
  ret void, !dbg !16633
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.179(%struct._dnode* nocapture noundef %0) unnamed_addr #8 !dbg !16634 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16638, metadata !DIExpression()), !dbg !16641
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16642
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16642
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16639, metadata !DIExpression()), !dbg !16641
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16643
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !16643
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !16640, metadata !DIExpression()), !dbg !16641
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !16644
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !16645
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !16646
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !16647
  tail call fastcc void @sys_dnode_init.180(%struct._dnode* noundef %0) #27, !dbg !16648
  ret void, !dbg !16649
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.180(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !16650 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16652, metadata !DIExpression()), !dbg !16653
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16654
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !16655
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16656
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !16657
  ret void, !dbg !16658
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16659 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16665, metadata !DIExpression()), !dbg !16670
  call void @llvm.dbg.value(metadata i64 0, metadata !16666, metadata !DIExpression()), !dbg !16670
  call void @llvm.dbg.value(metadata i32 0, metadata !16667, metadata !DIExpression()), !dbg !16671
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16367, metadata !DIExpression()) #25, !dbg !16672
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16674, !srcloc !16382
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16674
  call void @llvm.dbg.value(metadata i32 %3, metadata !16379, metadata !DIExpression()) #25, !dbg !16676
  call void @llvm.dbg.value(metadata i32 undef, metadata !16380, metadata !DIExpression()) #25, !dbg !16676
  call void @llvm.dbg.value(metadata i32 %3, metadata !16373, metadata !DIExpression()) #25, !dbg !16672
  call void @llvm.dbg.value(metadata i32 %3, metadata !16669, metadata !DIExpression()), !dbg !16671
  call void @llvm.dbg.value(metadata i64 0, metadata !16666, metadata !DIExpression()), !dbg !16670
  call void @llvm.dbg.value(metadata i32 undef, metadata !16667, metadata !DIExpression()), !dbg !16671
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #27, !dbg !16677
  call void @llvm.dbg.value(metadata i64 %4, metadata !16666, metadata !DIExpression()), !dbg !16670
  call void @llvm.dbg.value(metadata i32 %3, metadata !16435, metadata !DIExpression()) #25, !dbg !16680
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16440, metadata !DIExpression()) #25, !dbg !16680
  call void @llvm.dbg.value(metadata i32 %3, metadata !16443, metadata !DIExpression()) #25, !dbg !16682
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16684, !srcloc !16449
  call void @llvm.dbg.value(metadata i32 undef, metadata !16667, metadata !DIExpression()), !dbg !16671
  ret i64 %4, !dbg !16685
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !16686 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16688, metadata !DIExpression()), !dbg !16692
  call void @llvm.dbg.value(metadata i64 0, metadata !16689, metadata !DIExpression()), !dbg !16692
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.181(%struct._timeout* noundef %0) #27, !dbg !16693
  br i1 %2, label %21, label %3, !dbg !16695

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #27, !dbg !16696
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !16690, metadata !DIExpression()), !dbg !16697
  call void @llvm.dbg.value(metadata i64 0, metadata !16689, metadata !DIExpression()), !dbg !16692
  %5 = icmp eq %struct._timeout* %4, null, !dbg !16698
  br i1 %5, label %16, label %6, !dbg !16700

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !16690, metadata !DIExpression()), !dbg !16697
  call void @llvm.dbg.value(metadata i64 %8, metadata !16689, metadata !DIExpression()), !dbg !16692
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !16701
  %10 = load i64, i64* %9, align 8, !dbg !16701
  %11 = add nsw i64 %10, %8, !dbg !16703
  call void @llvm.dbg.value(metadata i64 %11, metadata !16689, metadata !DIExpression()), !dbg !16692
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !16704
  br i1 %12, label %16, label %13, !dbg !16706

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #27, !dbg !16707
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !16690, metadata !DIExpression()), !dbg !16697
  call void @llvm.dbg.value(metadata i64 %11, metadata !16689, metadata !DIExpression()), !dbg !16692
  %15 = icmp eq %struct._timeout* %14, null, !dbg !16698
  br i1 %15, label %16, label %6, !dbg !16700, !llvm.loop !16708

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !16692
  call void @llvm.dbg.value(metadata i64 %17, metadata !16689, metadata !DIExpression()), !dbg !16692
  %18 = tail call fastcc i32 @elapsed.169() #27, !dbg !16710
  %19 = sext i32 %18 to i64, !dbg !16710
  %20 = sub nsw i64 %17, %19, !dbg !16711
  br label %21, !dbg !16712

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !16692
  ret i64 %22, !dbg !16713
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.181(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !16714 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16718, metadata !DIExpression()), !dbg !16719
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16720
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.178(%struct._dnode* noundef %2) #27, !dbg !16721
  %4 = xor i1 %3, true, !dbg !16722
  ret i1 %4, !dbg !16723
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16724 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16726, metadata !DIExpression()), !dbg !16731
  call void @llvm.dbg.value(metadata i64 0, metadata !16727, metadata !DIExpression()), !dbg !16731
  call void @llvm.dbg.value(metadata i32 0, metadata !16728, metadata !DIExpression()), !dbg !16732
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16367, metadata !DIExpression()) #25, !dbg !16733
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16735, !srcloc !16382
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16735
  call void @llvm.dbg.value(metadata i32 %3, metadata !16379, metadata !DIExpression()) #25, !dbg !16737
  call void @llvm.dbg.value(metadata i32 undef, metadata !16380, metadata !DIExpression()) #25, !dbg !16737
  call void @llvm.dbg.value(metadata i32 %3, metadata !16373, metadata !DIExpression()) #25, !dbg !16733
  call void @llvm.dbg.value(metadata i32 %3, metadata !16730, metadata !DIExpression()), !dbg !16732
  call void @llvm.dbg.value(metadata i64 0, metadata !16727, metadata !DIExpression()), !dbg !16731
  call void @llvm.dbg.value(metadata i32 undef, metadata !16728, metadata !DIExpression()), !dbg !16732
  %4 = load i64, i64* @curr_tick, align 8, !dbg !16738
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #27, !dbg !16741
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !16727, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !16731
  call void @llvm.dbg.value(metadata i32 %3, metadata !16435, metadata !DIExpression()) #25, !dbg !16742
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16440, metadata !DIExpression()) #25, !dbg !16742
  call void @llvm.dbg.value(metadata i32 %3, metadata !16443, metadata !DIExpression()) #25, !dbg !16744
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16746, !srcloc !16449
  call void @llvm.dbg.value(metadata i32 undef, metadata !16728, metadata !DIExpression()), !dbg !16732
  %6 = add i64 %5, %4, !dbg !16747
  ret i64 %6, !dbg !16748
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !16749 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !16751, metadata !DIExpression()), !dbg !16755
  call void @llvm.dbg.value(metadata i32 0, metadata !16752, metadata !DIExpression()), !dbg !16756
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16367, metadata !DIExpression()) #25, !dbg !16757
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16759, !srcloc !16382
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16759
  call void @llvm.dbg.value(metadata i32 %2, metadata !16379, metadata !DIExpression()) #25, !dbg !16761
  call void @llvm.dbg.value(metadata i32 undef, metadata !16380, metadata !DIExpression()) #25, !dbg !16761
  call void @llvm.dbg.value(metadata i32 %2, metadata !16373, metadata !DIExpression()) #25, !dbg !16757
  call void @llvm.dbg.value(metadata i32 %2, metadata !16754, metadata !DIExpression()), !dbg !16756
  call void @llvm.dbg.value(metadata i32 -1, metadata !16751, metadata !DIExpression()), !dbg !16755
  call void @llvm.dbg.value(metadata i32 undef, metadata !16752, metadata !DIExpression()), !dbg !16756
  %3 = tail call fastcc i32 @next_timeout() #27, !dbg !16762
  call void @llvm.dbg.value(metadata i32 %3, metadata !16751, metadata !DIExpression()), !dbg !16755
  call void @llvm.dbg.value(metadata i32 %2, metadata !16435, metadata !DIExpression()) #25, !dbg !16765
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16440, metadata !DIExpression()) #25, !dbg !16765
  call void @llvm.dbg.value(metadata i32 %2, metadata !16443, metadata !DIExpression()) #25, !dbg !16767
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !16769, !srcloc !16449
  call void @llvm.dbg.value(metadata i32 undef, metadata !16752, metadata !DIExpression()), !dbg !16756
  ret i32 %3, !dbg !16770
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !16771 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16773, metadata !DIExpression()), !dbg !16783
  call void @llvm.dbg.value(metadata i1 %1, metadata !16774, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16783
  call void @llvm.dbg.value(metadata i32 0, metadata !16775, metadata !DIExpression()), !dbg !16784
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16367, metadata !DIExpression()) #25, !dbg !16785
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16787, !srcloc !16382
  call void @llvm.dbg.value(metadata i32 undef, metadata !16379, metadata !DIExpression()) #25, !dbg !16789
  call void @llvm.dbg.value(metadata i32 undef, metadata !16380, metadata !DIExpression()) #25, !dbg !16789
  call void @llvm.dbg.value(metadata i32 undef, metadata !16373, metadata !DIExpression()) #25, !dbg !16785
  call void @llvm.dbg.value(metadata i32 undef, metadata !16777, metadata !DIExpression()), !dbg !16784
  call void @llvm.dbg.value(metadata i32 undef, metadata !16775, metadata !DIExpression()), !dbg !16784
  %4 = tail call fastcc i32 @next_timeout() #27, !dbg !16790
  call void @llvm.dbg.value(metadata i32 %4, metadata !16778, metadata !DIExpression()), !dbg !16791
  call void @llvm.dbg.value(metadata i1 undef, metadata !16781, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16791
  %5 = icmp slt i32 %4, 2, !dbg !16792
  call void @llvm.dbg.value(metadata i1 %5, metadata !16782, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16791
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !16793
  call void @llvm.dbg.value(metadata i1 %6, metadata !16781, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16791
  br i1 %7, label %11, label %8, !dbg !16793

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !16795
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !16795
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #26, !dbg !16797
  br label %11, !dbg !16798

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !16787
  call void @llvm.dbg.value(metadata i32 %12, metadata !16379, metadata !DIExpression()) #25, !dbg !16789
  call void @llvm.dbg.value(metadata i32 %12, metadata !16373, metadata !DIExpression()) #25, !dbg !16785
  call void @llvm.dbg.value(metadata i32 %12, metadata !16777, metadata !DIExpression()), !dbg !16784
  call void @llvm.dbg.value(metadata i32 undef, metadata !16435, metadata !DIExpression()) #25, !dbg !16799
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16440, metadata !DIExpression()) #25, !dbg !16799
  call void @llvm.dbg.value(metadata i32 undef, metadata !16443, metadata !DIExpression()) #25, !dbg !16801
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #25, !dbg !16803, !srcloc !16449
  call void @llvm.dbg.value(metadata i32 1, metadata !16775, metadata !DIExpression()), !dbg !16784
  call void @llvm.dbg.value(metadata i32 undef, metadata !16775, metadata !DIExpression()), !dbg !16784
  ret void, !dbg !16804
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !16805 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16809, metadata !DIExpression()), !dbg !16814
  tail call void @z_time_slice(i32 noundef %0) #26, !dbg !16815
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16367, metadata !DIExpression()) #25, !dbg !16816
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16818, !srcloc !16382
  call void @llvm.dbg.value(metadata i32 undef, metadata !16379, metadata !DIExpression()) #25, !dbg !16820
  call void @llvm.dbg.value(metadata i32 undef, metadata !16380, metadata !DIExpression()) #25, !dbg !16820
  call void @llvm.dbg.value(metadata i32 undef, metadata !16373, metadata !DIExpression()) #25, !dbg !16816
  call void @llvm.dbg.value(metadata i32 undef, metadata !16810, metadata !DIExpression()), !dbg !16814
  store i32 %0, i32* @announce_remaining, align 4, !dbg !16814
  call void @llvm.dbg.value(metadata i32 undef, metadata !16810, metadata !DIExpression()), !dbg !16814
  %3 = tail call fastcc %struct._timeout* @first() #27, !dbg !16821
  %4 = icmp eq %struct._timeout* %3, null, !dbg !16822
  br i1 %4, label %28, label %5, !dbg !16823

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !16824
  %10 = load i64, i64* %9, align 8, !dbg !16824
  %11 = sext i32 %8 to i64, !dbg !16825
  %12 = icmp sgt i64 %10, %11, !dbg !16826
  br i1 %12, label %26, label %13, !dbg !16827

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !16814
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !16811, metadata !DIExpression()), !dbg !16828
  %15 = trunc i64 %10 to i32, !dbg !16829
  call void @llvm.dbg.value(metadata i32 %15, metadata !16813, metadata !DIExpression()), !dbg !16828
  %16 = sext i32 %15 to i64, !dbg !16830
  %17 = load i64, i64* @curr_tick, align 8, !dbg !16831
  %18 = add i64 %17, %16, !dbg !16831
  store i64 %18, i64* @curr_tick, align 8, !dbg !16831
  store i64 0, i64* %9, align 8, !dbg !16832
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #27, !dbg !16833
  call void @llvm.dbg.value(metadata i32 %14, metadata !16435, metadata !DIExpression()) #25, !dbg !16834
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16440, metadata !DIExpression()) #25, !dbg !16834
  call void @llvm.dbg.value(metadata i32 %14, metadata !16443, metadata !DIExpression()) #25, !dbg !16836
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #25, !dbg !16838, !srcloc !16449
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !16839
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !16839
  tail call void %20(%struct._timeout* noundef nonnull %6) #26, !dbg !16840
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16367, metadata !DIExpression()) #25, !dbg !16841
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16843, !srcloc !16382
  call void @llvm.dbg.value(metadata i32 undef, metadata !16379, metadata !DIExpression()) #25, !dbg !16845
  call void @llvm.dbg.value(metadata i32 undef, metadata !16380, metadata !DIExpression()) #25, !dbg !16845
  call void @llvm.dbg.value(metadata i32 undef, metadata !16373, metadata !DIExpression()) #25, !dbg !16841
  call void @llvm.dbg.value(metadata i32 undef, metadata !16810, metadata !DIExpression()), !dbg !16814
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !16846
  %23 = sub nsw i32 %22, %15, !dbg !16846
  store i32 %23, i32* @announce_remaining, align 4, !dbg !16814
  call void @llvm.dbg.value(metadata i32 undef, metadata !16810, metadata !DIExpression()), !dbg !16814
  %24 = tail call fastcc %struct._timeout* @first() #27, !dbg !16821
  %25 = icmp eq %struct._timeout* %24, null, !dbg !16822
  br i1 %25, label %28, label %5, !dbg !16823, !llvm.loop !16847

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !16849
  store i64 %27, i64* %9, align 8, !dbg !16849
  br label %32, !dbg !16852

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !16814
  %31 = sext i32 %30 to i64, !dbg !16853
  br label %32, !dbg !16853

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !16853
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !16814
  %36 = load i64, i64* @curr_tick, align 8, !dbg !16854
  %37 = add i64 %36, %33, !dbg !16854
  store i64 %37, i64* @curr_tick, align 8, !dbg !16854
  store i32 0, i32* @announce_remaining, align 4, !dbg !16855
  %38 = tail call fastcc i32 @next_timeout() #27, !dbg !16856
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #26, !dbg !16857
  call void @llvm.dbg.value(metadata i32 %35, metadata !16435, metadata !DIExpression()) #25, !dbg !16858
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16440, metadata !DIExpression()) #25, !dbg !16858
  call void @llvm.dbg.value(metadata i32 %35, metadata !16443, metadata !DIExpression()) #25, !dbg !16860
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #25, !dbg !16862, !srcloc !16449
  ret void, !dbg !16863
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !16864 {
  call void @llvm.dbg.value(metadata i64 0, metadata !16868, metadata !DIExpression()), !dbg !16872
  call void @llvm.dbg.value(metadata i32 0, metadata !16869, metadata !DIExpression()), !dbg !16873
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16367, metadata !DIExpression()) #25, !dbg !16874
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16876, !srcloc !16382
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16876
  call void @llvm.dbg.value(metadata i32 %2, metadata !16379, metadata !DIExpression()) #25, !dbg !16878
  call void @llvm.dbg.value(metadata i32 undef, metadata !16380, metadata !DIExpression()) #25, !dbg !16878
  call void @llvm.dbg.value(metadata i32 %2, metadata !16373, metadata !DIExpression()) #25, !dbg !16874
  call void @llvm.dbg.value(metadata i32 %2, metadata !16871, metadata !DIExpression()), !dbg !16873
  call void @llvm.dbg.value(metadata i64 0, metadata !16868, metadata !DIExpression()), !dbg !16872
  call void @llvm.dbg.value(metadata i32 undef, metadata !16869, metadata !DIExpression()), !dbg !16873
  %3 = load i64, i64* @curr_tick, align 8, !dbg !16879
  %4 = tail call fastcc i32 @elapsed.169() #27, !dbg !16882
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !16868, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !16872
  call void @llvm.dbg.value(metadata i32 %2, metadata !16435, metadata !DIExpression()) #25, !dbg !16883
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16440, metadata !DIExpression()) #25, !dbg !16883
  call void @llvm.dbg.value(metadata i32 %2, metadata !16443, metadata !DIExpression()) #25, !dbg !16885
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !16887, !srcloc !16449
  call void @llvm.dbg.value(metadata i32 undef, metadata !16869, metadata !DIExpression()), !dbg !16873
  %5 = sext i32 %4 to i64, !dbg !16882
  %6 = add i64 %3, %5, !dbg !16888
  ret i64 %6, !dbg !16889
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !16890 {
  %1 = tail call i64 @sys_clock_tick_get() #27, !dbg !16891
  %2 = trunc i64 %1 to i32, !dbg !16892
  ret i32 %2, !dbg !16893
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !16894 {
  %1 = tail call i64 @sys_clock_tick_get() #27, !dbg !16895
  ret i64 %1, !dbg !16896
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !16897 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16899, metadata !DIExpression()), !dbg !16906
  %2 = icmp eq i32 %0, 0, !dbg !16907
  br i1 %2, label %10, label %3, !dbg !16909

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #27, !dbg !16910
  call void @llvm.dbg.value(metadata i32 %4, metadata !16900, metadata !DIExpression()), !dbg !16906
  %5 = mul i32 %0, 84, !dbg !16911
  call void @llvm.dbg.value(metadata i32 %5, metadata !16901, metadata !DIExpression()), !dbg !16906
  br label %6, !dbg !16912

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #27, !dbg !16913
  call void @llvm.dbg.value(metadata i32 %7, metadata !16902, metadata !DIExpression()), !dbg !16914
  %8 = sub i32 %7, %4, !dbg !16915
  %9 = icmp ult i32 %8, %5, !dbg !16917
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !16918
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !16919 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #27, !dbg !16920
  ret i32 %1, !dbg !16921
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !16922 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #26, !dbg !16924
  ret i32 %1, !dbg !16925
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !16926 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !16930, metadata !DIExpression()), !dbg !16932
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !16933

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #27, !dbg !16934
  br label %14, !dbg !16938

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !16931, metadata !DIExpression()), !dbg !16932
  %6 = icmp slt i64 %2, -1, !dbg !16939
  br i1 %6, label %7, label %9, !dbg !16942

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !16943
  br label %14, !dbg !16944

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #27, !dbg !16946
  %11 = icmp ugt i64 %2, 1, !dbg !16947
  %12 = select i1 %11, i64 %2, i64 1, !dbg !16947
  %13 = add nsw i64 %10, %12, !dbg !16948
  br label %14, !dbg !16949

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !16950
  ret i64 %15, !dbg !16951
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_free(i8* noundef %0) local_unnamed_addr #1 !dbg !16952 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !16955, metadata !DIExpression()), !dbg !16988
  %2 = icmp eq i8* %0, null, !dbg !16989
  br i1 %2, label %7, label %3, !dbg !16991

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !16956, metadata !DIExpression()), !dbg !16988
  %4 = getelementptr inbounds i8, i8* %0, i32 -4, !dbg !16992
  %5 = bitcast i8* %4 to %struct.k_heap**, !dbg !16992
  call void @llvm.dbg.value(metadata %struct.k_heap** %5, metadata !16956, metadata !DIExpression()), !dbg !16988
  call void @llvm.dbg.value(metadata i8* %4, metadata !16955, metadata !DIExpression()), !dbg !16988
  %6 = load %struct.k_heap*, %struct.k_heap** %5, align 4, !dbg !16994
  tail call void @k_heap_free(%struct.k_heap* noundef %6, i8* noundef nonnull %4) #26, !dbg !16995
  br label %7, !dbg !16996

7:                                                ; preds = %3, %1
  ret void, !dbg !16997
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_thread_aligned_alloc(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16998 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17002, metadata !DIExpression()), !dbg !17006
  call void @llvm.dbg.value(metadata i32 %1, metadata !17003, metadata !DIExpression()), !dbg !17006
  %3 = tail call zeroext i1 @k_is_in_isr() #26, !dbg !17007
  br i1 %3, label %11, label %4, !dbg !17009

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17010
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 6, !dbg !17012
  %7 = load %struct.k_heap*, %struct.k_heap** %6, align 8, !dbg !17012
  call void @llvm.dbg.value(metadata %struct.k_heap* %7, metadata !17005, metadata !DIExpression()), !dbg !17006
  %8 = icmp eq %struct.k_heap* %7, null, !dbg !17013
  br i1 %8, label %11, label %9, !dbg !17015

9:                                                ; preds = %4
  %10 = tail call fastcc i8* @z_heap_aligned_alloc(%struct.k_heap* noundef nonnull %7, i32 noundef %0, i32 noundef %1) #27, !dbg !17016
  call void @llvm.dbg.value(metadata i8* %10, metadata !17004, metadata !DIExpression()), !dbg !17006
  br label %11, !dbg !17018

11:                                               ; preds = %2, %4, %9
  %12 = phi i8* [ %10, %9 ], [ null, %4 ], [ null, %2 ], !dbg !17019
  call void @llvm.dbg.value(metadata i8* %12, metadata !17004, metadata !DIExpression()), !dbg !17006
  ret i8* %12, !dbg !17020
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !17021 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17025, metadata !DIExpression()), !dbg !17031
  call void @llvm.dbg.value(metadata i32 %1, metadata !17026, metadata !DIExpression()), !dbg !17031
  call void @llvm.dbg.value(metadata i32 %2, metadata !17027, metadata !DIExpression()), !dbg !17031
  store i32 %2, i32* %4, align 4
  call void @llvm.dbg.value(metadata i32* %4, metadata !17027, metadata !DIExpression(DW_OP_deref)), !dbg !17031
  %5 = call fastcc zeroext i1 @size_add_overflow(i32 noundef %2, i32* noundef nonnull %4) #27, !dbg !17032
  br i1 %5, label %14, label %6, !dbg !17034

6:                                                ; preds = %3
  %7 = or i32 %1, 4, !dbg !17035
  call void @llvm.dbg.value(metadata i32 %7, metadata !17030, metadata !DIExpression()), !dbg !17031
  %8 = load i32, i32* %4, align 4, !dbg !17036
  call void @llvm.dbg.value(metadata i32 %8, metadata !17027, metadata !DIExpression()), !dbg !17031
  %9 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %7, i32 noundef %8, [1 x i64] zeroinitializer) #26, !dbg !17037
  call void @llvm.dbg.value(metadata i8* %9, metadata !17028, metadata !DIExpression()), !dbg !17031
  %10 = icmp eq i8* %9, null, !dbg !17038
  br i1 %10, label %14, label %11, !dbg !17040

11:                                               ; preds = %6
  %12 = bitcast i8* %9 to %struct.k_heap**, !dbg !17041
  call void @llvm.dbg.value(metadata %struct.k_heap** %12, metadata !17029, metadata !DIExpression()), !dbg !17031
  store %struct.k_heap* %0, %struct.k_heap** %12, align 4, !dbg !17042
  %13 = getelementptr inbounds i8, i8* %9, i32 4, !dbg !17043
  call void @llvm.dbg.value(metadata i8* %13, metadata !17029, metadata !DIExpression()), !dbg !17031
  call void @llvm.dbg.value(metadata i8* %13, metadata !17028, metadata !DIExpression()), !dbg !17031
  br label %14, !dbg !17044

14:                                               ; preds = %6, %3, %11
  %15 = phi i8* [ %13, %11 ], [ null, %3 ], [ null, %6 ], !dbg !17031
  ret i8* %15, !dbg !17045
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_add_overflow(i32 noundef %0, i32* nocapture noundef writeonly %1) unnamed_addr #24 !dbg !17046 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17051, metadata !DIExpression()), !dbg !17054
  call void @llvm.dbg.value(metadata i32 4, metadata !17052, metadata !DIExpression()), !dbg !17054
  call void @llvm.dbg.value(metadata i32* %1, metadata !17053, metadata !DIExpression()), !dbg !17054
  %3 = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %0, i32 4), !dbg !17055
  %4 = extractvalue { i32, i1 } %3, 1, !dbg !17055
  %5 = extractvalue { i32, i1 } %3, 0, !dbg !17055
  store i32 %5, i32* %1, align 4, !dbg !17055
  ret i1 %4, !dbg !17056
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.uadd.with.overflow.i32(i32, i32) #3

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !17057 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.194, i32 0, i32 0)) #26, !dbg !17059
  ret void, !dbg !17060
}

; Function Attrs: noinline nounwind optsize
define internal i32 @statics_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !17061 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !17063, metadata !DIExpression()), !dbg !17083
  call void @llvm.dbg.value(metadata %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), metadata !17064, metadata !DIExpression()), !dbg !17084
  br i1 icmp ult (%struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0)), label %3, label %2, !dbg !17085

2:                                                ; preds = %3, %1
  ret i32 0, !dbg !17086

3:                                                ; preds = %1, %3
  %4 = phi %struct.k_heap* [ %9, %3 ], [ getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.k_heap* %4, metadata !17064, metadata !DIExpression()), !dbg !17084
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 1, !dbg !17087
  %6 = load i8*, i8** %5, align 4, !dbg !17087
  %7 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 2, !dbg !17091
  %8 = load i32, i32* %7, align 4, !dbg !17091
  tail call void @k_heap_init(%struct.k_heap* noundef nonnull %4, i8* noundef %6, i32 noundef %8) #27, !dbg !17092
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 1, !dbg !17093
  call void @llvm.dbg.value(metadata %struct.k_heap* %9, metadata !17064, metadata !DIExpression()), !dbg !17084
  %10 = icmp ult %struct.k_heap* %9, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !17094
  br i1 %10, label %3, label %2, !dbg !17085, !llvm.loop !17096
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_init(%struct.k_heap* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !17098 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17102, metadata !DIExpression()), !dbg !17105
  call void @llvm.dbg.value(metadata i8* %1, metadata !17103, metadata !DIExpression()), !dbg !17105
  call void @llvm.dbg.value(metadata i32 %2, metadata !17104, metadata !DIExpression()), !dbg !17105
  %4 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !17106
  tail call fastcc void @z_waitq_init.196(%union.anon* noundef nonnull %4) #27, !dbg !17107
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !17108
  tail call void @sys_heap_init(%struct.sys_heap* noundef %5, i8* noundef %1, i32 noundef %2) #26, !dbg !17109
  ret void, !dbg !17110
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.196(%union.anon* noundef %0) unnamed_addr #4 !dbg !17111 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17116, metadata !DIExpression()), !dbg !17117
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !17118
  tail call fastcc void @sys_dlist_init.197(%struct._dnode* noundef %2) #27, !dbg !17119
  ret void, !dbg !17120
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.197(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !17121 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17126, metadata !DIExpression()), !dbg !17127
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17128
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !17129
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17130
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !17131
  ret void, !dbg !17132
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !17133 {
  %5 = extractvalue [1 x i64] %3, 0
  call void @llvm.dbg.value(metadata i64 %5, metadata !17144, metadata !DIExpression()), !dbg !17154
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17141, metadata !DIExpression()), !dbg !17154
  call void @llvm.dbg.value(metadata i32 %1, metadata !17142, metadata !DIExpression()), !dbg !17154
  call void @llvm.dbg.value(metadata i32 %2, metadata !17143, metadata !DIExpression()), !dbg !17154
  %6 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %3) #26, !dbg !17155
  call void @llvm.dbg.value(metadata i64 %6, metadata !17146, metadata !DIExpression()), !dbg !17154
  call void @llvm.dbg.value(metadata i8* null, metadata !17147, metadata !DIExpression()), !dbg !17154
  %7 = icmp eq i64 %5, -1, !dbg !17156
  %8 = select i1 %7, i64 9223372036854775807, i64 %6, !dbg !17156
  call void @llvm.dbg.value(metadata i64 %8, metadata !17146, metadata !DIExpression()), !dbg !17154
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !17157
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17158, metadata !DIExpression()) #25, !dbg !17165
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17167, !srcloc !17173
  call void @llvm.dbg.value(metadata i32 undef, metadata !17170, metadata !DIExpression()) #25, !dbg !17174
  call void @llvm.dbg.value(metadata i32 undef, metadata !17171, metadata !DIExpression()) #25, !dbg !17174
  call void @llvm.dbg.value(metadata i32 undef, metadata !17164, metadata !DIExpression()) #25, !dbg !17165
  call void @llvm.dbg.value(metadata i32 undef, metadata !17148, metadata !DIExpression()), !dbg !17154
  call void @llvm.dbg.value(metadata i8 0, metadata !17153, metadata !DIExpression()), !dbg !17154
  %11 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i8* null, metadata !17147, metadata !DIExpression()), !dbg !17154
  call void @llvm.dbg.value(metadata i8 0, metadata !17153, metadata !DIExpression()), !dbg !17154
  call void @llvm.dbg.value(metadata i32 undef, metadata !17148, metadata !DIExpression()), !dbg !17154
  %12 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #26, !dbg !17175
  call void @llvm.dbg.value(metadata i8* %12, metadata !17147, metadata !DIExpression()), !dbg !17154
  %13 = tail call i64 @sys_clock_tick_get() #26, !dbg !17177
  call void @llvm.dbg.value(metadata i64 %13, metadata !17145, metadata !DIExpression()), !dbg !17154
  %14 = icmp eq i8* %12, null, !dbg !17178
  br i1 %14, label %15, label %31, !dbg !17180

15:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !17148, metadata !DIExpression()), !dbg !17154
  %16 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1
  br label %17, !dbg !17180

17:                                               ; preds = %15, %22
  %18 = phi i64 [ %13, %15 ], [ %29, %22 ]
  %19 = phi { i32, i32 } [ %10, %15 ], [ %27, %22 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !17153, metadata !DIExpression()), !dbg !17154
  %20 = sub nsw i64 %8, %18, !dbg !17181
  %21 = icmp slt i64 %20, 1, !dbg !17182
  br i1 %21, label %31, label %22, !dbg !17183

22:                                               ; preds = %17
  %23 = extractvalue { i32, i32 } %19, 0, !dbg !17154
  call void @llvm.dbg.value(metadata i8 undef, metadata !17153, metadata !DIExpression()), !dbg !17154
  %24 = insertvalue [1 x i32] poison, i32 %23, 0, !dbg !17184
  %25 = insertvalue [1 x i64] poison, i64 %20, 0, !dbg !17184
  %26 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %9, [1 x i32] %24, %union.anon* noundef nonnull %16, [1 x i64] %25) #26, !dbg !17184
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17158, metadata !DIExpression()) #25, !dbg !17185
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17187, !srcloc !17173
  call void @llvm.dbg.value(metadata i32 undef, metadata !17170, metadata !DIExpression()) #25, !dbg !17189
  call void @llvm.dbg.value(metadata i32 undef, metadata !17171, metadata !DIExpression()) #25, !dbg !17189
  call void @llvm.dbg.value(metadata i32 undef, metadata !17164, metadata !DIExpression()) #25, !dbg !17185
  call void @llvm.dbg.value(metadata i32 undef, metadata !17148, metadata !DIExpression()), !dbg !17154
  call void @llvm.dbg.value(metadata i8* null, metadata !17147, metadata !DIExpression()), !dbg !17154
  call void @llvm.dbg.value(metadata i32 undef, metadata !17148, metadata !DIExpression()), !dbg !17154
  %28 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #26, !dbg !17175
  call void @llvm.dbg.value(metadata i8* %28, metadata !17147, metadata !DIExpression()), !dbg !17154
  %29 = tail call i64 @sys_clock_tick_get() #26, !dbg !17177
  call void @llvm.dbg.value(metadata i64 %29, metadata !17145, metadata !DIExpression()), !dbg !17154
  %30 = icmp eq i8* %28, null, !dbg !17178
  br i1 %30, label %17, label %31, !dbg !17180, !llvm.loop !17190

31:                                               ; preds = %22, %17, %4
  %32 = phi { i32, i32 } [ %10, %4 ], [ %19, %17 ], [ %27, %22 ]
  %33 = phi i8* [ %12, %4 ], [ null, %17 ], [ %28, %22 ], !dbg !17175
  %34 = extractvalue { i32, i32 } %32, 0, !dbg !17154
  call void @llvm.dbg.value(metadata i8* %33, metadata !17147, metadata !DIExpression()), !dbg !17154
  call void @llvm.dbg.value(metadata i32 %34, metadata !17193, metadata !DIExpression()) #25, !dbg !17199
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17198, metadata !DIExpression()) #25, !dbg !17199
  call void @llvm.dbg.value(metadata i32 %34, metadata !17201, metadata !DIExpression()) #25, !dbg !17204
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %34) #25, !dbg !17206, !srcloc !17207
  ret i8* %33, !dbg !17208
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_alloc(%struct.k_heap* noundef %0, i32 noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !17209 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17215, metadata !DIExpression()), !dbg !17217
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17213, metadata !DIExpression()), !dbg !17217
  call void @llvm.dbg.value(metadata i32 %1, metadata !17214, metadata !DIExpression()), !dbg !17217
  %4 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef 4, i32 noundef %1, [1 x i64] %2) #27, !dbg !17218
  call void @llvm.dbg.value(metadata i8* %4, metadata !17216, metadata !DIExpression()), !dbg !17217
  ret i8* %4, !dbg !17219
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_free(%struct.k_heap* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !17220 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17224, metadata !DIExpression()), !dbg !17227
  call void @llvm.dbg.value(metadata i8* %1, metadata !17225, metadata !DIExpression()), !dbg !17227
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17158, metadata !DIExpression()) #25, !dbg !17228
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17230, !srcloc !17173
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !17230
  call void @llvm.dbg.value(metadata i32 %4, metadata !17170, metadata !DIExpression()) #25, !dbg !17232
  call void @llvm.dbg.value(metadata i32 undef, metadata !17171, metadata !DIExpression()) #25, !dbg !17232
  call void @llvm.dbg.value(metadata i32 %4, metadata !17164, metadata !DIExpression()) #25, !dbg !17228
  call void @llvm.dbg.value(metadata i32 %4, metadata !17226, metadata !DIExpression()), !dbg !17227
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !17233
  tail call void @sys_heap_free(%struct.sys_heap* noundef %5, i8* noundef %1) #26, !dbg !17234
  %6 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !17235
  %7 = tail call i32 @z_unpend_all(%union.anon* noundef nonnull %6) #26, !dbg !17237
  %8 = icmp eq i32 %7, 0, !dbg !17238
  br i1 %8, label %12, label %9, !dbg !17239

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !17240
  %11 = insertvalue [1 x i32] poison, i32 %4, 0, !dbg !17241
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %10, [1 x i32] %11) #26, !dbg !17241
  br label %13, !dbg !17243

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 %4, metadata !17193, metadata !DIExpression()) #25, !dbg !17244
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17198, metadata !DIExpression()) #25, !dbg !17244
  call void @llvm.dbg.value(metadata i32 %4, metadata !17201, metadata !DIExpression()) #25, !dbg !17247
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !17249, !srcloc !17207
  br label %13

13:                                               ; preds = %12, %9
  ret void, !dbg !17250
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { argmemonly nofree nosync nounwind willreturn }
attributes #7 = { nofree nosync nounwind willreturn }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { argmemonly nofree nounwind willreturn writeonly }
attributes #14 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { mustprogress nofree noinline nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #25 = { nounwind }
attributes #26 = { nobuiltin nounwind optsize "no-builtins" }
attributes #27 = { nobuiltin optsize "no-builtins" }
attributes #28 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #29 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #30 = { nounwind readnone }
attributes #31 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!753, !2, !2553, !2555, !27, !2557, !2559, !2592, !2629, !111, !168, !197, !2631, !2642, !2688, !2690, !2718, !2746, !2789, !2860, !2905, !367, !510, !2933, !546, !556, !581, !789, !2938, !927, !1107, !1413, !1727, !2977, !1840, !1930, !2979, !3065, !3130, !1981, !3133, !1987, !2348, !3151, !3153, !2368, !3194, !2483, !3197, !3199, !2522}
!llvm.ident = !{!3201, !3201, !3201, !3201, !3201, !3201, !3201, !3201, !3201, !3201, !3201, !3201, !3201, !3201, !3201, !3201, !3201, !3201, !3201, !3201, !3201, !3201, !3201, !3201, !3201, !3201, !3201, !3201, !3201, !3201, !3201, !3201, !3201, !3201, !3201, !3201, !3201, !3201, !3201, !3201, !3201, !3201, !3201, !3201, !3201, !3201, !3201, !3201, !3201, !3201, !3201}
!llvm.module.flags = !{!3202, !3203, !3204, !3205, !3206, !3207, !3208, !3209, !3210}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/getline/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/getline")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 97, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/getline")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 5440, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 85)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 2720, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "_char_out", scope: !27, file: !105, line: 54, type: !106, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !104, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/getline")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!103 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!104 = !{!25}
!105 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!107 = !DISubroutineType(types: !108)
!108 = !{!103, !103}
!109 = !DIGlobalVariableExpression(var: !110, expr: !DIExpression())
!110 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !111, file: !129, line: 56, type: !130, isLocal: true, isDefinition: true, align: 32)
!111 = distinct !DICompileUnit(language: DW_LANG_C99, file: !112, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !113, globals: !128, splitDebugInlining: false, nameTableKind: None)
!112 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/getline")
!113 = !{!114}
!114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !115, size: 32)
!115 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !116, line: 258, baseType: !117)
!116 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f401xe.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!117 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 249, size: 224, elements: !118)
!118 = !{!119, !122, !123, !124, !125, !126, !127}
!119 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !117, file: !116, line: 251, baseType: !120, size: 32)
!120 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !121)
!121 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!122 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !117, file: !116, line: 252, baseType: !120, size: 32, offset: 32)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !117, file: !116, line: 253, baseType: !120, size: 32, offset: 64)
!124 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !117, file: !116, line: 254, baseType: !120, size: 32, offset: 96)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !117, file: !116, line: 255, baseType: !120, size: 32, offset: 128)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !117, file: !116, line: 256, baseType: !120, size: 32, offset: 160)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !117, file: !116, line: 257, baseType: !120, size: 32, offset: 192)
!128 = !{!109}
!129 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!130 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !131)
!131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !133)
!132 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!133 = !{!134, !165}
!134 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !131, file: !132, line: 60, baseType: !135, size: 32)
!135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !136, size: 32)
!136 = !DISubroutineType(types: !137)
!137 = !{!103, !138}
!138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !139, size: 32)
!139 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !140)
!140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !142)
!141 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!142 = !{!143, !147, !148, !149, !158, !159}
!143 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !140, file: !141, line: 380, baseType: !144, size: 32)
!144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !145, size: 32)
!145 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !146)
!146 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !140, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !140, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !140, file: !141, line: 386, baseType: !150, size: 32, offset: 96)
!150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !151, size: 32)
!151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !152)
!152 = !{!153, !156}
!153 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !151, file: !141, line: 359, baseType: !154, size: 8)
!154 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !155)
!155 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !151, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!157 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !140, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !140, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !161, size: 32)
!161 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !162)
!162 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !141, line: 43, baseType: !163)
!163 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !164)
!164 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !131, file: !132, line: 65, baseType: !138, size: 32, offset: 32)
!166 = !DIGlobalVariableExpression(var: !167, expr: !DIExpression())
!167 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !168, file: !171, line: 71, type: !172, isLocal: true, isDefinition: true, align: 32)
!168 = distinct !DICompileUnit(language: DW_LANG_C99, file: !169, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !170, splitDebugInlining: false, nameTableKind: None)
!169 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/getline")
!170 = !{!166}
!171 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!172 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !173)
!173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !174)
!174 = !{!175, !194}
!175 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !173, file: !132, line: 60, baseType: !176, size: 32)
!176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !177, size: 32)
!177 = !DISubroutineType(types: !178)
!178 = !{!103, !179}
!179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !180, size: 32)
!180 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !181)
!181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !182)
!182 = !{!183, !184, !185, !186, !192, !193}
!183 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !181, file: !141, line: 380, baseType: !144, size: 32)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !181, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !181, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !181, file: !141, line: 386, baseType: !187, size: 32, offset: 96)
!187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !188, size: 32)
!188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !189)
!189 = !{!190, !191}
!190 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !188, file: !141, line: 359, baseType: !154, size: 8)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !188, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !181, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !181, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !173, file: !132, line: 65, baseType: !179, size: 32, offset: 32)
!195 = !DIGlobalVariableExpression(var: !196, expr: !DIExpression())
!196 = distinct !DIGlobalVariable(name: "free_queue", scope: !197, file: !294, line: 17, type: !295, isLocal: true, isDefinition: true, align: 32)
!197 = distinct !DICompileUnit(language: DW_LANG_C99, file: !198, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !199, globals: !291, splitDebugInlining: false, nameTableKind: None)
!198 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/console/getline.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/getline")
!199 = !{!102, !200, !204, !103, !206}
!200 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !201, line: 46, baseType: !202)
!201 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!202 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !203)
!203 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!204 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !205, line: 214, baseType: !32)
!205 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !207, size: 32)
!207 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !208)
!208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !209, line: 336, size: 608, elements: !210)
!209 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!210 = !{!211, !231, !235, !239, !252, !257, !263, !269, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283}
!211 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !208, file: !209, line: 365, baseType: !212, size: 32)
!212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !213, size: 32)
!213 = !DISubroutineType(types: !214)
!214 = !{!103, !215, !230}
!215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !216, size: 32)
!216 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !217)
!217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !218)
!218 = !{!219, !220, !221, !222, !228, !229}
!219 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !217, file: !141, line: 380, baseType: !144, size: 32)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !217, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !217, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !217, file: !141, line: 386, baseType: !223, size: 32, offset: 96)
!223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !224, size: 32)
!224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !225)
!225 = !{!226, !227}
!226 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !224, file: !141, line: 359, baseType: !154, size: 8)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !224, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !217, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !217, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !155, size: 32)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !208, file: !209, line: 366, baseType: !232, size: 32, offset: 32)
!232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !233, size: 32)
!233 = !DISubroutineType(types: !234)
!234 = !{null, !215, !155}
!235 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !208, file: !209, line: 374, baseType: !236, size: 32, offset: 64)
!236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !237, size: 32)
!237 = !DISubroutineType(types: !238)
!238 = !{!103, !215}
!239 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !208, file: !209, line: 377, baseType: !240, size: 32, offset: 96)
!240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !241, size: 32)
!241 = !DISubroutineType(types: !242)
!242 = !{!103, !215, !243}
!243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !244, size: 32)
!244 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !245)
!245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !209, line: 122, size: 64, elements: !246)
!246 = !{!247, !248, !249, !250, !251}
!247 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !245, file: !209, line: 123, baseType: !121, size: 32)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !245, file: !209, line: 124, baseType: !154, size: 8, offset: 32)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !245, file: !209, line: 125, baseType: !154, size: 8, offset: 40)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !245, file: !209, line: 126, baseType: !154, size: 8, offset: 48)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !245, file: !209, line: 127, baseType: !154, size: 8, offset: 56)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !208, file: !209, line: 379, baseType: !253, size: 32, offset: 128)
!253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !254, size: 32)
!254 = !DISubroutineType(types: !255)
!255 = !{!103, !215, !256}
!256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !245, size: 32)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !208, file: !209, line: 384, baseType: !258, size: 32, offset: 160)
!258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !259, size: 32)
!259 = !DISubroutineType(types: !260)
!260 = !{!103, !215, !261, !103}
!261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !262, size: 32)
!262 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !154)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !208, file: !209, line: 393, baseType: !264, size: 32, offset: 192)
!264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 32)
!265 = !DISubroutineType(types: !266)
!266 = !{!103, !215, !267, !268}
!267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !154, size: 32)
!268 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !208, file: !209, line: 402, baseType: !270, size: 32, offset: 224)
!270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !271, size: 32)
!271 = !DISubroutineType(types: !272)
!272 = !{null, !215}
!273 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !208, file: !209, line: 405, baseType: !270, size: 32, offset: 256)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !208, file: !209, line: 408, baseType: !236, size: 32, offset: 288)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !208, file: !209, line: 411, baseType: !270, size: 32, offset: 320)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !208, file: !209, line: 414, baseType: !270, size: 32, offset: 352)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !208, file: !209, line: 417, baseType: !236, size: 32, offset: 384)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !208, file: !209, line: 420, baseType: !236, size: 32, offset: 416)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !208, file: !209, line: 423, baseType: !270, size: 32, offset: 448)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !208, file: !209, line: 426, baseType: !270, size: 32, offset: 480)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !208, file: !209, line: 429, baseType: !236, size: 32, offset: 512)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !208, file: !209, line: 432, baseType: !236, size: 32, offset: 544)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !208, file: !209, line: 435, baseType: !284, size: 32, offset: 576)
!284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !285, size: 32)
!285 = !DISubroutineType(types: !286)
!286 = !{null, !215, !287, !102}
!287 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !209, line: 142, baseType: !288)
!288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !289, size: 32)
!289 = !DISubroutineType(types: !290)
!290 = !{null, !215, !102}
!291 = !{!195, !292, !339, !360}
!292 = !DIGlobalVariableExpression(var: !293, expr: !DIExpression())
!293 = distinct !DIGlobalVariable(name: "used_queue", scope: !197, file: !294, line: 18, type: !295, isLocal: true, isDefinition: true, align: 32)
!294 = !DIFile(filename: "zephyr/subsys/console/getline.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !296, line: 2208, size: 128, elements: !297)
!296 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!297 = !{!298}
!298 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !295, file: !296, line: 2209, baseType: !299, size: 128)
!299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !296, line: 1709, size: 128, elements: !300)
!300 = !{!301, !314, !318}
!301 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !299, file: !296, line: 1710, baseType: !302, size: 64)
!302 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !303, line: 46, baseType: !304)
!303 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !303, line: 41, size: 64, elements: !305)
!305 = !{!306, !313}
!306 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !304, file: !303, line: 42, baseType: !307, size: 32)
!307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !308, size: 32)
!308 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !303, line: 39, baseType: !309)
!309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !303, line: 35, size: 32, elements: !310)
!310 = !{!311}
!311 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !309, file: !303, line: 36, baseType: !312, size: 32)
!312 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !303, line: 32, baseType: !121)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !304, file: !303, line: 43, baseType: !307, size: 32, offset: 32)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !299, file: !296, line: 1711, baseType: !315, offset: 64)
!315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!316 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!317 = !{}
!318 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !299, file: !296, line: 1712, baseType: !319, size: 64, offset: 64)
!319 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !321)
!320 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!321 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !322)
!322 = !{!323}
!323 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !321, file: !320, line: 232, baseType: !324, size: 64)
!324 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !326)
!325 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !327)
!327 = !{!328, !334}
!328 = !DIDerivedType(tag: DW_TAG_member, scope: !326, file: !325, line: 38, baseType: !329, size: 32)
!329 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !326, file: !325, line: 38, size: 32, elements: !330)
!330 = !{!331, !333}
!331 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !329, file: !325, line: 39, baseType: !332, size: 32)
!332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !326, size: 32)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !329, file: !325, line: 40, baseType: !332, size: 32)
!334 = !DIDerivedType(tag: DW_TAG_member, scope: !326, file: !325, line: 42, baseType: !335, size: 32, offset: 32)
!335 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !326, file: !325, line: 42, size: 32, elements: !336)
!336 = !{!337, !338}
!337 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !335, file: !325, line: 43, baseType: !332, size: 32)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !335, file: !325, line: 44, baseType: !332, size: 32)
!339 = !DIGlobalVariableExpression(var: !340, expr: !DIExpression())
!340 = distinct !DIGlobalVariable(name: "cmd", scope: !341, file: !294, line: 22, type: !348, isLocal: true, isDefinition: true)
!341 = distinct !DISubprogram(name: "console_getline", scope: !294, file: !294, line: 20, type: !342, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !197, retainedNodes: !345)
!342 = !DISubroutineType(types: !343)
!343 = !{!344}
!344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !146, size: 32)
!345 = !{!346}
!346 = !DILocalVariable(name: "ret", scope: !347, file: !294, line: 29, type: !102)
!347 = distinct !DILexicalBlock(scope: !341, file: !294, line: 29, column: 8)
!348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !349, size: 32)
!349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "console_input", file: !350, line: 21, size: 1088, elements: !351)
!350 = !DIFile(filename: "zephyr/include/zephyr/drivers/console/console.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!351 = !{!352, !355, !356}
!352 = !DIDerivedType(tag: DW_TAG_member, name: "_unused", scope: !349, file: !350, line: 23, baseType: !353, size: 32)
!353 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !23, line: 104, baseType: !354)
!354 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "is_mcumgr", scope: !349, file: !350, line: 25, baseType: !154, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !349, file: !350, line: 27, baseType: !357, size: 1024, offset: 40)
!357 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, size: 1024, elements: !358)
!358 = !{!359}
!359 = !DISubrange(count: 128)
!360 = !DIGlobalVariableExpression(var: !361, expr: !DIExpression())
!361 = distinct !DIGlobalVariable(name: "line_bufs", scope: !197, file: !294, line: 15, type: !362, isLocal: true, isDefinition: true)
!362 = !DICompositeType(tag: DW_TAG_array_type, baseType: !349, size: 2176, elements: !363)
!363 = !{!364}
!364 = !DISubrange(count: 2)
!365 = !DIGlobalVariableExpression(var: !366, expr: !DIExpression())
!366 = distinct !DIGlobalVariable(name: "static_regions", scope: !367, file: !374, line: 62, type: !506, isLocal: true, isDefinition: true)
!367 = distinct !DICompileUnit(language: DW_LANG_C99, file: !368, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !369, globals: !370, splitDebugInlining: false, nameTableKind: None)
!368 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/getline")
!369 = !{!204, !103, !121, !102}
!370 = !{!371, !365}
!371 = !DIGlobalVariableExpression(var: !372, expr: !DIExpression())
!372 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !373, file: !374, line: 198, type: !492, isLocal: true, isDefinition: true)
!373 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !374, file: !374, line: 175, type: !375, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !367, retainedNodes: !487)
!374 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!375 = !DISubroutineType(types: !376)
!376 = !{null, !377}
!377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !378, size: 32)
!378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !379, line: 245, size: 1024, elements: !380)
!379 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!380 = !{!381, !444, !457, !458, !459, !460, !466, !482}
!381 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !378, file: !379, line: 247, baseType: !382, size: 384)
!382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !379, line: 57, size: 384, elements: !383)
!383 = !{!384, !409, !416, !417, !418, !431, !432, !433}
!384 = !DIDerivedType(tag: DW_TAG_member, scope: !382, file: !379, line: 60, baseType: !385, size: 64)
!385 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !382, file: !379, line: 60, size: 64, elements: !386)
!386 = !{!387, !402}
!387 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !385, file: !379, line: 61, baseType: !388, size: 64)
!388 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !325, line: 49, baseType: !389)
!389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !390)
!390 = !{!391, !397}
!391 = !DIDerivedType(tag: DW_TAG_member, scope: !389, file: !325, line: 38, baseType: !392, size: 32)
!392 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !389, file: !325, line: 38, size: 32, elements: !393)
!393 = !{!394, !396}
!394 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !392, file: !325, line: 39, baseType: !395, size: 32)
!395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !389, size: 32)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !392, file: !325, line: 40, baseType: !395, size: 32)
!397 = !DIDerivedType(tag: DW_TAG_member, scope: !389, file: !325, line: 42, baseType: !398, size: 32, offset: 32)
!398 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !389, file: !325, line: 42, size: 32, elements: !399)
!399 = !{!400, !401}
!400 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !398, file: !325, line: 43, baseType: !395, size: 32)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !398, file: !325, line: 44, baseType: !395, size: 32)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !385, file: !379, line: 62, baseType: !403, size: 64)
!403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !404, line: 49, size: 64, elements: !405)
!404 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!405 = !{!406}
!406 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !403, file: !404, line: 50, baseType: !407, size: 64)
!407 = !DICompositeType(tag: DW_TAG_array_type, baseType: !408, size: 64, elements: !363)
!408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !403, size: 32)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !382, file: !379, line: 68, baseType: !410, size: 32, offset: 64)
!410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !411, size: 32)
!411 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !412)
!412 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !413)
!413 = !{!414}
!414 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !412, file: !320, line: 232, baseType: !415, size: 64)
!415 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !389)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !382, file: !379, line: 71, baseType: !154, size: 8, offset: 96)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !382, file: !379, line: 74, baseType: !154, size: 8, offset: 104)
!418 = !DIDerivedType(tag: DW_TAG_member, scope: !382, file: !379, line: 90, baseType: !419, size: 16, offset: 112)
!419 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !382, file: !379, line: 90, size: 16, elements: !420)
!420 = !{!421, !428}
!421 = !DIDerivedType(tag: DW_TAG_member, scope: !419, file: !379, line: 91, baseType: !422, size: 16)
!422 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !419, file: !379, line: 91, size: 16, elements: !423)
!423 = !{!424, !427}
!424 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !422, file: !379, line: 96, baseType: !425, size: 8)
!425 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !426)
!426 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !422, file: !379, line: 97, baseType: !154, size: 8, offset: 8)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !419, file: !379, line: 100, baseType: !429, size: 16)
!429 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !430)
!430 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !382, file: !379, line: 107, baseType: !121, size: 32, offset: 128)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !382, file: !379, line: 127, baseType: !102, size: 32, offset: 160)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !382, file: !379, line: 131, baseType: !434, size: 192, offset: 192)
!434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !320, line: 244, size: 192, elements: !435)
!435 = !{!436, !437, !443}
!436 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !434, file: !320, line: 245, baseType: !388, size: 64)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !434, file: !320, line: 246, baseType: !438, size: 32, offset: 64)
!438 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !320, line: 242, baseType: !439)
!439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !440, size: 32)
!440 = !DISubroutineType(types: !441)
!441 = !{null, !442}
!442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !434, size: 32)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !434, file: !320, line: 249, baseType: !202, size: 64, offset: 128)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !378, file: !379, line: 250, baseType: !445, size: 288, offset: 384)
!445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !446, line: 25, size: 288, elements: !447)
!446 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!447 = !{!448, !449, !450, !451, !452, !453, !454, !455, !456}
!448 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !445, file: !446, line: 26, baseType: !121, size: 32)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !445, file: !446, line: 27, baseType: !121, size: 32, offset: 32)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !445, file: !446, line: 28, baseType: !121, size: 32, offset: 64)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !445, file: !446, line: 29, baseType: !121, size: 32, offset: 96)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !445, file: !446, line: 30, baseType: !121, size: 32, offset: 128)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !445, file: !446, line: 31, baseType: !121, size: 32, offset: 160)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !445, file: !446, line: 32, baseType: !121, size: 32, offset: 192)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !445, file: !446, line: 33, baseType: !121, size: 32, offset: 224)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !445, file: !446, line: 34, baseType: !121, size: 32, offset: 256)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !378, file: !379, line: 253, baseType: !102, size: 32, offset: 672)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !378, file: !379, line: 256, baseType: !411, size: 64, offset: 704)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !378, file: !379, line: 294, baseType: !103, size: 32, offset: 768)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !378, file: !379, line: 300, baseType: !461, size: 96, offset: 800)
!461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !379, line: 149, size: 96, elements: !462)
!462 = !{!463, !464, !465}
!463 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !461, file: !379, line: 153, baseType: !22, size: 32)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !461, file: !379, line: 162, baseType: !204, size: 32, offset: 32)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !461, file: !379, line: 168, baseType: !204, size: 32, offset: 64)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !378, file: !379, line: 325, baseType: !467, size: 32, offset: 896)
!467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !468, size: 32)
!468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !296, line: 5073, size: 160, elements: !469)
!469 = !{!470, !479, !480}
!470 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !468, file: !296, line: 5074, baseType: !471, size: 96)
!471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !473)
!472 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!473 = !{!474, !477, !478}
!474 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !471, file: !472, line: 57, baseType: !475, size: 32)
!475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !476, size: 32)
!476 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !472, line: 57, flags: DIFlagFwdDecl)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !471, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !471, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !468, file: !296, line: 5075, baseType: !411, size: 64, offset: 96)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !468, file: !296, line: 5076, baseType: !481, offset: 160)
!481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !378, file: !379, line: 343, baseType: !483, size: 64, offset: 928)
!483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !446, line: 60, size: 64, elements: !484)
!484 = !{!485, !486}
!485 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !483, file: !446, line: 63, baseType: !121, size: 32)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !483, file: !446, line: 66, baseType: !121, size: 32, offset: 32)
!487 = !{!488, !489, !490, !491}
!488 = !DILocalVariable(name: "thread", arg: 1, scope: !373, file: !374, line: 175, type: !377)
!489 = !DILocalVariable(name: "region_num", scope: !373, file: !374, line: 200, type: !154)
!490 = !DILocalVariable(name: "guard_start", scope: !373, file: !374, line: 265, type: !22)
!491 = !DILocalVariable(name: "guard_size", scope: !373, file: !374, line: 266, type: !204)
!492 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 96, elements: !504)
!493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !494, line: 52, size: 96, elements: !495)
!494 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!495 = !{!496, !497, !498}
!496 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !493, file: !494, line: 53, baseType: !22, size: 32)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !493, file: !494, line: 54, baseType: !204, size: 32, offset: 32)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !493, file: !494, line: 55, baseType: !499, size: 32, offset: 64)
!499 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !500, line: 151, baseType: !501)
!500 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!501 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !500, line: 149, size: 32, elements: !502)
!502 = !{!503}
!503 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !501, file: !500, line: 150, baseType: !121, size: 32)
!504 = !{!505}
!505 = !DISubrange(count: 1)
!506 = !DICompositeType(tag: DW_TAG_array_type, baseType: !507, size: 96, elements: !504)
!507 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !493)
!508 = !DIGlobalVariableExpression(var: !509, expr: !DIExpression())
!509 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !510, file: !543, line: 39, type: !154, isLocal: true, isDefinition: true)
!510 = distinct !DICompileUnit(language: DW_LANG_C99, file: !511, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !512, globals: !542, splitDebugInlining: false, nameTableKind: None)
!511 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/getline")
!512 = !{!513, !102, !103, !530, !154}
!513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !514, size: 32)
!514 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !515, line: 1226, baseType: !516)
!515 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!516 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 1213, size: 352, elements: !517)
!517 = !{!518, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529}
!518 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !516, file: !515, line: 1215, baseType: !519, size: 32)
!519 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !120)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !516, file: !515, line: 1216, baseType: !120, size: 32, offset: 32)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !516, file: !515, line: 1217, baseType: !120, size: 32, offset: 64)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !516, file: !515, line: 1218, baseType: !120, size: 32, offset: 96)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !516, file: !515, line: 1219, baseType: !120, size: 32, offset: 128)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !516, file: !515, line: 1220, baseType: !120, size: 32, offset: 160)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !516, file: !515, line: 1221, baseType: !120, size: 32, offset: 192)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !516, file: !515, line: 1222, baseType: !120, size: 32, offset: 224)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !516, file: !515, line: 1223, baseType: !120, size: 32, offset: 256)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !516, file: !515, line: 1224, baseType: !120, size: 32, offset: 288)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !516, file: !515, line: 1225, baseType: !120, size: 32, offset: 320)
!530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !531, size: 32)
!531 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !532)
!532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !533, line: 27, size: 96, elements: !534)
!533 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!534 = !{!535, !536, !537}
!535 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !532, file: !533, line: 29, baseType: !121, size: 32)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !532, file: !533, line: 31, baseType: !144, size: 32, offset: 32)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !532, file: !533, line: 37, baseType: !538, size: 32, offset: 64)
!538 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !500, line: 146, baseType: !539)
!539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !500, line: 141, size: 32, elements: !540)
!540 = !{!541}
!541 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !539, file: !500, line: 143, baseType: !121, size: 32)
!542 = !{!508}
!543 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!544 = !DIGlobalVariableExpression(var: !545, expr: !DIExpression())
!545 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !546, file: !553, line: 21, type: !106, isLocal: true, isDefinition: true)
!546 = distinct !DICompileUnit(language: DW_LANG_C99, file: !547, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !548, globals: !552, splitDebugInlining: false, nameTableKind: None)
!547 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/getline")
!548 = !{!549, !103, !102}
!549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !550, size: 32)
!550 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !551, line: 22, baseType: !103)
!551 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!552 = !{!544}
!553 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!554 = !DIGlobalVariableExpression(var: !555, expr: !DIExpression())
!555 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !556, file: !561, line: 13, type: !578, isLocal: true, isDefinition: true)
!556 = distinct !DICompileUnit(language: DW_LANG_C99, file: !557, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !558, splitDebugInlining: false, nameTableKind: None)
!557 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/getline")
!558 = !{!559, !554}
!559 = !DIGlobalVariableExpression(var: !560, expr: !DIExpression())
!560 = distinct !DIGlobalVariable(name: "mpu_config", scope: !556, file: !561, line: 37, type: !562, isLocal: false, isDefinition: true)
!561 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!562 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !563)
!563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !533, line: 41, size: 64, elements: !564)
!564 = !{!565, !566}
!565 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !563, file: !533, line: 43, baseType: !121, size: 32)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !563, file: !533, line: 45, baseType: !567, size: 32, offset: 32)
!567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !568, size: 32)
!568 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !569)
!569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !533, line: 27, size: 96, elements: !570)
!570 = !{!571, !572, !573}
!571 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !569, file: !533, line: 29, baseType: !121, size: 32)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !569, file: !533, line: 31, baseType: !144, size: 32, offset: 32)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !569, file: !533, line: 37, baseType: !574, size: 32, offset: 64)
!574 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !500, line: 146, baseType: !575)
!575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !500, line: 141, size: 32, elements: !576)
!576 = !{!577}
!577 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !575, file: !500, line: 143, baseType: !121, size: 32)
!578 = !DICompositeType(tag: DW_TAG_array_type, baseType: !568, size: 192, elements: !363)
!579 = !DIGlobalVariableExpression(var: !580, expr: !DIExpression())
!580 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !581, file: !664, line: 72, type: !748, isLocal: true, isDefinition: true)
!581 = distinct !DICompileUnit(language: DW_LANG_C99, file: !582, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !583, retainedTypes: !650, globals: !661, splitDebugInlining: false, nameTableKind: None)
!582 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/getline")
!583 = !{!30, !584}
!584 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !116, line: 65, baseType: !103, size: 32, elements: !585)
!585 = !{!586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649}
!586 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!587 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!588 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!589 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!590 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!591 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!592 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!593 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!594 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!595 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!596 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!597 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!598 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!599 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!600 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!601 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!602 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!603 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!604 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!605 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!606 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!607 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!608 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!609 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!610 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!611 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!612 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!613 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!614 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!615 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!616 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!617 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!618 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!619 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!620 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!621 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!622 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!623 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!624 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!625 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!626 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!627 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!628 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!629 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!630 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!631 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!632 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!633 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!634 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!635 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!636 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!637 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!638 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!639 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!640 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!641 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!642 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!643 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!644 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!645 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!646 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!647 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!648 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!649 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!650 = !{!204, !103, !102, !651}
!651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !652, size: 32)
!652 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !116, line: 243, baseType: !653)
!653 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 235, size: 192, elements: !654)
!654 = !{!655, !656, !657, !658, !659, !660}
!655 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !653, file: !116, line: 237, baseType: !120, size: 32)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !653, file: !116, line: 238, baseType: !120, size: 32, offset: 32)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !653, file: !116, line: 239, baseType: !120, size: 32, offset: 64)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !653, file: !116, line: 240, baseType: !120, size: 32, offset: 96)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !653, file: !116, line: 241, baseType: !120, size: 32, offset: 128)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !653, file: !116, line: 242, baseType: !120, size: 32, offset: 160)
!661 = !{!662, !668, !684, !695, !712, !579, !714, !728, !730, !732, !734, !736, !738, !740, !742, !744, !746}
!662 = !DIGlobalVariableExpression(var: !663, expr: !DIExpression())
!663 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_39", scope: !581, file: !664, line: 424, type: !665, isLocal: false, isDefinition: true, align: 16)
!664 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!665 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 64, elements: !666)
!666 = !{!667}
!667 = !DISubrange(count: 4)
!668 = !DIGlobalVariableExpression(var: !669, expr: !DIExpression())
!669 = distinct !DIGlobalVariable(name: "__device_dts_ord_39", scope: !581, file: !664, line: 424, type: !670, isLocal: false, isDefinition: true, align: 32)
!670 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !671)
!671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !672)
!672 = !{!673, !674, !675, !676, !682, !683}
!673 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !671, file: !141, line: 380, baseType: !144, size: 32)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !671, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !671, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !671, file: !141, line: 386, baseType: !677, size: 32, offset: 96)
!677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !678, size: 32)
!678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !679)
!679 = !{!680, !681}
!680 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !678, file: !141, line: 359, baseType: !154, size: 8)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !678, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !671, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !671, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!684 = !DIGlobalVariableExpression(var: !685, expr: !DIExpression())
!685 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_39", scope: !581, file: !664, line: 424, type: !686, isLocal: true, isDefinition: true, align: 32)
!686 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !687)
!687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !688)
!688 = !{!689, !694}
!689 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !687, file: !132, line: 60, baseType: !690, size: 32)
!690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !691, size: 32)
!691 = !DISubroutineType(types: !692)
!692 = !{!103, !693}
!693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !670, size: 32)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !687, file: !132, line: 65, baseType: !693, size: 32, offset: 32)
!695 = !DIGlobalVariableExpression(var: !696, expr: !DIExpression())
!696 = distinct !DIGlobalVariable(name: "exti_data", scope: !581, file: !664, line: 423, type: !697, isLocal: true, isDefinition: true)
!697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !664, line: 107, size: 1472, elements: !698)
!698 = !{!699}
!699 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !697, file: !664, line: 109, baseType: !700, size: 1472)
!700 = !DICompositeType(tag: DW_TAG_array_type, baseType: !701, size: 1472, elements: !710)
!701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !664, line: 101, size: 64, elements: !702)
!702 = !{!703, !709}
!703 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !701, file: !664, line: 102, baseType: !704, size: 32)
!704 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !705, line: 63, baseType: !706)
!705 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !707, size: 32)
!707 = !DISubroutineType(types: !708)
!708 = !{null, !103, !102}
!709 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !701, file: !664, line: 103, baseType: !102, size: 32, offset: 32)
!710 = !{!711}
!711 = !DISubrange(count: 23)
!712 = !DIGlobalVariableExpression(var: !713, expr: !DIExpression())
!713 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_39", scope: !581, file: !664, line: 424, type: !678, isLocal: true, isDefinition: true, align: 8)
!714 = !DIGlobalVariableExpression(var: !715, expr: !DIExpression())
!715 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !716, file: !664, line: 493, type: !721, isLocal: true, isDefinition: true, align: 32)
!716 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !664, file: !664, line: 460, type: !717, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !719)
!717 = !DISubroutineType(types: !718)
!718 = !{null, !693}
!719 = !{!720}
!720 = !DILocalVariable(name: "dev", arg: 1, scope: !716, file: !664, line: 460, type: !693)
!721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !722)
!722 = !{!723, !725, !726, !727}
!723 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !721, file: !10, line: 55, baseType: !724, size: 32)
!724 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !103)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !721, file: !10, line: 57, baseType: !724, size: 32, offset: 32)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !721, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !721, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!728 = !DIGlobalVariableExpression(var: !729, expr: !DIExpression())
!729 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !716, file: !664, line: 497, type: !721, isLocal: true, isDefinition: true, align: 32)
!730 = !DIGlobalVariableExpression(var: !731, expr: !DIExpression())
!731 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !716, file: !664, line: 507, type: !721, isLocal: true, isDefinition: true, align: 32)
!732 = !DIGlobalVariableExpression(var: !733, expr: !DIExpression())
!733 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !716, file: !664, line: 512, type: !721, isLocal: true, isDefinition: true, align: 32)
!734 = !DIGlobalVariableExpression(var: !735, expr: !DIExpression())
!735 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !716, file: !664, line: 516, type: !721, isLocal: true, isDefinition: true, align: 32)
!736 = !DIGlobalVariableExpression(var: !737, expr: !DIExpression())
!737 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !716, file: !664, line: 523, type: !721, isLocal: true, isDefinition: true, align: 32)
!738 = !DIGlobalVariableExpression(var: !739, expr: !DIExpression())
!739 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !716, file: !664, line: 527, type: !721, isLocal: true, isDefinition: true, align: 32)
!740 = !DIGlobalVariableExpression(var: !741, expr: !DIExpression())
!741 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !716, file: !664, line: 581, type: !721, isLocal: true, isDefinition: true, align: 32)
!742 = !DIGlobalVariableExpression(var: !743, expr: !DIExpression())
!743 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !716, file: !664, line: 586, type: !721, isLocal: true, isDefinition: true, align: 32)
!744 = !DIGlobalVariableExpression(var: !745, expr: !DIExpression())
!745 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !716, file: !664, line: 591, type: !721, isLocal: true, isDefinition: true, align: 32)
!746 = !DIGlobalVariableExpression(var: !747, expr: !DIExpression())
!747 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !716, file: !664, line: 595, type: !721, isLocal: true, isDefinition: true, align: 32)
!748 = !DICompositeType(tag: DW_TAG_array_type, baseType: !749, size: 736, elements: !710)
!749 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !750)
!750 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !116, line: 133, baseType: !584)
!751 = !DIGlobalVariableExpression(var: !752, expr: !DIExpression())
!752 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_39", scope: !753, file: !758, line: 24, type: !784, isLocal: false, isDefinition: true, align: 16)
!753 = distinct !DICompileUnit(language: DW_LANG_C99, file: !754, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !755, splitDebugInlining: false, nameTableKind: None)
!754 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/getline/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/getline")
!755 = !{!756, !751, !762, !764, !766, !768, !770, !772, !774, !776, !778, !780, !782}
!756 = !DIGlobalVariableExpression(var: !757, expr: !DIExpression())
!757 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !753, file: !758, line: 19, type: !759, isLocal: false, isDefinition: true, align: 16)
!758 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/getline")
!759 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 224, elements: !760)
!760 = !{!761}
!761 = !DISubrange(count: 14)
!762 = !DIGlobalVariableExpression(var: !763, expr: !DIExpression())
!763 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_76", scope: !753, file: !758, line: 31, type: !665, isLocal: false, isDefinition: true, align: 16)
!764 = !DIGlobalVariableExpression(var: !765, expr: !DIExpression())
!765 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_75", scope: !753, file: !758, line: 38, type: !665, isLocal: false, isDefinition: true, align: 16)
!766 = !DIGlobalVariableExpression(var: !767, expr: !DIExpression())
!767 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_74", scope: !753, file: !758, line: 45, type: !665, isLocal: false, isDefinition: true, align: 16)
!768 = !DIGlobalVariableExpression(var: !769, expr: !DIExpression())
!769 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !753, file: !758, line: 52, type: !665, isLocal: false, isDefinition: true, align: 16)
!770 = !DIGlobalVariableExpression(var: !771, expr: !DIExpression())
!771 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_23", scope: !753, file: !758, line: 59, type: !665, isLocal: false, isDefinition: true, align: 16)
!772 = !DIGlobalVariableExpression(var: !773, expr: !DIExpression())
!773 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !753, file: !758, line: 66, type: !665, isLocal: false, isDefinition: true, align: 16)
!774 = !DIGlobalVariableExpression(var: !775, expr: !DIExpression())
!775 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_20", scope: !753, file: !758, line: 73, type: !665, isLocal: false, isDefinition: true, align: 16)
!776 = !DIGlobalVariableExpression(var: !777, expr: !DIExpression())
!777 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_25", scope: !753, file: !758, line: 80, type: !665, isLocal: false, isDefinition: true, align: 16)
!778 = !DIGlobalVariableExpression(var: !779, expr: !DIExpression())
!779 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_50", scope: !753, file: !758, line: 87, type: !665, isLocal: false, isDefinition: true, align: 16)
!780 = !DIGlobalVariableExpression(var: !781, expr: !DIExpression())
!781 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_44", scope: !753, file: !758, line: 94, type: !665, isLocal: false, isDefinition: true, align: 16)
!782 = !DIGlobalVariableExpression(var: !783, expr: !DIExpression())
!783 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_47", scope: !753, file: !758, line: 101, type: !665, isLocal: false, isDefinition: true, align: 16)
!784 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 48, elements: !785)
!785 = !{!786}
!786 = !DISubrange(count: 3)
!787 = !DIGlobalVariableExpression(var: !788, expr: !DIExpression())
!788 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !789, file: !853, line: 398, type: !886, isLocal: true, isDefinition: true)
!789 = distinct !DICompileUnit(language: DW_LANG_C99, file: !790, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !791, retainedTypes: !804, globals: !850, splitDebugInlining: false, nameTableKind: None)
!790 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/getline")
!791 = !{!792, !30, !797}
!792 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !793, line: 197, baseType: !32, size: 32, elements: !794)
!793 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!794 = !{!795, !796}
!795 = !DIEnumerator(name: "SUCCESS", value: 0)
!796 = !DIEnumerator(name: "ERROR", value: 1)
!797 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !798, line: 44, baseType: !32, size: 32, elements: !799)
!798 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!799 = !{!800, !801, !802, !803}
!800 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!801 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!802 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!803 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!804 = !{!102, !103, !121, !805, !843, !849}
!805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !806, size: 32)
!806 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 369, baseType: !807)
!807 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 335, size: 1152, elements: !808)
!808 = !{!809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !842}
!809 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !807, file: !116, line: 337, baseType: !120, size: 32)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !807, file: !116, line: 338, baseType: !120, size: 32, offset: 32)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !807, file: !116, line: 339, baseType: !120, size: 32, offset: 64)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !807, file: !116, line: 340, baseType: !120, size: 32, offset: 96)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !807, file: !116, line: 341, baseType: !120, size: 32, offset: 128)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !807, file: !116, line: 342, baseType: !120, size: 32, offset: 160)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !807, file: !116, line: 343, baseType: !120, size: 32, offset: 192)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !807, file: !116, line: 344, baseType: !121, size: 32, offset: 224)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !807, file: !116, line: 345, baseType: !120, size: 32, offset: 256)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !807, file: !116, line: 346, baseType: !120, size: 32, offset: 288)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !807, file: !116, line: 347, baseType: !820, size: 64, offset: 320)
!820 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 64, elements: !363)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !807, file: !116, line: 348, baseType: !120, size: 32, offset: 384)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !807, file: !116, line: 349, baseType: !120, size: 32, offset: 416)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !807, file: !116, line: 350, baseType: !120, size: 32, offset: 448)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !807, file: !116, line: 351, baseType: !121, size: 32, offset: 480)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !807, file: !116, line: 352, baseType: !120, size: 32, offset: 512)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !807, file: !116, line: 353, baseType: !120, size: 32, offset: 544)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !807, file: !116, line: 354, baseType: !820, size: 64, offset: 576)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !807, file: !116, line: 355, baseType: !120, size: 32, offset: 640)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !807, file: !116, line: 356, baseType: !120, size: 32, offset: 672)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !807, file: !116, line: 357, baseType: !120, size: 32, offset: 704)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !807, file: !116, line: 358, baseType: !121, size: 32, offset: 736)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !807, file: !116, line: 359, baseType: !120, size: 32, offset: 768)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !807, file: !116, line: 360, baseType: !120, size: 32, offset: 800)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !807, file: !116, line: 361, baseType: !820, size: 64, offset: 832)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !807, file: !116, line: 362, baseType: !120, size: 32, offset: 896)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !807, file: !116, line: 363, baseType: !120, size: 32, offset: 928)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !807, file: !116, line: 364, baseType: !820, size: 64, offset: 960)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !807, file: !116, line: 365, baseType: !120, size: 32, offset: 1024)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !807, file: !116, line: 366, baseType: !120, size: 32, offset: 1056)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !807, file: !116, line: 367, baseType: !841, size: 32, offset: 1088)
!841 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 32, elements: !504)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !807, file: !116, line: 368, baseType: !120, size: 32, offset: 1120)
!843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !844, size: 32)
!844 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !845, line: 343, size: 64, elements: !846)
!845 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!846 = !{!847, !848}
!847 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !844, file: !845, line: 344, baseType: !121, size: 32)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !844, file: !845, line: 345, baseType: !121, size: 32, offset: 32)
!849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 32)
!850 = !{!851, !857, !873, !884, !787}
!851 = !DIGlobalVariableExpression(var: !852, expr: !DIExpression())
!852 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !789, file: !853, line: 752, type: !854, isLocal: false, isDefinition: true, align: 16)
!853 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!854 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 640, elements: !855)
!855 = !{!856}
!856 = !DISubrange(count: 40)
!857 = !DIGlobalVariableExpression(var: !858, expr: !DIExpression())
!858 = distinct !DIGlobalVariable(name: "__device_dts_ord_9", scope: !789, file: !853, line: 752, type: !859, isLocal: false, isDefinition: true, align: 32)
!859 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !860)
!860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !861)
!861 = !{!862, !863, !864, !865, !871, !872}
!862 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !860, file: !141, line: 380, baseType: !144, size: 32)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !860, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !860, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !860, file: !141, line: 386, baseType: !866, size: 32, offset: 96)
!866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !867, size: 32)
!867 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !868)
!868 = !{!869, !870}
!869 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !867, file: !141, line: 359, baseType: !154, size: 8)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !867, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !860, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !860, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!873 = !DIGlobalVariableExpression(var: !874, expr: !DIExpression())
!874 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_9", scope: !789, file: !853, line: 752, type: !875, isLocal: true, isDefinition: true, align: 32)
!875 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !876)
!876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !877)
!877 = !{!878, !883}
!878 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !876, file: !132, line: 60, baseType: !879, size: 32)
!879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !880, size: 32)
!880 = !DISubroutineType(types: !881)
!881 = !{!103, !882}
!882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !859, size: 32)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !876, file: !132, line: 65, baseType: !882, size: 32, offset: 32)
!884 = !DIGlobalVariableExpression(var: !885, expr: !DIExpression())
!885 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_9", scope: !789, file: !853, line: 752, type: !867, isLocal: true, isDefinition: true, align: 8)
!886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !798, line: 100, size: 224, elements: !887)
!887 = !{!888, !894, !895, !904, !909, !914, !920}
!888 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !886, file: !798, line: 101, baseType: !889, size: 32)
!889 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !798, line: 76, baseType: !890)
!890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !891, size: 32)
!891 = !DISubroutineType(types: !892)
!892 = !{!103, !882, !893}
!893 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !798, line: 56, baseType: !102)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !886, file: !798, line: 102, baseType: !889, size: 32, offset: 32)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !886, file: !798, line: 103, baseType: !896, size: 32, offset: 64)
!896 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !798, line: 83, baseType: !897)
!897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !898, size: 32)
!898 = !DISubroutineType(types: !899)
!899 = !{!103, !882, !893, !900, !102}
!900 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !798, line: 72, baseType: !901)
!901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !902, size: 32)
!902 = !DISubroutineType(types: !903)
!903 = !{null, !882, !893, !102}
!904 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !886, file: !798, line: 104, baseType: !905, size: 32, offset: 96)
!905 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !798, line: 79, baseType: !906)
!906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !907, size: 32)
!907 = !DISubroutineType(types: !908)
!908 = !{!103, !882, !893, !849}
!909 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !886, file: !798, line: 105, baseType: !910, size: 32, offset: 128)
!910 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !798, line: 88, baseType: !911)
!911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !912, size: 32)
!912 = !DISubroutineType(types: !913)
!913 = !{!797, !882, !893}
!914 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !886, file: !798, line: 106, baseType: !915, size: 32, offset: 160)
!915 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !798, line: 92, baseType: !916)
!916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !917, size: 32)
!917 = !DISubroutineType(types: !918)
!918 = !{!103, !882, !893, !919}
!919 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !798, line: 64, baseType: !102)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !886, file: !798, line: 107, baseType: !921, size: 32, offset: 192)
!921 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !798, line: 96, baseType: !922)
!922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !923, size: 32)
!923 = !DISubroutineType(types: !924)
!924 = !{!103, !882, !893, !102}
!925 = !DIGlobalVariableExpression(var: !926, expr: !DIExpression())
!926 = distinct !DIGlobalVariable(name: "avail_queue", scope: !927, file: !931, line: 108, type: !1028, isLocal: true, isDefinition: true)
!927 = distinct !DICompileUnit(language: DW_LANG_C99, file: !928, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !929, retainedTypes: !938, globals: !1018, splitDebugInlining: false, nameTableKind: None)
!928 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/getline")
!929 = !{!30, !930}
!930 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !931, line: 214, baseType: !32, size: 32, elements: !932)
!931 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!932 = !{!933, !934, !935, !936, !937}
!933 = !DIEnumerator(name: "ESC_ESC", value: 0)
!934 = !DIEnumerator(name: "ESC_ANSI", value: 1)
!935 = !DIEnumerator(name: "ESC_ANSI_FIRST", value: 2)
!936 = !DIEnumerator(name: "ESC_ANSI_VAL", value: 3)
!937 = !DIEnumerator(name: "ESC_ANSI_VAL_2", value: 4)
!938 = !{!102, !103, !939, !32, !24}
!939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !940, size: 32)
!940 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !941)
!941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !209, line: 336, size: 608, elements: !942)
!942 = !{!943, !962, !966, !970, !983, !988, !992, !996, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010}
!943 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !941, file: !209, line: 365, baseType: !944, size: 32)
!944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !945, size: 32)
!945 = !DISubroutineType(types: !946)
!946 = !{!103, !947, !230}
!947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !948, size: 32)
!948 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !949)
!949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !950)
!950 = !{!951, !952, !953, !954, !960, !961}
!951 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !949, file: !141, line: 380, baseType: !144, size: 32)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !949, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !949, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !949, file: !141, line: 386, baseType: !955, size: 32, offset: 96)
!955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !956, size: 32)
!956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !957)
!957 = !{!958, !959}
!958 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !956, file: !141, line: 359, baseType: !154, size: 8)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !956, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !949, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !949, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !941, file: !209, line: 366, baseType: !963, size: 32, offset: 32)
!963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !964, size: 32)
!964 = !DISubroutineType(types: !965)
!965 = !{null, !947, !155}
!966 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !941, file: !209, line: 374, baseType: !967, size: 32, offset: 64)
!967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !968, size: 32)
!968 = !DISubroutineType(types: !969)
!969 = !{!103, !947}
!970 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !941, file: !209, line: 377, baseType: !971, size: 32, offset: 96)
!971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 32)
!972 = !DISubroutineType(types: !973)
!973 = !{!103, !947, !974}
!974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !975, size: 32)
!975 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !976)
!976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !209, line: 122, size: 64, elements: !977)
!977 = !{!978, !979, !980, !981, !982}
!978 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !976, file: !209, line: 123, baseType: !121, size: 32)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !976, file: !209, line: 124, baseType: !154, size: 8, offset: 32)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !976, file: !209, line: 125, baseType: !154, size: 8, offset: 40)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !976, file: !209, line: 126, baseType: !154, size: 8, offset: 48)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !976, file: !209, line: 127, baseType: !154, size: 8, offset: 56)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !941, file: !209, line: 379, baseType: !984, size: 32, offset: 128)
!984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !985, size: 32)
!985 = !DISubroutineType(types: !986)
!986 = !{!103, !947, !987}
!987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 32)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !941, file: !209, line: 384, baseType: !989, size: 32, offset: 160)
!989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !990, size: 32)
!990 = !DISubroutineType(types: !991)
!991 = !{!103, !947, !261, !103}
!992 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !941, file: !209, line: 393, baseType: !993, size: 32, offset: 192)
!993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !994, size: 32)
!994 = !DISubroutineType(types: !995)
!995 = !{!103, !947, !267, !268}
!996 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !941, file: !209, line: 402, baseType: !997, size: 32, offset: 224)
!997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !998, size: 32)
!998 = !DISubroutineType(types: !999)
!999 = !{null, !947}
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !941, file: !209, line: 405, baseType: !997, size: 32, offset: 256)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !941, file: !209, line: 408, baseType: !967, size: 32, offset: 288)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !941, file: !209, line: 411, baseType: !997, size: 32, offset: 320)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !941, file: !209, line: 414, baseType: !997, size: 32, offset: 352)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !941, file: !209, line: 417, baseType: !967, size: 32, offset: 384)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !941, file: !209, line: 420, baseType: !967, size: 32, offset: 416)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !941, file: !209, line: 423, baseType: !997, size: 32, offset: 448)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !941, file: !209, line: 426, baseType: !997, size: 32, offset: 480)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !941, file: !209, line: 429, baseType: !967, size: 32, offset: 512)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !941, file: !209, line: 432, baseType: !967, size: 32, offset: 544)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !941, file: !209, line: 435, baseType: !1011, size: 32, offset: 576)
!1011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1012, size: 32)
!1012 = !DISubroutineType(types: !1013)
!1013 = !{null, !947, !1014, !102}
!1014 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !209, line: 142, baseType: !1015)
!1015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1016, size: 32)
!1016 = !DISubroutineType(types: !1017)
!1017 = !{null, !947, !102}
!1018 = !{!1019, !925, !1026, !1066, !1071, !1074, !1093, !1097, !1099, !1101, !1103}
!1019 = !DIGlobalVariableExpression(var: !1020, expr: !DIExpression())
!1020 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !927, file: !931, line: 603, type: !1021, isLocal: true, isDefinition: true, align: 32)
!1021 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1022)
!1022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !1023)
!1023 = !{!1024, !1025}
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1022, file: !132, line: 60, baseType: !967, size: 32)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1022, file: !132, line: 65, baseType: !947, size: 32, offset: 32)
!1026 = !DIGlobalVariableExpression(var: !1027, expr: !DIExpression())
!1027 = distinct !DIGlobalVariable(name: "lines_queue", scope: !927, file: !931, line: 109, type: !1028, isLocal: true, isDefinition: true)
!1028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1029, size: 32)
!1029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !296, line: 2208, size: 128, elements: !1030)
!1030 = !{!1031}
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !1029, file: !296, line: 2209, baseType: !1032, size: 128)
!1032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !296, line: 1709, size: 128, elements: !1033)
!1033 = !{!1034, !1045, !1047}
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !1032, file: !296, line: 1710, baseType: !1035, size: 64)
!1035 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !303, line: 46, baseType: !1036)
!1036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !303, line: 41, size: 64, elements: !1037)
!1037 = !{!1038, !1044}
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1036, file: !303, line: 42, baseType: !1039, size: 32)
!1039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1040, size: 32)
!1040 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !303, line: 39, baseType: !1041)
!1041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !303, line: 35, size: 32, elements: !1042)
!1042 = !{!1043}
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !1041, file: !303, line: 36, baseType: !312, size: 32)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1036, file: !303, line: 43, baseType: !1039, size: 32, offset: 32)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1032, file: !296, line: 1711, baseType: !1046, offset: 64)
!1046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1032, file: !296, line: 1712, baseType: !1048, size: 64, offset: 64)
!1048 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !1049)
!1049 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !1050)
!1050 = !{!1051}
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1049, file: !320, line: 232, baseType: !1052, size: 64)
!1052 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !1053)
!1053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !1054)
!1054 = !{!1055, !1061}
!1055 = !DIDerivedType(tag: DW_TAG_member, scope: !1053, file: !325, line: 38, baseType: !1056, size: 32)
!1056 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1053, file: !325, line: 38, size: 32, elements: !1057)
!1057 = !{!1058, !1060}
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1056, file: !325, line: 39, baseType: !1059, size: 32)
!1059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1053, size: 32)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1056, file: !325, line: 40, baseType: !1059, size: 32)
!1061 = !DIDerivedType(tag: DW_TAG_member, scope: !1053, file: !325, line: 42, baseType: !1062, size: 32, offset: 32)
!1062 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1053, file: !325, line: 42, size: 32, elements: !1063)
!1063 = !{!1064, !1065}
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1062, file: !325, line: 43, baseType: !1059, size: 32)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1062, file: !325, line: 44, baseType: !1059, size: 32)
!1066 = !DIGlobalVariableExpression(var: !1067, expr: !DIExpression())
!1067 = distinct !DIGlobalVariable(name: "completion_cb", scope: !927, file: !931, line: 110, type: !1068, isLocal: true, isDefinition: true)
!1068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1069, size: 32)
!1069 = !DISubroutineType(types: !1070)
!1070 = !{!154, !344, !154}
!1071 = !DIGlobalVariableExpression(var: !1072, expr: !DIExpression())
!1072 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !927, file: !931, line: 38, type: !1073, isLocal: true, isDefinition: true)
!1073 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !947)
!1074 = !DIGlobalVariableExpression(var: !1075, expr: !DIExpression())
!1075 = distinct !DIGlobalVariable(name: "cmd", scope: !1076, file: !931, line: 435, type: !1087, isLocal: true, isDefinition: true)
!1076 = distinct !DISubprogram(name: "uart_console_isr", scope: !931, file: !931, line: 428, type: !1016, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !927, retainedNodes: !1077)
!1077 = !{!1078, !1079, !1080, !1082, !1083}
!1078 = !DILocalVariable(name: "unused", arg: 1, scope: !1076, file: !931, line: 428, type: !947)
!1079 = !DILocalVariable(name: "user_data", arg: 2, scope: !1076, file: !931, line: 428, type: !102)
!1080 = !DILocalVariable(name: "byte", scope: !1081, file: !931, line: 436, type: !154)
!1081 = distinct !DILexicalBlock(scope: !1076, file: !931, line: 434, column: 48)
!1082 = !DILocalVariable(name: "rx", scope: !1081, file: !931, line: 437, type: !103)
!1083 = !DILocalVariable(name: "ret", scope: !1084, file: !931, line: 461, type: !102)
!1084 = distinct !DILexicalBlock(scope: !1085, file: !931, line: 461, column: 10)
!1085 = distinct !DILexicalBlock(scope: !1086, file: !931, line: 460, column: 13)
!1086 = distinct !DILexicalBlock(scope: !1081, file: !931, line: 460, column: 7)
!1087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1088, size: 32)
!1088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "console_input", file: !350, line: 21, size: 1088, elements: !1089)
!1089 = !{!1090, !1091, !1092}
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "_unused", scope: !1088, file: !350, line: 23, baseType: !353, size: 32)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "is_mcumgr", scope: !1088, file: !350, line: 25, baseType: !154, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !1088, file: !350, line: 27, baseType: !357, size: 1024, offset: 40)
!1093 = !DIGlobalVariableExpression(var: !1094, expr: !DIExpression())
!1094 = distinct !DIGlobalVariable(name: "esc_state", scope: !927, file: !931, line: 228, type: !1095, isLocal: true, isDefinition: true)
!1095 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !1096, line: 22, baseType: !354)
!1096 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1097 = !DIGlobalVariableExpression(var: !1098, expr: !DIExpression())
!1098 = distinct !DIGlobalVariable(name: "ansi_val", scope: !927, file: !931, line: 229, type: !32, isLocal: true, isDefinition: true)
!1099 = !DIGlobalVariableExpression(var: !1100, expr: !DIExpression())
!1100 = distinct !DIGlobalVariable(name: "ansi_val_2", scope: !927, file: !931, line: 229, type: !32, isLocal: true, isDefinition: true)
!1101 = !DIGlobalVariableExpression(var: !1102, expr: !DIExpression())
!1102 = distinct !DIGlobalVariable(name: "cur", scope: !927, file: !931, line: 230, type: !154, isLocal: true, isDefinition: true)
!1103 = !DIGlobalVariableExpression(var: !1104, expr: !DIExpression())
!1104 = distinct !DIGlobalVariable(name: "end", scope: !927, file: !931, line: 230, type: !154, isLocal: true, isDefinition: true)
!1105 = !DIGlobalVariableExpression(var: !1106, expr: !DIExpression())
!1106 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1107, file: !1276, line: 762, type: !1388, isLocal: true, isDefinition: true)
!1107 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1108, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1109, retainedTypes: !1127, globals: !1273, splitDebugInlining: false, nameTableKind: None)
!1108 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/getline")
!1109 = !{!30, !1110, !1116, !1121, !797}
!1110 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1111, line: 506, baseType: !32, size: 32, elements: !1112)
!1111 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1112 = !{!1113, !1114, !1115}
!1113 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1114 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1115 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1116 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1111, line: 512, baseType: !32, size: 32, elements: !1117)
!1117 = !{!1118, !1119, !1120}
!1118 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1119 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1120 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1121 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !705, line: 43, baseType: !32, size: 32, elements: !1122)
!1122 = !{!1123, !1124, !1125, !1126}
!1123 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1124 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1125 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1126 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1127 = !{!102, !103, !1128, !1198, !1203, !1163, !1116, !1110, !1208, !1209, !121, !1223, !1178, !344, !1233, !1234}
!1128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1129, size: 32)
!1129 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1130)
!1130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1111, line: 523, size: 288, elements: !1131)
!1131 = !{!1132, !1153, !1159, !1164, !1168, !1169, !1170, !1174, !1194}
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1130, file: !1111, line: 524, baseType: !1133, size: 32)
!1133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1134, size: 32)
!1134 = !DISubroutineType(types: !1135)
!1135 = !{!103, !1136, !1151, !1152}
!1136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1137, size: 32)
!1137 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1138)
!1138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1139)
!1139 = !{!1140, !1141, !1142, !1143, !1149, !1150}
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1138, file: !141, line: 380, baseType: !144, size: 32)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1138, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1138, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1138, file: !141, line: 386, baseType: !1144, size: 32, offset: 96)
!1144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1145, size: 32)
!1145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1146)
!1146 = !{!1147, !1148}
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1145, file: !141, line: 359, baseType: !154, size: 8)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1145, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1138, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1138, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1151 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1111, line: 237, baseType: !154)
!1152 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1111, line: 257, baseType: !121)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1130, file: !1111, line: 530, baseType: !1154, size: 32, offset: 32)
!1154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1155, size: 32)
!1155 = !DISubroutineType(types: !1156)
!1156 = !{!103, !1136, !1157}
!1157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1158, size: 32)
!1158 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1111, line: 229, baseType: !121)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1130, file: !1111, line: 532, baseType: !1160, size: 32, offset: 64)
!1160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1161, size: 32)
!1161 = !DISubroutineType(types: !1162)
!1162 = !{!103, !1136, !1163, !1158}
!1163 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1111, line: 216, baseType: !121)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1130, file: !1111, line: 535, baseType: !1165, size: 32, offset: 96)
!1165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1166, size: 32)
!1166 = !DISubroutineType(types: !1167)
!1167 = !{!103, !1136, !1163}
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1130, file: !1111, line: 537, baseType: !1165, size: 32, offset: 128)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1130, file: !1111, line: 539, baseType: !1165, size: 32, offset: 160)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1130, file: !1111, line: 541, baseType: !1171, size: 32, offset: 192)
!1171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1172, size: 32)
!1172 = !DISubroutineType(types: !1173)
!1173 = !{!103, !1136, !1151, !1110, !1116}
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1130, file: !1111, line: 544, baseType: !1175, size: 32, offset: 224)
!1175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1176, size: 32)
!1176 = !DISubroutineType(types: !1177)
!1177 = !{!103, !1136, !1178, !157}
!1178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1179, size: 32)
!1179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1111, line: 478, size: 96, elements: !1180)
!1180 = !{!1181, !1188, !1193}
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1179, file: !1111, line: 482, baseType: !1182, size: 32)
!1182 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1183, line: 33, baseType: !1184)
!1183 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1183, line: 29, size: 32, elements: !1185)
!1185 = !{!1186}
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1184, file: !1183, line: 30, baseType: !1187, size: 32)
!1187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1184, size: 32)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1179, file: !1111, line: 485, baseType: !1189, size: 32, offset: 32)
!1189 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1111, line: 464, baseType: !1190)
!1190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1191, size: 32)
!1191 = !DISubroutineType(types: !1192)
!1192 = !{null, !1136, !1178, !1163}
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1179, file: !1111, line: 493, baseType: !1163, size: 32, offset: 64)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1130, file: !1111, line: 547, baseType: !1195, size: 32, offset: 256)
!1195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1196, size: 32)
!1196 = !DISubroutineType(types: !1197)
!1197 = !{!121, !1136}
!1198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1199, size: 32)
!1199 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1200)
!1200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1111, line: 428, size: 32, elements: !1201)
!1201 = !{!1202}
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1200, file: !1111, line: 434, baseType: !1163, size: 32)
!1203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1204, size: 32)
!1204 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1205)
!1205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1111, line: 441, size: 32, elements: !1206)
!1206 = !{!1207}
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1205, file: !1111, line: 447, baseType: !1163, size: 32)
!1208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1205, size: 32)
!1209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1210, size: 32)
!1210 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !116, line: 275, baseType: !1211)
!1211 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 264, size: 320, elements: !1212)
!1212 = !{!1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221}
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1211, file: !116, line: 266, baseType: !120, size: 32)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1211, file: !116, line: 267, baseType: !120, size: 32, offset: 32)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1211, file: !116, line: 268, baseType: !120, size: 32, offset: 64)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1211, file: !116, line: 269, baseType: !120, size: 32, offset: 96)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1211, file: !116, line: 270, baseType: !120, size: 32, offset: 128)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1211, file: !116, line: 271, baseType: !120, size: 32, offset: 160)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1211, file: !116, line: 272, baseType: !120, size: 32, offset: 192)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1211, file: !116, line: 273, baseType: !120, size: 32, offset: 224)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1211, file: !116, line: 274, baseType: !1222, size: 64, offset: 256)
!1222 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 64, elements: !363)
!1223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1224, size: 32)
!1224 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !116, line: 288, baseType: !1225)
!1225 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 281, size: 288, elements: !1226)
!1226 = !{!1227, !1228, !1229, !1231, !1232}
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1225, file: !116, line: 283, baseType: !120, size: 32)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1225, file: !116, line: 284, baseType: !120, size: 32, offset: 32)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1225, file: !116, line: 285, baseType: !1230, size: 128, offset: 64)
!1230 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 128, elements: !666)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1225, file: !116, line: 286, baseType: !820, size: 64, offset: 192)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1225, file: !116, line: 287, baseType: !120, size: 32, offset: 256)
!1233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !893, size: 32)
!1234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1235, size: 32)
!1235 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1236)
!1236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !798, line: 100, size: 224, elements: !1237)
!1237 = !{!1238, !1243, !1244, !1253, !1258, !1263, !1268}
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1236, file: !798, line: 101, baseType: !1239, size: 32)
!1239 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !798, line: 76, baseType: !1240)
!1240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1241, size: 32)
!1241 = !DISubroutineType(types: !1242)
!1242 = !{!103, !1136, !893}
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1236, file: !798, line: 102, baseType: !1239, size: 32, offset: 32)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1236, file: !798, line: 103, baseType: !1245, size: 32, offset: 64)
!1245 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !798, line: 83, baseType: !1246)
!1246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1247, size: 32)
!1247 = !DISubroutineType(types: !1248)
!1248 = !{!103, !1136, !893, !1249, !102}
!1249 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !798, line: 72, baseType: !1250)
!1250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1251, size: 32)
!1251 = !DISubroutineType(types: !1252)
!1252 = !{null, !1136, !893, !102}
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1236, file: !798, line: 104, baseType: !1254, size: 32, offset: 96)
!1254 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !798, line: 79, baseType: !1255)
!1255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1256, size: 32)
!1256 = !DISubroutineType(types: !1257)
!1257 = !{!103, !1136, !893, !849}
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1236, file: !798, line: 105, baseType: !1259, size: 32, offset: 128)
!1259 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !798, line: 88, baseType: !1260)
!1260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1261, size: 32)
!1261 = !DISubroutineType(types: !1262)
!1262 = !{!797, !1136, !893}
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1236, file: !798, line: 106, baseType: !1264, size: 32, offset: 160)
!1264 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !798, line: 92, baseType: !1265)
!1265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1266, size: 32)
!1266 = !DISubroutineType(types: !1267)
!1267 = !{!103, !1136, !893, !919}
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1236, file: !798, line: 107, baseType: !1269, size: 32, offset: 192)
!1269 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !798, line: 96, baseType: !1270)
!1270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1271, size: 32)
!1271 = !DISubroutineType(types: !1272)
!1272 = !{!103, !1136, !893, !102}
!1273 = !{!1274, !1280, !1282, !1292, !1294, !1296, !1298, !1303, !1305, !1307, !1312, !1314, !1316, !1318, !1320, !1322, !1324, !1326, !1328, !1330, !1332, !1334, !1336, !1338, !1340, !1354, !1356, !1358, !1360, !1362, !1364, !1366, !1368, !1370, !1372, !1374, !1376, !1378, !1380, !1382, !1105, !1384, !1386, !1399, !1401, !1403, !1405, !1407, !1409}
!1274 = !DIGlobalVariableExpression(var: !1275, expr: !DIExpression())
!1275 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_25", scope: !1107, file: !1276, line: 762, type: !1277, isLocal: false, isDefinition: true, align: 16)
!1276 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1277 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 112, elements: !1278)
!1278 = !{!1279}
!1279 = !DISubrange(count: 7)
!1280 = !DIGlobalVariableExpression(var: !1281, expr: !DIExpression())
!1281 = distinct !DIGlobalVariable(name: "__device_dts_ord_25", scope: !1107, file: !1276, line: 762, type: !1137, isLocal: false, isDefinition: true, align: 32)
!1282 = !DIGlobalVariableExpression(var: !1283, expr: !DIExpression())
!1283 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_25", scope: !1107, file: !1276, line: 762, type: !1284, isLocal: true, isDefinition: true, align: 32)
!1284 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1285)
!1285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !1286)
!1286 = !{!1287, !1291}
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1285, file: !132, line: 60, baseType: !1288, size: 32)
!1288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1289, size: 32)
!1289 = !DISubroutineType(types: !1290)
!1290 = !{!103, !1136}
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1285, file: !132, line: 65, baseType: !1136, size: 32, offset: 32)
!1292 = !DIGlobalVariableExpression(var: !1293, expr: !DIExpression())
!1293 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_20", scope: !1107, file: !1276, line: 766, type: !1277, isLocal: false, isDefinition: true, align: 16)
!1294 = !DIGlobalVariableExpression(var: !1295, expr: !DIExpression())
!1295 = distinct !DIGlobalVariable(name: "__device_dts_ord_20", scope: !1107, file: !1276, line: 766, type: !1137, isLocal: false, isDefinition: true, align: 32)
!1296 = !DIGlobalVariableExpression(var: !1297, expr: !DIExpression())
!1297 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_20", scope: !1107, file: !1276, line: 766, type: !1284, isLocal: true, isDefinition: true, align: 32)
!1298 = !DIGlobalVariableExpression(var: !1299, expr: !DIExpression())
!1299 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !1107, file: !1276, line: 770, type: !1300, isLocal: false, isDefinition: true, align: 16)
!1300 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 80, elements: !1301)
!1301 = !{!1302}
!1302 = !DISubrange(count: 5)
!1303 = !DIGlobalVariableExpression(var: !1304, expr: !DIExpression())
!1304 = distinct !DIGlobalVariable(name: "__device_dts_ord_72", scope: !1107, file: !1276, line: 770, type: !1137, isLocal: false, isDefinition: true, align: 32)
!1305 = !DIGlobalVariableExpression(var: !1306, expr: !DIExpression())
!1306 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_72", scope: !1107, file: !1276, line: 770, type: !1284, isLocal: true, isDefinition: true, align: 32)
!1307 = !DIGlobalVariableExpression(var: !1308, expr: !DIExpression())
!1308 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_23", scope: !1107, file: !1276, line: 774, type: !1309, isLocal: false, isDefinition: true, align: 16)
!1309 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 96, elements: !1310)
!1310 = !{!1311}
!1311 = !DISubrange(count: 6)
!1312 = !DIGlobalVariableExpression(var: !1313, expr: !DIExpression())
!1313 = distinct !DIGlobalVariable(name: "__device_dts_ord_23", scope: !1107, file: !1276, line: 774, type: !1137, isLocal: false, isDefinition: true, align: 32)
!1314 = !DIGlobalVariableExpression(var: !1315, expr: !DIExpression())
!1315 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_23", scope: !1107, file: !1276, line: 774, type: !1284, isLocal: true, isDefinition: true, align: 32)
!1316 = !DIGlobalVariableExpression(var: !1317, expr: !DIExpression())
!1317 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !1107, file: !1276, line: 778, type: !1300, isLocal: false, isDefinition: true, align: 16)
!1318 = !DIGlobalVariableExpression(var: !1319, expr: !DIExpression())
!1319 = distinct !DIGlobalVariable(name: "__device_dts_ord_73", scope: !1107, file: !1276, line: 778, type: !1137, isLocal: false, isDefinition: true, align: 32)
!1320 = !DIGlobalVariableExpression(var: !1321, expr: !DIExpression())
!1321 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_73", scope: !1107, file: !1276, line: 778, type: !1284, isLocal: true, isDefinition: true, align: 32)
!1322 = !DIGlobalVariableExpression(var: !1323, expr: !DIExpression())
!1323 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_74", scope: !1107, file: !1276, line: 782, type: !1300, isLocal: false, isDefinition: true, align: 16)
!1324 = !DIGlobalVariableExpression(var: !1325, expr: !DIExpression())
!1325 = distinct !DIGlobalVariable(name: "__device_dts_ord_74", scope: !1107, file: !1276, line: 782, type: !1137, isLocal: false, isDefinition: true, align: 32)
!1326 = !DIGlobalVariableExpression(var: !1327, expr: !DIExpression())
!1327 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_74", scope: !1107, file: !1276, line: 782, type: !1284, isLocal: true, isDefinition: true, align: 32)
!1328 = !DIGlobalVariableExpression(var: !1329, expr: !DIExpression())
!1329 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_75", scope: !1107, file: !1276, line: 786, type: !1300, isLocal: false, isDefinition: true, align: 16)
!1330 = !DIGlobalVariableExpression(var: !1331, expr: !DIExpression())
!1331 = distinct !DIGlobalVariable(name: "__device_dts_ord_75", scope: !1107, file: !1276, line: 786, type: !1137, isLocal: false, isDefinition: true, align: 32)
!1332 = !DIGlobalVariableExpression(var: !1333, expr: !DIExpression())
!1333 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_75", scope: !1107, file: !1276, line: 786, type: !1284, isLocal: true, isDefinition: true, align: 32)
!1334 = !DIGlobalVariableExpression(var: !1335, expr: !DIExpression())
!1335 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_76", scope: !1107, file: !1276, line: 790, type: !1300, isLocal: false, isDefinition: true, align: 16)
!1336 = !DIGlobalVariableExpression(var: !1337, expr: !DIExpression())
!1337 = distinct !DIGlobalVariable(name: "__device_dts_ord_76", scope: !1107, file: !1276, line: 790, type: !1137, isLocal: false, isDefinition: true, align: 32)
!1338 = !DIGlobalVariableExpression(var: !1339, expr: !DIExpression())
!1339 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_76", scope: !1107, file: !1276, line: 790, type: !1284, isLocal: true, isDefinition: true, align: 32)
!1340 = !DIGlobalVariableExpression(var: !1341, expr: !DIExpression())
!1341 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1107, file: !1276, line: 762, type: !1342, isLocal: true, isDefinition: true)
!1342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1343, line: 237, size: 128, elements: !1344)
!1343 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1344 = !{!1345, !1346, !1347}
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1342, file: !1343, line: 239, baseType: !1205, size: 32)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1342, file: !1343, line: 241, baseType: !1136, size: 32, offset: 32)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1342, file: !1343, line: 243, baseType: !1348, size: 64, offset: 64)
!1348 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1183, line: 40, baseType: !1349)
!1349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1183, line: 35, size: 64, elements: !1350)
!1350 = !{!1351, !1353}
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1349, file: !1183, line: 36, baseType: !1352, size: 32)
!1352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1182, size: 32)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1349, file: !1183, line: 37, baseType: !1352, size: 32, offset: 32)
!1354 = !DIGlobalVariableExpression(var: !1355, expr: !DIExpression())
!1355 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_25", scope: !1107, file: !1276, line: 762, type: !1145, isLocal: true, isDefinition: true, align: 8)
!1356 = !DIGlobalVariableExpression(var: !1357, expr: !DIExpression())
!1357 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1107, file: !1276, line: 766, type: !1342, isLocal: true, isDefinition: true)
!1358 = !DIGlobalVariableExpression(var: !1359, expr: !DIExpression())
!1359 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_20", scope: !1107, file: !1276, line: 766, type: !1145, isLocal: true, isDefinition: true, align: 8)
!1360 = !DIGlobalVariableExpression(var: !1361, expr: !DIExpression())
!1361 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1107, file: !1276, line: 770, type: !1342, isLocal: true, isDefinition: true)
!1362 = !DIGlobalVariableExpression(var: !1363, expr: !DIExpression())
!1363 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_72", scope: !1107, file: !1276, line: 770, type: !1145, isLocal: true, isDefinition: true, align: 8)
!1364 = !DIGlobalVariableExpression(var: !1365, expr: !DIExpression())
!1365 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1107, file: !1276, line: 774, type: !1342, isLocal: true, isDefinition: true)
!1366 = !DIGlobalVariableExpression(var: !1367, expr: !DIExpression())
!1367 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_23", scope: !1107, file: !1276, line: 774, type: !1145, isLocal: true, isDefinition: true, align: 8)
!1368 = !DIGlobalVariableExpression(var: !1369, expr: !DIExpression())
!1369 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1107, file: !1276, line: 778, type: !1342, isLocal: true, isDefinition: true)
!1370 = !DIGlobalVariableExpression(var: !1371, expr: !DIExpression())
!1371 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_73", scope: !1107, file: !1276, line: 778, type: !1145, isLocal: true, isDefinition: true, align: 8)
!1372 = !DIGlobalVariableExpression(var: !1373, expr: !DIExpression())
!1373 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1107, file: !1276, line: 782, type: !1342, isLocal: true, isDefinition: true)
!1374 = !DIGlobalVariableExpression(var: !1375, expr: !DIExpression())
!1375 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_74", scope: !1107, file: !1276, line: 782, type: !1145, isLocal: true, isDefinition: true, align: 8)
!1376 = !DIGlobalVariableExpression(var: !1377, expr: !DIExpression())
!1377 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1107, file: !1276, line: 786, type: !1342, isLocal: true, isDefinition: true)
!1378 = !DIGlobalVariableExpression(var: !1379, expr: !DIExpression())
!1379 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_75", scope: !1107, file: !1276, line: 786, type: !1145, isLocal: true, isDefinition: true, align: 8)
!1380 = !DIGlobalVariableExpression(var: !1381, expr: !DIExpression())
!1381 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1107, file: !1276, line: 790, type: !1342, isLocal: true, isDefinition: true)
!1382 = !DIGlobalVariableExpression(var: !1383, expr: !DIExpression())
!1383 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_76", scope: !1107, file: !1276, line: 790, type: !1145, isLocal: true, isDefinition: true, align: 8)
!1384 = !DIGlobalVariableExpression(var: !1385, expr: !DIExpression())
!1385 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1107, file: !1276, line: 656, type: !1129, isLocal: true, isDefinition: true)
!1386 = !DIGlobalVariableExpression(var: !1387, expr: !DIExpression())
!1387 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1107, file: !1276, line: 766, type: !1388, isLocal: true, isDefinition: true)
!1388 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1389)
!1389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1343, line: 224, size: 160, elements: !1390)
!1390 = !{!1391, !1392, !1393, !1394}
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1389, file: !1343, line: 226, baseType: !1200, size: 32)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1389, file: !1343, line: 228, baseType: !849, size: 32, offset: 32)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1389, file: !1343, line: 230, baseType: !103, size: 32, offset: 64)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1389, file: !1343, line: 231, baseType: !1395, size: 64, offset: 96)
!1395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !845, line: 343, size: 64, elements: !1396)
!1396 = !{!1397, !1398}
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1395, file: !845, line: 344, baseType: !121, size: 32)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1395, file: !845, line: 345, baseType: !121, size: 32, offset: 32)
!1399 = !DIGlobalVariableExpression(var: !1400, expr: !DIExpression())
!1400 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1107, file: !1276, line: 770, type: !1388, isLocal: true, isDefinition: true)
!1401 = !DIGlobalVariableExpression(var: !1402, expr: !DIExpression())
!1402 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1107, file: !1276, line: 774, type: !1388, isLocal: true, isDefinition: true)
!1403 = !DIGlobalVariableExpression(var: !1404, expr: !DIExpression())
!1404 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1107, file: !1276, line: 778, type: !1388, isLocal: true, isDefinition: true)
!1405 = !DIGlobalVariableExpression(var: !1406, expr: !DIExpression())
!1406 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1107, file: !1276, line: 782, type: !1388, isLocal: true, isDefinition: true)
!1407 = !DIGlobalVariableExpression(var: !1408, expr: !DIExpression())
!1408 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1107, file: !1276, line: 786, type: !1388, isLocal: true, isDefinition: true)
!1409 = !DIGlobalVariableExpression(var: !1410, expr: !DIExpression())
!1410 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1107, file: !1276, line: 790, type: !1388, isLocal: true, isDefinition: true)
!1411 = !DIGlobalVariableExpression(var: !1412, expr: !DIExpression())
!1412 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1413, file: !1584, line: 1914, type: !1676, isLocal: true, isDefinition: true)
!1413 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1414, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1415, retainedTypes: !1448, globals: !1581, splitDebugInlining: false, nameTableKind: None)
!1414 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/getline")
!1415 = !{!30, !1416, !1423, !1430, !1437, !1443, !797}
!1416 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !209, line: 47, baseType: !32, size: 32, elements: !1417)
!1417 = !{!1418, !1419, !1420, !1421, !1422}
!1418 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1419 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1420 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1421 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1422 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1423 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !209, line: 75, baseType: !32, size: 32, elements: !1424)
!1424 = !{!1425, !1426, !1427, !1428, !1429}
!1425 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1426 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1427 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1428 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1429 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1430 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !209, line: 92, baseType: !32, size: 32, elements: !1431)
!1431 = !{!1432, !1433, !1434, !1435, !1436}
!1432 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1433 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1434 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1435 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1436 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1437 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !209, line: 84, baseType: !32, size: 32, elements: !1438)
!1438 = !{!1439, !1440, !1441, !1442}
!1439 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1440 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1441 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1442 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1443 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !209, line: 107, baseType: !32, size: 32, elements: !1444)
!1444 = !{!1445, !1446, !1447}
!1445 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1446 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1447 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1448 = !{!102, !103, !1449, !155, !154, !1528, !121, !893, !1539, !429, !1578, !1580}
!1449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1450, size: 32)
!1450 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1451)
!1451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !209, line: 336, size: 608, elements: !1452)
!1452 = !{!1453, !1472, !1476, !1480, !1493, !1498, !1502, !1506, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520}
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1451, file: !209, line: 365, baseType: !1454, size: 32)
!1454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1455, size: 32)
!1455 = !DISubroutineType(types: !1456)
!1456 = !{!103, !1457, !230}
!1457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1458, size: 32)
!1458 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1459)
!1459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1460)
!1460 = !{!1461, !1462, !1463, !1464, !1470, !1471}
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1459, file: !141, line: 380, baseType: !144, size: 32)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1459, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1459, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1459, file: !141, line: 386, baseType: !1465, size: 32, offset: 96)
!1465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1466, size: 32)
!1466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1467)
!1467 = !{!1468, !1469}
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1466, file: !141, line: 359, baseType: !154, size: 8)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1466, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1459, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1459, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1451, file: !209, line: 366, baseType: !1473, size: 32, offset: 32)
!1473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1474, size: 32)
!1474 = !DISubroutineType(types: !1475)
!1475 = !{null, !1457, !155}
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1451, file: !209, line: 374, baseType: !1477, size: 32, offset: 64)
!1477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1478, size: 32)
!1478 = !DISubroutineType(types: !1479)
!1479 = !{!103, !1457}
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1451, file: !209, line: 377, baseType: !1481, size: 32, offset: 96)
!1481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1482, size: 32)
!1482 = !DISubroutineType(types: !1483)
!1483 = !{!103, !1457, !1484}
!1484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1485, size: 32)
!1485 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1486)
!1486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !209, line: 122, size: 64, elements: !1487)
!1487 = !{!1488, !1489, !1490, !1491, !1492}
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1486, file: !209, line: 123, baseType: !121, size: 32)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1486, file: !209, line: 124, baseType: !154, size: 8, offset: 32)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1486, file: !209, line: 125, baseType: !154, size: 8, offset: 40)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1486, file: !209, line: 126, baseType: !154, size: 8, offset: 48)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1486, file: !209, line: 127, baseType: !154, size: 8, offset: 56)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1451, file: !209, line: 379, baseType: !1494, size: 32, offset: 128)
!1494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1495, size: 32)
!1495 = !DISubroutineType(types: !1496)
!1496 = !{!103, !1457, !1497}
!1497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1486, size: 32)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !1451, file: !209, line: 384, baseType: !1499, size: 32, offset: 160)
!1499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1500, size: 32)
!1500 = !DISubroutineType(types: !1501)
!1501 = !{!103, !1457, !261, !103}
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !1451, file: !209, line: 393, baseType: !1503, size: 32, offset: 192)
!1503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1504, size: 32)
!1504 = !DISubroutineType(types: !1505)
!1505 = !{!103, !1457, !267, !268}
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !1451, file: !209, line: 402, baseType: !1507, size: 32, offset: 224)
!1507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1508, size: 32)
!1508 = !DISubroutineType(types: !1509)
!1509 = !{null, !1457}
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !1451, file: !209, line: 405, baseType: !1507, size: 32, offset: 256)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !1451, file: !209, line: 408, baseType: !1477, size: 32, offset: 288)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !1451, file: !209, line: 411, baseType: !1507, size: 32, offset: 320)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !1451, file: !209, line: 414, baseType: !1507, size: 32, offset: 352)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !1451, file: !209, line: 417, baseType: !1477, size: 32, offset: 384)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !1451, file: !209, line: 420, baseType: !1477, size: 32, offset: 416)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !1451, file: !209, line: 423, baseType: !1507, size: 32, offset: 448)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !1451, file: !209, line: 426, baseType: !1507, size: 32, offset: 480)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !1451, file: !209, line: 429, baseType: !1477, size: 32, offset: 512)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !1451, file: !209, line: 432, baseType: !1477, size: 32, offset: 544)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !1451, file: !209, line: 435, baseType: !1521, size: 32, offset: 576)
!1521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1522, size: 32)
!1522 = !DISubroutineType(types: !1523)
!1523 = !{null, !1457, !1524, !102}
!1524 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !209, line: 142, baseType: !1525)
!1525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1526, size: 32)
!1526 = !DISubroutineType(types: !1527)
!1527 = !{null, !1457, !102}
!1528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1529, size: 32)
!1529 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !116, line: 507, baseType: !1530)
!1530 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 498, size: 224, elements: !1531)
!1531 = !{!1532, !1533, !1534, !1535, !1536, !1537, !1538}
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1530, file: !116, line: 500, baseType: !120, size: 32)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1530, file: !116, line: 501, baseType: !120, size: 32, offset: 32)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1530, file: !116, line: 502, baseType: !120, size: 32, offset: 64)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1530, file: !116, line: 503, baseType: !120, size: 32, offset: 96)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1530, file: !116, line: 504, baseType: !120, size: 32, offset: 128)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1530, file: !116, line: 505, baseType: !120, size: 32, offset: 160)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1530, file: !116, line: 506, baseType: !120, size: 32, offset: 192)
!1539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1540, size: 32)
!1540 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1541)
!1541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !798, line: 100, size: 224, elements: !1542)
!1542 = !{!1543, !1548, !1549, !1558, !1563, !1568, !1573}
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1541, file: !798, line: 101, baseType: !1544, size: 32)
!1544 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !798, line: 76, baseType: !1545)
!1545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1546, size: 32)
!1546 = !DISubroutineType(types: !1547)
!1547 = !{!103, !1457, !893}
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1541, file: !798, line: 102, baseType: !1544, size: 32, offset: 32)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1541, file: !798, line: 103, baseType: !1550, size: 32, offset: 64)
!1550 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !798, line: 83, baseType: !1551)
!1551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1552, size: 32)
!1552 = !DISubroutineType(types: !1553)
!1553 = !{!103, !1457, !893, !1554, !102}
!1554 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !798, line: 72, baseType: !1555)
!1555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1556, size: 32)
!1556 = !DISubroutineType(types: !1557)
!1557 = !{null, !1457, !893, !102}
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1541, file: !798, line: 104, baseType: !1559, size: 32, offset: 96)
!1559 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !798, line: 79, baseType: !1560)
!1560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1561, size: 32)
!1561 = !DISubroutineType(types: !1562)
!1562 = !{!103, !1457, !893, !849}
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1541, file: !798, line: 105, baseType: !1564, size: 32, offset: 128)
!1564 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !798, line: 88, baseType: !1565)
!1565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1566, size: 32)
!1566 = !DISubroutineType(types: !1567)
!1567 = !{!797, !1457, !893}
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1541, file: !798, line: 106, baseType: !1569, size: 32, offset: 160)
!1569 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !798, line: 92, baseType: !1570)
!1570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1571, size: 32)
!1571 = !DISubroutineType(types: !1572)
!1572 = !{!103, !1457, !893, !919}
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1541, file: !798, line: 107, baseType: !1574, size: 32, offset: 192)
!1574 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !798, line: 96, baseType: !1575)
!1575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1576, size: 32)
!1576 = !DISubroutineType(types: !1577)
!1577 = !{!103, !1457, !893, !102}
!1578 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !1579)
!1579 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!1580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 32)
!1581 = !{!1582, !1588, !1590, !1597, !1599, !1601, !1603, !1605, !1607, !1609, !1611, !1613, !1411, !1615, !1623, !1646, !1649, !1652, !1663, !1665, !1674, !1693, !1695, !1697, !1699, !1701, !1706, !1708, !1710, !1712, !1714, !1716, !1718, !1723}
!1582 = !DIGlobalVariableExpression(var: !1583, expr: !DIExpression())
!1583 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_47", scope: !1413, file: !1584, line: 1914, type: !1585, isLocal: false, isDefinition: true, align: 16)
!1584 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1585 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 128, elements: !1586)
!1586 = !{!1587}
!1587 = !DISubrange(count: 8)
!1588 = !DIGlobalVariableExpression(var: !1589, expr: !DIExpression())
!1589 = distinct !DIGlobalVariable(name: "__device_dts_ord_47", scope: !1413, file: !1584, line: 1914, type: !1458, isLocal: false, isDefinition: true, align: 32)
!1590 = !DIGlobalVariableExpression(var: !1591, expr: !DIExpression())
!1591 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_47", scope: !1413, file: !1584, line: 1914, type: !1592, isLocal: true, isDefinition: true, align: 32)
!1592 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1593)
!1593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !1594)
!1594 = !{!1595, !1596}
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1593, file: !132, line: 60, baseType: !1477, size: 32)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1593, file: !132, line: 65, baseType: !1457, size: 32, offset: 32)
!1597 = !DIGlobalVariableExpression(var: !1598, expr: !DIExpression())
!1598 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_44", scope: !1413, file: !1584, line: 1914, type: !1585, isLocal: false, isDefinition: true, align: 16)
!1599 = !DIGlobalVariableExpression(var: !1600, expr: !DIExpression())
!1600 = distinct !DIGlobalVariable(name: "__device_dts_ord_44", scope: !1413, file: !1584, line: 1914, type: !1458, isLocal: false, isDefinition: true, align: 32)
!1601 = !DIGlobalVariableExpression(var: !1602, expr: !DIExpression())
!1602 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_44", scope: !1413, file: !1584, line: 1914, type: !1592, isLocal: true, isDefinition: true, align: 32)
!1603 = !DIGlobalVariableExpression(var: !1604, expr: !DIExpression())
!1604 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_50", scope: !1413, file: !1584, line: 1914, type: !1585, isLocal: false, isDefinition: true, align: 16)
!1605 = !DIGlobalVariableExpression(var: !1606, expr: !DIExpression())
!1606 = distinct !DIGlobalVariable(name: "__device_dts_ord_50", scope: !1413, file: !1584, line: 1914, type: !1458, isLocal: false, isDefinition: true, align: 32)
!1607 = !DIGlobalVariableExpression(var: !1608, expr: !DIExpression())
!1608 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_50", scope: !1413, file: !1584, line: 1914, type: !1592, isLocal: true, isDefinition: true, align: 32)
!1609 = !DIGlobalVariableExpression(var: !1610, expr: !DIExpression())
!1610 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_47", scope: !1413, file: !1584, line: 1914, type: !1466, isLocal: true, isDefinition: true, align: 8)
!1611 = !DIGlobalVariableExpression(var: !1612, expr: !DIExpression())
!1612 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_44", scope: !1413, file: !1584, line: 1914, type: !1466, isLocal: true, isDefinition: true, align: 8)
!1613 = !DIGlobalVariableExpression(var: !1614, expr: !DIExpression())
!1614 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_50", scope: !1413, file: !1584, line: 1914, type: !1466, isLocal: true, isDefinition: true, align: 8)
!1615 = !DIGlobalVariableExpression(var: !1616, expr: !DIExpression())
!1616 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1413, file: !1584, line: 1914, type: !1617, isLocal: true, isDefinition: true)
!1617 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1618, size: 64, elements: !504)
!1618 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1619)
!1619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !845, line: 343, size: 64, elements: !1620)
!1620 = !{!1621, !1622}
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1619, file: !845, line: 344, baseType: !121, size: 32)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1619, file: !845, line: 345, baseType: !121, size: 32, offset: 32)
!1623 = !DIGlobalVariableExpression(var: !1624, expr: !DIExpression())
!1624 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_47", scope: !1413, file: !1584, line: 1914, type: !1625, isLocal: true, isDefinition: true)
!1625 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1626)
!1626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1627, line: 60, size: 64, elements: !1628)
!1627 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1628 = !{!1629, !1645}
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1626, file: !1627, line: 69, baseType: !1630, size: 32)
!1630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1631, size: 32)
!1631 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1632)
!1632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1627, line: 50, size: 64, elements: !1633)
!1633 = !{!1634, !1643, !1644}
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1632, file: !1627, line: 52, baseType: !1635, size: 32)
!1635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1636, size: 32)
!1636 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1637)
!1637 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1638, line: 37, baseType: !1639)
!1638 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1638, line: 32, size: 64, elements: !1640)
!1640 = !{!1641, !1642}
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1639, file: !1638, line: 34, baseType: !121, size: 32)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1639, file: !1638, line: 36, baseType: !121, size: 32, offset: 32)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1632, file: !1627, line: 54, baseType: !154, size: 8, offset: 32)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1632, file: !1627, line: 56, baseType: !154, size: 8, offset: 40)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1626, file: !1627, line: 71, baseType: !154, size: 8, offset: 32)
!1646 = !DIGlobalVariableExpression(var: !1647, expr: !DIExpression())
!1647 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_47", scope: !1413, file: !1584, line: 1914, type: !1648, isLocal: true, isDefinition: true)
!1648 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1631, size: 64, elements: !504)
!1649 = !DIGlobalVariableExpression(var: !1650, expr: !DIExpression())
!1650 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_47", scope: !1413, file: !1584, line: 1914, type: !1651, isLocal: true, isDefinition: true)
!1651 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1636, size: 128, elements: !363)
!1652 = !DIGlobalVariableExpression(var: !1653, expr: !DIExpression())
!1653 = distinct !DIGlobalVariable(name: "__isr_uart_stm32_isr_irq_0", scope: !1654, file: !1584, line: 1914, type: !1657, isLocal: true, isDefinition: true, align: 32)
!1654 = distinct !DISubprogram(name: "uart_stm32_irq_config_func_0", scope: !1584, file: !1584, line: 1914, type: !1508, scopeLine: 1914, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !1655)
!1655 = !{!1656}
!1656 = !DILocalVariable(name: "dev", arg: 1, scope: !1654, file: !1584, line: 1914, type: !1457)
!1657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !1658)
!1658 = !{!1659, !1660, !1661, !1662}
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1657, file: !10, line: 55, baseType: !724, size: 32)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1657, file: !10, line: 57, baseType: !724, size: 32, offset: 32)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1657, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1657, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1663 = !DIGlobalVariableExpression(var: !1664, expr: !DIExpression())
!1664 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1413, file: !1584, line: 1539, type: !1450, isLocal: true, isDefinition: true)
!1665 = !DIGlobalVariableExpression(var: !1666, expr: !DIExpression())
!1666 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1413, file: !1584, line: 1914, type: !1667, isLocal: true, isDefinition: true)
!1667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1668, line: 74, size: 128, elements: !1669)
!1668 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1669 = !{!1670, !1671, !1672, !1673}
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1667, file: !1668, line: 76, baseType: !121, size: 32)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1667, file: !1668, line: 78, baseType: !1457, size: 32, offset: 32)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "user_cb", scope: !1667, file: !1668, line: 80, baseType: !1524, size: 32, offset: 64)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !1667, file: !1668, line: 81, baseType: !102, size: 32, offset: 96)
!1674 = !DIGlobalVariableExpression(var: !1675, expr: !DIExpression())
!1675 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_1", scope: !1413, file: !1584, line: 1914, type: !1676, isLocal: true, isDefinition: true)
!1676 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1677)
!1677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1668, line: 22, size: 256, elements: !1678)
!1678 = !{!1679, !1680, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1691}
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1677, file: !1668, line: 24, baseType: !1528, size: 32)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1677, file: !1668, line: 26, baseType: !1681, size: 32, offset: 32)
!1681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1618, size: 32)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1677, file: !1668, line: 28, baseType: !204, size: 32, offset: 64)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1677, file: !1668, line: 30, baseType: !157, size: 8, offset: 96)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1677, file: !1668, line: 32, baseType: !103, size: 32, offset: 128)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1677, file: !1668, line: 34, baseType: !157, size: 8, offset: 160)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1677, file: !1668, line: 36, baseType: !157, size: 8, offset: 168)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1677, file: !1668, line: 38, baseType: !157, size: 8, offset: 176)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1677, file: !1668, line: 40, baseType: !157, size: 8, offset: 184)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1677, file: !1668, line: 41, baseType: !1690, size: 32, offset: 192)
!1690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1625, size: 32)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "irq_config_func", scope: !1677, file: !1668, line: 44, baseType: !1692, size: 32, offset: 224)
!1692 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_config_func_t", file: !209, line: 150, baseType: !1507)
!1693 = !DIGlobalVariableExpression(var: !1694, expr: !DIExpression())
!1694 = distinct !DIGlobalVariable(name: "pclken_1", scope: !1413, file: !1584, line: 1914, type: !1617, isLocal: true, isDefinition: true)
!1695 = !DIGlobalVariableExpression(var: !1696, expr: !DIExpression())
!1696 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_44", scope: !1413, file: !1584, line: 1914, type: !1625, isLocal: true, isDefinition: true)
!1697 = !DIGlobalVariableExpression(var: !1698, expr: !DIExpression())
!1698 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_44", scope: !1413, file: !1584, line: 1914, type: !1648, isLocal: true, isDefinition: true)
!1699 = !DIGlobalVariableExpression(var: !1700, expr: !DIExpression())
!1700 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_44", scope: !1413, file: !1584, line: 1914, type: !1651, isLocal: true, isDefinition: true)
!1701 = !DIGlobalVariableExpression(var: !1702, expr: !DIExpression())
!1702 = distinct !DIGlobalVariable(name: "__isr_uart_stm32_isr_irq_1", scope: !1703, file: !1584, line: 1914, type: !1657, isLocal: true, isDefinition: true, align: 32)
!1703 = distinct !DISubprogram(name: "uart_stm32_irq_config_func_1", scope: !1584, file: !1584, line: 1914, type: !1508, scopeLine: 1914, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !1704)
!1704 = !{!1705}
!1705 = !DILocalVariable(name: "dev", arg: 1, scope: !1703, file: !1584, line: 1914, type: !1457)
!1706 = !DIGlobalVariableExpression(var: !1707, expr: !DIExpression())
!1707 = distinct !DIGlobalVariable(name: "uart_stm32_data_1", scope: !1413, file: !1584, line: 1914, type: !1667, isLocal: true, isDefinition: true)
!1708 = !DIGlobalVariableExpression(var: !1709, expr: !DIExpression())
!1709 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_2", scope: !1413, file: !1584, line: 1914, type: !1676, isLocal: true, isDefinition: true)
!1710 = !DIGlobalVariableExpression(var: !1711, expr: !DIExpression())
!1711 = distinct !DIGlobalVariable(name: "pclken_2", scope: !1413, file: !1584, line: 1914, type: !1617, isLocal: true, isDefinition: true)
!1712 = !DIGlobalVariableExpression(var: !1713, expr: !DIExpression())
!1713 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_50", scope: !1413, file: !1584, line: 1914, type: !1625, isLocal: true, isDefinition: true)
!1714 = !DIGlobalVariableExpression(var: !1715, expr: !DIExpression())
!1715 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_50", scope: !1413, file: !1584, line: 1914, type: !1648, isLocal: true, isDefinition: true)
!1716 = !DIGlobalVariableExpression(var: !1717, expr: !DIExpression())
!1717 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_50", scope: !1413, file: !1584, line: 1914, type: !1651, isLocal: true, isDefinition: true)
!1718 = !DIGlobalVariableExpression(var: !1719, expr: !DIExpression())
!1719 = distinct !DIGlobalVariable(name: "__isr_uart_stm32_isr_irq_2", scope: !1720, file: !1584, line: 1914, type: !1657, isLocal: true, isDefinition: true, align: 32)
!1720 = distinct !DISubprogram(name: "uart_stm32_irq_config_func_2", scope: !1584, file: !1584, line: 1914, type: !1508, scopeLine: 1914, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !1721)
!1721 = !{!1722}
!1722 = !DILocalVariable(name: "dev", arg: 1, scope: !1720, file: !1584, line: 1914, type: !1457)
!1723 = !DIGlobalVariableExpression(var: !1724, expr: !DIExpression())
!1724 = distinct !DIGlobalVariable(name: "uart_stm32_data_2", scope: !1413, file: !1584, line: 1914, type: !1667, isLocal: true, isDefinition: true)
!1725 = !DIGlobalVariableExpression(var: !1726, expr: !DIExpression())
!1726 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1727, file: !1805, line: 65, type: !120, isLocal: true, isDefinition: true)
!1727 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1728, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1729, retainedTypes: !1730, globals: !1802, splitDebugInlining: false, nameTableKind: None)
!1728 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/getline")
!1729 = !{!584}
!1730 = !{!200, !1731, !724, !154, !121, !1739, !1770}
!1731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1732, size: 32)
!1732 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !515, line: 770, baseType: !1733)
!1733 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 764, size: 128, elements: !1734)
!1734 = !{!1735, !1736, !1737, !1738}
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1733, file: !515, line: 766, baseType: !120, size: 32)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1733, file: !515, line: 767, baseType: !120, size: 32, offset: 32)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1733, file: !515, line: 768, baseType: !120, size: 32, offset: 64)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1733, file: !515, line: 769, baseType: !519, size: 32, offset: 96)
!1739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1740, size: 32)
!1740 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !515, line: 426, baseType: !1741)
!1741 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 411, size: 28704, elements: !1742)
!1742 = !{!1743, !1745, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1760, !1765, !1769}
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1741, file: !515, line: 413, baseType: !1744, size: 256)
!1744 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 256, elements: !1586)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1741, file: !515, line: 414, baseType: !1746, size: 768, offset: 256)
!1746 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 768, elements: !1747)
!1747 = !{!1748}
!1748 = !DISubrange(count: 24)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1741, file: !515, line: 415, baseType: !1744, size: 256, offset: 1024)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1741, file: !515, line: 416, baseType: !1746, size: 768, offset: 1280)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1741, file: !515, line: 417, baseType: !1744, size: 256, offset: 2048)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1741, file: !515, line: 418, baseType: !1746, size: 768, offset: 2304)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1741, file: !515, line: 419, baseType: !1744, size: 256, offset: 3072)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1741, file: !515, line: 420, baseType: !1746, size: 768, offset: 3328)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1741, file: !515, line: 421, baseType: !1744, size: 256, offset: 4096)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1741, file: !515, line: 422, baseType: !1757, size: 1792, offset: 4352)
!1757 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 1792, elements: !1758)
!1758 = !{!1759}
!1759 = !DISubrange(count: 56)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1741, file: !515, line: 423, baseType: !1761, size: 1920, offset: 6144)
!1761 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1762, size: 1920, elements: !1763)
!1762 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !154)
!1763 = !{!1764}
!1764 = !DISubrange(count: 240)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1741, file: !515, line: 424, baseType: !1766, size: 20608, offset: 8064)
!1766 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 20608, elements: !1767)
!1767 = !{!1768}
!1768 = !DISubrange(count: 644)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1741, file: !515, line: 425, baseType: !120, size: 32, offset: 28672)
!1770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1771, size: 32)
!1771 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !515, line: 468, baseType: !1772)
!1772 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 445, size: 1120, elements: !1773)
!1773 = !{!1774, !1775, !1776, !1777, !1778, !1779, !1780, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1793, !1794, !1795, !1797, !1799, !1801}
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1772, file: !515, line: 447, baseType: !519, size: 32)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1772, file: !515, line: 448, baseType: !120, size: 32, offset: 32)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1772, file: !515, line: 449, baseType: !120, size: 32, offset: 64)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1772, file: !515, line: 450, baseType: !120, size: 32, offset: 96)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1772, file: !515, line: 451, baseType: !120, size: 32, offset: 128)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1772, file: !515, line: 452, baseType: !120, size: 32, offset: 160)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1772, file: !515, line: 453, baseType: !1781, size: 96, offset: 192)
!1781 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1762, size: 96, elements: !1782)
!1782 = !{!1783}
!1783 = !DISubrange(count: 12)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1772, file: !515, line: 454, baseType: !120, size: 32, offset: 288)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1772, file: !515, line: 455, baseType: !120, size: 32, offset: 320)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1772, file: !515, line: 456, baseType: !120, size: 32, offset: 352)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1772, file: !515, line: 457, baseType: !120, size: 32, offset: 384)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1772, file: !515, line: 458, baseType: !120, size: 32, offset: 416)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1772, file: !515, line: 459, baseType: !120, size: 32, offset: 448)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1772, file: !515, line: 460, baseType: !120, size: 32, offset: 480)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1772, file: !515, line: 461, baseType: !1792, size: 64, offset: 512)
!1792 = !DICompositeType(tag: DW_TAG_array_type, baseType: !519, size: 64, elements: !363)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1772, file: !515, line: 462, baseType: !519, size: 32, offset: 576)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1772, file: !515, line: 463, baseType: !519, size: 32, offset: 608)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1772, file: !515, line: 464, baseType: !1796, size: 128, offset: 640)
!1796 = !DICompositeType(tag: DW_TAG_array_type, baseType: !519, size: 128, elements: !666)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1772, file: !515, line: 465, baseType: !1798, size: 160, offset: 768)
!1798 = !DICompositeType(tag: DW_TAG_array_type, baseType: !519, size: 160, elements: !1301)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1772, file: !515, line: 466, baseType: !1800, size: 160, offset: 928)
!1800 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 160, elements: !1301)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1772, file: !515, line: 467, baseType: !120, size: 32, offset: 1088)
!1802 = !{!1803, !1829, !1832, !1834, !1836, !1725}
!1803 = !DIGlobalVariableExpression(var: !1804, expr: !DIExpression())
!1804 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1727, file: !1805, line: 285, type: !1806, isLocal: true, isDefinition: true, align: 32)
!1805 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1806 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1807)
!1807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !1808)
!1808 = !{!1809, !1828}
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1807, file: !132, line: 60, baseType: !1810, size: 32)
!1810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1811, size: 32)
!1811 = !DISubroutineType(types: !1812)
!1812 = !{!103, !1813}
!1813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1814, size: 32)
!1814 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1815)
!1815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1816)
!1816 = !{!1817, !1818, !1819, !1820, !1826, !1827}
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1815, file: !141, line: 380, baseType: !144, size: 32)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1815, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1815, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1815, file: !141, line: 386, baseType: !1821, size: 32, offset: 96)
!1821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1822, size: 32)
!1822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1823)
!1823 = !{!1824, !1825}
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1822, file: !141, line: 359, baseType: !154, size: 8)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1822, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1815, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1815, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1807, file: !132, line: 65, baseType: !1813, size: 32, offset: 32)
!1829 = !DIGlobalVariableExpression(var: !1830, expr: !DIExpression())
!1830 = distinct !DIGlobalVariable(name: "lock", scope: !1727, file: !1805, line: 34, type: !1831, isLocal: true, isDefinition: true)
!1831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!1832 = !DIGlobalVariableExpression(var: !1833, expr: !DIExpression())
!1833 = distinct !DIGlobalVariable(name: "last_load", scope: !1727, file: !1805, line: 36, type: !121, isLocal: true, isDefinition: true)
!1834 = !DIGlobalVariableExpression(var: !1835, expr: !DIExpression())
!1835 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1727, file: !1805, line: 48, type: !121, isLocal: true, isDefinition: true)
!1836 = !DIGlobalVariableExpression(var: !1837, expr: !DIExpression())
!1837 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1727, file: !1805, line: 54, type: !121, isLocal: true, isDefinition: true)
!1838 = !DIGlobalVariableExpression(var: !1839, expr: !DIExpression())
!1839 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1840, file: !1922, line: 22, type: !1924, isLocal: true, isDefinition: true)
!1840 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1841, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1842, retainedTypes: !1843, globals: !1919, splitDebugInlining: false, nameTableKind: None)
!1841 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/getline")
!1842 = !{!1110, !1116}
!1843 = !{!1844, !1908, !1913, !1163, !1116, !1110, !1918, !102}
!1844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1845, size: 32)
!1845 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1846)
!1846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1111, line: 523, size: 288, elements: !1847)
!1847 = !{!1848, !1867, !1871, !1875, !1879, !1880, !1881, !1885, !1904}
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1846, file: !1111, line: 524, baseType: !1849, size: 32)
!1849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1850, size: 32)
!1850 = !DISubroutineType(types: !1851)
!1851 = !{!103, !1852, !1151, !1152}
!1852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1853, size: 32)
!1853 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1854)
!1854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1855)
!1855 = !{!1856, !1857, !1858, !1859, !1865, !1866}
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1854, file: !141, line: 380, baseType: !144, size: 32)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1854, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1854, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1854, file: !141, line: 386, baseType: !1860, size: 32, offset: 96)
!1860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1861, size: 32)
!1861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1862)
!1862 = !{!1863, !1864}
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1861, file: !141, line: 359, baseType: !154, size: 8)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1861, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1854, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1854, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1846, file: !1111, line: 530, baseType: !1868, size: 32, offset: 32)
!1868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1869, size: 32)
!1869 = !DISubroutineType(types: !1870)
!1870 = !{!103, !1852, !1157}
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1846, file: !1111, line: 532, baseType: !1872, size: 32, offset: 64)
!1872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1873, size: 32)
!1873 = !DISubroutineType(types: !1874)
!1874 = !{!103, !1852, !1163, !1158}
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1846, file: !1111, line: 535, baseType: !1876, size: 32, offset: 96)
!1876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1877, size: 32)
!1877 = !DISubroutineType(types: !1878)
!1878 = !{!103, !1852, !1163}
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1846, file: !1111, line: 537, baseType: !1876, size: 32, offset: 128)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1846, file: !1111, line: 539, baseType: !1876, size: 32, offset: 160)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1846, file: !1111, line: 541, baseType: !1882, size: 32, offset: 192)
!1882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1883, size: 32)
!1883 = !DISubroutineType(types: !1884)
!1884 = !{!103, !1852, !1151, !1110, !1116}
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1846, file: !1111, line: 544, baseType: !1886, size: 32, offset: 224)
!1886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1887, size: 32)
!1887 = !DISubroutineType(types: !1888)
!1888 = !{!103, !1852, !1889, !157}
!1889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1890, size: 32)
!1890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1111, line: 478, size: 96, elements: !1891)
!1891 = !{!1892, !1898, !1903}
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1890, file: !1111, line: 482, baseType: !1893, size: 32)
!1893 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1183, line: 33, baseType: !1894)
!1894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1183, line: 29, size: 32, elements: !1895)
!1895 = !{!1896}
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1894, file: !1183, line: 30, baseType: !1897, size: 32)
!1897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1894, size: 32)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1890, file: !1111, line: 485, baseType: !1899, size: 32, offset: 32)
!1899 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1111, line: 464, baseType: !1900)
!1900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1901, size: 32)
!1901 = !DISubroutineType(types: !1902)
!1902 = !{null, !1852, !1889, !1163}
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1890, file: !1111, line: 493, baseType: !1163, size: 32, offset: 64)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1846, file: !1111, line: 547, baseType: !1905, size: 32, offset: 256)
!1905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1906, size: 32)
!1906 = !DISubroutineType(types: !1907)
!1907 = !{!121, !1852}
!1908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1909, size: 32)
!1909 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1910)
!1910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1111, line: 428, size: 32, elements: !1911)
!1911 = !{!1912}
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1910, file: !1111, line: 434, baseType: !1163, size: 32)
!1913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1914, size: 32)
!1914 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1915)
!1915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1111, line: 441, size: 32, elements: !1916)
!1916 = !{!1917}
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1915, file: !1111, line: 447, baseType: !1163, size: 32)
!1918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1915, size: 32)
!1919 = !{!1920, !1838}
!1920 = !DIGlobalVariableExpression(var: !1921, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1921 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1840, file: !1922, line: 37, type: !1923, isLocal: true, isDefinition: true)
!1922 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1923 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !204)
!1924 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1925, size: 352, elements: !1926)
!1925 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1852)
!1926 = !{!1927}
!1927 = !DISubrange(count: 11)
!1928 = !DIGlobalVariableExpression(var: !1929, expr: !DIExpression())
!1929 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1930, file: !1972, line: 139, type: !1978, isLocal: false, isDefinition: true)
!1930 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1931, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1932, globals: !1969, splitDebugInlining: false, nameTableKind: None)
!1931 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/getline")
!1932 = !{!1933}
!1933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1934, size: 32)
!1934 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 369, baseType: !1935)
!1935 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 335, size: 1152, elements: !1936)
!1936 = !{!1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966, !1967, !1968}
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1935, file: !116, line: 337, baseType: !120, size: 32)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1935, file: !116, line: 338, baseType: !120, size: 32, offset: 32)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1935, file: !116, line: 339, baseType: !120, size: 32, offset: 64)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1935, file: !116, line: 340, baseType: !120, size: 32, offset: 96)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1935, file: !116, line: 341, baseType: !120, size: 32, offset: 128)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1935, file: !116, line: 342, baseType: !120, size: 32, offset: 160)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1935, file: !116, line: 343, baseType: !120, size: 32, offset: 192)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1935, file: !116, line: 344, baseType: !121, size: 32, offset: 224)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1935, file: !116, line: 345, baseType: !120, size: 32, offset: 256)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1935, file: !116, line: 346, baseType: !120, size: 32, offset: 288)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1935, file: !116, line: 347, baseType: !820, size: 64, offset: 320)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1935, file: !116, line: 348, baseType: !120, size: 32, offset: 384)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1935, file: !116, line: 349, baseType: !120, size: 32, offset: 416)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1935, file: !116, line: 350, baseType: !120, size: 32, offset: 448)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1935, file: !116, line: 351, baseType: !121, size: 32, offset: 480)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1935, file: !116, line: 352, baseType: !120, size: 32, offset: 512)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1935, file: !116, line: 353, baseType: !120, size: 32, offset: 544)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1935, file: !116, line: 354, baseType: !820, size: 64, offset: 576)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1935, file: !116, line: 355, baseType: !120, size: 32, offset: 640)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1935, file: !116, line: 356, baseType: !120, size: 32, offset: 672)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1935, file: !116, line: 357, baseType: !120, size: 32, offset: 704)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1935, file: !116, line: 358, baseType: !121, size: 32, offset: 736)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1935, file: !116, line: 359, baseType: !120, size: 32, offset: 768)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1935, file: !116, line: 360, baseType: !120, size: 32, offset: 800)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1935, file: !116, line: 361, baseType: !820, size: 64, offset: 832)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1935, file: !116, line: 362, baseType: !120, size: 32, offset: 896)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1935, file: !116, line: 363, baseType: !120, size: 32, offset: 928)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1935, file: !116, line: 364, baseType: !820, size: 64, offset: 960)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1935, file: !116, line: 365, baseType: !120, size: 32, offset: 1024)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1935, file: !116, line: 366, baseType: !120, size: 32, offset: 1056)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !1935, file: !116, line: 367, baseType: !841, size: 32, offset: 1088)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1935, file: !116, line: 368, baseType: !120, size: 32, offset: 1120)
!1969 = !{!1970, !1973, !1928}
!1970 = !DIGlobalVariableExpression(var: !1971, expr: !DIExpression())
!1971 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1930, file: !1972, line: 137, type: !121, isLocal: false, isDefinition: true)
!1972 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1973 = !DIGlobalVariableExpression(var: !1974, expr: !DIExpression())
!1974 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1930, file: !1972, line: 138, type: !1975, isLocal: false, isDefinition: true)
!1975 = !DICompositeType(tag: DW_TAG_array_type, baseType: !262, size: 128, elements: !1976)
!1976 = !{!1977}
!1977 = !DISubrange(count: 16)
!1978 = !DICompositeType(tag: DW_TAG_array_type, baseType: !262, size: 64, elements: !1586)
!1979 = !DIGlobalVariableExpression(var: !1980, expr: !DIExpression())
!1980 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1981, file: !1984, line: 23, type: !268, isLocal: false, isDefinition: true)
!1981 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1982, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !1983, splitDebugInlining: false, nameTableKind: None)
!1982 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/getline")
!1983 = !{!1979}
!1984 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1985 = !DIGlobalVariableExpression(var: !1986, expr: !DIExpression())
!1986 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1987, file: !1991, line: 86, type: !2238, isLocal: false, isDefinition: true, align: 512)
!1987 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1988, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1989, retainedTypes: !1998, globals: !2071, splitDebugInlining: false, nameTableKind: None)
!1988 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/getline")
!1989 = !{!1990, !30, !584}
!1990 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1991, line: 63, baseType: !32, size: 32, elements: !1992)
!1991 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1992 = !{!1993, !1994, !1995, !1996, !1997}
!1993 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1994 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1995 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1996 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1997 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1998 = !{!204, !102, !103, !1999, !344, !121, !2029, !724, !154, !2054}
!1999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2000, size: 32)
!2000 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2001)
!2001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !2002, line: 51, size: 64, elements: !2003)
!2002 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2003 = !{!2004, !2024}
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !2001, file: !2002, line: 52, baseType: !2005, size: 32)
!2005 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !2002, line: 38, baseType: !2006)
!2006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2007, size: 32)
!2007 = !DISubroutineType(types: !2008)
!2008 = !{!103, !2009, !267, !429}
!2009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2010, size: 32)
!2010 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2011)
!2011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !2012)
!2012 = !{!2013, !2014, !2015, !2016, !2022, !2023}
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2011, file: !141, line: 380, baseType: !144, size: 32)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2011, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2011, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2011, file: !141, line: 386, baseType: !2017, size: 32, offset: 96)
!2017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2018, size: 32)
!2018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !2019)
!2019 = !{!2020, !2021}
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2018, file: !141, line: 359, baseType: !154, size: 8)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2018, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2011, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2011, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !2001, file: !2002, line: 53, baseType: !2025, size: 32, offset: 32)
!2025 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !2002, line: 47, baseType: !2026)
!2026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2027, size: 32)
!2027 = !DISubroutineType(types: !2028)
!2028 = !{!103, !2009, !267, !429, !121}
!2029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2030, size: 32)
!2030 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !515, line: 468, baseType: !2031)
!2031 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 445, size: 1120, elements: !2032)
!2032 = !{!2033, !2034, !2035, !2036, !2037, !2038, !2039, !2040, !2041, !2042, !2043, !2044, !2045, !2046, !2047, !2048, !2049, !2050, !2051, !2052, !2053}
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2031, file: !515, line: 447, baseType: !519, size: 32)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2031, file: !515, line: 448, baseType: !120, size: 32, offset: 32)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2031, file: !515, line: 449, baseType: !120, size: 32, offset: 64)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2031, file: !515, line: 450, baseType: !120, size: 32, offset: 96)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2031, file: !515, line: 451, baseType: !120, size: 32, offset: 128)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2031, file: !515, line: 452, baseType: !120, size: 32, offset: 160)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2031, file: !515, line: 453, baseType: !1781, size: 96, offset: 192)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2031, file: !515, line: 454, baseType: !120, size: 32, offset: 288)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2031, file: !515, line: 455, baseType: !120, size: 32, offset: 320)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2031, file: !515, line: 456, baseType: !120, size: 32, offset: 352)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2031, file: !515, line: 457, baseType: !120, size: 32, offset: 384)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2031, file: !515, line: 458, baseType: !120, size: 32, offset: 416)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2031, file: !515, line: 459, baseType: !120, size: 32, offset: 448)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2031, file: !515, line: 460, baseType: !120, size: 32, offset: 480)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2031, file: !515, line: 461, baseType: !1792, size: 64, offset: 512)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2031, file: !515, line: 462, baseType: !519, size: 32, offset: 576)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2031, file: !515, line: 463, baseType: !519, size: 32, offset: 608)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2031, file: !515, line: 464, baseType: !1796, size: 128, offset: 640)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2031, file: !515, line: 465, baseType: !1798, size: 160, offset: 768)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2031, file: !515, line: 466, baseType: !1800, size: 160, offset: 928)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2031, file: !515, line: 467, baseType: !120, size: 32, offset: 1088)
!2054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2055, size: 32)
!2055 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !515, line: 426, baseType: !2056)
!2056 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 411, size: 28704, elements: !2057)
!2057 = !{!2058, !2059, !2060, !2061, !2062, !2063, !2064, !2065, !2066, !2067, !2068, !2069, !2070}
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2056, file: !515, line: 413, baseType: !1744, size: 256)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2056, file: !515, line: 414, baseType: !1746, size: 768, offset: 256)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2056, file: !515, line: 415, baseType: !1744, size: 256, offset: 1024)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2056, file: !515, line: 416, baseType: !1746, size: 768, offset: 1280)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2056, file: !515, line: 417, baseType: !1744, size: 256, offset: 2048)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2056, file: !515, line: 418, baseType: !1746, size: 768, offset: 2304)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2056, file: !515, line: 419, baseType: !1744, size: 256, offset: 3072)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2056, file: !515, line: 420, baseType: !1746, size: 768, offset: 3328)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2056, file: !515, line: 421, baseType: !1744, size: 256, offset: 4096)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2056, file: !515, line: 422, baseType: !1757, size: 1792, offset: 4352)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2056, file: !515, line: 423, baseType: !1761, size: 1920, offset: 6144)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2056, file: !515, line: 424, baseType: !1766, size: 20608, offset: 8064)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2056, file: !515, line: 425, baseType: !120, size: 32, offset: 28672)
!2071 = !{!2072, !2194, !2203, !2205, !1985, !2208, !2210, !2215}
!2072 = !DIGlobalVariableExpression(var: !2073, expr: !DIExpression())
!2073 = distinct !DIGlobalVariable(name: "_kernel", scope: !1987, file: !1991, line: 40, type: !2074, isLocal: false, isDefinition: true)
!2074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !320, line: 158, size: 288, elements: !2075)
!2075 = !{!2076, !2189}
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2074, file: !320, line: 159, baseType: !2077, size: 192)
!2077 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2078, size: 192, elements: !504)
!2078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !320, line: 100, size: 192, elements: !2079)
!2079 = !{!2080, !2081, !2082, !2183, !2184, !2185, !2186}
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2078, file: !320, line: 102, baseType: !121, size: 32)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2078, file: !320, line: 105, baseType: !344, size: 32, offset: 32)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2078, file: !320, line: 108, baseType: !2083, size: 32, offset: 64)
!2083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2084, size: 32)
!2084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !379, line: 245, size: 1024, elements: !2085)
!2085 = !{!2086, !2144, !2156, !2157, !2158, !2159, !2165, !2178}
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2084, file: !379, line: 247, baseType: !2087, size: 384)
!2087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !379, line: 57, size: 384, elements: !2088)
!2088 = !{!2089, !2113, !2120, !2121, !2122, !2131, !2132, !2133}
!2089 = !DIDerivedType(tag: DW_TAG_member, scope: !2087, file: !379, line: 60, baseType: !2090, size: 64)
!2090 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2087, file: !379, line: 60, size: 64, elements: !2091)
!2091 = !{!2092, !2107}
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2090, file: !379, line: 61, baseType: !2093, size: 64)
!2093 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !325, line: 49, baseType: !2094)
!2094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !2095)
!2095 = !{!2096, !2102}
!2096 = !DIDerivedType(tag: DW_TAG_member, scope: !2094, file: !325, line: 38, baseType: !2097, size: 32)
!2097 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2094, file: !325, line: 38, size: 32, elements: !2098)
!2098 = !{!2099, !2101}
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2097, file: !325, line: 39, baseType: !2100, size: 32)
!2100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2094, size: 32)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2097, file: !325, line: 40, baseType: !2100, size: 32)
!2102 = !DIDerivedType(tag: DW_TAG_member, scope: !2094, file: !325, line: 42, baseType: !2103, size: 32, offset: 32)
!2103 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2094, file: !325, line: 42, size: 32, elements: !2104)
!2104 = !{!2105, !2106}
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2103, file: !325, line: 43, baseType: !2100, size: 32)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2103, file: !325, line: 44, baseType: !2100, size: 32)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2090, file: !379, line: 62, baseType: !2108, size: 64)
!2108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !404, line: 49, size: 64, elements: !2109)
!2109 = !{!2110}
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2108, file: !404, line: 50, baseType: !2111, size: 64)
!2111 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2112, size: 64, elements: !363)
!2112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2108, size: 32)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2087, file: !379, line: 68, baseType: !2114, size: 32, offset: 64)
!2114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2115, size: 32)
!2115 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !2116)
!2116 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !2117)
!2117 = !{!2118}
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2116, file: !320, line: 232, baseType: !2119, size: 64)
!2119 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !2094)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2087, file: !379, line: 71, baseType: !154, size: 8, offset: 96)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2087, file: !379, line: 74, baseType: !154, size: 8, offset: 104)
!2122 = !DIDerivedType(tag: DW_TAG_member, scope: !2087, file: !379, line: 90, baseType: !2123, size: 16, offset: 112)
!2123 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2087, file: !379, line: 90, size: 16, elements: !2124)
!2124 = !{!2125, !2130}
!2125 = !DIDerivedType(tag: DW_TAG_member, scope: !2123, file: !379, line: 91, baseType: !2126, size: 16)
!2126 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2123, file: !379, line: 91, size: 16, elements: !2127)
!2127 = !{!2128, !2129}
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2126, file: !379, line: 96, baseType: !425, size: 8)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2126, file: !379, line: 97, baseType: !154, size: 8, offset: 8)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2123, file: !379, line: 100, baseType: !429, size: 16)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2087, file: !379, line: 107, baseType: !121, size: 32, offset: 128)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2087, file: !379, line: 127, baseType: !102, size: 32, offset: 160)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2087, file: !379, line: 131, baseType: !2134, size: 192, offset: 192)
!2134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !320, line: 244, size: 192, elements: !2135)
!2135 = !{!2136, !2137, !2143}
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2134, file: !320, line: 245, baseType: !2093, size: 64)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2134, file: !320, line: 246, baseType: !2138, size: 32, offset: 64)
!2138 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !320, line: 242, baseType: !2139)
!2139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2140, size: 32)
!2140 = !DISubroutineType(types: !2141)
!2141 = !{null, !2142}
!2142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2134, size: 32)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2134, file: !320, line: 249, baseType: !202, size: 64, offset: 128)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2084, file: !379, line: 250, baseType: !2145, size: 288, offset: 384)
!2145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !446, line: 25, size: 288, elements: !2146)
!2146 = !{!2147, !2148, !2149, !2150, !2151, !2152, !2153, !2154, !2155}
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2145, file: !446, line: 26, baseType: !121, size: 32)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2145, file: !446, line: 27, baseType: !121, size: 32, offset: 32)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2145, file: !446, line: 28, baseType: !121, size: 32, offset: 64)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2145, file: !446, line: 29, baseType: !121, size: 32, offset: 96)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2145, file: !446, line: 30, baseType: !121, size: 32, offset: 128)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2145, file: !446, line: 31, baseType: !121, size: 32, offset: 160)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2145, file: !446, line: 32, baseType: !121, size: 32, offset: 192)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2145, file: !446, line: 33, baseType: !121, size: 32, offset: 224)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2145, file: !446, line: 34, baseType: !121, size: 32, offset: 256)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2084, file: !379, line: 253, baseType: !102, size: 32, offset: 672)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2084, file: !379, line: 256, baseType: !2115, size: 64, offset: 704)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2084, file: !379, line: 294, baseType: !103, size: 32, offset: 768)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2084, file: !379, line: 300, baseType: !2160, size: 96, offset: 800)
!2160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !379, line: 149, size: 96, elements: !2161)
!2161 = !{!2162, !2163, !2164}
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2160, file: !379, line: 153, baseType: !22, size: 32)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2160, file: !379, line: 162, baseType: !204, size: 32, offset: 32)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2160, file: !379, line: 168, baseType: !204, size: 32, offset: 64)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2084, file: !379, line: 325, baseType: !2166, size: 32, offset: 896)
!2166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2167, size: 32)
!2167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !296, line: 5073, size: 160, elements: !2168)
!2168 = !{!2169, !2175, !2176}
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2167, file: !296, line: 5074, baseType: !2170, size: 96)
!2170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !2171)
!2171 = !{!2172, !2173, !2174}
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2170, file: !472, line: 57, baseType: !475, size: 32)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2170, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2170, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2167, file: !296, line: 5075, baseType: !2115, size: 64, offset: 96)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2167, file: !296, line: 5076, baseType: !2177, offset: 160)
!2177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2084, file: !379, line: 343, baseType: !2179, size: 64, offset: 928)
!2179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !446, line: 60, size: 64, elements: !2180)
!2180 = !{!2181, !2182}
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2179, file: !446, line: 63, baseType: !121, size: 32)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2179, file: !446, line: 66, baseType: !121, size: 32, offset: 32)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2078, file: !320, line: 111, baseType: !2083, size: 32, offset: 96)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2078, file: !320, line: 124, baseType: !103, size: 32, offset: 128)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2078, file: !320, line: 127, baseType: !154, size: 8, offset: 160)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2078, file: !320, line: 153, baseType: !2187, offset: 168)
!2187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2188, line: 33, elements: !317)
!2188 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2074, file: !320, line: 170, baseType: !2190, size: 96, offset: 192)
!2190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !320, line: 83, size: 96, elements: !2191)
!2191 = !{!2192, !2193}
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2190, file: !320, line: 86, baseType: !2083, size: 32)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2190, file: !320, line: 90, baseType: !2119, size: 64, offset: 32)
!2194 = !DIGlobalVariableExpression(var: !2195, expr: !DIExpression())
!2195 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1987, file: !1991, line: 43, type: !2196, isLocal: false, isDefinition: true, align: 512)
!2196 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2197, size: 8704, elements: !2201)
!2197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2198, line: 47, size: 8, elements: !2199)
!2198 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2199 = !{!2200}
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2197, file: !2198, line: 48, baseType: !146, size: 8)
!2201 = !{!2202}
!2202 = !DISubrange(count: 1088)
!2203 = !DIGlobalVariableExpression(var: !2204, expr: !DIExpression())
!2204 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1987, file: !1991, line: 44, type: !2084, isLocal: false, isDefinition: true)
!2205 = !DIGlobalVariableExpression(var: !2206, expr: !DIExpression())
!2206 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1987, file: !1991, line: 48, type: !2207, isLocal: false, isDefinition: true)
!2207 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2084, size: 1024, elements: !504)
!2208 = !DIGlobalVariableExpression(var: !2209, expr: !DIExpression())
!2209 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1987, file: !1991, line: 217, type: !157, isLocal: false, isDefinition: true)
!2210 = !DIGlobalVariableExpression(var: !2211, expr: !DIExpression())
!2211 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1987, file: !1991, line: 50, type: !2212, isLocal: true, isDefinition: true, align: 512)
!2212 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2197, size: 3072, elements: !2213)
!2213 = !{!505, !2214}
!2214 = !DISubrange(count: 384)
!2215 = !DIGlobalVariableExpression(var: !2216, expr: !DIExpression())
!2216 = distinct !DIGlobalVariable(name: "levels", scope: !2217, file: !1991, line: 232, type: !2237, isLocal: true, isDefinition: true)
!2217 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1991, file: !1991, line: 230, type: !2218, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1987, retainedNodes: !2220)
!2218 = !DISubroutineType(types: !2219)
!2219 = !{null, !1990}
!2220 = !{!2221, !2222, !2232, !2236}
!2221 = !DILocalVariable(name: "level", arg: 1, scope: !2217, file: !1991, line: 230, type: !1990)
!2222 = !DILocalVariable(name: "entry", scope: !2217, file: !1991, line: 244, type: !2223)
!2223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2224, size: 32)
!2224 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2225)
!2225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !2226)
!2226 = !{!2227, !2231}
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2225, file: !132, line: 60, baseType: !2228, size: 32)
!2228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2229, size: 32)
!2229 = !DISubroutineType(types: !2230)
!2230 = !{!103, !2009}
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2225, file: !132, line: 65, baseType: !2009, size: 32, offset: 32)
!2232 = !DILocalVariable(name: "dev", scope: !2233, file: !1991, line: 247, type: !2009)
!2233 = distinct !DILexicalBlock(scope: !2234, file: !1991, line: 246, column: 64)
!2234 = distinct !DILexicalBlock(scope: !2235, file: !1991, line: 246, column: 2)
!2235 = distinct !DILexicalBlock(scope: !2217, file: !1991, line: 246, column: 2)
!2236 = !DILocalVariable(name: "rc", scope: !2233, file: !1991, line: 248, type: !103)
!2237 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2223, size: 192, elements: !1310)
!2238 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2197, size: 16896, elements: !2239)
!2239 = !{!505, !2240}
!2240 = !DISubrange(count: 2112)
!2241 = !DIGlobalVariableExpression(var: !2242, expr: !DIExpression())
!2242 = distinct !DIGlobalVariable(name: "states_str", scope: !2243, file: !2244, line: 276, type: !2365, isLocal: true, isDefinition: true)
!2243 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2244, file: !2244, line: 271, type: !2245, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !2356)
!2244 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2245 = !DISubroutineType(types: !2246)
!2246 = !{!144, !2247, !344, !204}
!2247 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !379, line: 347, baseType: !2248)
!2248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2249, size: 32)
!2249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !379, line: 245, size: 1024, elements: !2250)
!2250 = !{!2251, !2309, !2321, !2322, !2323, !2324, !2330, !2343}
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2249, file: !379, line: 247, baseType: !2252, size: 384)
!2252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !379, line: 57, size: 384, elements: !2253)
!2253 = !{!2254, !2278, !2285, !2286, !2287, !2296, !2297, !2298}
!2254 = !DIDerivedType(tag: DW_TAG_member, scope: !2252, file: !379, line: 60, baseType: !2255, size: 64)
!2255 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2252, file: !379, line: 60, size: 64, elements: !2256)
!2256 = !{!2257, !2272}
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2255, file: !379, line: 61, baseType: !2258, size: 64)
!2258 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !325, line: 49, baseType: !2259)
!2259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !2260)
!2260 = !{!2261, !2267}
!2261 = !DIDerivedType(tag: DW_TAG_member, scope: !2259, file: !325, line: 38, baseType: !2262, size: 32)
!2262 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2259, file: !325, line: 38, size: 32, elements: !2263)
!2263 = !{!2264, !2266}
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2262, file: !325, line: 39, baseType: !2265, size: 32)
!2265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2259, size: 32)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2262, file: !325, line: 40, baseType: !2265, size: 32)
!2267 = !DIDerivedType(tag: DW_TAG_member, scope: !2259, file: !325, line: 42, baseType: !2268, size: 32, offset: 32)
!2268 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2259, file: !325, line: 42, size: 32, elements: !2269)
!2269 = !{!2270, !2271}
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2268, file: !325, line: 43, baseType: !2265, size: 32)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2268, file: !325, line: 44, baseType: !2265, size: 32)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2255, file: !379, line: 62, baseType: !2273, size: 64)
!2273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !404, line: 49, size: 64, elements: !2274)
!2274 = !{!2275}
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2273, file: !404, line: 50, baseType: !2276, size: 64)
!2276 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2277, size: 64, elements: !363)
!2277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2273, size: 32)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2252, file: !379, line: 68, baseType: !2279, size: 32, offset: 64)
!2279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2280, size: 32)
!2280 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !2281)
!2281 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !2282)
!2282 = !{!2283}
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2281, file: !320, line: 232, baseType: !2284, size: 64)
!2284 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !2259)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2252, file: !379, line: 71, baseType: !154, size: 8, offset: 96)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2252, file: !379, line: 74, baseType: !154, size: 8, offset: 104)
!2287 = !DIDerivedType(tag: DW_TAG_member, scope: !2252, file: !379, line: 90, baseType: !2288, size: 16, offset: 112)
!2288 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2252, file: !379, line: 90, size: 16, elements: !2289)
!2289 = !{!2290, !2295}
!2290 = !DIDerivedType(tag: DW_TAG_member, scope: !2288, file: !379, line: 91, baseType: !2291, size: 16)
!2291 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2288, file: !379, line: 91, size: 16, elements: !2292)
!2292 = !{!2293, !2294}
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2291, file: !379, line: 96, baseType: !425, size: 8)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2291, file: !379, line: 97, baseType: !154, size: 8, offset: 8)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2288, file: !379, line: 100, baseType: !429, size: 16)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2252, file: !379, line: 107, baseType: !121, size: 32, offset: 128)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2252, file: !379, line: 127, baseType: !102, size: 32, offset: 160)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2252, file: !379, line: 131, baseType: !2299, size: 192, offset: 192)
!2299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !320, line: 244, size: 192, elements: !2300)
!2300 = !{!2301, !2302, !2308}
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2299, file: !320, line: 245, baseType: !2258, size: 64)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2299, file: !320, line: 246, baseType: !2303, size: 32, offset: 64)
!2303 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !320, line: 242, baseType: !2304)
!2304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2305, size: 32)
!2305 = !DISubroutineType(types: !2306)
!2306 = !{null, !2307}
!2307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2299, size: 32)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2299, file: !320, line: 249, baseType: !202, size: 64, offset: 128)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2249, file: !379, line: 250, baseType: !2310, size: 288, offset: 384)
!2310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !446, line: 25, size: 288, elements: !2311)
!2311 = !{!2312, !2313, !2314, !2315, !2316, !2317, !2318, !2319, !2320}
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2310, file: !446, line: 26, baseType: !121, size: 32)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2310, file: !446, line: 27, baseType: !121, size: 32, offset: 32)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2310, file: !446, line: 28, baseType: !121, size: 32, offset: 64)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2310, file: !446, line: 29, baseType: !121, size: 32, offset: 96)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2310, file: !446, line: 30, baseType: !121, size: 32, offset: 128)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2310, file: !446, line: 31, baseType: !121, size: 32, offset: 160)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2310, file: !446, line: 32, baseType: !121, size: 32, offset: 192)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2310, file: !446, line: 33, baseType: !121, size: 32, offset: 224)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2310, file: !446, line: 34, baseType: !121, size: 32, offset: 256)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2249, file: !379, line: 253, baseType: !102, size: 32, offset: 672)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2249, file: !379, line: 256, baseType: !2280, size: 64, offset: 704)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2249, file: !379, line: 294, baseType: !103, size: 32, offset: 768)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2249, file: !379, line: 300, baseType: !2325, size: 96, offset: 800)
!2325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !379, line: 149, size: 96, elements: !2326)
!2326 = !{!2327, !2328, !2329}
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2325, file: !379, line: 153, baseType: !22, size: 32)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2325, file: !379, line: 162, baseType: !204, size: 32, offset: 32)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2325, file: !379, line: 168, baseType: !204, size: 32, offset: 64)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2249, file: !379, line: 325, baseType: !2331, size: 32, offset: 896)
!2331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2332, size: 32)
!2332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !296, line: 5073, size: 160, elements: !2333)
!2333 = !{!2334, !2340, !2341}
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2332, file: !296, line: 5074, baseType: !2335, size: 96)
!2335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !2336)
!2336 = !{!2337, !2338, !2339}
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2335, file: !472, line: 57, baseType: !475, size: 32)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2335, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2335, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2332, file: !296, line: 5075, baseType: !2280, size: 64, offset: 96)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2332, file: !296, line: 5076, baseType: !2342, offset: 160)
!2342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2249, file: !379, line: 343, baseType: !2344, size: 64, offset: 928)
!2344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !446, line: 60, size: 64, elements: !2345)
!2345 = !{!2346, !2347}
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2344, file: !446, line: 63, baseType: !121, size: 32)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2344, file: !446, line: 66, baseType: !121, size: 32, offset: 32)
!2348 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2349, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2350, globals: !2352, splitDebugInlining: false, nameTableKind: None)
!2349 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/getline")
!2350 = !{!102, !144, !200, !154, !103, !2351, !24, !204, !344, !22, !121, !1578}
!2351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2258, size: 32)
!2352 = !{!2241, !2353}
!2353 = !DIGlobalVariableExpression(var: !2354, expr: !DIExpression())
!2354 = distinct !DIGlobalVariable(name: "states_sz", scope: !2243, file: !2244, line: 279, type: !2355, isLocal: true, isDefinition: true)
!2355 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1923, size: 256, elements: !1586)
!2356 = !{!2357, !2358, !2359, !2360, !2361, !2362, !2363}
!2357 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2243, file: !2244, line: 271, type: !2247)
!2358 = !DILocalVariable(name: "buf", arg: 2, scope: !2243, file: !2244, line: 271, type: !344)
!2359 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2243, file: !2244, line: 271, type: !204)
!2360 = !DILocalVariable(name: "off", scope: !2243, file: !2244, line: 273, type: !204)
!2361 = !DILocalVariable(name: "bit", scope: !2243, file: !2244, line: 274, type: !154)
!2362 = !DILocalVariable(name: "thread_state", scope: !2243, file: !2244, line: 275, type: !154)
!2363 = !DILocalVariable(name: "index", scope: !2364, file: !2244, line: 293, type: !154)
!2364 = distinct !DILexicalBlock(scope: !2243, file: !2244, line: 293, column: 2)
!2365 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 256, elements: !1586)
!2366 = !DIGlobalVariableExpression(var: !2367, expr: !DIExpression())
!2367 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2368, file: !2476, line: 56, type: !2465, isLocal: false, isDefinition: true)
!2368 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2369, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2370, globals: !2473, splitDebugInlining: false, nameTableKind: None)
!2369 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/getline")
!2370 = !{!2371, !344, !102, !2471, !267, !200, !724, !103, !121, !1578, !2472}
!2371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2372, size: 32)
!2372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !379, line: 245, size: 1024, elements: !2373)
!2373 = !{!2374, !2432, !2444, !2445, !2446, !2447, !2453, !2466}
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2372, file: !379, line: 247, baseType: !2375, size: 384)
!2375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !379, line: 57, size: 384, elements: !2376)
!2376 = !{!2377, !2401, !2408, !2409, !2410, !2419, !2420, !2421}
!2377 = !DIDerivedType(tag: DW_TAG_member, scope: !2375, file: !379, line: 60, baseType: !2378, size: 64)
!2378 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2375, file: !379, line: 60, size: 64, elements: !2379)
!2379 = !{!2380, !2395}
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2378, file: !379, line: 61, baseType: !2381, size: 64)
!2381 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !325, line: 49, baseType: !2382)
!2382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !2383)
!2383 = !{!2384, !2390}
!2384 = !DIDerivedType(tag: DW_TAG_member, scope: !2382, file: !325, line: 38, baseType: !2385, size: 32)
!2385 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2382, file: !325, line: 38, size: 32, elements: !2386)
!2386 = !{!2387, !2389}
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2385, file: !325, line: 39, baseType: !2388, size: 32)
!2388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2382, size: 32)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2385, file: !325, line: 40, baseType: !2388, size: 32)
!2390 = !DIDerivedType(tag: DW_TAG_member, scope: !2382, file: !325, line: 42, baseType: !2391, size: 32, offset: 32)
!2391 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2382, file: !325, line: 42, size: 32, elements: !2392)
!2392 = !{!2393, !2394}
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2391, file: !325, line: 43, baseType: !2388, size: 32)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2391, file: !325, line: 44, baseType: !2388, size: 32)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2378, file: !379, line: 62, baseType: !2396, size: 64)
!2396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !404, line: 49, size: 64, elements: !2397)
!2397 = !{!2398}
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2396, file: !404, line: 50, baseType: !2399, size: 64)
!2399 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2400, size: 64, elements: !363)
!2400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2396, size: 32)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2375, file: !379, line: 68, baseType: !2402, size: 32, offset: 64)
!2402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2403, size: 32)
!2403 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !2404)
!2404 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !2405)
!2405 = !{!2406}
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2404, file: !320, line: 232, baseType: !2407, size: 64)
!2407 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !2382)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2375, file: !379, line: 71, baseType: !154, size: 8, offset: 96)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2375, file: !379, line: 74, baseType: !154, size: 8, offset: 104)
!2410 = !DIDerivedType(tag: DW_TAG_member, scope: !2375, file: !379, line: 90, baseType: !2411, size: 16, offset: 112)
!2411 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2375, file: !379, line: 90, size: 16, elements: !2412)
!2412 = !{!2413, !2418}
!2413 = !DIDerivedType(tag: DW_TAG_member, scope: !2411, file: !379, line: 91, baseType: !2414, size: 16)
!2414 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2411, file: !379, line: 91, size: 16, elements: !2415)
!2415 = !{!2416, !2417}
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2414, file: !379, line: 96, baseType: !425, size: 8)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2414, file: !379, line: 97, baseType: !154, size: 8, offset: 8)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2411, file: !379, line: 100, baseType: !429, size: 16)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2375, file: !379, line: 107, baseType: !121, size: 32, offset: 128)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2375, file: !379, line: 127, baseType: !102, size: 32, offset: 160)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2375, file: !379, line: 131, baseType: !2422, size: 192, offset: 192)
!2422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !320, line: 244, size: 192, elements: !2423)
!2423 = !{!2424, !2425, !2431}
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2422, file: !320, line: 245, baseType: !2381, size: 64)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2422, file: !320, line: 246, baseType: !2426, size: 32, offset: 64)
!2426 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !320, line: 242, baseType: !2427)
!2427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2428, size: 32)
!2428 = !DISubroutineType(types: !2429)
!2429 = !{null, !2430}
!2430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2422, size: 32)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2422, file: !320, line: 249, baseType: !202, size: 64, offset: 128)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2372, file: !379, line: 250, baseType: !2433, size: 288, offset: 384)
!2433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !446, line: 25, size: 288, elements: !2434)
!2434 = !{!2435, !2436, !2437, !2438, !2439, !2440, !2441, !2442, !2443}
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2433, file: !446, line: 26, baseType: !121, size: 32)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2433, file: !446, line: 27, baseType: !121, size: 32, offset: 32)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2433, file: !446, line: 28, baseType: !121, size: 32, offset: 64)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2433, file: !446, line: 29, baseType: !121, size: 32, offset: 96)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2433, file: !446, line: 30, baseType: !121, size: 32, offset: 128)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2433, file: !446, line: 31, baseType: !121, size: 32, offset: 160)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2433, file: !446, line: 32, baseType: !121, size: 32, offset: 192)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2433, file: !446, line: 33, baseType: !121, size: 32, offset: 224)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2433, file: !446, line: 34, baseType: !121, size: 32, offset: 256)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2372, file: !379, line: 253, baseType: !102, size: 32, offset: 672)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2372, file: !379, line: 256, baseType: !2403, size: 64, offset: 704)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2372, file: !379, line: 294, baseType: !103, size: 32, offset: 768)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2372, file: !379, line: 300, baseType: !2448, size: 96, offset: 800)
!2448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !379, line: 149, size: 96, elements: !2449)
!2449 = !{!2450, !2451, !2452}
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2448, file: !379, line: 153, baseType: !22, size: 32)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2448, file: !379, line: 162, baseType: !204, size: 32, offset: 32)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2448, file: !379, line: 168, baseType: !204, size: 32, offset: 64)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2372, file: !379, line: 325, baseType: !2454, size: 32, offset: 896)
!2454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2455, size: 32)
!2455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !296, line: 5073, size: 160, elements: !2456)
!2456 = !{!2457, !2463, !2464}
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2455, file: !296, line: 5074, baseType: !2458, size: 96)
!2458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !2459)
!2459 = !{!2460, !2461, !2462}
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2458, file: !472, line: 57, baseType: !475, size: 32)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2458, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2458, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2455, file: !296, line: 5075, baseType: !2403, size: 64, offset: 96)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2455, file: !296, line: 5076, baseType: !2465, offset: 160)
!2465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2372, file: !379, line: 343, baseType: !2467, size: 64, offset: 928)
!2467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !446, line: 60, size: 64, elements: !2468)
!2468 = !{!2469, !2470}
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2467, file: !446, line: 63, baseType: !121, size: 32)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2467, file: !446, line: 66, baseType: !121, size: 32, offset: 32)
!2471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2400, size: 32)
!2472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2381, size: 32)
!2473 = !{!2366, !2474, !2477, !2479}
!2474 = !DIGlobalVariableExpression(var: !2475, expr: !DIExpression())
!2475 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2368, file: !2476, line: 404, type: !103, isLocal: true, isDefinition: true)
!2476 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2477 = !DIGlobalVariableExpression(var: !2478, expr: !DIExpression())
!2478 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2368, file: !2476, line: 405, type: !103, isLocal: true, isDefinition: true)
!2479 = !DIGlobalVariableExpression(var: !2480, expr: !DIExpression())
!2480 = distinct !DIGlobalVariable(name: "pending_current", scope: !2368, file: !2476, line: 425, type: !2371, isLocal: true, isDefinition: true)
!2481 = !DIGlobalVariableExpression(var: !2482, expr: !DIExpression())
!2482 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2483, file: !2513, line: 15, type: !1578, isLocal: true, isDefinition: true)
!2483 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2484, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2485, globals: !2510, splitDebugInlining: false, nameTableKind: None)
!2484 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/getline")
!2485 = !{!200, !102, !724, !121, !1578, !103, !2486, !344, !202}
!2486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2487, size: 32)
!2487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !320, line: 244, size: 192, elements: !2488)
!2488 = !{!2489, !2504, !2509}
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2487, file: !320, line: 245, baseType: !2490, size: 64)
!2490 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !325, line: 49, baseType: !2491)
!2491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !2492)
!2492 = !{!2493, !2499}
!2493 = !DIDerivedType(tag: DW_TAG_member, scope: !2491, file: !325, line: 38, baseType: !2494, size: 32)
!2494 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2491, file: !325, line: 38, size: 32, elements: !2495)
!2495 = !{!2496, !2498}
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2494, file: !325, line: 39, baseType: !2497, size: 32)
!2497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2491, size: 32)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2494, file: !325, line: 40, baseType: !2497, size: 32)
!2499 = !DIDerivedType(tag: DW_TAG_member, scope: !2491, file: !325, line: 42, baseType: !2500, size: 32, offset: 32)
!2500 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2491, file: !325, line: 42, size: 32, elements: !2501)
!2501 = !{!2502, !2503}
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2500, file: !325, line: 43, baseType: !2497, size: 32)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2500, file: !325, line: 44, baseType: !2497, size: 32)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2487, file: !320, line: 246, baseType: !2505, size: 32, offset: 64)
!2505 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !320, line: 242, baseType: !2506)
!2506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2507, size: 32)
!2507 = !DISubroutineType(types: !2508)
!2508 = !{null, !2486}
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2487, file: !320, line: 249, baseType: !202, size: 64, offset: 128)
!2510 = !{!2481, !2511, !2515, !2517}
!2511 = !DIGlobalVariableExpression(var: !2512, expr: !DIExpression())
!2512 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2483, file: !2513, line: 19, type: !2514, isLocal: true, isDefinition: true)
!2513 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!2515 = !DIGlobalVariableExpression(var: !2516, expr: !DIExpression())
!2516 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2483, file: !2513, line: 25, type: !103, isLocal: true, isDefinition: true)
!2517 = !DIGlobalVariableExpression(var: !2518, expr: !DIExpression())
!2518 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2483, file: !2513, line: 17, type: !2519, isLocal: true, isDefinition: true)
!2519 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !2491)
!2520 = !DIGlobalVariableExpression(var: !2521, expr: !DIExpression())
!2521 = distinct !DIGlobalVariable(name: "__init_statics_init_pre", scope: !2522, file: !2541, line: 55, type: !2542, isLocal: true, isDefinition: true, align: 32)
!2522 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2523, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2524, globals: !2540, splitDebugInlining: false, nameTableKind: None)
!2523 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/getline")
!2524 = !{!102, !200, !103, !2525}
!2525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2526, size: 32)
!2526 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !325, line: 49, baseType: !2527)
!2527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !2528)
!2528 = !{!2529, !2535}
!2529 = !DIDerivedType(tag: DW_TAG_member, scope: !2527, file: !325, line: 38, baseType: !2530, size: 32)
!2530 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2527, file: !325, line: 38, size: 32, elements: !2531)
!2531 = !{!2532, !2534}
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2530, file: !325, line: 39, baseType: !2533, size: 32)
!2533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2527, size: 32)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2530, file: !325, line: 40, baseType: !2533, size: 32)
!2535 = !DIDerivedType(tag: DW_TAG_member, scope: !2527, file: !325, line: 42, baseType: !2536, size: 32, offset: 32)
!2536 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2527, file: !325, line: 42, size: 32, elements: !2537)
!2537 = !{!2538, !2539}
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2536, file: !325, line: 43, baseType: !2533, size: 32)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2536, file: !325, line: 44, baseType: !2533, size: 32)
!2540 = !{!2520}
!2541 = !DIFile(filename: "zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2542 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2543)
!2543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !2544)
!2544 = !{!2545, !2552}
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2543, file: !132, line: 60, baseType: !2546, size: 32)
!2546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2547, size: 32)
!2547 = !DISubroutineType(types: !2548)
!2548 = !{!103, !2549}
!2549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2550, size: 32)
!2550 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2551)
!2551 = !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !132, line: 48, flags: DIFlagFwdDecl)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2543, file: !132, line: 65, baseType: !2549, size: 32, offset: 32)
!2553 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2554, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2554 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/getline")
!2555 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2556, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2556 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/console/getline/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/getline")
!2557 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2558, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2558 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/getline")
!2559 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2560, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2561, retainedTypes: !2569, splitDebugInlining: false, nameTableKind: None)
!2560 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/getline")
!2561 = !{!30, !2562}
!2562 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chunk_fields", file: !2563, line: 54, baseType: !32, size: 32, elements: !2564)
!2563 = !DIFile(filename: "zephyr/lib/os/heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2564 = !{!2565, !2566, !2567, !2568}
!2565 = !DIEnumerator(name: "LEFT_SIZE", value: 0)
!2566 = !DIEnumerator(name: "SIZE_AND_USED", value: 1)
!2567 = !DIEnumerator(name: "FREE_PREV", value: 2)
!2568 = !DIEnumerator(name: "FREE_NEXT", value: 3)
!2569 = !{!102, !204, !267, !24, !2570, !22, !2576, !103, !849, !2591}
!2570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2571, size: 32)
!2571 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !2563, line: 58, baseType: !2572)
!2572 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2563, line: 58, size: 64, elements: !2573)
!2573 = !{!2574}
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !2572, file: !2563, line: 58, baseType: !2575, size: 64)
!2575 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, size: 64, elements: !1586)
!2576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2577, size: 32)
!2577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !2563, line: 68, size: 128, elements: !2578)
!2578 = !{!2579, !2582, !2583, !2584}
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !2577, file: !2563, line: 69, baseType: !2580, size: 64)
!2580 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2581, size: 64, elements: !363)
!2581 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunkid_t", file: !2563, line: 61, baseType: !121)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !2577, file: !2563, line: 70, baseType: !2581, size: 32, offset: 64)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !2577, file: !2563, line: 71, baseType: !121, size: 32, offset: 96)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !2577, file: !2563, line: 77, baseType: !2585, offset: 128)
!2585 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2586, elements: !2589)
!2586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !2563, line: 64, size: 32, elements: !2587)
!2587 = !{!2588}
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2586, file: !2563, line: 65, baseType: !2581, size: 32)
!2589 = !{!2590}
!2590 = !DISubrange(count: 0)
!2591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !429, size: 32)
!2592 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2593, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2594, retainedTypes: !2614, splitDebugInlining: false, nameTableKind: None)
!2593 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/getline")
!2594 = !{!2595, !2603}
!2595 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2596, line: 69, baseType: !32, size: 32, elements: !2597)
!2596 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2597 = !{!2598, !2599, !2600, !2601, !2602}
!2598 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2599 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2600 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2601 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2602 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2603 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2596, line: 56, baseType: !32, size: 32, elements: !2604)
!2604 = !{!2605, !2606, !2607, !2608, !2609, !2610, !2611, !2612, !2613}
!2605 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2606 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2607 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2608 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2609 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2610 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2611 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2612 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2613 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2614 = !{!103, !2595, !2603, !2615, !426, !164, !2617, !2618, !155, !430, !144, !204, !102, !22, !32, !2620, !2621, !2622, !354, !2623, !203, !2624, !2616, !2625, !2626, !2627, !2628}
!2615 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2596, line: 31, baseType: !2616)
!2616 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !203)
!2617 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !205, line: 329, baseType: !32)
!2618 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2596, line: 32, baseType: !2619)
!2619 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !1579)
!2620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!2621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !426, size: 32)
!2622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !164, size: 32)
!2623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !354, size: 32)
!2624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !203, size: 32)
!2625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2616, size: 32)
!2626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !204, size: 32)
!2627 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !205, line: 145, baseType: !103)
!2628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2627, size: 32)
!2629 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2630, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2630 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/getline/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/getline")
!2631 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2632, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2633, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2632 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/getline")
!2633 = !{!2634, !30}
!2634 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2635, line: 27, baseType: !32, size: 32, elements: !2636)
!2635 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2636 = !{!2637, !2638, !2639, !2640, !2641}
!2637 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2638 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2639 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2640 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2641 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2642 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2643, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2644, retainedTypes: !2645, splitDebugInlining: false, nameTableKind: None)
!2643 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/getline")
!2644 = !{!584, !2634, !30}
!2645 = !{!750, !2646, !102, !103, !724, !121, !154, !2663}
!2646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2647, size: 32)
!2647 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !515, line: 426, baseType: !2648)
!2648 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 411, size: 28704, elements: !2649)
!2649 = !{!2650, !2651, !2652, !2653, !2654, !2655, !2656, !2657, !2658, !2659, !2660, !2661, !2662}
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2648, file: !515, line: 413, baseType: !1744, size: 256)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2648, file: !515, line: 414, baseType: !1746, size: 768, offset: 256)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2648, file: !515, line: 415, baseType: !1744, size: 256, offset: 1024)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2648, file: !515, line: 416, baseType: !1746, size: 768, offset: 1280)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2648, file: !515, line: 417, baseType: !1744, size: 256, offset: 2048)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2648, file: !515, line: 418, baseType: !1746, size: 768, offset: 2304)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2648, file: !515, line: 419, baseType: !1744, size: 256, offset: 3072)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2648, file: !515, line: 420, baseType: !1746, size: 768, offset: 3328)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2648, file: !515, line: 421, baseType: !1744, size: 256, offset: 4096)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2648, file: !515, line: 422, baseType: !1757, size: 1792, offset: 4352)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2648, file: !515, line: 423, baseType: !1761, size: 1920, offset: 6144)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2648, file: !515, line: 424, baseType: !1766, size: 20608, offset: 8064)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2648, file: !515, line: 425, baseType: !120, size: 32, offset: 28672)
!2663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2664, size: 32)
!2664 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !515, line: 468, baseType: !2665)
!2665 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 445, size: 1120, elements: !2666)
!2666 = !{!2667, !2668, !2669, !2670, !2671, !2672, !2673, !2674, !2675, !2676, !2677, !2678, !2679, !2680, !2681, !2682, !2683, !2684, !2685, !2686, !2687}
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2665, file: !515, line: 447, baseType: !519, size: 32)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2665, file: !515, line: 448, baseType: !120, size: 32, offset: 32)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2665, file: !515, line: 449, baseType: !120, size: 32, offset: 64)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2665, file: !515, line: 450, baseType: !120, size: 32, offset: 96)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2665, file: !515, line: 451, baseType: !120, size: 32, offset: 128)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2665, file: !515, line: 452, baseType: !120, size: 32, offset: 160)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2665, file: !515, line: 453, baseType: !1781, size: 96, offset: 192)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2665, file: !515, line: 454, baseType: !120, size: 32, offset: 288)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2665, file: !515, line: 455, baseType: !120, size: 32, offset: 320)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2665, file: !515, line: 456, baseType: !120, size: 32, offset: 352)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2665, file: !515, line: 457, baseType: !120, size: 32, offset: 384)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2665, file: !515, line: 458, baseType: !120, size: 32, offset: 416)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2665, file: !515, line: 459, baseType: !120, size: 32, offset: 448)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2665, file: !515, line: 460, baseType: !120, size: 32, offset: 480)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2665, file: !515, line: 461, baseType: !1792, size: 64, offset: 512)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2665, file: !515, line: 462, baseType: !519, size: 32, offset: 576)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2665, file: !515, line: 463, baseType: !519, size: 32, offset: 608)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2665, file: !515, line: 464, baseType: !1796, size: 128, offset: 640)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2665, file: !515, line: 465, baseType: !1798, size: 160, offset: 768)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2665, file: !515, line: 466, baseType: !1800, size: 160, offset: 928)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2665, file: !515, line: 467, baseType: !120, size: 32, offset: 1088)
!2688 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2689, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2689 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/getline")
!2690 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2691, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2692, splitDebugInlining: false, nameTableKind: None)
!2691 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/getline")
!2692 = !{!102, !103, !22, !2693}
!2693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2694, size: 32)
!2694 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !515, line: 468, baseType: !2695)
!2695 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 445, size: 1120, elements: !2696)
!2696 = !{!2697, !2698, !2699, !2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707, !2708, !2709, !2710, !2711, !2712, !2713, !2714, !2715, !2716, !2717}
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2695, file: !515, line: 447, baseType: !519, size: 32)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2695, file: !515, line: 448, baseType: !120, size: 32, offset: 32)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2695, file: !515, line: 449, baseType: !120, size: 32, offset: 64)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2695, file: !515, line: 450, baseType: !120, size: 32, offset: 96)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2695, file: !515, line: 451, baseType: !120, size: 32, offset: 128)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2695, file: !515, line: 452, baseType: !120, size: 32, offset: 160)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2695, file: !515, line: 453, baseType: !1781, size: 96, offset: 192)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2695, file: !515, line: 454, baseType: !120, size: 32, offset: 288)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2695, file: !515, line: 455, baseType: !120, size: 32, offset: 320)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2695, file: !515, line: 456, baseType: !120, size: 32, offset: 352)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2695, file: !515, line: 457, baseType: !120, size: 32, offset: 384)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2695, file: !515, line: 458, baseType: !120, size: 32, offset: 416)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2695, file: !515, line: 459, baseType: !120, size: 32, offset: 448)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2695, file: !515, line: 460, baseType: !120, size: 32, offset: 480)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2695, file: !515, line: 461, baseType: !1792, size: 64, offset: 512)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2695, file: !515, line: 462, baseType: !519, size: 32, offset: 576)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2695, file: !515, line: 463, baseType: !519, size: 32, offset: 608)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2695, file: !515, line: 464, baseType: !1796, size: 128, offset: 640)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2695, file: !515, line: 465, baseType: !1798, size: 160, offset: 768)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2695, file: !515, line: 466, baseType: !1800, size: 160, offset: 928)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2695, file: !515, line: 467, baseType: !120, size: 32, offset: 1088)
!2718 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2719, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2720, splitDebugInlining: false, nameTableKind: None)
!2719 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/getline")
!2720 = !{!2721, !102, !103}
!2721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2722, size: 32)
!2722 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !515, line: 468, baseType: !2723)
!2723 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 445, size: 1120, elements: !2724)
!2724 = !{!2725, !2726, !2727, !2728, !2729, !2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740, !2741, !2742, !2743, !2744, !2745}
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2723, file: !515, line: 447, baseType: !519, size: 32)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2723, file: !515, line: 448, baseType: !120, size: 32, offset: 32)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2723, file: !515, line: 449, baseType: !120, size: 32, offset: 64)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2723, file: !515, line: 450, baseType: !120, size: 32, offset: 96)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2723, file: !515, line: 451, baseType: !120, size: 32, offset: 128)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2723, file: !515, line: 452, baseType: !120, size: 32, offset: 160)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2723, file: !515, line: 453, baseType: !1781, size: 96, offset: 192)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2723, file: !515, line: 454, baseType: !120, size: 32, offset: 288)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2723, file: !515, line: 455, baseType: !120, size: 32, offset: 320)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2723, file: !515, line: 456, baseType: !120, size: 32, offset: 352)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2723, file: !515, line: 457, baseType: !120, size: 32, offset: 384)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2723, file: !515, line: 458, baseType: !120, size: 32, offset: 416)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2723, file: !515, line: 459, baseType: !120, size: 32, offset: 448)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2723, file: !515, line: 460, baseType: !120, size: 32, offset: 480)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2723, file: !515, line: 461, baseType: !1792, size: 64, offset: 512)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2723, file: !515, line: 462, baseType: !519, size: 32, offset: 576)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2723, file: !515, line: 463, baseType: !519, size: 32, offset: 608)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2723, file: !515, line: 464, baseType: !1796, size: 128, offset: 640)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2723, file: !515, line: 465, baseType: !1798, size: 160, offset: 768)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2723, file: !515, line: 466, baseType: !1800, size: 160, offset: 928)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2723, file: !515, line: 467, baseType: !120, size: 32, offset: 1088)
!2746 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2747, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2748, splitDebugInlining: false, nameTableKind: None)
!2747 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/getline")
!2748 = !{!2749, !121, !102, !103}
!2749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2750, size: 32)
!2750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2751, line: 98, size: 256, elements: !2752)
!2751 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2752 = !{!2753, !2758, !2763, !2768, !2773, !2778, !2783, !2788}
!2753 = !DIDerivedType(tag: DW_TAG_member, scope: !2750, file: !2751, line: 99, baseType: !2754, size: 32)
!2754 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2750, file: !2751, line: 99, size: 32, elements: !2755)
!2755 = !{!2756, !2757}
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2754, file: !2751, line: 99, baseType: !121, size: 32)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2754, file: !2751, line: 99, baseType: !121, size: 32)
!2758 = !DIDerivedType(tag: DW_TAG_member, scope: !2750, file: !2751, line: 100, baseType: !2759, size: 32, offset: 32)
!2759 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2750, file: !2751, line: 100, size: 32, elements: !2760)
!2760 = !{!2761, !2762}
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2759, file: !2751, line: 100, baseType: !121, size: 32)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2759, file: !2751, line: 100, baseType: !121, size: 32)
!2763 = !DIDerivedType(tag: DW_TAG_member, scope: !2750, file: !2751, line: 101, baseType: !2764, size: 32, offset: 64)
!2764 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2750, file: !2751, line: 101, size: 32, elements: !2765)
!2765 = !{!2766, !2767}
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2764, file: !2751, line: 101, baseType: !121, size: 32)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2764, file: !2751, line: 101, baseType: !121, size: 32)
!2768 = !DIDerivedType(tag: DW_TAG_member, scope: !2750, file: !2751, line: 102, baseType: !2769, size: 32, offset: 96)
!2769 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2750, file: !2751, line: 102, size: 32, elements: !2770)
!2770 = !{!2771, !2772}
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2769, file: !2751, line: 102, baseType: !121, size: 32)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2769, file: !2751, line: 102, baseType: !121, size: 32)
!2773 = !DIDerivedType(tag: DW_TAG_member, scope: !2750, file: !2751, line: 103, baseType: !2774, size: 32, offset: 128)
!2774 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2750, file: !2751, line: 103, size: 32, elements: !2775)
!2775 = !{!2776, !2777}
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2774, file: !2751, line: 103, baseType: !121, size: 32)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2774, file: !2751, line: 103, baseType: !121, size: 32)
!2778 = !DIDerivedType(tag: DW_TAG_member, scope: !2750, file: !2751, line: 104, baseType: !2779, size: 32, offset: 160)
!2779 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2750, file: !2751, line: 104, size: 32, elements: !2780)
!2780 = !{!2781, !2782}
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2779, file: !2751, line: 104, baseType: !121, size: 32)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2779, file: !2751, line: 104, baseType: !121, size: 32)
!2783 = !DIDerivedType(tag: DW_TAG_member, scope: !2750, file: !2751, line: 105, baseType: !2784, size: 32, offset: 192)
!2784 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2750, file: !2751, line: 105, size: 32, elements: !2785)
!2785 = !{!2786, !2787}
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2784, file: !2751, line: 105, baseType: !121, size: 32)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2784, file: !2751, line: 105, baseType: !121, size: 32)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2750, file: !2751, line: 106, baseType: !121, size: 32, offset: 224)
!2789 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2790, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2633, retainedTypes: !2791, splitDebugInlining: false, nameTableKind: None)
!2790 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/getline")
!2791 = !{!2792, !102, !103, !2817, !2591, !121}
!2792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2793, size: 32)
!2793 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !515, line: 468, baseType: !2794)
!2794 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 445, size: 1120, elements: !2795)
!2795 = !{!2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804, !2805, !2806, !2807, !2808, !2809, !2810, !2811, !2812, !2813, !2814, !2815, !2816}
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2794, file: !515, line: 447, baseType: !519, size: 32)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2794, file: !515, line: 448, baseType: !120, size: 32, offset: 32)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2794, file: !515, line: 449, baseType: !120, size: 32, offset: 64)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2794, file: !515, line: 450, baseType: !120, size: 32, offset: 96)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2794, file: !515, line: 451, baseType: !120, size: 32, offset: 128)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2794, file: !515, line: 452, baseType: !120, size: 32, offset: 160)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2794, file: !515, line: 453, baseType: !1781, size: 96, offset: 192)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2794, file: !515, line: 454, baseType: !120, size: 32, offset: 288)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2794, file: !515, line: 455, baseType: !120, size: 32, offset: 320)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2794, file: !515, line: 456, baseType: !120, size: 32, offset: 352)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2794, file: !515, line: 457, baseType: !120, size: 32, offset: 384)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2794, file: !515, line: 458, baseType: !120, size: 32, offset: 416)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2794, file: !515, line: 459, baseType: !120, size: 32, offset: 448)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2794, file: !515, line: 460, baseType: !120, size: 32, offset: 480)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2794, file: !515, line: 461, baseType: !1792, size: 64, offset: 512)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2794, file: !515, line: 462, baseType: !519, size: 32, offset: 576)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2794, file: !515, line: 463, baseType: !519, size: 32, offset: 608)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2794, file: !515, line: 464, baseType: !1796, size: 128, offset: 640)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2794, file: !515, line: 465, baseType: !1798, size: 160, offset: 768)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2794, file: !515, line: 466, baseType: !1800, size: 160, offset: 928)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2794, file: !515, line: 467, baseType: !120, size: 32, offset: 1088)
!2817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2818, size: 32)
!2818 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2751, line: 141, baseType: !2819)
!2819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2751, line: 97, size: 256, elements: !2820)
!2820 = !{!2821}
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2819, file: !2751, line: 107, baseType: !2822, size: 256)
!2822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2751, line: 98, size: 256, elements: !2823)
!2823 = !{!2824, !2829, !2834, !2839, !2844, !2849, !2854, !2859}
!2824 = !DIDerivedType(tag: DW_TAG_member, scope: !2822, file: !2751, line: 99, baseType: !2825, size: 32)
!2825 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2822, file: !2751, line: 99, size: 32, elements: !2826)
!2826 = !{!2827, !2828}
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2825, file: !2751, line: 99, baseType: !121, size: 32)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2825, file: !2751, line: 99, baseType: !121, size: 32)
!2829 = !DIDerivedType(tag: DW_TAG_member, scope: !2822, file: !2751, line: 100, baseType: !2830, size: 32, offset: 32)
!2830 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2822, file: !2751, line: 100, size: 32, elements: !2831)
!2831 = !{!2832, !2833}
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2830, file: !2751, line: 100, baseType: !121, size: 32)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2830, file: !2751, line: 100, baseType: !121, size: 32)
!2834 = !DIDerivedType(tag: DW_TAG_member, scope: !2822, file: !2751, line: 101, baseType: !2835, size: 32, offset: 64)
!2835 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2822, file: !2751, line: 101, size: 32, elements: !2836)
!2836 = !{!2837, !2838}
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2835, file: !2751, line: 101, baseType: !121, size: 32)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2835, file: !2751, line: 101, baseType: !121, size: 32)
!2839 = !DIDerivedType(tag: DW_TAG_member, scope: !2822, file: !2751, line: 102, baseType: !2840, size: 32, offset: 96)
!2840 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2822, file: !2751, line: 102, size: 32, elements: !2841)
!2841 = !{!2842, !2843}
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2840, file: !2751, line: 102, baseType: !121, size: 32)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2840, file: !2751, line: 102, baseType: !121, size: 32)
!2844 = !DIDerivedType(tag: DW_TAG_member, scope: !2822, file: !2751, line: 103, baseType: !2845, size: 32, offset: 128)
!2845 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2822, file: !2751, line: 103, size: 32, elements: !2846)
!2846 = !{!2847, !2848}
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2845, file: !2751, line: 103, baseType: !121, size: 32)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2845, file: !2751, line: 103, baseType: !121, size: 32)
!2849 = !DIDerivedType(tag: DW_TAG_member, scope: !2822, file: !2751, line: 104, baseType: !2850, size: 32, offset: 160)
!2850 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2822, file: !2751, line: 104, size: 32, elements: !2851)
!2851 = !{!2852, !2853}
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2850, file: !2751, line: 104, baseType: !121, size: 32)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2850, file: !2751, line: 104, baseType: !121, size: 32)
!2854 = !DIDerivedType(tag: DW_TAG_member, scope: !2822, file: !2751, line: 105, baseType: !2855, size: 32, offset: 192)
!2855 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2822, file: !2751, line: 105, size: 32, elements: !2856)
!2856 = !{!2857, !2858}
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2855, file: !2751, line: 105, baseType: !121, size: 32)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2855, file: !2751, line: 105, baseType: !121, size: 32)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2822, file: !2751, line: 106, baseType: !121, size: 32, offset: 224)
!2860 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2861, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1729, retainedTypes: !2862, splitDebugInlining: false, nameTableKind: None)
!2861 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/getline")
!2862 = !{!750, !724, !154, !121, !2863, !2880}
!2863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2864, size: 32)
!2864 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !515, line: 426, baseType: !2865)
!2865 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 411, size: 28704, elements: !2866)
!2866 = !{!2867, !2868, !2869, !2870, !2871, !2872, !2873, !2874, !2875, !2876, !2877, !2878, !2879}
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2865, file: !515, line: 413, baseType: !1744, size: 256)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2865, file: !515, line: 414, baseType: !1746, size: 768, offset: 256)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2865, file: !515, line: 415, baseType: !1744, size: 256, offset: 1024)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2865, file: !515, line: 416, baseType: !1746, size: 768, offset: 1280)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2865, file: !515, line: 417, baseType: !1744, size: 256, offset: 2048)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2865, file: !515, line: 418, baseType: !1746, size: 768, offset: 2304)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2865, file: !515, line: 419, baseType: !1744, size: 256, offset: 3072)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2865, file: !515, line: 420, baseType: !1746, size: 768, offset: 3328)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2865, file: !515, line: 421, baseType: !1744, size: 256, offset: 4096)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2865, file: !515, line: 422, baseType: !1757, size: 1792, offset: 4352)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2865, file: !515, line: 423, baseType: !1761, size: 1920, offset: 6144)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2865, file: !515, line: 424, baseType: !1766, size: 20608, offset: 8064)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2865, file: !515, line: 425, baseType: !120, size: 32, offset: 28672)
!2880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2881, size: 32)
!2881 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !515, line: 468, baseType: !2882)
!2882 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 445, size: 1120, elements: !2883)
!2883 = !{!2884, !2885, !2886, !2887, !2888, !2889, !2890, !2891, !2892, !2893, !2894, !2895, !2896, !2897, !2898, !2899, !2900, !2901, !2902, !2903, !2904}
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2882, file: !515, line: 447, baseType: !519, size: 32)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2882, file: !515, line: 448, baseType: !120, size: 32, offset: 32)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2882, file: !515, line: 449, baseType: !120, size: 32, offset: 64)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2882, file: !515, line: 450, baseType: !120, size: 32, offset: 96)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2882, file: !515, line: 451, baseType: !120, size: 32, offset: 128)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2882, file: !515, line: 452, baseType: !120, size: 32, offset: 160)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2882, file: !515, line: 453, baseType: !1781, size: 96, offset: 192)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2882, file: !515, line: 454, baseType: !120, size: 32, offset: 288)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2882, file: !515, line: 455, baseType: !120, size: 32, offset: 320)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2882, file: !515, line: 456, baseType: !120, size: 32, offset: 352)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2882, file: !515, line: 457, baseType: !120, size: 32, offset: 384)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2882, file: !515, line: 458, baseType: !120, size: 32, offset: 416)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2882, file: !515, line: 459, baseType: !120, size: 32, offset: 448)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2882, file: !515, line: 460, baseType: !120, size: 32, offset: 480)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2882, file: !515, line: 461, baseType: !1792, size: 64, offset: 512)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2882, file: !515, line: 462, baseType: !519, size: 32, offset: 576)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2882, file: !515, line: 463, baseType: !519, size: 32, offset: 608)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2882, file: !515, line: 464, baseType: !1796, size: 128, offset: 640)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2882, file: !515, line: 465, baseType: !1798, size: 160, offset: 768)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2882, file: !515, line: 466, baseType: !1800, size: 160, offset: 928)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2882, file: !515, line: 467, baseType: !120, size: 32, offset: 1088)
!2905 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2906, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2907, splitDebugInlining: false, nameTableKind: None)
!2906 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/getline")
!2907 = !{!2908, !102, !103}
!2908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2909, size: 32)
!2909 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !515, line: 468, baseType: !2910)
!2910 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 445, size: 1120, elements: !2911)
!2911 = !{!2912, !2913, !2914, !2915, !2916, !2917, !2918, !2919, !2920, !2921, !2922, !2923, !2924, !2925, !2926, !2927, !2928, !2929, !2930, !2931, !2932}
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2910, file: !515, line: 447, baseType: !519, size: 32)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2910, file: !515, line: 448, baseType: !120, size: 32, offset: 32)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2910, file: !515, line: 449, baseType: !120, size: 32, offset: 64)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2910, file: !515, line: 450, baseType: !120, size: 32, offset: 96)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2910, file: !515, line: 451, baseType: !120, size: 32, offset: 128)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2910, file: !515, line: 452, baseType: !120, size: 32, offset: 160)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2910, file: !515, line: 453, baseType: !1781, size: 96, offset: 192)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2910, file: !515, line: 454, baseType: !120, size: 32, offset: 288)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2910, file: !515, line: 455, baseType: !120, size: 32, offset: 320)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2910, file: !515, line: 456, baseType: !120, size: 32, offset: 352)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2910, file: !515, line: 457, baseType: !120, size: 32, offset: 384)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2910, file: !515, line: 458, baseType: !120, size: 32, offset: 416)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2910, file: !515, line: 459, baseType: !120, size: 32, offset: 448)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2910, file: !515, line: 460, baseType: !120, size: 32, offset: 480)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2910, file: !515, line: 461, baseType: !1792, size: 64, offset: 512)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2910, file: !515, line: 462, baseType: !519, size: 32, offset: 576)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2910, file: !515, line: 463, baseType: !519, size: 32, offset: 608)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2910, file: !515, line: 464, baseType: !1796, size: 128, offset: 640)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2910, file: !515, line: 465, baseType: !1798, size: 160, offset: 768)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2910, file: !515, line: 466, baseType: !1800, size: 160, offset: 928)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2910, file: !515, line: 467, baseType: !120, size: 32, offset: 1088)
!2933 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2934, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2935, splitDebugInlining: false, nameTableKind: None)
!2934 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/getline")
!2935 = !{!146, !344, !204, !230, !2936, !155, !102}
!2936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2937, size: 32)
!2937 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !155)
!2938 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2939, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2940, splitDebugInlining: false, nameTableKind: None)
!2939 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/getline")
!2940 = !{!2941}
!2941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2942, size: 32)
!2942 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 369, baseType: !2943)
!2943 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 335, size: 1152, elements: !2944)
!2944 = !{!2945, !2946, !2947, !2948, !2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956, !2957, !2958, !2959, !2960, !2961, !2962, !2963, !2964, !2965, !2966, !2967, !2968, !2969, !2970, !2971, !2972, !2973, !2974, !2975, !2976}
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2943, file: !116, line: 337, baseType: !120, size: 32)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2943, file: !116, line: 338, baseType: !120, size: 32, offset: 32)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2943, file: !116, line: 339, baseType: !120, size: 32, offset: 64)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2943, file: !116, line: 340, baseType: !120, size: 32, offset: 96)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2943, file: !116, line: 341, baseType: !120, size: 32, offset: 128)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2943, file: !116, line: 342, baseType: !120, size: 32, offset: 160)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2943, file: !116, line: 343, baseType: !120, size: 32, offset: 192)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2943, file: !116, line: 344, baseType: !121, size: 32, offset: 224)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2943, file: !116, line: 345, baseType: !120, size: 32, offset: 256)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2943, file: !116, line: 346, baseType: !120, size: 32, offset: 288)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2943, file: !116, line: 347, baseType: !820, size: 64, offset: 320)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2943, file: !116, line: 348, baseType: !120, size: 32, offset: 384)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2943, file: !116, line: 349, baseType: !120, size: 32, offset: 416)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2943, file: !116, line: 350, baseType: !120, size: 32, offset: 448)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2943, file: !116, line: 351, baseType: !121, size: 32, offset: 480)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2943, file: !116, line: 352, baseType: !120, size: 32, offset: 512)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2943, file: !116, line: 353, baseType: !120, size: 32, offset: 544)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2943, file: !116, line: 354, baseType: !820, size: 64, offset: 576)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2943, file: !116, line: 355, baseType: !120, size: 32, offset: 640)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2943, file: !116, line: 356, baseType: !120, size: 32, offset: 672)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2943, file: !116, line: 357, baseType: !120, size: 32, offset: 704)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2943, file: !116, line: 358, baseType: !121, size: 32, offset: 736)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2943, file: !116, line: 359, baseType: !120, size: 32, offset: 768)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2943, file: !116, line: 360, baseType: !120, size: 32, offset: 800)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2943, file: !116, line: 361, baseType: !820, size: 64, offset: 832)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2943, file: !116, line: 362, baseType: !120, size: 32, offset: 896)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2943, file: !116, line: 363, baseType: !120, size: 32, offset: 928)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2943, file: !116, line: 364, baseType: !820, size: 64, offset: 960)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2943, file: !116, line: 365, baseType: !120, size: 32, offset: 1024)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2943, file: !116, line: 366, baseType: !120, size: 32, offset: 1056)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2943, file: !116, line: 367, baseType: !841, size: 32, offset: 1088)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2943, file: !116, line: 368, baseType: !120, size: 32, offset: 1120)
!2977 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2978, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2978 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/getline")
!2979 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2980, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2981, retainedTypes: !2997, splitDebugInlining: false, nameTableKind: None)
!2980 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/getline")
!2981 = !{!2982, !2989, !2993}
!2982 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2983, line: 38, baseType: !32, size: 32, elements: !2984)
!2983 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2984 = !{!2985, !2986, !2987, !2988}
!2985 = !DIEnumerator(name: "HAL_OK", value: 0)
!2986 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!2987 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!2988 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!2989 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !793, line: 184, baseType: !32, size: 32, elements: !2990)
!2990 = !{!2991, !2992}
!2991 = !DIEnumerator(name: "RESET", value: 0)
!2992 = !DIEnumerator(name: "SET", value: 1)
!2993 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !793, line: 190, baseType: !32, size: 32, elements: !2994)
!2994 = !{!2995, !2996}
!2995 = !DIEnumerator(name: "DISABLE", value: 0)
!2996 = !DIEnumerator(name: "ENABLE", value: 1)
!2997 = !{!102, !2998, !154, !121, !1580, !3034, !3040, !3051, !429, !3052, !1578}
!2998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2999, size: 32)
!2999 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 369, baseType: !3000)
!3000 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 335, size: 1152, elements: !3001)
!3001 = !{!3002, !3003, !3004, !3005, !3006, !3007, !3008, !3009, !3010, !3011, !3012, !3013, !3014, !3015, !3016, !3017, !3018, !3019, !3020, !3021, !3022, !3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030, !3031, !3032, !3033}
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3000, file: !116, line: 337, baseType: !120, size: 32)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3000, file: !116, line: 338, baseType: !120, size: 32, offset: 32)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3000, file: !116, line: 339, baseType: !120, size: 32, offset: 64)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3000, file: !116, line: 340, baseType: !120, size: 32, offset: 96)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3000, file: !116, line: 341, baseType: !120, size: 32, offset: 128)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3000, file: !116, line: 342, baseType: !120, size: 32, offset: 160)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3000, file: !116, line: 343, baseType: !120, size: 32, offset: 192)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3000, file: !116, line: 344, baseType: !121, size: 32, offset: 224)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3000, file: !116, line: 345, baseType: !120, size: 32, offset: 256)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3000, file: !116, line: 346, baseType: !120, size: 32, offset: 288)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3000, file: !116, line: 347, baseType: !820, size: 64, offset: 320)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3000, file: !116, line: 348, baseType: !120, size: 32, offset: 384)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3000, file: !116, line: 349, baseType: !120, size: 32, offset: 416)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3000, file: !116, line: 350, baseType: !120, size: 32, offset: 448)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3000, file: !116, line: 351, baseType: !121, size: 32, offset: 480)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3000, file: !116, line: 352, baseType: !120, size: 32, offset: 512)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3000, file: !116, line: 353, baseType: !120, size: 32, offset: 544)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3000, file: !116, line: 354, baseType: !820, size: 64, offset: 576)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3000, file: !116, line: 355, baseType: !120, size: 32, offset: 640)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3000, file: !116, line: 356, baseType: !120, size: 32, offset: 672)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3000, file: !116, line: 357, baseType: !120, size: 32, offset: 704)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3000, file: !116, line: 358, baseType: !121, size: 32, offset: 736)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3000, file: !116, line: 359, baseType: !120, size: 32, offset: 768)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3000, file: !116, line: 360, baseType: !120, size: 32, offset: 800)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3000, file: !116, line: 361, baseType: !820, size: 64, offset: 832)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3000, file: !116, line: 362, baseType: !120, size: 32, offset: 896)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3000, file: !116, line: 363, baseType: !120, size: 32, offset: 928)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3000, file: !116, line: 364, baseType: !820, size: 64, offset: 960)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3000, file: !116, line: 365, baseType: !120, size: 32, offset: 1024)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3000, file: !116, line: 366, baseType: !120, size: 32, offset: 1056)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !3000, file: !116, line: 367, baseType: !841, size: 32, offset: 1088)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3000, file: !116, line: 368, baseType: !120, size: 32, offset: 1120)
!3034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3035, size: 32)
!3035 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !116, line: 329, baseType: !3036)
!3036 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 325, size: 64, elements: !3037)
!3037 = !{!3038, !3039}
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3036, file: !116, line: 327, baseType: !120, size: 32)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3036, file: !116, line: 328, baseType: !120, size: 32, offset: 32)
!3040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3041, size: 32)
!3041 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !116, line: 258, baseType: !3042)
!3042 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 249, size: 224, elements: !3043)
!3043 = !{!3044, !3045, !3046, !3047, !3048, !3049, !3050}
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3042, file: !116, line: 251, baseType: !120, size: 32)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3042, file: !116, line: 252, baseType: !120, size: 32, offset: 32)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3042, file: !116, line: 253, baseType: !120, size: 32, offset: 64)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3042, file: !116, line: 254, baseType: !120, size: 32, offset: 96)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3042, file: !116, line: 255, baseType: !120, size: 32, offset: 128)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3042, file: !116, line: 256, baseType: !120, size: 32, offset: 160)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3042, file: !116, line: 257, baseType: !120, size: 32, offset: 192)
!3051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1762, size: 32)
!3052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3053, size: 32)
!3053 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !116, line: 275, baseType: !3054)
!3054 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 264, size: 320, elements: !3055)
!3055 = !{!3056, !3057, !3058, !3059, !3060, !3061, !3062, !3063, !3064}
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !3054, file: !116, line: 266, baseType: !120, size: 32)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !3054, file: !116, line: 267, baseType: !120, size: 32, offset: 32)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !3054, file: !116, line: 268, baseType: !120, size: 32, offset: 64)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !3054, file: !116, line: 269, baseType: !120, size: 32, offset: 96)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !3054, file: !116, line: 270, baseType: !120, size: 32, offset: 128)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !3054, file: !116, line: 271, baseType: !120, size: 32, offset: 160)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !3054, file: !116, line: 272, baseType: !120, size: 32, offset: 192)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !3054, file: !116, line: 273, baseType: !120, size: 32, offset: 224)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !3054, file: !116, line: 274, baseType: !1222, size: 64, offset: 256)
!3065 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3066, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3067, retainedTypes: !3068, splitDebugInlining: false, nameTableKind: None)
!3066 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/getline")
!3067 = !{!792}
!3068 = !{!3069, !121, !3077, !3083, !3094}
!3069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3070, size: 32)
!3070 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !515, line: 770, baseType: !3071)
!3071 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 764, size: 128, elements: !3072)
!3072 = !{!3073, !3074, !3075, !3076}
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !3071, file: !515, line: 766, baseType: !120, size: 32)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !3071, file: !515, line: 767, baseType: !120, size: 32, offset: 32)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !3071, file: !515, line: 768, baseType: !120, size: 32, offset: 64)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !3071, file: !515, line: 769, baseType: !519, size: 32, offset: 96)
!3077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3078, size: 32)
!3078 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !116, line: 329, baseType: !3079)
!3079 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 325, size: 64, elements: !3080)
!3080 = !{!3081, !3082}
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3079, file: !116, line: 327, baseType: !120, size: 32)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3079, file: !116, line: 328, baseType: !120, size: 32, offset: 32)
!3083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3084, size: 32)
!3084 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !116, line: 258, baseType: !3085)
!3085 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 249, size: 224, elements: !3086)
!3086 = !{!3087, !3088, !3089, !3090, !3091, !3092, !3093}
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3085, file: !116, line: 251, baseType: !120, size: 32)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3085, file: !116, line: 252, baseType: !120, size: 32, offset: 32)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3085, file: !116, line: 253, baseType: !120, size: 32, offset: 64)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3085, file: !116, line: 254, baseType: !120, size: 32, offset: 96)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3085, file: !116, line: 255, baseType: !120, size: 32, offset: 128)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3085, file: !116, line: 256, baseType: !120, size: 32, offset: 160)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3085, file: !116, line: 257, baseType: !120, size: 32, offset: 192)
!3094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3095, size: 32)
!3095 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 369, baseType: !3096)
!3096 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 335, size: 1152, elements: !3097)
!3097 = !{!3098, !3099, !3100, !3101, !3102, !3103, !3104, !3105, !3106, !3107, !3108, !3109, !3110, !3111, !3112, !3113, !3114, !3115, !3116, !3117, !3118, !3119, !3120, !3121, !3122, !3123, !3124, !3125, !3126, !3127, !3128, !3129}
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3096, file: !116, line: 337, baseType: !120, size: 32)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3096, file: !116, line: 338, baseType: !120, size: 32, offset: 32)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3096, file: !116, line: 339, baseType: !120, size: 32, offset: 64)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3096, file: !116, line: 340, baseType: !120, size: 32, offset: 96)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3096, file: !116, line: 341, baseType: !120, size: 32, offset: 128)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3096, file: !116, line: 342, baseType: !120, size: 32, offset: 160)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3096, file: !116, line: 343, baseType: !120, size: 32, offset: 192)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3096, file: !116, line: 344, baseType: !121, size: 32, offset: 224)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3096, file: !116, line: 345, baseType: !120, size: 32, offset: 256)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3096, file: !116, line: 346, baseType: !120, size: 32, offset: 288)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3096, file: !116, line: 347, baseType: !820, size: 64, offset: 320)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3096, file: !116, line: 348, baseType: !120, size: 32, offset: 384)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3096, file: !116, line: 349, baseType: !120, size: 32, offset: 416)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3096, file: !116, line: 350, baseType: !120, size: 32, offset: 448)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3096, file: !116, line: 351, baseType: !121, size: 32, offset: 480)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3096, file: !116, line: 352, baseType: !120, size: 32, offset: 512)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3096, file: !116, line: 353, baseType: !120, size: 32, offset: 544)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3096, file: !116, line: 354, baseType: !820, size: 64, offset: 576)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3096, file: !116, line: 355, baseType: !120, size: 32, offset: 640)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3096, file: !116, line: 356, baseType: !120, size: 32, offset: 672)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3096, file: !116, line: 357, baseType: !120, size: 32, offset: 704)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3096, file: !116, line: 358, baseType: !121, size: 32, offset: 736)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3096, file: !116, line: 359, baseType: !120, size: 32, offset: 768)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3096, file: !116, line: 360, baseType: !120, size: 32, offset: 800)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3096, file: !116, line: 361, baseType: !820, size: 64, offset: 832)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3096, file: !116, line: 362, baseType: !120, size: 32, offset: 896)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3096, file: !116, line: 363, baseType: !120, size: 32, offset: 928)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3096, file: !116, line: 364, baseType: !820, size: 64, offset: 960)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3096, file: !116, line: 365, baseType: !120, size: 32, offset: 1024)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3096, file: !116, line: 366, baseType: !120, size: 32, offset: 1056)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !3096, file: !116, line: 367, baseType: !841, size: 32, offset: 1088)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3096, file: !116, line: 368, baseType: !120, size: 32, offset: 1120)
!3130 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3131, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3132, splitDebugInlining: false, nameTableKind: None)
!3131 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/getline")
!3132 = !{!102, !204}
!3133 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3134, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3135, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3134 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/getline")
!3135 = !{!3136, !3143, !30}
!3136 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3137, line: 14, baseType: !32, size: 32, elements: !3138)
!3137 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3138 = !{!3139, !3140, !3141, !3142}
!3139 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3140 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3141 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3142 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3143 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3137, line: 42, baseType: !32, size: 32, elements: !3144)
!3144 = !{!3145, !3146, !3147, !3148, !3149, !3150}
!3145 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3146 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3147 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3148 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3149 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3150 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3151 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3152, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3152 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/getline")
!3153 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3154, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3155, retainedTypes: !3166, splitDebugInlining: false, nameTableKind: None)
!3154 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/queue.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/getline")
!3155 = !{!3156, !30}
!3156 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_poll_states_bits", file: !296, line: 5323, baseType: !32, size: 32, elements: !3157)
!3157 = !{!3158, !3159, !3160, !3161, !3162, !3163, !3164, !3165}
!3158 = !DIEnumerator(name: "_POLL_STATE_NOT_READY", value: 0)
!3159 = !DIEnumerator(name: "_POLL_STATE_SIGNALED", value: 1)
!3160 = !DIEnumerator(name: "_POLL_STATE_SEM_AVAILABLE", value: 2)
!3161 = !DIEnumerator(name: "_POLL_STATE_DATA_AVAILABLE", value: 3)
!3162 = !DIEnumerator(name: "_POLL_STATE_CANCELLED", value: 4)
!3163 = !DIEnumerator(name: "_POLL_STATE_MSGQ_DATA_AVAILABLE", value: 5)
!3164 = !DIEnumerator(name: "_POLL_STATE_PIPE_DATA_AVAILABLE", value: 6)
!3165 = !DIEnumerator(name: "_POLL_NUM_STATES", value: 7)
!3166 = !{!102, !154, !3167, !344, !3177, !157, !3178, !103, !3179, !312}
!3167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3168, size: 32)
!3168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "alloc_node", file: !3169, line: 25, size: 64, elements: !3170)
!3169 = !DIFile(filename: "zephyr/kernel/queue.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3170 = !{!3171, !3176}
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3168, file: !3169, line: 26, baseType: !3172, size: 32)
!3172 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !303, line: 39, baseType: !3173)
!3173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !303, line: 35, size: 32, elements: !3174)
!3174 = !{!3175}
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !3173, file: !303, line: 36, baseType: !312, size: 32)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3168, file: !3169, line: 27, baseType: !102, size: 32, offset: 32)
!3177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!3178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3172, size: 32)
!3179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3180, size: 32)
!3180 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !325, line: 49, baseType: !3181)
!3181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !3182)
!3182 = !{!3183, !3189}
!3183 = !DIDerivedType(tag: DW_TAG_member, scope: !3181, file: !325, line: 38, baseType: !3184, size: 32)
!3184 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3181, file: !325, line: 38, size: 32, elements: !3185)
!3185 = !{!3186, !3188}
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3184, file: !325, line: 39, baseType: !3187, size: 32)
!3187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3181, size: 32)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3184, file: !325, line: 40, baseType: !3187, size: 32)
!3189 = !DIDerivedType(tag: DW_TAG_member, scope: !3181, file: !325, line: 42, baseType: !3190, size: 32, offset: 32)
!3190 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3181, file: !325, line: 42, size: 32, elements: !3191)
!3191 = !{!3192, !3193}
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3190, file: !325, line: 43, baseType: !3187, size: 32)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3190, file: !325, line: 44, baseType: !3187, size: 32)
!3194 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3195, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3196, splitDebugInlining: false, nameTableKind: None)
!3195 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/getline")
!3196 = !{!22, !102, !103}
!3197 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3198, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3198 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/mempool.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/getline")
!3199 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3200, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3200 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/getline")
!3201 = !{!"Ubuntu clang version 14.0.6"}
!3202 = !{i32 7, !"Dwarf Version", i32 4}
!3203 = !{i32 2, !"Debug Info Version", i32 3}
!3204 = !{i32 1, !"wchar_size", i32 4}
!3205 = !{i32 1, !"min_enum_size", i32 4}
!3206 = !{i32 1, !"branch-target-enforcement", i32 0}
!3207 = !{i32 1, !"sign-return-address", i32 0}
!3208 = !{i32 1, !"sign-return-address-all", i32 0}
!3209 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3210 = !{i32 7, !"frame-pointer", i32 2}
!3211 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3212, file: !3212, line: 26, type: !3213, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2553, retainedNodes: !317)
!3212 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3213 = !DISubroutineType(types: !3214)
!3214 = !{null}
!3215 = !DILocation(line: 28, column: 1, scope: !3211)
!3216 = !{i64 2154438790, i64 2154438810, i64 2154438873}
!3217 = !DILocation(line: 29, column: 1, scope: !3211)
!3218 = !{i64 2154439205, i64 2154439225, i64 2154439288}
!3219 = !DILocation(line: 30, column: 1, scope: !3211)
!3220 = !{i64 2154439624, i64 2154439644, i64 2154439707}
!3221 = !DILocation(line: 31, column: 1, scope: !3211)
!3222 = !{i64 2154440043, i64 2154440063, i64 2154440126}
!3223 = !DILocation(line: 33, column: 1, scope: !3211)
!3224 = !{i64 2154440335, i64 2154440355, i64 2154440418}
!3225 = !DILocation(line: 35, column: 1, scope: !3211)
!3226 = !{i64 2154440660, i64 2154440680, i64 2154440743}
!3227 = !DILocation(line: 50, column: 1, scope: !3211)
!3228 = !{i64 2154441087, i64 2154441107, i64 2154441170}
!3229 = !DILocation(line: 54, column: 1, scope: !3211)
!3230 = !{i64 2154441526, i64 2154441546, i64 2154441609}
!3231 = !DILocation(line: 61, column: 1, scope: !3211)
!3232 = !{i64 2154441843, i64 2154441863, i64 2154441926}
!3233 = !DILocation(line: 63, column: 1, scope: !3211)
!3234 = !{i64 2154442223, i64 2154442243, i64 2154442306}
!3235 = !DILocation(line: 64, column: 1, scope: !3211)
!3236 = !{i64 2154442745, i64 2154442765, i64 2154442828}
!3237 = !DILocation(line: 65, column: 1, scope: !3211)
!3238 = !{i64 2154443243, i64 2154443263, i64 2154443326}
!3239 = !DILocation(line: 66, column: 1, scope: !3211)
!3240 = !{i64 2154443725, i64 2154443745, i64 2154443808}
!3241 = !DILocation(line: 67, column: 1, scope: !3211)
!3242 = !{i64 2154448293, i64 2154448313, i64 2154448376}
!3243 = !DILocation(line: 68, column: 1, scope: !3211)
!3244 = !{i64 2154448781, i64 2154448801, i64 2154448864}
!3245 = !DILocation(line: 70, column: 1, scope: !3211)
!3246 = !{i64 2154449249, i64 2154449269, i64 2154449332}
!3247 = !DILocation(line: 71, column: 1, scope: !3211)
!3248 = !{i64 2154449691, i64 2154449711, i64 2154449774}
!3249 = !DILocation(line: 72, column: 1, scope: !3211)
!3250 = !{i64 2154450149, i64 2154450169, i64 2154450232}
!3251 = !DILocation(line: 79, column: 1, scope: !3211)
!3252 = !{i64 2154450603, i64 2154450623, i64 2154450686}
!3253 = !DILocation(line: 80, column: 1, scope: !3211)
!3254 = !{i64 2154451114, i64 2154451134, i64 2154451197}
!3255 = !DILocation(line: 82, column: 1, scope: !3211)
!3256 = !{i64 2154451605, i64 2154451625, i64 2154451688}
!3257 = !DILocation(line: 97, column: 1, scope: !3211)
!3258 = !{i64 2154451942, i64 2154451962, i64 2154452025}
!3259 = !DILocation(line: 99, column: 1, scope: !3211)
!3260 = !{i64 2154452160, i64 2154452180, i64 2154452243}
!3261 = !DILocation(line: 102, column: 1, scope: !3211)
!3262 = !{i64 2154452417, i64 2154452437, i64 2154452500}
!3263 = !DILocation(line: 105, column: 1, scope: !3211)
!3264 = !{i64 2154452657, i64 2154452677, i64 2154452740}
!3265 = !DILocation(line: 115, column: 1, scope: !3211)
!3266 = !{i64 2154452996, i64 2154453016, i64 2154453079}
!3267 = !DILocation(line: 118, column: 1, scope: !3211)
!3268 = !{i64 2154453340, i64 2154453360, i64 2154453423}
!3269 = !DILocation(line: 32, column: 1, scope: !3270)
!3270 = !DILexicalBlockFile(scope: !3211, file: !3271, discriminator: 0)
!3271 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3272 = !{i64 2154453696, i64 2154453716, i64 2154453779}
!3273 = !DILocation(line: 33, column: 1, scope: !3270)
!3274 = !{i64 2154454208, i64 2154454228, i64 2154454291}
!3275 = !DILocation(line: 53, column: 1, scope: !3270)
!3276 = !{i64 2154454716, i64 2154454736, i64 2154454799}
!3277 = !DILocation(line: 54, column: 1, scope: !3270)
!3278 = !{i64 2154455134, i64 2154455154, i64 2154455217}
!3279 = !DILocation(line: 55, column: 1, scope: !3270)
!3280 = !{i64 2154455552, i64 2154455572, i64 2154455635}
!3281 = !DILocation(line: 56, column: 1, scope: !3270)
!3282 = !{i64 2154455970, i64 2154455990, i64 2154456053}
!3283 = !DILocation(line: 57, column: 1, scope: !3270)
!3284 = !{i64 2154456388, i64 2154456408, i64 2154456471}
!3285 = !DILocation(line: 58, column: 1, scope: !3270)
!3286 = !{i64 2154456806, i64 2154456826, i64 2154456889}
!3287 = !DILocation(line: 59, column: 1, scope: !3270)
!3288 = !{i64 2154457224, i64 2154457244, i64 2154457307}
!3289 = !DILocation(line: 60, column: 1, scope: !3270)
!3290 = !{i64 2154457648, i64 2154457668, i64 2154457731}
!3291 = !DILocation(line: 61, column: 1, scope: !3270)
!3292 = !{i64 2154462026, i64 2154462046, i64 2154462109}
!3293 = !DILocation(line: 70, column: 1, scope: !3270)
!3294 = !{i64 2154462255, i64 2154462275, i64 2154462338}
!3295 = !DILocation(line: 72, column: 1, scope: !3270)
!3296 = !{i64 2154462587, i64 2154462607, i64 2154462670}
!3297 = !DILocation(line: 73, column: 1, scope: !3270)
!3298 = !{i64 2154463037, i64 2154463057, i64 2154463120}
!3299 = !DILocation(line: 74, column: 1, scope: !3270)
!3300 = !{i64 2154463487, i64 2154463507, i64 2154463570}
!3301 = !DILocation(line: 75, column: 1, scope: !3270)
!3302 = !{i64 2154463937, i64 2154463957, i64 2154464020}
!3303 = !DILocation(line: 76, column: 1, scope: !3270)
!3304 = !{i64 2154464387, i64 2154464407, i64 2154464470}
!3305 = !DILocation(line: 77, column: 1, scope: !3270)
!3306 = !{i64 2154464837, i64 2154464857, i64 2154464920}
!3307 = !DILocation(line: 78, column: 1, scope: !3270)
!3308 = !{i64 2154465287, i64 2154465307, i64 2154465370}
!3309 = !DILocation(line: 79, column: 1, scope: !3270)
!3310 = !{i64 2154465737, i64 2154465757, i64 2154465820}
!3311 = !DILocation(line: 80, column: 1, scope: !3270)
!3312 = !{i64 2154466190, i64 2154466210, i64 2154466273}
!3313 = !DILocation(line: 84, column: 1, scope: !3270)
!3314 = !{i64 2154466522, i64 2154466542, i64 2154466605}
!3315 = !DILocation(line: 91, column: 1, scope: !3270)
!3316 = !{i64 2154466919, i64 2154466939, i64 2154467002}
!3317 = !DILocation(line: 93, column: 1, scope: !3270)
!3318 = !{i64 2154467286, i64 2154467306, i64 2154467369}
!3319 = !DILocation(line: 106, column: 1, scope: !3270)
!3320 = !{i64 2154467556, i64 2154467576, i64 2154467639}
!3321 = !DILocation(line: 11, column: 1, scope: !3322)
!3322 = !DILexicalBlockFile(scope: !3211, file: !3323, discriminator: 0)
!3323 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3324 = distinct !DISubprogram(name: "main", scope: !3325, file: !3325, line: 12, type: !3213, scopeLine: 13, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !3326)
!3325 = !DIFile(filename: "zephyr/samples/subsys/console/getline/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3326 = !{!3327}
!3327 = !DILocalVariable(name: "s", scope: !3328, file: !3325, line: 19, type: !344)
!3328 = distinct !DILexicalBlock(scope: !3324, file: !3325, line: 18, column: 12)
!3329 = !DILocation(line: 14, column: 2, scope: !3324)
!3330 = !DILocation(line: 16, column: 2, scope: !3324)
!3331 = !DILocation(line: 18, column: 2, scope: !3324)
!3332 = !DILocation(line: 19, column: 13, scope: !3328)
!3333 = !DILocation(line: 0, scope: !3328)
!3334 = !DILocation(line: 21, column: 3, scope: !3328)
!3335 = !DILocation(line: 22, column: 37, scope: !3328)
!3336 = !DILocation(line: 22, column: 47, scope: !3328)
!3337 = !DILocation(line: 22, column: 35, scope: !3328)
!3338 = !DILocation(line: 22, column: 3, scope: !3328)
!3339 = distinct !{!3339, !3331, !3340}
!3340 = !DILocation(line: 23, column: 2, scope: !3324)
!3341 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !105, file: !105, line: 45, type: !107, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3342)
!3342 = !{!3343}
!3343 = !DILocalVariable(name: "c", arg: 1, scope: !3341, file: !105, line: 45, type: !103)
!3344 = !DILocation(line: 0, scope: !3341)
!3345 = !DILocation(line: 50, column: 2, scope: !3341)
!3346 = distinct !DISubprogram(name: "__printk_hook_install", scope: !105, file: !105, line: 63, type: !3347, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3349)
!3347 = !DISubroutineType(types: !3348)
!3348 = !{null, !106}
!3349 = !{!3350}
!3350 = !DILocalVariable(name: "fn", arg: 1, scope: !3346, file: !105, line: 63, type: !106)
!3351 = !DILocation(line: 0, scope: !3346)
!3352 = !DILocation(line: 65, column: 12, scope: !3346)
!3353 = !DILocation(line: 66, column: 1, scope: !3346)
!3354 = distinct !DISubprogram(name: "__printk_get_hook", scope: !105, file: !105, line: 76, type: !3355, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !317)
!3355 = !DISubroutineType(types: !3356)
!3356 = !{!102}
!3357 = !DILocation(line: 78, column: 9, scope: !3354)
!3358 = !DILocation(line: 78, column: 2, scope: !3354)
!3359 = distinct !DISubprogram(name: "vprintk", scope: !105, file: !105, line: 113, type: !3360, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3369)
!3360 = !DISubroutineType(types: !3361)
!3361 = !{null, !144, !3362}
!3362 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3363, line: 99, baseType: !3364)
!3363 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3364 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3363, line: 40, baseType: !3365)
!3365 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !105, baseType: !3366)
!3366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3367)
!3367 = !{!3368}
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3366, file: !105, line: 79, baseType: !102, size: 32)
!3369 = !{!3370, !3371, !3372}
!3370 = !DILocalVariable(name: "fmt", arg: 1, scope: !3359, file: !105, line: 113, type: !144)
!3371 = !DILocalVariable(name: "ap", arg: 2, scope: !3359, file: !105, line: 113, type: !3362)
!3372 = !DILocalVariable(name: "ctx", scope: !3373, file: !105, line: 121, type: !3375)
!3373 = distinct !DILexicalBlock(scope: !3374, file: !105, line: 120, column: 27)
!3374 = distinct !DILexicalBlock(scope: !3359, file: !105, line: 120, column: 6)
!3375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !105, line: 81, size: 32, elements: !3376)
!3376 = !{!3377, !3378}
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !3375, file: !105, line: 85, baseType: !32, size: 32)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3375, file: !105, line: 86, baseType: !3379, offset: 32)
!3379 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, elements: !2589)
!3380 = !DILocation(line: 0, scope: !3359)
!3381 = !DILocation(line: 148, column: 3, scope: !3382)
!3382 = distinct !DILexicalBlock(scope: !3374, file: !105, line: 138, column: 9)
!3383 = !DILocation(line: 155, column: 1, scope: !3359)
!3384 = distinct !DISubprogram(name: "char_out", scope: !105, file: !105, line: 107, type: !3385, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3387)
!3385 = !DISubroutineType(types: !3386)
!3386 = !{!103, !103, !102}
!3387 = !{!3388, !3389}
!3388 = !DILocalVariable(name: "c", arg: 1, scope: !3384, file: !105, line: 107, type: !103)
!3389 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !3384, file: !105, line: 107, type: !102)
!3390 = !DILocation(line: 0, scope: !3384)
!3391 = !DILocation(line: 110, column: 9, scope: !3384)
!3392 = !DILocation(line: 110, column: 2, scope: !3384)
!3393 = distinct !DISubprogram(name: "cbvprintf", scope: !3394, file: !3394, line: 739, type: !3395, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3401)
!3394 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3395 = !DISubroutineType(types: !3396)
!3396 = !{!103, !3397, !102, !144, !3362}
!3397 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3394, line: 297, baseType: !3398)
!3398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3399, size: 32)
!3399 = !DISubroutineType(types: !3400)
!3400 = !{!103, null}
!3401 = !{!3402, !3403, !3404, !3405}
!3402 = !DILocalVariable(name: "out", arg: 1, scope: !3393, file: !3394, line: 739, type: !3397)
!3403 = !DILocalVariable(name: "ctx", arg: 2, scope: !3393, file: !3394, line: 739, type: !102)
!3404 = !DILocalVariable(name: "format", arg: 3, scope: !3393, file: !3394, line: 739, type: !144)
!3405 = !DILocalVariable(name: "ap", arg: 4, scope: !3393, file: !3394, line: 739, type: !3362)
!3406 = !DILocation(line: 0, scope: !3393)
!3407 = !DILocation(line: 741, column: 9, scope: !3393)
!3408 = !DILocation(line: 741, column: 2, scope: !3393)
!3409 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !105, file: !105, line: 157, type: !3410, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3412)
!3410 = !DISubroutineType(types: !3411)
!3411 = !{null, !344, !204}
!3412 = !{!3413, !3414, !3415}
!3413 = !DILocalVariable(name: "c", arg: 1, scope: !3409, file: !105, line: 157, type: !344)
!3414 = !DILocalVariable(name: "n", arg: 2, scope: !3409, file: !105, line: 157, type: !204)
!3415 = !DILocalVariable(name: "i", scope: !3409, file: !105, line: 159, type: !204)
!3416 = !DILocation(line: 0, scope: !3409)
!3417 = !DILocation(line: 164, column: 16, scope: !3418)
!3418 = distinct !DILexicalBlock(scope: !3419, file: !105, line: 164, column: 2)
!3419 = distinct !DILexicalBlock(scope: !3409, file: !105, line: 164, column: 2)
!3420 = !DILocation(line: 164, column: 2, scope: !3419)
!3421 = !DILocation(line: 165, column: 3, scope: !3422)
!3422 = distinct !DILexicalBlock(scope: !3418, file: !105, line: 164, column: 26)
!3423 = !DILocation(line: 165, column: 13, scope: !3422)
!3424 = !DILocation(line: 164, column: 22, scope: !3418)
!3425 = distinct !{!3425, !3420, !3426}
!3426 = !DILocation(line: 166, column: 2, scope: !3419)
!3427 = !DILocation(line: 171, column: 1, scope: !3409)
!3428 = distinct !DISubprogram(name: "printk", scope: !105, file: !105, line: 203, type: !3429, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3431)
!3429 = !DISubroutineType(types: !3430)
!3430 = !{null, !144, null}
!3431 = !{!3432, !3433}
!3432 = !DILocalVariable(name: "fmt", arg: 1, scope: !3428, file: !105, line: 203, type: !144)
!3433 = !DILocalVariable(name: "ap", scope: !3428, file: !105, line: 205, type: !3362)
!3434 = !DILocation(line: 0, scope: !3428)
!3435 = !DILocation(line: 205, column: 2, scope: !3428)
!3436 = !DILocation(line: 205, column: 10, scope: !3428)
!3437 = !DILocation(line: 207, column: 2, scope: !3428)
!3438 = !DILocation(line: 209, column: 2, scope: !3428)
!3439 = !DILocation(line: 211, column: 2, scope: !3428)
!3440 = !DILocation(line: 212, column: 1, scope: !3428)
!3441 = distinct !DISubprogram(name: "snprintk", scope: !105, file: !105, line: 239, type: !3442, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3444)
!3442 = !DISubroutineType(types: !3443)
!3443 = !{!103, !344, !204, !144, null}
!3444 = !{!3445, !3446, !3447, !3448, !3449}
!3445 = !DILocalVariable(name: "str", arg: 1, scope: !3441, file: !105, line: 239, type: !344)
!3446 = !DILocalVariable(name: "size", arg: 2, scope: !3441, file: !105, line: 239, type: !204)
!3447 = !DILocalVariable(name: "fmt", arg: 3, scope: !3441, file: !105, line: 239, type: !144)
!3448 = !DILocalVariable(name: "ap", scope: !3441, file: !105, line: 241, type: !3362)
!3449 = !DILocalVariable(name: "ret", scope: !3441, file: !105, line: 242, type: !103)
!3450 = !DILocation(line: 0, scope: !3441)
!3451 = !DILocation(line: 241, column: 2, scope: !3441)
!3452 = !DILocation(line: 241, column: 10, scope: !3441)
!3453 = !DILocation(line: 244, column: 2, scope: !3441)
!3454 = !DILocation(line: 245, column: 8, scope: !3441)
!3455 = !DILocation(line: 246, column: 2, scope: !3441)
!3456 = !DILocation(line: 249, column: 1, scope: !3441)
!3457 = !DILocation(line: 248, column: 2, scope: !3441)
!3458 = distinct !DISubprogram(name: "vsnprintk", scope: !105, file: !105, line: 251, type: !3459, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3461)
!3459 = !DISubroutineType(types: !3460)
!3460 = !{!103, !344, !204, !144, !3362}
!3461 = !{!3462, !3463, !3464, !3465, !3466}
!3462 = !DILocalVariable(name: "str", arg: 1, scope: !3458, file: !105, line: 251, type: !344)
!3463 = !DILocalVariable(name: "size", arg: 2, scope: !3458, file: !105, line: 251, type: !204)
!3464 = !DILocalVariable(name: "fmt", arg: 3, scope: !3458, file: !105, line: 251, type: !144)
!3465 = !DILocalVariable(name: "ap", arg: 4, scope: !3458, file: !105, line: 251, type: !3362)
!3466 = !DILocalVariable(name: "ctx", scope: !3458, file: !105, line: 253, type: !3467)
!3467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !105, line: 217, size: 96, elements: !3468)
!3468 = !{!3469, !3470, !3471}
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !3467, file: !105, line: 218, baseType: !344, size: 32)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3467, file: !105, line: 219, baseType: !103, size: 32, offset: 32)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3467, file: !105, line: 220, baseType: !103, size: 32, offset: 64)
!3472 = !DILocation(line: 0, scope: !3458)
!3473 = !DILocation(line: 253, column: 2, scope: !3458)
!3474 = !DILocation(line: 253, column: 21, scope: !3458)
!3475 = !DILocation(line: 253, column: 27, scope: !3458)
!3476 = !DILocation(line: 255, column: 2, scope: !3458)
!3477 = !DILocation(line: 257, column: 10, scope: !3478)
!3478 = distinct !DILexicalBlock(scope: !3458, file: !105, line: 257, column: 6)
!3479 = !DILocation(line: 257, column: 22, scope: !3478)
!3480 = !DILocation(line: 257, column: 16, scope: !3478)
!3481 = !DILocation(line: 257, column: 6, scope: !3458)
!3482 = !DILocation(line: 258, column: 3, scope: !3483)
!3483 = distinct !DILexicalBlock(scope: !3478, file: !105, line: 257, column: 27)
!3484 = !DILocation(line: 258, column: 18, scope: !3483)
!3485 = !DILocation(line: 259, column: 2, scope: !3483)
!3486 = !DILocation(line: 262, column: 1, scope: !3458)
!3487 = !DILocation(line: 261, column: 2, scope: !3458)
!3488 = distinct !DISubprogram(name: "str_out", scope: !105, file: !105, line: 223, type: !3489, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3492)
!3489 = !DISubroutineType(types: !3490)
!3490 = !{!103, !103, !3491}
!3491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3467, size: 32)
!3492 = !{!3493, !3494}
!3493 = !DILocalVariable(name: "c", arg: 1, scope: !3488, file: !105, line: 223, type: !103)
!3494 = !DILocalVariable(name: "ctx", arg: 2, scope: !3488, file: !105, line: 223, type: !3491)
!3495 = !DILocation(line: 0, scope: !3488)
!3496 = !DILocation(line: 225, column: 11, scope: !3497)
!3497 = distinct !DILexicalBlock(scope: !3488, file: !105, line: 225, column: 6)
!3498 = !DILocation(line: 225, column: 15, scope: !3497)
!3499 = !DILocation(line: 0, scope: !3497)
!3500 = !DILocation(line: 225, column: 23, scope: !3497)
!3501 = !DILocation(line: 225, column: 45, scope: !3497)
!3502 = !DILocation(line: 225, column: 37, scope: !3497)
!3503 = !DILocation(line: 225, column: 6, scope: !3488)
!3504 = !DILocation(line: 226, column: 8, scope: !3505)
!3505 = distinct !DILexicalBlock(scope: !3497, file: !105, line: 225, column: 50)
!3506 = !DILocation(line: 226, column: 13, scope: !3505)
!3507 = !DILocation(line: 227, column: 3, scope: !3505)
!3508 = !DILocation(line: 230, column: 29, scope: !3509)
!3509 = distinct !DILexicalBlock(scope: !3488, file: !105, line: 230, column: 6)
!3510 = !DILocation(line: 230, column: 17, scope: !3509)
!3511 = !DILocation(line: 230, column: 6, scope: !3488)
!3512 = !DILocation(line: 231, column: 22, scope: !3513)
!3513 = distinct !DILexicalBlock(scope: !3509, file: !105, line: 230, column: 34)
!3514 = !DILocation(line: 231, column: 3, scope: !3513)
!3515 = !DILocation(line: 231, column: 26, scope: !3513)
!3516 = !DILocation(line: 232, column: 2, scope: !3513)
!3517 = !DILocation(line: 233, column: 28, scope: !3518)
!3518 = distinct !DILexicalBlock(scope: !3509, file: !105, line: 232, column: 9)
!3519 = !DILocation(line: 233, column: 22, scope: !3518)
!3520 = !DILocation(line: 233, column: 3, scope: !3518)
!3521 = !DILocation(line: 233, column: 26, scope: !3518)
!3522 = !DILocation(line: 237, column: 1, scope: !3488)
!3523 = distinct !DISubprogram(name: "z_thread_entry", scope: !3524, file: !3524, line: 30, type: !3525, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !3532)
!3524 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3525 = !DISubroutineType(types: !3526)
!3526 = !{null, !3527, !102, !102, !102}
!3527 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !3528, line: 46, baseType: !3529)
!3528 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3530, size: 32)
!3530 = !DISubroutineType(types: !3531)
!3531 = !{null, !102, !102, !102}
!3532 = !{!3533, !3534, !3535, !3536}
!3533 = !DILocalVariable(name: "entry", arg: 1, scope: !3523, file: !3524, line: 30, type: !3527)
!3534 = !DILocalVariable(name: "p1", arg: 2, scope: !3523, file: !3524, line: 31, type: !102)
!3535 = !DILocalVariable(name: "p2", arg: 3, scope: !3523, file: !3524, line: 31, type: !102)
!3536 = !DILocalVariable(name: "p3", arg: 4, scope: !3523, file: !3524, line: 31, type: !102)
!3537 = !DILocation(line: 0, scope: !3523)
!3538 = !DILocation(line: 36, column: 2, scope: !3523)
!3539 = !DILocation(line: 38, column: 17, scope: !3523)
!3540 = !DILocation(line: 38, column: 2, scope: !3523)
!3541 = !DILocation(line: 45, column: 2, scope: !3523)
!3542 = distinct !DISubprogram(name: "k_current_get", scope: !296, file: !296, line: 530, type: !3543, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !317)
!3543 = !DISubroutineType(types: !3544)
!3544 = !{!3545}
!3545 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !379, line: 347, baseType: !3546)
!3546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3547, size: 32)
!3547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !379, line: 245, size: 1024, elements: !3548)
!3548 = !{!3549, !3607, !3619, !3620, !3621, !3622, !3628, !3641}
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3547, file: !379, line: 247, baseType: !3550, size: 384)
!3550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !379, line: 57, size: 384, elements: !3551)
!3551 = !{!3552, !3576, !3583, !3584, !3585, !3594, !3595, !3596}
!3552 = !DIDerivedType(tag: DW_TAG_member, scope: !3550, file: !379, line: 60, baseType: !3553, size: 64)
!3553 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3550, file: !379, line: 60, size: 64, elements: !3554)
!3554 = !{!3555, !3570}
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3553, file: !379, line: 61, baseType: !3556, size: 64)
!3556 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !325, line: 49, baseType: !3557)
!3557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !3558)
!3558 = !{!3559, !3565}
!3559 = !DIDerivedType(tag: DW_TAG_member, scope: !3557, file: !325, line: 38, baseType: !3560, size: 32)
!3560 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3557, file: !325, line: 38, size: 32, elements: !3561)
!3561 = !{!3562, !3564}
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3560, file: !325, line: 39, baseType: !3563, size: 32)
!3563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3557, size: 32)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3560, file: !325, line: 40, baseType: !3563, size: 32)
!3565 = !DIDerivedType(tag: DW_TAG_member, scope: !3557, file: !325, line: 42, baseType: !3566, size: 32, offset: 32)
!3566 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3557, file: !325, line: 42, size: 32, elements: !3567)
!3567 = !{!3568, !3569}
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3566, file: !325, line: 43, baseType: !3563, size: 32)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3566, file: !325, line: 44, baseType: !3563, size: 32)
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3553, file: !379, line: 62, baseType: !3571, size: 64)
!3571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !404, line: 49, size: 64, elements: !3572)
!3572 = !{!3573}
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3571, file: !404, line: 50, baseType: !3574, size: 64)
!3574 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3575, size: 64, elements: !363)
!3575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3571, size: 32)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3550, file: !379, line: 68, baseType: !3577, size: 32, offset: 64)
!3577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3578, size: 32)
!3578 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !3579)
!3579 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !3580)
!3580 = !{!3581}
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3579, file: !320, line: 232, baseType: !3582, size: 64)
!3582 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !3557)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3550, file: !379, line: 71, baseType: !154, size: 8, offset: 96)
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3550, file: !379, line: 74, baseType: !154, size: 8, offset: 104)
!3585 = !DIDerivedType(tag: DW_TAG_member, scope: !3550, file: !379, line: 90, baseType: !3586, size: 16, offset: 112)
!3586 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3550, file: !379, line: 90, size: 16, elements: !3587)
!3587 = !{!3588, !3593}
!3588 = !DIDerivedType(tag: DW_TAG_member, scope: !3586, file: !379, line: 91, baseType: !3589, size: 16)
!3589 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3586, file: !379, line: 91, size: 16, elements: !3590)
!3590 = !{!3591, !3592}
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3589, file: !379, line: 96, baseType: !425, size: 8)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3589, file: !379, line: 97, baseType: !154, size: 8, offset: 8)
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3586, file: !379, line: 100, baseType: !429, size: 16)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3550, file: !379, line: 107, baseType: !121, size: 32, offset: 128)
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3550, file: !379, line: 127, baseType: !102, size: 32, offset: 160)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3550, file: !379, line: 131, baseType: !3597, size: 192, offset: 192)
!3597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !320, line: 244, size: 192, elements: !3598)
!3598 = !{!3599, !3600, !3606}
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3597, file: !320, line: 245, baseType: !3556, size: 64)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3597, file: !320, line: 246, baseType: !3601, size: 32, offset: 64)
!3601 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !320, line: 242, baseType: !3602)
!3602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3603, size: 32)
!3603 = !DISubroutineType(types: !3604)
!3604 = !{null, !3605}
!3605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3597, size: 32)
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3597, file: !320, line: 249, baseType: !202, size: 64, offset: 128)
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3547, file: !379, line: 250, baseType: !3608, size: 288, offset: 384)
!3608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !446, line: 25, size: 288, elements: !3609)
!3609 = !{!3610, !3611, !3612, !3613, !3614, !3615, !3616, !3617, !3618}
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3608, file: !446, line: 26, baseType: !121, size: 32)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3608, file: !446, line: 27, baseType: !121, size: 32, offset: 32)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3608, file: !446, line: 28, baseType: !121, size: 32, offset: 64)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3608, file: !446, line: 29, baseType: !121, size: 32, offset: 96)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3608, file: !446, line: 30, baseType: !121, size: 32, offset: 128)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3608, file: !446, line: 31, baseType: !121, size: 32, offset: 160)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3608, file: !446, line: 32, baseType: !121, size: 32, offset: 192)
!3617 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3608, file: !446, line: 33, baseType: !121, size: 32, offset: 224)
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3608, file: !446, line: 34, baseType: !121, size: 32, offset: 256)
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3547, file: !379, line: 253, baseType: !102, size: 32, offset: 672)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3547, file: !379, line: 256, baseType: !3578, size: 64, offset: 704)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3547, file: !379, line: 294, baseType: !103, size: 32, offset: 768)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3547, file: !379, line: 300, baseType: !3623, size: 96, offset: 800)
!3623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !379, line: 149, size: 96, elements: !3624)
!3624 = !{!3625, !3626, !3627}
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3623, file: !379, line: 153, baseType: !22, size: 32)
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3623, file: !379, line: 162, baseType: !204, size: 32, offset: 32)
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3623, file: !379, line: 168, baseType: !204, size: 32, offset: 64)
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3547, file: !379, line: 325, baseType: !3629, size: 32, offset: 896)
!3629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3630, size: 32)
!3630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !296, line: 5073, size: 160, elements: !3631)
!3631 = !{!3632, !3638, !3639}
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3630, file: !296, line: 5074, baseType: !3633, size: 96)
!3633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !3634)
!3634 = !{!3635, !3636, !3637}
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3633, file: !472, line: 57, baseType: !475, size: 32)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3633, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3633, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3630, file: !296, line: 5075, baseType: !3578, size: 64, offset: 96)
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3630, file: !296, line: 5076, baseType: !3640, offset: 160)
!3640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3547, file: !379, line: 343, baseType: !3642, size: 64, offset: 928)
!3642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !446, line: 60, size: 64, elements: !3643)
!3643 = !{!3644, !3645}
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3642, file: !446, line: 63, baseType: !121, size: 32)
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3642, file: !446, line: 66, baseType: !121, size: 32, offset: 32)
!3646 = !DILocation(line: 535, column: 9, scope: !3542)
!3647 = !DILocation(line: 535, column: 2, scope: !3542)
!3648 = distinct !DISubprogram(name: "k_thread_abort", scope: !3649, file: !3649, line: 188, type: !3650, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !3652)
!3649 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/getline")
!3650 = !DISubroutineType(types: !3651)
!3651 = !{null, !3545}
!3652 = !{!3653}
!3653 = !DILocalVariable(name: "thread", arg: 1, scope: !3648, file: !3649, line: 188, type: !3545)
!3654 = !DILocation(line: 0, scope: !3648)
!3655 = !DILocation(line: 197, column: 2, scope: !3656)
!3656 = distinct !DILexicalBlock(scope: !3648, file: !3649, line: 197, column: 2)
!3657 = !{i64 2154146857}
!3658 = !DILocation(line: 198, column: 2, scope: !3648)
!3659 = !DILocation(line: 199, column: 1, scope: !3648)
!3660 = distinct !DISubprogram(name: "z_current_get", scope: !3649, file: !3649, line: 173, type: !3543, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !317)
!3661 = !DILocation(line: 180, column: 2, scope: !3662)
!3662 = distinct !DILexicalBlock(scope: !3660, file: !3649, line: 180, column: 2)
!3663 = !{i64 2154146789}
!3664 = !DILocation(line: 181, column: 9, scope: !3660)
!3665 = !DILocation(line: 181, column: 2, scope: !3660)
!3666 = distinct !DISubprogram(name: "sys_heap_free", scope: !3667, file: !3667, line: 163, type: !3668, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !3676)
!3667 = !DIFile(filename: "zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3668 = !DISubroutineType(types: !3669)
!3669 = !{null, !3670, !102}
!3670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3671, size: 32)
!3671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !3672)
!3672 = !{!3673, !3674, !3675}
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3671, file: !472, line: 57, baseType: !2576, size: 32)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3671, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3671, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!3676 = !{!3677, !3678, !3679, !3680}
!3677 = !DILocalVariable(name: "heap", arg: 1, scope: !3666, file: !3667, line: 163, type: !3670)
!3678 = !DILocalVariable(name: "mem", arg: 2, scope: !3666, file: !3667, line: 163, type: !102)
!3679 = !DILocalVariable(name: "h", scope: !3666, file: !3667, line: 168, type: !2576)
!3680 = !DILocalVariable(name: "c", scope: !3666, file: !3667, line: 169, type: !2581)
!3681 = !DILocation(line: 0, scope: !3666)
!3682 = !DILocation(line: 165, column: 10, scope: !3683)
!3683 = distinct !DILexicalBlock(scope: !3666, file: !3667, line: 165, column: 6)
!3684 = !DILocation(line: 165, column: 6, scope: !3666)
!3685 = !DILocation(line: 168, column: 27, scope: !3666)
!3686 = !DILocation(line: 169, column: 16, scope: !3666)
!3687 = !{i32 0, i32 536870912}
!3688 = !DILocation(line: 187, column: 2, scope: !3666)
!3689 = !DILocation(line: 197, column: 2, scope: !3666)
!3690 = !DILocation(line: 198, column: 1, scope: !3666)
!3691 = distinct !DISubprogram(name: "mem_to_chunkid", scope: !3667, file: !3667, line: 157, type: !3692, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !3694)
!3692 = !DISubroutineType(types: !3693)
!3693 = !{!2581, !2576, !102}
!3694 = !{!3695, !3696, !3697, !3698}
!3695 = !DILocalVariable(name: "h", arg: 1, scope: !3691, file: !3667, line: 157, type: !2576)
!3696 = !DILocalVariable(name: "p", arg: 2, scope: !3691, file: !3667, line: 157, type: !102)
!3697 = !DILocalVariable(name: "mem", scope: !3691, file: !3667, line: 159, type: !267)
!3698 = !DILocalVariable(name: "base", scope: !3691, file: !3667, line: 159, type: !267)
!3699 = !DILocation(line: 0, scope: !3691)
!3700 = !DILocation(line: 159, column: 39, scope: !3691)
!3701 = !DILocation(line: 160, column: 14, scope: !3691)
!3702 = !DILocation(line: 160, column: 38, scope: !3691)
!3703 = !DILocation(line: 160, column: 46, scope: !3691)
!3704 = !DILocation(line: 160, column: 2, scope: !3691)
!3705 = distinct !DISubprogram(name: "set_chunk_used", scope: !2563, file: !2563, line: 147, type: !3706, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !3708)
!3706 = !DISubroutineType(types: !3707)
!3707 = !{null, !2576, !2581, !157}
!3708 = !{!3709, !3710, !3711, !3712, !3713}
!3709 = !DILocalVariable(name: "h", arg: 1, scope: !3705, file: !2563, line: 147, type: !2576)
!3710 = !DILocalVariable(name: "c", arg: 2, scope: !3705, file: !2563, line: 147, type: !2581)
!3711 = !DILocalVariable(name: "used", arg: 3, scope: !3705, file: !2563, line: 147, type: !157)
!3712 = !DILocalVariable(name: "buf", scope: !3705, file: !2563, line: 149, type: !2570)
!3713 = !DILocalVariable(name: "cmem", scope: !3705, file: !2563, line: 150, type: !102)
!3714 = !DILocation(line: 0, scope: !3705)
!3715 = !DILocation(line: 149, column: 22, scope: !3705)
!3716 = !DILocation(line: 0, scope: !3717)
!3717 = distinct !DILexicalBlock(scope: !3718, file: !2563, line: 159, column: 7)
!3718 = distinct !DILexicalBlock(scope: !3719, file: !2563, line: 158, column: 9)
!3719 = distinct !DILexicalBlock(scope: !3705, file: !2563, line: 152, column: 6)
!3720 = !DILocation(line: 159, column: 7, scope: !3718)
!3721 = !DILocation(line: 165, column: 1, scope: !3705)
!3722 = distinct !DISubprogram(name: "free_chunk", scope: !3667, file: !3667, line: 133, type: !3723, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !3725)
!3723 = !DISubroutineType(types: !3724)
!3724 = !{null, !2576, !2581}
!3725 = !{!3726, !3727}
!3726 = !DILocalVariable(name: "h", arg: 1, scope: !3722, file: !3667, line: 133, type: !2576)
!3727 = !DILocalVariable(name: "c", arg: 2, scope: !3722, file: !3667, line: 133, type: !2581)
!3728 = !DILocation(line: 0, scope: !3722)
!3729 = !DILocation(line: 136, column: 21, scope: !3730)
!3730 = distinct !DILexicalBlock(scope: !3722, file: !3667, line: 136, column: 6)
!3731 = !DILocation(line: 136, column: 7, scope: !3730)
!3732 = !DILocation(line: 136, column: 6, scope: !3722)
!3733 = !DILocation(line: 137, column: 3, scope: !3734)
!3734 = distinct !DILexicalBlock(scope: !3730, file: !3667, line: 136, column: 41)
!3735 = !DILocation(line: 138, column: 22, scope: !3734)
!3736 = !DILocation(line: 138, column: 3, scope: !3734)
!3737 = !DILocation(line: 139, column: 2, scope: !3734)
!3738 = !DILocation(line: 142, column: 21, scope: !3739)
!3739 = distinct !DILexicalBlock(scope: !3722, file: !3667, line: 142, column: 6)
!3740 = !{i32 -65535, i32 536903678}
!3741 = !DILocation(line: 142, column: 7, scope: !3739)
!3742 = !DILocation(line: 142, column: 6, scope: !3722)
!3743 = !DILocation(line: 143, column: 3, scope: !3744)
!3744 = distinct !DILexicalBlock(scope: !3739, file: !3667, line: 142, column: 40)
!3745 = !DILocation(line: 144, column: 19, scope: !3744)
!3746 = !DILocation(line: 144, column: 3, scope: !3744)
!3747 = !DILocation(line: 145, column: 7, scope: !3744)
!3748 = !DILocation(line: 146, column: 2, scope: !3744)
!3749 = !DILocation(line: 148, column: 2, scope: !3722)
!3750 = !DILocation(line: 149, column: 1, scope: !3722)
!3751 = distinct !DISubprogram(name: "right_chunk", scope: !2563, file: !2563, line: 204, type: !3752, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !3754)
!3752 = !DISubroutineType(types: !3753)
!3753 = !{!2581, !2576, !2581}
!3754 = !{!3755, !3756}
!3755 = !DILocalVariable(name: "h", arg: 1, scope: !3751, file: !2563, line: 204, type: !2576)
!3756 = !DILocalVariable(name: "c", arg: 2, scope: !3751, file: !2563, line: 204, type: !2581)
!3757 = !DILocation(line: 0, scope: !3751)
!3758 = !DILocation(line: 206, column: 13, scope: !3751)
!3759 = !DILocation(line: 206, column: 11, scope: !3751)
!3760 = !DILocation(line: 206, column: 2, scope: !3751)
!3761 = distinct !DISubprogram(name: "chunk_used", scope: !2563, file: !2563, line: 137, type: !3762, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !3764)
!3762 = !DISubroutineType(types: !3763)
!3763 = !{!157, !2576, !2581}
!3764 = !{!3765, !3766}
!3765 = !DILocalVariable(name: "h", arg: 1, scope: !3761, file: !2563, line: 137, type: !2576)
!3766 = !DILocalVariable(name: "c", arg: 2, scope: !3761, file: !2563, line: 137, type: !2581)
!3767 = !DILocation(line: 0, scope: !3761)
!3768 = !DILocation(line: 139, column: 9, scope: !3761)
!3769 = !DILocation(line: 139, column: 42, scope: !3761)
!3770 = !DILocation(line: 139, column: 2, scope: !3761)
!3771 = distinct !DISubprogram(name: "free_list_remove", scope: !3667, file: !3667, line: 60, type: !3723, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !3772)
!3772 = !{!3773, !3774, !3775}
!3773 = !DILocalVariable(name: "h", arg: 1, scope: !3771, file: !3667, line: 60, type: !2576)
!3774 = !DILocalVariable(name: "c", arg: 2, scope: !3771, file: !3667, line: 60, type: !2581)
!3775 = !DILocalVariable(name: "bidx", scope: !3776, file: !3667, line: 63, type: !103)
!3776 = distinct !DILexicalBlock(scope: !3777, file: !3667, line: 62, column: 31)
!3777 = distinct !DILexicalBlock(scope: !3771, file: !3667, line: 62, column: 6)
!3778 = !DILocation(line: 0, scope: !3771)
!3779 = !DILocation(line: 63, column: 28, scope: !3776)
!3780 = !{i32 0, i32 32768}
!3781 = !DILocation(line: 63, column: 14, scope: !3776)
!3782 = !DILocation(line: 0, scope: !3776)
!3783 = !DILocation(line: 64, column: 3, scope: !3776)
!3784 = !DILocation(line: 66, column: 1, scope: !3771)
!3785 = distinct !DISubprogram(name: "merge_chunks", scope: !3667, file: !3667, line: 125, type: !3786, scopeLine: 126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !3788)
!3786 = !DISubroutineType(types: !3787)
!3787 = !{null, !2576, !2581, !2581}
!3788 = !{!3789, !3790, !3791, !3792}
!3789 = !DILocalVariable(name: "h", arg: 1, scope: !3785, file: !3667, line: 125, type: !2576)
!3790 = !DILocalVariable(name: "lc", arg: 2, scope: !3785, file: !3667, line: 125, type: !2581)
!3791 = !DILocalVariable(name: "rc", arg: 3, scope: !3785, file: !3667, line: 125, type: !2581)
!3792 = !DILocalVariable(name: "newsz", scope: !3785, file: !3667, line: 127, type: !3793)
!3793 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunksz_t", file: !2563, line: 62, baseType: !121)
!3794 = !DILocation(line: 0, scope: !3785)
!3795 = !DILocation(line: 127, column: 20, scope: !3785)
!3796 = !DILocation(line: 127, column: 40, scope: !3785)
!3797 = !DILocation(line: 127, column: 38, scope: !3785)
!3798 = !DILocation(line: 129, column: 2, scope: !3785)
!3799 = !DILocation(line: 130, column: 25, scope: !3785)
!3800 = !DILocation(line: 130, column: 2, scope: !3785)
!3801 = !DILocation(line: 131, column: 1, scope: !3785)
!3802 = distinct !DISubprogram(name: "left_chunk", scope: !2563, file: !2563, line: 199, type: !3752, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !3803)
!3803 = !{!3804, !3805}
!3804 = !DILocalVariable(name: "h", arg: 1, scope: !3802, file: !2563, line: 199, type: !2576)
!3805 = !DILocalVariable(name: "c", arg: 2, scope: !3802, file: !2563, line: 199, type: !2581)
!3806 = !DILocation(line: 0, scope: !3802)
!3807 = !DILocation(line: 201, column: 13, scope: !3802)
!3808 = !DILocation(line: 201, column: 11, scope: !3802)
!3809 = !DILocation(line: 201, column: 2, scope: !3802)
!3810 = distinct !DISubprogram(name: "free_list_add", scope: !3667, file: !3667, line: 98, type: !3723, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !3811)
!3811 = !{!3812, !3813, !3814}
!3812 = !DILocalVariable(name: "h", arg: 1, scope: !3810, file: !3667, line: 98, type: !2576)
!3813 = !DILocalVariable(name: "c", arg: 2, scope: !3810, file: !3667, line: 98, type: !2581)
!3814 = !DILocalVariable(name: "bidx", scope: !3815, file: !3667, line: 101, type: !103)
!3815 = distinct !DILexicalBlock(scope: !3816, file: !3667, line: 100, column: 31)
!3816 = distinct !DILexicalBlock(scope: !3810, file: !3667, line: 100, column: 6)
!3817 = !DILocation(line: 0, scope: !3810)
!3818 = !DILocation(line: 101, column: 28, scope: !3815)
!3819 = !DILocation(line: 101, column: 14, scope: !3815)
!3820 = !DILocation(line: 0, scope: !3815)
!3821 = !DILocation(line: 102, column: 3, scope: !3815)
!3822 = !DILocation(line: 104, column: 1, scope: !3810)
!3823 = distinct !DISubprogram(name: "chunk_size", scope: !2563, file: !2563, line: 142, type: !3824, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !3826)
!3824 = !DISubroutineType(types: !3825)
!3825 = !{!3793, !2576, !2581}
!3826 = !{!3827, !3828}
!3827 = !DILocalVariable(name: "h", arg: 1, scope: !3823, file: !2563, line: 142, type: !2576)
!3828 = !DILocalVariable(name: "c", arg: 2, scope: !3823, file: !2563, line: 142, type: !2581)
!3829 = !DILocation(line: 0, scope: !3823)
!3830 = !DILocation(line: 144, column: 9, scope: !3823)
!3831 = !DILocation(line: 144, column: 42, scope: !3823)
!3832 = !DILocation(line: 144, column: 2, scope: !3823)
!3833 = distinct !DISubprogram(name: "bucket_idx", scope: !2563, file: !2563, line: 250, type: !3834, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !3836)
!3834 = !DISubroutineType(types: !3835)
!3835 = !{!103, !2576, !3793}
!3836 = !{!3837, !3838, !3839}
!3837 = !DILocalVariable(name: "h", arg: 1, scope: !3833, file: !2563, line: 250, type: !2576)
!3838 = !DILocalVariable(name: "sz", arg: 2, scope: !3833, file: !2563, line: 250, type: !3793)
!3839 = !DILocalVariable(name: "usable_sz", scope: !3833, file: !2563, line: 252, type: !32)
!3840 = !DILocation(line: 0, scope: !3833)
!3841 = !DILocation(line: 252, column: 32, scope: !3833)
!3842 = !DILocation(line: 252, column: 30, scope: !3833)
!3843 = !DILocation(line: 252, column: 50, scope: !3833)
!3844 = !DILocation(line: 253, column: 14, scope: !3833)
!3845 = !{i32 0, i32 33}
!3846 = !DILocation(line: 253, column: 12, scope: !3833)
!3847 = !DILocation(line: 253, column: 2, scope: !3833)
!3848 = distinct !DISubprogram(name: "free_list_add_bidx", scope: !3667, file: !3667, line: 68, type: !3849, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !3851)
!3849 = !DISubroutineType(types: !3850)
!3850 = !{null, !2576, !2581, !103}
!3851 = !{!3852, !3853, !3854, !3855, !3857, !3860}
!3852 = !DILocalVariable(name: "h", arg: 1, scope: !3848, file: !3667, line: 68, type: !2576)
!3853 = !DILocalVariable(name: "c", arg: 2, scope: !3848, file: !3667, line: 68, type: !2581)
!3854 = !DILocalVariable(name: "bidx", arg: 3, scope: !3848, file: !3667, line: 68, type: !103)
!3855 = !DILocalVariable(name: "b", scope: !3848, file: !3667, line: 70, type: !3856)
!3856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2586, size: 32)
!3857 = !DILocalVariable(name: "second", scope: !3858, file: !3667, line: 84, type: !2581)
!3858 = distinct !DILexicalBlock(scope: !3859, file: !3667, line: 80, column: 9)
!3859 = distinct !DILexicalBlock(scope: !3848, file: !3667, line: 72, column: 6)
!3860 = !DILocalVariable(name: "first", scope: !3858, file: !3667, line: 85, type: !2581)
!3861 = !DILocation(line: 0, scope: !3848)
!3862 = !DILocation(line: 72, column: 9, scope: !3859)
!3863 = !DILocation(line: 72, column: 14, scope: !3859)
!3864 = !DILocation(line: 72, column: 6, scope: !3848)
!3865 = !DILocation(line: 76, column: 23, scope: !3866)
!3866 = distinct !DILexicalBlock(scope: !3859, file: !3667, line: 72, column: 21)
!3867 = !DILocation(line: 76, column: 6, scope: !3866)
!3868 = !DILocation(line: 76, column: 20, scope: !3866)
!3869 = !DILocation(line: 77, column: 11, scope: !3866)
!3870 = !DILocation(line: 78, column: 3, scope: !3866)
!3871 = !DILocation(line: 79, column: 3, scope: !3866)
!3872 = !DILocation(line: 80, column: 2, scope: !3866)
!3873 = !DILocation(line: 0, scope: !3858)
!3874 = !DILocation(line: 85, column: 21, scope: !3858)
!3875 = !{i32 0, i32 65536}
!3876 = !DILocation(line: 87, column: 3, scope: !3858)
!3877 = !DILocation(line: 88, column: 3, scope: !3858)
!3878 = !DILocation(line: 89, column: 3, scope: !3858)
!3879 = !DILocation(line: 90, column: 3, scope: !3858)
!3880 = !DILocation(line: 96, column: 1, scope: !3848)
!3881 = distinct !DISubprogram(name: "set_prev_free_chunk", scope: !2563, file: !2563, line: 187, type: !3786, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !3882)
!3882 = !{!3883, !3884, !3885}
!3883 = !DILocalVariable(name: "h", arg: 1, scope: !3881, file: !2563, line: 187, type: !2576)
!3884 = !DILocalVariable(name: "c", arg: 2, scope: !3881, file: !2563, line: 187, type: !2581)
!3885 = !DILocalVariable(name: "prev", arg: 3, scope: !3881, file: !2563, line: 188, type: !2581)
!3886 = !DILocation(line: 0, scope: !3881)
!3887 = !DILocation(line: 190, column: 2, scope: !3881)
!3888 = !DILocation(line: 191, column: 1, scope: !3881)
!3889 = distinct !DISubprogram(name: "set_next_free_chunk", scope: !2563, file: !2563, line: 193, type: !3786, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !3890)
!3890 = !{!3891, !3892, !3893}
!3891 = !DILocalVariable(name: "h", arg: 1, scope: !3889, file: !2563, line: 193, type: !2576)
!3892 = !DILocalVariable(name: "c", arg: 2, scope: !3889, file: !2563, line: 193, type: !2581)
!3893 = !DILocalVariable(name: "next", arg: 3, scope: !3889, file: !2563, line: 194, type: !2581)
!3894 = !DILocation(line: 0, scope: !3889)
!3895 = !DILocation(line: 196, column: 2, scope: !3889)
!3896 = !DILocation(line: 197, column: 1, scope: !3889)
!3897 = distinct !DISubprogram(name: "prev_free_chunk", scope: !2563, file: !2563, line: 177, type: !3752, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !3898)
!3898 = !{!3899, !3900}
!3899 = !DILocalVariable(name: "h", arg: 1, scope: !3897, file: !2563, line: 177, type: !2576)
!3900 = !DILocalVariable(name: "c", arg: 2, scope: !3897, file: !2563, line: 177, type: !2581)
!3901 = !DILocation(line: 0, scope: !3897)
!3902 = !DILocation(line: 179, column: 9, scope: !3897)
!3903 = !DILocation(line: 179, column: 2, scope: !3897)
!3904 = distinct !DISubprogram(name: "chunk_field", scope: !2563, file: !2563, line: 107, type: !3905, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !3907)
!3905 = !DISubroutineType(types: !3906)
!3906 = !{!2581, !2576, !2581, !2562}
!3907 = !{!3908, !3909, !3910, !3911, !3912}
!3908 = !DILocalVariable(name: "h", arg: 1, scope: !3904, file: !2563, line: 107, type: !2576)
!3909 = !DILocalVariable(name: "c", arg: 2, scope: !3904, file: !2563, line: 107, type: !2581)
!3910 = !DILocalVariable(name: "f", arg: 3, scope: !3904, file: !2563, line: 108, type: !2562)
!3911 = !DILocalVariable(name: "buf", scope: !3904, file: !2563, line: 110, type: !2570)
!3912 = !DILocalVariable(name: "cmem", scope: !3904, file: !2563, line: 111, type: !102)
!3913 = !DILocation(line: 0, scope: !3904)
!3914 = !DILocation(line: 110, column: 22, scope: !3904)
!3915 = !DILocation(line: 111, column: 15, scope: !3904)
!3916 = !DILocation(line: 116, column: 11, scope: !3917)
!3917 = distinct !DILexicalBlock(scope: !3918, file: !2563, line: 115, column: 9)
!3918 = distinct !DILexicalBlock(scope: !3904, file: !2563, line: 113, column: 6)
!3919 = !DILocation(line: 116, column: 10, scope: !3917)
!3920 = !DILocation(line: 118, column: 1, scope: !3904)
!3921 = distinct !DISubprogram(name: "chunk_buf", scope: !2563, file: !2563, line: 101, type: !3922, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !3924)
!3922 = !DISubroutineType(types: !3923)
!3923 = !{!2570, !2576}
!3924 = !{!3925}
!3925 = !DILocalVariable(name: "h", arg: 1, scope: !3921, file: !2563, line: 101, type: !2576)
!3926 = !DILocation(line: 0, scope: !3921)
!3927 = !DILocation(line: 104, column: 9, scope: !3921)
!3928 = !DILocation(line: 104, column: 2, scope: !3921)
!3929 = distinct !DISubprogram(name: "chunk_set", scope: !2563, file: !2563, line: 120, type: !3930, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !3932)
!3930 = !DISubroutineType(types: !3931)
!3931 = !{null, !2576, !2581, !2562, !2581}
!3932 = !{!3933, !3934, !3935, !3936, !3937, !3938}
!3933 = !DILocalVariable(name: "h", arg: 1, scope: !3929, file: !2563, line: 120, type: !2576)
!3934 = !DILocalVariable(name: "c", arg: 2, scope: !3929, file: !2563, line: 120, type: !2581)
!3935 = !DILocalVariable(name: "f", arg: 3, scope: !3929, file: !2563, line: 121, type: !2562)
!3936 = !DILocalVariable(name: "val", arg: 4, scope: !3929, file: !2563, line: 121, type: !2581)
!3937 = !DILocalVariable(name: "buf", scope: !3929, file: !2563, line: 125, type: !2570)
!3938 = !DILocalVariable(name: "cmem", scope: !3929, file: !2563, line: 126, type: !102)
!3939 = !DILocation(line: 0, scope: !3929)
!3940 = !DILocation(line: 125, column: 22, scope: !3929)
!3941 = !DILocation(line: 126, column: 15, scope: !3929)
!3942 = !DILocation(line: 133, column: 27, scope: !3943)
!3943 = distinct !DILexicalBlock(scope: !3944, file: !2563, line: 131, column: 9)
!3944 = distinct !DILexicalBlock(scope: !3929, file: !2563, line: 128, column: 6)
!3945 = !DILocation(line: 133, column: 4, scope: !3943)
!3946 = !DILocation(line: 133, column: 3, scope: !3943)
!3947 = !DILocation(line: 133, column: 25, scope: !3943)
!3948 = !DILocation(line: 135, column: 1, scope: !3929)
!3949 = distinct !DISubprogram(name: "min_chunk_size", scope: !2563, file: !2563, line: 240, type: !3950, scopeLine: 241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !3952)
!3950 = !DISubroutineType(types: !3951)
!3951 = !{!3793, !2576}
!3952 = !{!3953}
!3953 = !DILocalVariable(name: "h", arg: 1, scope: !3949, file: !2563, line: 240, type: !2576)
!3954 = !DILocation(line: 0, scope: !3949)
!3955 = !DILocation(line: 242, column: 9, scope: !3949)
!3956 = !DILocation(line: 242, column: 2, scope: !3949)
!3957 = distinct !DISubprogram(name: "bytes_to_chunksz", scope: !2563, file: !2563, line: 235, type: !3958, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !3960)
!3958 = !DISubroutineType(types: !3959)
!3959 = !{!3793, !2576, !204}
!3960 = !{!3961, !3962}
!3961 = !DILocalVariable(name: "h", arg: 1, scope: !3957, file: !2563, line: 235, type: !2576)
!3962 = !DILocalVariable(name: "bytes", arg: 2, scope: !3957, file: !2563, line: 235, type: !204)
!3963 = !DILocation(line: 0, scope: !3957)
!3964 = !DILocation(line: 237, column: 39, scope: !3957)
!3965 = !DILocation(line: 237, column: 9, scope: !3957)
!3966 = !DILocation(line: 237, column: 2, scope: !3957)
!3967 = distinct !DISubprogram(name: "chunksz", scope: !2563, file: !2563, line: 230, type: !3968, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !3970)
!3968 = !DISubroutineType(types: !3969)
!3969 = !{!3793, !204}
!3970 = !{!3971}
!3971 = !DILocalVariable(name: "bytes", arg: 1, scope: !3967, file: !2563, line: 230, type: !204)
!3972 = !DILocation(line: 0, scope: !3967)
!3973 = !DILocation(line: 232, column: 29, scope: !3967)
!3974 = !DILocation(line: 232, column: 35, scope: !3967)
!3975 = !DILocation(line: 232, column: 2, scope: !3967)
!3976 = distinct !DISubprogram(name: "set_chunk_size", scope: !2563, file: !2563, line: 172, type: !3977, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !3979)
!3977 = !DISubroutineType(types: !3978)
!3978 = !{null, !2576, !2581, !3793}
!3979 = !{!3980, !3981, !3982}
!3980 = !DILocalVariable(name: "h", arg: 1, scope: !3976, file: !2563, line: 172, type: !2576)
!3981 = !DILocalVariable(name: "c", arg: 2, scope: !3976, file: !2563, line: 172, type: !2581)
!3982 = !DILocalVariable(name: "size", arg: 3, scope: !3976, file: !2563, line: 172, type: !3793)
!3983 = !DILocation(line: 0, scope: !3976)
!3984 = !DILocation(line: 174, column: 38, scope: !3976)
!3985 = !DILocation(line: 174, column: 2, scope: !3976)
!3986 = !DILocation(line: 175, column: 1, scope: !3976)
!3987 = distinct !DISubprogram(name: "set_left_chunk_size", scope: !2563, file: !2563, line: 209, type: !3977, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !3988)
!3988 = !{!3989, !3990, !3991}
!3989 = !DILocalVariable(name: "h", arg: 1, scope: !3987, file: !2563, line: 209, type: !2576)
!3990 = !DILocalVariable(name: "c", arg: 2, scope: !3987, file: !2563, line: 209, type: !2581)
!3991 = !DILocalVariable(name: "size", arg: 3, scope: !3987, file: !2563, line: 210, type: !3793)
!3992 = !DILocation(line: 0, scope: !3987)
!3993 = !DILocation(line: 212, column: 2, scope: !3987)
!3994 = !DILocation(line: 213, column: 1, scope: !3987)
!3995 = distinct !DISubprogram(name: "free_list_remove_bidx", scope: !3667, file: !3667, line: 34, type: !3849, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !3996)
!3996 = !{!3997, !3998, !3999, !4000, !4001, !4004}
!3997 = !DILocalVariable(name: "h", arg: 1, scope: !3995, file: !3667, line: 34, type: !2576)
!3998 = !DILocalVariable(name: "c", arg: 2, scope: !3995, file: !3667, line: 34, type: !2581)
!3999 = !DILocalVariable(name: "bidx", arg: 3, scope: !3995, file: !3667, line: 34, type: !103)
!4000 = !DILocalVariable(name: "b", scope: !3995, file: !3667, line: 36, type: !3856)
!4001 = !DILocalVariable(name: "first", scope: !4002, file: !3667, line: 47, type: !2581)
!4002 = distinct !DILexicalBlock(scope: !4003, file: !3667, line: 46, column: 9)
!4003 = distinct !DILexicalBlock(scope: !3995, file: !3667, line: 42, column: 6)
!4004 = !DILocalVariable(name: "second", scope: !4002, file: !3667, line: 48, type: !2581)
!4005 = !DILocation(line: 0, scope: !3995)
!4006 = !DILocation(line: 36, column: 29, scope: !3995)
!4007 = !DILocation(line: 42, column: 6, scope: !4003)
!4008 = !DILocation(line: 42, column: 28, scope: !4003)
!4009 = !DILocation(line: 42, column: 6, scope: !3995)
!4010 = !DILocation(line: 44, column: 24, scope: !4011)
!4011 = distinct !DILexicalBlock(scope: !4003, file: !3667, line: 42, column: 34)
!4012 = !DILocation(line: 44, column: 23, scope: !4011)
!4013 = !DILocation(line: 44, column: 6, scope: !4011)
!4014 = !DILocation(line: 44, column: 20, scope: !4011)
!4015 = !DILocation(line: 45, column: 6, scope: !4011)
!4016 = !DILocation(line: 45, column: 11, scope: !4011)
!4017 = !DILocation(line: 46, column: 2, scope: !4011)
!4018 = !DILocation(line: 47, column: 21, scope: !4002)
!4019 = !DILocation(line: 0, scope: !4002)
!4020 = !DILocation(line: 50, column: 6, scope: !4002)
!4021 = !DILocation(line: 50, column: 11, scope: !4002)
!4022 = !DILocation(line: 51, column: 3, scope: !4002)
!4023 = !DILocation(line: 52, column: 3, scope: !4002)
!4024 = !DILocation(line: 58, column: 1, scope: !3995)
!4025 = distinct !DISubprogram(name: "next_free_chunk", scope: !2563, file: !2563, line: 182, type: !3752, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !4026)
!4026 = !{!4027, !4028}
!4027 = !DILocalVariable(name: "h", arg: 1, scope: !4025, file: !2563, line: 182, type: !2576)
!4028 = !DILocalVariable(name: "c", arg: 2, scope: !4025, file: !2563, line: 182, type: !2581)
!4029 = !DILocation(line: 0, scope: !4025)
!4030 = !DILocation(line: 184, column: 9, scope: !4025)
!4031 = !DILocation(line: 184, column: 2, scope: !4025)
!4032 = distinct !DISubprogram(name: "sys_heap_usable_size", scope: !3667, file: !3667, line: 200, type: !4033, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !4035)
!4033 = !DISubroutineType(types: !4034)
!4034 = !{!204, !3670, !102}
!4035 = !{!4036, !4037, !4038, !4039, !4040, !4041, !4042}
!4036 = !DILocalVariable(name: "heap", arg: 1, scope: !4032, file: !3667, line: 200, type: !3670)
!4037 = !DILocalVariable(name: "mem", arg: 2, scope: !4032, file: !3667, line: 200, type: !102)
!4038 = !DILocalVariable(name: "h", scope: !4032, file: !3667, line: 202, type: !2576)
!4039 = !DILocalVariable(name: "c", scope: !4032, file: !3667, line: 203, type: !2581)
!4040 = !DILocalVariable(name: "addr", scope: !4032, file: !3667, line: 204, type: !204)
!4041 = !DILocalVariable(name: "chunk_base", scope: !4032, file: !3667, line: 205, type: !204)
!4042 = !DILocalVariable(name: "chunk_sz", scope: !4032, file: !3667, line: 206, type: !204)
!4043 = !DILocation(line: 0, scope: !4032)
!4044 = !DILocation(line: 202, column: 27, scope: !4032)
!4045 = !DILocation(line: 203, column: 16, scope: !4032)
!4046 = !DILocation(line: 204, column: 16, scope: !4032)
!4047 = !DILocation(line: 205, column: 31, scope: !4032)
!4048 = !DILocation(line: 205, column: 22, scope: !4032)
!4049 = !DILocation(line: 206, column: 20, scope: !4032)
!4050 = !DILocation(line: 206, column: 37, scope: !4032)
!4051 = !DILocation(line: 208, column: 26, scope: !4032)
!4052 = !DILocation(line: 208, column: 18, scope: !4032)
!4053 = !DILocation(line: 208, column: 2, scope: !4032)
!4054 = distinct !DISubprogram(name: "sys_heap_alloc", scope: !3667, file: !3667, line: 263, type: !4055, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !4057)
!4055 = !DISubroutineType(types: !4056)
!4056 = !{!102, !3670, !204}
!4057 = !{!4058, !4059, !4060, !4061, !4062, !4063}
!4058 = !DILocalVariable(name: "heap", arg: 1, scope: !4054, file: !3667, line: 263, type: !3670)
!4059 = !DILocalVariable(name: "bytes", arg: 2, scope: !4054, file: !3667, line: 263, type: !204)
!4060 = !DILocalVariable(name: "h", scope: !4054, file: !3667, line: 265, type: !2576)
!4061 = !DILocalVariable(name: "mem", scope: !4054, file: !3667, line: 266, type: !102)
!4062 = !DILocalVariable(name: "chunk_sz", scope: !4054, file: !3667, line: 272, type: !3793)
!4063 = !DILocalVariable(name: "c", scope: !4054, file: !3667, line: 273, type: !2581)
!4064 = !DILocation(line: 0, scope: !4054)
!4065 = !DILocation(line: 265, column: 27, scope: !4054)
!4066 = !DILocation(line: 268, column: 12, scope: !4067)
!4067 = distinct !DILexicalBlock(scope: !4054, file: !3667, line: 268, column: 6)
!4068 = !DILocation(line: 268, column: 18, scope: !4067)
!4069 = !DILocation(line: 268, column: 21, scope: !4067)
!4070 = !DILocation(line: 268, column: 6, scope: !4054)
!4071 = !DILocation(line: 272, column: 23, scope: !4054)
!4072 = !DILocation(line: 273, column: 16, scope: !4054)
!4073 = !DILocation(line: 274, column: 8, scope: !4074)
!4074 = distinct !DILexicalBlock(scope: !4054, file: !3667, line: 274, column: 6)
!4075 = !DILocation(line: 274, column: 6, scope: !4054)
!4076 = !DILocation(line: 279, column: 6, scope: !4077)
!4077 = distinct !DILexicalBlock(scope: !4054, file: !3667, line: 279, column: 6)
!4078 = !DILocation(line: 279, column: 23, scope: !4077)
!4079 = !DILocation(line: 279, column: 6, scope: !4054)
!4080 = !DILocation(line: 280, column: 24, scope: !4081)
!4081 = distinct !DILexicalBlock(scope: !4077, file: !3667, line: 279, column: 35)
!4082 = !DILocation(line: 280, column: 3, scope: !4081)
!4083 = !DILocation(line: 281, column: 3, scope: !4081)
!4084 = !DILocation(line: 282, column: 2, scope: !4081)
!4085 = !DILocation(line: 284, column: 2, scope: !4054)
!4086 = !DILocation(line: 286, column: 8, scope: !4054)
!4087 = !DILocation(line: 298, column: 2, scope: !4054)
!4088 = !DILocation(line: 299, column: 1, scope: !4054)
!4089 = distinct !DISubprogram(name: "size_too_big", scope: !2563, file: !2563, line: 256, type: !4090, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !4092)
!4090 = !DISubroutineType(types: !4091)
!4091 = !{!157, !2576, !204}
!4092 = !{!4093, !4094}
!4093 = !DILocalVariable(name: "h", arg: 1, scope: !4089, file: !2563, line: 256, type: !2576)
!4094 = !DILocalVariable(name: "bytes", arg: 2, scope: !4089, file: !2563, line: 256, type: !204)
!4095 = !DILocation(line: 0, scope: !4089)
!4096 = !DILocation(line: 262, column: 16, scope: !4089)
!4097 = !DILocation(line: 262, column: 36, scope: !4089)
!4098 = !DILocation(line: 262, column: 30, scope: !4089)
!4099 = !DILocation(line: 262, column: 2, scope: !4089)
!4100 = distinct !DISubprogram(name: "alloc_chunk", scope: !3667, file: !3667, line: 211, type: !4101, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !4103)
!4101 = !DISubroutineType(types: !4102)
!4102 = !{!2581, !2576, !3793}
!4103 = !{!4104, !4105, !4106, !4107, !4108, !4111, !4112, !4114, !4115, !4118}
!4104 = !DILocalVariable(name: "h", arg: 1, scope: !4100, file: !3667, line: 211, type: !2576)
!4105 = !DILocalVariable(name: "sz", arg: 2, scope: !4100, file: !3667, line: 211, type: !3793)
!4106 = !DILocalVariable(name: "bi", scope: !4100, file: !3667, line: 213, type: !103)
!4107 = !DILocalVariable(name: "b", scope: !4100, file: !3667, line: 214, type: !3856)
!4108 = !DILocalVariable(name: "first", scope: !4109, file: !3667, line: 233, type: !2581)
!4109 = distinct !DILexicalBlock(scope: !4110, file: !3667, line: 232, column: 15)
!4110 = distinct !DILexicalBlock(scope: !4100, file: !3667, line: 232, column: 6)
!4111 = !DILocalVariable(name: "i", scope: !4109, file: !3667, line: 234, type: !103)
!4112 = !DILocalVariable(name: "c", scope: !4113, file: !3667, line: 236, type: !2581)
!4113 = distinct !DILexicalBlock(scope: !4109, file: !3667, line: 235, column: 6)
!4114 = !DILocalVariable(name: "bmask", scope: !4100, file: !3667, line: 249, type: !121)
!4115 = !DILocalVariable(name: "minbucket", scope: !4116, file: !3667, line: 252, type: !103)
!4116 = distinct !DILexicalBlock(scope: !4117, file: !3667, line: 251, column: 19)
!4117 = distinct !DILexicalBlock(scope: !4100, file: !3667, line: 251, column: 6)
!4118 = !DILocalVariable(name: "c", scope: !4116, file: !3667, line: 253, type: !2581)
!4119 = !DILocation(line: 0, scope: !4100)
!4120 = !DILocation(line: 213, column: 11, scope: !4100)
!4121 = !DILocation(line: 232, column: 9, scope: !4110)
!4122 = !DILocation(line: 232, column: 6, scope: !4110)
!4123 = !DILocation(line: 232, column: 6, scope: !4100)
!4124 = !DILocation(line: 236, column: 21, scope: !4113)
!4125 = !DILocation(line: 0, scope: !4109)
!4126 = !DILocation(line: 0, scope: !4113)
!4127 = !DILocation(line: 237, column: 8, scope: !4128)
!4128 = distinct !DILexicalBlock(scope: !4113, file: !3667, line: 237, column: 8)
!4129 = !DILocation(line: 237, column: 25, scope: !4128)
!4130 = !DILocation(line: 237, column: 8, scope: !4113)
!4131 = !DILocation(line: 238, column: 5, scope: !4132)
!4132 = distinct !DILexicalBlock(scope: !4128, file: !3667, line: 237, column: 32)
!4133 = !DILocation(line: 241, column: 14, scope: !4113)
!4134 = !DILocation(line: 241, column: 12, scope: !4113)
!4135 = !DILocation(line: 243, column: 12, scope: !4109)
!4136 = !DILocation(line: 243, column: 16, scope: !4109)
!4137 = distinct !{!4137, !4138, !4139}
!4138 = !DILocation(line: 235, column: 3, scope: !4109)
!4139 = !DILocation(line: 243, column: 35, scope: !4109)
!4140 = !DILocation(line: 249, column: 22, scope: !4100)
!4141 = !DILocation(line: 249, column: 39, scope: !4100)
!4142 = !DILocation(line: 249, column: 36, scope: !4100)
!4143 = !DILocation(line: 251, column: 12, scope: !4117)
!4144 = !DILocation(line: 251, column: 6, scope: !4100)
!4145 = !DILocation(line: 252, column: 19, scope: !4116)
!4146 = !DILocation(line: 0, scope: !4116)
!4147 = !DILocation(line: 253, column: 39, scope: !4116)
!4148 = !DILocation(line: 255, column: 3, scope: !4116)
!4149 = !DILocation(line: 261, column: 1, scope: !4100)
!4150 = distinct !DISubprogram(name: "split_chunks", scope: !3667, file: !3667, line: 109, type: !3786, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !4151)
!4151 = !{!4152, !4153, !4154, !4155, !4156, !4157}
!4152 = !DILocalVariable(name: "h", arg: 1, scope: !4150, file: !3667, line: 109, type: !2576)
!4153 = !DILocalVariable(name: "lc", arg: 2, scope: !4150, file: !3667, line: 109, type: !2581)
!4154 = !DILocalVariable(name: "rc", arg: 3, scope: !4150, file: !3667, line: 109, type: !2581)
!4155 = !DILocalVariable(name: "sz0", scope: !4150, file: !3667, line: 114, type: !3793)
!4156 = !DILocalVariable(name: "lsz", scope: !4150, file: !3667, line: 115, type: !3793)
!4157 = !DILocalVariable(name: "rsz", scope: !4150, file: !3667, line: 116, type: !3793)
!4158 = !DILocation(line: 0, scope: !4150)
!4159 = !DILocation(line: 114, column: 18, scope: !4150)
!4160 = !DILocation(line: 115, column: 21, scope: !4150)
!4161 = !DILocation(line: 116, column: 22, scope: !4150)
!4162 = !DILocation(line: 118, column: 2, scope: !4150)
!4163 = !DILocation(line: 119, column: 2, scope: !4150)
!4164 = !DILocation(line: 120, column: 2, scope: !4150)
!4165 = !DILocation(line: 121, column: 25, scope: !4150)
!4166 = !DILocation(line: 121, column: 2, scope: !4150)
!4167 = !DILocation(line: 122, column: 1, scope: !4150)
!4168 = distinct !DISubprogram(name: "chunk_mem", scope: !3667, file: !3667, line: 24, type: !4169, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !4171)
!4169 = !DISubroutineType(types: !4170)
!4170 = !{!102, !2576, !2581}
!4171 = !{!4172, !4173, !4174, !4175}
!4172 = !DILocalVariable(name: "h", arg: 1, scope: !4168, file: !3667, line: 24, type: !2576)
!4173 = !DILocalVariable(name: "c", arg: 2, scope: !4168, file: !3667, line: 24, type: !2581)
!4174 = !DILocalVariable(name: "buf", scope: !4168, file: !3667, line: 26, type: !2570)
!4175 = !DILocalVariable(name: "ret", scope: !4168, file: !3667, line: 27, type: !267)
!4176 = !DILocation(line: 0, scope: !4168)
!4177 = !DILocation(line: 26, column: 22, scope: !4168)
!4178 = !DILocation(line: 27, column: 38, scope: !4168)
!4179 = !DILocation(line: 31, column: 2, scope: !4168)
!4180 = distinct !DISubprogram(name: "sys_heap_aligned_alloc", scope: !3667, file: !3667, line: 301, type: !4181, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !4183)
!4181 = !DISubroutineType(types: !4182)
!4182 = !{!102, !3670, !204, !204}
!4183 = !{!4184, !4185, !4186, !4187, !4188, !4189, !4190, !4191, !4192, !4193, !4194, !4195}
!4184 = !DILocalVariable(name: "heap", arg: 1, scope: !4180, file: !3667, line: 301, type: !3670)
!4185 = !DILocalVariable(name: "align", arg: 2, scope: !4180, file: !3667, line: 301, type: !204)
!4186 = !DILocalVariable(name: "bytes", arg: 3, scope: !4180, file: !3667, line: 301, type: !204)
!4187 = !DILocalVariable(name: "h", scope: !4180, file: !3667, line: 303, type: !2576)
!4188 = !DILocalVariable(name: "gap", scope: !4180, file: !3667, line: 304, type: !204)
!4189 = !DILocalVariable(name: "rew", scope: !4180, file: !3667, line: 304, type: !204)
!4190 = !DILocalVariable(name: "padded_sz", scope: !4180, file: !3667, line: 335, type: !3793)
!4191 = !DILocalVariable(name: "c0", scope: !4180, file: !3667, line: 336, type: !2581)
!4192 = !DILocalVariable(name: "mem", scope: !4180, file: !3667, line: 341, type: !267)
!4193 = !DILocalVariable(name: "end", scope: !4180, file: !3667, line: 345, type: !2570)
!4194 = !DILocalVariable(name: "c", scope: !4180, file: !3667, line: 348, type: !2581)
!4195 = !DILocalVariable(name: "c_end", scope: !4180, file: !3667, line: 349, type: !2581)
!4196 = !DILocation(line: 0, scope: !4180)
!4197 = !DILocation(line: 303, column: 27, scope: !4180)
!4198 = !DILocation(line: 313, column: 16, scope: !4180)
!4199 = !DILocation(line: 313, column: 14, scope: !4180)
!4200 = !DILocation(line: 314, column: 12, scope: !4201)
!4201 = distinct !DILexicalBlock(scope: !4180, file: !3667, line: 314, column: 6)
!4202 = !DILocation(line: 314, column: 6, scope: !4180)
!4203 = !DILocation(line: 315, column: 9, scope: !4204)
!4204 = distinct !DILexicalBlock(scope: !4201, file: !3667, line: 314, column: 20)
!4205 = !DILocation(line: 316, column: 9, scope: !4204)
!4206 = !DILocation(line: 318, column: 13, scope: !4207)
!4207 = distinct !DILexicalBlock(scope: !4208, file: !3667, line: 318, column: 7)
!4208 = distinct !DILexicalBlock(scope: !4201, file: !3667, line: 317, column: 9)
!4209 = !DILocation(line: 318, column: 7, scope: !4208)
!4210 = !DILocation(line: 319, column: 11, scope: !4211)
!4211 = distinct !DILexicalBlock(scope: !4207, file: !3667, line: 318, column: 39)
!4212 = !DILocation(line: 319, column: 4, scope: !4211)
!4213 = !DILocation(line: 0, scope: !4201)
!4214 = !DILocation(line: 326, column: 12, scope: !4215)
!4215 = distinct !DILexicalBlock(scope: !4180, file: !3667, line: 326, column: 6)
!4216 = !DILocation(line: 326, column: 17, scope: !4215)
!4217 = !DILocation(line: 326, column: 20, scope: !4215)
!4218 = !DILocation(line: 326, column: 6, scope: !4180)
!4219 = !DILocation(line: 335, column: 50, scope: !4180)
!4220 = !DILocation(line: 335, column: 58, scope: !4180)
!4221 = !DILocation(line: 335, column: 24, scope: !4180)
!4222 = !DILocation(line: 336, column: 17, scope: !4180)
!4223 = !DILocation(line: 338, column: 9, scope: !4224)
!4224 = distinct !DILexicalBlock(scope: !4180, file: !3667, line: 338, column: 6)
!4225 = !DILocation(line: 338, column: 6, scope: !4180)
!4226 = !DILocation(line: 341, column: 17, scope: !4180)
!4227 = !DILocation(line: 344, column: 20, scope: !4180)
!4228 = !DILocation(line: 344, column: 8, scope: !4180)
!4229 = !DILocation(line: 344, column: 47, scope: !4180)
!4230 = !DILocation(line: 345, column: 39, scope: !4180)
!4231 = !DILocation(line: 348, column: 16, scope: !4180)
!4232 = !DILocation(line: 349, column: 26, scope: !4180)
!4233 = !DILocation(line: 349, column: 24, scope: !4180)
!4234 = !DILocation(line: 353, column: 8, scope: !4235)
!4235 = distinct !DILexicalBlock(scope: !4180, file: !3667, line: 353, column: 6)
!4236 = !DILocation(line: 353, column: 6, scope: !4180)
!4237 = !DILocation(line: 354, column: 3, scope: !4238)
!4238 = distinct !DILexicalBlock(scope: !4235, file: !3667, line: 353, column: 14)
!4239 = !DILocation(line: 355, column: 3, scope: !4238)
!4240 = !DILocation(line: 356, column: 2, scope: !4238)
!4241 = !DILocation(line: 359, column: 6, scope: !4242)
!4242 = distinct !DILexicalBlock(scope: !4180, file: !3667, line: 359, column: 6)
!4243 = !DILocation(line: 359, column: 24, scope: !4242)
!4244 = !DILocation(line: 359, column: 6, scope: !4180)
!4245 = !DILocation(line: 360, column: 3, scope: !4246)
!4246 = distinct !DILexicalBlock(scope: !4242, file: !3667, line: 359, column: 33)
!4247 = !DILocation(line: 361, column: 3, scope: !4246)
!4248 = !DILocation(line: 362, column: 2, scope: !4246)
!4249 = !DILocation(line: 364, column: 2, scope: !4180)
!4250 = !DILocation(line: 377, column: 1, scope: !4180)
!4251 = distinct !DISubprogram(name: "sys_heap_aligned_realloc", scope: !3667, file: !3667, line: 379, type: !4252, scopeLine: 381, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !4254)
!4252 = !DISubroutineType(types: !4253)
!4253 = !{!102, !3670, !102, !204, !204}
!4254 = !{!4255, !4256, !4257, !4258, !4259, !4260, !4261, !4262, !4263, !4264, !4270, !4271}
!4255 = !DILocalVariable(name: "heap", arg: 1, scope: !4251, file: !3667, line: 379, type: !3670)
!4256 = !DILocalVariable(name: "ptr", arg: 2, scope: !4251, file: !3667, line: 379, type: !102)
!4257 = !DILocalVariable(name: "align", arg: 3, scope: !4251, file: !3667, line: 380, type: !204)
!4258 = !DILocalVariable(name: "bytes", arg: 4, scope: !4251, file: !3667, line: 380, type: !204)
!4259 = !DILocalVariable(name: "h", scope: !4251, file: !3667, line: 382, type: !2576)
!4260 = !DILocalVariable(name: "c", scope: !4251, file: !3667, line: 399, type: !2581)
!4261 = !DILocalVariable(name: "rc", scope: !4251, file: !3667, line: 400, type: !2581)
!4262 = !DILocalVariable(name: "align_gap", scope: !4251, file: !3667, line: 401, type: !204)
!4263 = !DILocalVariable(name: "chunks_need", scope: !4251, file: !3667, line: 402, type: !3793)
!4264 = !DILocalVariable(name: "split_size", scope: !4265, file: !3667, line: 435, type: !3793)
!4265 = distinct !DILexicalBlock(scope: !4266, file: !3667, line: 433, column: 61)
!4266 = distinct !DILexicalBlock(scope: !4267, file: !3667, line: 432, column: 13)
!4267 = distinct !DILexicalBlock(scope: !4268, file: !3667, line: 409, column: 13)
!4268 = distinct !DILexicalBlock(scope: !4269, file: !3667, line: 406, column: 13)
!4269 = distinct !DILexicalBlock(scope: !4251, file: !3667, line: 404, column: 6)
!4270 = !DILocalVariable(name: "ptr2", scope: !4251, file: !3667, line: 474, type: !102)
!4271 = !DILocalVariable(name: "prev_size", scope: !4272, file: !3667, line: 477, type: !204)
!4272 = distinct !DILexicalBlock(scope: !4273, file: !3667, line: 476, column: 20)
!4273 = distinct !DILexicalBlock(scope: !4251, file: !3667, line: 476, column: 6)
!4274 = !DILocation(line: 0, scope: !4251)
!4275 = !DILocation(line: 382, column: 27, scope: !4251)
!4276 = !DILocation(line: 385, column: 10, scope: !4277)
!4277 = distinct !DILexicalBlock(scope: !4251, file: !3667, line: 385, column: 6)
!4278 = !DILocation(line: 385, column: 6, scope: !4251)
!4279 = !DILocation(line: 386, column: 10, scope: !4280)
!4280 = distinct !DILexicalBlock(scope: !4277, file: !3667, line: 385, column: 19)
!4281 = !DILocation(line: 386, column: 3, scope: !4280)
!4282 = !DILocation(line: 388, column: 12, scope: !4283)
!4283 = distinct !DILexicalBlock(scope: !4251, file: !3667, line: 388, column: 6)
!4284 = !DILocation(line: 388, column: 6, scope: !4251)
!4285 = !DILocation(line: 389, column: 3, scope: !4286)
!4286 = distinct !DILexicalBlock(scope: !4283, file: !3667, line: 388, column: 18)
!4287 = !DILocation(line: 390, column: 3, scope: !4286)
!4288 = !DILocation(line: 395, column: 6, scope: !4289)
!4289 = distinct !DILexicalBlock(scope: !4251, file: !3667, line: 395, column: 6)
!4290 = !DILocation(line: 395, column: 6, scope: !4251)
!4291 = !DILocation(line: 399, column: 16, scope: !4251)
!4292 = !DILocation(line: 400, column: 17, scope: !4251)
!4293 = !DILocation(line: 401, column: 49, scope: !4251)
!4294 = !DILocation(line: 401, column: 36, scope: !4251)
!4295 = !DILocation(line: 402, column: 52, scope: !4251)
!4296 = !DILocation(line: 402, column: 26, scope: !4251)
!4297 = !DILocation(line: 404, column: 6, scope: !4269)
!4298 = !DILocation(line: 404, column: 12, scope: !4269)
!4299 = !DILocation(line: 404, column: 40, scope: !4269)
!4300 = !DILocation(line: 404, column: 31, scope: !4269)
!4301 = !DILocation(line: 404, column: 6, scope: !4251)
!4302 = !DILocation(line: 406, column: 13, scope: !4268)
!4303 = !DILocation(line: 406, column: 30, scope: !4268)
!4304 = !DILocation(line: 406, column: 13, scope: !4269)
!4305 = !DILocation(line: 409, column: 30, scope: !4267)
!4306 = !DILocation(line: 409, column: 13, scope: !4268)
!4307 = !DILocation(line: 420, column: 24, scope: !4308)
!4308 = distinct !DILexicalBlock(scope: !4267, file: !3667, line: 409, column: 45)
!4309 = !DILocation(line: 420, column: 3, scope: !4308)
!4310 = !DILocation(line: 421, column: 3, scope: !4308)
!4311 = !DILocation(line: 422, column: 3, scope: !4308)
!4312 = !DILocation(line: 431, column: 3, scope: !4308)
!4313 = !DILocation(line: 432, column: 14, scope: !4266)
!4314 = !DILocation(line: 432, column: 32, scope: !4266)
!4315 = !DILocation(line: 433, column: 26, scope: !4266)
!4316 = !DILocation(line: 433, column: 24, scope: !4266)
!4317 = !DILocation(line: 433, column: 44, scope: !4266)
!4318 = !DILocation(line: 432, column: 13, scope: !4267)
!4319 = !DILocation(line: 435, column: 38, scope: !4265)
!4320 = !DILocation(line: 0, scope: !4265)
!4321 = !DILocation(line: 445, column: 3, scope: !4265)
!4322 = !DILocation(line: 447, column: 20, scope: !4323)
!4323 = distinct !DILexicalBlock(scope: !4265, file: !3667, line: 447, column: 7)
!4324 = !DILocation(line: 447, column: 18, scope: !4323)
!4325 = !DILocation(line: 447, column: 7, scope: !4265)
!4326 = !DILocation(line: 448, column: 27, scope: !4327)
!4327 = distinct !DILexicalBlock(scope: !4323, file: !3667, line: 447, column: 39)
!4328 = !DILocation(line: 448, column: 4, scope: !4327)
!4329 = !DILocation(line: 449, column: 4, scope: !4327)
!4330 = !DILocation(line: 450, column: 3, scope: !4327)
!4331 = !DILocation(line: 452, column: 3, scope: !4265)
!4332 = !DILocation(line: 453, column: 3, scope: !4265)
!4333 = !DILocation(line: 474, column: 15, scope: !4251)
!4334 = !DILocation(line: 476, column: 11, scope: !4273)
!4335 = !DILocation(line: 476, column: 6, scope: !4251)
!4336 = !DILocation(line: 477, column: 42, scope: !4272)
!4337 = !DILocation(line: 477, column: 22, scope: !4272)
!4338 = !DILocation(line: 477, column: 60, scope: !4272)
!4339 = !DILocation(line: 0, scope: !4272)
!4340 = !DILocation(line: 479, column: 21, scope: !4272)
!4341 = !DILocation(line: 479, column: 3, scope: !4272)
!4342 = !DILocation(line: 480, column: 3, scope: !4272)
!4343 = !DILocation(line: 481, column: 2, scope: !4272)
!4344 = !DILocation(line: 483, column: 1, scope: !4251)
!4345 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !2563, file: !2563, line: 245, type: !4346, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !4348)
!4346 = !DISubroutineType(types: !4347)
!4347 = !{!204, !2576, !3793}
!4348 = !{!4349, !4350}
!4349 = !DILocalVariable(name: "h", arg: 1, scope: !4345, file: !2563, line: 245, type: !2576)
!4350 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !4345, file: !2563, line: 245, type: !3793)
!4351 = !DILocation(line: 0, scope: !4345)
!4352 = !DILocation(line: 247, column: 20, scope: !4345)
!4353 = !DILocation(line: 247, column: 33, scope: !4345)
!4354 = !DILocation(line: 247, column: 2, scope: !4345)
!4355 = distinct !DISubprogram(name: "sys_heap_init", scope: !3667, file: !3667, line: 485, type: !4356, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !4358)
!4356 = !DISubroutineType(types: !4357)
!4357 = !{null, !3670, !102, !204}
!4358 = !{!4359, !4360, !4361, !4362, !4363, !4364, !4365, !4366, !4367, !4368}
!4359 = !DILocalVariable(name: "heap", arg: 1, scope: !4355, file: !3667, line: 485, type: !3670)
!4360 = !DILocalVariable(name: "mem", arg: 2, scope: !4355, file: !3667, line: 485, type: !102)
!4361 = !DILocalVariable(name: "bytes", arg: 3, scope: !4355, file: !3667, line: 485, type: !204)
!4362 = !DILocalVariable(name: "addr", scope: !4355, file: !3667, line: 502, type: !22)
!4363 = !DILocalVariable(name: "end", scope: !4355, file: !3667, line: 503, type: !22)
!4364 = !DILocalVariable(name: "heap_sz", scope: !4355, file: !3667, line: 504, type: !3793)
!4365 = !DILocalVariable(name: "h", scope: !4355, file: !3667, line: 509, type: !2576)
!4366 = !DILocalVariable(name: "nb_buckets", scope: !4355, file: !3667, line: 520, type: !103)
!4367 = !DILocalVariable(name: "chunk0_size", scope: !4355, file: !3667, line: 521, type: !3793)
!4368 = !DILocalVariable(name: "i", scope: !4369, file: !3667, line: 526, type: !103)
!4369 = distinct !DILexicalBlock(scope: !4355, file: !3667, line: 526, column: 2)
!4370 = !DILocation(line: 0, scope: !4355)
!4371 = !DILocation(line: 499, column: 8, scope: !4355)
!4372 = !DILocation(line: 502, column: 19, scope: !4355)
!4373 = !DILocation(line: 503, column: 18, scope: !4355)
!4374 = !DILocation(line: 504, column: 27, scope: !4355)
!4375 = !DILocation(line: 504, column: 35, scope: !4355)
!4376 = !DILocation(line: 509, column: 21, scope: !4355)
!4377 = !DILocation(line: 510, column: 8, scope: !4355)
!4378 = !DILocation(line: 510, column: 13, scope: !4355)
!4379 = !DILocation(line: 511, column: 5, scope: !4355)
!4380 = !DILocation(line: 511, column: 15, scope: !4355)
!4381 = !DILocation(line: 512, column: 5, scope: !4355)
!4382 = !DILocation(line: 512, column: 19, scope: !4355)
!4383 = !DILocation(line: 520, column: 19, scope: !4355)
!4384 = !DILocation(line: 522, column: 21, scope: !4355)
!4385 = !DILocation(line: 521, column: 56, scope: !4355)
!4386 = !DILocation(line: 521, column: 26, scope: !4355)
!4387 = !DILocation(line: 0, scope: !4369)
!4388 = !DILocation(line: 526, column: 20, scope: !4389)
!4389 = distinct !DILexicalBlock(scope: !4369, file: !3667, line: 526, column: 2)
!4390 = !DILocation(line: 526, column: 2, scope: !4369)
!4391 = !DILocation(line: 531, column: 2, scope: !4355)
!4392 = !DILocation(line: 532, column: 2, scope: !4355)
!4393 = !DILocation(line: 533, column: 2, scope: !4355)
!4394 = !DILocation(line: 536, column: 41, scope: !4355)
!4395 = !DILocation(line: 536, column: 2, scope: !4355)
!4396 = !DILocation(line: 537, column: 2, scope: !4355)
!4397 = !DILocation(line: 540, column: 2, scope: !4355)
!4398 = !DILocation(line: 541, column: 2, scope: !4355)
!4399 = !DILocation(line: 542, column: 2, scope: !4355)
!4400 = !DILocation(line: 544, column: 2, scope: !4355)
!4401 = !DILocation(line: 545, column: 1, scope: !4355)
!4402 = !DILocation(line: 527, column: 17, scope: !4403)
!4403 = distinct !DILexicalBlock(scope: !4389, file: !3667, line: 526, column: 39)
!4404 = !DILocation(line: 527, column: 22, scope: !4403)
!4405 = !DILocation(line: 526, column: 35, scope: !4389)
!4406 = distinct !{!4406, !4390, !4407}
!4407 = !DILocation(line: 528, column: 2, scope: !4369)
!4408 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2596, file: !2596, line: 1338, type: !4409, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2592, retainedNodes: !4417)
!4409 = !DISubroutineType(types: !4410)
!4410 = !{!103, !3397, !102, !144, !4411, !121}
!4411 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3363, line: 99, baseType: !4412)
!4412 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3363, line: 40, baseType: !4413)
!4413 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2596, baseType: !4414)
!4414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4415)
!4415 = !{!4416}
!4416 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4414, file: !2596, baseType: !102, size: 32)
!4417 = !{!4418, !4419, !4420, !4421, !4422, !4423, !4427, !4428, !4429, !4431, !4436, !4481, !4484, !4487, !4488, !4489, !4490, !4491, !4492, !4493, !4496, !4497, !4498, !4502, !4505, !4507, !4510, !4511, !4512, !4517, !4523, !4526, !4530, !4536, !4540, !4543, !4545, !4548}
!4418 = !DILocalVariable(name: "out", arg: 1, scope: !4408, file: !2596, line: 1338, type: !3397)
!4419 = !DILocalVariable(name: "ctx", arg: 2, scope: !4408, file: !2596, line: 1338, type: !102)
!4420 = !DILocalVariable(name: "fp", arg: 3, scope: !4408, file: !2596, line: 1338, type: !144)
!4421 = !DILocalVariable(name: "ap", arg: 4, scope: !4408, file: !2596, line: 1339, type: !4411)
!4422 = !DILocalVariable(name: "flags", arg: 5, scope: !4408, file: !2596, line: 1339, type: !121)
!4423 = !DILocalVariable(name: "buf", scope: !4408, file: !2596, line: 1341, type: !4424)
!4424 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, size: 176, elements: !4425)
!4425 = !{!4426}
!4426 = !DISubrange(count: 22)
!4427 = !DILocalVariable(name: "count", scope: !4408, file: !2596, line: 1342, type: !204)
!4428 = !DILocalVariable(name: "sint", scope: !4408, file: !2596, line: 1343, type: !2615)
!4429 = !DILocalVariable(name: "tagged_ap", scope: !4408, file: !2596, line: 1345, type: !4430)
!4430 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !157)
!4431 = !DILocalVariable(name: "rc", scope: !4432, file: !2596, line: 1377, type: !103)
!4432 = distinct !DILexicalBlock(scope: !4433, file: !2596, line: 1377, column: 4)
!4433 = distinct !DILexicalBlock(scope: !4434, file: !2596, line: 1376, column: 19)
!4434 = distinct !DILexicalBlock(scope: !4435, file: !2596, line: 1376, column: 7)
!4435 = distinct !DILexicalBlock(scope: !4408, file: !2596, line: 1375, column: 19)
!4436 = !DILocalVariable(name: "state", scope: !4435, file: !2596, line: 1395, type: !4437)
!4437 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4408, file: !2596, line: 1392, size: 192, elements: !4438)
!4438 = !{!4439, !4449}
!4439 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4437, file: !2596, line: 1393, baseType: !4440, size: 64)
!4440 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2596, line: 166, size: 64, elements: !4441)
!4441 = !{!4442, !4443, !4444, !4446, !4448}
!4442 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4440, file: !2596, line: 168, baseType: !2615, size: 64)
!4443 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4440, file: !2596, line: 171, baseType: !2618, size: 64)
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4440, file: !2596, line: 174, baseType: !4445, size: 64)
!4445 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4440, file: !2596, line: 177, baseType: !4447, size: 64)
!4447 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!4448 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4440, file: !2596, line: 180, baseType: !102, size: 32)
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4437, file: !2596, line: 1394, baseType: !4450, size: 96, offset: 64)
!4450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2596, line: 189, size: 96, elements: !4451)
!4451 = !{!4452, !4453, !4454, !4455, !4456, !4457, !4458, !4459, !4460, !4461, !4462, !4463, !4464, !4465, !4466, !4467, !4468, !4469, !4470, !4471, !4476}
!4452 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4450, file: !2596, line: 191, baseType: !157, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4453 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4450, file: !2596, line: 194, baseType: !157, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4454 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4450, file: !2596, line: 197, baseType: !157, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4455 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4450, file: !2596, line: 200, baseType: !157, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4456 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4450, file: !2596, line: 203, baseType: !157, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4450, file: !2596, line: 206, baseType: !157, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4450, file: !2596, line: 209, baseType: !157, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4450, file: !2596, line: 212, baseType: !157, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4450, file: !2596, line: 219, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4450, file: !2596, line: 222, baseType: !157, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4462 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4450, file: !2596, line: 229, baseType: !157, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4450, file: !2596, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4450, file: !2596, line: 238, baseType: !157, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4450, file: !2596, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4450, file: !2596, line: 244, baseType: !157, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4450, file: !2596, line: 247, baseType: !157, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4450, file: !2596, line: 252, baseType: !157, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4450, file: !2596, line: 257, baseType: !157, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4470 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4450, file: !2596, line: 260, baseType: !155, size: 8, offset: 24)
!4471 = !DIDerivedType(tag: DW_TAG_member, scope: !4450, file: !2596, line: 262, baseType: !4472, size: 32, offset: 32)
!4472 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4450, file: !2596, line: 262, size: 32, elements: !4473)
!4473 = !{!4474, !4475}
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4472, file: !2596, line: 267, baseType: !103, size: 32)
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4472, file: !2596, line: 289, baseType: !103, size: 32)
!4476 = !DIDerivedType(tag: DW_TAG_member, scope: !4450, file: !2596, line: 292, baseType: !4477, size: 32, offset: 64)
!4477 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4450, file: !2596, line: 292, size: 32, elements: !4478)
!4478 = !{!4479, !4480}
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4477, file: !2596, line: 297, baseType: !103, size: 32)
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4477, file: !2596, line: 306, baseType: !103, size: 32)
!4481 = !DILocalVariable(name: "conv", scope: !4435, file: !2596, line: 1400, type: !4482)
!4482 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4483)
!4483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4450, size: 32)
!4484 = !DILocalVariable(name: "value", scope: !4435, file: !2596, line: 1401, type: !4485)
!4485 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4486)
!4486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4440, size: 32)
!4487 = !DILocalVariable(name: "sp", scope: !4435, file: !2596, line: 1402, type: !144)
!4488 = !DILocalVariable(name: "width", scope: !4435, file: !2596, line: 1403, type: !103)
!4489 = !DILocalVariable(name: "precision", scope: !4435, file: !2596, line: 1404, type: !103)
!4490 = !DILocalVariable(name: "bps", scope: !4435, file: !2596, line: 1405, type: !144)
!4491 = !DILocalVariable(name: "bpe", scope: !4435, file: !2596, line: 1406, type: !144)
!4492 = !DILocalVariable(name: "sign", scope: !4435, file: !2596, line: 1407, type: !146)
!4493 = !DILocalVariable(name: "arg", scope: !4494, file: !2596, line: 1432, type: !103)
!4494 = distinct !DILexicalBlock(scope: !4495, file: !2596, line: 1431, column: 24)
!4495 = distinct !DILexicalBlock(scope: !4435, file: !2596, line: 1431, column: 7)
!4496 = !DILocalVariable(name: "specifier_cat", scope: !4435, file: !2596, line: 1468, type: !2595)
!4497 = !DILocalVariable(name: "length_mod", scope: !4435, file: !2596, line: 1470, type: !2603)
!4498 = !DILocalVariable(name: "rc", scope: !4499, file: !2596, line: 1575, type: !103)
!4499 = distinct !DILexicalBlock(scope: !4500, file: !2596, line: 1575, column: 4)
!4500 = distinct !DILexicalBlock(scope: !4501, file: !2596, line: 1574, column: 43)
!4501 = distinct !DILexicalBlock(scope: !4435, file: !2596, line: 1574, column: 7)
!4502 = !DILocalVariable(name: "rc", scope: !4503, file: !2596, line: 1584, type: !103)
!4503 = distinct !DILexicalBlock(scope: !4504, file: !2596, line: 1584, column: 4)
!4504 = distinct !DILexicalBlock(scope: !4435, file: !2596, line: 1582, column: 28)
!4505 = !DILocalVariable(name: "len", scope: !4506, file: !2596, line: 1589, type: !204)
!4506 = distinct !DILexicalBlock(scope: !4504, file: !2596, line: 1586, column: 13)
!4507 = !DILocalVariable(name: "len", scope: !4508, file: !2596, line: 1641, type: !204)
!4508 = distinct !DILexicalBlock(scope: !4509, file: !2596, line: 1640, column: 24)
!4509 = distinct !DILexicalBlock(scope: !4504, file: !2596, line: 1640, column: 8)
!4510 = !DILocalVariable(name: "nj_len", scope: !4435, file: !2596, line: 1722, type: !204)
!4511 = !DILocalVariable(name: "pad_len", scope: !4435, file: !2596, line: 1723, type: !103)
!4512 = !DILocalVariable(name: "pad", scope: !4513, file: !2596, line: 1751, type: !146)
!4513 = distinct !DILexicalBlock(scope: !4514, file: !2596, line: 1750, column: 26)
!4514 = distinct !DILexicalBlock(scope: !4515, file: !2596, line: 1750, column: 8)
!4515 = distinct !DILexicalBlock(scope: !4516, file: !2596, line: 1747, column: 18)
!4516 = distinct !DILexicalBlock(scope: !4435, file: !2596, line: 1747, column: 7)
!4517 = !DILocalVariable(name: "rc", scope: !4518, file: !2596, line: 1758, type: !103)
!4518 = distinct !DILexicalBlock(scope: !4519, file: !2596, line: 1758, column: 7)
!4519 = distinct !DILexicalBlock(scope: !4520, file: !2596, line: 1757, column: 21)
!4520 = distinct !DILexicalBlock(scope: !4521, file: !2596, line: 1757, column: 10)
!4521 = distinct !DILexicalBlock(scope: !4522, file: !2596, line: 1756, column: 26)
!4522 = distinct !DILexicalBlock(scope: !4513, file: !2596, line: 1756, column: 9)
!4523 = !DILocalVariable(name: "rc", scope: !4524, file: !2596, line: 1765, type: !103)
!4524 = distinct !DILexicalBlock(scope: !4525, file: !2596, line: 1765, column: 6)
!4525 = distinct !DILexicalBlock(scope: !4513, file: !2596, line: 1764, column: 25)
!4526 = !DILocalVariable(name: "rc", scope: !4527, file: !2596, line: 1774, type: !103)
!4527 = distinct !DILexicalBlock(scope: !4528, file: !2596, line: 1774, column: 4)
!4528 = distinct !DILexicalBlock(scope: !4529, file: !2596, line: 1773, column: 18)
!4529 = distinct !DILexicalBlock(scope: !4435, file: !2596, line: 1773, column: 7)
!4530 = !DILocalVariable(name: "rc", scope: !4531, file: !2596, line: 1819, type: !103)
!4531 = distinct !DILexicalBlock(scope: !4532, file: !2596, line: 1819, column: 5)
!4532 = distinct !DILexicalBlock(scope: !4533, file: !2596, line: 1818, column: 44)
!4533 = distinct !DILexicalBlock(scope: !4534, file: !2596, line: 1818, column: 8)
!4534 = distinct !DILexicalBlock(scope: !4535, file: !2596, line: 1817, column: 10)
!4535 = distinct !DILexicalBlock(scope: !4435, file: !2596, line: 1777, column: 7)
!4536 = !DILocalVariable(name: "rc", scope: !4537, file: !2596, line: 1823, type: !103)
!4537 = distinct !DILexicalBlock(scope: !4538, file: !2596, line: 1823, column: 5)
!4538 = distinct !DILexicalBlock(scope: !4539, file: !2596, line: 1822, column: 26)
!4539 = distinct !DILexicalBlock(scope: !4534, file: !2596, line: 1822, column: 8)
!4540 = !DILocalVariable(name: "rc", scope: !4541, file: !2596, line: 1828, type: !103)
!4541 = distinct !DILexicalBlock(scope: !4542, file: !2596, line: 1828, column: 5)
!4542 = distinct !DILexicalBlock(scope: !4534, file: !2596, line: 1827, column: 26)
!4543 = !DILocalVariable(name: "rc", scope: !4544, file: !2596, line: 1831, type: !103)
!4544 = distinct !DILexicalBlock(scope: !4534, file: !2596, line: 1831, column: 4)
!4545 = !DILocalVariable(name: "rc", scope: !4546, file: !2596, line: 1836, type: !103)
!4546 = distinct !DILexicalBlock(scope: !4547, file: !2596, line: 1836, column: 4)
!4547 = distinct !DILexicalBlock(scope: !4435, file: !2596, line: 1835, column: 21)
!4548 = !DILabel(scope: !4504, name: "prec_int_pad0", file: !2596, line: 1634)
!4549 = !DILocation(line: 0, scope: !4408)
!4550 = !DILocation(line: 1341, column: 2, scope: !4408)
!4551 = !DILocation(line: 1341, column: 7, scope: !4408)
!4552 = !DILocation(line: 1375, column: 2, scope: !4408)
!4553 = !DILocation(line: 1342, column: 9, scope: !4408)
!4554 = !DILocation(line: 1375, column: 9, scope: !4408)
!4555 = !DILocation(line: 1377, column: 4, scope: !4432)
!4556 = !DILocation(line: 0, scope: !4432)
!4557 = !DILocation(line: 1377, column: 4, scope: !4558)
!4558 = distinct !DILexicalBlock(scope: !4432, file: !2596, line: 1377, column: 4)
!4559 = distinct !{!4559, !4552, !4560}
!4560 = !DILocation(line: 1839, column: 2, scope: !4408)
!4561 = !DILocation(line: 1392, column: 3, scope: !4435)
!4562 = !DILocation(line: 1395, column: 5, scope: !4435)
!4563 = !DILocation(line: 0, scope: !4435)
!4564 = !DILocation(line: 1409, column: 8, scope: !4435)
!4565 = !DILocation(line: 1414, column: 13, scope: !4566)
!4566 = distinct !DILexicalBlock(scope: !4435, file: !2596, line: 1414, column: 7)
!4567 = !DILocation(line: 1414, column: 7, scope: !4435)
!4568 = !DILocation(line: 1415, column: 12, scope: !4569)
!4569 = distinct !DILexicalBlock(scope: !4566, file: !2596, line: 1414, column: 25)
!4570 = !DILocation(line: 1417, column: 14, scope: !4571)
!4571 = distinct !DILexicalBlock(scope: !4569, file: !2596, line: 1417, column: 8)
!4572 = !DILocation(line: 1417, column: 8, scope: !4569)
!4573 = !DILocation(line: 1418, column: 21, scope: !4574)
!4574 = distinct !DILexicalBlock(scope: !4571, file: !2596, line: 1417, column: 19)
!4575 = !DILocation(line: 1419, column: 13, scope: !4574)
!4576 = !DILocation(line: 1420, column: 4, scope: !4574)
!4577 = !DILocation(line: 1421, column: 20, scope: !4578)
!4578 = distinct !DILexicalBlock(scope: !4566, file: !2596, line: 1421, column: 14)
!4579 = !DILocation(line: 1421, column: 14, scope: !4566)
!4580 = !DILocation(line: 1431, column: 13, scope: !4495)
!4581 = !DILocation(line: 1431, column: 7, scope: !4435)
!4582 = !DILocation(line: 1432, column: 14, scope: !4494)
!4583 = !DILocation(line: 0, scope: !4494)
!4584 = !DILocation(line: 1434, column: 12, scope: !4585)
!4585 = distinct !DILexicalBlock(scope: !4494, file: !2596, line: 1434, column: 8)
!4586 = !DILocation(line: 1434, column: 8, scope: !4494)
!4587 = !DILocation(line: 1435, column: 24, scope: !4588)
!4588 = distinct !DILexicalBlock(scope: !4585, file: !2596, line: 1434, column: 17)
!4589 = !DILocation(line: 1436, column: 4, scope: !4588)
!4590 = !DILocation(line: 1439, column: 20, scope: !4591)
!4591 = distinct !DILexicalBlock(scope: !4495, file: !2596, line: 1439, column: 14)
!4592 = !DILocation(line: 1439, column: 14, scope: !4495)
!4593 = !DILocation(line: 1469, column: 37, scope: !4435)
!4594 = !DILocation(line: 1448, column: 20, scope: !4435)
!4595 = !DILocation(line: 1449, column: 22, scope: !4435)
!4596 = !DILocation(line: 1471, column: 34, scope: !4435)
!4597 = !DILocation(line: 1478, column: 7, scope: !4435)
!4598 = !DILocation(line: 1479, column: 4, scope: !4599)
!4599 = distinct !DILexicalBlock(scope: !4600, file: !2596, line: 1478, column: 40)
!4600 = distinct !DILexicalBlock(scope: !4435, file: !2596, line: 1478, column: 7)
!4601 = !DILocation(line: 1484, column: 19, scope: !4602)
!4602 = distinct !DILexicalBlock(scope: !4599, file: !2596, line: 1479, column: 24)
!4603 = !DILocation(line: 1484, column: 17, scope: !4602)
!4604 = !DILocation(line: 1485, column: 5, scope: !4602)
!4605 = !DILocation(line: 1492, column: 20, scope: !4606)
!4606 = distinct !DILexicalBlock(scope: !4607, file: !2596, line: 1491, column: 12)
!4607 = distinct !DILexicalBlock(scope: !4602, file: !2596, line: 1487, column: 9)
!4608 = !DILocation(line: 1492, column: 18, scope: !4606)
!4609 = !DILocation(line: 1494, column: 5, scope: !4602)
!4610 = !DILocation(line: 1497, column: 23, scope: !4602)
!4611 = !DILocation(line: 1496, column: 17, scope: !4602)
!4612 = !DILocation(line: 1498, column: 5, scope: !4602)
!4613 = !DILocation(line: 1501, column: 23, scope: !4602)
!4614 = !DILocation(line: 1500, column: 17, scope: !4602)
!4615 = !DILocation(line: 1502, column: 5, scope: !4602)
!4616 = !DILocation(line: 1513, column: 23, scope: !4602)
!4617 = !DILocation(line: 1513, column: 6, scope: !4602)
!4618 = !DILocation(line: 1512, column: 17, scope: !4602)
!4619 = !DILocation(line: 1514, column: 5, scope: !4602)
!4620 = !DILocation(line: 0, scope: !4602)
!4621 = !DILocation(line: 1516, column: 8, scope: !4599)
!4622 = !DILocation(line: 1517, column: 19, scope: !4623)
!4623 = distinct !DILexicalBlock(scope: !4624, file: !2596, line: 1516, column: 33)
!4624 = distinct !DILexicalBlock(scope: !4599, file: !2596, line: 1516, column: 8)
!4625 = !DILocation(line: 1517, column: 17, scope: !4623)
!4626 = !DILocation(line: 1518, column: 4, scope: !4623)
!4627 = !DILocation(line: 1519, column: 19, scope: !4628)
!4628 = distinct !DILexicalBlock(scope: !4629, file: !2596, line: 1518, column: 39)
!4629 = distinct !DILexicalBlock(scope: !4624, file: !2596, line: 1518, column: 15)
!4630 = !DILocation(line: 1519, column: 17, scope: !4628)
!4631 = !DILocation(line: 1520, column: 4, scope: !4628)
!4632 = !DILocation(line: 1522, column: 4, scope: !4633)
!4633 = distinct !DILexicalBlock(scope: !4634, file: !2596, line: 1521, column: 47)
!4634 = distinct !DILexicalBlock(scope: !4600, file: !2596, line: 1521, column: 14)
!4635 = !DILocation(line: 1527, column: 19, scope: !4636)
!4636 = distinct !DILexicalBlock(scope: !4633, file: !2596, line: 1522, column: 24)
!4637 = !DILocation(line: 1527, column: 17, scope: !4636)
!4638 = !DILocation(line: 1528, column: 5, scope: !4636)
!4639 = !DILocation(line: 0, scope: !4640)
!4640 = distinct !DILexicalBlock(scope: !4636, file: !2596, line: 1530, column: 9)
!4641 = !DILocation(line: 1540, column: 23, scope: !4636)
!4642 = !DILocation(line: 1539, column: 17, scope: !4636)
!4643 = !DILocation(line: 1542, column: 5, scope: !4636)
!4644 = !DILocation(line: 1545, column: 23, scope: !4636)
!4645 = !DILocation(line: 1544, column: 17, scope: !4636)
!4646 = !DILocation(line: 1547, column: 5, scope: !4636)
!4647 = !DILocation(line: 1551, column: 23, scope: !4636)
!4648 = !DILocation(line: 1551, column: 6, scope: !4636)
!4649 = !DILocation(line: 1550, column: 17, scope: !4636)
!4650 = !DILocation(line: 1552, column: 5, scope: !4636)
!4651 = !DILocation(line: 0, scope: !4636)
!4652 = !DILocation(line: 1554, column: 8, scope: !4633)
!4653 = !DILocation(line: 1555, column: 19, scope: !4654)
!4654 = distinct !DILexicalBlock(scope: !4655, file: !2596, line: 1554, column: 33)
!4655 = distinct !DILexicalBlock(scope: !4633, file: !2596, line: 1554, column: 8)
!4656 = !DILocation(line: 1555, column: 17, scope: !4654)
!4657 = !DILocation(line: 1556, column: 4, scope: !4654)
!4658 = !DILocation(line: 1557, column: 19, scope: !4659)
!4659 = distinct !DILexicalBlock(scope: !4660, file: !2596, line: 1556, column: 39)
!4660 = distinct !DILexicalBlock(scope: !4655, file: !2596, line: 1556, column: 15)
!4661 = !DILocation(line: 1557, column: 17, scope: !4659)
!4662 = !DILocation(line: 1558, column: 4, scope: !4659)
!4663 = !DILocation(line: 0, scope: !4664)
!4664 = distinct !DILexicalBlock(scope: !4665, file: !2596, line: 1560, column: 8)
!4665 = distinct !DILexicalBlock(scope: !4666, file: !2596, line: 1559, column: 45)
!4666 = distinct !DILexicalBlock(scope: !4634, file: !2596, line: 1559, column: 14)
!4667 = !DILocation(line: 1566, column: 17, scope: !4668)
!4668 = distinct !DILexicalBlock(scope: !4669, file: !2596, line: 1565, column: 46)
!4669 = distinct !DILexicalBlock(scope: !4666, file: !2596, line: 1565, column: 14)
!4670 = !DILocation(line: 1566, column: 15, scope: !4668)
!4671 = !DILocation(line: 1567, column: 3, scope: !4668)
!4672 = !DILocation(line: 1574, column: 21, scope: !4501)
!4673 = !DILocation(line: 1575, column: 4, scope: !4499)
!4674 = !DILocation(line: 0, scope: !4499)
!4675 = !DILocation(line: 1575, column: 4, scope: !4676)
!4676 = distinct !DILexicalBlock(scope: !4499, file: !2596, line: 1575, column: 4)
!4677 = !DILocation(line: 1582, column: 17, scope: !4435)
!4678 = !DILocation(line: 1582, column: 3, scope: !4435)
!4679 = !DILocation(line: 1584, column: 4, scope: !4503)
!4680 = !DILocation(line: 0, scope: !4503)
!4681 = !DILocation(line: 1584, column: 4, scope: !4682)
!4682 = distinct !DILexicalBlock(scope: !4503, file: !2596, line: 1584, column: 4)
!4683 = !DILocation(line: 1587, column: 31, scope: !4506)
!4684 = !DILocation(line: 1591, column: 18, scope: !4685)
!4685 = distinct !DILexicalBlock(scope: !4506, file: !2596, line: 1591, column: 8)
!4686 = !DILocation(line: 1591, column: 8, scope: !4506)
!4687 = !DILocation(line: 1592, column: 11, scope: !4688)
!4688 = distinct !DILexicalBlock(scope: !4685, file: !2596, line: 1591, column: 24)
!4689 = !DILocation(line: 0, scope: !4506)
!4690 = !DILocation(line: 1593, column: 4, scope: !4688)
!4691 = !DILocation(line: 1594, column: 11, scope: !4692)
!4692 = distinct !DILexicalBlock(scope: !4685, file: !2596, line: 1593, column: 11)
!4693 = !DILocation(line: 1604, column: 51, scope: !4504)
!4694 = !DILocation(line: 1604, column: 13, scope: !4504)
!4695 = !DILocation(line: 1604, column: 11, scope: !4504)
!4696 = !DILocation(line: 1606, column: 4, scope: !4504)
!4697 = !DILocation(line: 1609, column: 14, scope: !4698)
!4698 = distinct !DILexicalBlock(scope: !4504, file: !2596, line: 1609, column: 8)
!4699 = !DILocation(line: 1609, column: 8, scope: !4504)
!4700 = !DILocation(line: 1619, column: 18, scope: !4504)
!4701 = !DILocation(line: 1620, column: 13, scope: !4702)
!4702 = distinct !DILexicalBlock(scope: !4504, file: !2596, line: 1620, column: 8)
!4703 = !DILocation(line: 1620, column: 8, scope: !4504)
!4704 = !DILocation(line: 1622, column: 36, scope: !4705)
!4705 = distinct !DILexicalBlock(scope: !4702, file: !2596, line: 1620, column: 18)
!4706 = !DILocation(line: 1622, column: 17, scope: !4705)
!4707 = !DILocation(line: 1623, column: 4, scope: !4705)
!4708 = !DILocation(line: 1632, column: 29, scope: !4504)
!4709 = !DILocation(line: 1632, column: 10, scope: !4504)
!4710 = !DILocation(line: 1632, column: 4, scope: !4504)
!4711 = !DILocation(line: 1407, column: 8, scope: !4435)
!4712 = !DILocation(line: 0, scope: !4504)
!4713 = !DILocation(line: 1634, column: 3, scope: !4504)
!4714 = !DILocation(line: 1640, column: 18, scope: !4509)
!4715 = !DILocation(line: 1640, column: 8, scope: !4504)
!4716 = !DILocation(line: 1729, column: 13, scope: !4717)
!4717 = distinct !DILexicalBlock(scope: !4435, file: !2596, line: 1729, column: 7)
!4718 = !DILocation(line: 1641, column: 22, scope: !4508)
!4719 = !DILocation(line: 0, scope: !4508)
!4720 = !DILocation(line: 1646, column: 21, scope: !4508)
!4721 = !DILocation(line: 1649, column: 13, scope: !4722)
!4722 = distinct !DILexicalBlock(scope: !4508, file: !2596, line: 1649, column: 9)
!4723 = !DILocation(line: 1649, column: 9, scope: !4508)
!4724 = !DILocation(line: 1650, column: 35, scope: !4725)
!4725 = distinct !DILexicalBlock(scope: !4722, file: !2596, line: 1649, column: 34)
!4726 = !DILocation(line: 1650, column: 23, scope: !4725)
!4727 = !DILocation(line: 1651, column: 5, scope: !4725)
!4728 = !DILocation(line: 1660, column: 15, scope: !4729)
!4729 = distinct !DILexicalBlock(scope: !4504, file: !2596, line: 1660, column: 8)
!4730 = !DILocation(line: 1660, column: 19, scope: !4729)
!4731 = !DILocation(line: 1660, column: 8, scope: !4504)
!4732 = !DILocation(line: 1661, column: 23, scope: !4733)
!4733 = distinct !DILexicalBlock(scope: !4729, file: !2596, line: 1660, column: 28)
!4734 = !DILocation(line: 1661, column: 11, scope: !4733)
!4735 = !DILocation(line: 1665, column: 22, scope: !4733)
!4736 = !DILocation(line: 1666, column: 21, scope: !4733)
!4737 = !DILocation(line: 1668, column: 5, scope: !4733)
!4738 = !DILocation(line: 1677, column: 30, scope: !4739)
!4739 = distinct !DILexicalBlock(scope: !4740, file: !2596, line: 1676, column: 49)
!4740 = distinct !DILexicalBlock(scope: !4504, file: !2596, line: 1676, column: 8)
!4741 = !DILocation(line: 1677, column: 5, scope: !4739)
!4742 = !DILocation(line: 1680, column: 4, scope: !4504)
!4743 = !DILocation(line: 0, scope: !4685)
!4744 = !DILocation(line: 1597, column: 14, scope: !4506)
!4745 = !DILocation(line: 1699, column: 11, scope: !4746)
!4746 = distinct !DILexicalBlock(scope: !4435, file: !2596, line: 1699, column: 7)
!4747 = !DILocation(line: 1699, column: 7, scope: !4435)
!4748 = !DILocation(line: 1725, column: 7, scope: !4749)
!4749 = distinct !DILexicalBlock(scope: !4435, file: !2596, line: 1725, column: 7)
!4750 = !DILocation(line: 1725, column: 12, scope: !4749)
!4751 = !DILocation(line: 1747, column: 13, scope: !4516)
!4752 = !DILocation(line: 1747, column: 7, scope: !4435)
!4753 = !DILocation(line: 1722, column: 24, scope: !4435)
!4754 = !DILocation(line: 1725, column: 7, scope: !4435)
!4755 = !DILocation(line: 1729, column: 7, scope: !4435)
!4756 = !DILocation(line: 1736, column: 13, scope: !4757)
!4757 = distinct !DILexicalBlock(scope: !4435, file: !2596, line: 1736, column: 7)
!4758 = !DILocation(line: 1735, column: 19, scope: !4435)
!4759 = !DILocation(line: 1736, column: 7, scope: !4435)
!4760 = !DILocation(line: 1748, column: 10, scope: !4515)
!4761 = !DILocation(line: 1750, column: 15, scope: !4514)
!4762 = !DILocation(line: 1750, column: 8, scope: !4515)
!4763 = !DILocation(line: 0, scope: !4513)
!4764 = !DILocation(line: 1756, column: 15, scope: !4522)
!4765 = !DILocation(line: 1756, column: 9, scope: !4513)
!4766 = !DILocation(line: 1758, column: 7, scope: !4518)
!4767 = !DILocation(line: 0, scope: !4518)
!4768 = !DILocation(line: 1758, column: 7, scope: !4769)
!4769 = distinct !DILexicalBlock(scope: !4518, file: !2596, line: 1758, column: 7)
!4770 = !DILocation(line: 1764, column: 5, scope: !4513)
!4771 = !DILocation(line: 0, scope: !4515)
!4772 = !DILocation(line: 1764, column: 20, scope: !4513)
!4773 = !DILocation(line: 1764, column: 17, scope: !4513)
!4774 = !DILocation(line: 1765, column: 6, scope: !4524)
!4775 = !DILocation(line: 0, scope: !4524)
!4776 = !DILocation(line: 1765, column: 6, scope: !4777)
!4777 = distinct !DILexicalBlock(scope: !4524, file: !2596, line: 1765, column: 6)
!4778 = distinct !{!4778, !4770, !4779}
!4779 = !DILocation(line: 1766, column: 5, scope: !4513)
!4780 = !DILocation(line: 1773, column: 12, scope: !4529)
!4781 = !DILocation(line: 1773, column: 7, scope: !4435)
!4782 = !DILocation(line: 1773, column: 7, scope: !4529)
!4783 = !DILocation(line: 1774, column: 4, scope: !4527)
!4784 = !DILocation(line: 0, scope: !4527)
!4785 = !DILocation(line: 1774, column: 4, scope: !4786)
!4786 = distinct !DILexicalBlock(scope: !4527, file: !2596, line: 1774, column: 4)
!4787 = !DILocation(line: 1818, column: 8, scope: !4533)
!4788 = !DILocation(line: 1818, column: 27, scope: !4533)
!4789 = !DILocation(line: 1818, column: 25, scope: !4533)
!4790 = !DILocation(line: 1818, column: 8, scope: !4534)
!4791 = !DILocation(line: 1819, column: 5, scope: !4531)
!4792 = !DILocation(line: 0, scope: !4531)
!4793 = !DILocation(line: 1819, column: 5, scope: !4794)
!4794 = distinct !DILexicalBlock(scope: !4531, file: !2596, line: 1819, column: 5)
!4795 = !DILocation(line: 1822, column: 14, scope: !4539)
!4796 = !DILocation(line: 1822, column: 8, scope: !4534)
!4797 = !DILocation(line: 1823, column: 5, scope: !4537)
!4798 = !DILocation(line: 0, scope: !4537)
!4799 = !DILocation(line: 1823, column: 5, scope: !4800)
!4800 = distinct !DILexicalBlock(scope: !4537, file: !2596, line: 1823, column: 5)
!4801 = !DILocation(line: 1826, column: 20, scope: !4534)
!4802 = !DILocation(line: 1827, column: 4, scope: !4534)
!4803 = !DILocation(line: 0, scope: !4534)
!4804 = !DILocation(line: 1827, column: 21, scope: !4534)
!4805 = !DILocation(line: 1827, column: 18, scope: !4534)
!4806 = !DILocation(line: 1828, column: 5, scope: !4541)
!4807 = !DILocation(line: 0, scope: !4541)
!4808 = !DILocation(line: 1828, column: 5, scope: !4809)
!4809 = distinct !DILexicalBlock(scope: !4541, file: !2596, line: 1828, column: 5)
!4810 = distinct !{!4810, !4802, !4811}
!4811 = !DILocation(line: 1829, column: 4, scope: !4534)
!4812 = !DILocation(line: 1831, column: 4, scope: !4544)
!4813 = !DILocation(line: 0, scope: !4544)
!4814 = !DILocation(line: 1831, column: 4, scope: !4815)
!4815 = distinct !DILexicalBlock(scope: !4544, file: !2596, line: 1831, column: 4)
!4816 = !DILocation(line: 1835, column: 16, scope: !4435)
!4817 = !DILocation(line: 1835, column: 3, scope: !4435)
!4818 = !DILocation(line: 1836, column: 4, scope: !4546)
!4819 = !DILocation(line: 0, scope: !4546)
!4820 = !DILocation(line: 1836, column: 4, scope: !4821)
!4821 = distinct !DILexicalBlock(scope: !4546, file: !2596, line: 1836, column: 4)
!4822 = !DILocation(line: 1837, column: 4, scope: !4547)
!4823 = distinct !{!4823, !4817, !4824}
!4824 = !DILocation(line: 1838, column: 3, scope: !4435)
!4825 = !DILocation(line: 1844, column: 1, scope: !4408)
!4826 = distinct !DISubprogram(name: "extract_conversion", scope: !2596, file: !2596, line: 642, type: !4827, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2592, retainedNodes: !4829)
!4827 = !DISubroutineType(types: !4828)
!4828 = !{!144, !4483, !144}
!4829 = !{!4830, !4831}
!4830 = !DILocalVariable(name: "conv", arg: 1, scope: !4826, file: !2596, line: 642, type: !4483)
!4831 = !DILocalVariable(name: "sp", arg: 2, scope: !4826, file: !2596, line: 643, type: !144)
!4832 = !DILocation(line: 0, scope: !4826)
!4833 = !DILocation(line: 645, column: 10, scope: !4826)
!4834 = !DILocation(line: 653, column: 2, scope: !4826)
!4835 = !DILocation(line: 654, column: 6, scope: !4836)
!4836 = distinct !DILexicalBlock(scope: !4826, file: !2596, line: 654, column: 6)
!4837 = !DILocation(line: 654, column: 10, scope: !4836)
!4838 = !DILocation(line: 654, column: 6, scope: !4826)
!4839 = !DILocation(line: 655, column: 24, scope: !4840)
!4840 = distinct !DILexicalBlock(scope: !4836, file: !2596, line: 654, column: 18)
!4841 = !DILocation(line: 655, column: 19, scope: !4840)
!4842 = !DILocation(line: 656, column: 3, scope: !4840)
!4843 = !DILocation(line: 659, column: 7, scope: !4826)
!4844 = !DILocation(line: 660, column: 7, scope: !4826)
!4845 = !DILocation(line: 661, column: 7, scope: !4826)
!4846 = !DILocation(line: 662, column: 7, scope: !4826)
!4847 = !DILocation(line: 663, column: 7, scope: !4826)
!4848 = !DILocation(line: 665, column: 2, scope: !4826)
!4849 = !DILocation(line: 666, column: 1, scope: !4826)
!4850 = distinct !DISubprogram(name: "outs", scope: !2596, file: !2596, line: 1319, type: !4851, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2592, retainedNodes: !4853)
!4851 = !DISubroutineType(types: !4852)
!4852 = !{!103, !3397, !102, !144, !144}
!4853 = !{!4854, !4855, !4856, !4857, !4858, !4859}
!4854 = !DILocalVariable(name: "out", arg: 1, scope: !4850, file: !2596, line: 1319, type: !3397)
!4855 = !DILocalVariable(name: "ctx", arg: 2, scope: !4850, file: !2596, line: 1320, type: !102)
!4856 = !DILocalVariable(name: "sp", arg: 3, scope: !4850, file: !2596, line: 1321, type: !144)
!4857 = !DILocalVariable(name: "ep", arg: 4, scope: !4850, file: !2596, line: 1322, type: !144)
!4858 = !DILocalVariable(name: "count", scope: !4850, file: !2596, line: 1324, type: !204)
!4859 = !DILocalVariable(name: "rc", scope: !4860, file: !2596, line: 1327, type: !103)
!4860 = distinct !DILexicalBlock(scope: !4850, file: !2596, line: 1326, column: 45)
!4861 = !DILocation(line: 0, scope: !4850)
!4862 = !DILocation(line: 1326, column: 2, scope: !4850)
!4863 = !DILocation(line: 1324, column: 9, scope: !4850)
!4864 = !DILocation(line: 1326, column: 13, scope: !4850)
!4865 = !DILocation(line: 1326, column: 19, scope: !4850)
!4866 = !DILocation(line: 1327, column: 21, scope: !4860)
!4867 = !DILocation(line: 1326, column: 36, scope: !4850)
!4868 = !DILocation(line: 1326, column: 39, scope: !4850)
!4869 = !DILocation(line: 1327, column: 24, scope: !4860)
!4870 = !DILocation(line: 1327, column: 16, scope: !4860)
!4871 = !DILocation(line: 1327, column: 12, scope: !4860)
!4872 = !DILocation(line: 0, scope: !4860)
!4873 = !DILocation(line: 1329, column: 10, scope: !4874)
!4874 = distinct !DILexicalBlock(scope: !4860, file: !2596, line: 1329, column: 7)
!4875 = !DILocation(line: 1329, column: 7, scope: !4860)
!4876 = distinct !{!4876, !4862, !4877}
!4877 = !DILocation(line: 1333, column: 2, scope: !4850)
!4878 = !DILocation(line: 1336, column: 1, scope: !4850)
!4879 = distinct !DISubprogram(name: "encode_uint", scope: !2596, file: !2596, line: 788, type: !4880, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2592, retainedNodes: !4882)
!4880 = !DISubroutineType(types: !4881)
!4881 = !{!344, !2618, !4483, !344, !144}
!4882 = !{!4883, !4884, !4885, !4886, !4887, !4888, !4890, !4891}
!4883 = !DILocalVariable(name: "value", arg: 1, scope: !4879, file: !2596, line: 788, type: !2618)
!4884 = !DILocalVariable(name: "conv", arg: 2, scope: !4879, file: !2596, line: 789, type: !4483)
!4885 = !DILocalVariable(name: "bps", arg: 3, scope: !4879, file: !2596, line: 790, type: !344)
!4886 = !DILocalVariable(name: "bpe", arg: 4, scope: !4879, file: !2596, line: 791, type: !144)
!4887 = !DILocalVariable(name: "upcase", scope: !4879, file: !2596, line: 793, type: !157)
!4888 = !DILocalVariable(name: "radix", scope: !4879, file: !2596, line: 794, type: !4889)
!4889 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!4890 = !DILocalVariable(name: "bp", scope: !4879, file: !2596, line: 795, type: !344)
!4891 = !DILocalVariable(name: "lsv", scope: !4892, file: !2596, line: 798, type: !32)
!4892 = distinct !DILexicalBlock(scope: !4879, file: !2596, line: 797, column: 5)
!4893 = !DILocation(line: 0, scope: !4879)
!4894 = !DILocation(line: 793, column: 35, scope: !4879)
!4895 = !DILocation(line: 793, column: 24, scope: !4879)
!4896 = !DILocation(line: 793, column: 16, scope: !4879)
!4897 = !DILocation(line: 794, column: 29, scope: !4879)
!4898 = !DILocation(line: 795, column: 24, scope: !4879)
!4899 = !DILocation(line: 795, column: 17, scope: !4879)
!4900 = !DILocation(line: 797, column: 2, scope: !4879)
!4901 = !DILocation(line: 802, column: 9, scope: !4892)
!4902 = !DILocation(line: 798, column: 22, scope: !4892)
!4903 = !DILocation(line: 0, scope: !4892)
!4904 = !DILocation(line: 800, column: 16, scope: !4892)
!4905 = !DILocation(line: 800, column: 11, scope: !4892)
!4906 = !DILocation(line: 800, column: 4, scope: !4892)
!4907 = !DILocation(line: 800, column: 9, scope: !4892)
!4908 = !DILocation(line: 803, column: 18, scope: !4879)
!4909 = !DILocation(line: 803, column: 24, scope: !4879)
!4910 = !DILocation(line: 803, column: 2, scope: !4892)
!4911 = distinct !{!4911, !4900, !4912}
!4912 = !DILocation(line: 803, column: 37, scope: !4879)
!4913 = !DILocation(line: 808, column: 12, scope: !4914)
!4914 = distinct !DILexicalBlock(scope: !4879, file: !2596, line: 808, column: 6)
!4915 = !DILocation(line: 808, column: 6, scope: !4879)
!4916 = !DILocation(line: 809, column: 7, scope: !4917)
!4917 = distinct !DILexicalBlock(scope: !4914, file: !2596, line: 808, column: 23)
!4918 = !DILocation(line: 813, column: 3, scope: !4919)
!4919 = distinct !DILexicalBlock(scope: !4920, file: !2596, line: 811, column: 27)
!4920 = distinct !DILexicalBlock(scope: !4921, file: !2596, line: 811, column: 14)
!4921 = distinct !DILexicalBlock(scope: !4917, file: !2596, line: 809, column: 7)
!4922 = !DILocation(line: 0, scope: !4921)
!4923 = !DILocation(line: 818, column: 2, scope: !4879)
!4924 = distinct !DISubprogram(name: "store_count", scope: !2596, file: !2596, line: 1280, type: !4925, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2592, retainedNodes: !4929)
!4925 = !DISubroutineType(types: !4926)
!4926 = !{null, !4927, !102, !103}
!4927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4928, size: 32)
!4928 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4450)
!4929 = !{!4930, !4931, !4932}
!4930 = !DILocalVariable(name: "conv", arg: 1, scope: !4924, file: !2596, line: 1280, type: !4927)
!4931 = !DILocalVariable(name: "dp", arg: 2, scope: !4924, file: !2596, line: 1281, type: !102)
!4932 = !DILocalVariable(name: "count", arg: 3, scope: !4924, file: !2596, line: 1282, type: !103)
!4933 = !DILocation(line: 0, scope: !4924)
!4934 = !DILocation(line: 1284, column: 38, scope: !4924)
!4935 = !DILocation(line: 1284, column: 2, scope: !4924)
!4936 = !DILocation(line: 1286, column: 4, scope: !4937)
!4937 = distinct !DILexicalBlock(scope: !4924, file: !2596, line: 1284, column: 50)
!4938 = !DILocation(line: 1286, column: 14, scope: !4937)
!4939 = !DILocation(line: 1287, column: 3, scope: !4937)
!4940 = !DILocation(line: 1289, column: 24, scope: !4937)
!4941 = !DILocation(line: 1289, column: 22, scope: !4937)
!4942 = !DILocation(line: 1290, column: 3, scope: !4937)
!4943 = !DILocation(line: 1292, column: 18, scope: !4937)
!4944 = !DILocation(line: 1292, column: 4, scope: !4937)
!4945 = !DILocation(line: 1292, column: 16, scope: !4937)
!4946 = !DILocation(line: 1293, column: 3, scope: !4937)
!4947 = !DILocation(line: 1295, column: 4, scope: !4937)
!4948 = !DILocation(line: 1295, column: 15, scope: !4937)
!4949 = !DILocation(line: 1296, column: 3, scope: !4937)
!4950 = !DILocation(line: 1298, column: 22, scope: !4937)
!4951 = !DILocation(line: 1298, column: 4, scope: !4937)
!4952 = !DILocation(line: 1298, column: 20, scope: !4937)
!4953 = !DILocation(line: 1299, column: 3, scope: !4937)
!4954 = !DILocation(line: 1301, column: 21, scope: !4937)
!4955 = !DILocation(line: 1301, column: 4, scope: !4937)
!4956 = !DILocation(line: 1301, column: 19, scope: !4937)
!4957 = !DILocation(line: 1302, column: 3, scope: !4937)
!4958 = !DILocation(line: 1304, column: 4, scope: !4937)
!4959 = !DILocation(line: 1304, column: 17, scope: !4937)
!4960 = !DILocation(line: 1305, column: 3, scope: !4937)
!4961 = !DILocation(line: 1307, column: 4, scope: !4937)
!4962 = !DILocation(line: 1307, column: 20, scope: !4937)
!4963 = !DILocation(line: 1308, column: 3, scope: !4937)
!4964 = !DILocation(line: 1316, column: 1, scope: !4924)
!4965 = distinct !DISubprogram(name: "isupper", scope: !4966, file: !4966, line: 16, type: !107, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2592, retainedNodes: !4967)
!4966 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4967 = !{!4968}
!4968 = !DILocalVariable(name: "a", arg: 1, scope: !4965, file: !4966, line: 16, type: !103)
!4969 = !DILocation(line: 0, scope: !4965)
!4970 = !DILocation(line: 18, column: 29, scope: !4965)
!4971 = !DILocation(line: 18, column: 45, scope: !4965)
!4972 = !DILocation(line: 18, column: 2, scope: !4965)
!4973 = distinct !DISubprogram(name: "conversion_radix", scope: !2596, file: !2596, line: 761, type: !4974, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2592, retainedNodes: !4976)
!4974 = !DISubroutineType(types: !4975)
!4975 = !{!204, !146}
!4976 = !{!4977}
!4977 = !DILocalVariable(name: "specifier", arg: 1, scope: !4973, file: !2596, line: 761, type: !146)
!4978 = !DILocation(line: 0, scope: !4973)
!4979 = !DILocation(line: 763, column: 2, scope: !4973)
!4980 = !DILocation(line: 770, column: 3, scope: !4981)
!4981 = distinct !DILexicalBlock(scope: !4973, file: !2596, line: 763, column: 21)
!4982 = !DILocation(line: 774, column: 3, scope: !4981)
!4983 = !DILocation(line: 0, scope: !4981)
!4984 = !DILocation(line: 776, column: 1, scope: !4973)
!4985 = distinct !DISubprogram(name: "extract_flags", scope: !2596, file: !2596, line: 339, type: !4827, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2592, retainedNodes: !4986)
!4986 = !{!4987, !4988, !4989}
!4987 = !DILocalVariable(name: "conv", arg: 1, scope: !4985, file: !2596, line: 339, type: !4483)
!4988 = !DILocalVariable(name: "sp", arg: 2, scope: !4985, file: !2596, line: 340, type: !144)
!4989 = !DILocalVariable(name: "loop", scope: !4985, file: !2596, line: 342, type: !157)
!4990 = !DILocation(line: 0, scope: !4985)
!4991 = !DILocation(line: 344, column: 2, scope: !4985)
!4992 = !DILocation(line: 345, column: 11, scope: !4993)
!4993 = distinct !DILexicalBlock(scope: !4985, file: !2596, line: 344, column: 5)
!4994 = !DILocation(line: 345, column: 3, scope: !4993)
!4995 = !DILocation(line: 351, column: 4, scope: !4996)
!4996 = distinct !DILexicalBlock(scope: !4993, file: !2596, line: 345, column: 16)
!4997 = !DILocation(line: 354, column: 4, scope: !4996)
!4998 = !DILocation(line: 357, column: 4, scope: !4996)
!4999 = !DILocation(line: 360, column: 4, scope: !4996)
!5000 = !DILocation(line: 0, scope: !4996)
!5001 = !DILocation(line: 370, column: 12, scope: !5002)
!5002 = distinct !DILexicalBlock(scope: !4985, file: !2596, line: 370, column: 6)
!5003 = !DILocation(line: 370, column: 22, scope: !5002)
!5004 = !DILocation(line: 371, column: 19, scope: !5005)
!5005 = distinct !DILexicalBlock(scope: !5002, file: !2596, line: 370, column: 42)
!5006 = !DILocation(line: 372, column: 2, scope: !5005)
!5007 = !DILocation(line: 376, column: 2, scope: !4985)
!5008 = distinct !DISubprogram(name: "extract_width", scope: !2596, file: !2596, line: 388, type: !4827, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2592, retainedNodes: !5009)
!5009 = !{!5010, !5011, !5012, !5013}
!5010 = !DILocalVariable(name: "conv", arg: 1, scope: !5008, file: !2596, line: 388, type: !4483)
!5011 = !DILocalVariable(name: "sp", arg: 2, scope: !5008, file: !2596, line: 389, type: !144)
!5012 = !DILocalVariable(name: "wp", scope: !5008, file: !2596, line: 398, type: !144)
!5013 = !DILocalVariable(name: "width", scope: !5008, file: !2596, line: 399, type: !204)
!5014 = !DILocation(line: 0, scope: !5008)
!5015 = !DILocation(line: 391, column: 8, scope: !5008)
!5016 = !DILocation(line: 391, column: 22, scope: !5008)
!5017 = !DILocation(line: 393, column: 6, scope: !5018)
!5018 = distinct !DILexicalBlock(scope: !5008, file: !2596, line: 393, column: 6)
!5019 = !DILocation(line: 393, column: 10, scope: !5018)
!5020 = !DILocation(line: 393, column: 6, scope: !5008)
!5021 = !DILocation(line: 394, column: 20, scope: !5022)
!5022 = distinct !DILexicalBlock(scope: !5018, file: !2596, line: 393, column: 18)
!5023 = !DILocation(line: 395, column: 10, scope: !5022)
!5024 = !DILocation(line: 395, column: 3, scope: !5022)
!5025 = !DILocation(line: 399, column: 17, scope: !5008)
!5026 = !DILocation(line: 401, column: 6, scope: !5027)
!5027 = distinct !DILexicalBlock(scope: !5008, file: !2596, line: 401, column: 6)
!5028 = !DILocation(line: 401, column: 9, scope: !5027)
!5029 = !DILocation(line: 401, column: 6, scope: !5008)
!5030 = !DILocation(line: 402, column: 23, scope: !5031)
!5031 = distinct !DILexicalBlock(scope: !5027, file: !2596, line: 401, column: 16)
!5032 = !DILocation(line: 403, column: 9, scope: !5031)
!5033 = !DILocation(line: 403, column: 21, scope: !5031)
!5034 = !DILocation(line: 405, column: 11, scope: !5031)
!5035 = !DILocation(line: 404, column: 21, scope: !5031)
!5036 = !DILocation(line: 406, column: 2, scope: !5031)
!5037 = !DILocation(line: 409, column: 1, scope: !5008)
!5038 = distinct !DISubprogram(name: "extract_prec", scope: !2596, file: !2596, line: 420, type: !4827, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2592, retainedNodes: !5039)
!5039 = !{!5040, !5041, !5042}
!5040 = !DILocalVariable(name: "conv", arg: 1, scope: !5038, file: !2596, line: 420, type: !4483)
!5041 = !DILocalVariable(name: "sp", arg: 2, scope: !5038, file: !2596, line: 421, type: !144)
!5042 = !DILocalVariable(name: "prec", scope: !5038, file: !2596, line: 435, type: !204)
!5043 = !DILocation(line: 0, scope: !5038)
!5044 = !DILocation(line: 423, column: 24, scope: !5038)
!5045 = !DILocation(line: 423, column: 28, scope: !5038)
!5046 = !DILocation(line: 423, column: 8, scope: !5038)
!5047 = !DILocation(line: 423, column: 21, scope: !5038)
!5048 = !DILocation(line: 425, column: 6, scope: !5038)
!5049 = !DILocation(line: 428, column: 2, scope: !5038)
!5050 = !DILocation(line: 430, column: 6, scope: !5051)
!5051 = distinct !DILexicalBlock(scope: !5038, file: !2596, line: 430, column: 6)
!5052 = !DILocation(line: 430, column: 10, scope: !5051)
!5053 = !DILocation(line: 430, column: 6, scope: !5038)
!5054 = !DILocation(line: 431, column: 19, scope: !5055)
!5055 = distinct !DILexicalBlock(scope: !5051, file: !2596, line: 430, column: 18)
!5056 = !DILocation(line: 432, column: 10, scope: !5055)
!5057 = !DILocation(line: 432, column: 3, scope: !5055)
!5058 = !DILocation(line: 435, column: 16, scope: !5038)
!5059 = !DILocation(line: 437, column: 8, scope: !5038)
!5060 = !DILocation(line: 437, column: 19, scope: !5038)
!5061 = !DILocation(line: 439, column: 10, scope: !5038)
!5062 = !DILocation(line: 438, column: 20, scope: !5038)
!5063 = !DILocation(line: 441, column: 9, scope: !5038)
!5064 = !DILocation(line: 442, column: 1, scope: !5038)
!5065 = distinct !DISubprogram(name: "extract_length", scope: !2596, file: !2596, line: 453, type: !4827, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2592, retainedNodes: !5066)
!5066 = !{!5067, !5068}
!5067 = !DILocalVariable(name: "conv", arg: 1, scope: !5065, file: !2596, line: 453, type: !4483)
!5068 = !DILocalVariable(name: "sp", arg: 2, scope: !5065, file: !2596, line: 454, type: !144)
!5069 = !DILocation(line: 0, scope: !5065)
!5070 = !DILocation(line: 456, column: 10, scope: !5065)
!5071 = !DILocation(line: 456, column: 2, scope: !5065)
!5072 = !DILocation(line: 458, column: 8, scope: !5073)
!5073 = distinct !DILexicalBlock(scope: !5074, file: !2596, line: 458, column: 7)
!5074 = distinct !DILexicalBlock(scope: !5065, file: !2596, line: 456, column: 15)
!5075 = !DILocation(line: 458, column: 7, scope: !5073)
!5076 = !DILocation(line: 458, column: 13, scope: !5073)
!5077 = !DILocation(line: 0, scope: !5073)
!5078 = !DILocation(line: 458, column: 7, scope: !5074)
!5079 = !DILocation(line: 459, column: 21, scope: !5080)
!5080 = distinct !DILexicalBlock(scope: !5073, file: !2596, line: 458, column: 21)
!5081 = !DILocation(line: 460, column: 4, scope: !5080)
!5082 = !DILocation(line: 461, column: 3, scope: !5080)
!5083 = !DILocation(line: 462, column: 21, scope: !5084)
!5084 = distinct !DILexicalBlock(scope: !5073, file: !2596, line: 461, column: 10)
!5085 = !DILocation(line: 466, column: 8, scope: !5086)
!5086 = distinct !DILexicalBlock(scope: !5074, file: !2596, line: 466, column: 7)
!5087 = !DILocation(line: 466, column: 7, scope: !5086)
!5088 = !DILocation(line: 466, column: 13, scope: !5086)
!5089 = !DILocation(line: 0, scope: !5086)
!5090 = !DILocation(line: 466, column: 7, scope: !5074)
!5091 = !DILocation(line: 467, column: 21, scope: !5092)
!5092 = distinct !DILexicalBlock(scope: !5086, file: !2596, line: 466, column: 21)
!5093 = !DILocation(line: 468, column: 4, scope: !5092)
!5094 = !DILocation(line: 469, column: 3, scope: !5092)
!5095 = !DILocation(line: 470, column: 21, scope: !5096)
!5096 = distinct !DILexicalBlock(scope: !5086, file: !2596, line: 469, column: 10)
!5097 = !DILocation(line: 474, column: 9, scope: !5074)
!5098 = !DILocation(line: 474, column: 20, scope: !5074)
!5099 = !DILocation(line: 475, column: 3, scope: !5074)
!5100 = !DILocation(line: 476, column: 3, scope: !5074)
!5101 = !DILocation(line: 478, column: 9, scope: !5074)
!5102 = !DILocation(line: 478, column: 20, scope: !5074)
!5103 = !DILocation(line: 479, column: 3, scope: !5074)
!5104 = !DILocation(line: 480, column: 3, scope: !5074)
!5105 = !DILocation(line: 482, column: 9, scope: !5074)
!5106 = !DILocation(line: 482, column: 20, scope: !5074)
!5107 = !DILocation(line: 483, column: 3, scope: !5074)
!5108 = !DILocation(line: 484, column: 3, scope: !5074)
!5109 = !DILocation(line: 486, column: 9, scope: !5074)
!5110 = !DILocation(line: 486, column: 20, scope: !5074)
!5111 = !DILocation(line: 487, column: 3, scope: !5074)
!5112 = !DILocation(line: 492, column: 21, scope: !5074)
!5113 = !DILocation(line: 493, column: 3, scope: !5074)
!5114 = !DILocation(line: 495, column: 9, scope: !5074)
!5115 = !DILocation(line: 495, column: 20, scope: !5074)
!5116 = !DILocation(line: 496, column: 3, scope: !5074)
!5117 = !DILocation(line: 498, column: 2, scope: !5065)
!5118 = distinct !DISubprogram(name: "extract_specifier", scope: !2596, file: !2596, line: 513, type: !4827, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2592, retainedNodes: !5119)
!5119 = !{!5120, !5121, !5122, !5123}
!5120 = !DILocalVariable(name: "conv", arg: 1, scope: !5118, file: !2596, line: 513, type: !4483)
!5121 = !DILocalVariable(name: "sp", arg: 2, scope: !5118, file: !2596, line: 514, type: !144)
!5122 = !DILocalVariable(name: "unsupported", scope: !5118, file: !2596, line: 516, type: !157)
!5123 = !DILabel(scope: !5124, name: "int_conv", file: !2596, line: 526)
!5124 = distinct !DILexicalBlock(scope: !5118, file: !2596, line: 520, column: 27)
!5125 = !DILocation(line: 0, scope: !5118)
!5126 = !DILocation(line: 518, column: 20, scope: !5118)
!5127 = !DILocation(line: 518, column: 8, scope: !5118)
!5128 = !DILocation(line: 518, column: 18, scope: !5118)
!5129 = !DILocation(line: 520, column: 2, scope: !5118)
!5130 = !DILocation(line: 525, column: 3, scope: !5124)
!5131 = !DILocation(line: 0, scope: !5124)
!5132 = !DILocation(line: 526, column: 1, scope: !5124)
!5133 = !DILocation(line: 528, column: 24, scope: !5134)
!5134 = distinct !DILexicalBlock(scope: !5124, file: !2596, line: 528, column: 7)
!5135 = !DILocation(line: 528, column: 7, scope: !5124)
!5136 = !DILocation(line: 535, column: 23, scope: !5137)
!5137 = distinct !DILexicalBlock(scope: !5124, file: !2596, line: 535, column: 7)
!5138 = !DILocation(line: 535, column: 7, scope: !5124)
!5139 = !DILocation(line: 536, column: 36, scope: !5140)
!5140 = distinct !DILexicalBlock(scope: !5137, file: !2596, line: 535, column: 31)
!5141 = !DILocation(line: 537, column: 3, scope: !5140)
!5142 = !DILocation(line: 570, column: 9, scope: !5124)
!5143 = !DILocation(line: 570, column: 23, scope: !5124)
!5144 = !DILocation(line: 575, column: 4, scope: !5145)
!5145 = distinct !DILexicalBlock(scope: !5146, file: !2596, line: 573, column: 48)
!5146 = distinct !DILexicalBlock(scope: !5124, file: !2596, line: 573, column: 7)
!5147 = !DILocation(line: 603, column: 9, scope: !5124)
!5148 = !DILocation(line: 603, column: 23, scope: !5124)
!5149 = !DILocation(line: 605, column: 24, scope: !5150)
!5150 = distinct !DILexicalBlock(scope: !5124, file: !2596, line: 605, column: 7)
!5151 = !DILocation(line: 605, column: 7, scope: !5124)
!5152 = !DILocation(line: 612, column: 9, scope: !5124)
!5153 = !DILocation(line: 612, column: 23, scope: !5124)
!5154 = !DILocation(line: 619, column: 24, scope: !5155)
!5155 = distinct !DILexicalBlock(scope: !5124, file: !2596, line: 619, column: 7)
!5156 = !DILocation(line: 619, column: 7, scope: !5124)
!5157 = !DILocation(line: 625, column: 9, scope: !5124)
!5158 = !DILocation(line: 625, column: 17, scope: !5124)
!5159 = !DILocation(line: 626, column: 3, scope: !5124)
!5160 = !DILocation(line: 629, column: 20, scope: !5118)
!5161 = !DILocation(line: 629, column: 8, scope: !5118)
!5162 = !DILocation(line: 518, column: 23, scope: !5118)
!5163 = !DILocation(line: 631, column: 2, scope: !5118)
!5164 = distinct !DISubprogram(name: "extract_decimal", scope: !2596, file: !2596, line: 318, type: !5165, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2592, retainedNodes: !5168)
!5165 = !DISubroutineType(types: !5166)
!5166 = !{!204, !5167}
!5167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !144, size: 32)
!5168 = !{!5169, !5170, !5171}
!5169 = !DILocalVariable(name: "str", arg: 1, scope: !5164, file: !2596, line: 318, type: !5167)
!5170 = !DILocalVariable(name: "sp", scope: !5164, file: !2596, line: 320, type: !144)
!5171 = !DILocalVariable(name: "val", scope: !5164, file: !2596, line: 321, type: !204)
!5172 = !DILocation(line: 0, scope: !5164)
!5173 = !DILocation(line: 320, column: 19, scope: !5164)
!5174 = !DILocation(line: 323, column: 37, scope: !5164)
!5175 = !DILocation(line: 323, column: 17, scope: !5164)
!5176 = !DILocation(line: 323, column: 9, scope: !5164)
!5177 = !DILocation(line: 323, column: 2, scope: !5164)
!5178 = !DILocation(line: 324, column: 13, scope: !5179)
!5179 = distinct !DILexicalBlock(scope: !5164, file: !2596, line: 323, column: 43)
!5180 = !DILocation(line: 324, column: 24, scope: !5179)
!5181 = !DILocation(line: 324, column: 19, scope: !5179)
!5182 = !DILocation(line: 324, column: 27, scope: !5179)
!5183 = distinct !{!5183, !5177, !5184}
!5184 = !DILocation(line: 325, column: 2, scope: !5164)
!5185 = !DILocation(line: 326, column: 7, scope: !5164)
!5186 = !DILocation(line: 327, column: 2, scope: !5164)
!5187 = distinct !DISubprogram(name: "isdigit", scope: !4966, file: !4966, line: 43, type: !107, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2592, retainedNodes: !5188)
!5188 = !{!5189}
!5189 = !DILocalVariable(name: "a", arg: 1, scope: !5187, file: !4966, line: 43, type: !103)
!5190 = !DILocation(line: 0, scope: !5187)
!5191 = !DILocation(line: 45, column: 29, scope: !5187)
!5192 = !DILocation(line: 45, column: 45, scope: !5187)
!5193 = !DILocation(line: 45, column: 2, scope: !5187)
!5194 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5195, file: !5195, line: 9, type: !3213, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !317)
!5195 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/getline")
!5196 = !DILocation(line: 11, column: 1, scope: !5194)
!5197 = !{i64 2147561470, i64 2147561513, i64 2147561553}
!5198 = !DILocation(line: 12, column: 1, scope: !5194)
!5199 = !{i64 2147565697, i64 2147565740, i64 2147565780}
!5200 = !DILocation(line: 13, column: 1, scope: !5194)
!5201 = !{i64 2147565906, i64 2147565949, i64 2147565989}
!5202 = !DILocation(line: 14, column: 1, scope: !5194)
!5203 = !{i64 2147566123, i64 2147566166, i64 2147566206}
!5204 = !DILocation(line: 15, column: 1, scope: !5194)
!5205 = !{i64 2147566292, i64 2147566335, i64 2147566375}
!5206 = !DILocation(line: 16, column: 1, scope: !5194)
!5207 = !{i64 2147566455, i64 2147566498, i64 2147566538}
!5208 = !DILocation(line: 17, column: 1, scope: !5194)
!5209 = !{i64 2147566639, i64 2147566682, i64 2147566722}
!5210 = !DILocation(line: 18, column: 1, scope: !5194)
!5211 = !{i64 2147566818, i64 2147566861, i64 2147566901}
!5212 = !DILocation(line: 19, column: 1, scope: !5194)
!5213 = !{i64 2147567060, i64 2147567103, i64 2147567143}
!5214 = !DILocation(line: 20, column: 1, scope: !5194)
!5215 = !{i64 2147567295, i64 2147567338, i64 2147567378}
!5216 = !DILocation(line: 21, column: 1, scope: !5194)
!5217 = !{i64 2147567481, i64 2147567524, i64 2147567564}
!5218 = !DILocation(line: 22, column: 1, scope: !5194)
!5219 = !{i64 2147567697, i64 2147567740, i64 2147567780}
!5220 = !DILocation(line: 23, column: 1, scope: !5194)
!5221 = !{i64 2147567900, i64 2147567943, i64 2147567983}
!5222 = !DILocation(line: 24, column: 1, scope: !5194)
!5223 = !{i64 2147568103, i64 2147568146, i64 2147568186}
!5224 = !DILocation(line: 25, column: 1, scope: !5194)
!5225 = !{i64 2147568278, i64 2147568321, i64 2147568361}
!5226 = !DILocation(line: 26, column: 1, scope: !5194)
!5227 = !{i64 2147568486, i64 2147568529, i64 2147568569}
!5228 = !DILocation(line: 27, column: 1, scope: !5194)
!5229 = !{i64 2147568690, i64 2147568733, i64 2147568773}
!5230 = !DILocation(line: 28, column: 1, scope: !5194)
!5231 = !{i64 2147568883, i64 2147568926, i64 2147568966}
!5232 = !DILocation(line: 29, column: 1, scope: !5194)
!5233 = !{i64 2147569085, i64 2147569128, i64 2147569168}
!5234 = !DILocation(line: 30, column: 1, scope: !5194)
!5235 = !{i64 2147569312, i64 2147569355, i64 2147569395}
!5236 = !DILocation(line: 31, column: 1, scope: !5194)
!5237 = !{i64 2147569514, i64 2147569557, i64 2147569597}
!5238 = !DILocation(line: 32, column: 1, scope: !5194)
!5239 = !{i64 2147569729, i64 2147569772, i64 2147569812}
!5240 = !DILocation(line: 33, column: 1, scope: !5194)
!5241 = !{i64 2147569901, i64 2147569944, i64 2147569984}
!5242 = !DILocation(line: 34, column: 1, scope: !5194)
!5243 = !{i64 2147570103, i64 2147570146, i64 2147570186}
!5244 = !DILocation(line: 35, column: 1, scope: !5194)
!5245 = !{i64 2147570329, i64 2147570372, i64 2147570412}
!5246 = !DILocation(line: 36, column: 1, scope: !5194)
!5247 = !{i64 2147570528, i64 2147570571, i64 2147570611}
!5248 = !DILocation(line: 37, column: 1, scope: !5194)
!5249 = !{i64 2147570703, i64 2147570746, i64 2147570786}
!5250 = !DILocation(line: 38, column: 1, scope: !5194)
!5251 = !{i64 2147570956, i64 2147570999, i64 2147571039}
!5252 = !DILocation(line: 39, column: 1, scope: !5194)
!5253 = !{i64 2147571197, i64 2147571240, i64 2147571280}
!5254 = !DILocation(line: 40, column: 1, scope: !5194)
!5255 = !{i64 2147571432, i64 2147571475, i64 2147571515}
!5256 = !DILocation(line: 41, column: 1, scope: !5194)
!5257 = !{i64 2147571664, i64 2147571707, i64 2147571747}
!5258 = !DILocation(line: 42, column: 1, scope: !5194)
!5259 = !{i64 2147571911, i64 2147571954, i64 2147571994}
!5260 = !DILocation(line: 43, column: 1, scope: !5194)
!5261 = !{i64 2147572137, i64 2147572180, i64 2147572220}
!5262 = !DILocation(line: 44, column: 1, scope: !5194)
!5263 = !{i64 2147572363, i64 2147572406, i64 2147572446}
!5264 = !DILocation(line: 45, column: 1, scope: !5194)
!5265 = !{i64 2147572622, i64 2147572665, i64 2147572705}
!5266 = !DILocation(line: 46, column: 1, scope: !5194)
!5267 = !{i64 2147572848, i64 2147572891, i64 2147572931}
!5268 = !DILocation(line: 47, column: 1, scope: !5194)
!5269 = !{i64 2147573083, i64 2147573126, i64 2147573166}
!5270 = !DILocation(line: 48, column: 1, scope: !5194)
!5271 = !{i64 2147573321, i64 2147573364, i64 2147573404}
!5272 = !DILocation(line: 49, column: 1, scope: !5194)
!5273 = !{i64 2147573595, i64 2147573638, i64 2147573678}
!5274 = !DILocation(line: 50, column: 1, scope: !5194)
!5275 = !{i64 2147573833, i64 2147573876, i64 2147573916}
!5276 = !DILocation(line: 51, column: 1, scope: !5194)
!5277 = !{i64 2147574086, i64 2147574129, i64 2147574169}
!5278 = !DILocation(line: 52, column: 1, scope: !5194)
!5279 = !{i64 2147574330, i64 2147574373, i64 2147574413}
!5280 = !DILocation(line: 53, column: 1, scope: !5194)
!5281 = !{i64 2147578641, i64 2147578684, i64 2147578724}
!5282 = !DILocation(line: 54, column: 1, scope: !5194)
!5283 = !{i64 2147578882, i64 2147578925, i64 2147578965}
!5284 = !DILocation(line: 55, column: 1, scope: !5194)
!5285 = !{i64 2147579129, i64 2147579172, i64 2147579212}
!5286 = !DILocation(line: 56, column: 1, scope: !5194)
!5287 = !{i64 2147579364, i64 2147579407, i64 2147579447}
!5288 = !DILocation(line: 57, column: 1, scope: !5194)
!5289 = !{i64 2147579599, i64 2147579642, i64 2147579682}
!5290 = !DILocation(line: 58, column: 1, scope: !5194)
!5291 = !{i64 2147579834, i64 2147579877, i64 2147579917}
!5292 = !DILocation(line: 59, column: 1, scope: !5194)
!5293 = !{i64 2147580072, i64 2147580115, i64 2147580155}
!5294 = !DILocation(line: 60, column: 1, scope: !5194)
!5295 = !{i64 2147580313, i64 2147580356, i64 2147580396}
!5296 = !DILocation(line: 61, column: 1, scope: !5194)
!5297 = !{i64 2147580593, i64 2147580636, i64 2147580676}
!5298 = !DILocation(line: 62, column: 1, scope: !5194)
!5299 = !{i64 2147580852, i64 2147580895, i64 2147580935}
!5300 = !DILocation(line: 63, column: 1, scope: !5194)
!5301 = !{i64 2147581090, i64 2147581133, i64 2147581173}
!5302 = !DILocation(line: 64, column: 1, scope: !5194)
!5303 = !{i64 2147581340, i64 2147581383, i64 2147581423}
!5304 = !DILocation(line: 65, column: 1, scope: !5194)
!5305 = !{i64 2147581569, i64 2147581612, i64 2147581652}
!5306 = !DILocation(line: 66, column: 1, scope: !5194)
!5307 = !{i64 2147581777, i64 2147581820, i64 2147581860}
!5308 = !DILocation(line: 67, column: 1, scope: !5194)
!5309 = !{i64 2147581988, i64 2147582031, i64 2147582071}
!5310 = !DILocation(line: 68, column: 1, scope: !5194)
!5311 = !{i64 2147582223, i64 2147582266, i64 2147582306}
!5312 = !DILocation(line: 69, column: 1, scope: !5194)
!5313 = !{i64 2147582452, i64 2147582495, i64 2147582535}
!5314 = !DILocation(line: 70, column: 1, scope: !5194)
!5315 = !{i64 2147582690, i64 2147582733, i64 2147582773}
!5316 = !DILocation(line: 71, column: 1, scope: !5194)
!5317 = !{i64 2147582922, i64 2147582965, i64 2147583005}
!5318 = !DILocation(line: 72, column: 1, scope: !5194)
!5319 = !{i64 2147583148, i64 2147583191, i64 2147583231}
!5320 = !DILocation(line: 73, column: 1, scope: !5194)
!5321 = !{i64 2147583365, i64 2147583408, i64 2147583448}
!5322 = !DILocation(line: 74, column: 1, scope: !5194)
!5323 = !{i64 2147583597, i64 2147583640, i64 2147583680}
!5324 = !DILocation(line: 75, column: 1, scope: !5194)
!5325 = !{i64 2147583823, i64 2147583866, i64 2147583906}
!5326 = !DILocation(line: 76, column: 1, scope: !5194)
!5327 = !{i64 2147584037, i64 2147584080, i64 2147584120}
!5328 = !DILocation(line: 77, column: 1, scope: !5194)
!5329 = !{i64 2147584257, i64 2147584300, i64 2147584340}
!5330 = !DILocation(line: 78, column: 1, scope: !5194)
!5331 = !{i64 2147584489, i64 2147584532, i64 2147584572}
!5332 = !DILocation(line: 79, column: 1, scope: !5194)
!5333 = !{i64 2147584697, i64 2147584740, i64 2147584780}
!5334 = !DILocation(line: 80, column: 1, scope: !5194)
!5335 = !{i64 2147584902, i64 2147584945, i64 2147584985}
!5336 = !DILocation(line: 81, column: 1, scope: !5194)
!5337 = !{i64 2147585119, i64 2147585162, i64 2147585202}
!5338 = !DILocation(line: 82, column: 1, scope: !5194)
!5339 = !{i64 2147585333, i64 2147585376, i64 2147585416}
!5340 = !DILocation(line: 83, column: 1, scope: !5194)
!5341 = !{i64 2147585559, i64 2147585602, i64 2147585642}
!5342 = !DILocation(line: 84, column: 1, scope: !5194)
!5343 = !{i64 2147585779, i64 2147585822, i64 2147585862}
!5344 = !DILocation(line: 85, column: 1, scope: !5194)
!5345 = !{i64 2147585984, i64 2147586027, i64 2147586067}
!5346 = !DILocation(line: 86, column: 1, scope: !5194)
!5347 = !{i64 2147586216, i64 2147586259, i64 2147586299}
!5348 = !DILocation(line: 87, column: 1, scope: !5194)
!5349 = !{i64 2147586451, i64 2147586494, i64 2147586534}
!5350 = !DILocation(line: 88, column: 1, scope: !5194)
!5351 = !{i64 2147590762, i64 2147590805, i64 2147590845}
!5352 = !DILocation(line: 89, column: 1, scope: !5194)
!5353 = !{i64 2147591012, i64 2147591055, i64 2147591095}
!5354 = !DILocation(line: 90, column: 1, scope: !5194)
!5355 = !{i64 2147591250, i64 2147591293, i64 2147591333}
!5356 = !DILocation(line: 91, column: 1, scope: !5194)
!5357 = !{i64 2147591461, i64 2147591504, i64 2147591544}
!5358 = !DILocation(line: 92, column: 1, scope: !5194)
!5359 = !{i64 2147591678, i64 2147591721, i64 2147591761}
!5360 = !DILocation(line: 93, column: 1, scope: !5194)
!5361 = !{i64 2147591874, i64 2147591917, i64 2147591957}
!5362 = !DILocation(line: 94, column: 1, scope: !5194)
!5363 = !{i64 2147592076, i64 2147592119, i64 2147592159}
!5364 = !DILocation(line: 95, column: 1, scope: !5194)
!5365 = !{i64 2147592269, i64 2147592312, i64 2147592352}
!5366 = !DILocation(line: 96, column: 1, scope: !5194)
!5367 = !{i64 2147592477, i64 2147592520, i64 2147592560}
!5368 = !DILocation(line: 97, column: 1, scope: !5194)
!5369 = !{i64 2147592673, i64 2147592716, i64 2147592756}
!5370 = !DILocation(line: 98, column: 1, scope: !5194)
!5371 = !{i64 2147592875, i64 2147592918, i64 2147592958}
!5372 = !DILocation(line: 99, column: 1, scope: !5194)
!5373 = !{i64 2147593086, i64 2147593129, i64 2147593169}
!5374 = !DILocation(line: 100, column: 1, scope: !5194)
!5375 = !{i64 2147593285, i64 2147593328, i64 2147593368}
!5376 = !DILocation(line: 101, column: 1, scope: !5194)
!5377 = !{i64 2147593460, i64 2147593503, i64 2147593543}
!5378 = !DILocation(line: 102, column: 1, scope: !5194)
!5379 = !{i64 2147593644, i64 2147593687, i64 2147593727}
!5380 = !DILocation(line: 103, column: 1, scope: !5194)
!5381 = !{i64 2147593846, i64 2147593889, i64 2147593929}
!5382 = !DILocation(line: 104, column: 1, scope: !5194)
!5383 = !{i64 2147594045, i64 2147594088, i64 2147594128}
!5384 = !DILocation(line: 105, column: 1, scope: !5194)
!5385 = !{i64 2147594211, i64 2147594254, i64 2147594294}
!5386 = !DILocation(line: 106, column: 1, scope: !5194)
!5387 = !{i64 2147594395, i64 2147594438, i64 2147594478}
!5388 = !DILocation(line: 107, column: 1, scope: !5194)
!5389 = !{i64 2147594585, i64 2147594628, i64 2147594668}
!5390 = !DILocation(line: 108, column: 1, scope: !5194)
!5391 = !{i64 2147594769, i64 2147594812, i64 2147594852}
!5392 = !DILocation(line: 109, column: 1, scope: !5194)
!5393 = !{i64 2147594983, i64 2147595026, i64 2147595066}
!5394 = !DILocation(line: 110, column: 1, scope: !5194)
!5395 = !{i64 2147595194, i64 2147595237, i64 2147595277}
!5396 = !DILocation(line: 111, column: 1, scope: !5194)
!5397 = !{i64 2147595417, i64 2147595460, i64 2147595500}
!5398 = !DILocation(line: 112, column: 1, scope: !5194)
!5399 = !{i64 2147595601, i64 2147595644, i64 2147595684}
!5400 = !DILocation(line: 113, column: 1, scope: !5194)
!5401 = !{i64 2147595815, i64 2147595858, i64 2147595898}
!5402 = !DILocation(line: 114, column: 1, scope: !5194)
!5403 = !{i64 2147595981, i64 2147596024, i64 2147596064}
!5404 = !DILocation(line: 115, column: 1, scope: !5194)
!5405 = !{i64 2147596162, i64 2147596205, i64 2147596245}
!5406 = !DILocation(line: 116, column: 1, scope: !5194)
!5407 = !{i64 2147596355, i64 2147596398, i64 2147596438}
!5408 = !DILocation(line: 117, column: 1, scope: !5194)
!5409 = !{i64 2147596581, i64 2147596624, i64 2147596664}
!5410 = !DILocation(line: 118, column: 1, scope: !5194)
!5411 = !{i64 2147596795, i64 2147596838, i64 2147596878}
!5412 = !DILocation(line: 119, column: 1, scope: !5194)
!5413 = !{i64 2147597021, i64 2147597064, i64 2147597104}
!5414 = !DILocation(line: 120, column: 1, scope: !5194)
!5415 = !{i64 2147597238, i64 2147597281, i64 2147597321}
!5416 = !DILocation(line: 121, column: 1, scope: !5194)
!5417 = !{i64 2147597515, i64 2147597558, i64 2147597598}
!5418 = !DILocation(line: 122, column: 1, scope: !5194)
!5419 = !{i64 2147597741, i64 2147597784, i64 2147597824}
!5420 = !DILocation(line: 123, column: 1, scope: !5194)
!5421 = !{i64 2147597949, i64 2147597992, i64 2147598032}
!5422 = !DILocation(line: 124, column: 1, scope: !5194)
!5423 = !{i64 2147598145, i64 2147598188, i64 2147598228}
!5424 = !DILocation(line: 125, column: 1, scope: !5194)
!5425 = !{i64 2147598410, i64 2147598453, i64 2147598493}
!5426 = !DILocation(line: 126, column: 1, scope: !5194)
!5427 = !{i64 2147598624, i64 2147598667, i64 2147598707}
!5428 = !DILocation(line: 127, column: 1, scope: !5194)
!5429 = !{i64 2147598799, i64 2147598842, i64 2147598882}
!5430 = !DILocation(line: 128, column: 1, scope: !5194)
!5431 = !{i64 2147599053, i64 2147599096, i64 2147599136}
!5432 = !DILocation(line: 129, column: 1, scope: !5194)
!5433 = !{i64 2147599252, i64 2147599295, i64 2147599335}
!5434 = !DILocation(line: 130, column: 1, scope: !5194)
!5435 = !{i64 2147599494, i64 2147599537, i64 2147599577}
!5436 = !DILocation(line: 131, column: 1, scope: !5194)
!5437 = !{i64 2147599657, i64 2147599700, i64 2147599740}
!5438 = !DILocation(line: 132, column: 1, scope: !5194)
!5439 = !{i64 2147603905, i64 2147603948, i64 2147603988}
!5440 = !DILocation(line: 133, column: 1, scope: !5194)
!5441 = !{i64 2147604098, i64 2147604141, i64 2147604181}
!5442 = !DILocation(line: 134, column: 1, scope: !5194)
!5443 = !{i64 2147604280, i64 2147604323, i64 2147604363}
!5444 = !DILocation(line: 135, column: 1, scope: !5194)
!5445 = !{i64 2147604494, i64 2147604537, i64 2147604577}
!5446 = !DILocation(line: 136, column: 1, scope: !5194)
!5447 = !{i64 2147604705, i64 2147604748, i64 2147604788}
!5448 = !DILocation(line: 137, column: 1, scope: !5194)
!5449 = !{i64 2147604925, i64 2147604968, i64 2147605008}
!5450 = !DILocation(line: 138, column: 1, scope: !5194)
!5451 = !{i64 2147605132, i64 2147605175, i64 2147605215}
!5452 = !DILocation(line: 139, column: 1, scope: !5194)
!5453 = !{i64 2147605405, i64 2147605448, i64 2147605488}
!5454 = !DILocation(line: 140, column: 1, scope: !5194)
!5455 = !{i64 2147605653, i64 2147605696, i64 2147605736}
!5456 = !DILocation(line: 141, column: 1, scope: !5194)
!5457 = !{i64 2147605852, i64 2147605895, i64 2147605935}
!5458 = !DILocation(line: 142, column: 1, scope: !5194)
!5459 = !{i64 2147606087, i64 2147606130, i64 2147606170}
!5460 = !DILocation(line: 143, column: 1, scope: !5194)
!5461 = !{i64 2147606337, i64 2147606380, i64 2147606420}
!5462 = !DILocation(line: 144, column: 1, scope: !5194)
!5463 = !{i64 2147606539, i64 2147606582, i64 2147606622}
!5464 = !DILocation(line: 145, column: 1, scope: !5194)
!5465 = !{i64 2147606762, i64 2147606805, i64 2147606845}
!5466 = !DILocation(line: 146, column: 1, scope: !5194)
!5467 = !{i64 2147606976, i64 2147607019, i64 2147607059}
!5468 = !DILocation(line: 147, column: 1, scope: !5194)
!5469 = !{i64 2147607220, i64 2147607263, i64 2147607303}
!5470 = !DILocation(line: 148, column: 1, scope: !5194)
!5471 = !{i64 2147607449, i64 2147607492, i64 2147607532}
!5472 = !DILocation(line: 149, column: 1, scope: !5194)
!5473 = !{i64 2147607678, i64 2147607721, i64 2147607761}
!5474 = !DILocation(line: 150, column: 1, scope: !5194)
!5475 = !{i64 2147607886, i64 2147607929, i64 2147607969}
!5476 = !DILocation(line: 151, column: 1, scope: !5194)
!5477 = !{i64 2147608124, i64 2147608167, i64 2147608207}
!5478 = !DILocation(line: 152, column: 1, scope: !5194)
!5479 = !{i64 2147608350, i64 2147608393, i64 2147608433}
!5480 = !DILocation(line: 153, column: 1, scope: !5194)
!5481 = !{i64 2147608609, i64 2147608652, i64 2147608692}
!5482 = !DILocation(line: 154, column: 1, scope: !5194)
!5483 = !{i64 2147608829, i64 2147608872, i64 2147608912}
!5484 = !DILocation(line: 155, column: 1, scope: !5194)
!5485 = !{i64 2147609061, i64 2147609104, i64 2147609144}
!5486 = !DILocation(line: 156, column: 1, scope: !5194)
!5487 = !{i64 2147609302, i64 2147609345, i64 2147609385}
!5488 = !DILocation(line: 157, column: 1, scope: !5194)
!5489 = !{i64 2147609543, i64 2147609586, i64 2147609626}
!5490 = !DILocation(line: 158, column: 1, scope: !5194)
!5491 = !{i64 2147609766, i64 2147609809, i64 2147609849}
!5492 = !DILocation(line: 159, column: 1, scope: !5194)
!5493 = !{i64 2147609983, i64 2147610026, i64 2147610066}
!5494 = !DILocation(line: 160, column: 1, scope: !5194)
!5495 = !{i64 2147610224, i64 2147610267, i64 2147610307}
!5496 = !DILocation(line: 161, column: 1, scope: !5194)
!5497 = !{i64 2147610411, i64 2147610454, i64 2147610494}
!5498 = !DILocation(line: 162, column: 1, scope: !5194)
!5499 = !{i64 2147610598, i64 2147610641, i64 2147610681}
!5500 = !DILocation(line: 163, column: 1, scope: !5194)
!5501 = !{i64 2147610761, i64 2147610804, i64 2147610844}
!5502 = !DILocation(line: 164, column: 1, scope: !5194)
!5503 = !{i64 2147611020, i64 2147611063, i64 2147611103}
!5504 = !DILocation(line: 165, column: 1, scope: !5194)
!5505 = !{i64 2147611243, i64 2147611286, i64 2147611326}
!5506 = !DILocation(line: 166, column: 1, scope: !5194)
!5507 = !{i64 2147611472, i64 2147611515, i64 2147611555}
!5508 = !DILocation(line: 167, column: 1, scope: !5194)
!5509 = !{i64 2147611668, i64 2147611711, i64 2147611751}
!5510 = !DILocation(line: 168, column: 1, scope: !5194)
!5511 = !{i64 2147611880, i64 2147611923, i64 2147611963}
!5512 = !DILocation(line: 169, column: 1, scope: !5194)
!5513 = !{i64 2147612101, i64 2147612144, i64 2147612184}
!5514 = !DILocation(line: 170, column: 1, scope: !5194)
!5515 = !{i64 2147612315, i64 2147612358, i64 2147612398}
!5516 = !DILocation(line: 171, column: 1, scope: !5194)
!5517 = !{i64 2147616566, i64 2147616609, i64 2147616649}
!5518 = !DILocation(line: 172, column: 1, scope: !5194)
!5519 = !{i64 2147616765, i64 2147616808, i64 2147616848}
!5520 = !DILocation(line: 173, column: 1, scope: !5194)
!5521 = !{i64 2147616970, i64 2147617013, i64 2147617053}
!5522 = !DILocation(line: 174, column: 1, scope: !5194)
!5523 = !{i64 2147617190, i64 2147617233, i64 2147617273}
!5524 = !DILocation(line: 175, column: 1, scope: !5194)
!5525 = !{i64 2147617391, i64 2147617434, i64 2147617474}
!5526 = !DILocation(line: 176, column: 1, scope: !5194)
!5527 = !{i64 2147617590, i64 2147617633, i64 2147617673}
!5528 = !DILocation(line: 177, column: 1, scope: !5194)
!5529 = !{i64 2147617795, i64 2147617838, i64 2147617878}
!5530 = !DILocation(line: 178, column: 1, scope: !5194)
!5531 = !{i64 2147617964, i64 2147618007, i64 2147618047}
!5532 = !DILocation(line: 179, column: 1, scope: !5194)
!5533 = !{i64 2147618148, i64 2147618191, i64 2147618231}
!5534 = !DILocation(line: 180, column: 1, scope: !5194)
!5535 = !{i64 2147618332, i64 2147618375, i64 2147618415}
!5536 = !DILocation(line: 181, column: 1, scope: !5194)
!5537 = !{i64 2147618519, i64 2147618562, i64 2147618602}
!5538 = !DILocation(line: 182, column: 1, scope: !5194)
!5539 = !{i64 2147618703, i64 2147618746, i64 2147618786}
!5540 = !DILocation(line: 183, column: 1, scope: !5194)
!5541 = !{i64 2147618941, i64 2147618984, i64 2147619024}
!5542 = !DILocation(line: 184, column: 1, scope: !5194)
!5543 = !{i64 2147619171, i64 2147619214, i64 2147619254}
!5544 = !DILocation(line: 185, column: 1, scope: !5194)
!5545 = !{i64 2147619400, i64 2147619443, i64 2147619483}
!5546 = !DILocation(line: 186, column: 1, scope: !5194)
!5547 = !{i64 2147619587, i64 2147619630, i64 2147619670}
!5548 = !DILocation(line: 187, column: 1, scope: !5194)
!5549 = !{i64 2147619783, i64 2147619826, i64 2147619866}
!5550 = !DILocation(line: 188, column: 1, scope: !5194)
!5551 = !{i64 2147619991, i64 2147620034, i64 2147620074}
!5552 = !DILocation(line: 189, column: 1, scope: !5194)
!5553 = !{i64 2147620203, i64 2147620246, i64 2147620286}
!5554 = !DILocation(line: 190, column: 1, scope: !5194)
!5555 = !{i64 2147620402, i64 2147620445, i64 2147620485}
!5556 = !DILocation(line: 191, column: 1, scope: !5194)
!5557 = !{i64 2147620640, i64 2147620683, i64 2147620723}
!5558 = !DILocation(line: 192, column: 1, scope: !5194)
!5559 = !{i64 2147620836, i64 2147620879, i64 2147620919}
!5560 = !DILocation(line: 193, column: 1, scope: !5194)
!5561 = !{i64 2147621038, i64 2147621081, i64 2147621121}
!5562 = !DILocation(line: 194, column: 1, scope: !5194)
!5563 = !{i64 2147621231, i64 2147621274, i64 2147621314}
!5564 = !DILocation(line: 195, column: 1, scope: !5194)
!5565 = !{i64 2147621465, i64 2147621508, i64 2147621548}
!5566 = !DILocation(line: 196, column: 1, scope: !5194)
!5567 = !{i64 2147621628, i64 2147621671, i64 2147621711}
!5568 = !DILocation(line: 197, column: 1, scope: !5194)
!5569 = !{i64 2147621867, i64 2147621910, i64 2147621950}
!5570 = !DILocation(line: 198, column: 1, scope: !5194)
!5571 = !{i64 2147622106, i64 2147622149, i64 2147622189}
!5572 = !DILocation(line: 199, column: 1, scope: !5194)
!5573 = !{i64 2147622342, i64 2147622385, i64 2147622425}
!5574 = !DILocation(line: 200, column: 1, scope: !5194)
!5575 = !{i64 2147622572, i64 2147622615, i64 2147622655}
!5576 = !DILocation(line: 201, column: 1, scope: !5194)
!5577 = !{i64 2147622759, i64 2147622802, i64 2147622842}
!5578 = !DILocation(line: 202, column: 1, scope: !5194)
!5579 = !{i64 2147622958, i64 2147623001, i64 2147623041}
!5580 = !DILocation(line: 203, column: 1, scope: !5194)
!5581 = !{i64 2147623229, i64 2147623272, i64 2147623312}
!5582 = !DILocation(line: 204, column: 1, scope: !5194)
!5583 = !{i64 2147623404, i64 2147623447, i64 2147623487}
!5584 = !DILocation(line: 205, column: 1, scope: !5194)
!5585 = !{i64 2147623638, i64 2147623681, i64 2147623721}
!5586 = !DILocation(line: 206, column: 1, scope: !5194)
!5587 = !{i64 2147623846, i64 2147623889, i64 2147623929}
!5588 = !DILocation(line: 207, column: 1, scope: !5194)
!5589 = !{i64 2147624045, i64 2147624088, i64 2147624128}
!5590 = !DILocation(line: 208, column: 1, scope: !5194)
!5591 = !{i64 2147624263, i64 2147624306, i64 2147624346}
!5592 = !DILocation(line: 209, column: 1, scope: !5194)
!5593 = !{i64 2147624453, i64 2147624496, i64 2147624536}
!5594 = !DILocation(line: 210, column: 1, scope: !5194)
!5595 = !{i64 2147624649, i64 2147624692, i64 2147624732}
!5596 = !DILocation(line: 211, column: 1, scope: !5194)
!5597 = !{i64 2147624855, i64 2147624898, i64 2147624938}
!5598 = !DILocation(line: 212, column: 1, scope: !5194)
!5599 = !{i64 2147625060, i64 2147625103, i64 2147625143}
!5600 = !DILocation(line: 213, column: 1, scope: !5194)
!5601 = !{i64 2147625286, i64 2147625329, i64 2147625369}
!5602 = !DILocation(line: 214, column: 1, scope: !5194)
!5603 = !{i64 2147625518, i64 2147625561, i64 2147625601}
!5604 = !DILocation(line: 215, column: 1, scope: !5194)
!5605 = !{i64 2147629763, i64 2147629806, i64 2147629846}
!5606 = !DILocation(line: 216, column: 1, scope: !5194)
!5607 = !{i64 2147629972, i64 2147630015, i64 2147630055}
!5608 = !DILocation(line: 217, column: 1, scope: !5194)
!5609 = !{i64 2147630156, i64 2147630199, i64 2147630239}
!5610 = !DILocation(line: 218, column: 1, scope: !5194)
!5611 = !{i64 2147630382, i64 2147630425, i64 2147630465}
!5612 = !DILocation(line: 219, column: 1, scope: !5194)
!5613 = !{i64 2147630608, i64 2147630651, i64 2147630691}
!5614 = !DILocation(line: 220, column: 1, scope: !5194)
!5615 = !{i64 2147630834, i64 2147630877, i64 2147630917}
!5616 = !DILocation(line: 221, column: 1, scope: !5194)
!5617 = !{i64 2147631060, i64 2147631103, i64 2147631143}
!5618 = !DILocation(line: 222, column: 1, scope: !5194)
!5619 = !{i64 2147631286, i64 2147631329, i64 2147631369}
!5620 = !DILocation(line: 223, column: 1, scope: !5194)
!5621 = !{i64 2147631518, i64 2147631561, i64 2147631601}
!5622 = !DILocation(line: 224, column: 1, scope: !5194)
!5623 = !{i64 2147631756, i64 2147631799, i64 2147631839}
!5624 = !DILocation(line: 225, column: 1, scope: !5194)
!5625 = !{i64 2147631976, i64 2147632019, i64 2147632059}
!5626 = !DILocation(line: 226, column: 1, scope: !5194)
!5627 = !{i64 2147632220, i64 2147632263, i64 2147632303}
!5628 = !DILocation(line: 227, column: 1, scope: !5194)
!5629 = !{i64 2147632461, i64 2147632504, i64 2147632544}
!5630 = !DILocation(line: 228, column: 1, scope: !5194)
!5631 = !{i64 2147632696, i64 2147632739, i64 2147632779}
!5632 = !DILocation(line: 229, column: 1, scope: !5194)
!5633 = !{i64 2147632928, i64 2147632971, i64 2147633011}
!5634 = !DILocation(line: 230, column: 1, scope: !5194)
!5635 = !{i64 2147633130, i64 2147633173, i64 2147633213}
!5636 = !DILocation(line: 231, column: 1, scope: !5194)
!5637 = !{i64 2147633380, i64 2147633423, i64 2147633463}
!5638 = !DILocation(line: 232, column: 1, scope: !5194)
!5639 = !{i64 2147633618, i64 2147633661, i64 2147633701}
!5640 = !DILocation(line: 233, column: 1, scope: !5194)
!5641 = !{i64 2147633802, i64 2147633845, i64 2147633885}
!5642 = !DILocation(line: 234, column: 1, scope: !5194)
!5643 = !{i64 2147634026, i64 2147634069, i64 2147634109}
!5644 = !DILocation(line: 235, column: 1, scope: !5194)
!5645 = !{i64 2147634264, i64 2147634307, i64 2147634347}
!5646 = !DILocation(line: 236, column: 1, scope: !5194)
!5647 = !{i64 2147634502, i64 2147634545, i64 2147634585}
!5648 = !DILocation(line: 237, column: 1, scope: !5194)
!5649 = !{i64 2147634695, i64 2147634738, i64 2147634778}
!5650 = !DILocation(line: 238, column: 1, scope: !5194)
!5651 = !{i64 2147634948, i64 2147634991, i64 2147635031}
!5652 = !DILocation(line: 239, column: 1, scope: !5194)
!5653 = !{i64 2147635162, i64 2147635205, i64 2147635245}
!5654 = !DILocation(line: 240, column: 1, scope: !5194)
!5655 = !{i64 2147635370, i64 2147635413, i64 2147635453}
!5656 = !DILocation(line: 241, column: 1, scope: !5194)
!5657 = !{i64 2147635560, i64 2147635603, i64 2147635643}
!5658 = !DILocation(line: 242, column: 1, scope: !5194)
!5659 = !{i64 2147635774, i64 2147635817, i64 2147635857}
!5660 = !DILocation(line: 243, column: 1, scope: !5194)
!5661 = !{i64 2147636036, i64 2147636079, i64 2147636119}
!5662 = !DILocation(line: 244, column: 1, scope: !5194)
!5663 = !{i64 2147636247, i64 2147636290, i64 2147636330}
!5664 = !DILocation(line: 245, column: 1, scope: !5194)
!5665 = !{i64 2147636491, i64 2147636534, i64 2147636574}
!5666 = !DILocation(line: 246, column: 1, scope: !5194)
!5667 = !{i64 2147636702, i64 2147636745, i64 2147636785}
!5668 = !DILocation(line: 247, column: 1, scope: !5194)
!5669 = !{i64 2147636931, i64 2147636974, i64 2147637014}
!5670 = !DILocation(line: 248, column: 1, scope: !5194)
!5671 = !{i64 2147637196, i64 2147637239, i64 2147637279}
!5672 = !DILocation(line: 249, column: 1, scope: !5194)
!5673 = !{i64 2147637401, i64 2147637444, i64 2147637484}
!5674 = !DILocation(line: 250, column: 1, scope: !5194)
!5675 = !{i64 2147637597, i64 2147637640, i64 2147637680}
!5676 = !DILocation(line: 251, column: 1, scope: !5194)
!5677 = !{i64 2147637820, i64 2147637863, i64 2147637903}
!5678 = !DILocation(line: 252, column: 1, scope: !5194)
!5679 = !{i64 2147637983, i64 2147638026, i64 2147638066}
!5680 = !DILocation(line: 253, column: 1, scope: !5194)
!5681 = !{i64 2147638188, i64 2147638231, i64 2147638271}
!5682 = !DILocation(line: 254, column: 1, scope: !5194)
!5683 = !{i64 2147642469, i64 2147642512, i64 2147642552}
!5684 = !DILocation(line: 255, column: 1, scope: !5194)
!5685 = !{i64 2147642683, i64 2147642726, i64 2147642766}
!5686 = !DILocation(line: 256, column: 1, scope: !5194)
!5687 = !{i64 2147642897, i64 2147642940, i64 2147642980}
!5688 = !DILocation(line: 257, column: 1, scope: !5194)
!5689 = !{i64 2147643108, i64 2147643151, i64 2147643191}
!5690 = !DILocation(line: 258, column: 1, scope: !5194)
!5691 = !{i64 2147643301, i64 2147643344, i64 2147643384}
!5692 = !DILocation(line: 259, column: 1, scope: !5194)
!5693 = !{i64 2147643500, i64 2147643543, i64 2147643583}
!5694 = !DILocation(line: 260, column: 1, scope: !5194)
!5695 = !{i64 2147643696, i64 2147643739, i64 2147643779}
!5696 = !DILocation(line: 261, column: 1, scope: !5194)
!5697 = !{i64 2147643895, i64 2147643938, i64 2147643978}
!5698 = !DILocation(line: 262, column: 1, scope: !5194)
!5699 = !{i64 2147644067, i64 2147644110, i64 2147644150}
!5700 = !DILocation(line: 263, column: 1, scope: !5194)
!5701 = !{i64 2147644260, i64 2147644303, i64 2147644343}
!5702 = !DILocation(line: 264, column: 1, scope: !5194)
!5703 = !{i64 2147644456, i64 2147644499, i64 2147644539}
!5704 = !DILocation(line: 265, column: 1, scope: !5194)
!5705 = !{i64 2147644683, i64 2147644726, i64 2147644766}
!5706 = !DILocation(line: 266, column: 1, scope: !5194)
!5707 = !{i64 2147644900, i64 2147644943, i64 2147644983}
!5708 = !DILocation(line: 267, column: 1, scope: !5194)
!5709 = !{i64 2147645192, i64 2147645235, i64 2147645275}
!5710 = !DILocation(line: 268, column: 1, scope: !5194)
!5711 = !{i64 2147645424, i64 2147645467, i64 2147645507}
!5712 = !DILocation(line: 269, column: 1, scope: !5194)
!5713 = !{i64 2147645641, i64 2147645684, i64 2147645724}
!5714 = !DILocation(line: 270, column: 1, scope: !5194)
!5715 = !{i64 2147645848, i64 2147645891, i64 2147645931}
!5716 = !DILocation(line: 271, column: 1, scope: !5194)
!5717 = !{i64 2147646049, i64 2147646092, i64 2147646132}
!5718 = !DILocation(line: 272, column: 1, scope: !5194)
!5719 = !{i64 2147646281, i64 2147646324, i64 2147646364}
!5720 = !DILocation(line: 273, column: 1, scope: !5194)
!5721 = !{i64 2147646489, i64 2147646532, i64 2147646572}
!5722 = !DILocation(line: 274, column: 1, scope: !5194)
!5723 = !{i64 2147646679, i64 2147646722, i64 2147646762}
!5724 = !DILocation(line: 275, column: 1, scope: !5194)
!5725 = !{i64 2147646905, i64 2147646948, i64 2147646988}
!5726 = !DILocation(line: 276, column: 1, scope: !5194)
!5727 = !{i64 2147647094, i64 2147647137, i64 2147647177}
!5728 = !DILocation(line: 277, column: 1, scope: !5194)
!5729 = !{i64 2147647365, i64 2147647408, i64 2147647448}
!5730 = !DILocation(line: 278, column: 1, scope: !5194)
!5731 = !{i64 2147647585, i64 2147647628, i64 2147647668}
!5732 = !DILocation(line: 279, column: 1, scope: !5194)
!5733 = !{i64 2147647838, i64 2147647881, i64 2147647921}
!5734 = !DILocation(line: 280, column: 1, scope: !5194)
!5735 = !{i64 2147648046, i64 2147648089, i64 2147648129}
!5736 = !DILocation(line: 281, column: 1, scope: !5194)
!5737 = !{i64 2147648278, i64 2147648321, i64 2147648361}
!5738 = !DILocation(line: 282, column: 1, scope: !5194)
!5739 = !{i64 2147648489, i64 2147648532, i64 2147648572}
!5740 = !DILocation(line: 283, column: 1, scope: !5194)
!5741 = !{i64 2147648679, i64 2147648722, i64 2147648762}
!5742 = !DILocation(line: 284, column: 1, scope: !5194)
!5743 = !{i64 2147648893, i64 2147648936, i64 2147648976}
!5744 = !DILocation(line: 285, column: 1, scope: !5194)
!5745 = !{i64 2147649092, i64 2147649135, i64 2147649175}
!5746 = !DILocation(line: 286, column: 1, scope: !5194)
!5747 = !{i64 2147649279, i64 2147649322, i64 2147649362}
!5748 = !DILocation(line: 287, column: 1, scope: !5194)
!5749 = !{i64 2147649487, i64 2147649530, i64 2147649570}
!5750 = !DILocation(line: 288, column: 1, scope: !5194)
!5751 = !{i64 2147649716, i64 2147649759, i64 2147649799}
!5752 = !DILocation(line: 289, column: 1, scope: !5194)
!5753 = !{i64 2147649918, i64 2147649961, i64 2147650001}
!5754 = !DILocation(line: 290, column: 1, scope: !5194)
!5755 = !{i64 2147650117, i64 2147650160, i64 2147650200}
!5756 = !DILocation(line: 291, column: 1, scope: !5194)
!5757 = !{i64 2147650334, i64 2147650377, i64 2147650417}
!5758 = !DILocation(line: 293, column: 1, scope: !5194)
!5759 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !129, file: !129, line: 30, type: !136, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !5760)
!5760 = !{!5761, !5762}
!5761 = !DILocalVariable(name: "arg", arg: 1, scope: !5759, file: !129, line: 30, type: !138)
!5762 = !DILocalVariable(name: "key", scope: !5759, file: !129, line: 32, type: !121)
!5763 = !DILocation(line: 0, scope: !5759)
!5764 = !DILocation(line: 37, column: 2, scope: !5759)
!5765 = !DILocation(line: 38, column: 2, scope: !5759)
!5766 = !DILocation(line: 55, column: 2, scope: !5767, inlinedAt: !5774)
!5767 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5768, file: !5768, line: 42, type: !5769, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !5771)
!5768 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5769 = !DISubroutineType(types: !5770)
!5770 = !{!32}
!5771 = !{!5772, !5773}
!5772 = !DILocalVariable(name: "key", scope: !5767, file: !5768, line: 44, type: !32)
!5773 = !DILocalVariable(name: "tmp", scope: !5767, file: !5768, line: 53, type: !32)
!5774 = distinct !DILocation(line: 40, column: 8, scope: !5759)
!5775 = !{i64 1932794}
!5776 = !DILocation(line: 0, scope: !5767, inlinedAt: !5774)
!5777 = !DILocalVariable(name: "key", arg: 1, scope: !5778, file: !5768, line: 84, type: !32)
!5778 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5768, file: !5768, line: 84, type: !5779, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !5781)
!5779 = !DISubroutineType(types: !5780)
!5780 = !{null, !32}
!5781 = !{!5777}
!5782 = !DILocation(line: 0, scope: !5778, inlinedAt: !5783)
!5783 = distinct !DILocation(line: 47, column: 2, scope: !5759)
!5784 = !DILocation(line: 95, column: 2, scope: !5778, inlinedAt: !5783)
!5785 = !{i64 1933611}
!5786 = !DILocation(line: 51, column: 18, scope: !5759)
!5787 = !DILocation(line: 53, column: 2, scope: !5759)
!5788 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !5789, file: !5789, line: 1609, type: !3213, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !317)
!5789 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5790 = !DILocation(line: 1611, column: 3, scope: !5788)
!5791 = !DILocation(line: 1612, column: 1, scope: !5788)
!5792 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !5789, file: !5789, line: 1629, type: !3213, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !317)
!5793 = !DILocation(line: 1631, column: 3, scope: !5792)
!5794 = !DILocation(line: 1632, column: 1, scope: !5792)
!5795 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !171, file: !171, line: 26, type: !177, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !168, retainedNodes: !5796)
!5796 = !{!5797}
!5797 = !DILocalVariable(name: "dev", arg: 1, scope: !5795, file: !171, line: 26, type: !179)
!5798 = !DILocation(line: 0, scope: !5795)
!5799 = !DILocation(line: 68, column: 2, scope: !5795)
!5800 = !DILocation(line: 25, column: 6, scope: !5801)
!5801 = distinct !DILexicalBlock(scope: !341, file: !294, line: 25, column: 6)
!5802 = !DILocation(line: 25, column: 10, scope: !5801)
!5803 = !DILocation(line: 25, column: 6, scope: !341)
!5804 = !DILocation(line: 26, column: 3, scope: !5805)
!5805 = distinct !DILexicalBlock(scope: !5806, file: !294, line: 26, column: 3)
!5806 = distinct !DILexicalBlock(scope: !5801, file: !294, line: 25, column: 19)
!5807 = !DILocation(line: 27, column: 2, scope: !5806)
!5808 = !DILocation(line: 29, column: 8, scope: !347)
!5809 = !DILocation(line: 0, scope: !347)
!5810 = !DILocation(line: 29, column: 6, scope: !341)
!5811 = !DILocation(line: 30, column: 14, scope: !341)
!5812 = !DILocation(line: 30, column: 2, scope: !341)
!5813 = distinct !DISubprogram(name: "k_queue_get", scope: !3649, file: !3649, line: 649, type: !5814, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !197, retainedNodes: !5821)
!5814 = !DISubroutineType(types: !5815)
!5815 = !{!102, !5816, !5817}
!5816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !299, size: 32)
!5817 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !201, line: 67, baseType: !5818)
!5818 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 65, size: 64, elements: !5819)
!5819 = !{!5820}
!5820 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !5818, file: !201, line: 66, baseType: !200, size: 64)
!5821 = !{!5822, !5823}
!5822 = !DILocalVariable(name: "queue", arg: 1, scope: !5813, file: !3649, line: 649, type: !5816)
!5823 = !DILocalVariable(name: "timeout", arg: 2, scope: !5813, file: !3649, line: 649, type: !5817)
!5824 = !DILocation(line: 0, scope: !5813)
!5825 = !DILocation(line: 658, column: 2, scope: !5826)
!5826 = distinct !DILexicalBlock(scope: !5813, file: !3649, line: 658, column: 2)
!5827 = !{i64 2154148608}
!5828 = !DILocation(line: 659, column: 9, scope: !5813)
!5829 = !DILocation(line: 659, column: 2, scope: !5813)
!5830 = distinct !DISubprogram(name: "console_getline_init", scope: !294, file: !294, line: 33, type: !3213, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !197, retainedNodes: !5831)
!5831 = !{!5832}
!5832 = !DILocalVariable(name: "i", scope: !5830, file: !294, line: 35, type: !103)
!5833 = !DILocation(line: 0, scope: !5830)
!5834 = !DILocation(line: 38, column: 3, scope: !5835)
!5835 = distinct !DILexicalBlock(scope: !5836, file: !294, line: 38, column: 3)
!5836 = distinct !DILexicalBlock(scope: !5837, file: !294, line: 37, column: 46)
!5837 = distinct !DILexicalBlock(scope: !5838, file: !294, line: 37, column: 2)
!5838 = distinct !DILexicalBlock(scope: !5830, file: !294, line: 37, column: 2)
!5839 = !DILocation(line: 45, column: 2, scope: !5830)
!5840 = !DILocation(line: 46, column: 1, scope: !5830)
!5841 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !5842, file: !5842, line: 57, type: !5843, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !5889)
!5842 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5843 = !DISubroutineType(types: !5844)
!5844 = !{null, !32, !5845}
!5845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5846, size: 32)
!5846 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5847)
!5847 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2751, line: 141, baseType: !5848)
!5848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2751, line: 97, size: 256, elements: !5849)
!5849 = !{!5850}
!5850 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !5848, file: !2751, line: 107, baseType: !5851, size: 256)
!5851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2751, line: 98, size: 256, elements: !5852)
!5852 = !{!5853, !5858, !5863, !5868, !5873, !5878, !5883, !5888}
!5853 = !DIDerivedType(tag: DW_TAG_member, scope: !5851, file: !2751, line: 99, baseType: !5854, size: 32)
!5854 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5851, file: !2751, line: 99, size: 32, elements: !5855)
!5855 = !{!5856, !5857}
!5856 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !5854, file: !2751, line: 99, baseType: !121, size: 32)
!5857 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !5854, file: !2751, line: 99, baseType: !121, size: 32)
!5858 = !DIDerivedType(tag: DW_TAG_member, scope: !5851, file: !2751, line: 100, baseType: !5859, size: 32, offset: 32)
!5859 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5851, file: !2751, line: 100, size: 32, elements: !5860)
!5860 = !{!5861, !5862}
!5861 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !5859, file: !2751, line: 100, baseType: !121, size: 32)
!5862 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !5859, file: !2751, line: 100, baseType: !121, size: 32)
!5863 = !DIDerivedType(tag: DW_TAG_member, scope: !5851, file: !2751, line: 101, baseType: !5864, size: 32, offset: 64)
!5864 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5851, file: !2751, line: 101, size: 32, elements: !5865)
!5865 = !{!5866, !5867}
!5866 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !5864, file: !2751, line: 101, baseType: !121, size: 32)
!5867 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !5864, file: !2751, line: 101, baseType: !121, size: 32)
!5868 = !DIDerivedType(tag: DW_TAG_member, scope: !5851, file: !2751, line: 102, baseType: !5869, size: 32, offset: 96)
!5869 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5851, file: !2751, line: 102, size: 32, elements: !5870)
!5870 = !{!5871, !5872}
!5871 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !5869, file: !2751, line: 102, baseType: !121, size: 32)
!5872 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !5869, file: !2751, line: 102, baseType: !121, size: 32)
!5873 = !DIDerivedType(tag: DW_TAG_member, scope: !5851, file: !2751, line: 103, baseType: !5874, size: 32, offset: 128)
!5874 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5851, file: !2751, line: 103, size: 32, elements: !5875)
!5875 = !{!5876, !5877}
!5876 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !5874, file: !2751, line: 103, baseType: !121, size: 32)
!5877 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !5874, file: !2751, line: 103, baseType: !121, size: 32)
!5878 = !DIDerivedType(tag: DW_TAG_member, scope: !5851, file: !2751, line: 104, baseType: !5879, size: 32, offset: 160)
!5879 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5851, file: !2751, line: 104, size: 32, elements: !5880)
!5880 = !{!5881, !5882}
!5881 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !5879, file: !2751, line: 104, baseType: !121, size: 32)
!5882 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !5879, file: !2751, line: 104, baseType: !121, size: 32)
!5883 = !DIDerivedType(tag: DW_TAG_member, scope: !5851, file: !2751, line: 105, baseType: !5884, size: 32, offset: 192)
!5884 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5851, file: !2751, line: 105, size: 32, elements: !5885)
!5885 = !{!5886, !5887}
!5886 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !5884, file: !2751, line: 105, baseType: !121, size: 32)
!5887 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !5884, file: !2751, line: 105, baseType: !121, size: 32)
!5888 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !5851, file: !2751, line: 106, baseType: !121, size: 32, offset: 224)
!5889 = !{!5890, !5891}
!5890 = !DILocalVariable(name: "reason", arg: 1, scope: !5841, file: !5842, line: 57, type: !32)
!5891 = !DILocalVariable(name: "esf", arg: 2, scope: !5841, file: !5842, line: 57, type: !5845)
!5892 = !DILocation(line: 0, scope: !5841)
!5893 = !DILocation(line: 63, column: 2, scope: !5841)
!5894 = !DILocation(line: 64, column: 1, scope: !5841)
!5895 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !5842, file: !5842, line: 82, type: !5896, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !5911)
!5896 = !DISubroutineType(types: !5897)
!5897 = !{null, !5845, !5898}
!5898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5899, size: 32)
!5899 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !446, line: 37, baseType: !5900)
!5900 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !446, line: 25, size: 288, elements: !5901)
!5901 = !{!5902, !5903, !5904, !5905, !5906, !5907, !5908, !5909, !5910}
!5902 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5900, file: !446, line: 26, baseType: !121, size: 32)
!5903 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5900, file: !446, line: 27, baseType: !121, size: 32, offset: 32)
!5904 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5900, file: !446, line: 28, baseType: !121, size: 32, offset: 64)
!5905 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5900, file: !446, line: 29, baseType: !121, size: 32, offset: 96)
!5906 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5900, file: !446, line: 30, baseType: !121, size: 32, offset: 128)
!5907 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5900, file: !446, line: 31, baseType: !121, size: 32, offset: 160)
!5908 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5900, file: !446, line: 32, baseType: !121, size: 32, offset: 192)
!5909 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5900, file: !446, line: 33, baseType: !121, size: 32, offset: 224)
!5910 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5900, file: !446, line: 34, baseType: !121, size: 32, offset: 256)
!5911 = !{!5912, !5913, !5914}
!5912 = !DILocalVariable(name: "esf", arg: 1, scope: !5895, file: !5842, line: 82, type: !5845)
!5913 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !5895, file: !5842, line: 82, type: !5898)
!5914 = !DILocalVariable(name: "reason", scope: !5895, file: !5842, line: 88, type: !32)
!5915 = !DILocation(line: 0, scope: !5895)
!5916 = !DILocation(line: 88, column: 35, scope: !5895)
!5917 = !DILocation(line: 108, column: 2, scope: !5895)
!5918 = !DILocation(line: 131, column: 1, scope: !5895)
!5919 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !5842, file: !5842, line: 133, type: !5920, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !5922)
!5920 = !DISubroutineType(types: !5921)
!5921 = !{null, !102}
!5922 = !{!5923, !5924, !5925}
!5923 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !5919, file: !5842, line: 133, type: !102)
!5924 = !DILocalVariable(name: "ssf_contents", scope: !5919, file: !5842, line: 135, type: !849)
!5925 = !DILocalVariable(name: "oops_esf", scope: !5919, file: !5842, line: 136, type: !5847)
!5926 = !DILocation(line: 0, scope: !5919)
!5927 = !DILocation(line: 136, column: 2, scope: !5919)
!5928 = !DILocation(line: 136, column: 15, scope: !5919)
!5929 = !DILocation(line: 139, column: 22, scope: !5919)
!5930 = !DILocation(line: 139, column: 17, scope: !5919)
!5931 = !DILocation(line: 139, column: 20, scope: !5919)
!5932 = !DILocation(line: 141, column: 2, scope: !5919)
!5933 = !DILocation(line: 142, column: 2, scope: !5919)
!5934 = distinct !DISubprogram(name: "arch_irq_enable", scope: !5935, file: !5935, line: 40, type: !5779, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2642, retainedNodes: !5936)
!5935 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5936 = !{!5937}
!5937 = !DILocalVariable(name: "irq", arg: 1, scope: !5934, file: !5935, line: 40, type: !32)
!5938 = !DILocation(line: 0, scope: !5934)
!5939 = !DILocation(line: 42, column: 2, scope: !5934)
!5940 = !DILocation(line: 43, column: 1, scope: !5934)
!5941 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !515, file: !515, line: 1684, type: !5942, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2642, retainedNodes: !5944)
!5942 = !DISubroutineType(types: !5943)
!5943 = !{null, !750}
!5944 = !{!5945}
!5945 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5941, file: !515, line: 1684, type: !750)
!5946 = !DILocation(line: 0, scope: !5941)
!5947 = !DILocation(line: 1686, column: 23, scope: !5948)
!5948 = distinct !DILexicalBlock(scope: !5941, file: !515, line: 1686, column: 7)
!5949 = !DILocation(line: 1686, column: 7, scope: !5941)
!5950 = !DILocation(line: 1688, column: 5, scope: !5951)
!5951 = distinct !DILexicalBlock(scope: !5948, file: !515, line: 1687, column: 3)
!5952 = !{i64 2150441259}
!5953 = !DILocation(line: 1689, column: 81, scope: !5951)
!5954 = !DILocation(line: 1689, column: 60, scope: !5951)
!5955 = !DILocation(line: 1689, column: 34, scope: !5951)
!5956 = !DILocation(line: 1689, column: 5, scope: !5951)
!5957 = !DILocation(line: 1689, column: 43, scope: !5951)
!5958 = !DILocation(line: 1690, column: 5, scope: !5951)
!5959 = !{i64 2150441373}
!5960 = !DILocation(line: 1691, column: 3, scope: !5951)
!5961 = !DILocation(line: 1692, column: 1, scope: !5941)
!5962 = distinct !DISubprogram(name: "arch_irq_disable", scope: !5935, file: !5935, line: 45, type: !5779, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2642, retainedNodes: !5963)
!5963 = !{!5964}
!5964 = !DILocalVariable(name: "irq", arg: 1, scope: !5962, file: !5935, line: 45, type: !32)
!5965 = !DILocation(line: 0, scope: !5962)
!5966 = !DILocation(line: 47, column: 2, scope: !5962)
!5967 = !DILocation(line: 48, column: 1, scope: !5962)
!5968 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !515, file: !515, line: 1722, type: !5942, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2642, retainedNodes: !5969)
!5969 = !{!5970}
!5970 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5968, file: !515, line: 1722, type: !750)
!5971 = !DILocation(line: 0, scope: !5968)
!5972 = !DILocation(line: 1724, column: 23, scope: !5973)
!5973 = distinct !DILexicalBlock(scope: !5968, file: !515, line: 1724, column: 7)
!5974 = !DILocation(line: 1724, column: 7, scope: !5968)
!5975 = !DILocation(line: 1726, column: 81, scope: !5976)
!5976 = distinct !DILexicalBlock(scope: !5973, file: !515, line: 1725, column: 3)
!5977 = !DILocation(line: 1726, column: 60, scope: !5976)
!5978 = !DILocation(line: 1726, column: 34, scope: !5976)
!5979 = !DILocation(line: 1726, column: 5, scope: !5976)
!5980 = !DILocation(line: 1726, column: 43, scope: !5976)
!5981 = !DILocation(line: 271, column: 3, scope: !5982, inlinedAt: !5984)
!5982 = distinct !DISubprogram(name: "__DSB", scope: !5983, file: !5983, line: 269, type: !3213, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2642, retainedNodes: !317)
!5983 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5984 = distinct !DILocation(line: 1727, column: 5, scope: !5976)
!5985 = !{i64 2895642}
!5986 = !DILocation(line: 260, column: 3, scope: !5987, inlinedAt: !5988)
!5987 = distinct !DISubprogram(name: "__ISB", scope: !5983, file: !5983, line: 258, type: !3213, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2642, retainedNodes: !317)
!5988 = distinct !DILocation(line: 1728, column: 5, scope: !5976)
!5989 = !{i64 2895359}
!5990 = !DILocation(line: 1729, column: 3, scope: !5976)
!5991 = !DILocation(line: 1730, column: 1, scope: !5968)
!5992 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !5935, file: !5935, line: 50, type: !5993, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2642, retainedNodes: !5995)
!5993 = !DISubroutineType(types: !5994)
!5994 = !{!103, !32}
!5995 = !{!5996}
!5996 = !DILocalVariable(name: "irq", arg: 1, scope: !5992, file: !5935, line: 50, type: !32)
!5997 = !DILocation(line: 0, scope: !5992)
!5998 = !DILocation(line: 52, column: 20, scope: !5992)
!5999 = !DILocation(line: 52, column: 9, scope: !5992)
!6000 = !DILocation(line: 52, column: 41, scope: !5992)
!6001 = !DILocation(line: 52, column: 39, scope: !5992)
!6002 = !DILocation(line: 52, column: 2, scope: !5992)
!6003 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !5935, file: !5935, line: 64, type: !6004, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2642, retainedNodes: !6006)
!6004 = !DISubroutineType(types: !6005)
!6005 = !{null, !32, !32, !121}
!6006 = !{!6007, !6008, !6009}
!6007 = !DILocalVariable(name: "irq", arg: 1, scope: !6003, file: !5935, line: 64, type: !32)
!6008 = !DILocalVariable(name: "prio", arg: 2, scope: !6003, file: !5935, line: 64, type: !32)
!6009 = !DILocalVariable(name: "flags", arg: 3, scope: !6003, file: !5935, line: 64, type: !121)
!6010 = !DILocation(line: 0, scope: !6003)
!6011 = !DILocation(line: 83, column: 8, scope: !6012)
!6012 = distinct !DILexicalBlock(scope: !6013, file: !5935, line: 82, column: 9)
!6013 = distinct !DILexicalBlock(scope: !6003, file: !5935, line: 76, column: 6)
!6014 = !DILocation(line: 95, column: 2, scope: !6003)
!6015 = !DILocation(line: 96, column: 1, scope: !6003)
!6016 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !515, file: !515, line: 1814, type: !6017, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2642, retainedNodes: !6019)
!6017 = !DISubroutineType(types: !6018)
!6018 = !{null, !750, !121}
!6019 = !{!6020, !6021}
!6020 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6016, file: !515, line: 1814, type: !750)
!6021 = !DILocalVariable(name: "priority", arg: 2, scope: !6016, file: !515, line: 1814, type: !121)
!6022 = !DILocation(line: 0, scope: !6016)
!6023 = !DILocation(line: 0, scope: !6024)
!6024 = distinct !DILexicalBlock(scope: !6016, file: !515, line: 1816, column: 7)
!6025 = !DILocation(line: 1816, column: 7, scope: !6016)
!6026 = !DILocation(line: 1824, column: 1, scope: !6016)
!6027 = distinct !DISubprogram(name: "z_irq_spurious", scope: !5935, file: !5935, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2642, retainedNodes: !6028)
!6028 = !{!6029}
!6029 = !DILocalVariable(name: "unused", arg: 1, scope: !6027, file: !5935, line: 155, type: !13)
!6030 = !DILocation(line: 0, scope: !6027)
!6031 = !DILocation(line: 159, column: 2, scope: !6027)
!6032 = !DILocation(line: 160, column: 1, scope: !6027)
!6033 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6034, file: !6034, line: 87, type: !3213, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2688, retainedNodes: !317)
!6034 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6035 = !DILocation(line: 89, column: 2, scope: !6033)
!6036 = !DILocation(line: 90, column: 2, scope: !6033)
!6037 = !DILocation(line: 91, column: 1, scope: !6033)
!6038 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6034, file: !6034, line: 23, type: !3213, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !317)
!6039 = !DISubprogram(name: "z_arm_int_exit", scope: !6040, file: !6040, line: 153, type: !3213, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !317)
!6040 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6041 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6042, file: !6042, line: 256, type: !3213, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !317)
!6042 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6043 = !DILocation(line: 258, column: 2, scope: !6041)
!6044 = !DILocation(line: 260, column: 2, scope: !6041)
!6045 = !DILocation(line: 262, column: 2, scope: !6041)
!6046 = !DILocation(line: 263, column: 2, scope: !6041)
!6047 = !DILocation(line: 267, column: 2, scope: !6041)
!6048 = !DILocation(line: 268, column: 2, scope: !6041)
!6049 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6042, file: !6042, line: 53, type: !3213, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !317)
!6050 = !DILocation(line: 55, column: 12, scope: !6049)
!6051 = !DILocation(line: 271, column: 3, scope: !6052, inlinedAt: !6053)
!6052 = distinct !DISubprogram(name: "__DSB", scope: !5983, file: !5983, line: 269, type: !3213, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !317)
!6053 = distinct !DILocation(line: 56, column: 2, scope: !6049)
!6054 = !{i64 2894313}
!6055 = !DILocation(line: 260, column: 3, scope: !6056, inlinedAt: !6057)
!6056 = distinct !DISubprogram(name: "__ISB", scope: !5983, file: !5983, line: 258, type: !3213, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !317)
!6057 = distinct !DILocation(line: 57, column: 2, scope: !6049)
!6058 = !{i64 2894030}
!6059 = !DILocation(line: 58, column: 1, scope: !6049)
!6060 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !6042, file: !6042, line: 96, type: !3213, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !317)
!6061 = !DILocation(line: 103, column: 13, scope: !6060)
!6062 = !DILocation(line: 975, column: 3, scope: !6063, inlinedAt: !6068)
!6063 = distinct !DISubprogram(name: "__get_CONTROL", scope: !5983, file: !5983, line: 971, type: !6064, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !6066)
!6064 = !DISubroutineType(types: !6065)
!6065 = !{!121}
!6066 = !{!6067}
!6067 = !DILocalVariable(name: "result", scope: !6063, file: !5983, line: 973, type: !121)
!6068 = distinct !DILocation(line: 189, column: 16, scope: !6060)
!6069 = !{i64 2915143}
!6070 = !DILocation(line: 0, scope: !6063, inlinedAt: !6068)
!6071 = !DILocation(line: 189, column: 32, scope: !6060)
!6072 = !DILocalVariable(name: "control", arg: 1, scope: !6073, file: !5983, line: 1001, type: !121)
!6073 = distinct !DISubprogram(name: "__set_CONTROL", scope: !5983, file: !5983, line: 1001, type: !6074, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !6076)
!6074 = !DISubroutineType(types: !6075)
!6075 = !{null, !121}
!6076 = !{!6072}
!6077 = !DILocation(line: 0, scope: !6073, inlinedAt: !6078)
!6078 = distinct !DILocation(line: 189, column: 2, scope: !6060)
!6079 = !DILocation(line: 1003, column: 3, scope: !6073, inlinedAt: !6078)
!6080 = !{i64 2915863}
!6081 = !DILocation(line: 260, column: 3, scope: !6056, inlinedAt: !6082)
!6082 = distinct !DILocation(line: 1004, column: 3, scope: !6073, inlinedAt: !6078)
!6083 = !DILocation(line: 191, column: 1, scope: !6060)
!6084 = distinct !DISubprogram(name: "arch_swap", scope: !6085, file: !6085, line: 33, type: !5993, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2718, retainedNodes: !6086)
!6085 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6086 = !{!6087}
!6087 = !DILocalVariable(name: "key", arg: 1, scope: !6084, file: !6085, line: 33, type: !32)
!6088 = !DILocation(line: 0, scope: !6084)
!6089 = !DILocation(line: 36, column: 2, scope: !6084)
!6090 = !DILocation(line: 36, column: 17, scope: !6084)
!6091 = !DILocation(line: 36, column: 25, scope: !6084)
!6092 = !DILocation(line: 37, column: 37, scope: !6084)
!6093 = !DILocation(line: 37, column: 17, scope: !6084)
!6094 = !DILocation(line: 37, column: 35, scope: !6084)
!6095 = !DILocation(line: 41, column: 12, scope: !6084)
!6096 = !DILocalVariable(name: "key", arg: 1, scope: !6097, file: !5768, line: 84, type: !32)
!6097 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5768, file: !5768, line: 84, type: !5779, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2718, retainedNodes: !6098)
!6098 = !{!6096}
!6099 = !DILocation(line: 0, scope: !6097, inlinedAt: !6100)
!6100 = distinct !DILocation(line: 44, column: 2, scope: !6084)
!6101 = !DILocation(line: 95, column: 2, scope: !6097, inlinedAt: !6100)
!6102 = !{i64 2036673}
!6103 = !DILocation(line: 53, column: 9, scope: !6084)
!6104 = !DILocation(line: 53, column: 24, scope: !6084)
!6105 = !DILocation(line: 53, column: 2, scope: !6084)
!6106 = distinct !DISubprogram(name: "arch_new_thread", scope: !6107, file: !6107, line: 56, type: !6108, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2746, retainedNodes: !6215)
!6107 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6108 = !DISubroutineType(types: !6109)
!6109 = !{null, !6110, !6210, !344, !3527, !102, !102, !102}
!6110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6111, size: 32)
!6111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !379, line: 245, size: 1024, elements: !6112)
!6112 = !{!6113, !6171, !6183, !6184, !6185, !6186, !6192, !6205}
!6113 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6111, file: !379, line: 247, baseType: !6114, size: 384)
!6114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !379, line: 57, size: 384, elements: !6115)
!6115 = !{!6116, !6140, !6147, !6148, !6149, !6158, !6159, !6160}
!6116 = !DIDerivedType(tag: DW_TAG_member, scope: !6114, file: !379, line: 60, baseType: !6117, size: 64)
!6117 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6114, file: !379, line: 60, size: 64, elements: !6118)
!6118 = !{!6119, !6134}
!6119 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6117, file: !379, line: 61, baseType: !6120, size: 64)
!6120 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !325, line: 49, baseType: !6121)
!6121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !6122)
!6122 = !{!6123, !6129}
!6123 = !DIDerivedType(tag: DW_TAG_member, scope: !6121, file: !325, line: 38, baseType: !6124, size: 32)
!6124 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6121, file: !325, line: 38, size: 32, elements: !6125)
!6125 = !{!6126, !6128}
!6126 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6124, file: !325, line: 39, baseType: !6127, size: 32)
!6127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6121, size: 32)
!6128 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6124, file: !325, line: 40, baseType: !6127, size: 32)
!6129 = !DIDerivedType(tag: DW_TAG_member, scope: !6121, file: !325, line: 42, baseType: !6130, size: 32, offset: 32)
!6130 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6121, file: !325, line: 42, size: 32, elements: !6131)
!6131 = !{!6132, !6133}
!6132 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6130, file: !325, line: 43, baseType: !6127, size: 32)
!6133 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6130, file: !325, line: 44, baseType: !6127, size: 32)
!6134 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6117, file: !379, line: 62, baseType: !6135, size: 64)
!6135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !404, line: 49, size: 64, elements: !6136)
!6136 = !{!6137}
!6137 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6135, file: !404, line: 50, baseType: !6138, size: 64)
!6138 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6139, size: 64, elements: !363)
!6139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6135, size: 32)
!6140 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6114, file: !379, line: 68, baseType: !6141, size: 32, offset: 64)
!6141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6142, size: 32)
!6142 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !6143)
!6143 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !6144)
!6144 = !{!6145}
!6145 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6143, file: !320, line: 232, baseType: !6146, size: 64)
!6146 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !6121)
!6147 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6114, file: !379, line: 71, baseType: !154, size: 8, offset: 96)
!6148 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6114, file: !379, line: 74, baseType: !154, size: 8, offset: 104)
!6149 = !DIDerivedType(tag: DW_TAG_member, scope: !6114, file: !379, line: 90, baseType: !6150, size: 16, offset: 112)
!6150 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6114, file: !379, line: 90, size: 16, elements: !6151)
!6151 = !{!6152, !6157}
!6152 = !DIDerivedType(tag: DW_TAG_member, scope: !6150, file: !379, line: 91, baseType: !6153, size: 16)
!6153 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6150, file: !379, line: 91, size: 16, elements: !6154)
!6154 = !{!6155, !6156}
!6155 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6153, file: !379, line: 96, baseType: !425, size: 8)
!6156 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6153, file: !379, line: 97, baseType: !154, size: 8, offset: 8)
!6157 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6150, file: !379, line: 100, baseType: !429, size: 16)
!6158 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6114, file: !379, line: 107, baseType: !121, size: 32, offset: 128)
!6159 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6114, file: !379, line: 127, baseType: !102, size: 32, offset: 160)
!6160 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6114, file: !379, line: 131, baseType: !6161, size: 192, offset: 192)
!6161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !320, line: 244, size: 192, elements: !6162)
!6162 = !{!6163, !6164, !6170}
!6163 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6161, file: !320, line: 245, baseType: !6120, size: 64)
!6164 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6161, file: !320, line: 246, baseType: !6165, size: 32, offset: 64)
!6165 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !320, line: 242, baseType: !6166)
!6166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6167, size: 32)
!6167 = !DISubroutineType(types: !6168)
!6168 = !{null, !6169}
!6169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6161, size: 32)
!6170 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6161, file: !320, line: 249, baseType: !202, size: 64, offset: 128)
!6171 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6111, file: !379, line: 250, baseType: !6172, size: 288, offset: 384)
!6172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !446, line: 25, size: 288, elements: !6173)
!6173 = !{!6174, !6175, !6176, !6177, !6178, !6179, !6180, !6181, !6182}
!6174 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6172, file: !446, line: 26, baseType: !121, size: 32)
!6175 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6172, file: !446, line: 27, baseType: !121, size: 32, offset: 32)
!6176 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6172, file: !446, line: 28, baseType: !121, size: 32, offset: 64)
!6177 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6172, file: !446, line: 29, baseType: !121, size: 32, offset: 96)
!6178 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6172, file: !446, line: 30, baseType: !121, size: 32, offset: 128)
!6179 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6172, file: !446, line: 31, baseType: !121, size: 32, offset: 160)
!6180 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6172, file: !446, line: 32, baseType: !121, size: 32, offset: 192)
!6181 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6172, file: !446, line: 33, baseType: !121, size: 32, offset: 224)
!6182 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6172, file: !446, line: 34, baseType: !121, size: 32, offset: 256)
!6183 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6111, file: !379, line: 253, baseType: !102, size: 32, offset: 672)
!6184 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6111, file: !379, line: 256, baseType: !6142, size: 64, offset: 704)
!6185 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6111, file: !379, line: 294, baseType: !103, size: 32, offset: 768)
!6186 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6111, file: !379, line: 300, baseType: !6187, size: 96, offset: 800)
!6187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !379, line: 149, size: 96, elements: !6188)
!6188 = !{!6189, !6190, !6191}
!6189 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6187, file: !379, line: 153, baseType: !22, size: 32)
!6190 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6187, file: !379, line: 162, baseType: !204, size: 32, offset: 32)
!6191 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6187, file: !379, line: 168, baseType: !204, size: 32, offset: 64)
!6192 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6111, file: !379, line: 325, baseType: !6193, size: 32, offset: 896)
!6193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6194, size: 32)
!6194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !296, line: 5073, size: 160, elements: !6195)
!6195 = !{!6196, !6202, !6203}
!6196 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6194, file: !296, line: 5074, baseType: !6197, size: 96)
!6197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !6198)
!6198 = !{!6199, !6200, !6201}
!6199 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6197, file: !472, line: 57, baseType: !475, size: 32)
!6200 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6197, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!6201 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6197, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!6202 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6194, file: !296, line: 5075, baseType: !6142, size: 64, offset: 96)
!6203 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6194, file: !296, line: 5076, baseType: !6204, offset: 160)
!6204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!6205 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6111, file: !379, line: 343, baseType: !6206, size: 64, offset: 928)
!6206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !446, line: 60, size: 64, elements: !6207)
!6207 = !{!6208, !6209}
!6208 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6206, file: !446, line: 63, baseType: !121, size: 32)
!6209 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6206, file: !446, line: 66, baseType: !121, size: 32, offset: 32)
!6210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6211, size: 32)
!6211 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3528, line: 44, baseType: !6212)
!6212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2198, line: 47, size: 8, elements: !6213)
!6213 = !{!6214}
!6214 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6212, file: !2198, line: 48, baseType: !146, size: 8)
!6215 = !{!6216, !6217, !6218, !6219, !6220, !6221, !6222, !6223}
!6216 = !DILocalVariable(name: "thread", arg: 1, scope: !6106, file: !6107, line: 56, type: !6110)
!6217 = !DILocalVariable(name: "stack", arg: 2, scope: !6106, file: !6107, line: 56, type: !6210)
!6218 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6106, file: !6107, line: 57, type: !344)
!6219 = !DILocalVariable(name: "entry", arg: 4, scope: !6106, file: !6107, line: 57, type: !3527)
!6220 = !DILocalVariable(name: "p1", arg: 5, scope: !6106, file: !6107, line: 58, type: !102)
!6221 = !DILocalVariable(name: "p2", arg: 6, scope: !6106, file: !6107, line: 58, type: !102)
!6222 = !DILocalVariable(name: "p3", arg: 7, scope: !6106, file: !6107, line: 58, type: !102)
!6223 = !DILocalVariable(name: "iframe", scope: !6106, file: !6107, line: 60, type: !2749)
!6224 = !DILocation(line: 0, scope: !6106)
!6225 = !DILocation(line: 85, column: 11, scope: !6106)
!6226 = !DILocation(line: 93, column: 10, scope: !6106)
!6227 = !DILocation(line: 98, column: 13, scope: !6106)
!6228 = !DILocation(line: 100, column: 15, scope: !6106)
!6229 = !DILocation(line: 100, column: 10, scope: !6106)
!6230 = !DILocation(line: 100, column: 13, scope: !6106)
!6231 = !DILocation(line: 101, column: 15, scope: !6106)
!6232 = !DILocation(line: 101, column: 10, scope: !6106)
!6233 = !DILocation(line: 101, column: 13, scope: !6106)
!6234 = !DILocation(line: 102, column: 15, scope: !6106)
!6235 = !DILocation(line: 102, column: 10, scope: !6106)
!6236 = !DILocation(line: 102, column: 13, scope: !6106)
!6237 = !DILocation(line: 103, column: 15, scope: !6106)
!6238 = !DILocation(line: 103, column: 10, scope: !6106)
!6239 = !DILocation(line: 103, column: 13, scope: !6106)
!6240 = !DILocation(line: 106, column: 10, scope: !6106)
!6241 = !DILocation(line: 106, column: 15, scope: !6106)
!6242 = !DILocation(line: 122, column: 29, scope: !6106)
!6243 = !DILocation(line: 122, column: 23, scope: !6106)
!6244 = !DILocation(line: 122, column: 27, scope: !6106)
!6245 = !DILocation(line: 123, column: 15, scope: !6106)
!6246 = !DILocation(line: 123, column: 23, scope: !6106)
!6247 = !DILocation(line: 143, column: 1, scope: !6106)
!6248 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !6107, file: !6107, line: 385, type: !6249, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2746, retainedNodes: !6252)
!6249 = !DISubroutineType(types: !6250)
!6250 = !{!121, !6251, !6251}
!6251 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !121)
!6252 = !{!6253, !6254, !6255, !6258}
!6253 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !6248, file: !6107, line: 385, type: !6251)
!6254 = !DILocalVariable(name: "psp", arg: 2, scope: !6248, file: !6107, line: 385, type: !6251)
!6255 = !DILocalVariable(name: "thread", scope: !6248, file: !6107, line: 388, type: !6256)
!6256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6257, size: 32)
!6257 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6111)
!6258 = !DILocalVariable(name: "guard_len", scope: !6248, file: !6107, line: 405, type: !121)
!6259 = !DILocation(line: 0, scope: !6248)
!6260 = !DILocation(line: 388, column: 34, scope: !6248)
!6261 = !DILocation(line: 390, column: 13, scope: !6262)
!6262 = distinct !DILexicalBlock(scope: !6248, file: !6107, line: 390, column: 6)
!6263 = !DILocation(line: 390, column: 6, scope: !6248)
!6264 = !DILocation(line: 438, column: 6, scope: !6265)
!6265 = distinct !DILexicalBlock(scope: !6248, file: !6107, line: 438, column: 6)
!6266 = !DILocation(line: 438, column: 6, scope: !6248)
!6267 = !DILocation(line: 442, column: 3, scope: !6268)
!6268 = distinct !DILexicalBlock(scope: !6265, file: !6107, line: 440, column: 22)
!6269 = !DILocation(line: 455, column: 1, scope: !6248)
!6270 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6107, file: !6107, line: 530, type: !6271, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2746, retainedNodes: !6273)
!6271 = !DISubroutineType(types: !6272)
!6272 = !{null, !6110, !344, !3527}
!6273 = !{!6274, !6275, !6276}
!6274 = !DILocalVariable(name: "main_thread", arg: 1, scope: !6270, file: !6107, line: 530, type: !6110)
!6275 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !6270, file: !6107, line: 530, type: !344)
!6276 = !DILocalVariable(name: "_main", arg: 3, scope: !6270, file: !6107, line: 531, type: !3527)
!6277 = !DILocation(line: 0, scope: !6270)
!6278 = !DILocation(line: 535, column: 11, scope: !6270)
!6279 = !DILocation(line: 560, column: 2, scope: !6270)
!6280 = !DILocation(line: 576, column: 2, scope: !6270)
!6281 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!6282 = !DILocation(line: 603, column: 2, scope: !6270)
!6283 = distinct !DISubprogram(name: "z_arm_fault", scope: !6284, file: !6284, line: 1036, type: !6285, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2789, retainedNodes: !6300)
!6284 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6285 = !DISubroutineType(types: !6286)
!6286 = !{null, !121, !121, !121, !6287}
!6287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6288, size: 32)
!6288 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !446, line: 37, baseType: !6289)
!6289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !446, line: 25, size: 288, elements: !6290)
!6290 = !{!6291, !6292, !6293, !6294, !6295, !6296, !6297, !6298, !6299}
!6291 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6289, file: !446, line: 26, baseType: !121, size: 32)
!6292 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6289, file: !446, line: 27, baseType: !121, size: 32, offset: 32)
!6293 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6289, file: !446, line: 28, baseType: !121, size: 32, offset: 64)
!6294 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6289, file: !446, line: 29, baseType: !121, size: 32, offset: 96)
!6295 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6289, file: !446, line: 30, baseType: !121, size: 32, offset: 128)
!6296 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6289, file: !446, line: 31, baseType: !121, size: 32, offset: 160)
!6297 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6289, file: !446, line: 32, baseType: !121, size: 32, offset: 192)
!6298 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6289, file: !446, line: 33, baseType: !121, size: 32, offset: 224)
!6299 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6289, file: !446, line: 34, baseType: !121, size: 32, offset: 256)
!6300 = !{!6301, !6302, !6303, !6304, !6305, !6306, !6307, !6308, !6309, !6310}
!6301 = !DILocalVariable(name: "msp", arg: 1, scope: !6283, file: !6284, line: 1036, type: !121)
!6302 = !DILocalVariable(name: "psp", arg: 2, scope: !6283, file: !6284, line: 1036, type: !121)
!6303 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6283, file: !6284, line: 1036, type: !121)
!6304 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !6283, file: !6284, line: 1037, type: !6287)
!6305 = !DILocalVariable(name: "reason", scope: !6283, file: !6284, line: 1039, type: !121)
!6306 = !DILocalVariable(name: "fault", scope: !6283, file: !6284, line: 1040, type: !103)
!6307 = !DILocalVariable(name: "recoverable", scope: !6283, file: !6284, line: 1041, type: !157)
!6308 = !DILocalVariable(name: "nested_exc", scope: !6283, file: !6284, line: 1041, type: !157)
!6309 = !DILocalVariable(name: "esf", scope: !6283, file: !6284, line: 1042, type: !2817)
!6310 = !DILocalVariable(name: "esf_copy", scope: !6283, file: !6284, line: 1047, type: !2818)
!6311 = !DILocation(line: 0, scope: !6283)
!6312 = !DILocation(line: 1040, column: 19, scope: !6283)
!6313 = !DILocation(line: 1040, column: 24, scope: !6283)
!6314 = !DILocation(line: 1041, column: 2, scope: !6283)
!6315 = !DILocation(line: 1047, column: 2, scope: !6283)
!6316 = !DILocation(line: 1047, column: 15, scope: !6283)
!6317 = !DILocalVariable(name: "key", arg: 1, scope: !6318, file: !5768, line: 84, type: !32)
!6318 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5768, file: !5768, line: 84, type: !5779, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2789, retainedNodes: !6319)
!6319 = !{!6317}
!6320 = !DILocation(line: 0, scope: !6318, inlinedAt: !6321)
!6321 = distinct !DILocation(line: 1050, column: 2, scope: !6283)
!6322 = !DILocation(line: 95, column: 2, scope: !6318, inlinedAt: !6321)
!6323 = !{i64 2069917}
!6324 = !DILocation(line: 1055, column: 9, scope: !6283)
!6325 = !DILocation(line: 1063, column: 11, scope: !6283)
!6326 = !DILocation(line: 1064, column: 6, scope: !6327)
!6327 = distinct !DILexicalBlock(scope: !6283, file: !6284, line: 1064, column: 6)
!6328 = !{i8 0, i8 2}
!6329 = !DILocation(line: 1064, column: 6, scope: !6283)
!6330 = !DILocation(line: 1070, column: 20, scope: !6283)
!6331 = !DILocation(line: 1070, column: 2, scope: !6283)
!6332 = !DILocation(line: 1089, column: 6, scope: !6333)
!6333 = distinct !DILexicalBlock(scope: !6283, file: !6284, line: 1089, column: 6)
!6334 = !DILocation(line: 0, scope: !6333)
!6335 = !DILocation(line: 1089, column: 6, scope: !6283)
!6336 = !DILocation(line: 1090, column: 28, scope: !6337)
!6337 = distinct !DILexicalBlock(scope: !6338, file: !6284, line: 1090, column: 7)
!6338 = distinct !DILexicalBlock(scope: !6333, file: !6284, line: 1089, column: 18)
!6339 = !DILocation(line: 1090, column: 44, scope: !6337)
!6340 = !DILocation(line: 1090, column: 7, scope: !6338)
!6341 = !DILocation(line: 1091, column: 24, scope: !6342)
!6342 = distinct !DILexicalBlock(scope: !6337, file: !6284, line: 1090, column: 50)
!6343 = !DILocation(line: 1092, column: 3, scope: !6342)
!6344 = !DILocation(line: 1094, column: 23, scope: !6345)
!6345 = distinct !DILexicalBlock(scope: !6333, file: !6284, line: 1093, column: 9)
!6346 = !DILocation(line: 1097, column: 2, scope: !6283)
!6347 = !DILocation(line: 1098, column: 1, scope: !6283)
!6348 = distinct !DISubprogram(name: "get_esf", scope: !6284, file: !6284, line: 894, type: !6349, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2789, retainedNodes: !6352)
!6349 = !DISubroutineType(types: !6350)
!6350 = !{!2817, !121, !121, !121, !6351}
!6351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 32)
!6352 = !{!6353, !6354, !6355, !6356, !6357, !6358}
!6353 = !DILocalVariable(name: "msp", arg: 1, scope: !6348, file: !6284, line: 894, type: !121)
!6354 = !DILocalVariable(name: "psp", arg: 2, scope: !6348, file: !6284, line: 894, type: !121)
!6355 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6348, file: !6284, line: 894, type: !121)
!6356 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !6348, file: !6284, line: 895, type: !6351)
!6357 = !DILocalVariable(name: "alternative_state_exc", scope: !6348, file: !6284, line: 897, type: !157)
!6358 = !DILocalVariable(name: "ptr_esf", scope: !6348, file: !6284, line: 898, type: !2817)
!6359 = !DILocation(line: 0, scope: !6348)
!6360 = !DILocation(line: 900, column: 14, scope: !6348)
!6361 = !DILocation(line: 902, column: 49, scope: !6362)
!6362 = distinct !DILexicalBlock(scope: !6348, file: !6284, line: 902, column: 6)
!6363 = !DILocation(line: 902, column: 6, scope: !6348)
!6364 = !DILocation(line: 983, column: 18, scope: !6365)
!6365 = distinct !DILexicalBlock(scope: !6348, file: !6284, line: 983, column: 6)
!6366 = !DILocation(line: 991, column: 7, scope: !6367)
!6367 = distinct !DILexicalBlock(scope: !6368, file: !6284, line: 990, column: 30)
!6368 = distinct !DILexicalBlock(scope: !6348, file: !6284, line: 990, column: 6)
!6369 = !DILocation(line: 998, column: 16, scope: !6370)
!6370 = distinct !DILexicalBlock(scope: !6371, file: !6284, line: 995, column: 10)
!6371 = distinct !DILexicalBlock(scope: !6367, file: !6284, line: 991, column: 7)
!6372 = !DILocation(line: 1002, column: 2, scope: !6348)
!6373 = !DILocation(line: 1003, column: 1, scope: !6348)
!6374 = distinct !DISubprogram(name: "fault_handle", scope: !6284, file: !6284, line: 786, type: !6375, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2789, retainedNodes: !6377)
!6375 = !DISubroutineType(types: !6376)
!6376 = !{!121, !2817, !103, !6351}
!6377 = !{!6378, !6379, !6380, !6381}
!6378 = !DILocalVariable(name: "esf", arg: 1, scope: !6374, file: !6284, line: 786, type: !2817)
!6379 = !DILocalVariable(name: "fault", arg: 2, scope: !6374, file: !6284, line: 786, type: !103)
!6380 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6374, file: !6284, line: 786, type: !6351)
!6381 = !DILocalVariable(name: "reason", scope: !6374, file: !6284, line: 788, type: !121)
!6382 = !DILocation(line: 0, scope: !6374)
!6383 = !DILocation(line: 790, column: 15, scope: !6374)
!6384 = !DILocation(line: 792, column: 2, scope: !6374)
!6385 = !DILocation(line: 794, column: 12, scope: !6386)
!6386 = distinct !DILexicalBlock(scope: !6374, file: !6284, line: 792, column: 17)
!6387 = !DILocation(line: 795, column: 3, scope: !6386)
!6388 = !DILocation(line: 800, column: 12, scope: !6386)
!6389 = !DILocation(line: 801, column: 3, scope: !6386)
!6390 = !DILocation(line: 803, column: 12, scope: !6386)
!6391 = !DILocation(line: 804, column: 3, scope: !6386)
!6392 = !DILocation(line: 806, column: 12, scope: !6386)
!6393 = !DILocation(line: 807, column: 3, scope: !6386)
!6394 = !DILocation(line: 814, column: 3, scope: !6386)
!6395 = !DILocation(line: 815, column: 3, scope: !6386)
!6396 = !DILocation(line: 829, column: 2, scope: !6374)
!6397 = distinct !DISubprogram(name: "hard_fault", scope: !6284, file: !6284, line: 709, type: !6398, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2789, retainedNodes: !6400)
!6398 = !DISubroutineType(types: !6399)
!6399 = !{!121, !2817, !6351}
!6400 = !{!6401, !6402, !6403}
!6401 = !DILocalVariable(name: "esf", arg: 1, scope: !6397, file: !6284, line: 709, type: !2817)
!6402 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6397, file: !6284, line: 709, type: !6351)
!6403 = !DILocalVariable(name: "reason", scope: !6397, file: !6284, line: 711, type: !121)
!6404 = !DILocation(line: 0, scope: !6397)
!6405 = !DILocation(line: 732, column: 15, scope: !6397)
!6406 = !DILocation(line: 734, column: 12, scope: !6407)
!6407 = distinct !DILexicalBlock(scope: !6397, file: !6284, line: 734, column: 6)
!6408 = !DILocation(line: 734, column: 17, scope: !6407)
!6409 = !DILocation(line: 734, column: 41, scope: !6407)
!6410 = !DILocation(line: 734, column: 6, scope: !6397)
!6411 = !DILocation(line: 736, column: 19, scope: !6412)
!6412 = distinct !DILexicalBlock(scope: !6407, file: !6284, line: 736, column: 13)
!6413 = !DILocation(line: 736, column: 49, scope: !6412)
!6414 = !DILocation(line: 736, column: 13, scope: !6407)
!6415 = !DILocation(line: 738, column: 19, scope: !6416)
!6416 = distinct !DILexicalBlock(scope: !6412, file: !6284, line: 738, column: 13)
!6417 = !DILocation(line: 738, column: 24, scope: !6416)
!6418 = !DILocation(line: 738, column: 47, scope: !6416)
!6419 = !DILocation(line: 738, column: 13, scope: !6412)
!6420 = !DILocation(line: 740, column: 7, scope: !6421)
!6421 = distinct !DILexicalBlock(scope: !6422, file: !6284, line: 740, column: 7)
!6422 = distinct !DILexicalBlock(scope: !6416, file: !6284, line: 738, column: 53)
!6423 = !DILocation(line: 740, column: 7, scope: !6422)
!6424 = !DILocation(line: 742, column: 24, scope: !6425)
!6425 = distinct !DILexicalBlock(scope: !6421, file: !6284, line: 740, column: 38)
!6426 = !DILocation(line: 743, column: 3, scope: !6425)
!6427 = !DILocation(line: 743, column: 20, scope: !6428)
!6428 = distinct !DILexicalBlock(scope: !6421, file: !6284, line: 743, column: 14)
!6429 = !DILocation(line: 743, column: 25, scope: !6428)
!6430 = !DILocation(line: 743, column: 52, scope: !6428)
!6431 = !DILocation(line: 743, column: 14, scope: !6421)
!6432 = !DILocation(line: 744, column: 13, scope: !6433)
!6433 = distinct !DILexicalBlock(scope: !6428, file: !6284, line: 743, column: 58)
!6434 = !DILocation(line: 745, column: 3, scope: !6433)
!6435 = !DILocation(line: 745, column: 20, scope: !6436)
!6436 = distinct !DILexicalBlock(scope: !6428, file: !6284, line: 745, column: 14)
!6437 = !DILocation(line: 745, column: 25, scope: !6436)
!6438 = !DILocation(line: 745, column: 52, scope: !6436)
!6439 = !DILocation(line: 745, column: 14, scope: !6428)
!6440 = !DILocation(line: 746, column: 13, scope: !6441)
!6441 = distinct !DILexicalBlock(scope: !6436, file: !6284, line: 745, column: 58)
!6442 = !DILocation(line: 747, column: 3, scope: !6441)
!6443 = !DILocation(line: 747, column: 20, scope: !6444)
!6444 = distinct !DILexicalBlock(scope: !6436, file: !6284, line: 747, column: 14)
!6445 = !DILocation(line: 747, column: 52, scope: !6444)
!6446 = !DILocation(line: 747, column: 14, scope: !6436)
!6447 = !DILocation(line: 748, column: 13, scope: !6448)
!6448 = distinct !DILexicalBlock(scope: !6444, file: !6284, line: 747, column: 58)
!6449 = !DILocation(line: 753, column: 3, scope: !6448)
!6450 = !DILocation(line: 766, column: 2, scope: !6397)
!6451 = distinct !DISubprogram(name: "mem_manage_fault", scope: !6284, file: !6284, line: 229, type: !6375, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2789, retainedNodes: !6452)
!6452 = !{!6453, !6454, !6455, !6456, !6457, !6458, !6461}
!6453 = !DILocalVariable(name: "esf", arg: 1, scope: !6451, file: !6284, line: 229, type: !2817)
!6454 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6451, file: !6284, line: 229, type: !103)
!6455 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6451, file: !6284, line: 230, type: !6351)
!6456 = !DILocalVariable(name: "reason", scope: !6451, file: !6284, line: 232, type: !121)
!6457 = !DILocalVariable(name: "mmfar", scope: !6451, file: !6284, line: 233, type: !121)
!6458 = !DILocalVariable(name: "temp", scope: !6459, file: !6284, line: 254, type: !121)
!6459 = distinct !DILexicalBlock(scope: !6460, file: !6284, line: 244, column: 48)
!6460 = distinct !DILexicalBlock(scope: !6451, file: !6284, line: 244, column: 6)
!6461 = !DILocalVariable(name: "min_stack_ptr", scope: !6462, file: !6284, line: 309, type: !121)
!6462 = distinct !DILexicalBlock(scope: !6463, file: !6284, line: 308, column: 43)
!6463 = distinct !DILexicalBlock(scope: !6464, file: !6284, line: 308, column: 7)
!6464 = distinct !DILexicalBlock(scope: !6465, file: !6284, line: 289, column: 40)
!6465 = distinct !DILexicalBlock(scope: !6451, file: !6284, line: 288, column: 6)
!6466 = !DILocation(line: 0, scope: !6451)
!6467 = !DILocation(line: 237, column: 12, scope: !6468)
!6468 = distinct !DILexicalBlock(scope: !6451, file: !6284, line: 237, column: 6)
!6469 = !DILocation(line: 241, column: 12, scope: !6470)
!6470 = distinct !DILexicalBlock(scope: !6451, file: !6284, line: 241, column: 6)
!6471 = !DILocation(line: 244, column: 12, scope: !6460)
!6472 = !DILocation(line: 244, column: 17, scope: !6460)
!6473 = !DILocation(line: 244, column: 42, scope: !6460)
!6474 = !DILocation(line: 244, column: 6, scope: !6451)
!6475 = !DILocation(line: 254, column: 24, scope: !6459)
!6476 = !DILocation(line: 0, scope: !6459)
!6477 = !DILocation(line: 256, column: 13, scope: !6478)
!6478 = distinct !DILexicalBlock(scope: !6459, file: !6284, line: 256, column: 7)
!6479 = !DILocation(line: 256, column: 18, scope: !6478)
!6480 = !DILocation(line: 256, column: 44, scope: !6478)
!6481 = !DILocation(line: 256, column: 7, scope: !6459)
!6482 = !DILocation(line: 259, column: 24, scope: !6483)
!6483 = distinct !DILexicalBlock(scope: !6484, file: !6284, line: 259, column: 8)
!6484 = distinct !DILexicalBlock(scope: !6478, file: !6284, line: 256, column: 50)
!6485 = !DILocation(line: 259, column: 8, scope: !6484)
!6486 = !DILocation(line: 261, column: 15, scope: !6487)
!6487 = distinct !DILexicalBlock(scope: !6483, file: !6284, line: 259, column: 30)
!6488 = !DILocation(line: 262, column: 4, scope: !6487)
!6489 = !DILocation(line: 265, column: 12, scope: !6490)
!6490 = distinct !DILexicalBlock(scope: !6451, file: !6284, line: 265, column: 6)
!6491 = !DILocation(line: 269, column: 12, scope: !6492)
!6492 = distinct !DILexicalBlock(scope: !6451, file: !6284, line: 269, column: 6)
!6493 = !DILocation(line: 288, column: 12, scope: !6465)
!6494 = !DILocation(line: 288, column: 17, scope: !6465)
!6495 = !DILocation(line: 288, column: 41, scope: !6465)
!6496 = !DILocation(line: 289, column: 9, scope: !6465)
!6497 = !DILocation(line: 289, column: 14, scope: !6465)
!6498 = !DILocation(line: 288, column: 6, scope: !6451)
!6499 = !DILocation(line: 308, column: 12, scope: !6463)
!6500 = !DILocation(line: 308, column: 17, scope: !6463)
!6501 = !DILocation(line: 308, column: 7, scope: !6464)
!6502 = !DILocation(line: 310, column: 6, scope: !6462)
!6503 = !DILocation(line: 309, column: 29, scope: !6462)
!6504 = !DILocation(line: 0, scope: !6462)
!6505 = !DILocation(line: 312, column: 8, scope: !6506)
!6506 = distinct !DILexicalBlock(scope: !6462, file: !6284, line: 312, column: 8)
!6507 = !DILocation(line: 312, column: 8, scope: !6462)
!6508 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !6509, file: !5983, line: 1099, type: !121)
!6509 = distinct !DISubprogram(name: "__set_PSP", scope: !5983, file: !5983, line: 1099, type: !6074, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2789, retainedNodes: !6510)
!6510 = !{!6508}
!6511 = !DILocation(line: 0, scope: !6509, inlinedAt: !6512)
!6512 = distinct !DILocation(line: 338, column: 5, scope: !6513)
!6513 = distinct !DILexicalBlock(scope: !6506, file: !6284, line: 312, column: 23)
!6514 = !DILocation(line: 1101, column: 3, scope: !6509, inlinedAt: !6512)
!6515 = !{i64 2945282}
!6516 = !DILocation(line: 341, column: 4, scope: !6513)
!6517 = !DILocation(line: 360, column: 12, scope: !6518)
!6518 = distinct !DILexicalBlock(scope: !6451, file: !6284, line: 360, column: 6)
!6519 = !DILocation(line: 360, column: 17, scope: !6518)
!6520 = !DILocation(line: 360, column: 41, scope: !6518)
!6521 = !DILocation(line: 360, column: 6, scope: !6451)
!6522 = !DILocation(line: 361, column: 14, scope: !6523)
!6523 = distinct !DILexicalBlock(scope: !6518, file: !6284, line: 360, column: 47)
!6524 = !DILocation(line: 362, column: 2, scope: !6523)
!6525 = !DILocation(line: 366, column: 12, scope: !6451)
!6526 = !DILocation(line: 369, column: 15, scope: !6451)
!6527 = !DILocation(line: 371, column: 2, scope: !6451)
!6528 = distinct !DISubprogram(name: "bus_fault", scope: !6284, file: !6284, line: 383, type: !6529, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2789, retainedNodes: !6531)
!6529 = !DISubroutineType(types: !6530)
!6530 = !{!103, !2817, !103, !6351}
!6531 = !{!6532, !6533, !6534, !6535, !6536}
!6532 = !DILocalVariable(name: "esf", arg: 1, scope: !6528, file: !6284, line: 383, type: !2817)
!6533 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6528, file: !6284, line: 383, type: !103)
!6534 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6528, file: !6284, line: 383, type: !6351)
!6535 = !DILocalVariable(name: "reason", scope: !6528, file: !6284, line: 385, type: !121)
!6536 = !DILocalVariable(name: "bfar", scope: !6537, file: !6284, line: 405, type: !121)
!6537 = distinct !DILexicalBlock(scope: !6538, file: !6284, line: 395, column: 42)
!6538 = distinct !DILexicalBlock(scope: !6528, file: !6284, line: 395, column: 6)
!6539 = !DILocation(line: 0, scope: !6528)
!6540 = !DILocation(line: 389, column: 11, scope: !6541)
!6541 = distinct !DILexicalBlock(scope: !6528, file: !6284, line: 389, column: 6)
!6542 = !DILocation(line: 392, column: 11, scope: !6543)
!6543 = distinct !DILexicalBlock(scope: !6528, file: !6284, line: 392, column: 6)
!6544 = !DILocation(line: 395, column: 11, scope: !6538)
!6545 = !DILocation(line: 395, column: 16, scope: !6538)
!6546 = !DILocation(line: 395, column: 6, scope: !6528)
!6547 = !DILocation(line: 405, column: 3, scope: !6537)
!6548 = !DILocation(line: 0, scope: !6537)
!6549 = !DILocation(line: 407, column: 13, scope: !6550)
!6550 = distinct !DILexicalBlock(scope: !6537, file: !6284, line: 407, column: 7)
!6551 = !DILocation(line: 407, column: 18, scope: !6550)
!6552 = !DILocation(line: 407, column: 44, scope: !6550)
!6553 = !DILocation(line: 407, column: 7, scope: !6537)
!6554 = !DILocation(line: 411, column: 15, scope: !6555)
!6555 = distinct !DILexicalBlock(scope: !6556, file: !6284, line: 409, column: 30)
!6556 = distinct !DILexicalBlock(scope: !6557, file: !6284, line: 409, column: 8)
!6557 = distinct !DILexicalBlock(scope: !6550, file: !6284, line: 407, column: 50)
!6558 = !DILocation(line: 412, column: 4, scope: !6555)
!6559 = !DILocation(line: 415, column: 11, scope: !6560)
!6560 = distinct !DILexicalBlock(scope: !6528, file: !6284, line: 415, column: 6)
!6561 = !DILocation(line: 418, column: 12, scope: !6562)
!6562 = distinct !DILexicalBlock(scope: !6528, file: !6284, line: 418, column: 6)
!6563 = !DILocation(line: 418, column: 17, scope: !6562)
!6564 = !DILocation(line: 418, column: 41, scope: !6562)
!6565 = !DILocation(line: 418, column: 6, scope: !6528)
!6566 = !DILocation(line: 423, column: 18, scope: !6567)
!6567 = distinct !DILexicalBlock(scope: !6562, file: !6284, line: 423, column: 13)
!6568 = !DILocation(line: 524, column: 12, scope: !6528)
!6569 = !DILocation(line: 526, column: 15, scope: !6528)
!6570 = !DILocation(line: 528, column: 2, scope: !6528)
!6571 = distinct !DISubprogram(name: "usage_fault", scope: !6284, file: !6284, line: 539, type: !6572, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2789, retainedNodes: !6576)
!6572 = !DISubroutineType(types: !6573)
!6573 = !{!121, !6574}
!6574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6575, size: 32)
!6575 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2818)
!6576 = !{!6577, !6578}
!6577 = !DILocalVariable(name: "esf", arg: 1, scope: !6571, file: !6284, line: 539, type: !6574)
!6578 = !DILocalVariable(name: "reason", scope: !6571, file: !6284, line: 541, type: !121)
!6579 = !DILocation(line: 0, scope: !6571)
!6580 = !DILocation(line: 546, column: 12, scope: !6581)
!6581 = distinct !DILexicalBlock(scope: !6571, file: !6284, line: 546, column: 6)
!6582 = !DILocation(line: 549, column: 12, scope: !6583)
!6583 = distinct !DILexicalBlock(scope: !6571, file: !6284, line: 549, column: 6)
!6584 = !DILocation(line: 567, column: 12, scope: !6585)
!6585 = distinct !DILexicalBlock(scope: !6571, file: !6284, line: 567, column: 6)
!6586 = !DILocation(line: 570, column: 12, scope: !6587)
!6587 = distinct !DILexicalBlock(scope: !6571, file: !6284, line: 570, column: 6)
!6588 = !DILocation(line: 573, column: 12, scope: !6589)
!6589 = distinct !DILexicalBlock(scope: !6571, file: !6284, line: 573, column: 6)
!6590 = !DILocation(line: 576, column: 12, scope: !6591)
!6591 = distinct !DILexicalBlock(scope: !6571, file: !6284, line: 576, column: 6)
!6592 = !DILocation(line: 581, column: 12, scope: !6571)
!6593 = !DILocation(line: 583, column: 2, scope: !6571)
!6594 = distinct !DISubprogram(name: "debug_monitor", scope: !6284, file: !6284, line: 632, type: !6595, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2789, retainedNodes: !6597)
!6595 = !DISubroutineType(types: !6596)
!6596 = !{null, !2817, !6351}
!6597 = !{!6598, !6599}
!6598 = !DILocalVariable(name: "esf", arg: 1, scope: !6594, file: !6284, line: 632, type: !2817)
!6599 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6594, file: !6284, line: 632, type: !6351)
!6600 = !DILocation(line: 0, scope: !6594)
!6601 = !DILocation(line: 634, column: 15, scope: !6594)
!6602 = !DILocation(line: 652, column: 1, scope: !6594)
!6603 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !6284, file: !6284, line: 658, type: !6604, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2789, retainedNodes: !6606)
!6604 = !DISubroutineType(types: !6605)
!6605 = !{!157, !2817}
!6606 = !{!6607, !6608, !6609}
!6607 = !DILocalVariable(name: "esf", arg: 1, scope: !6603, file: !6284, line: 658, type: !2817)
!6608 = !DILocalVariable(name: "ret_addr", scope: !6603, file: !6284, line: 660, type: !2591)
!6609 = !DILocalVariable(name: "fault_insn", scope: !6603, file: !6284, line: 686, type: !429)
!6610 = !DILocation(line: 0, scope: !6603)
!6611 = !DILocation(line: 660, column: 46, scope: !6603)
!6612 = !DILocation(line: 660, column: 23, scope: !6603)
!6613 = !DILocation(line: 682, column: 11, scope: !6603)
!6614 = !DILocation(line: 271, column: 3, scope: !6615, inlinedAt: !6616)
!6615 = distinct !DISubprogram(name: "__DSB", scope: !5983, file: !5983, line: 269, type: !3213, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2789, retainedNodes: !317)
!6616 = distinct !DILocation(line: 683, column: 2, scope: !6603)
!6617 = !{i64 2921417}
!6618 = !DILocation(line: 260, column: 3, scope: !6619, inlinedAt: !6620)
!6619 = distinct !DISubprogram(name: "__ISB", scope: !5983, file: !5983, line: 258, type: !3213, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2789, retainedNodes: !317)
!6620 = distinct !DILocation(line: 684, column: 2, scope: !6603)
!6621 = !{i64 2921134}
!6622 = !DILocation(line: 686, column: 35, scope: !6603)
!6623 = !DILocation(line: 686, column: 24, scope: !6603)
!6624 = !DILocation(line: 688, column: 11, scope: !6603)
!6625 = !DILocation(line: 271, column: 3, scope: !6615, inlinedAt: !6626)
!6626 = distinct !DILocation(line: 689, column: 2, scope: !6603)
!6627 = !DILocation(line: 260, column: 3, scope: !6619, inlinedAt: !6628)
!6628 = distinct !DILocation(line: 690, column: 2, scope: !6603)
!6629 = !DILocation(line: 693, column: 45, scope: !6630)
!6630 = distinct !DILexicalBlock(scope: !6603, file: !6284, line: 693, column: 6)
!6631 = !DILocation(line: 699, column: 1, scope: !6603)
!6632 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !6284, file: !6284, line: 1107, type: !3213, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2789, retainedNodes: !317)
!6633 = !DILocation(line: 1111, column: 11, scope: !6632)
!6634 = !DILocation(line: 1136, column: 1, scope: !6632)
!6635 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !6636, file: !6636, line: 26, type: !3213, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2860, retainedNodes: !6637)
!6636 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6637 = !{!6638}
!6638 = !DILocalVariable(name: "irq", scope: !6635, file: !6636, line: 28, type: !103)
!6639 = !DILocation(line: 0, scope: !6635)
!6640 = !DILocation(line: 30, column: 2, scope: !6641)
!6641 = distinct !DILexicalBlock(scope: !6635, file: !6636, line: 30, column: 2)
!6642 = !DILocation(line: 31, column: 3, scope: !6643)
!6643 = distinct !DILexicalBlock(scope: !6644, file: !6636, line: 30, column: 39)
!6644 = distinct !DILexicalBlock(scope: !6641, file: !6636, line: 30, column: 2)
!6645 = !DILocation(line: 30, column: 35, scope: !6644)
!6646 = !DILocation(line: 30, column: 13, scope: !6644)
!6647 = distinct !{!6647, !6640, !6648}
!6648 = !DILocation(line: 32, column: 2, scope: !6641)
!6649 = !DILocation(line: 33, column: 1, scope: !6635)
!6650 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !515, file: !515, line: 1814, type: !6017, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2860, retainedNodes: !6651)
!6651 = !{!6652, !6653}
!6652 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6650, file: !515, line: 1814, type: !750)
!6653 = !DILocalVariable(name: "priority", arg: 2, scope: !6650, file: !515, line: 1814, type: !121)
!6654 = !DILocation(line: 0, scope: !6650)
!6655 = !DILocation(line: 1816, column: 7, scope: !6650)
!6656 = !DILocation(line: 0, scope: !6657)
!6657 = distinct !DILexicalBlock(scope: !6650, file: !515, line: 1816, column: 7)
!6658 = !DILocation(line: 1824, column: 1, scope: !6650)
!6659 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !6660, file: !6660, line: 27, type: !6661, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2905, retainedNodes: !6764)
!6660 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6661 = !DISubroutineType(types: !6662)
!6662 = !{null, !6663}
!6663 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !379, line: 347, baseType: !6664)
!6664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6665, size: 32)
!6665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !379, line: 245, size: 1024, elements: !6666)
!6666 = !{!6667, !6725, !6737, !6738, !6739, !6740, !6746, !6759}
!6667 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6665, file: !379, line: 247, baseType: !6668, size: 384)
!6668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !379, line: 57, size: 384, elements: !6669)
!6669 = !{!6670, !6694, !6701, !6702, !6703, !6712, !6713, !6714}
!6670 = !DIDerivedType(tag: DW_TAG_member, scope: !6668, file: !379, line: 60, baseType: !6671, size: 64)
!6671 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6668, file: !379, line: 60, size: 64, elements: !6672)
!6672 = !{!6673, !6688}
!6673 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6671, file: !379, line: 61, baseType: !6674, size: 64)
!6674 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !325, line: 49, baseType: !6675)
!6675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !6676)
!6676 = !{!6677, !6683}
!6677 = !DIDerivedType(tag: DW_TAG_member, scope: !6675, file: !325, line: 38, baseType: !6678, size: 32)
!6678 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6675, file: !325, line: 38, size: 32, elements: !6679)
!6679 = !{!6680, !6682}
!6680 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6678, file: !325, line: 39, baseType: !6681, size: 32)
!6681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6675, size: 32)
!6682 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6678, file: !325, line: 40, baseType: !6681, size: 32)
!6683 = !DIDerivedType(tag: DW_TAG_member, scope: !6675, file: !325, line: 42, baseType: !6684, size: 32, offset: 32)
!6684 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6675, file: !325, line: 42, size: 32, elements: !6685)
!6685 = !{!6686, !6687}
!6686 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6684, file: !325, line: 43, baseType: !6681, size: 32)
!6687 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6684, file: !325, line: 44, baseType: !6681, size: 32)
!6688 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6671, file: !379, line: 62, baseType: !6689, size: 64)
!6689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !404, line: 49, size: 64, elements: !6690)
!6690 = !{!6691}
!6691 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6689, file: !404, line: 50, baseType: !6692, size: 64)
!6692 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6693, size: 64, elements: !363)
!6693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6689, size: 32)
!6694 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6668, file: !379, line: 68, baseType: !6695, size: 32, offset: 64)
!6695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6696, size: 32)
!6696 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !6697)
!6697 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !6698)
!6698 = !{!6699}
!6699 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6697, file: !320, line: 232, baseType: !6700, size: 64)
!6700 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !6675)
!6701 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6668, file: !379, line: 71, baseType: !154, size: 8, offset: 96)
!6702 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6668, file: !379, line: 74, baseType: !154, size: 8, offset: 104)
!6703 = !DIDerivedType(tag: DW_TAG_member, scope: !6668, file: !379, line: 90, baseType: !6704, size: 16, offset: 112)
!6704 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6668, file: !379, line: 90, size: 16, elements: !6705)
!6705 = !{!6706, !6711}
!6706 = !DIDerivedType(tag: DW_TAG_member, scope: !6704, file: !379, line: 91, baseType: !6707, size: 16)
!6707 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6704, file: !379, line: 91, size: 16, elements: !6708)
!6708 = !{!6709, !6710}
!6709 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6707, file: !379, line: 96, baseType: !425, size: 8)
!6710 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6707, file: !379, line: 97, baseType: !154, size: 8, offset: 8)
!6711 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6704, file: !379, line: 100, baseType: !429, size: 16)
!6712 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6668, file: !379, line: 107, baseType: !121, size: 32, offset: 128)
!6713 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6668, file: !379, line: 127, baseType: !102, size: 32, offset: 160)
!6714 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6668, file: !379, line: 131, baseType: !6715, size: 192, offset: 192)
!6715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !320, line: 244, size: 192, elements: !6716)
!6716 = !{!6717, !6718, !6724}
!6717 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6715, file: !320, line: 245, baseType: !6674, size: 64)
!6718 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6715, file: !320, line: 246, baseType: !6719, size: 32, offset: 64)
!6719 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !320, line: 242, baseType: !6720)
!6720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6721, size: 32)
!6721 = !DISubroutineType(types: !6722)
!6722 = !{null, !6723}
!6723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6715, size: 32)
!6724 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6715, file: !320, line: 249, baseType: !202, size: 64, offset: 128)
!6725 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6665, file: !379, line: 250, baseType: !6726, size: 288, offset: 384)
!6726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !446, line: 25, size: 288, elements: !6727)
!6727 = !{!6728, !6729, !6730, !6731, !6732, !6733, !6734, !6735, !6736}
!6728 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6726, file: !446, line: 26, baseType: !121, size: 32)
!6729 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6726, file: !446, line: 27, baseType: !121, size: 32, offset: 32)
!6730 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6726, file: !446, line: 28, baseType: !121, size: 32, offset: 64)
!6731 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6726, file: !446, line: 29, baseType: !121, size: 32, offset: 96)
!6732 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6726, file: !446, line: 30, baseType: !121, size: 32, offset: 128)
!6733 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6726, file: !446, line: 31, baseType: !121, size: 32, offset: 160)
!6734 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6726, file: !446, line: 32, baseType: !121, size: 32, offset: 192)
!6735 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6726, file: !446, line: 33, baseType: !121, size: 32, offset: 224)
!6736 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6726, file: !446, line: 34, baseType: !121, size: 32, offset: 256)
!6737 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6665, file: !379, line: 253, baseType: !102, size: 32, offset: 672)
!6738 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6665, file: !379, line: 256, baseType: !6696, size: 64, offset: 704)
!6739 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6665, file: !379, line: 294, baseType: !103, size: 32, offset: 768)
!6740 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6665, file: !379, line: 300, baseType: !6741, size: 96, offset: 800)
!6741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !379, line: 149, size: 96, elements: !6742)
!6742 = !{!6743, !6744, !6745}
!6743 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6741, file: !379, line: 153, baseType: !22, size: 32)
!6744 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6741, file: !379, line: 162, baseType: !204, size: 32, offset: 32)
!6745 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6741, file: !379, line: 168, baseType: !204, size: 32, offset: 64)
!6746 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6665, file: !379, line: 325, baseType: !6747, size: 32, offset: 896)
!6747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6748, size: 32)
!6748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !296, line: 5073, size: 160, elements: !6749)
!6749 = !{!6750, !6756, !6757}
!6750 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6748, file: !296, line: 5074, baseType: !6751, size: 96)
!6751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !6752)
!6752 = !{!6753, !6754, !6755}
!6753 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6751, file: !472, line: 57, baseType: !475, size: 32)
!6754 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6751, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!6755 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6751, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!6756 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6748, file: !296, line: 5075, baseType: !6696, size: 64, offset: 96)
!6757 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6748, file: !296, line: 5076, baseType: !6758, offset: 160)
!6758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!6759 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6665, file: !379, line: 343, baseType: !6760, size: 64, offset: 928)
!6760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !446, line: 60, size: 64, elements: !6761)
!6761 = !{!6762, !6763}
!6762 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6760, file: !446, line: 63, baseType: !121, size: 32)
!6763 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6760, file: !446, line: 66, baseType: !121, size: 32, offset: 32)
!6764 = !{!6765}
!6765 = !DILocalVariable(name: "thread", arg: 1, scope: !6659, file: !6660, line: 27, type: !6663)
!6766 = !DILocation(line: 0, scope: !6659)
!6767 = !DILocation(line: 29, column: 6, scope: !6768)
!6768 = distinct !DILexicalBlock(scope: !6659, file: !6660, line: 29, column: 6)
!6769 = !DILocation(line: 29, column: 15, scope: !6768)
!6770 = !DILocation(line: 29, column: 6, scope: !6659)
!6771 = !DILocation(line: 1031, column: 3, scope: !6772, inlinedAt: !6775)
!6772 = distinct !DISubprogram(name: "__get_IPSR", scope: !5983, file: !5983, line: 1027, type: !6064, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2905, retainedNodes: !6773)
!6773 = !{!6774}
!6774 = !DILocalVariable(name: "result", scope: !6772, file: !5983, line: 1029, type: !121)
!6775 = distinct !DILocation(line: 48, column: 10, scope: !6776, inlinedAt: !6780)
!6776 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6777, file: !6777, line: 46, type: !6778, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2905, retainedNodes: !317)
!6777 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6778 = !DISubroutineType(types: !6779)
!6779 = !{!157}
!6780 = distinct !DILocation(line: 30, column: 7, scope: !6781)
!6781 = distinct !DILexicalBlock(scope: !6782, file: !6660, line: 30, column: 7)
!6782 = distinct !DILexicalBlock(scope: !6768, file: !6660, line: 29, column: 26)
!6783 = !{i64 2910265}
!6784 = !DILocation(line: 0, scope: !6772, inlinedAt: !6775)
!6785 = !DILocation(line: 48, column: 9, scope: !6776, inlinedAt: !6780)
!6786 = !DILocation(line: 30, column: 7, scope: !6782)
!6787 = !DILocation(line: 42, column: 14, scope: !6788)
!6788 = distinct !DILexicalBlock(scope: !6781, file: !6660, line: 30, column: 25)
!6789 = !DILocation(line: 48, column: 15, scope: !6788)
!6790 = !DILocation(line: 49, column: 3, scope: !6788)
!6791 = !DILocation(line: 52, column: 2, scope: !6659)
!6792 = !DILocation(line: 53, column: 1, scope: !6659)
!6793 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !374, file: !374, line: 127, type: !3213, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !367, retainedNodes: !317)
!6794 = !DILocation(line: 134, column: 2, scope: !6793)
!6795 = !DILocation(line: 156, column: 1, scope: !6793)
!6796 = !DILocation(line: 0, scope: !373)
!6797 = !DILocation(line: 289, column: 36, scope: !6798)
!6798 = distinct !DILexicalBlock(scope: !373, file: !374, line: 285, column: 2)
!6799 = !DILocation(line: 289, column: 42, scope: !6798)
!6800 = !DILocation(line: 300, column: 36, scope: !373)
!6801 = !DILocation(line: 301, column: 35, scope: !373)
!6802 = !DILocation(line: 302, column: 37, scope: !373)
!6803 = !DILocation(line: 311, column: 2, scope: !373)
!6804 = !DILocation(line: 316, column: 1, scope: !373)
!6805 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !543, file: !543, line: 180, type: !3213, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !317)
!6806 = !DILocation(line: 188, column: 12, scope: !6805)
!6807 = !DILocation(line: 271, column: 3, scope: !6808, inlinedAt: !6809)
!6808 = distinct !DISubprogram(name: "__DSB", scope: !5983, file: !5983, line: 269, type: !3213, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !317)
!6809 = distinct !DILocation(line: 192, column: 2, scope: !6805)
!6810 = !{i64 3083304}
!6811 = !DILocation(line: 260, column: 3, scope: !6812, inlinedAt: !6813)
!6812 = distinct !DISubprogram(name: "__ISB", scope: !5983, file: !5983, line: 258, type: !3213, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !317)
!6813 = distinct !DILocation(line: 193, column: 2, scope: !6805)
!6814 = !{i64 3083021}
!6815 = !DILocation(line: 194, column: 1, scope: !6805)
!6816 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !543, file: !543, line: 199, type: !3213, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !317)
!6817 = !DILocation(line: 282, column: 3, scope: !6818, inlinedAt: !6819)
!6818 = distinct !DISubprogram(name: "__DMB", scope: !5983, file: !5983, line: 280, type: !3213, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !317)
!6819 = distinct !DILocation(line: 202, column: 2, scope: !6816)
!6820 = !{i64 3083580}
!6821 = !DILocation(line: 205, column: 12, scope: !6816)
!6822 = !DILocation(line: 206, column: 1, scope: !6816)
!6823 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !543, file: !543, line: 275, type: !6824, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !6837)
!6824 = !DISubroutineType(types: !6825)
!6825 = !{null, !6826, !262, !6251, !6251}
!6826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6827, size: 32)
!6827 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6828)
!6828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !494, line: 52, size: 96, elements: !6829)
!6829 = !{!6830, !6831, !6832}
!6830 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6828, file: !494, line: 53, baseType: !22, size: 32)
!6831 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6828, file: !494, line: 54, baseType: !204, size: 32, offset: 32)
!6832 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !6828, file: !494, line: 55, baseType: !6833, size: 32, offset: 64)
!6833 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !500, line: 151, baseType: !6834)
!6834 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !500, line: 149, size: 32, elements: !6835)
!6835 = !{!6836}
!6836 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !6834, file: !500, line: 150, baseType: !121, size: 32)
!6837 = !{!6838, !6839, !6840, !6841}
!6838 = !DILocalVariable(name: "static_regions", arg: 1, scope: !6823, file: !543, line: 276, type: !6826)
!6839 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6823, file: !543, line: 276, type: !262)
!6840 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !6823, file: !543, line: 277, type: !6251)
!6841 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !6823, file: !543, line: 277, type: !6251)
!6842 = !DILocation(line: 0, scope: !6823)
!6843 = !DILocation(line: 279, column: 6, scope: !6844)
!6844 = distinct !DILexicalBlock(scope: !6823, file: !543, line: 279, column: 6)
!6845 = !DILocation(line: 285, column: 1, scope: !6823)
!6846 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !6847, file: !6847, line: 220, type: !6848, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !6850)
!6847 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6848 = !DISubroutineType(types: !6849)
!6849 = !{!103, !6826, !262, !6251, !6251}
!6850 = !{!6851, !6852, !6853, !6854, !6855}
!6851 = !DILocalVariable(name: "static_regions", arg: 1, scope: !6846, file: !6847, line: 221, type: !6826)
!6852 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6846, file: !6847, line: 221, type: !262)
!6853 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !6846, file: !6847, line: 222, type: !6251)
!6854 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !6846, file: !6847, line: 223, type: !6251)
!6855 = !DILocalVariable(name: "mpu_reg_index", scope: !6846, file: !6847, line: 225, type: !103)
!6856 = !DILocation(line: 0, scope: !6846)
!6857 = !DILocation(line: 225, column: 22, scope: !6846)
!6858 = !DILocation(line: 233, column: 18, scope: !6846)
!6859 = !DILocation(line: 236, column: 23, scope: !6846)
!6860 = !DILocation(line: 236, column: 21, scope: !6846)
!6861 = !DILocation(line: 238, column: 2, scope: !6846)
!6862 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !543, file: !543, line: 105, type: !6863, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !6865)
!6863 = !DISubroutineType(types: !6864)
!6864 = !{!103, !6826, !154, !154, !157}
!6865 = !{!6866, !6867, !6868, !6869, !6870, !6871}
!6866 = !DILocalVariable(name: "regions", arg: 1, scope: !6862, file: !543, line: 106, type: !6826)
!6867 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6862, file: !543, line: 106, type: !154)
!6868 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !6862, file: !543, line: 106, type: !154)
!6869 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !6862, file: !543, line: 107, type: !157)
!6870 = !DILocalVariable(name: "i", scope: !6862, file: !543, line: 109, type: !103)
!6871 = !DILocalVariable(name: "reg_index", scope: !6862, file: !543, line: 110, type: !103)
!6872 = !DILocation(line: 0, scope: !6862)
!6873 = !DILocation(line: 110, column: 18, scope: !6862)
!6874 = !DILocation(line: 112, column: 16, scope: !6875)
!6875 = distinct !DILexicalBlock(scope: !6876, file: !543, line: 112, column: 2)
!6876 = distinct !DILexicalBlock(scope: !6862, file: !543, line: 112, column: 2)
!6877 = !DILocation(line: 112, column: 2, scope: !6876)
!6878 = !DILocation(line: 113, column: 7, scope: !6879)
!6879 = distinct !DILexicalBlock(scope: !6880, file: !543, line: 113, column: 7)
!6880 = distinct !DILexicalBlock(scope: !6875, file: !543, line: 112, column: 36)
!6881 = !DILocation(line: 113, column: 18, scope: !6879)
!6882 = !DILocation(line: 113, column: 23, scope: !6879)
!6883 = !DILocation(line: 113, column: 7, scope: !6880)
!6884 = !DILocation(line: 118, column: 23, scope: !6885)
!6885 = distinct !DILexicalBlock(scope: !6880, file: !543, line: 118, column: 7)
!6886 = !DILocation(line: 119, column: 7, scope: !6885)
!6887 = !DILocation(line: 118, column: 7, scope: !6880)
!6888 = !DILocation(line: 124, column: 36, scope: !6880)
!6889 = !DILocation(line: 124, column: 15, scope: !6880)
!6890 = !DILocation(line: 126, column: 17, scope: !6891)
!6891 = distinct !DILexicalBlock(scope: !6880, file: !543, line: 126, column: 7)
!6892 = !DILocation(line: 126, column: 7, scope: !6880)
!6893 = !DILocation(line: 131, column: 12, scope: !6880)
!6894 = !DILocation(line: 132, column: 2, scope: !6880)
!6895 = !DILocation(line: 112, column: 32, scope: !6875)
!6896 = distinct !{!6896, !6877, !6897}
!6897 = !DILocation(line: 132, column: 2, scope: !6876)
!6898 = !DILocation(line: 135, column: 1, scope: !6862)
!6899 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !6847, file: !6847, line: 63, type: !6900, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !6902)
!6900 = !DISubroutineType(types: !6901)
!6901 = !{!103, !6826}
!6902 = !{!6903, !6904}
!6903 = !DILocalVariable(name: "part", arg: 1, scope: !6899, file: !6847, line: 63, type: !6826)
!6904 = !DILocalVariable(name: "partition_is_valid", scope: !6899, file: !6847, line: 70, type: !103)
!6905 = !DILocation(line: 0, scope: !6899)
!6906 = !DILocation(line: 71, column: 11, scope: !6899)
!6907 = !DILocation(line: 71, column: 37, scope: !6899)
!6908 = !DILocation(line: 72, column: 3, scope: !6899)
!6909 = !DILocation(line: 71, column: 30, scope: !6899)
!6910 = !DILocation(line: 75, column: 11, scope: !6899)
!6911 = !DILocation(line: 75, column: 17, scope: !6899)
!6912 = !DILocation(line: 75, column: 38, scope: !6899)
!6913 = !DILocation(line: 77, column: 2, scope: !6899)
!6914 = distinct !DISubprogram(name: "mpu_configure_region", scope: !543, file: !543, line: 79, type: !6915, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !6917)
!6915 = !DISubroutineType(types: !6916)
!6916 = !{!103, !262, !6826}
!6917 = !{!6918, !6919, !6920}
!6918 = !DILocalVariable(name: "index", arg: 1, scope: !6914, file: !543, line: 79, type: !262)
!6919 = !DILocalVariable(name: "new_region", arg: 2, scope: !6914, file: !543, line: 80, type: !6826)
!6920 = !DILocalVariable(name: "region_conf", scope: !6914, file: !543, line: 82, type: !532)
!6921 = !DILocation(line: 0, scope: !6914)
!6922 = !DILocation(line: 82, column: 2, scope: !6914)
!6923 = !DILocation(line: 82, column: 24, scope: !6914)
!6924 = !DILocation(line: 87, column: 33, scope: !6914)
!6925 = !DILocation(line: 87, column: 14, scope: !6914)
!6926 = !DILocation(line: 87, column: 19, scope: !6914)
!6927 = !DILocation(line: 91, column: 55, scope: !6914)
!6928 = !DILocation(line: 92, column: 16, scope: !6914)
!6929 = !DILocation(line: 92, column: 53, scope: !6914)
!6930 = !DILocation(line: 91, column: 2, scope: !6914)
!6931 = !DILocation(line: 95, column: 9, scope: !6914)
!6932 = !DILocation(line: 97, column: 1, scope: !6914)
!6933 = !DILocation(line: 95, column: 2, scope: !6914)
!6934 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !6847, file: !6847, line: 113, type: !6935, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !6940)
!6935 = !DISubroutineType(types: !6936)
!6936 = !{null, !6937, !6938, !121, !121}
!6937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !538, size: 32)
!6938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6939, size: 32)
!6939 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6833)
!6940 = !{!6941, !6942, !6943, !6944}
!6941 = !DILocalVariable(name: "p_attr", arg: 1, scope: !6934, file: !6847, line: 114, type: !6937)
!6942 = !DILocalVariable(name: "attr", arg: 2, scope: !6934, file: !6847, line: 115, type: !6938)
!6943 = !DILocalVariable(name: "base", arg: 3, scope: !6934, file: !6847, line: 115, type: !121)
!6944 = !DILocalVariable(name: "size", arg: 4, scope: !6934, file: !6847, line: 115, type: !121)
!6945 = !DILocation(line: 0, scope: !6934)
!6946 = !DILocation(line: 127, column: 23, scope: !6934)
!6947 = !DILocation(line: 127, column: 35, scope: !6934)
!6948 = !DILocation(line: 127, column: 33, scope: !6934)
!6949 = !DILocation(line: 127, column: 10, scope: !6934)
!6950 = !DILocation(line: 127, column: 15, scope: !6934)
!6951 = !DILocation(line: 129, column: 1, scope: !6934)
!6952 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !543, file: !543, line: 57, type: !6953, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !6955)
!6953 = !DISubroutineType(types: !6954)
!6954 = !{!103, !262, !530}
!6955 = !{!6956, !6957}
!6956 = !DILocalVariable(name: "index", arg: 1, scope: !6952, file: !543, line: 57, type: !262)
!6957 = !DILocalVariable(name: "region_conf", arg: 2, scope: !6952, file: !543, line: 58, type: !530)
!6958 = !DILocation(line: 0, scope: !6952)
!6959 = !DILocation(line: 61, column: 6, scope: !6960)
!6960 = distinct !DILexicalBlock(scope: !6952, file: !543, line: 61, column: 6)
!6961 = !DILocation(line: 61, column: 12, scope: !6960)
!6962 = !DILocation(line: 61, column: 6, scope: !6952)
!6963 = !DILocation(line: 71, column: 2, scope: !6952)
!6964 = !DILocation(line: 73, column: 2, scope: !6952)
!6965 = !DILocation(line: 74, column: 1, scope: !6952)
!6966 = distinct !DISubprogram(name: "region_init", scope: !6847, file: !6847, line: 29, type: !6967, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !6969)
!6967 = !DISubroutineType(types: !6968)
!6968 = !{null, !6251, !530}
!6969 = !{!6970, !6971}
!6970 = !DILocalVariable(name: "index", arg: 1, scope: !6966, file: !6847, line: 29, type: !6251)
!6971 = !DILocalVariable(name: "region_conf", arg: 2, scope: !6966, file: !6847, line: 30, type: !530)
!6972 = !DILocation(line: 0, scope: !6966)
!6973 = !DILocation(line: 33, column: 2, scope: !6966)
!6974 = !DILocation(line: 47, column: 28, scope: !6966)
!6975 = !DILocation(line: 47, column: 33, scope: !6966)
!6976 = !DILocation(line: 48, column: 26, scope: !6966)
!6977 = !DILocation(line: 47, column: 12, scope: !6966)
!6978 = !DILocation(line: 49, column: 32, scope: !6966)
!6979 = !DILocation(line: 49, column: 37, scope: !6966)
!6980 = !DILocation(line: 49, column: 12, scope: !6966)
!6981 = !DILocation(line: 53, column: 1, scope: !6966)
!6982 = distinct !DISubprogram(name: "set_region_number", scope: !6983, file: !6983, line: 32, type: !6074, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !6984)
!6983 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6984 = !{!6985}
!6985 = !DILocalVariable(name: "index", arg: 1, scope: !6982, file: !6983, line: 32, type: !121)
!6986 = !DILocation(line: 0, scope: !6982)
!6987 = !DILocation(line: 34, column: 11, scope: !6982)
!6988 = !DILocation(line: 35, column: 1, scope: !6982)
!6989 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !6847, file: !6847, line: 88, type: !6990, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !6992)
!6990 = !DISubroutineType(types: !6991)
!6991 = !{!121, !121}
!6992 = !{!6993}
!6993 = !DILocalVariable(name: "size", arg: 1, scope: !6989, file: !6847, line: 88, type: !121)
!6994 = !DILocation(line: 0, scope: !6989)
!6995 = !DILocation(line: 91, column: 11, scope: !6996)
!6996 = distinct !DILexicalBlock(scope: !6989, file: !6847, line: 91, column: 6)
!6997 = !DILocation(line: 91, column: 6, scope: !6989)
!6998 = !DILocation(line: 100, column: 11, scope: !6999)
!6999 = distinct !DILexicalBlock(scope: !6989, file: !6847, line: 100, column: 6)
!7000 = !DILocation(line: 100, column: 6, scope: !6989)
!7001 = !DILocation(line: 104, column: 35, scope: !6989)
!7002 = !DILocation(line: 104, column: 16, scope: !6989)
!7003 = !DILocation(line: 104, column: 50, scope: !6989)
!7004 = !DILocation(line: 104, column: 72, scope: !6989)
!7005 = !DILocation(line: 104, column: 2, scope: !6989)
!7006 = !DILocation(line: 106, column: 1, scope: !6989)
!7007 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !543, file: !543, line: 307, type: !7008, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !7010)
!7008 = !DISubroutineType(types: !7009)
!7009 = !{null, !6826, !154}
!7010 = !{!7011, !7012}
!7011 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7007, file: !543, line: 308, type: !6826)
!7012 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7007, file: !543, line: 308, type: !154)
!7013 = !DILocation(line: 0, scope: !7007)
!7014 = !DILocation(line: 310, column: 6, scope: !7015)
!7015 = distinct !DILexicalBlock(scope: !7007, file: !543, line: 310, column: 6)
!7016 = !DILocation(line: 316, column: 1, scope: !7007)
!7017 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !6847, file: !6847, line: 249, type: !7018, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !7020)
!7018 = !DISubroutineType(types: !7019)
!7019 = !{!103, !6826, !154}
!7020 = !{!7021, !7022, !7023, !7024}
!7021 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7017, file: !6847, line: 250, type: !6826)
!7022 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7017, file: !6847, line: 250, type: !154)
!7023 = !DILocalVariable(name: "mpu_reg_index", scope: !7017, file: !6847, line: 252, type: !103)
!7024 = !DILocalVariable(name: "i", scope: !7025, file: !6847, line: 264, type: !103)
!7025 = distinct !DILexicalBlock(scope: !7026, file: !6847, line: 264, column: 3)
!7026 = distinct !DILexicalBlock(scope: !7027, file: !6847, line: 261, column: 32)
!7027 = distinct !DILexicalBlock(scope: !7017, file: !6847, line: 261, column: 6)
!7028 = !DILocation(line: 0, scope: !7017)
!7029 = !DILocation(line: 252, column: 22, scope: !7017)
!7030 = !DILocation(line: 258, column: 18, scope: !7017)
!7031 = !DILocation(line: 261, column: 20, scope: !7027)
!7032 = !DILocation(line: 261, column: 6, scope: !7017)
!7033 = !DILocation(line: 0, scope: !7025)
!7034 = !DILocation(line: 265, column: 4, scope: !7035)
!7035 = distinct !DILexicalBlock(scope: !7036, file: !6847, line: 264, column: 59)
!7036 = distinct !DILexicalBlock(scope: !7025, file: !6847, line: 264, column: 3)
!7037 = !DILocation(line: 264, column: 55, scope: !7036)
!7038 = !DILocation(line: 264, column: 33, scope: !7036)
!7039 = !DILocation(line: 264, column: 3, scope: !7025)
!7040 = distinct !{!7040, !7039, !7041}
!7041 = !DILocation(line: 266, column: 3, scope: !7025)
!7042 = !DILocation(line: 269, column: 2, scope: !7017)
!7043 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !7044, file: !7044, line: 218, type: !6074, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !7045)
!7044 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7045 = !{!7046}
!7046 = !DILocalVariable(name: "rnr", arg: 1, scope: !7043, file: !7044, line: 218, type: !121)
!7047 = !DILocation(line: 0, scope: !7043)
!7048 = !DILocation(line: 220, column: 12, scope: !7043)
!7049 = !DILocation(line: 221, column: 13, scope: !7043)
!7050 = !DILocation(line: 222, column: 1, scope: !7043)
!7051 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !543, file: !543, line: 326, type: !7052, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !7054)
!7052 = !DISubroutineType(types: !7053)
!7053 = !{!103}
!7054 = !{!7055}
!7055 = !DILocalVariable(name: "r_index", scope: !7051, file: !543, line: 328, type: !121)
!7056 = !DILocation(line: 330, column: 17, scope: !7057)
!7057 = distinct !DILexicalBlock(scope: !7051, file: !543, line: 330, column: 6)
!7058 = !DILocation(line: 330, column: 29, scope: !7057)
!7059 = !DILocation(line: 330, column: 6, scope: !7051)
!7060 = !DILocation(line: 347, column: 2, scope: !7051)
!7061 = !DILocation(line: 0, scope: !7051)
!7062 = !DILocation(line: 364, column: 29, scope: !7063)
!7063 = distinct !DILexicalBlock(scope: !7064, file: !543, line: 364, column: 2)
!7064 = distinct !DILexicalBlock(scope: !7051, file: !543, line: 364, column: 2)
!7065 = !DILocation(line: 364, column: 2, scope: !7064)
!7066 = !DILocation(line: 365, column: 25, scope: !7067)
!7067 = distinct !DILexicalBlock(scope: !7063, file: !543, line: 364, column: 66)
!7068 = !DILocation(line: 365, column: 3, scope: !7067)
!7069 = !DILocation(line: 364, column: 62, scope: !7063)
!7070 = distinct !{!7070, !7065, !7071}
!7071 = !DILocation(line: 366, column: 2, scope: !7064)
!7072 = !DILocation(line: 369, column: 23, scope: !7051)
!7073 = !DILocation(line: 369, column: 21, scope: !7051)
!7074 = !DILocation(line: 372, column: 2, scope: !7051)
!7075 = !DILocation(line: 443, column: 2, scope: !7051)
!7076 = !DILocation(line: 444, column: 1, scope: !7051)
!7077 = distinct !DISubprogram(name: "strcpy", scope: !7078, file: !7078, line: 20, type: !7079, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2933, retainedNodes: !7083)
!7078 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7079 = !DISubroutineType(types: !7080)
!7080 = !{!344, !7081, !7082}
!7081 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !344)
!7082 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !144)
!7083 = !{!7084, !7085, !7086}
!7084 = !DILocalVariable(name: "d", arg: 1, scope: !7077, file: !7078, line: 20, type: !7081)
!7085 = !DILocalVariable(name: "s", arg: 2, scope: !7077, file: !7078, line: 20, type: !7082)
!7086 = !DILocalVariable(name: "dest", scope: !7077, file: !7078, line: 22, type: !344)
!7087 = !DILocation(line: 0, scope: !7077)
!7088 = !DILocation(line: 24, column: 9, scope: !7077)
!7089 = !DILocation(line: 24, column: 12, scope: !7077)
!7090 = !DILocation(line: 24, column: 2, scope: !7077)
!7091 = !DILocation(line: 25, column: 6, scope: !7092)
!7092 = distinct !DILexicalBlock(scope: !7077, file: !7078, line: 24, column: 21)
!7093 = !DILocation(line: 26, column: 4, scope: !7092)
!7094 = !DILocation(line: 27, column: 4, scope: !7092)
!7095 = distinct !{!7095, !7090, !7096}
!7096 = !DILocation(line: 28, column: 2, scope: !7077)
!7097 = !DILocation(line: 30, column: 5, scope: !7077)
!7098 = !DILocation(line: 32, column: 2, scope: !7077)
!7099 = distinct !DISubprogram(name: "strncpy", scope: !7078, file: !7078, line: 42, type: !7100, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2933, retainedNodes: !7102)
!7100 = !DISubroutineType(types: !7101)
!7101 = !{!344, !7081, !7082, !204}
!7102 = !{!7103, !7104, !7105, !7106}
!7103 = !DILocalVariable(name: "d", arg: 1, scope: !7099, file: !7078, line: 42, type: !7081)
!7104 = !DILocalVariable(name: "s", arg: 2, scope: !7099, file: !7078, line: 42, type: !7082)
!7105 = !DILocalVariable(name: "n", arg: 3, scope: !7099, file: !7078, line: 42, type: !204)
!7106 = !DILocalVariable(name: "dest", scope: !7099, file: !7078, line: 44, type: !344)
!7107 = !DILocation(line: 0, scope: !7099)
!7108 = !DILocation(line: 46, column: 12, scope: !7099)
!7109 = !DILocation(line: 46, column: 17, scope: !7099)
!7110 = !DILocation(line: 46, column: 20, scope: !7099)
!7111 = !DILocation(line: 46, column: 23, scope: !7099)
!7112 = !DILocation(line: 46, column: 2, scope: !7099)
!7113 = !DILocation(line: 47, column: 6, scope: !7114)
!7114 = distinct !DILexicalBlock(scope: !7099, file: !7078, line: 46, column: 32)
!7115 = !DILocation(line: 48, column: 4, scope: !7114)
!7116 = !DILocation(line: 49, column: 4, scope: !7114)
!7117 = !DILocation(line: 50, column: 4, scope: !7114)
!7118 = distinct !{!7118, !7112, !7119}
!7119 = !DILocation(line: 51, column: 2, scope: !7099)
!7120 = !DILocation(line: 54, column: 6, scope: !7121)
!7121 = distinct !DILexicalBlock(scope: !7099, file: !7078, line: 53, column: 16)
!7122 = !DILocation(line: 55, column: 4, scope: !7121)
!7123 = !DILocation(line: 56, column: 4, scope: !7121)
!7124 = !DILocation(line: 53, column: 11, scope: !7099)
!7125 = !DILocation(line: 53, column: 2, scope: !7099)
!7126 = distinct !{!7126, !7125, !7127}
!7127 = !DILocation(line: 57, column: 2, scope: !7099)
!7128 = !DILocation(line: 59, column: 2, scope: !7099)
!7129 = distinct !DISubprogram(name: "strchr", scope: !7078, file: !7078, line: 69, type: !7130, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2933, retainedNodes: !7132)
!7130 = !DISubroutineType(types: !7131)
!7131 = !{!344, !144, !103}
!7132 = !{!7133, !7134, !7135}
!7133 = !DILocalVariable(name: "s", arg: 1, scope: !7129, file: !7078, line: 69, type: !144)
!7134 = !DILocalVariable(name: "c", arg: 2, scope: !7129, file: !7078, line: 69, type: !103)
!7135 = !DILocalVariable(name: "tmp", scope: !7129, file: !7078, line: 71, type: !146)
!7136 = !DILocation(line: 0, scope: !7129)
!7137 = !DILocation(line: 73, column: 2, scope: !7129)
!7138 = !DILocation(line: 73, column: 10, scope: !7129)
!7139 = !DILocation(line: 73, column: 13, scope: !7129)
!7140 = !DILocation(line: 73, column: 21, scope: !7129)
!7141 = !DILocation(line: 74, column: 4, scope: !7142)
!7142 = distinct !DILexicalBlock(scope: !7129, file: !7078, line: 73, column: 38)
!7143 = distinct !{!7143, !7137, !7144}
!7144 = !DILocation(line: 75, column: 2, scope: !7129)
!7145 = !DILocation(line: 77, column: 9, scope: !7129)
!7146 = !DILocation(line: 77, column: 2, scope: !7129)
!7147 = distinct !DISubprogram(name: "strrchr", scope: !7078, file: !7078, line: 87, type: !7130, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2933, retainedNodes: !7148)
!7148 = !{!7149, !7150, !7151}
!7149 = !DILocalVariable(name: "s", arg: 1, scope: !7147, file: !7078, line: 87, type: !144)
!7150 = !DILocalVariable(name: "c", arg: 2, scope: !7147, file: !7078, line: 87, type: !103)
!7151 = !DILocalVariable(name: "match", scope: !7147, file: !7078, line: 89, type: !344)
!7152 = !DILocation(line: 0, scope: !7147)
!7153 = !DILocation(line: 91, column: 2, scope: !7147)
!7154 = !DILocation(line: 92, column: 7, scope: !7155)
!7155 = distinct !DILexicalBlock(scope: !7156, file: !7078, line: 92, column: 7)
!7156 = distinct !DILexicalBlock(scope: !7147, file: !7078, line: 91, column: 5)
!7157 = !DILocation(line: 92, column: 10, scope: !7155)
!7158 = !DILocation(line: 92, column: 7, scope: !7156)
!7159 = !DILocation(line: 95, column: 13, scope: !7147)
!7160 = !DILocation(line: 95, column: 2, scope: !7156)
!7161 = distinct !{!7161, !7153, !7162}
!7162 = !DILocation(line: 95, column: 15, scope: !7147)
!7163 = !DILocation(line: 97, column: 2, scope: !7147)
!7164 = distinct !DISubprogram(name: "strlen", scope: !7078, file: !7078, line: 107, type: !7165, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2933, retainedNodes: !7167)
!7165 = !DISubroutineType(types: !7166)
!7166 = !{!204, !144}
!7167 = !{!7168, !7169}
!7168 = !DILocalVariable(name: "s", arg: 1, scope: !7164, file: !7078, line: 107, type: !144)
!7169 = !DILocalVariable(name: "n", scope: !7164, file: !7078, line: 109, type: !204)
!7170 = !DILocation(line: 0, scope: !7164)
!7171 = !DILocation(line: 111, column: 9, scope: !7164)
!7172 = !DILocation(line: 111, column: 12, scope: !7164)
!7173 = !DILocation(line: 111, column: 2, scope: !7164)
!7174 = !DILocation(line: 112, column: 4, scope: !7175)
!7175 = distinct !DILexicalBlock(scope: !7164, file: !7078, line: 111, column: 21)
!7176 = !DILocation(line: 113, column: 4, scope: !7175)
!7177 = distinct !{!7177, !7173, !7178}
!7178 = !DILocation(line: 114, column: 2, scope: !7164)
!7179 = !DILocation(line: 116, column: 2, scope: !7164)
!7180 = distinct !DISubprogram(name: "strnlen", scope: !7078, file: !7078, line: 126, type: !7181, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2933, retainedNodes: !7183)
!7181 = !DISubroutineType(types: !7182)
!7182 = !{!204, !144, !204}
!7183 = !{!7184, !7185, !7186}
!7184 = !DILocalVariable(name: "s", arg: 1, scope: !7180, file: !7078, line: 126, type: !144)
!7185 = !DILocalVariable(name: "maxlen", arg: 2, scope: !7180, file: !7078, line: 126, type: !204)
!7186 = !DILocalVariable(name: "n", scope: !7180, file: !7078, line: 128, type: !204)
!7187 = !DILocation(line: 0, scope: !7180)
!7188 = !DILocation(line: 130, column: 9, scope: !7180)
!7189 = !DILocation(line: 130, column: 12, scope: !7180)
!7190 = !DILocation(line: 130, column: 20, scope: !7180)
!7191 = !DILocation(line: 130, column: 2, scope: !7180)
!7192 = !DILocation(line: 131, column: 4, scope: !7193)
!7193 = distinct !DILexicalBlock(scope: !7180, file: !7078, line: 130, column: 35)
!7194 = !DILocation(line: 132, column: 4, scope: !7193)
!7195 = distinct !{!7195, !7191, !7196}
!7196 = !DILocation(line: 133, column: 2, scope: !7180)
!7197 = !DILocation(line: 135, column: 2, scope: !7180)
!7198 = distinct !DISubprogram(name: "strcmp", scope: !7078, file: !7078, line: 145, type: !7199, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2933, retainedNodes: !7201)
!7199 = !DISubroutineType(types: !7200)
!7200 = !{!103, !144, !144}
!7201 = !{!7202, !7203}
!7202 = !DILocalVariable(name: "s1", arg: 1, scope: !7198, file: !7078, line: 145, type: !144)
!7203 = !DILocalVariable(name: "s2", arg: 2, scope: !7198, file: !7078, line: 145, type: !144)
!7204 = !DILocation(line: 0, scope: !7198)
!7205 = !DILocation(line: 147, column: 10, scope: !7198)
!7206 = !DILocation(line: 147, column: 17, scope: !7198)
!7207 = !DILocation(line: 147, column: 14, scope: !7198)
!7208 = !DILocation(line: 147, column: 22, scope: !7198)
!7209 = !DILocation(line: 148, column: 5, scope: !7210)
!7210 = distinct !DILexicalBlock(scope: !7198, file: !7078, line: 147, column: 40)
!7211 = !DILocation(line: 149, column: 5, scope: !7210)
!7212 = distinct !{!7212, !7213, !7214}
!7213 = !DILocation(line: 147, column: 2, scope: !7198)
!7214 = !DILocation(line: 150, column: 2, scope: !7198)
!7215 = !DILocation(line: 152, column: 9, scope: !7198)
!7216 = !DILocation(line: 152, column: 15, scope: !7198)
!7217 = !DILocation(line: 152, column: 13, scope: !7198)
!7218 = !DILocation(line: 152, column: 2, scope: !7198)
!7219 = distinct !DISubprogram(name: "strncmp", scope: !7078, file: !7078, line: 162, type: !7220, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2933, retainedNodes: !7222)
!7220 = !DISubroutineType(types: !7221)
!7221 = !{!103, !144, !144, !204}
!7222 = !{!7223, !7224, !7225}
!7223 = !DILocalVariable(name: "s1", arg: 1, scope: !7219, file: !7078, line: 162, type: !144)
!7224 = !DILocalVariable(name: "s2", arg: 2, scope: !7219, file: !7078, line: 162, type: !144)
!7225 = !DILocalVariable(name: "n", arg: 3, scope: !7219, file: !7078, line: 162, type: !204)
!7226 = !DILocation(line: 0, scope: !7219)
!7227 = !DILocation(line: 164, column: 17, scope: !7219)
!7228 = !DILocation(line: 164, column: 21, scope: !7219)
!7229 = !DILocation(line: 164, column: 28, scope: !7219)
!7230 = !DILocation(line: 164, column: 25, scope: !7219)
!7231 = !DILocation(line: 164, column: 33, scope: !7219)
!7232 = !DILocation(line: 165, column: 5, scope: !7233)
!7233 = distinct !DILexicalBlock(scope: !7219, file: !7078, line: 164, column: 51)
!7234 = !DILocation(line: 166, column: 5, scope: !7233)
!7235 = !DILocation(line: 167, column: 4, scope: !7233)
!7236 = distinct !{!7236, !7237, !7238}
!7237 = !DILocation(line: 164, column: 2, scope: !7219)
!7238 = !DILocation(line: 168, column: 2, scope: !7219)
!7239 = !DILocation(line: 170, column: 25, scope: !7219)
!7240 = !DILocation(line: 170, column: 31, scope: !7219)
!7241 = !DILocation(line: 170, column: 29, scope: !7219)
!7242 = !DILocation(line: 170, column: 9, scope: !7219)
!7243 = !DILocation(line: 170, column: 2, scope: !7219)
!7244 = distinct !DISubprogram(name: "strtok_r", scope: !7078, file: !7078, line: 180, type: !7245, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2933, retainedNodes: !7248)
!7245 = !DISubroutineType(types: !7246)
!7246 = !{!344, !344, !144, !7247}
!7247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !344, size: 32)
!7248 = !{!7249, !7250, !7251, !7252, !7253}
!7249 = !DILocalVariable(name: "str", arg: 1, scope: !7244, file: !7078, line: 180, type: !344)
!7250 = !DILocalVariable(name: "sep", arg: 2, scope: !7244, file: !7078, line: 180, type: !144)
!7251 = !DILocalVariable(name: "state", arg: 3, scope: !7244, file: !7078, line: 180, type: !7247)
!7252 = !DILocalVariable(name: "start", scope: !7244, file: !7078, line: 182, type: !344)
!7253 = !DILocalVariable(name: "end", scope: !7244, file: !7078, line: 182, type: !344)
!7254 = !DILocation(line: 0, scope: !7244)
!7255 = !DILocation(line: 184, column: 10, scope: !7244)
!7256 = !DILocation(line: 184, column: 22, scope: !7244)
!7257 = !DILocation(line: 187, column: 9, scope: !7244)
!7258 = !DILocation(line: 187, column: 16, scope: !7244)
!7259 = !DILocation(line: 187, column: 19, scope: !7244)
!7260 = !DILocation(line: 187, column: 2, scope: !7244)
!7261 = !DILocation(line: 188, column: 8, scope: !7262)
!7262 = distinct !DILexicalBlock(scope: !7244, file: !7078, line: 187, column: 40)
!7263 = distinct !{!7263, !7260, !7264}
!7264 = !DILocation(line: 189, column: 2, scope: !7244)
!7265 = !DILocation(line: 198, column: 9, scope: !7244)
!7266 = !DILocation(line: 198, column: 18, scope: !7244)
!7267 = !DILocation(line: 198, column: 17, scope: !7244)
!7268 = !DILocation(line: 198, column: 2, scope: !7244)
!7269 = !DILocation(line: 199, column: 6, scope: !7270)
!7270 = distinct !DILexicalBlock(scope: !7244, file: !7078, line: 198, column: 37)
!7271 = !DILocation(line: 198, column: 14, scope: !7244)
!7272 = distinct !{!7272, !7268, !7273}
!7273 = !DILocation(line: 200, column: 2, scope: !7244)
!7274 = !DILocation(line: 203, column: 8, scope: !7275)
!7275 = distinct !DILexicalBlock(scope: !7276, file: !7078, line: 202, column: 20)
!7276 = distinct !DILexicalBlock(scope: !7244, file: !7078, line: 202, column: 6)
!7277 = !DILocation(line: 204, column: 16, scope: !7275)
!7278 = !DILocation(line: 205, column: 2, scope: !7275)
!7279 = !DILocation(line: 210, column: 1, scope: !7244)
!7280 = distinct !DISubprogram(name: "strcat", scope: !7078, file: !7078, line: 212, type: !7079, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2933, retainedNodes: !7281)
!7281 = !{!7282, !7283}
!7282 = !DILocalVariable(name: "dest", arg: 1, scope: !7280, file: !7078, line: 212, type: !7081)
!7283 = !DILocalVariable(name: "src", arg: 2, scope: !7280, file: !7078, line: 212, type: !7082)
!7284 = !DILocation(line: 0, scope: !7280)
!7285 = !DILocation(line: 214, column: 16, scope: !7280)
!7286 = !DILocation(line: 214, column: 14, scope: !7280)
!7287 = !DILocation(line: 214, column: 2, scope: !7280)
!7288 = !DILocation(line: 215, column: 2, scope: !7280)
!7289 = distinct !DISubprogram(name: "strncat", scope: !7078, file: !7078, line: 218, type: !7100, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2933, retainedNodes: !7290)
!7290 = !{!7291, !7292, !7293, !7294, !7295}
!7291 = !DILocalVariable(name: "dest", arg: 1, scope: !7289, file: !7078, line: 218, type: !7081)
!7292 = !DILocalVariable(name: "src", arg: 2, scope: !7289, file: !7078, line: 218, type: !7082)
!7293 = !DILocalVariable(name: "n", arg: 3, scope: !7289, file: !7078, line: 219, type: !204)
!7294 = !DILocalVariable(name: "orig_dest", scope: !7289, file: !7078, line: 221, type: !344)
!7295 = !DILocalVariable(name: "len", scope: !7289, file: !7078, line: 222, type: !204)
!7296 = !DILocation(line: 0, scope: !7289)
!7297 = !DILocation(line: 222, column: 15, scope: !7289)
!7298 = !DILocation(line: 224, column: 7, scope: !7289)
!7299 = !DILocation(line: 225, column: 14, scope: !7289)
!7300 = !DILocation(line: 225, column: 19, scope: !7289)
!7301 = !DILocation(line: 225, column: 11, scope: !7289)
!7302 = !DILocation(line: 225, column: 23, scope: !7289)
!7303 = !DILocation(line: 225, column: 28, scope: !7289)
!7304 = !DILocation(line: 225, column: 2, scope: !7289)
!7305 = !DILocation(line: 226, column: 17, scope: !7306)
!7306 = distinct !DILexicalBlock(scope: !7289, file: !7078, line: 225, column: 38)
!7307 = !DILocation(line: 226, column: 8, scope: !7306)
!7308 = !DILocation(line: 226, column: 11, scope: !7306)
!7309 = distinct !{!7309, !7304, !7310}
!7310 = !DILocation(line: 227, column: 2, scope: !7289)
!7311 = !DILocation(line: 228, column: 8, scope: !7289)
!7312 = !DILocation(line: 230, column: 2, scope: !7289)
!7313 = distinct !DISubprogram(name: "memcmp", scope: !7078, file: !7078, line: 239, type: !7314, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2933, retainedNodes: !7316)
!7314 = !DISubroutineType(types: !7315)
!7315 = !{!103, !13, !13, !204}
!7316 = !{!7317, !7318, !7319, !7320, !7321}
!7317 = !DILocalVariable(name: "m1", arg: 1, scope: !7313, file: !7078, line: 239, type: !13)
!7318 = !DILocalVariable(name: "m2", arg: 2, scope: !7313, file: !7078, line: 239, type: !13)
!7319 = !DILocalVariable(name: "n", arg: 3, scope: !7313, file: !7078, line: 239, type: !204)
!7320 = !DILocalVariable(name: "c1", scope: !7313, file: !7078, line: 241, type: !144)
!7321 = !DILocalVariable(name: "c2", scope: !7313, file: !7078, line: 242, type: !144)
!7322 = !DILocation(line: 0, scope: !7313)
!7323 = !DILocation(line: 244, column: 7, scope: !7324)
!7324 = distinct !DILexicalBlock(scope: !7313, file: !7078, line: 244, column: 6)
!7325 = !DILocation(line: 244, column: 6, scope: !7313)
!7326 = !DILocation(line: 248, column: 10, scope: !7313)
!7327 = !DILocation(line: 248, column: 14, scope: !7313)
!7328 = !DILocation(line: 248, column: 19, scope: !7313)
!7329 = !DILocation(line: 248, column: 2, scope: !7313)
!7330 = !DILocation(line: 248, column: 23, scope: !7313)
!7331 = !DILocation(line: 248, column: 30, scope: !7313)
!7332 = !DILocation(line: 248, column: 27, scope: !7313)
!7333 = !DILocation(line: 249, column: 5, scope: !7334)
!7334 = distinct !DILexicalBlock(scope: !7313, file: !7078, line: 248, column: 36)
!7335 = !DILocation(line: 250, column: 5, scope: !7334)
!7336 = distinct !{!7336, !7329, !7337}
!7337 = !DILocation(line: 251, column: 2, scope: !7313)
!7338 = !DILocation(line: 253, column: 9, scope: !7313)
!7339 = !DILocation(line: 253, column: 15, scope: !7313)
!7340 = !DILocation(line: 253, column: 13, scope: !7313)
!7341 = !DILocation(line: 253, column: 2, scope: !7313)
!7342 = !DILocation(line: 254, column: 1, scope: !7313)
!7343 = distinct !DISubprogram(name: "memmove", scope: !7078, file: !7078, line: 263, type: !7344, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2933, retainedNodes: !7346)
!7344 = !DISubroutineType(types: !7345)
!7345 = !{!102, !102, !13, !204}
!7346 = !{!7347, !7348, !7349, !7350, !7351}
!7347 = !DILocalVariable(name: "d", arg: 1, scope: !7343, file: !7078, line: 263, type: !102)
!7348 = !DILocalVariable(name: "s", arg: 2, scope: !7343, file: !7078, line: 263, type: !13)
!7349 = !DILocalVariable(name: "n", arg: 3, scope: !7343, file: !7078, line: 263, type: !204)
!7350 = !DILocalVariable(name: "dest", scope: !7343, file: !7078, line: 265, type: !344)
!7351 = !DILocalVariable(name: "src", scope: !7343, file: !7078, line: 266, type: !144)
!7352 = !DILocation(line: 0, scope: !7343)
!7353 = !DILocation(line: 268, column: 21, scope: !7354)
!7354 = distinct !DILexicalBlock(scope: !7343, file: !7078, line: 268, column: 6)
!7355 = !DILocation(line: 268, column: 28, scope: !7354)
!7356 = !DILocation(line: 268, column: 6, scope: !7343)
!7357 = !DILocation(line: 280, column: 12, scope: !7358)
!7358 = distinct !DILexicalBlock(scope: !7354, file: !7078, line: 278, column: 9)
!7359 = !DILocation(line: 280, column: 3, scope: !7358)
!7360 = !DILocation(line: 275, column: 5, scope: !7361)
!7361 = distinct !DILexicalBlock(scope: !7362, file: !7078, line: 274, column: 17)
!7362 = distinct !DILexicalBlock(scope: !7354, file: !7078, line: 268, column: 33)
!7363 = !DILocation(line: 276, column: 14, scope: !7361)
!7364 = !DILocation(line: 276, column: 4, scope: !7361)
!7365 = !DILocation(line: 276, column: 12, scope: !7361)
!7366 = !DILocation(line: 274, column: 12, scope: !7362)
!7367 = !DILocation(line: 274, column: 3, scope: !7362)
!7368 = distinct !{!7368, !7367, !7369}
!7369 = !DILocation(line: 277, column: 3, scope: !7362)
!7370 = !DILocation(line: 281, column: 12, scope: !7371)
!7371 = distinct !DILexicalBlock(scope: !7358, file: !7078, line: 280, column: 17)
!7372 = !DILocation(line: 281, column: 10, scope: !7371)
!7373 = !DILocation(line: 282, column: 8, scope: !7371)
!7374 = !DILocation(line: 283, column: 7, scope: !7371)
!7375 = !DILocation(line: 284, column: 5, scope: !7371)
!7376 = distinct !{!7376, !7359, !7377}
!7377 = !DILocation(line: 285, column: 3, scope: !7358)
!7378 = !DILocation(line: 288, column: 2, scope: !7343)
!7379 = distinct !DISubprogram(name: "memcpy", scope: !7078, file: !7078, line: 298, type: !7380, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2933, retainedNodes: !7384)
!7380 = !DISubroutineType(types: !7381)
!7381 = !{!102, !7382, !7383, !204}
!7382 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!7383 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!7384 = !{!7385, !7386, !7387, !7388, !7389}
!7385 = !DILocalVariable(name: "d", arg: 1, scope: !7379, file: !7078, line: 298, type: !7382)
!7386 = !DILocalVariable(name: "s", arg: 2, scope: !7379, file: !7078, line: 298, type: !7383)
!7387 = !DILocalVariable(name: "n", arg: 3, scope: !7379, file: !7078, line: 298, type: !204)
!7388 = !DILocalVariable(name: "d_byte", scope: !7379, file: !7078, line: 302, type: !230)
!7389 = !DILocalVariable(name: "s_byte", scope: !7379, file: !7078, line: 303, type: !2936)
!7390 = !DILocation(line: 0, scope: !7379)
!7391 = !DILocation(line: 337, column: 11, scope: !7379)
!7392 = !DILocation(line: 337, column: 2, scope: !7379)
!7393 = !DILocation(line: 338, column: 25, scope: !7394)
!7394 = distinct !DILexicalBlock(scope: !7379, file: !7078, line: 337, column: 16)
!7395 = !DILocation(line: 338, column: 17, scope: !7394)
!7396 = !DILocation(line: 338, column: 11, scope: !7394)
!7397 = !DILocation(line: 338, column: 15, scope: !7394)
!7398 = !DILocation(line: 339, column: 4, scope: !7394)
!7399 = distinct !{!7399, !7392, !7400}
!7400 = !DILocation(line: 340, column: 2, scope: !7379)
!7401 = !DILocation(line: 342, column: 2, scope: !7379)
!7402 = distinct !DISubprogram(name: "memset", scope: !7078, file: !7078, line: 352, type: !7403, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2933, retainedNodes: !7405)
!7403 = !DISubroutineType(types: !7404)
!7404 = !{!102, !102, !103, !204}
!7405 = !{!7406, !7407, !7408, !7409, !7410}
!7406 = !DILocalVariable(name: "buf", arg: 1, scope: !7402, file: !7078, line: 352, type: !102)
!7407 = !DILocalVariable(name: "c", arg: 2, scope: !7402, file: !7078, line: 352, type: !103)
!7408 = !DILocalVariable(name: "n", arg: 3, scope: !7402, file: !7078, line: 352, type: !204)
!7409 = !DILocalVariable(name: "d_byte", scope: !7402, file: !7078, line: 356, type: !230)
!7410 = !DILocalVariable(name: "c_byte", scope: !7402, file: !7078, line: 357, type: !155)
!7411 = !DILocation(line: 0, scope: !7402)
!7412 = !DILocation(line: 357, column: 25, scope: !7402)
!7413 = !DILocation(line: 389, column: 11, scope: !7402)
!7414 = !DILocation(line: 389, column: 2, scope: !7402)
!7415 = !DILocation(line: 390, column: 11, scope: !7416)
!7416 = distinct !DILexicalBlock(scope: !7402, file: !7078, line: 389, column: 16)
!7417 = !DILocation(line: 390, column: 15, scope: !7416)
!7418 = !DILocation(line: 391, column: 4, scope: !7416)
!7419 = distinct !{!7419, !7414, !7420}
!7420 = !DILocation(line: 392, column: 2, scope: !7402)
!7421 = !DILocation(line: 394, column: 2, scope: !7402)
!7422 = distinct !DISubprogram(name: "memchr", scope: !7078, file: !7078, line: 404, type: !7423, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2933, retainedNodes: !7425)
!7423 = !DISubroutineType(types: !7424)
!7424 = !{!102, !13, !103, !204}
!7425 = !{!7426, !7427, !7428, !7429}
!7426 = !DILocalVariable(name: "s", arg: 1, scope: !7422, file: !7078, line: 404, type: !13)
!7427 = !DILocalVariable(name: "c", arg: 2, scope: !7422, file: !7078, line: 404, type: !103)
!7428 = !DILocalVariable(name: "n", arg: 3, scope: !7422, file: !7078, line: 404, type: !204)
!7429 = !DILocalVariable(name: "p", scope: !7430, file: !7078, line: 407, type: !2936)
!7430 = distinct !DILexicalBlock(scope: !7431, file: !7078, line: 406, column: 14)
!7431 = distinct !DILexicalBlock(scope: !7422, file: !7078, line: 406, column: 6)
!7432 = !DILocation(line: 0, scope: !7422)
!7433 = !DILocation(line: 406, column: 8, scope: !7431)
!7434 = !DILocation(line: 406, column: 6, scope: !7422)
!7435 = !DILocation(line: 409, column: 3, scope: !7430)
!7436 = !DILocation(line: 0, scope: !7430)
!7437 = !DILocation(line: 410, column: 8, scope: !7438)
!7438 = distinct !DILexicalBlock(scope: !7439, file: !7078, line: 410, column: 8)
!7439 = distinct !DILexicalBlock(scope: !7430, file: !7078, line: 409, column: 6)
!7440 = !DILocation(line: 410, column: 13, scope: !7438)
!7441 = !DILocation(line: 410, column: 8, scope: !7439)
!7442 = distinct !{!7442, !7435, !7443}
!7443 = !DILocation(line: 414, column: 20, scope: !7430)
!7444 = !DILocation(line: 417, column: 2, scope: !7422)
!7445 = !DILocation(line: 418, column: 1, scope: !7422)
!7446 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !553, file: !553, line: 23, type: !3347, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !7447)
!7447 = !{!7448}
!7448 = !DILocalVariable(name: "hook", arg: 1, scope: !7446, file: !553, line: 23, type: !106)
!7449 = !DILocation(line: 0, scope: !7446)
!7450 = !DILocation(line: 25, column: 15, scope: !7446)
!7451 = !DILocation(line: 26, column: 1, scope: !7446)
!7452 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !553, file: !553, line: 14, type: !107, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !7453)
!7453 = !{!7454}
!7454 = !DILocalVariable(name: "c", arg: 1, scope: !7452, file: !553, line: 14, type: !103)
!7455 = !DILocation(line: 0, scope: !7452)
!7456 = !DILocation(line: 18, column: 2, scope: !7452)
!7457 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !553, file: !553, line: 28, type: !7458, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !7460)
!7458 = !DISubroutineType(types: !7459)
!7459 = !{!103, !103, !549}
!7460 = !{!7461, !7462}
!7461 = !DILocalVariable(name: "c", arg: 1, scope: !7457, file: !553, line: 28, type: !103)
!7462 = !DILocalVariable(name: "stream", arg: 2, scope: !7457, file: !553, line: 28, type: !549)
!7463 = !DILocation(line: 0, scope: !7457)
!7464 = !DILocation(line: 30, column: 27, scope: !7457)
!7465 = !DILocation(line: 30, column: 50, scope: !7457)
!7466 = !DILocation(line: 30, column: 9, scope: !7457)
!7467 = !DILocation(line: 30, column: 2, scope: !7457)
!7468 = distinct !DISubprogram(name: "fputc", scope: !553, file: !553, line: 41, type: !7458, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !7469)
!7469 = !{!7470, !7471}
!7470 = !DILocalVariable(name: "c", arg: 1, scope: !7468, file: !553, line: 41, type: !103)
!7471 = !DILocalVariable(name: "stream", arg: 2, scope: !7468, file: !553, line: 41, type: !549)
!7472 = !DILocation(line: 0, scope: !7468)
!7473 = !DILocation(line: 43, column: 9, scope: !7468)
!7474 = !DILocation(line: 43, column: 2, scope: !7468)
!7475 = distinct !DISubprogram(name: "zephyr_fputc", scope: !7476, file: !7476, line: 72, type: !7458, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !7477)
!7476 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/getline")
!7477 = !{!7478, !7479}
!7478 = !DILocalVariable(name: "c", arg: 1, scope: !7475, file: !7476, line: 72, type: !103)
!7479 = !DILocalVariable(name: "stream", arg: 2, scope: !7475, file: !7476, line: 72, type: !549)
!7480 = !DILocation(line: 0, scope: !7475)
!7481 = !DILocation(line: 81, column: 2, scope: !7482)
!7482 = distinct !DILexicalBlock(scope: !7475, file: !7476, line: 81, column: 2)
!7483 = !{i64 2154212406}
!7484 = !DILocation(line: 82, column: 9, scope: !7475)
!7485 = !DILocation(line: 82, column: 2, scope: !7475)
!7486 = distinct !DISubprogram(name: "fputs", scope: !553, file: !553, line: 46, type: !7487, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !7490)
!7487 = !DISubroutineType(types: !7488)
!7488 = !{!103, !7082, !7489}
!7489 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !549)
!7490 = !{!7491, !7492, !7493, !7494}
!7491 = !DILocalVariable(name: "s", arg: 1, scope: !7486, file: !553, line: 46, type: !7082)
!7492 = !DILocalVariable(name: "stream", arg: 2, scope: !7486, file: !553, line: 46, type: !7489)
!7493 = !DILocalVariable(name: "len", scope: !7486, file: !553, line: 48, type: !103)
!7494 = !DILocalVariable(name: "ret", scope: !7486, file: !553, line: 49, type: !103)
!7495 = !DILocation(line: 0, scope: !7486)
!7496 = !DILocation(line: 48, column: 12, scope: !7486)
!7497 = !DILocation(line: 51, column: 8, scope: !7486)
!7498 = !DILocation(line: 53, column: 13, scope: !7486)
!7499 = !DILocation(line: 53, column: 9, scope: !7486)
!7500 = !DILocation(line: 53, column: 2, scope: !7486)
!7501 = distinct !DISubprogram(name: "fwrite", scope: !553, file: !553, line: 99, type: !7502, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !7504)
!7502 = !DISubroutineType(types: !7503)
!7503 = !{!204, !7383, !204, !204, !7489}
!7504 = !{!7505, !7506, !7507, !7508}
!7505 = !DILocalVariable(name: "ptr", arg: 1, scope: !7501, file: !553, line: 99, type: !7383)
!7506 = !DILocalVariable(name: "size", arg: 2, scope: !7501, file: !553, line: 99, type: !204)
!7507 = !DILocalVariable(name: "nitems", arg: 3, scope: !7501, file: !553, line: 99, type: !204)
!7508 = !DILocalVariable(name: "stream", arg: 4, scope: !7501, file: !553, line: 100, type: !7489)
!7509 = !DILocation(line: 0, scope: !7501)
!7510 = !DILocation(line: 102, column: 9, scope: !7501)
!7511 = !DILocation(line: 102, column: 2, scope: !7501)
!7512 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !7476, file: !7476, line: 96, type: !7502, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !7513)
!7513 = !{!7514, !7515, !7516, !7517}
!7514 = !DILocalVariable(name: "ptr", arg: 1, scope: !7512, file: !7476, line: 96, type: !7383)
!7515 = !DILocalVariable(name: "size", arg: 2, scope: !7512, file: !7476, line: 96, type: !204)
!7516 = !DILocalVariable(name: "nitems", arg: 3, scope: !7512, file: !7476, line: 96, type: !204)
!7517 = !DILocalVariable(name: "stream", arg: 4, scope: !7512, file: !7476, line: 96, type: !7489)
!7518 = !DILocation(line: 0, scope: !7512)
!7519 = !DILocation(line: 107, column: 2, scope: !7520)
!7520 = distinct !DILexicalBlock(scope: !7512, file: !7476, line: 107, column: 2)
!7521 = !{i64 2154212510}
!7522 = !DILocation(line: 108, column: 9, scope: !7512)
!7523 = !DILocation(line: 108, column: 2, scope: !7512)
!7524 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !553, file: !553, line: 56, type: !7502, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !7525)
!7525 = !{!7526, !7527, !7528, !7529, !7530, !7531, !7532, !7533}
!7526 = !DILocalVariable(name: "ptr", arg: 1, scope: !7524, file: !553, line: 56, type: !7383)
!7527 = !DILocalVariable(name: "size", arg: 2, scope: !7524, file: !553, line: 56, type: !204)
!7528 = !DILocalVariable(name: "nitems", arg: 3, scope: !7524, file: !553, line: 57, type: !204)
!7529 = !DILocalVariable(name: "stream", arg: 4, scope: !7524, file: !553, line: 57, type: !7489)
!7530 = !DILocalVariable(name: "i", scope: !7524, file: !553, line: 59, type: !204)
!7531 = !DILocalVariable(name: "j", scope: !7524, file: !553, line: 60, type: !204)
!7532 = !DILocalVariable(name: "p", scope: !7524, file: !553, line: 61, type: !2936)
!7533 = !DILabel(scope: !7524, name: "done", file: !553, line: 82)
!7534 = !DILocation(line: 0, scope: !7524)
!7535 = !DILocation(line: 63, column: 14, scope: !7536)
!7536 = distinct !DILexicalBlock(scope: !7524, file: !553, line: 63, column: 6)
!7537 = !DILocation(line: 63, column: 24, scope: !7536)
!7538 = !DILocation(line: 72, column: 3, scope: !7539)
!7539 = distinct !DILexicalBlock(scope: !7524, file: !553, line: 70, column: 5)
!7540 = !DILocation(line: 0, scope: !7539)
!7541 = !DILocation(line: 73, column: 8, scope: !7542)
!7542 = distinct !DILexicalBlock(scope: !7543, file: !553, line: 73, column: 8)
!7543 = distinct !DILexicalBlock(scope: !7539, file: !553, line: 72, column: 6)
!7544 = !DILocation(line: 73, column: 29, scope: !7542)
!7545 = !DILocation(line: 73, column: 27, scope: !7542)
!7546 = !DILocation(line: 73, column: 21, scope: !7542)
!7547 = !DILocation(line: 73, column: 33, scope: !7542)
!7548 = !DILocation(line: 73, column: 8, scope: !7543)
!7549 = !DILocation(line: 76, column: 5, scope: !7543)
!7550 = !DILocation(line: 77, column: 14, scope: !7539)
!7551 = !DILocation(line: 77, column: 3, scope: !7543)
!7552 = distinct !{!7552, !7538, !7553}
!7553 = !DILocation(line: 77, column: 17, scope: !7539)
!7554 = !DILocation(line: 79, column: 4, scope: !7539)
!7555 = !DILocation(line: 80, column: 13, scope: !7524)
!7556 = !DILocation(line: 80, column: 2, scope: !7539)
!7557 = distinct !{!7557, !7558, !7559}
!7558 = !DILocation(line: 70, column: 2, scope: !7524)
!7559 = !DILocation(line: 80, column: 16, scope: !7524)
!7560 = !DILocation(line: 82, column: 1, scope: !7524)
!7561 = !DILocation(line: 83, column: 17, scope: !7524)
!7562 = !DILocation(line: 83, column: 2, scope: !7524)
!7563 = !DILocation(line: 84, column: 1, scope: !7524)
!7564 = distinct !DISubprogram(name: "puts", scope: !553, file: !553, line: 106, type: !7565, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !7567)
!7565 = !DISubroutineType(types: !7566)
!7566 = !{!103, !144}
!7567 = !{!7568}
!7568 = !DILocalVariable(name: "s", arg: 1, scope: !7564, file: !553, line: 106, type: !144)
!7569 = !DILocation(line: 0, scope: !7564)
!7570 = !DILocation(line: 108, column: 6, scope: !7571)
!7571 = distinct !DILexicalBlock(scope: !7564, file: !553, line: 108, column: 6)
!7572 = !DILocation(line: 108, column: 23, scope: !7571)
!7573 = !DILocation(line: 108, column: 6, scope: !7564)
!7574 = !DILocation(line: 112, column: 9, scope: !7564)
!7575 = !DILocation(line: 112, column: 29, scope: !7564)
!7576 = !DILocation(line: 112, column: 2, scope: !7564)
!7577 = !DILocation(line: 113, column: 1, scope: !7564)
!7578 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !664, file: !664, line: 368, type: !717, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7579)
!7579 = !{!7580}
!7580 = !DILocalVariable(name: "dev", arg: 1, scope: !7578, file: !664, line: 368, type: !693)
!7581 = !DILocation(line: 0, scope: !7578)
!7582 = !DILocation(line: 370, column: 2, scope: !7578)
!7583 = !DILocation(line: 371, column: 1, scope: !7578)
!7584 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !664, file: !664, line: 243, type: !7585, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7587)
!7585 = !DISubroutineType(types: !7586)
!7586 = !{null, !103, !103, !693}
!7587 = !{!7588, !7589, !7590, !7591, !7593}
!7588 = !DILocalVariable(name: "min", arg: 1, scope: !7584, file: !664, line: 243, type: !103)
!7589 = !DILocalVariable(name: "max", arg: 2, scope: !7584, file: !664, line: 243, type: !103)
!7590 = !DILocalVariable(name: "dev", arg: 3, scope: !7584, file: !664, line: 243, type: !693)
!7591 = !DILocalVariable(name: "data", scope: !7584, file: !664, line: 245, type: !7592)
!7592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !697, size: 32)
!7593 = !DILocalVariable(name: "line", scope: !7584, file: !664, line: 246, type: !103)
!7594 = !DILocation(line: 0, scope: !7584)
!7595 = !DILocation(line: 245, column: 38, scope: !7584)
!7596 = !DILocation(line: 249, column: 24, scope: !7597)
!7597 = distinct !DILexicalBlock(scope: !7598, file: !664, line: 249, column: 2)
!7598 = distinct !DILexicalBlock(scope: !7584, file: !664, line: 249, column: 2)
!7599 = !DILocation(line: 249, column: 2, scope: !7598)
!7600 = !DILocation(line: 251, column: 7, scope: !7601)
!7601 = distinct !DILexicalBlock(scope: !7602, file: !664, line: 251, column: 7)
!7602 = distinct !DILexicalBlock(scope: !7597, file: !664, line: 249, column: 39)
!7603 = !DILocation(line: 251, column: 7, scope: !7602)
!7604 = !DILocation(line: 253, column: 4, scope: !7605)
!7605 = distinct !DILexicalBlock(scope: !7601, file: !664, line: 251, column: 36)
!7606 = !DILocation(line: 256, column: 24, scope: !7607)
!7607 = distinct !DILexicalBlock(scope: !7605, file: !664, line: 256, column: 8)
!7608 = !DILocation(line: 256, column: 9, scope: !7607)
!7609 = !DILocation(line: 256, column: 8, scope: !7605)
!7610 = !DILocation(line: 260, column: 43, scope: !7605)
!7611 = !DILocation(line: 260, column: 4, scope: !7605)
!7612 = !DILocation(line: 261, column: 3, scope: !7605)
!7613 = !DILocation(line: 249, column: 35, scope: !7597)
!7614 = distinct !{!7614, !7599, !7615}
!7615 = !DILocation(line: 262, column: 2, scope: !7598)
!7616 = !DILocation(line: 263, column: 1, scope: !7584)
!7617 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !664, file: !664, line: 158, type: !107, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7618)
!7618 = !{!7619}
!7619 = !DILocalVariable(name: "line", arg: 1, scope: !7617, file: !664, line: 158, type: !103)
!7620 = !DILocation(line: 0, scope: !7617)
!7621 = !DILocation(line: 170, column: 38, scope: !7622)
!7622 = distinct !DILexicalBlock(scope: !7623, file: !664, line: 160, column: 17)
!7623 = distinct !DILexicalBlock(scope: !7617, file: !664, line: 160, column: 6)
!7624 = !DILocation(line: 170, column: 10, scope: !7622)
!7625 = !DILocation(line: 176, column: 1, scope: !7617)
!7626 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !664, file: !664, line: 183, type: !7627, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7629)
!7627 = !DISubroutineType(types: !7628)
!7628 = !{null, !103}
!7629 = !{!7630}
!7630 = !DILocalVariable(name: "line", arg: 1, scope: !7626, file: !664, line: 183, type: !103)
!7631 = !DILocation(line: 0, scope: !7626)
!7632 = !DILocation(line: 195, column: 28, scope: !7633)
!7633 = distinct !DILexicalBlock(scope: !7634, file: !664, line: 185, column: 17)
!7634 = distinct !DILexicalBlock(scope: !7626, file: !664, line: 185, column: 6)
!7635 = !DILocation(line: 195, column: 3, scope: !7633)
!7636 = !DILocation(line: 200, column: 1, scope: !7626)
!7637 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !7638, file: !7638, line: 910, type: !6074, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7639)
!7638 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7639 = !{!7640}
!7640 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7637, file: !7638, line: 910, type: !121)
!7641 = !DILocation(line: 0, scope: !7637)
!7642 = !DILocation(line: 912, column: 3, scope: !7637)
!7643 = !DILocation(line: 913, column: 1, scope: !7637)
!7644 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !7638, file: !7638, line: 834, type: !6990, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7645)
!7645 = !{!7646}
!7646 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7644, file: !7638, line: 834, type: !121)
!7647 = !DILocation(line: 0, scope: !7644)
!7648 = !DILocation(line: 836, column: 11, scope: !7644)
!7649 = !DILocation(line: 836, column: 40, scope: !7644)
!7650 = !DILocation(line: 836, column: 3, scope: !7644)
!7651 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !664, file: !664, line: 304, type: !717, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7652)
!7652 = !{!7653}
!7653 = !DILocalVariable(name: "dev", arg: 1, scope: !7651, file: !664, line: 304, type: !693)
!7654 = !DILocation(line: 0, scope: !7651)
!7655 = !DILocation(line: 306, column: 2, scope: !7651)
!7656 = !DILocation(line: 307, column: 1, scope: !7651)
!7657 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !664, file: !664, line: 299, type: !717, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7658)
!7658 = !{!7659}
!7659 = !DILocalVariable(name: "dev", arg: 1, scope: !7657, file: !664, line: 299, type: !693)
!7660 = !DILocation(line: 0, scope: !7657)
!7661 = !DILocation(line: 301, column: 2, scope: !7657)
!7662 = !DILocation(line: 302, column: 1, scope: !7657)
!7663 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !664, file: !664, line: 294, type: !717, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7664)
!7664 = !{!7665}
!7665 = !DILocalVariable(name: "dev", arg: 1, scope: !7663, file: !664, line: 294, type: !693)
!7666 = !DILocation(line: 0, scope: !7663)
!7667 = !DILocation(line: 296, column: 2, scope: !7663)
!7668 = !DILocation(line: 297, column: 1, scope: !7663)
!7669 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !664, file: !664, line: 397, type: !717, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7670)
!7670 = !{!7671}
!7671 = !DILocalVariable(name: "dev", arg: 1, scope: !7669, file: !664, line: 397, type: !693)
!7672 = !DILocation(line: 0, scope: !7669)
!7673 = !DILocation(line: 399, column: 2, scope: !7669)
!7674 = !DILocation(line: 400, column: 1, scope: !7669)
!7675 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !664, file: !664, line: 392, type: !717, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7676)
!7676 = !{!7677}
!7677 = !DILocalVariable(name: "dev", arg: 1, scope: !7675, file: !664, line: 392, type: !693)
!7678 = !DILocation(line: 0, scope: !7675)
!7679 = !DILocation(line: 394, column: 2, scope: !7675)
!7680 = !DILocation(line: 395, column: 1, scope: !7675)
!7681 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !664, file: !664, line: 289, type: !717, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7682)
!7682 = !{!7683}
!7683 = !DILocalVariable(name: "dev", arg: 1, scope: !7681, file: !664, line: 289, type: !693)
!7684 = !DILocation(line: 0, scope: !7681)
!7685 = !DILocation(line: 291, column: 2, scope: !7681)
!7686 = !DILocation(line: 292, column: 1, scope: !7681)
!7687 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !664, file: !664, line: 387, type: !717, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7688)
!7688 = !{!7689}
!7689 = !DILocalVariable(name: "dev", arg: 1, scope: !7687, file: !664, line: 387, type: !693)
!7690 = !DILocation(line: 0, scope: !7687)
!7691 = !DILocation(line: 389, column: 2, scope: !7687)
!7692 = !DILocation(line: 390, column: 1, scope: !7687)
!7693 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !664, file: !664, line: 382, type: !717, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7694)
!7694 = !{!7695}
!7695 = !DILocalVariable(name: "dev", arg: 1, scope: !7693, file: !664, line: 382, type: !693)
!7696 = !DILocation(line: 0, scope: !7693)
!7697 = !DILocation(line: 384, column: 2, scope: !7693)
!7698 = !DILocation(line: 385, column: 1, scope: !7693)
!7699 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !664, file: !664, line: 373, type: !717, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7700)
!7700 = !{!7701}
!7701 = !DILocalVariable(name: "dev", arg: 1, scope: !7699, file: !664, line: 373, type: !693)
!7702 = !DILocation(line: 0, scope: !7699)
!7703 = !DILocation(line: 375, column: 2, scope: !7699)
!7704 = !DILocation(line: 376, column: 1, scope: !7699)
!7705 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !664, file: !664, line: 284, type: !717, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7706)
!7706 = !{!7707}
!7707 = !DILocalVariable(name: "dev", arg: 1, scope: !7705, file: !664, line: 284, type: !693)
!7708 = !DILocation(line: 0, scope: !7705)
!7709 = !DILocation(line: 286, column: 2, scope: !7705)
!7710 = !DILocation(line: 287, column: 1, scope: !7705)
!7711 = distinct !DISubprogram(name: "stm32_exti_init", scope: !664, file: !664, line: 416, type: !691, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7712)
!7712 = !{!7713}
!7713 = !DILocalVariable(name: "dev", arg: 1, scope: !7711, file: !664, line: 416, type: !693)
!7714 = !DILocation(line: 0, scope: !7711)
!7715 = !DILocation(line: 418, column: 2, scope: !7711)
!7716 = !DILocation(line: 420, column: 2, scope: !7711)
!7717 = !DILocation(line: 0, scope: !716)
!7718 = !DILocation(line: 493, column: 2, scope: !7719)
!7719 = distinct !DILexicalBlock(scope: !716, file: !664, line: 493, column: 2)
!7720 = !DILocation(line: 497, column: 2, scope: !7721)
!7721 = distinct !DILexicalBlock(scope: !716, file: !664, line: 497, column: 2)
!7722 = !DILocation(line: 507, column: 2, scope: !7723)
!7723 = distinct !DILexicalBlock(scope: !716, file: !664, line: 507, column: 2)
!7724 = !DILocation(line: 512, column: 2, scope: !7725)
!7725 = distinct !DILexicalBlock(scope: !716, file: !664, line: 512, column: 2)
!7726 = !DILocation(line: 516, column: 2, scope: !7727)
!7727 = distinct !DILexicalBlock(scope: !716, file: !664, line: 516, column: 2)
!7728 = !DILocation(line: 523, column: 2, scope: !7729)
!7729 = distinct !DILexicalBlock(scope: !716, file: !664, line: 523, column: 2)
!7730 = !DILocation(line: 527, column: 2, scope: !7731)
!7731 = distinct !DILexicalBlock(scope: !716, file: !664, line: 527, column: 2)
!7732 = !DILocation(line: 581, column: 2, scope: !7733)
!7733 = distinct !DILexicalBlock(scope: !716, file: !664, line: 581, column: 2)
!7734 = !DILocation(line: 586, column: 2, scope: !7735)
!7735 = distinct !DILexicalBlock(scope: !716, file: !664, line: 586, column: 2)
!7736 = !DILocation(line: 591, column: 2, scope: !7737)
!7737 = distinct !DILexicalBlock(scope: !716, file: !664, line: 591, column: 2)
!7738 = !DILocation(line: 595, column: 2, scope: !7739)
!7739 = distinct !DILexicalBlock(scope: !716, file: !664, line: 595, column: 2)
!7740 = !DILocation(line: 607, column: 1, scope: !716)
!7741 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !664, file: !664, line: 112, type: !7627, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7742)
!7742 = !{!7743, !7744}
!7743 = !DILocalVariable(name: "line", arg: 1, scope: !7741, file: !664, line: 112, type: !103)
!7744 = !DILocalVariable(name: "irqnum", scope: !7741, file: !664, line: 114, type: !103)
!7745 = !DILocation(line: 0, scope: !7741)
!7746 = !DILocation(line: 121, column: 11, scope: !7741)
!7747 = !DILocation(line: 130, column: 26, scope: !7741)
!7748 = !DILocation(line: 130, column: 2, scope: !7741)
!7749 = !DILocation(line: 134, column: 2, scope: !7741)
!7750 = !DILocation(line: 135, column: 1, scope: !7741)
!7751 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !7638, file: !7638, line: 268, type: !6074, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7752)
!7752 = !{!7753}
!7753 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7751, file: !7638, line: 268, type: !121)
!7754 = !DILocation(line: 0, scope: !7751)
!7755 = !DILocation(line: 270, column: 3, scope: !7751)
!7756 = !DILocation(line: 271, column: 1, scope: !7751)
!7757 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !664, file: !664, line: 137, type: !7627, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7758)
!7758 = !{!7759}
!7759 = !DILocalVariable(name: "line", arg: 1, scope: !7757, file: !664, line: 137, type: !103)
!7760 = !DILocation(line: 0, scope: !7757)
!7761 = !DILocation(line: 141, column: 11, scope: !7762)
!7762 = distinct !DILexicalBlock(scope: !7757, file: !664, line: 141, column: 6)
!7763 = !DILocation(line: 141, column: 6, scope: !7757)
!7764 = !DILocation(line: 145, column: 28, scope: !7765)
!7765 = distinct !DILexicalBlock(scope: !7762, file: !664, line: 141, column: 17)
!7766 = !DILocation(line: 145, column: 3, scope: !7765)
!7767 = !DILocation(line: 147, column: 2, scope: !7765)
!7768 = !DILocation(line: 151, column: 1, scope: !7757)
!7769 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !7638, file: !7638, line: 309, type: !6074, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7770)
!7770 = !{!7771}
!7771 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7769, file: !7638, line: 309, type: !121)
!7772 = !DILocation(line: 0, scope: !7769)
!7773 = !DILocation(line: 311, column: 3, scope: !7769)
!7774 = !DILocation(line: 312, column: 1, scope: !7769)
!7775 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !664, file: !664, line: 202, type: !7776, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7778)
!7776 = !DISubroutineType(types: !7777)
!7777 = !{null, !103, !103}
!7778 = !{!7779, !7780}
!7779 = !DILocalVariable(name: "line", arg: 1, scope: !7775, file: !664, line: 202, type: !103)
!7780 = !DILocalVariable(name: "trigger", arg: 2, scope: !7775, file: !664, line: 202, type: !103)
!7781 = !DILocation(line: 0, scope: !7775)
!7782 = !DILocation(line: 211, column: 2, scope: !7775)
!7783 = !DILocation(line: 213, column: 36, scope: !7784)
!7784 = distinct !DILexicalBlock(scope: !7775, file: !664, line: 211, column: 19)
!7785 = !DILocation(line: 213, column: 3, scope: !7784)
!7786 = !DILocation(line: 214, column: 3, scope: !7784)
!7787 = !DILocation(line: 215, column: 3, scope: !7784)
!7788 = !DILocation(line: 217, column: 35, scope: !7784)
!7789 = !DILocation(line: 217, column: 3, scope: !7784)
!7790 = !DILocation(line: 218, column: 3, scope: !7784)
!7791 = !DILocation(line: 219, column: 3, scope: !7784)
!7792 = !DILocation(line: 221, column: 36, scope: !7784)
!7793 = !DILocation(line: 221, column: 3, scope: !7784)
!7794 = !DILocation(line: 222, column: 3, scope: !7784)
!7795 = !DILocation(line: 223, column: 3, scope: !7784)
!7796 = !DILocation(line: 225, column: 35, scope: !7784)
!7797 = !DILocation(line: 225, column: 3, scope: !7784)
!7798 = !DILocation(line: 226, column: 3, scope: !7784)
!7799 = !DILocation(line: 227, column: 3, scope: !7784)
!7800 = !DILocation(line: 232, column: 1, scope: !7775)
!7801 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !7638, file: !7638, line: 573, type: !6074, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7802)
!7802 = !{!7803}
!7803 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7801, file: !7638, line: 573, type: !121)
!7804 = !DILocation(line: 0, scope: !7801)
!7805 = !DILocation(line: 575, column: 3, scope: !7801)
!7806 = !DILocation(line: 577, column: 1, scope: !7801)
!7807 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !7638, file: !7638, line: 703, type: !6074, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7808)
!7808 = !{!7809}
!7809 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7807, file: !7638, line: 703, type: !121)
!7810 = !DILocation(line: 0, scope: !7807)
!7811 = !DILocation(line: 705, column: 3, scope: !7807)
!7812 = !DILocation(line: 706, column: 1, scope: !7807)
!7813 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !7638, file: !7638, line: 529, type: !6074, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7814)
!7814 = !{!7815}
!7815 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7813, file: !7638, line: 529, type: !121)
!7816 = !DILocation(line: 0, scope: !7813)
!7817 = !DILocation(line: 531, column: 3, scope: !7813)
!7818 = !DILocation(line: 533, column: 1, scope: !7813)
!7819 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !7638, file: !7638, line: 661, type: !6074, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7820)
!7820 = !{!7821}
!7821 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7819, file: !7638, line: 661, type: !121)
!7822 = !DILocation(line: 0, scope: !7819)
!7823 = !DILocation(line: 663, column: 3, scope: !7819)
!7824 = !DILocation(line: 664, column: 1, scope: !7819)
!7825 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !664, file: !664, line: 433, type: !7826, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7828)
!7826 = !DISubroutineType(types: !7827)
!7827 = !{!103, !103, !704, !102}
!7828 = !{!7829, !7830, !7831, !7832, !7834}
!7829 = !DILocalVariable(name: "line", arg: 1, scope: !7825, file: !664, line: 433, type: !103)
!7830 = !DILocalVariable(name: "cb", arg: 2, scope: !7825, file: !664, line: 433, type: !704)
!7831 = !DILocalVariable(name: "arg", arg: 3, scope: !7825, file: !664, line: 433, type: !102)
!7832 = !DILocalVariable(name: "dev", scope: !7825, file: !664, line: 435, type: !7833)
!7833 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !693)
!7834 = !DILocalVariable(name: "data", scope: !7825, file: !664, line: 436, type: !7592)
!7835 = !DILocation(line: 0, scope: !7825)
!7836 = !DILocation(line: 438, column: 21, scope: !7837)
!7837 = distinct !DILexicalBlock(scope: !7825, file: !664, line: 438, column: 6)
!7838 = !DILocation(line: 438, column: 6, scope: !7837)
!7839 = !DILocation(line: 438, column: 6, scope: !7825)
!7840 = !DILocation(line: 442, column: 20, scope: !7825)
!7841 = !DILocation(line: 443, column: 17, scope: !7825)
!7842 = !DILocation(line: 443, column: 22, scope: !7825)
!7843 = !DILocation(line: 445, column: 2, scope: !7825)
!7844 = !DILocation(line: 446, column: 1, scope: !7825)
!7845 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !664, file: !664, line: 448, type: !7627, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7846)
!7846 = !{!7847, !7848, !7849}
!7847 = !DILocalVariable(name: "line", arg: 1, scope: !7845, file: !664, line: 448, type: !103)
!7848 = !DILocalVariable(name: "dev", scope: !7845, file: !664, line: 450, type: !7833)
!7849 = !DILocalVariable(name: "data", scope: !7845, file: !664, line: 451, type: !7592)
!7850 = !DILocation(line: 0, scope: !7845)
!7851 = !DILocation(line: 453, column: 17, scope: !7845)
!7852 = !DILocation(line: 453, column: 20, scope: !7845)
!7853 = !DILocation(line: 454, column: 17, scope: !7845)
!7854 = !DILocation(line: 454, column: 22, scope: !7845)
!7855 = !DILocation(line: 455, column: 1, scope: !7845)
!7856 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !853, file: !853, line: 183, type: !891, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !789, retainedNodes: !7857)
!7857 = !{!7858, !7859, !7860, !7861, !7862}
!7858 = !DILocalVariable(name: "dev", arg: 1, scope: !7856, file: !853, line: 183, type: !882)
!7859 = !DILocalVariable(name: "sub_system", arg: 2, scope: !7856, file: !853, line: 184, type: !893)
!7860 = !DILocalVariable(name: "pclken", scope: !7856, file: !853, line: 186, type: !843)
!7861 = !DILocalVariable(name: "reg", scope: !7856, file: !853, line: 187, type: !1580)
!7862 = !DILocalVariable(name: "reg_val", scope: !7856, file: !853, line: 188, type: !121)
!7863 = !DILocation(line: 0, scope: !7856)
!7864 = !DILocation(line: 192, column: 6, scope: !7865)
!7865 = distinct !DILexicalBlock(scope: !7856, file: !853, line: 192, column: 6)
!7866 = !DILocation(line: 192, column: 6, scope: !7856)
!7867 = !DILocation(line: 197, column: 52, scope: !7856)
!7868 = !DILocation(line: 197, column: 8, scope: !7856)
!7869 = !DILocation(line: 198, column: 12, scope: !7856)
!7870 = !DILocation(line: 199, column: 21, scope: !7856)
!7871 = !DILocation(line: 199, column: 10, scope: !7856)
!7872 = !DILocation(line: 200, column: 7, scope: !7856)
!7873 = !DILocation(line: 202, column: 2, scope: !7856)
!7874 = !DILocation(line: 203, column: 1, scope: !7856)
!7875 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !853, file: !853, line: 205, type: !891, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !789, retainedNodes: !7876)
!7876 = !{!7877, !7878, !7879, !7880, !7881}
!7877 = !DILocalVariable(name: "dev", arg: 1, scope: !7875, file: !853, line: 205, type: !882)
!7878 = !DILocalVariable(name: "sub_system", arg: 2, scope: !7875, file: !853, line: 206, type: !893)
!7879 = !DILocalVariable(name: "pclken", scope: !7875, file: !853, line: 208, type: !843)
!7880 = !DILocalVariable(name: "reg", scope: !7875, file: !853, line: 209, type: !1580)
!7881 = !DILocalVariable(name: "reg_val", scope: !7875, file: !853, line: 210, type: !121)
!7882 = !DILocation(line: 0, scope: !7875)
!7883 = !DILocation(line: 214, column: 6, scope: !7884)
!7884 = distinct !DILexicalBlock(scope: !7875, file: !853, line: 214, column: 6)
!7885 = !DILocation(line: 214, column: 6, scope: !7875)
!7886 = !DILocation(line: 219, column: 52, scope: !7875)
!7887 = !DILocation(line: 219, column: 8, scope: !7875)
!7888 = !DILocation(line: 220, column: 12, scope: !7875)
!7889 = !DILocation(line: 221, column: 22, scope: !7875)
!7890 = !DILocation(line: 221, column: 13, scope: !7875)
!7891 = !DILocation(line: 221, column: 10, scope: !7875)
!7892 = !DILocation(line: 222, column: 7, scope: !7875)
!7893 = !DILocation(line: 224, column: 2, scope: !7875)
!7894 = !DILocation(line: 225, column: 1, scope: !7875)
!7895 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !853, file: !853, line: 262, type: !907, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !789, retainedNodes: !7896)
!7896 = !{!7897, !7898, !7899, !7900, !7901, !7902, !7903, !7904}
!7897 = !DILocalVariable(name: "clock", arg: 1, scope: !7895, file: !853, line: 262, type: !882)
!7898 = !DILocalVariable(name: "sub_system", arg: 2, scope: !7895, file: !853, line: 263, type: !893)
!7899 = !DILocalVariable(name: "rate", arg: 3, scope: !7895, file: !853, line: 264, type: !849)
!7900 = !DILocalVariable(name: "pclken", scope: !7895, file: !853, line: 266, type: !843)
!7901 = !DILocalVariable(name: "ahb_clock", scope: !7895, file: !853, line: 273, type: !121)
!7902 = !DILocalVariable(name: "apb1_clock", scope: !7895, file: !853, line: 274, type: !121)
!7903 = !DILocalVariable(name: "apb2_clock", scope: !7895, file: !853, line: 276, type: !121)
!7904 = !DILocalVariable(name: "ahb3_clock", scope: !7895, file: !853, line: 286, type: !121)
!7905 = !DILocation(line: 0, scope: !7895)
!7906 = !DILocation(line: 273, column: 23, scope: !7895)
!7907 = !DILocation(line: 299, column: 18, scope: !7895)
!7908 = !DILocation(line: 299, column: 2, scope: !7895)
!7909 = !DILocation(line: 274, column: 24, scope: !7895)
!7910 = !DILocation(line: 319, column: 3, scope: !7911)
!7911 = distinct !DILexicalBlock(scope: !7895, file: !853, line: 299, column: 23)
!7912 = !DILocation(line: 276, column: 24, scope: !7895)
!7913 = !DILocation(line: 323, column: 3, scope: !7911)
!7914 = !DILocation(line: 346, column: 33, scope: !7911)
!7915 = !DILocation(line: 346, column: 11, scope: !7911)
!7916 = !DILocation(line: 350, column: 3, scope: !7911)
!7917 = !DILocation(line: 354, column: 33, scope: !7911)
!7918 = !DILocation(line: 354, column: 11, scope: !7911)
!7919 = !DILocation(line: 358, column: 3, scope: !7911)
!7920 = !DILocation(line: 374, column: 3, scope: !7911)
!7921 = !DILocation(line: 379, column: 3, scope: !7911)
!7922 = !DILocation(line: 0, scope: !7911)
!7923 = !DILocation(line: 396, column: 1, scope: !7895)
!7924 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !853, file: !853, line: 227, type: !923, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !789, retainedNodes: !7925)
!7925 = !{!7926, !7927, !7928, !7929, !7930, !7931, !7932, !7933}
!7926 = !DILocalVariable(name: "dev", arg: 1, scope: !7924, file: !853, line: 227, type: !882)
!7927 = !DILocalVariable(name: "sub_system", arg: 2, scope: !7924, file: !853, line: 228, type: !893)
!7928 = !DILocalVariable(name: "data", arg: 3, scope: !7924, file: !853, line: 229, type: !102)
!7929 = !DILocalVariable(name: "pclken", scope: !7924, file: !853, line: 233, type: !843)
!7930 = !DILocalVariable(name: "reg", scope: !7924, file: !853, line: 234, type: !1580)
!7931 = !DILocalVariable(name: "reg_val", scope: !7924, file: !853, line: 235, type: !121)
!7932 = !DILocalVariable(name: "dt_val", scope: !7924, file: !853, line: 235, type: !121)
!7933 = !DILocalVariable(name: "err", scope: !7924, file: !853, line: 236, type: !103)
!7934 = !DILocation(line: 0, scope: !7924)
!7935 = !DILocation(line: 241, column: 30, scope: !7924)
!7936 = !DILocation(line: 241, column: 8, scope: !7924)
!7937 = !DILocation(line: 242, column: 10, scope: !7938)
!7938 = distinct !DILexicalBlock(scope: !7924, file: !853, line: 242, column: 6)
!7939 = !DILocation(line: 242, column: 6, scope: !7924)
!7940 = !DILocation(line: 247, column: 11, scope: !7924)
!7941 = !DILocation(line: 248, column: 6, scope: !7924)
!7942 = !DILocation(line: 247, column: 44, scope: !7924)
!7943 = !DILocation(line: 250, column: 6, scope: !7924)
!7944 = !DILocation(line: 249, column: 52, scope: !7924)
!7945 = !DILocation(line: 249, column: 8, scope: !7924)
!7946 = !DILocation(line: 251, column: 12, scope: !7924)
!7947 = !DILocation(line: 252, column: 10, scope: !7924)
!7948 = !DILocation(line: 253, column: 7, scope: !7924)
!7949 = !DILocation(line: 255, column: 2, scope: !7924)
!7950 = !DILocation(line: 260, column: 1, scope: !7924)
!7951 = distinct !DISubprogram(name: "enabled_clock", scope: !853, file: !853, line: 100, type: !7952, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !789, retainedNodes: !7954)
!7952 = !DISubroutineType(types: !7953)
!7953 = !{!103, !121}
!7954 = !{!7955, !7956}
!7955 = !DILocalVariable(name: "src_clk", arg: 1, scope: !7951, file: !853, line: 100, type: !121)
!7956 = !DILocalVariable(name: "r", scope: !7951, file: !853, line: 102, type: !103)
!7957 = !DILocation(line: 0, scope: !7951)
!7958 = !DILocation(line: 104, column: 2, scope: !7951)
!7959 = !DILocation(line: 180, column: 2, scope: !7951)
!7960 = !DILocation(line: 181, column: 1, scope: !7951)
!7961 = distinct !DISubprogram(name: "get_bus_clock", scope: !853, file: !853, line: 79, type: !7962, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !789, retainedNodes: !7964)
!7962 = !DISubroutineType(types: !7963)
!7963 = !{!121, !121, !121}
!7964 = !{!7965, !7966}
!7965 = !DILocalVariable(name: "clock", arg: 1, scope: !7961, file: !853, line: 79, type: !121)
!7966 = !DILocalVariable(name: "prescaler", arg: 2, scope: !7961, file: !853, line: 79, type: !121)
!7967 = !DILocation(line: 0, scope: !7961)
!7968 = !DILocation(line: 81, column: 15, scope: !7961)
!7969 = !DILocation(line: 81, column: 2, scope: !7961)
!7970 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !853, file: !853, line: 68, type: !7971, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !789, retainedNodes: !7973)
!7971 = !DISubroutineType(types: !7972)
!7972 = !{!121, !121, !103, !103, !103}
!7973 = !{!7974, !7975, !7976, !7977}
!7974 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !7970, file: !853, line: 68, type: !121)
!7975 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !7970, file: !853, line: 69, type: !103)
!7976 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !7970, file: !853, line: 70, type: !103)
!7977 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !7970, file: !853, line: 71, type: !103)
!7978 = !DILocation(line: 0, scope: !7970)
!7979 = !DILocation(line: 75, column: 22, scope: !7970)
!7980 = !DILocation(line: 76, column: 13, scope: !7970)
!7981 = !DILocation(line: 75, column: 34, scope: !7970)
!7982 = !DILocation(line: 75, column: 2, scope: !7970)
!7983 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !853, file: !853, line: 641, type: !880, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !789, retainedNodes: !7984)
!7984 = !{!7985, !7986, !7987}
!7985 = !DILocalVariable(name: "dev", arg: 1, scope: !7983, file: !853, line: 641, type: !882)
!7986 = !DILocalVariable(name: "old_flash_freq", scope: !7983, file: !853, line: 664, type: !121)
!7987 = !DILocalVariable(name: "new_flash_freq", scope: !7983, file: !853, line: 665, type: !121)
!7988 = !DILocation(line: 0, scope: !7983)
!7989 = !DILocation(line: 646, column: 2, scope: !7983)
!7990 = !DILocation(line: 667, column: 19, scope: !7983)
!7991 = !DILocation(line: 674, column: 21, scope: !7992)
!7992 = distinct !DILexicalBlock(scope: !7983, file: !853, line: 674, column: 6)
!7993 = !DILocation(line: 674, column: 6, scope: !7983)
!7994 = !DILocation(line: 675, column: 3, scope: !7995)
!7995 = distinct !DILexicalBlock(scope: !7992, file: !853, line: 674, column: 59)
!7996 = !DILocation(line: 676, column: 2, scope: !7995)
!7997 = !DILocation(line: 680, column: 2, scope: !7983)
!7998 = !DILocation(line: 683, column: 2, scope: !7983)
!7999 = !DILocation(line: 690, column: 3, scope: !8000)
!8000 = distinct !DILexicalBlock(scope: !8001, file: !853, line: 689, column: 9)
!8001 = distinct !DILexicalBlock(scope: !7983, file: !853, line: 685, column: 6)
!8002 = !DILocation(line: 695, column: 2, scope: !7983)
!8003 = !DILocation(line: 696, column: 2, scope: !7983)
!8004 = !DILocation(line: 696, column: 9, scope: !7983)
!8005 = !DILocation(line: 696, column: 34, scope: !7983)
!8006 = distinct !{!8006, !8003, !8007}
!8007 = !DILocation(line: 697, column: 2, scope: !7983)
!8008 = !DILocation(line: 720, column: 21, scope: !8009)
!8009 = distinct !DILexicalBlock(scope: !7983, file: !853, line: 720, column: 6)
!8010 = !DILocation(line: 720, column: 6, scope: !7983)
!8011 = !DILocation(line: 721, column: 3, scope: !8012)
!8012 = distinct !DILexicalBlock(scope: !8009, file: !853, line: 720, column: 60)
!8013 = !DILocation(line: 722, column: 2, scope: !8012)
!8014 = !DILocation(line: 725, column: 18, scope: !7983)
!8015 = !DILocation(line: 728, column: 2, scope: !7983)
!8016 = !DILocation(line: 730, column: 2, scope: !7983)
!8017 = !DILocation(line: 745, column: 2, scope: !7983)
!8018 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !8019, file: !8019, line: 3275, type: !6064, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !789, retainedNodes: !317)
!8019 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8020 = !DILocation(line: 3277, column: 21, scope: !8018)
!8021 = !DILocation(line: 3277, column: 3, scope: !8018)
!8022 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !853, file: !853, line: 507, type: !3213, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !789, retainedNodes: !317)
!8023 = !DILocation(line: 516, column: 4, scope: !8024)
!8024 = distinct !DILexicalBlock(scope: !8025, file: !853, line: 515, column: 10)
!8025 = distinct !DILexicalBlock(scope: !8026, file: !853, line: 513, column: 7)
!8026 = distinct !DILexicalBlock(scope: !8027, file: !853, line: 510, column: 37)
!8027 = distinct !DILexicalBlock(scope: !8022, file: !853, line: 510, column: 6)
!8028 = !DILocation(line: 526, column: 3, scope: !8026)
!8029 = !DILocation(line: 527, column: 3, scope: !8026)
!8030 = !DILocation(line: 527, column: 10, scope: !8026)
!8031 = !DILocation(line: 527, column: 31, scope: !8026)
!8032 = distinct !{!8032, !8029, !8033}
!8033 = !DILocation(line: 529, column: 3, scope: !8026)
!8034 = !DILocation(line: 583, column: 3, scope: !8035)
!8035 = distinct !DILexicalBlock(scope: !8036, file: !853, line: 577, column: 37)
!8036 = distinct !DILexicalBlock(scope: !8022, file: !853, line: 577, column: 6)
!8037 = !DILocation(line: 584, column: 3, scope: !8035)
!8038 = !DILocation(line: 584, column: 10, scope: !8035)
!8039 = !DILocation(line: 584, column: 31, scope: !8035)
!8040 = distinct !{!8040, !8037, !8041}
!8041 = !DILocation(line: 585, column: 3, scope: !8035)
!8042 = !DILocation(line: 627, column: 1, scope: !8022)
!8043 = distinct !DISubprogram(name: "set_up_plls", scope: !853, file: !853, line: 448, type: !3213, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !789, retainedNodes: !317)
!8044 = !DILocation(line: 460, column: 6, scope: !8045)
!8045 = distinct !DILexicalBlock(scope: !8043, file: !853, line: 460, column: 6)
!8046 = !DILocation(line: 460, column: 31, scope: !8045)
!8047 = !DILocation(line: 460, column: 6, scope: !8043)
!8048 = !DILocation(line: 461, column: 3, scope: !8049)
!8049 = distinct !DILexicalBlock(scope: !8045, file: !853, line: 460, column: 67)
!8050 = !DILocation(line: 462, column: 3, scope: !8049)
!8051 = !DILocation(line: 463, column: 2, scope: !8049)
!8052 = !DILocation(line: 464, column: 2, scope: !8043)
!8053 = !DILocation(line: 488, column: 2, scope: !8043)
!8054 = !DILocation(line: 492, column: 2, scope: !8043)
!8055 = !DILocation(line: 496, column: 2, scope: !8043)
!8056 = !DILocation(line: 499, column: 2, scope: !8043)
!8057 = !DILocation(line: 500, column: 2, scope: !8043)
!8058 = !DILocation(line: 500, column: 9, scope: !8043)
!8059 = !DILocation(line: 500, column: 30, scope: !8043)
!8060 = distinct !{!8060, !8057, !8061}
!8061 = !DILocation(line: 502, column: 2, scope: !8043)
!8062 = !DILocation(line: 505, column: 1, scope: !8043)
!8063 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8019, file: !8019, line: 3224, type: !6074, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !789, retainedNodes: !8064)
!8064 = !{!8065}
!8065 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8063, file: !8019, line: 3224, type: !121)
!8066 = !DILocation(line: 0, scope: !8063)
!8067 = !DILocation(line: 3226, column: 3, scope: !8063)
!8068 = !DILocation(line: 3227, column: 1, scope: !8063)
!8069 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8019, file: !8019, line: 3188, type: !6074, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !789, retainedNodes: !8070)
!8070 = !{!8071}
!8071 = !DILocalVariable(name: "Source", arg: 1, scope: !8069, file: !8019, line: 3188, type: !121)
!8072 = !DILocation(line: 0, scope: !8069)
!8073 = !DILocation(line: 3190, column: 3, scope: !8069)
!8074 = !DILocation(line: 3191, column: 1, scope: !8069)
!8075 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8019, file: !8019, line: 3204, type: !6064, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !789, retainedNodes: !317)
!8076 = !DILocation(line: 3206, column: 21, scope: !8075)
!8077 = !DILocation(line: 3206, column: 3, scope: !8075)
!8078 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8019, file: !8019, line: 3240, type: !6074, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !789, retainedNodes: !8079)
!8079 = !{!8080}
!8080 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8078, file: !8019, line: 3240, type: !121)
!8081 = !DILocation(line: 0, scope: !8078)
!8082 = !DILocation(line: 3242, column: 3, scope: !8078)
!8083 = !DILocation(line: 3243, column: 1, scope: !8078)
!8084 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8019, file: !8019, line: 3256, type: !6074, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !789, retainedNodes: !8085)
!8085 = !{!8086}
!8086 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8084, file: !8019, line: 3256, type: !121)
!8087 = !DILocation(line: 0, scope: !8084)
!8088 = !DILocation(line: 3258, column: 3, scope: !8084)
!8089 = !DILocation(line: 3259, column: 1, scope: !8084)
!8090 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !853, file: !853, line: 409, type: !3213, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !789, retainedNodes: !317)
!8091 = !DILocation(line: 412, column: 6, scope: !8092)
!8092 = distinct !DILexicalBlock(scope: !8090, file: !853, line: 412, column: 6)
!8093 = !DILocation(line: 412, column: 27, scope: !8092)
!8094 = !DILocation(line: 412, column: 6, scope: !8090)
!8095 = !DILocation(line: 414, column: 3, scope: !8096)
!8096 = distinct !DILexicalBlock(scope: !8092, file: !853, line: 412, column: 33)
!8097 = !DILocation(line: 415, column: 3, scope: !8096)
!8098 = !DILocation(line: 415, column: 10, scope: !8096)
!8099 = !DILocation(line: 415, column: 31, scope: !8096)
!8100 = distinct !{!8100, !8097, !8101}
!8101 = !DILocation(line: 417, column: 3, scope: !8096)
!8102 = !DILocation(line: 421, column: 2, scope: !8090)
!8103 = !DILocation(line: 422, column: 2, scope: !8090)
!8104 = !DILocation(line: 422, column: 9, scope: !8090)
!8105 = !DILocation(line: 422, column: 34, scope: !8090)
!8106 = distinct !{!8106, !8103, !8107}
!8107 = !DILocation(line: 423, column: 2, scope: !8090)
!8108 = !DILocation(line: 424, column: 1, scope: !8090)
!8109 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !8019, file: !8019, line: 4195, type: !3213, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !789, retainedNodes: !317)
!8110 = !DILocation(line: 4197, column: 3, scope: !8109)
!8111 = !DILocation(line: 4198, column: 1, scope: !8109)
!8112 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8019, file: !8019, line: 4184, type: !3213, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !789, retainedNodes: !317)
!8113 = !DILocation(line: 4186, column: 3, scope: !8112)
!8114 = !DILocation(line: 4187, column: 1, scope: !8112)
!8115 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8019, file: !8019, line: 4205, type: !6064, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !789, retainedNodes: !317)
!8116 = !DILocation(line: 4207, column: 11, scope: !8115)
!8117 = !DILocation(line: 4207, column: 44, scope: !8115)
!8118 = !DILocation(line: 4207, column: 3, scope: !8115)
!8119 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8019, file: !8019, line: 3007, type: !6064, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !789, retainedNodes: !317)
!8120 = !DILocation(line: 3009, column: 11, scope: !8119)
!8121 = !DILocation(line: 3009, column: 44, scope: !8119)
!8122 = !DILocation(line: 3009, column: 3, scope: !8119)
!8123 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8019, file: !8019, line: 2987, type: !3213, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !789, retainedNodes: !317)
!8124 = !DILocation(line: 2989, column: 3, scope: !8123)
!8125 = !DILocation(line: 2990, column: 1, scope: !8123)
!8126 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8019, file: !8019, line: 2939, type: !3213, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !789, retainedNodes: !317)
!8127 = !DILocation(line: 2941, column: 3, scope: !8126)
!8128 = !DILocation(line: 2942, column: 1, scope: !8126)
!8129 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8019, file: !8019, line: 2949, type: !3213, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !789, retainedNodes: !317)
!8130 = !DILocation(line: 2951, column: 3, scope: !8129)
!8131 = !DILocation(line: 2952, column: 1, scope: !8129)
!8132 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8019, file: !8019, line: 2969, type: !6064, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !789, retainedNodes: !317)
!8133 = !DILocation(line: 2971, column: 11, scope: !8132)
!8134 = !DILocation(line: 2971, column: 44, scope: !8132)
!8135 = !DILocation(line: 2971, column: 3, scope: !8132)
!8136 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !8019, file: !8019, line: 3143, type: !3213, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !789, retainedNodes: !317)
!8137 = !DILocation(line: 3145, column: 3, scope: !8136)
!8138 = !DILocation(line: 3146, column: 1, scope: !8136)
!8139 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !8019, file: !8019, line: 3163, type: !6064, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !789, retainedNodes: !317)
!8140 = !DILocation(line: 3165, column: 11, scope: !8139)
!8141 = !DILocation(line: 3165, column: 46, scope: !8139)
!8142 = !DILocation(line: 3165, column: 3, scope: !8139)
!8143 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !8144, file: !8144, line: 40, type: !6064, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2938, retainedNodes: !317)
!8144 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8145 = !DILocation(line: 45, column: 3, scope: !8146)
!8146 = distinct !DILexicalBlock(scope: !8147, file: !8144, line: 44, column: 44)
!8147 = distinct !DILexicalBlock(scope: !8148, file: !8144, line: 44, column: 13)
!8148 = distinct !DILexicalBlock(scope: !8143, file: !8144, line: 42, column: 6)
!8149 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !8144, file: !8144, line: 56, type: !3213, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2938, retainedNodes: !317)
!8150 = !DILocation(line: 58, column: 2, scope: !8149)
!8151 = !DILocation(line: 62, column: 1, scope: !8149)
!8152 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8019, file: !8019, line: 4304, type: !8153, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2938, retainedNodes: !8155)
!8153 = !DISubroutineType(types: !8154)
!8154 = !{null, !121, !121, !121, !121}
!8155 = !{!8156, !8157, !8158, !8159}
!8156 = !DILocalVariable(name: "Source", arg: 1, scope: !8152, file: !8019, line: 4304, type: !121)
!8157 = !DILocalVariable(name: "PLLM", arg: 2, scope: !8152, file: !8019, line: 4304, type: !121)
!8158 = !DILocalVariable(name: "PLLN", arg: 3, scope: !8152, file: !8019, line: 4304, type: !121)
!8159 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !8152, file: !8019, line: 4304, type: !121)
!8160 = !DILocation(line: 0, scope: !8152)
!8161 = !DILocation(line: 4306, column: 3, scope: !8152)
!8162 = !DILocation(line: 4308, column: 3, scope: !8152)
!8163 = !DILocation(line: 4312, column: 1, scope: !8152)
!8164 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !8144, file: !8144, line: 69, type: !3213, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2938, retainedNodes: !317)
!8165 = !DILocation(line: 72, column: 2, scope: !8164)
!8166 = !DILocation(line: 73, column: 1, scope: !8164)
!8167 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !8168, file: !8168, line: 1185, type: !6074, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2938, retainedNodes: !8169)
!8168 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8169 = !{!8170, !8171}
!8170 = !DILocalVariable(name: "Periphs", arg: 1, scope: !8167, file: !8168, line: 1185, type: !121)
!8171 = !DILocalVariable(name: "tmpreg", scope: !8167, file: !8168, line: 1187, type: !120)
!8172 = !DILocation(line: 0, scope: !8167)
!8173 = !DILocation(line: 1187, column: 3, scope: !8167)
!8174 = !DILocation(line: 1187, column: 17, scope: !8167)
!8175 = !DILocation(line: 1188, column: 3, scope: !8167)
!8176 = !DILocation(line: 1190, column: 12, scope: !8167)
!8177 = !DILocation(line: 1190, column: 10, scope: !8167)
!8178 = !DILocation(line: 1191, column: 9, scope: !8167)
!8179 = !DILocation(line: 1192, column: 1, scope: !8167)
!8180 = distinct !DISubprogram(name: "uart_console_init", scope: !931, file: !931, line: 588, type: !968, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !927, retainedNodes: !8181)
!8181 = !{!8182}
!8182 = !DILocalVariable(name: "arg", arg: 1, scope: !8180, file: !931, line: 588, type: !947)
!8183 = !DILocation(line: 0, scope: !8180)
!8184 = !DILocation(line: 593, column: 7, scope: !8185)
!8185 = distinct !DILexicalBlock(scope: !8180, file: !931, line: 593, column: 6)
!8186 = !DILocation(line: 593, column: 6, scope: !8180)
!8187 = !DILocation(line: 597, column: 2, scope: !8180)
!8188 = !DILocation(line: 599, column: 2, scope: !8180)
!8189 = !DILocation(line: 600, column: 1, scope: !8180)
!8190 = distinct !DISubprogram(name: "device_is_ready", scope: !8191, file: !8191, line: 47, type: !8192, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !927, retainedNodes: !8194)
!8191 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/getline")
!8192 = !DISubroutineType(types: !8193)
!8193 = !{!157, !947}
!8194 = !{!8195}
!8195 = !DILocalVariable(name: "dev", arg: 1, scope: !8190, file: !8191, line: 47, type: !947)
!8196 = !DILocation(line: 0, scope: !8190)
!8197 = !DILocation(line: 55, column: 2, scope: !8198)
!8198 = distinct !DILexicalBlock(scope: !8190, file: !8191, line: 55, column: 2)
!8199 = !{i64 2154364697}
!8200 = !DILocation(line: 56, column: 9, scope: !8190)
!8201 = !DILocation(line: 56, column: 2, scope: !8190)
!8202 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !931, file: !931, line: 573, type: !3213, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !927, retainedNodes: !317)
!8203 = !DILocation(line: 576, column: 2, scope: !8202)
!8204 = !DILocation(line: 579, column: 2, scope: !8202)
!8205 = !DILocation(line: 581, column: 1, scope: !8202)
!8206 = distinct !DISubprogram(name: "console_out", scope: !931, file: !931, line: 77, type: !107, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !927, retainedNodes: !8207)
!8207 = !{!8208}
!8208 = !DILocalVariable(name: "c", arg: 1, scope: !8206, file: !931, line: 77, type: !103)
!8209 = !DILocation(line: 0, scope: !8206)
!8210 = !DILocation(line: 89, column: 11, scope: !8211)
!8211 = distinct !DILexicalBlock(scope: !8206, file: !931, line: 89, column: 6)
!8212 = !DILocation(line: 89, column: 6, scope: !8206)
!8213 = !DILocation(line: 90, column: 3, scope: !8214)
!8214 = distinct !DILexicalBlock(scope: !8211, file: !931, line: 89, column: 17)
!8215 = !DILocation(line: 91, column: 2, scope: !8214)
!8216 = !DILocation(line: 92, column: 34, scope: !8206)
!8217 = !DILocation(line: 92, column: 2, scope: !8206)
!8218 = !DILocation(line: 94, column: 2, scope: !8206)
!8219 = distinct !DISubprogram(name: "uart_poll_out", scope: !8220, file: !8220, line: 95, type: !964, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !927, retainedNodes: !8221)
!8220 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/getline")
!8221 = !{!8222, !8223}
!8222 = !DILocalVariable(name: "dev", arg: 1, scope: !8219, file: !8220, line: 95, type: !947)
!8223 = !DILocalVariable(name: "out_char", arg: 2, scope: !8219, file: !8220, line: 95, type: !155)
!8224 = !DILocation(line: 0, scope: !8219)
!8225 = !DILocation(line: 105, column: 2, scope: !8226)
!8226 = distinct !DILexicalBlock(scope: !8219, file: !8220, line: 105, column: 2)
!8227 = !{i64 2154447942}
!8228 = !DILocation(line: 106, column: 2, scope: !8219)
!8229 = !DILocation(line: 107, column: 1, scope: !8219)
!8230 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !209, file: !209, line: 574, type: !964, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !927, retainedNodes: !8231)
!8231 = !{!8232, !8233, !8234}
!8232 = !DILocalVariable(name: "dev", arg: 1, scope: !8230, file: !209, line: 574, type: !947)
!8233 = !DILocalVariable(name: "out_char", arg: 2, scope: !8230, file: !209, line: 575, type: !155)
!8234 = !DILocalVariable(name: "api", scope: !8230, file: !209, line: 577, type: !939)
!8235 = !DILocation(line: 0, scope: !8230)
!8236 = !DILocation(line: 578, column: 40, scope: !8230)
!8237 = !DILocation(line: 580, column: 7, scope: !8230)
!8238 = !DILocation(line: 580, column: 2, scope: !8230)
!8239 = !DILocation(line: 581, column: 1, scope: !8230)
!8240 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !8192, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !927, retainedNodes: !8241)
!8241 = !{!8242}
!8242 = !DILocalVariable(name: "dev", arg: 1, scope: !8240, file: !141, line: 730, type: !947)
!8243 = !DILocation(line: 0, scope: !8240)
!8244 = !DILocation(line: 732, column: 9, scope: !8240)
!8245 = !DILocation(line: 732, column: 2, scope: !8240)
!8246 = distinct !DISubprogram(name: "uart_register_input", scope: !931, file: !931, line: 549, type: !8247, scopeLine: 551, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !927, retainedNodes: !8249)
!8247 = !DISubroutineType(types: !8248)
!8248 = !{null, !1028, !1028, !1068}
!8249 = !{!8250, !8251, !8252}
!8250 = !DILocalVariable(name: "avail", arg: 1, scope: !8246, file: !931, line: 549, type: !1028)
!8251 = !DILocalVariable(name: "lines", arg: 2, scope: !8246, file: !931, line: 549, type: !1028)
!8252 = !DILocalVariable(name: "completion", arg: 3, scope: !8246, file: !931, line: 550, type: !1068)
!8253 = !DILocation(line: 0, scope: !8246)
!8254 = !DILocation(line: 552, column: 14, scope: !8246)
!8255 = !DILocation(line: 553, column: 14, scope: !8246)
!8256 = !DILocation(line: 554, column: 16, scope: !8246)
!8257 = !DILocation(line: 556, column: 2, scope: !8246)
!8258 = !DILocation(line: 557, column: 1, scope: !8246)
!8259 = distinct !DISubprogram(name: "console_input_init", scope: !931, file: !931, line: 532, type: !3213, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !927, retainedNodes: !8260)
!8260 = !{!8261}
!8261 = !DILocalVariable(name: "c", scope: !8259, file: !931, line: 534, type: !154)
!8262 = !DILocation(line: 534, column: 2, scope: !8259)
!8263 = !DILocation(line: 536, column: 2, scope: !8259)
!8264 = !DILocation(line: 537, column: 2, scope: !8259)
!8265 = !DILocation(line: 539, column: 2, scope: !8259)
!8266 = !DILocation(line: 542, column: 9, scope: !8259)
!8267 = !DILocation(line: 542, column: 2, scope: !8259)
!8268 = !DILocation(line: 0, scope: !8259)
!8269 = !DILocation(line: 543, column: 3, scope: !8270)
!8270 = distinct !DILexicalBlock(scope: !8259, file: !931, line: 542, column: 46)
!8271 = distinct !{!8271, !8267, !8272}
!8272 = !DILocation(line: 544, column: 2, scope: !8259)
!8273 = !DILocation(line: 546, column: 2, scope: !8259)
!8274 = !DILocation(line: 547, column: 1, scope: !8259)
!8275 = distinct !DISubprogram(name: "uart_irq_rx_disable", scope: !8220, file: !8220, line: 265, type: !998, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !927, retainedNodes: !8276)
!8276 = !{!8277}
!8277 = !DILocalVariable(name: "dev", arg: 1, scope: !8275, file: !8220, line: 265, type: !947)
!8278 = !DILocation(line: 0, scope: !8275)
!8279 = !DILocation(line: 274, column: 2, scope: !8280)
!8280 = distinct !DILexicalBlock(scope: !8275, file: !8220, line: 274, column: 2)
!8281 = !{i64 2154448418}
!8282 = !DILocation(line: 275, column: 2, scope: !8275)
!8283 = !DILocation(line: 276, column: 1, scope: !8275)
!8284 = distinct !DISubprogram(name: "uart_irq_tx_disable", scope: !8220, file: !8220, line: 217, type: !998, scopeLine: 218, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !927, retainedNodes: !8285)
!8285 = !{!8286}
!8286 = !DILocalVariable(name: "dev", arg: 1, scope: !8284, file: !8220, line: 217, type: !947)
!8287 = !DILocation(line: 0, scope: !8284)
!8288 = !DILocation(line: 226, column: 2, scope: !8289)
!8289 = distinct !DILexicalBlock(scope: !8284, file: !8220, line: 226, column: 2)
!8290 = !{i64 2154448282}
!8291 = !DILocation(line: 227, column: 2, scope: !8284)
!8292 = !DILocation(line: 228, column: 1, scope: !8284)
!8293 = distinct !DISubprogram(name: "uart_irq_callback_set", scope: !209, file: !209, line: 1190, type: !8294, scopeLine: 1192, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !927, retainedNodes: !8296)
!8294 = !DISubroutineType(types: !8295)
!8295 = !{null, !947, !1014}
!8296 = !{!8297, !8298}
!8297 = !DILocalVariable(name: "dev", arg: 1, scope: !8293, file: !209, line: 1190, type: !947)
!8298 = !DILocalVariable(name: "cb", arg: 2, scope: !8293, file: !209, line: 1191, type: !1014)
!8299 = !DILocation(line: 0, scope: !8293)
!8300 = !DILocation(line: 1193, column: 2, scope: !8293)
!8301 = !DILocation(line: 1194, column: 1, scope: !8293)
!8302 = distinct !DISubprogram(name: "uart_irq_rx_ready", scope: !209, file: !209, line: 1024, type: !968, scopeLine: 1025, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !927, retainedNodes: !8303)
!8303 = !{!8304, !8305}
!8304 = !DILocalVariable(name: "dev", arg: 1, scope: !8302, file: !209, line: 1024, type: !947)
!8305 = !DILocalVariable(name: "api", scope: !8302, file: !209, line: 1027, type: !939)
!8306 = !DILocation(line: 0, scope: !8302)
!8307 = !DILocation(line: 1028, column: 40, scope: !8302)
!8308 = !DILocation(line: 1030, column: 11, scope: !8309)
!8309 = distinct !DILexicalBlock(scope: !8302, file: !209, line: 1030, column: 6)
!8310 = !DILocation(line: 1030, column: 24, scope: !8309)
!8311 = !DILocation(line: 1030, column: 6, scope: !8302)
!8312 = !DILocation(line: 1033, column: 9, scope: !8302)
!8313 = !DILocation(line: 1033, column: 2, scope: !8302)
!8314 = !DILocation(line: 1038, column: 1, scope: !8302)
!8315 = distinct !DISubprogram(name: "uart_fifo_read", scope: !209, file: !209, line: 785, type: !994, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !927, retainedNodes: !8316)
!8316 = !{!8317, !8318, !8319, !8320}
!8317 = !DILocalVariable(name: "dev", arg: 1, scope: !8315, file: !209, line: 785, type: !947)
!8318 = !DILocalVariable(name: "rx_data", arg: 2, scope: !8315, file: !209, line: 785, type: !267)
!8319 = !DILocalVariable(name: "size", arg: 3, scope: !8315, file: !209, line: 786, type: !268)
!8320 = !DILocalVariable(name: "api", scope: !8315, file: !209, line: 789, type: !939)
!8321 = !DILocation(line: 0, scope: !8315)
!8322 = !DILocation(line: 790, column: 40, scope: !8315)
!8323 = !DILocation(line: 792, column: 11, scope: !8324)
!8324 = distinct !DILexicalBlock(scope: !8315, file: !209, line: 792, column: 6)
!8325 = !DILocation(line: 792, column: 21, scope: !8324)
!8326 = !DILocation(line: 792, column: 6, scope: !8315)
!8327 = !DILocation(line: 796, column: 9, scope: !8315)
!8328 = !DILocation(line: 796, column: 2, scope: !8315)
!8329 = !DILocation(line: 803, column: 1, scope: !8315)
!8330 = distinct !DISubprogram(name: "uart_irq_rx_enable", scope: !8220, file: !8220, line: 241, type: !998, scopeLine: 242, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !927, retainedNodes: !8331)
!8331 = !{!8332}
!8332 = !DILocalVariable(name: "dev", arg: 1, scope: !8330, file: !8220, line: 241, type: !947)
!8333 = !DILocation(line: 0, scope: !8330)
!8334 = !DILocation(line: 250, column: 2, scope: !8335)
!8335 = distinct !DILexicalBlock(scope: !8330, file: !8220, line: 250, column: 2)
!8336 = !{i64 2154448350}
!8337 = !DILocation(line: 251, column: 2, scope: !8330)
!8338 = !DILocation(line: 252, column: 1, scope: !8330)
!8339 = distinct !DISubprogram(name: "z_impl_uart_irq_rx_enable", scope: !209, file: !209, line: 934, type: !998, scopeLine: 935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !927, retainedNodes: !8340)
!8340 = !{!8341, !8342}
!8341 = !DILocalVariable(name: "dev", arg: 1, scope: !8339, file: !209, line: 934, type: !947)
!8342 = !DILocalVariable(name: "api", scope: !8339, file: !209, line: 937, type: !939)
!8343 = !DILocation(line: 0, scope: !8339)
!8344 = !DILocation(line: 938, column: 40, scope: !8339)
!8345 = !DILocation(line: 940, column: 11, scope: !8346)
!8346 = distinct !DILexicalBlock(scope: !8339, file: !209, line: 940, column: 6)
!8347 = !DILocation(line: 940, column: 25, scope: !8346)
!8348 = !DILocation(line: 940, column: 6, scope: !8339)
!8349 = !DILocation(line: 941, column: 3, scope: !8350)
!8350 = distinct !DILexicalBlock(scope: !8346, file: !209, line: 940, column: 34)
!8351 = !DILocation(line: 942, column: 2, scope: !8350)
!8352 = !DILocation(line: 946, column: 1, scope: !8339)
!8353 = !DILocation(line: 0, scope: !1076)
!8354 = !DILocation(line: 433, column: 9, scope: !1076)
!8355 = !DILocation(line: 433, column: 43, scope: !1076)
!8356 = !DILocation(line: 434, column: 9, scope: !1076)
!8357 = !DILocation(line: 433, column: 2, scope: !1076)
!8358 = !DILocation(line: 436, column: 3, scope: !1081)
!8359 = !DILocation(line: 439, column: 8, scope: !8360)
!8360 = distinct !DILexicalBlock(scope: !1081, file: !931, line: 439, column: 7)
!8361 = !DILocation(line: 439, column: 7, scope: !1081)
!8362 = distinct !{!8362, !8357, !8363}
!8363 = !DILocation(line: 529, column: 2, scope: !1076)
!8364 = !DILocation(line: 0, scope: !1081)
!8365 = !DILocation(line: 445, column: 8, scope: !1081)
!8366 = !DILocation(line: 446, column: 10, scope: !8367)
!8367 = distinct !DILexicalBlock(scope: !1081, file: !931, line: 446, column: 7)
!8368 = !DILocation(line: 446, column: 7, scope: !1081)
!8369 = !DILocation(line: 460, column: 8, scope: !1086)
!8370 = !DILocation(line: 460, column: 7, scope: !1081)
!8371 = !DILocation(line: 461, column: 10, scope: !1084)
!8372 = !DILocation(line: 0, scope: !1084)
!8373 = !DILocation(line: 461, column: 8, scope: !1085)
!8374 = !DILocation(line: 462, column: 9, scope: !8375)
!8375 = distinct !DILexicalBlock(scope: !1085, file: !931, line: 462, column: 8)
!8376 = !DILocation(line: 462, column: 8, scope: !1085)
!8377 = !DILocation(line: 477, column: 7, scope: !8378)
!8378 = distinct !DILexicalBlock(scope: !1081, file: !931, line: 477, column: 7)
!8379 = !DILocation(line: 477, column: 7, scope: !1081)
!8380 = !DILocation(line: 478, column: 16, scope: !8381)
!8381 = distinct !DILexicalBlock(scope: !8378, file: !931, line: 477, column: 46)
!8382 = !DILocation(line: 478, column: 22, scope: !8381)
!8383 = !DILocation(line: 478, column: 4, scope: !8381)
!8384 = !DILocation(line: 479, column: 4, scope: !8381)
!8385 = !DILocation(line: 483, column: 7, scope: !8386)
!8386 = distinct !DILexicalBlock(scope: !1081, file: !931, line: 483, column: 7)
!8387 = !DILocation(line: 483, column: 7, scope: !1081)
!8388 = !DILocation(line: 484, column: 13, scope: !8389)
!8389 = distinct !DILexicalBlock(scope: !8390, file: !931, line: 484, column: 8)
!8390 = distinct !DILexicalBlock(scope: !8386, file: !931, line: 483, column: 55)
!8391 = !DILocation(line: 484, column: 8, scope: !8390)
!8392 = !DILocation(line: 485, column: 5, scope: !8393)
!8393 = distinct !DILexicalBlock(scope: !8389, file: !931, line: 484, column: 26)
!8394 = !DILocation(line: 486, column: 5, scope: !8393)
!8395 = !DILocation(line: 487, column: 4, scope: !8393)
!8396 = !DILocation(line: 493, column: 16, scope: !8397)
!8397 = distinct !DILexicalBlock(scope: !1081, file: !931, line: 493, column: 7)
!8398 = !DILocation(line: 493, column: 8, scope: !8397)
!8399 = !DILocation(line: 493, column: 7, scope: !1081)
!8400 = !DILocation(line: 494, column: 4, scope: !8401)
!8401 = distinct !DILexicalBlock(scope: !8397, file: !931, line: 493, column: 23)
!8402 = !DILocation(line: 497, column: 9, scope: !8403)
!8403 = distinct !DILexicalBlock(scope: !8404, file: !931, line: 497, column: 9)
!8404 = distinct !DILexicalBlock(scope: !8401, file: !931, line: 494, column: 18)
!8405 = !DILocation(line: 497, column: 13, scope: !8403)
!8406 = !DILocation(line: 497, column: 9, scope: !8404)
!8407 = !DILocation(line: 498, column: 16, scope: !8408)
!8408 = distinct !DILexicalBlock(scope: !8403, file: !931, line: 497, column: 18)
!8409 = !DILocation(line: 498, column: 26, scope: !8408)
!8410 = !DILocation(line: 498, column: 34, scope: !8408)
!8411 = !DILocation(line: 498, column: 6, scope: !8408)
!8412 = !DILocation(line: 499, column: 5, scope: !8408)
!8413 = !DILocation(line: 502, column: 5, scope: !8404)
!8414 = !DILocation(line: 503, column: 5, scope: !8404)
!8415 = !DILocation(line: 505, column: 5, scope: !8404)
!8416 = !DILocation(line: 505, column: 15, scope: !8404)
!8417 = !DILocation(line: 505, column: 21, scope: !8404)
!8418 = !DILocation(line: 505, column: 19, scope: !8404)
!8419 = !DILocation(line: 505, column: 26, scope: !8404)
!8420 = !DILocation(line: 506, column: 5, scope: !8404)
!8421 = !DILocation(line: 507, column: 5, scope: !8404)
!8422 = !DILocation(line: 508, column: 9, scope: !8404)
!8423 = !DILocation(line: 509, column: 9, scope: !8404)
!8424 = !DILocation(line: 510, column: 5, scope: !8425)
!8425 = distinct !DILexicalBlock(scope: !8404, file: !931, line: 510, column: 5)
!8426 = !DILocation(line: 511, column: 9, scope: !8404)
!8427 = !DILocation(line: 512, column: 5, scope: !8404)
!8428 = !DILocation(line: 514, column: 9, scope: !8429)
!8429 = distinct !DILexicalBlock(scope: !8404, file: !931, line: 514, column: 9)
!8430 = !DILocation(line: 514, column: 23, scope: !8429)
!8431 = !DILocation(line: 515, column: 27, scope: !8432)
!8432 = distinct !DILexicalBlock(scope: !8429, file: !931, line: 514, column: 32)
!8433 = !DILocation(line: 515, column: 38, scope: !8432)
!8434 = !DILocation(line: 515, column: 13, scope: !8432)
!8435 = !DILocation(line: 515, column: 10, scope: !8432)
!8436 = !DILocation(line: 516, column: 5, scope: !8432)
!8437 = !DILocation(line: 526, column: 7, scope: !8438)
!8438 = distinct !DILexicalBlock(scope: !1081, file: !931, line: 526, column: 7)
!8439 = !DILocation(line: 526, column: 13, scope: !8438)
!8440 = !DILocation(line: 526, column: 11, scope: !8438)
!8441 = !DILocation(line: 526, column: 17, scope: !8438)
!8442 = !DILocation(line: 526, column: 7, scope: !1081)
!8443 = !DILocation(line: 527, column: 17, scope: !8444)
!8444 = distinct !DILexicalBlock(scope: !8438, file: !931, line: 526, column: 42)
!8445 = !DILocation(line: 527, column: 30, scope: !8444)
!8446 = !DILocation(line: 527, column: 4, scope: !8444)
!8447 = !DILocation(line: 528, column: 3, scope: !8444)
!8448 = !DILocation(line: 530, column: 1, scope: !1076)
!8449 = distinct !DISubprogram(name: "uart_irq_callback_user_data_set", scope: !209, file: !209, line: 1163, type: !1012, scopeLine: 1166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !927, retainedNodes: !8450)
!8450 = !{!8451, !8452, !8453, !8454}
!8451 = !DILocalVariable(name: "dev", arg: 1, scope: !8449, file: !209, line: 1163, type: !947)
!8452 = !DILocalVariable(name: "cb", arg: 2, scope: !8449, file: !209, line: 1164, type: !1014)
!8453 = !DILocalVariable(name: "user_data", arg: 3, scope: !8449, file: !209, line: 1165, type: !102)
!8454 = !DILocalVariable(name: "api", scope: !8449, file: !209, line: 1168, type: !939)
!8455 = !DILocation(line: 0, scope: !8449)
!8456 = !DILocation(line: 1169, column: 40, scope: !8449)
!8457 = !DILocation(line: 1171, column: 11, scope: !8458)
!8458 = distinct !DILexicalBlock(scope: !8449, file: !209, line: 1171, column: 6)
!8459 = !DILocation(line: 1171, column: 20, scope: !8458)
!8460 = !DILocation(line: 1171, column: 29, scope: !8458)
!8461 = !DILocation(line: 1171, column: 46, scope: !8458)
!8462 = !DILocation(line: 1171, column: 6, scope: !8449)
!8463 = !DILocation(line: 1172, column: 3, scope: !8464)
!8464 = distinct !DILexicalBlock(scope: !8458, file: !209, line: 1171, column: 56)
!8465 = !DILocation(line: 1173, column: 2, scope: !8464)
!8466 = !DILocation(line: 1179, column: 1, scope: !8449)
!8467 = distinct !DISubprogram(name: "uart_irq_update", scope: !8220, file: !8220, line: 360, type: !968, scopeLine: 361, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !927, retainedNodes: !8468)
!8468 = !{!8469}
!8469 = !DILocalVariable(name: "dev", arg: 1, scope: !8467, file: !8220, line: 360, type: !947)
!8470 = !DILocation(line: 0, scope: !8467)
!8471 = !DILocation(line: 368, column: 2, scope: !8472)
!8472 = distinct !DILexicalBlock(scope: !8467, file: !8220, line: 368, column: 2)
!8473 = !{i64 2154448690}
!8474 = !DILocation(line: 369, column: 9, scope: !8467)
!8475 = !DILocation(line: 369, column: 2, scope: !8467)
!8476 = distinct !DISubprogram(name: "uart_irq_is_pending", scope: !8220, file: !8220, line: 337, type: !968, scopeLine: 338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !927, retainedNodes: !8477)
!8477 = !{!8478}
!8478 = !DILocalVariable(name: "dev", arg: 1, scope: !8476, file: !8220, line: 337, type: !947)
!8479 = !DILocation(line: 0, scope: !8476)
!8480 = !DILocation(line: 345, column: 2, scope: !8481)
!8481 = distinct !DILexicalBlock(scope: !8476, file: !8220, line: 345, column: 2)
!8482 = !{i64 2154448622}
!8483 = !DILocation(line: 346, column: 9, scope: !8476)
!8484 = !DILocation(line: 346, column: 2, scope: !8476)
!8485 = distinct !DISubprogram(name: "read_uart", scope: !931, file: !931, line: 127, type: !8486, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !927, retainedNodes: !8488)
!8486 = !DISubroutineType(types: !8487)
!8487 = !{!103, !947, !267, !32}
!8488 = !{!8489, !8490, !8491, !8492}
!8489 = !DILocalVariable(name: "uart", arg: 1, scope: !8485, file: !931, line: 127, type: !947)
!8490 = !DILocalVariable(name: "buf", arg: 2, scope: !8485, file: !931, line: 127, type: !267)
!8491 = !DILocalVariable(name: "size", arg: 3, scope: !8485, file: !931, line: 128, type: !32)
!8492 = !DILocalVariable(name: "rx", scope: !8485, file: !931, line: 130, type: !103)
!8493 = !DILocation(line: 0, scope: !8485)
!8494 = !DILocation(line: 132, column: 7, scope: !8485)
!8495 = !DILocation(line: 133, column: 9, scope: !8496)
!8496 = distinct !DILexicalBlock(scope: !8485, file: !931, line: 133, column: 6)
!8497 = !DILocation(line: 133, column: 6, scope: !8485)
!8498 = !DILocation(line: 135, column: 3, scope: !8499)
!8499 = distinct !DILexicalBlock(scope: !8496, file: !931, line: 133, column: 14)
!8500 = !DILocation(line: 137, column: 3, scope: !8499)
!8501 = !DILocation(line: 141, column: 1, scope: !8485)
!8502 = distinct !DISubprogram(name: "k_queue_get", scope: !3649, file: !3649, line: 649, type: !8503, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !927, retainedNodes: !8510)
!8503 = !DISubroutineType(types: !8504)
!8504 = !{!102, !8505, !8506}
!8505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1032, size: 32)
!8506 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !201, line: 67, baseType: !8507)
!8507 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 65, size: 64, elements: !8508)
!8508 = !{!8509}
!8509 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !8507, file: !201, line: 66, baseType: !200, size: 64)
!8510 = !{!8511, !8512}
!8511 = !DILocalVariable(name: "queue", arg: 1, scope: !8502, file: !3649, line: 649, type: !8505)
!8512 = !DILocalVariable(name: "timeout", arg: 2, scope: !8502, file: !3649, line: 649, type: !8506)
!8513 = !DILocation(line: 0, scope: !8502)
!8514 = !DILocation(line: 658, column: 2, scope: !8515)
!8515 = distinct !DILexicalBlock(scope: !8502, file: !3649, line: 658, column: 2)
!8516 = !{i64 2154160176}
!8517 = !DILocation(line: 659, column: 9, scope: !8502)
!8518 = !DILocation(line: 659, column: 2, scope: !8502)
!8519 = distinct !DISubprogram(name: "atomic_test_bit", scope: !1096, file: !1096, line: 131, type: !8520, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !927, retainedNodes: !8524)
!8520 = !DISubroutineType(types: !8521)
!8521 = !{!157, !8522, !103}
!8522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8523, size: 32)
!8523 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1095)
!8524 = !{!8525, !8526, !8527}
!8525 = !DILocalVariable(name: "target", arg: 1, scope: !8519, file: !1096, line: 131, type: !8522)
!8526 = !DILocalVariable(name: "bit", arg: 2, scope: !8519, file: !1096, line: 131, type: !103)
!8527 = !DILocalVariable(name: "val", scope: !8519, file: !1096, line: 133, type: !8528)
!8528 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_val_t", file: !1096, line: 23, baseType: !1095)
!8529 = !DILocation(line: 0, scope: !8519)
!8530 = !DILocation(line: 133, column: 21, scope: !8519)
!8531 = !DILocation(line: 135, column: 27, scope: !8519)
!8532 = !DILocation(line: 135, column: 50, scope: !8519)
!8533 = !DILocation(line: 135, column: 2, scope: !8519)
!8534 = distinct !DISubprogram(name: "handle_ansi", scope: !931, file: !931, line: 232, type: !8535, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !927, retainedNodes: !8537)
!8535 = !DISubroutineType(types: !8536)
!8536 = !{null, !154, !344}
!8537 = !{!8538, !8539, !8540}
!8538 = !DILocalVariable(name: "byte", arg: 1, scope: !8534, file: !931, line: 232, type: !154)
!8539 = !DILocalVariable(name: "line", arg: 2, scope: !8534, file: !931, line: 232, type: !344)
!8540 = !DILabel(scope: !8534, name: "ansi_cmd", file: !931, line: 268)
!8541 = !DILocation(line: 0, scope: !8534)
!8542 = !DILocation(line: 234, column: 6, scope: !8543)
!8543 = distinct !DILexicalBlock(scope: !8534, file: !931, line: 234, column: 6)
!8544 = !DILocation(line: 234, column: 6, scope: !8534)
!8545 = !DILocation(line: 235, column: 16, scope: !8546)
!8546 = distinct !DILexicalBlock(scope: !8547, file: !931, line: 235, column: 7)
!8547 = distinct !DILexicalBlock(scope: !8543, file: !931, line: 234, column: 61)
!8548 = !DILocation(line: 235, column: 8, scope: !8546)
!8549 = !DILocation(line: 235, column: 7, scope: !8547)
!8550 = !DILocation(line: 236, column: 13, scope: !8551)
!8551 = distinct !DILexicalBlock(scope: !8546, file: !931, line: 235, column: 23)
!8552 = !DILocation(line: 237, column: 4, scope: !8551)
!8553 = !DILocation(line: 240, column: 3, scope: !8547)
!8554 = !DILocation(line: 241, column: 19, scope: !8547)
!8555 = !DILocation(line: 241, column: 12, scope: !8547)
!8556 = !DILocation(line: 242, column: 14, scope: !8547)
!8557 = !DILocation(line: 243, column: 3, scope: !8547)
!8558 = !DILocation(line: 246, column: 6, scope: !8559)
!8559 = distinct !DILexicalBlock(scope: !8534, file: !931, line: 246, column: 6)
!8560 = !DILocation(line: 246, column: 6, scope: !8534)
!8561 = !DILocation(line: 247, column: 15, scope: !8562)
!8562 = distinct !DILexicalBlock(scope: !8563, file: !931, line: 247, column: 7)
!8563 = distinct !DILexicalBlock(scope: !8559, file: !931, line: 246, column: 49)
!8564 = !DILocation(line: 247, column: 7, scope: !8562)
!8565 = !DILocation(line: 247, column: 7, scope: !8563)
!8566 = !DILocation(line: 248, column: 8, scope: !8567)
!8567 = distinct !DILexicalBlock(scope: !8568, file: !931, line: 248, column: 8)
!8568 = distinct !DILexicalBlock(scope: !8562, file: !931, line: 247, column: 22)
!8569 = !DILocation(line: 248, column: 8, scope: !8568)
!8570 = !DILocation(line: 249, column: 16, scope: !8571)
!8571 = distinct !DILexicalBlock(scope: !8567, file: !931, line: 248, column: 53)
!8572 = !DILocation(line: 250, column: 24, scope: !8571)
!8573 = !DILocation(line: 250, column: 16, scope: !8571)
!8574 = !DILocation(line: 251, column: 4, scope: !8571)
!8575 = !DILocation(line: 252, column: 14, scope: !8576)
!8576 = distinct !DILexicalBlock(scope: !8567, file: !931, line: 251, column: 11)
!8577 = !DILocation(line: 253, column: 22, scope: !8576)
!8578 = !DILocation(line: 253, column: 14, scope: !8576)
!8579 = !DILocation(line: 259, column: 12, scope: !8580)
!8580 = distinct !DILexicalBlock(scope: !8563, file: !931, line: 259, column: 7)
!8581 = !DILocation(line: 259, column: 19, scope: !8580)
!8582 = !DILocation(line: 260, column: 8, scope: !8580)
!8583 = !DILocation(line: 259, column: 7, scope: !8563)
!8584 = !DILocation(line: 264, column: 3, scope: !8563)
!8585 = !DILocation(line: 265, column: 3, scope: !8563)
!8586 = !DILocation(line: 266, column: 2, scope: !8563)
!8587 = !DILocation(line: 268, column: 1, scope: !8534)
!8588 = !DILocation(line: 269, column: 2, scope: !8534)
!8589 = !DILocation(line: 271, column: 7, scope: !8590)
!8590 = distinct !DILexicalBlock(scope: !8591, file: !931, line: 271, column: 7)
!8591 = distinct !DILexicalBlock(scope: !8534, file: !931, line: 269, column: 16)
!8592 = !DILocation(line: 271, column: 18, scope: !8590)
!8593 = !DILocation(line: 271, column: 16, scope: !8590)
!8594 = !DILocation(line: 271, column: 7, scope: !8591)
!8595 = !DILocation(line: 275, column: 7, scope: !8591)
!8596 = !DILocation(line: 276, column: 7, scope: !8591)
!8597 = !DILocation(line: 277, column: 3, scope: !8591)
!8598 = !DILocation(line: 278, column: 3, scope: !8591)
!8599 = !DILocation(line: 280, column: 7, scope: !8600)
!8600 = distinct !DILexicalBlock(scope: !8591, file: !931, line: 280, column: 7)
!8601 = !DILocation(line: 280, column: 18, scope: !8600)
!8602 = !DILocation(line: 280, column: 16, scope: !8600)
!8603 = !DILocation(line: 280, column: 7, scope: !8591)
!8604 = !DILocation(line: 284, column: 7, scope: !8591)
!8605 = !DILocation(line: 285, column: 7, scope: !8591)
!8606 = !DILocation(line: 286, column: 3, scope: !8591)
!8607 = !DILocation(line: 287, column: 3, scope: !8591)
!8608 = !DILocation(line: 289, column: 8, scope: !8609)
!8609 = distinct !DILexicalBlock(scope: !8591, file: !931, line: 289, column: 7)
!8610 = !DILocation(line: 289, column: 7, scope: !8591)
!8611 = !DILocation(line: 293, column: 19, scope: !8591)
!8612 = !DILocation(line: 293, column: 3, scope: !8591)
!8613 = !DILocation(line: 294, column: 10, scope: !8591)
!8614 = !DILocation(line: 294, column: 7, scope: !8591)
!8615 = !DILocation(line: 295, column: 7, scope: !8591)
!8616 = !DILocation(line: 296, column: 3, scope: !8591)
!8617 = !DILocation(line: 298, column: 8, scope: !8618)
!8618 = distinct !DILexicalBlock(scope: !8591, file: !931, line: 298, column: 7)
!8619 = !DILocation(line: 298, column: 7, scope: !8591)
!8620 = !DILocation(line: 302, column: 18, scope: !8591)
!8621 = !DILocation(line: 302, column: 3, scope: !8591)
!8622 = !DILocation(line: 303, column: 10, scope: !8591)
!8623 = !DILocation(line: 303, column: 7, scope: !8591)
!8624 = !DILocation(line: 304, column: 7, scope: !8591)
!8625 = !DILocation(line: 305, column: 3, scope: !8591)
!8626 = !DILocation(line: 307, column: 8, scope: !8627)
!8627 = distinct !DILexicalBlock(scope: !8591, file: !931, line: 307, column: 7)
!8628 = !DILocation(line: 307, column: 7, scope: !8591)
!8629 = !DILocation(line: 311, column: 3, scope: !8591)
!8630 = !DILocation(line: 312, column: 18, scope: !8591)
!8631 = !DILocation(line: 312, column: 13, scope: !8591)
!8632 = !DILocation(line: 312, column: 24, scope: !8591)
!8633 = !DILocation(line: 312, column: 3, scope: !8591)
!8634 = !DILocation(line: 313, column: 3, scope: !8591)
!8635 = !DILocation(line: 318, column: 2, scope: !8534)
!8636 = !DILocation(line: 319, column: 1, scope: !8534)
!8637 = distinct !DISubprogram(name: "atomic_test_and_clear_bit", scope: !1096, file: !1096, line: 152, type: !8638, scopeLine: 153, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !927, retainedNodes: !8641)
!8638 = !DISubroutineType(types: !8639)
!8639 = !{!157, !8640, !103}
!8640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1095, size: 32)
!8641 = !{!8642, !8643, !8644, !8645}
!8642 = !DILocalVariable(name: "target", arg: 1, scope: !8637, file: !1096, line: 152, type: !8640)
!8643 = !DILocalVariable(name: "bit", arg: 2, scope: !8637, file: !1096, line: 152, type: !103)
!8644 = !DILocalVariable(name: "mask", scope: !8637, file: !1096, line: 154, type: !8528)
!8645 = !DILocalVariable(name: "old", scope: !8637, file: !1096, line: 155, type: !8528)
!8646 = !DILocation(line: 0, scope: !8637)
!8647 = !DILocation(line: 154, column: 22, scope: !8637)
!8648 = !DILocation(line: 157, column: 45, scope: !8637)
!8649 = !DILocation(line: 157, column: 8, scope: !8637)
!8650 = !DILocation(line: 159, column: 14, scope: !8637)
!8651 = !DILocation(line: 159, column: 22, scope: !8637)
!8652 = !DILocation(line: 159, column: 2, scope: !8637)
!8653 = distinct !DISubprogram(name: "atomic_set_bit", scope: !1096, file: !1096, line: 217, type: !8654, scopeLine: 218, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !927, retainedNodes: !8656)
!8654 = !DISubroutineType(types: !8655)
!8655 = !{null, !8640, !103}
!8656 = !{!8657, !8658, !8659}
!8657 = !DILocalVariable(name: "target", arg: 1, scope: !8653, file: !1096, line: 217, type: !8640)
!8658 = !DILocalVariable(name: "bit", arg: 2, scope: !8653, file: !1096, line: 217, type: !103)
!8659 = !DILocalVariable(name: "mask", scope: !8653, file: !1096, line: 219, type: !8528)
!8660 = !DILocation(line: 0, scope: !8653)
!8661 = !DILocation(line: 219, column: 22, scope: !8653)
!8662 = !DILocation(line: 221, column: 8, scope: !8653)
!8663 = !DILocation(line: 222, column: 1, scope: !8653)
!8664 = distinct !DISubprogram(name: "isprint", scope: !4966, file: !4966, line: 37, type: !107, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !927, retainedNodes: !8665)
!8665 = !{!8666}
!8666 = !DILocalVariable(name: "c", arg: 1, scope: !8664, file: !4966, line: 37, type: !103)
!8667 = !DILocation(line: 0, scope: !8664)
!8668 = !DILocation(line: 39, column: 38, scope: !8664)
!8669 = !DILocation(line: 39, column: 2, scope: !8664)
!8670 = distinct !DISubprogram(name: "del_char", scope: !931, file: !931, line: 191, type: !8671, scopeLine: 192, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !927, retainedNodes: !8673)
!8671 = !DISubroutineType(types: !8672)
!8672 = !{null, !344, !154}
!8673 = !{!8674, !8675}
!8674 = !DILocalVariable(name: "pos", arg: 1, scope: !8670, file: !931, line: 191, type: !344)
!8675 = !DILocalVariable(name: "end", arg: 2, scope: !8670, file: !931, line: 191, type: !154)
!8676 = !DILocation(line: 0, scope: !8670)
!8677 = !DILocation(line: 193, column: 2, scope: !8670)
!8678 = !DILocation(line: 195, column: 10, scope: !8679)
!8679 = distinct !DILexicalBlock(scope: !8670, file: !931, line: 195, column: 6)
!8680 = !DILocation(line: 195, column: 6, scope: !8670)
!8681 = !DILocation(line: 196, column: 3, scope: !8682)
!8682 = distinct !DILexicalBlock(scope: !8679, file: !931, line: 195, column: 17)
!8683 = !DILocation(line: 197, column: 3, scope: !8682)
!8684 = !DILocation(line: 198, column: 3, scope: !8682)
!8685 = !DILocation(line: 201, column: 2, scope: !8670)
!8686 = !DILocation(line: 203, column: 2, scope: !8670)
!8687 = !DILocation(line: 203, column: 12, scope: !8670)
!8688 = !DILocation(line: 204, column: 16, scope: !8689)
!8689 = distinct !DILexicalBlock(scope: !8670, file: !931, line: 203, column: 20)
!8690 = !DILocation(line: 204, column: 10, scope: !8689)
!8691 = !DILocation(line: 204, column: 8, scope: !8689)
!8692 = !DILocation(line: 205, column: 3, scope: !8689)
!8693 = !DILocation(line: 203, column: 15, scope: !8670)
!8694 = distinct !{!8694, !8686, !8695}
!8695 = !DILocation(line: 206, column: 2, scope: !8670)
!8696 = !DILocation(line: 208, column: 2, scope: !8670)
!8697 = !DILocation(line: 211, column: 2, scope: !8670)
!8698 = !DILocation(line: 212, column: 1, scope: !8670)
!8699 = distinct !DISubprogram(name: "insert_char", scope: !931, file: !931, line: 163, type: !8700, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !927, retainedNodes: !8702)
!8700 = !DISubroutineType(types: !8701)
!8701 = !{null, !344, !146, !154}
!8702 = !{!8703, !8704, !8705, !8706}
!8703 = !DILocalVariable(name: "pos", arg: 1, scope: !8699, file: !931, line: 163, type: !344)
!8704 = !DILocalVariable(name: "c", arg: 2, scope: !8699, file: !931, line: 163, type: !146)
!8705 = !DILocalVariable(name: "end", arg: 3, scope: !8699, file: !931, line: 163, type: !154)
!8706 = !DILocalVariable(name: "tmp", scope: !8699, file: !931, line: 165, type: !146)
!8707 = !DILocation(line: 0, scope: !8699)
!8708 = !DILocation(line: 168, column: 2, scope: !8699)
!8709 = !DILocation(line: 170, column: 10, scope: !8710)
!8710 = distinct !DILexicalBlock(scope: !8699, file: !931, line: 170, column: 6)
!8711 = !DILocation(line: 170, column: 6, scope: !8699)
!8712 = !DILocation(line: 171, column: 8, scope: !8713)
!8713 = distinct !DILexicalBlock(scope: !8710, file: !931, line: 170, column: 17)
!8714 = !DILocation(line: 172, column: 3, scope: !8713)
!8715 = !DILocation(line: 175, column: 8, scope: !8699)
!8716 = !DILocation(line: 176, column: 11, scope: !8699)
!8717 = !DILocation(line: 178, column: 2, scope: !8699)
!8718 = !DILocation(line: 180, column: 2, scope: !8699)
!8719 = !DILocation(line: 180, column: 12, scope: !8699)
!8720 = !DILocation(line: 181, column: 3, scope: !8721)
!8721 = distinct !DILexicalBlock(scope: !8699, file: !931, line: 180, column: 20)
!8722 = !DILocation(line: 182, column: 7, scope: !8721)
!8723 = !DILocation(line: 183, column: 12, scope: !8721)
!8724 = !DILocation(line: 180, column: 15, scope: !8699)
!8725 = distinct !{!8725, !8718, !8726}
!8726 = !DILocation(line: 185, column: 2, scope: !8699)
!8727 = !DILocation(line: 188, column: 2, scope: !8699)
!8728 = !DILocation(line: 189, column: 1, scope: !8699)
!8729 = distinct !DISubprogram(name: "cursor_save", scope: !931, file: !931, line: 153, type: !3213, scopeLine: 154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !927, retainedNodes: !317)
!8730 = !DILocation(line: 155, column: 2, scope: !8729)
!8731 = !DILocation(line: 156, column: 1, scope: !8729)
!8732 = distinct !DISubprogram(name: "cursor_restore", scope: !931, file: !931, line: 158, type: !3213, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !927, retainedNodes: !317)
!8733 = !DILocation(line: 160, column: 2, scope: !8732)
!8734 = !DILocation(line: 161, column: 1, scope: !8732)
!8735 = distinct !DISubprogram(name: "atomic_or", scope: !8736, file: !8736, line: 279, type: !8737, scopeLine: 280, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !927, retainedNodes: !8739)
!8736 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic_builtin.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8737 = !DISubroutineType(types: !8738)
!8738 = !{!8528, !8640, !8528}
!8739 = !{!8740, !8741}
!8740 = !DILocalVariable(name: "target", arg: 1, scope: !8735, file: !8736, line: 279, type: !8640)
!8741 = !DILocalVariable(name: "value", arg: 2, scope: !8735, file: !8736, line: 279, type: !8528)
!8742 = !DILocation(line: 0, scope: !8735)
!8743 = !DILocation(line: 281, column: 9, scope: !8735)
!8744 = !DILocation(line: 281, column: 2, scope: !8735)
!8745 = distinct !DISubprogram(name: "atomic_and", scope: !8736, file: !8736, line: 319, type: !8737, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !927, retainedNodes: !8746)
!8746 = !{!8747, !8748}
!8747 = !DILocalVariable(name: "target", arg: 1, scope: !8745, file: !8736, line: 319, type: !8640)
!8748 = !DILocalVariable(name: "value", arg: 2, scope: !8745, file: !8736, line: 319, type: !8528)
!8749 = !DILocation(line: 0, scope: !8745)
!8750 = !DILocation(line: 321, column: 9, scope: !8745)
!8751 = !DILocation(line: 321, column: 2, scope: !8745)
!8752 = distinct !DISubprogram(name: "isdigit", scope: !4966, file: !4966, line: 43, type: !107, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !927, retainedNodes: !8753)
!8753 = !{!8754}
!8754 = !DILocalVariable(name: "a", arg: 1, scope: !8752, file: !4966, line: 43, type: !103)
!8755 = !DILocation(line: 0, scope: !8752)
!8756 = !DILocation(line: 45, column: 29, scope: !8752)
!8757 = !DILocation(line: 45, column: 45, scope: !8752)
!8758 = !DILocation(line: 45, column: 2, scope: !8752)
!8759 = distinct !DISubprogram(name: "atomic_test_and_set_bit", scope: !1096, file: !1096, line: 176, type: !8638, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !927, retainedNodes: !8760)
!8760 = !{!8761, !8762, !8763, !8764}
!8761 = !DILocalVariable(name: "target", arg: 1, scope: !8759, file: !1096, line: 176, type: !8640)
!8762 = !DILocalVariable(name: "bit", arg: 2, scope: !8759, file: !1096, line: 176, type: !103)
!8763 = !DILocalVariable(name: "mask", scope: !8759, file: !1096, line: 178, type: !8528)
!8764 = !DILocalVariable(name: "old", scope: !8759, file: !1096, line: 179, type: !8528)
!8765 = !DILocation(line: 0, scope: !8759)
!8766 = !DILocation(line: 181, column: 8, scope: !8759)
!8767 = !DILocation(line: 183, column: 14, scope: !8759)
!8768 = !DILocation(line: 183, column: 22, scope: !8759)
!8769 = !DILocation(line: 183, column: 2, scope: !8759)
!8770 = distinct !DISubprogram(name: "atomic_clear_bit", scope: !1096, file: !1096, line: 198, type: !8654, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !927, retainedNodes: !8771)
!8771 = !{!8772, !8773, !8774}
!8772 = !DILocalVariable(name: "target", arg: 1, scope: !8770, file: !1096, line: 198, type: !8640)
!8773 = !DILocalVariable(name: "bit", arg: 2, scope: !8770, file: !1096, line: 198, type: !103)
!8774 = !DILocalVariable(name: "mask", scope: !8770, file: !1096, line: 200, type: !8528)
!8775 = !DILocation(line: 0, scope: !8770)
!8776 = !DILocation(line: 200, column: 22, scope: !8770)
!8777 = !DILocation(line: 202, column: 45, scope: !8770)
!8778 = !DILocation(line: 202, column: 8, scope: !8770)
!8779 = !DILocation(line: 203, column: 1, scope: !8770)
!8780 = distinct !DISubprogram(name: "cursor_backward", scope: !931, file: !931, line: 148, type: !5779, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !927, retainedNodes: !8781)
!8781 = !{!8782}
!8782 = !DILocalVariable(name: "count", arg: 1, scope: !8780, file: !931, line: 148, type: !32)
!8783 = !DILocation(line: 0, scope: !8780)
!8784 = !DILocation(line: 150, column: 2, scope: !8780)
!8785 = !DILocation(line: 151, column: 1, scope: !8780)
!8786 = distinct !DISubprogram(name: "cursor_forward", scope: !931, file: !931, line: 143, type: !5779, scopeLine: 144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !927, retainedNodes: !8787)
!8787 = !{!8788}
!8788 = !DILocalVariable(name: "count", arg: 1, scope: !8786, file: !931, line: 143, type: !32)
!8789 = !DILocation(line: 0, scope: !8786)
!8790 = !DILocation(line: 145, column: 2, scope: !8786)
!8791 = !DILocation(line: 146, column: 1, scope: !8786)
!8792 = distinct !DISubprogram(name: "atomic_get", scope: !8736, file: !8736, line: 159, type: !8793, scopeLine: 160, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !927, retainedNodes: !8795)
!8793 = !DISubroutineType(types: !8794)
!8794 = !{!8528, !8522}
!8795 = !{!8796}
!8796 = !DILocalVariable(name: "target", arg: 1, scope: !8792, file: !8736, line: 159, type: !8522)
!8797 = !DILocation(line: 0, scope: !8792)
!8798 = !DILocation(line: 161, column: 9, scope: !8792)
!8799 = !DILocation(line: 161, column: 2, scope: !8792)
!8800 = distinct !DISubprogram(name: "z_impl_uart_irq_is_pending", scope: !209, file: !209, line: 1093, type: !968, scopeLine: 1094, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !927, retainedNodes: !8801)
!8801 = !{!8802, !8803}
!8802 = !DILocalVariable(name: "dev", arg: 1, scope: !8800, file: !209, line: 1093, type: !947)
!8803 = !DILocalVariable(name: "api", scope: !8800, file: !209, line: 1096, type: !939)
!8804 = !DILocation(line: 0, scope: !8800)
!8805 = !DILocation(line: 1097, column: 40, scope: !8800)
!8806 = !DILocation(line: 1099, column: 11, scope: !8807)
!8807 = distinct !DILexicalBlock(scope: !8800, file: !209, line: 1099, column: 6)
!8808 = !DILocation(line: 1099, column: 26, scope: !8807)
!8809 = !DILocation(line: 1099, column: 6, scope: !8800)
!8810 = !DILocation(line: 1102, column: 9, scope: !8800)
!8811 = !DILocation(line: 1102, column: 2, scope: !8800)
!8812 = !DILocation(line: 1107, column: 1, scope: !8800)
!8813 = distinct !DISubprogram(name: "z_impl_uart_irq_update", scope: !209, file: !209, line: 1136, type: !968, scopeLine: 1137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !927, retainedNodes: !8814)
!8814 = !{!8815, !8816}
!8815 = !DILocalVariable(name: "dev", arg: 1, scope: !8813, file: !209, line: 1136, type: !947)
!8816 = !DILocalVariable(name: "api", scope: !8813, file: !209, line: 1139, type: !939)
!8817 = !DILocation(line: 0, scope: !8813)
!8818 = !DILocation(line: 1140, column: 40, scope: !8813)
!8819 = !DILocation(line: 1142, column: 11, scope: !8820)
!8820 = distinct !DILexicalBlock(scope: !8813, file: !209, line: 1142, column: 6)
!8821 = !DILocation(line: 1142, column: 22, scope: !8820)
!8822 = !DILocation(line: 1142, column: 6, scope: !8813)
!8823 = !DILocation(line: 1145, column: 9, scope: !8813)
!8824 = !DILocation(line: 1145, column: 2, scope: !8813)
!8825 = !DILocation(line: 1150, column: 1, scope: !8813)
!8826 = distinct !DISubprogram(name: "z_impl_uart_irq_tx_disable", scope: !209, file: !209, line: 878, type: !998, scopeLine: 879, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !927, retainedNodes: !8827)
!8827 = !{!8828, !8829}
!8828 = !DILocalVariable(name: "dev", arg: 1, scope: !8826, file: !209, line: 878, type: !947)
!8829 = !DILocalVariable(name: "api", scope: !8826, file: !209, line: 881, type: !939)
!8830 = !DILocation(line: 0, scope: !8826)
!8831 = !DILocation(line: 882, column: 40, scope: !8826)
!8832 = !DILocation(line: 884, column: 11, scope: !8833)
!8833 = distinct !DILexicalBlock(scope: !8826, file: !209, line: 884, column: 6)
!8834 = !DILocation(line: 884, column: 26, scope: !8833)
!8835 = !DILocation(line: 884, column: 6, scope: !8826)
!8836 = !DILocation(line: 885, column: 3, scope: !8837)
!8837 = distinct !DILexicalBlock(scope: !8833, file: !209, line: 884, column: 35)
!8838 = !DILocation(line: 886, column: 2, scope: !8837)
!8839 = !DILocation(line: 890, column: 1, scope: !8826)
!8840 = distinct !DISubprogram(name: "z_impl_uart_irq_rx_disable", scope: !209, file: !209, line: 955, type: !998, scopeLine: 956, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !927, retainedNodes: !8841)
!8841 = !{!8842, !8843}
!8842 = !DILocalVariable(name: "dev", arg: 1, scope: !8840, file: !209, line: 955, type: !947)
!8843 = !DILocalVariable(name: "api", scope: !8840, file: !209, line: 958, type: !939)
!8844 = !DILocation(line: 0, scope: !8840)
!8845 = !DILocation(line: 959, column: 40, scope: !8840)
!8846 = !DILocation(line: 961, column: 11, scope: !8847)
!8847 = distinct !DILexicalBlock(scope: !8840, file: !209, line: 961, column: 6)
!8848 = !DILocation(line: 961, column: 26, scope: !8847)
!8849 = !DILocation(line: 961, column: 6, scope: !8840)
!8850 = !DILocation(line: 962, column: 3, scope: !8851)
!8851 = distinct !DILexicalBlock(scope: !8847, file: !209, line: 961, column: 35)
!8852 = !DILocation(line: 963, column: 2, scope: !8851)
!8853 = !DILocation(line: 967, column: 1, scope: !8840)
!8854 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1276, file: !1276, line: 523, type: !1134, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !8855)
!8855 = !{!8856, !8857, !8858, !8859, !8860}
!8856 = !DILocalVariable(name: "dev", arg: 1, scope: !8854, file: !1276, line: 523, type: !1136)
!8857 = !DILocalVariable(name: "pin", arg: 2, scope: !8854, file: !1276, line: 524, type: !1151)
!8858 = !DILocalVariable(name: "flags", arg: 3, scope: !8854, file: !1276, line: 524, type: !1152)
!8859 = !DILocalVariable(name: "err", scope: !8854, file: !1276, line: 526, type: !103)
!8860 = !DILocalVariable(name: "pincfg", scope: !8854, file: !1276, line: 527, type: !103)
!8861 = !DILocation(line: 0, scope: !8854)
!8862 = !DILocation(line: 527, column: 2, scope: !8854)
!8863 = !DILocation(line: 532, column: 8, scope: !8854)
!8864 = !DILocation(line: 533, column: 10, scope: !8865)
!8865 = distinct !DILexicalBlock(scope: !8854, file: !1276, line: 533, column: 6)
!8866 = !DILocation(line: 533, column: 6, scope: !8854)
!8867 = !DILocation(line: 543, column: 13, scope: !8868)
!8868 = distinct !DILexicalBlock(scope: !8854, file: !1276, line: 543, column: 6)
!8869 = !DILocation(line: 543, column: 28, scope: !8868)
!8870 = !DILocation(line: 543, column: 6, scope: !8854)
!8871 = !DILocation(line: 544, column: 14, scope: !8872)
!8872 = distinct !DILexicalBlock(scope: !8873, file: !1276, line: 544, column: 7)
!8873 = distinct !DILexicalBlock(scope: !8868, file: !1276, line: 543, column: 34)
!8874 = !DILocation(line: 544, column: 39, scope: !8872)
!8875 = !DILocation(line: 544, column: 7, scope: !8873)
!8876 = !DILocation(line: 545, column: 38, scope: !8877)
!8877 = distinct !DILexicalBlock(scope: !8872, file: !1276, line: 544, column: 45)
!8878 = !DILocation(line: 545, column: 4, scope: !8877)
!8879 = !DILocation(line: 546, column: 3, scope: !8877)
!8880 = !DILocation(line: 546, column: 21, scope: !8881)
!8881 = distinct !DILexicalBlock(scope: !8872, file: !1276, line: 546, column: 14)
!8882 = !DILocation(line: 546, column: 45, scope: !8881)
!8883 = !DILocation(line: 546, column: 14, scope: !8872)
!8884 = !DILocation(line: 547, column: 40, scope: !8885)
!8885 = distinct !DILexicalBlock(scope: !8881, file: !1276, line: 546, column: 51)
!8886 = !DILocation(line: 547, column: 4, scope: !8885)
!8887 = !DILocation(line: 548, column: 3, scope: !8885)
!8888 = !DILocation(line: 551, column: 32, scope: !8854)
!8889 = !DILocation(line: 551, column: 37, scope: !8854)
!8890 = !DILocation(line: 551, column: 2, scope: !8854)
!8891 = !DILocation(line: 554, column: 6, scope: !8854)
!8892 = !DILocation(line: 562, column: 1, scope: !8854)
!8893 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1276, file: !1276, line: 410, type: !8894, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !8896)
!8894 = !DISubroutineType(types: !8895)
!8895 = !{!103, !1136, !849}
!8896 = !{!8897, !8898, !8899, !8901}
!8897 = !DILocalVariable(name: "dev", arg: 1, scope: !8893, file: !1276, line: 410, type: !1136)
!8898 = !DILocalVariable(name: "value", arg: 2, scope: !8893, file: !1276, line: 410, type: !849)
!8899 = !DILocalVariable(name: "cfg", scope: !8893, file: !1276, line: 412, type: !8900)
!8900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1388, size: 32)
!8901 = !DILocalVariable(name: "gpio", scope: !8893, file: !1276, line: 413, type: !1209)
!8902 = !DILocation(line: 0, scope: !8893)
!8903 = !DILocation(line: 412, column: 45, scope: !8893)
!8904 = !DILocation(line: 413, column: 44, scope: !8893)
!8905 = !DILocation(line: 415, column: 11, scope: !8893)
!8906 = !DILocation(line: 415, column: 9, scope: !8893)
!8907 = !DILocation(line: 417, column: 2, scope: !8893)
!8908 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1276, file: !1276, line: 420, type: !1161, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !8909)
!8909 = !{!8910, !8911, !8912, !8913, !8914, !8915}
!8910 = !DILocalVariable(name: "dev", arg: 1, scope: !8908, file: !1276, line: 420, type: !1136)
!8911 = !DILocalVariable(name: "mask", arg: 2, scope: !8908, file: !1276, line: 421, type: !1163)
!8912 = !DILocalVariable(name: "value", arg: 3, scope: !8908, file: !1276, line: 422, type: !1158)
!8913 = !DILocalVariable(name: "cfg", scope: !8908, file: !1276, line: 424, type: !8900)
!8914 = !DILocalVariable(name: "gpio", scope: !8908, file: !1276, line: 425, type: !1209)
!8915 = !DILocalVariable(name: "port_value", scope: !8908, file: !1276, line: 426, type: !121)
!8916 = !DILocation(line: 0, scope: !8908)
!8917 = !DILocation(line: 424, column: 45, scope: !8908)
!8918 = !DILocation(line: 425, column: 44, scope: !8908)
!8919 = !DILocation(line: 430, column: 15, scope: !8908)
!8920 = !DILocation(line: 431, column: 46, scope: !8908)
!8921 = !DILocation(line: 431, column: 44, scope: !8908)
!8922 = !DILocation(line: 431, column: 61, scope: !8908)
!8923 = !DILocation(line: 431, column: 53, scope: !8908)
!8924 = !DILocation(line: 431, column: 2, scope: !8908)
!8925 = !DILocation(line: 435, column: 2, scope: !8908)
!8926 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1276, file: !1276, line: 438, type: !1166, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !8927)
!8927 = !{!8928, !8929, !8930, !8931}
!8928 = !DILocalVariable(name: "dev", arg: 1, scope: !8926, file: !1276, line: 438, type: !1136)
!8929 = !DILocalVariable(name: "pins", arg: 2, scope: !8926, file: !1276, line: 439, type: !1163)
!8930 = !DILocalVariable(name: "cfg", scope: !8926, file: !1276, line: 441, type: !8900)
!8931 = !DILocalVariable(name: "gpio", scope: !8926, file: !1276, line: 442, type: !1209)
!8932 = !DILocation(line: 0, scope: !8926)
!8933 = !DILocation(line: 441, column: 45, scope: !8926)
!8934 = !DILocation(line: 442, column: 44, scope: !8926)
!8935 = !DILocation(line: 448, column: 2, scope: !8926)
!8936 = !DILocation(line: 450, column: 2, scope: !8926)
!8937 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1276, file: !1276, line: 453, type: !1166, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !8938)
!8938 = !{!8939, !8940, !8941, !8942}
!8939 = !DILocalVariable(name: "dev", arg: 1, scope: !8937, file: !1276, line: 453, type: !1136)
!8940 = !DILocalVariable(name: "pins", arg: 2, scope: !8937, file: !1276, line: 454, type: !1163)
!8941 = !DILocalVariable(name: "cfg", scope: !8937, file: !1276, line: 456, type: !8900)
!8942 = !DILocalVariable(name: "gpio", scope: !8937, file: !1276, line: 457, type: !1209)
!8943 = !DILocation(line: 0, scope: !8937)
!8944 = !DILocation(line: 456, column: 45, scope: !8937)
!8945 = !DILocation(line: 457, column: 44, scope: !8937)
!8946 = !DILocation(line: 467, column: 2, scope: !8937)
!8947 = !DILocation(line: 470, column: 2, scope: !8937)
!8948 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1276, file: !1276, line: 473, type: !1166, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !8949)
!8949 = !{!8950, !8951, !8952, !8953}
!8950 = !DILocalVariable(name: "dev", arg: 1, scope: !8948, file: !1276, line: 473, type: !1136)
!8951 = !DILocalVariable(name: "pins", arg: 2, scope: !8948, file: !1276, line: 474, type: !1163)
!8952 = !DILocalVariable(name: "cfg", scope: !8948, file: !1276, line: 476, type: !8900)
!8953 = !DILocalVariable(name: "gpio", scope: !8948, file: !1276, line: 477, type: !1209)
!8954 = !DILocation(line: 0, scope: !8948)
!8955 = !DILocation(line: 476, column: 45, scope: !8948)
!8956 = !DILocation(line: 477, column: 44, scope: !8948)
!8957 = !DILocation(line: 484, column: 2, scope: !8948)
!8958 = !DILocation(line: 487, column: 2, scope: !8948)
!8959 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1276, file: !1276, line: 594, type: !1172, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !8960)
!8960 = !{!8961, !8962, !8963, !8964, !8965, !8966, !8968, !8969, !8970}
!8961 = !DILocalVariable(name: "dev", arg: 1, scope: !8959, file: !1276, line: 594, type: !1136)
!8962 = !DILocalVariable(name: "pin", arg: 2, scope: !8959, file: !1276, line: 595, type: !1151)
!8963 = !DILocalVariable(name: "mode", arg: 3, scope: !8959, file: !1276, line: 596, type: !1110)
!8964 = !DILocalVariable(name: "trig", arg: 4, scope: !8959, file: !1276, line: 597, type: !1116)
!8965 = !DILocalVariable(name: "cfg", scope: !8959, file: !1276, line: 599, type: !8900)
!8966 = !DILocalVariable(name: "data", scope: !8959, file: !1276, line: 600, type: !8967)
!8967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1342, size: 32)
!8968 = !DILocalVariable(name: "edge", scope: !8959, file: !1276, line: 601, type: !103)
!8969 = !DILocalVariable(name: "err", scope: !8959, file: !1276, line: 602, type: !103)
!8970 = !DILabel(scope: !8959, name: "exit", file: !1276, line: 643)
!8971 = !DILocation(line: 0, scope: !8959)
!8972 = !DILocation(line: 599, column: 45, scope: !8959)
!8973 = !DILocation(line: 604, column: 6, scope: !8959)
!8974 = !DILocation(line: 605, column: 34, scope: !8975)
!8975 = distinct !DILexicalBlock(scope: !8976, file: !1276, line: 605, column: 7)
!8976 = distinct !DILexicalBlock(scope: !8977, file: !1276, line: 604, column: 38)
!8977 = distinct !DILexicalBlock(scope: !8959, file: !1276, line: 604, column: 6)
!8978 = !DILocation(line: 605, column: 7, scope: !8975)
!8979 = !DILocation(line: 605, column: 47, scope: !8975)
!8980 = !DILocation(line: 605, column: 39, scope: !8975)
!8981 = !DILocation(line: 605, column: 7, scope: !8976)
!8982 = !DILocation(line: 606, column: 4, scope: !8983)
!8983 = distinct !DILexicalBlock(scope: !8975, file: !1276, line: 605, column: 53)
!8984 = !DILocation(line: 607, column: 4, scope: !8983)
!8985 = !DILocation(line: 608, column: 4, scope: !8983)
!8986 = !DILocation(line: 609, column: 3, scope: !8983)
!8987 = !DILocation(line: 600, column: 38, scope: !8959)
!8988 = !DILocation(line: 620, column: 30, scope: !8989)
!8989 = distinct !DILexicalBlock(scope: !8959, file: !1276, line: 620, column: 6)
!8990 = !DILocation(line: 620, column: 6, scope: !8989)
!8991 = !DILocation(line: 620, column: 57, scope: !8989)
!8992 = !DILocation(line: 620, column: 6, scope: !8959)
!8993 = !DILocation(line: 625, column: 29, scope: !8959)
!8994 = !DILocation(line: 625, column: 2, scope: !8959)
!8995 = !DILocation(line: 627, column: 2, scope: !8959)
!8996 = !DILocation(line: 630, column: 3, scope: !8997)
!8997 = distinct !DILexicalBlock(scope: !8959, file: !1276, line: 627, column: 16)
!8998 = !DILocation(line: 633, column: 3, scope: !8997)
!8999 = !DILocation(line: 636, column: 3, scope: !8997)
!9000 = !DILocation(line: 639, column: 2, scope: !8959)
!9001 = !DILocation(line: 641, column: 2, scope: !8959)
!9002 = !DILocation(line: 643, column: 1, scope: !8959)
!9003 = !DILocation(line: 644, column: 2, scope: !8959)
!9004 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1276, file: !1276, line: 647, type: !1176, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !9005)
!9005 = !{!9006, !9007, !9008, !9009}
!9006 = !DILocalVariable(name: "dev", arg: 1, scope: !9004, file: !1276, line: 647, type: !1136)
!9007 = !DILocalVariable(name: "callback", arg: 2, scope: !9004, file: !1276, line: 648, type: !1178)
!9008 = !DILocalVariable(name: "set", arg: 3, scope: !9004, file: !1276, line: 649, type: !157)
!9009 = !DILocalVariable(name: "data", scope: !9004, file: !1276, line: 651, type: !8967)
!9010 = !DILocation(line: 0, scope: !9004)
!9011 = !DILocation(line: 651, column: 38, scope: !9004)
!9012 = !DILocation(line: 653, column: 37, scope: !9004)
!9013 = !DILocation(line: 653, column: 9, scope: !9004)
!9014 = !DILocation(line: 653, column: 2, scope: !9004)
!9015 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !9016, file: !9016, line: 38, type: !9017, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !9020)
!9016 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9017 = !DISubroutineType(types: !9018)
!9018 = !{!103, !9019, !1178, !157}
!9019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1348, size: 32)
!9020 = !{!9021, !9022, !9023}
!9021 = !DILocalVariable(name: "callbacks", arg: 1, scope: !9015, file: !9016, line: 38, type: !9019)
!9022 = !DILocalVariable(name: "callback", arg: 2, scope: !9015, file: !9016, line: 39, type: !1178)
!9023 = !DILocalVariable(name: "set", arg: 3, scope: !9015, file: !9016, line: 40, type: !157)
!9024 = !DILocation(line: 0, scope: !9015)
!9025 = !DILocation(line: 45, column: 7, scope: !9026)
!9026 = distinct !DILexicalBlock(scope: !9015, file: !9016, line: 45, column: 6)
!9027 = !DILocation(line: 45, column: 6, scope: !9015)
!9028 = !DILocation(line: 46, column: 56, scope: !9029)
!9029 = distinct !DILexicalBlock(scope: !9030, file: !9016, line: 46, column: 7)
!9030 = distinct !DILexicalBlock(scope: !9026, file: !9016, line: 45, column: 38)
!9031 = !DILocation(line: 46, column: 8, scope: !9029)
!9032 = !DILocation(line: 46, column: 7, scope: !9030)
!9033 = !DILocation(line: 51, column: 13, scope: !9026)
!9034 = !DILocation(line: 56, column: 43, scope: !9035)
!9035 = distinct !DILexicalBlock(scope: !9036, file: !9016, line: 55, column: 11)
!9036 = distinct !DILexicalBlock(scope: !9015, file: !9016, line: 55, column: 6)
!9037 = !DILocation(line: 56, column: 3, scope: !9035)
!9038 = !DILocation(line: 57, column: 2, scope: !9035)
!9039 = !DILocation(line: 60, column: 1, scope: !9015)
!9040 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1183, file: !1183, line: 261, type: !9041, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !9043)
!9041 = !DISubroutineType(types: !9042)
!9042 = !{!157, !9019}
!9043 = !{!9044}
!9044 = !DILocalVariable(name: "list", arg: 1, scope: !9040, file: !1183, line: 261, type: !9019)
!9045 = !DILocation(line: 0, scope: !9040)
!9046 = !DILocation(line: 261, column: 1, scope: !9040)
!9047 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1183, file: !1183, line: 417, type: !9048, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !9050)
!9048 = !DISubroutineType(types: !9049)
!9049 = !{!157, !9019, !1352}
!9050 = !{!9051, !9052, !9053, !9054}
!9051 = !DILocalVariable(name: "list", arg: 1, scope: !9047, file: !1183, line: 417, type: !9019)
!9052 = !DILocalVariable(name: "node", arg: 2, scope: !9047, file: !1183, line: 417, type: !1352)
!9053 = !DILocalVariable(name: "prev", scope: !9047, file: !1183, line: 417, type: !1352)
!9054 = !DILocalVariable(name: "test", scope: !9047, file: !1183, line: 417, type: !1352)
!9055 = !DILocation(line: 0, scope: !9047)
!9056 = !DILocation(line: 417, column: 1, scope: !9057)
!9057 = distinct !DILexicalBlock(scope: !9047, file: !1183, line: 417, column: 1)
!9058 = !DILocation(line: 417, column: 1, scope: !9059)
!9059 = distinct !DILexicalBlock(scope: !9057, file: !1183, line: 417, column: 1)
!9060 = !DILocation(line: 417, column: 1, scope: !9061)
!9061 = distinct !DILexicalBlock(scope: !9062, file: !1183, line: 417, column: 1)
!9062 = distinct !DILexicalBlock(scope: !9059, file: !1183, line: 417, column: 1)
!9063 = !DILocation(line: 417, column: 1, scope: !9062)
!9064 = distinct !{!9064, !9056, !9056}
!9065 = !DILocation(line: 417, column: 1, scope: !9066)
!9066 = distinct !DILexicalBlock(scope: !9061, file: !1183, line: 417, column: 1)
!9067 = !DILocation(line: 417, column: 1, scope: !9047)
!9068 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1183, file: !1183, line: 298, type: !9069, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !9071)
!9069 = !DISubroutineType(types: !9070)
!9070 = !{null, !9019, !1352}
!9071 = !{!9072, !9073}
!9072 = !DILocalVariable(name: "list", arg: 1, scope: !9068, file: !1183, line: 298, type: !9019)
!9073 = !DILocalVariable(name: "node", arg: 2, scope: !9068, file: !1183, line: 298, type: !1352)
!9074 = !DILocation(line: 0, scope: !9068)
!9075 = !DILocation(line: 298, column: 1, scope: !9068)
!9076 = !DILocation(line: 298, column: 1, scope: !9077)
!9077 = distinct !DILexicalBlock(scope: !9068, file: !1183, line: 298, column: 1)
!9078 = !DILocation(line: 298, column: 1, scope: !9079)
!9079 = distinct !DILexicalBlock(scope: !9077, file: !1183, line: 298, column: 1)
!9080 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1183, file: !1183, line: 231, type: !9081, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !9083)
!9081 = !DISubroutineType(types: !9082)
!9082 = !{!1352, !9019}
!9083 = !{!9084}
!9084 = !DILocalVariable(name: "list", arg: 1, scope: !9080, file: !1183, line: 231, type: !9019)
!9085 = !DILocation(line: 0, scope: !9080)
!9086 = !DILocation(line: 233, column: 15, scope: !9080)
!9087 = !DILocation(line: 233, column: 2, scope: !9080)
!9088 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1183, file: !1183, line: 209, type: !9089, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !9091)
!9089 = !DISubroutineType(types: !9090)
!9090 = !{null, !1352, !1352}
!9091 = !{!9092, !9093}
!9092 = !DILocalVariable(name: "parent", arg: 1, scope: !9088, file: !1183, line: 209, type: !1352)
!9093 = !DILocalVariable(name: "child", arg: 2, scope: !9088, file: !1183, line: 209, type: !1352)
!9094 = !DILocation(line: 0, scope: !9088)
!9095 = !DILocation(line: 211, column: 10, scope: !9088)
!9096 = !DILocation(line: 211, column: 15, scope: !9088)
!9097 = !DILocation(line: 212, column: 1, scope: !9088)
!9098 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1183, file: !1183, line: 214, type: !9069, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !9099)
!9099 = !{!9100, !9101}
!9100 = !DILocalVariable(name: "list", arg: 1, scope: !9098, file: !1183, line: 214, type: !9019)
!9101 = !DILocalVariable(name: "node", arg: 2, scope: !9098, file: !1183, line: 214, type: !1352)
!9102 = !DILocation(line: 0, scope: !9098)
!9103 = !DILocation(line: 216, column: 8, scope: !9098)
!9104 = !DILocation(line: 216, column: 13, scope: !9098)
!9105 = !DILocation(line: 217, column: 1, scope: !9098)
!9106 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1183, file: !1183, line: 243, type: !9081, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !9107)
!9107 = !{!9108}
!9108 = !DILocalVariable(name: "list", arg: 1, scope: !9106, file: !1183, line: 243, type: !9019)
!9109 = !DILocation(line: 0, scope: !9106)
!9110 = !DILocation(line: 245, column: 15, scope: !9106)
!9111 = !DILocation(line: 245, column: 2, scope: !9106)
!9112 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1183, file: !1183, line: 219, type: !9069, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !9113)
!9113 = !{!9114, !9115}
!9114 = !DILocalVariable(name: "list", arg: 1, scope: !9112, file: !1183, line: 219, type: !9019)
!9115 = !DILocalVariable(name: "node", arg: 2, scope: !9112, file: !1183, line: 219, type: !1352)
!9116 = !DILocation(line: 0, scope: !9112)
!9117 = !DILocation(line: 221, column: 8, scope: !9112)
!9118 = !DILocation(line: 221, column: 13, scope: !9112)
!9119 = !DILocation(line: 222, column: 1, scope: !9112)
!9120 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1183, file: !1183, line: 401, type: !9121, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !9123)
!9121 = !DISubroutineType(types: !9122)
!9122 = !{null, !9019, !1352, !1352}
!9123 = !{!9124, !9125, !9126}
!9124 = !DILocalVariable(name: "list", arg: 1, scope: !9120, file: !1183, line: 401, type: !9019)
!9125 = !DILocalVariable(name: "prev_node", arg: 2, scope: !9120, file: !1183, line: 401, type: !1352)
!9126 = !DILocalVariable(name: "node", arg: 3, scope: !9120, file: !1183, line: 401, type: !1352)
!9127 = !DILocation(line: 0, scope: !9120)
!9128 = !DILocation(line: 401, column: 1, scope: !9129)
!9129 = distinct !DILexicalBlock(scope: !9120, file: !1183, line: 401, column: 1)
!9130 = !DILocation(line: 0, scope: !9129)
!9131 = !DILocation(line: 401, column: 1, scope: !9120)
!9132 = !DILocation(line: 401, column: 1, scope: !9133)
!9133 = distinct !DILexicalBlock(scope: !9129, file: !1183, line: 401, column: 1)
!9134 = !DILocation(line: 401, column: 1, scope: !9135)
!9135 = distinct !DILexicalBlock(scope: !9133, file: !1183, line: 401, column: 1)
!9136 = !DILocation(line: 401, column: 1, scope: !9137)
!9137 = distinct !DILexicalBlock(scope: !9135, file: !1183, line: 401, column: 1)
!9138 = !DILocation(line: 401, column: 1, scope: !9139)
!9139 = distinct !DILexicalBlock(scope: !9129, file: !1183, line: 401, column: 1)
!9140 = !DILocation(line: 401, column: 1, scope: !9141)
!9141 = distinct !DILexicalBlock(scope: !9139, file: !1183, line: 401, column: 1)
!9142 = !DILocation(line: 401, column: 1, scope: !9143)
!9143 = distinct !DILexicalBlock(scope: !9141, file: !1183, line: 401, column: 1)
!9144 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1183, file: !1183, line: 285, type: !9145, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !9147)
!9145 = !DISubroutineType(types: !9146)
!9146 = !{!1352, !1352}
!9147 = !{!9148}
!9148 = !DILocalVariable(name: "node", arg: 1, scope: !9144, file: !1183, line: 285, type: !1352)
!9149 = !DILocation(line: 0, scope: !9144)
!9150 = !DILocation(line: 285, column: 1, scope: !9144)
!9151 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1183, file: !1183, line: 274, type: !9145, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !9152)
!9152 = !{!9153}
!9153 = !DILocalVariable(name: "node", arg: 1, scope: !9151, file: !1183, line: 274, type: !1352)
!9154 = !DILocation(line: 0, scope: !9151)
!9155 = !DILocation(line: 274, column: 1, scope: !9151)
!9156 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1183, file: !1183, line: 204, type: !9145, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !9157)
!9157 = !{!9158}
!9158 = !DILocalVariable(name: "node", arg: 1, scope: !9156, file: !1183, line: 204, type: !1352)
!9159 = !DILocation(line: 0, scope: !9156)
!9160 = !DILocation(line: 206, column: 15, scope: !9156)
!9161 = !DILocation(line: 206, column: 2, scope: !9156)
!9162 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1276, file: !1276, line: 342, type: !107, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !9163)
!9163 = !{!9164, !9165, !9166}
!9164 = !DILocalVariable(name: "pin", arg: 1, scope: !9162, file: !1276, line: 342, type: !103)
!9165 = !DILocalVariable(name: "line", scope: !9162, file: !1276, line: 344, type: !121)
!9166 = !DILocalVariable(name: "port", scope: !9162, file: !1276, line: 345, type: !103)
!9167 = !DILocation(line: 0, scope: !9162)
!9168 = !DILocation(line: 344, column: 18, scope: !9162)
!9169 = !{i32 983040, i32 0}
!9170 = !DILocation(line: 356, column: 9, scope: !9162)
!9171 = !DILocation(line: 370, column: 2, scope: !9162)
!9172 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1276, file: !1276, line: 37, type: !707, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !9173)
!9173 = !{!9174, !9175, !9176}
!9174 = !DILocalVariable(name: "line", arg: 1, scope: !9172, file: !1276, line: 37, type: !103)
!9175 = !DILocalVariable(name: "arg", arg: 2, scope: !9172, file: !1276, line: 37, type: !102)
!9176 = !DILocalVariable(name: "data", scope: !9172, file: !1276, line: 39, type: !8967)
!9177 = !DILocation(line: 0, scope: !9172)
!9178 = !DILocation(line: 41, column: 29, scope: !9172)
!9179 = !DILocation(line: 41, column: 39, scope: !9172)
!9180 = !DILocation(line: 41, column: 44, scope: !9172)
!9181 = !DILocation(line: 41, column: 2, scope: !9172)
!9182 = !DILocation(line: 42, column: 1, scope: !9172)
!9183 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1276, file: !1276, line: 376, type: !9184, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !9186)
!9184 = !DISubroutineType(types: !9185)
!9185 = !{!103, !103, !103}
!9186 = !{!9187, !9188, !9189, !9191, !9192}
!9187 = !DILocalVariable(name: "port", arg: 1, scope: !9183, file: !1276, line: 376, type: !103)
!9188 = !DILocalVariable(name: "pin", arg: 2, scope: !9183, file: !1276, line: 376, type: !103)
!9189 = !DILocalVariable(name: "clk", scope: !9183, file: !1276, line: 386, type: !9190)
!9190 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1136)
!9191 = !DILocalVariable(name: "pclken", scope: !9183, file: !1276, line: 387, type: !1395)
!9192 = !DILocalVariable(name: "ret", scope: !9183, file: !1276, line: 396, type: !103)
!9193 = !DILocation(line: 0, scope: !9183)
!9194 = !DILocation(line: 387, column: 2, scope: !9183)
!9195 = !DILocation(line: 387, column: 22, scope: !9183)
!9196 = !DILocation(line: 399, column: 8, scope: !9183)
!9197 = !DILocation(line: 400, column: 10, scope: !9198)
!9198 = distinct !DILexicalBlock(scope: !9183, file: !1276, line: 400, column: 6)
!9199 = !DILocation(line: 400, column: 6, scope: !9183)
!9200 = !DILocation(line: 405, column: 2, scope: !9183)
!9201 = !DILocation(line: 407, column: 2, scope: !9183)
!9202 = !DILocation(line: 408, column: 1, scope: !9183)
!9203 = distinct !DISubprogram(name: "clock_control_on", scope: !798, file: !798, line: 123, type: !1241, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !9204)
!9204 = !{!9205, !9206, !9207}
!9205 = !DILocalVariable(name: "dev", arg: 1, scope: !9203, file: !798, line: 123, type: !1136)
!9206 = !DILocalVariable(name: "sys", arg: 2, scope: !9203, file: !798, line: 124, type: !893)
!9207 = !DILocalVariable(name: "api", scope: !9203, file: !798, line: 126, type: !1234)
!9208 = !DILocation(line: 0, scope: !9203)
!9209 = !DILocation(line: 127, column: 49, scope: !9203)
!9210 = !DILocation(line: 129, column: 14, scope: !9203)
!9211 = !DILocation(line: 129, column: 9, scope: !9203)
!9212 = !DILocation(line: 129, column: 2, scope: !9203)
!9213 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1276, file: !1276, line: 311, type: !7776, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !9214)
!9214 = !{!9215, !9216, !9217}
!9215 = !DILocalVariable(name: "port", arg: 1, scope: !9213, file: !1276, line: 311, type: !103)
!9216 = !DILocalVariable(name: "pin", arg: 2, scope: !9213, file: !1276, line: 311, type: !103)
!9217 = !DILocalVariable(name: "line", scope: !9213, file: !1276, line: 313, type: !121)
!9218 = !DILocation(line: 0, scope: !9213)
!9219 = !DILocation(line: 313, column: 18, scope: !9213)
!9220 = !DILocation(line: 337, column: 2, scope: !9213)
!9221 = !DILocation(line: 340, column: 1, scope: !9213)
!9222 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1276, file: !1276, line: 295, type: !9223, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !9225)
!9223 = !DISubroutineType(types: !9224)
!9224 = !{!121, !103}
!9225 = !{!9226}
!9226 = !DILocalVariable(name: "pin", arg: 1, scope: !9222, file: !1276, line: 295, type: !103)
!9227 = !DILocation(line: 0, scope: !9222)
!9228 = !DILocation(line: 307, column: 46, scope: !9222)
!9229 = !DILocation(line: 307, column: 27, scope: !9222)
!9230 = !DILocation(line: 307, column: 32, scope: !9222)
!9231 = !DILocation(line: 307, column: 14, scope: !9222)
!9232 = !DILocation(line: 307, column: 39, scope: !9222)
!9233 = !DILocation(line: 307, column: 2, scope: !9222)
!9234 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !5789, file: !5789, line: 671, type: !9235, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !9237)
!9235 = !DISubroutineType(types: !9236)
!9236 = !{null, !121, !121}
!9237 = !{!9238, !9239}
!9238 = !DILocalVariable(name: "Port", arg: 1, scope: !9234, file: !5789, line: 671, type: !121)
!9239 = !DILocalVariable(name: "Line", arg: 2, scope: !9234, file: !5789, line: 671, type: !121)
!9240 = !DILocation(line: 0, scope: !9234)
!9241 = !DILocation(line: 673, column: 3, scope: !9234)
!9242 = !DILocalVariable(name: "value", arg: 1, scope: !9243, file: !5983, line: 373, type: !121)
!9243 = distinct !DISubprogram(name: "__RBIT", scope: !5983, file: !5983, line: 373, type: !6990, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !9244)
!9244 = !{!9242, !9245}
!9245 = !DILocalVariable(name: "result", scope: !9243, file: !5983, line: 375, type: !121)
!9246 = !DILocation(line: 0, scope: !9243, inlinedAt: !9247)
!9247 = distinct !DILocation(line: 673, column: 3, scope: !9234)
!9248 = !DILocation(line: 380, column: 4, scope: !9243, inlinedAt: !9247)
!9249 = !{i64 2917565}
!9250 = !DILocalVariable(name: "value", arg: 1, scope: !9251, file: !5983, line: 403, type: !121)
!9251 = distinct !DISubprogram(name: "__CLZ", scope: !5983, file: !5983, line: 403, type: !9252, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !9254)
!9252 = !DISubroutineType(types: !9253)
!9253 = !{!154, !121}
!9254 = !{!9250}
!9255 = !DILocation(line: 0, scope: !9251, inlinedAt: !9256)
!9256 = distinct !DILocation(line: 673, column: 3, scope: !9234)
!9257 = !DILocation(line: 414, column: 7, scope: !9251, inlinedAt: !9256)
!9258 = !DILocation(line: 674, column: 1, scope: !9234)
!9259 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !9016, file: !9016, line: 69, type: !9260, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !9262)
!9260 = !DISubroutineType(types: !9261)
!9261 = !{null, !9019, !1136, !121}
!9262 = !{!9263, !9264, !9265, !9266, !9267}
!9263 = !DILocalVariable(name: "list", arg: 1, scope: !9259, file: !9016, line: 69, type: !9019)
!9264 = !DILocalVariable(name: "port", arg: 2, scope: !9259, file: !9016, line: 70, type: !1136)
!9265 = !DILocalVariable(name: "pins", arg: 3, scope: !9259, file: !9016, line: 71, type: !121)
!9266 = !DILocalVariable(name: "cb", scope: !9259, file: !9016, line: 73, type: !1178)
!9267 = !DILocalVariable(name: "tmp", scope: !9259, file: !9016, line: 73, type: !1178)
!9268 = !DILocation(line: 0, scope: !9259)
!9269 = !DILocation(line: 75, column: 2, scope: !9270)
!9270 = distinct !DILexicalBlock(scope: !9259, file: !9016, line: 75, column: 2)
!9271 = !DILocation(line: 0, scope: !9270)
!9272 = !DILocation(line: 76, column: 11, scope: !9273)
!9273 = distinct !DILexicalBlock(scope: !9274, file: !9016, line: 76, column: 7)
!9274 = distinct !DILexicalBlock(scope: !9275, file: !9016, line: 75, column: 57)
!9275 = distinct !DILexicalBlock(scope: !9270, file: !9016, line: 75, column: 2)
!9276 = !DILocation(line: 76, column: 20, scope: !9273)
!9277 = !DILocation(line: 76, column: 7, scope: !9274)
!9278 = !DILocation(line: 78, column: 8, scope: !9279)
!9279 = distinct !DILexicalBlock(scope: !9273, file: !9016, line: 76, column: 28)
!9280 = !DILocation(line: 78, column: 4, scope: !9279)
!9281 = !DILocation(line: 79, column: 3, scope: !9279)
!9282 = !DILocation(line: 75, column: 2, scope: !9275)
!9283 = !DILocation(line: 81, column: 1, scope: !9259)
!9284 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !5789, file: !5789, line: 710, type: !6990, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !9285)
!9285 = !{!9286}
!9286 = !DILocalVariable(name: "Line", arg: 1, scope: !9284, file: !5789, line: 710, type: !121)
!9287 = !DILocation(line: 0, scope: !9284)
!9288 = !DILocation(line: 712, column: 21, scope: !9284)
!9289 = !DILocation(line: 0, scope: !9243, inlinedAt: !9290)
!9290 = distinct !DILocation(line: 712, column: 76, scope: !9284)
!9291 = !DILocation(line: 380, column: 4, scope: !9243, inlinedAt: !9290)
!9292 = !DILocation(line: 0, scope: !9251, inlinedAt: !9293)
!9293 = distinct !DILocation(line: 712, column: 76, scope: !9284)
!9294 = !DILocation(line: 414, column: 7, scope: !9251, inlinedAt: !9293)
!9295 = !DILocation(line: 712, column: 73, scope: !9284)
!9296 = !DILocation(line: 712, column: 3, scope: !9284)
!9297 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !9298, file: !9298, line: 910, type: !9299, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !9301)
!9298 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9299 = !DISubroutineType(types: !9300)
!9300 = !{null, !1209, !121}
!9301 = !{!9302, !9303}
!9302 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9297, file: !9298, line: 910, type: !1209)
!9303 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9297, file: !9298, line: 910, type: !121)
!9304 = !DILocation(line: 0, scope: !9297)
!9305 = !DILocation(line: 912, column: 3, scope: !9297)
!9306 = !DILocation(line: 913, column: 1, scope: !9297)
!9307 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !9298, file: !9298, line: 823, type: !9308, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !9310)
!9308 = !DISubroutineType(types: !9309)
!9309 = !{!121, !1209}
!9310 = !{!9311}
!9311 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9307, file: !9298, line: 823, type: !1209)
!9312 = !DILocation(line: 0, scope: !9307)
!9313 = !DILocation(line: 825, column: 21, scope: !9307)
!9314 = !DILocation(line: 825, column: 3, scope: !9307)
!9315 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !9298, file: !9298, line: 812, type: !9299, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !9316)
!9316 = !{!9317, !9318}
!9317 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9315, file: !9298, line: 812, type: !1209)
!9318 = !DILocalVariable(name: "PortValue", arg: 2, scope: !9315, file: !9298, line: 812, type: !121)
!9319 = !DILocation(line: 0, scope: !9315)
!9320 = !DILocation(line: 814, column: 3, scope: !9315)
!9321 = !DILocation(line: 815, column: 1, scope: !9315)
!9322 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !9298, file: !9298, line: 771, type: !9308, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !9323)
!9323 = !{!9324}
!9324 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9322, file: !9298, line: 771, type: !1209)
!9325 = !DILocation(line: 0, scope: !9322)
!9326 = !DILocation(line: 773, column: 21, scope: !9322)
!9327 = !DILocation(line: 773, column: 3, scope: !9322)
!9328 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1276, file: !1276, line: 47, type: !9329, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !9331)
!9329 = !DISubroutineType(types: !9330)
!9330 = !{!103, !1152, !2620}
!9331 = !{!9332, !9333}
!9332 = !DILocalVariable(name: "flags", arg: 1, scope: !9328, file: !1276, line: 47, type: !1152)
!9333 = !DILocalVariable(name: "pincfg", arg: 2, scope: !9328, file: !1276, line: 47, type: !2620)
!9334 = !DILocation(line: 0, scope: !9328)
!9335 = !DILocation(line: 50, column: 13, scope: !9336)
!9336 = distinct !DILexicalBlock(scope: !9328, file: !1276, line: 50, column: 6)
!9337 = !DILocation(line: 50, column: 28, scope: !9336)
!9338 = !DILocation(line: 50, column: 6, scope: !9328)
!9339 = !DILocation(line: 53, column: 11, scope: !9340)
!9340 = distinct !DILexicalBlock(scope: !9336, file: !1276, line: 50, column: 34)
!9341 = !DILocation(line: 55, column: 14, scope: !9342)
!9342 = distinct !DILexicalBlock(scope: !9340, file: !1276, line: 55, column: 7)
!9343 = !DILocation(line: 55, column: 35, scope: !9342)
!9344 = !DILocation(line: 55, column: 7, scope: !9340)
!9345 = !DILocation(line: 56, column: 14, scope: !9346)
!9346 = distinct !DILexicalBlock(scope: !9347, file: !1276, line: 56, column: 8)
!9347 = distinct !DILexicalBlock(scope: !9342, file: !1276, line: 55, column: 41)
!9348 = !DILocation(line: 56, column: 8, scope: !9347)
!9349 = !DILocation(line: 0, scope: !9342)
!9350 = !DILocation(line: 66, column: 14, scope: !9351)
!9351 = distinct !DILexicalBlock(scope: !9340, file: !1276, line: 66, column: 7)
!9352 = !DILocation(line: 66, column: 30, scope: !9351)
!9353 = !DILocation(line: 66, column: 7, scope: !9340)
!9354 = !DILocation(line: 67, column: 12, scope: !9355)
!9355 = distinct !DILexicalBlock(scope: !9351, file: !1276, line: 66, column: 36)
!9356 = !DILocation(line: 68, column: 3, scope: !9355)
!9357 = !DILocation(line: 68, column: 21, scope: !9358)
!9358 = distinct !DILexicalBlock(scope: !9351, file: !1276, line: 68, column: 14)
!9359 = !DILocation(line: 68, column: 39, scope: !9358)
!9360 = !DILocation(line: 68, column: 14, scope: !9351)
!9361 = !DILocation(line: 69, column: 12, scope: !9362)
!9362 = distinct !DILexicalBlock(scope: !9358, file: !1276, line: 68, column: 45)
!9363 = !DILocation(line: 70, column: 3, scope: !9362)
!9364 = !DILocation(line: 72, column: 21, scope: !9365)
!9365 = distinct !DILexicalBlock(scope: !9336, file: !1276, line: 72, column: 14)
!9366 = !DILocation(line: 72, column: 35, scope: !9365)
!9367 = !DILocation(line: 72, column: 14, scope: !9336)
!9368 = !DILocation(line: 77, column: 14, scope: !9369)
!9369 = distinct !DILexicalBlock(scope: !9370, file: !1276, line: 77, column: 7)
!9370 = distinct !DILexicalBlock(scope: !9365, file: !1276, line: 72, column: 41)
!9371 = !DILocation(line: 77, column: 30, scope: !9369)
!9372 = !DILocation(line: 77, column: 7, scope: !9370)
!9373 = !DILocation(line: 0, scope: !9336)
!9374 = !DILocation(line: 90, column: 1, scope: !9328)
!9375 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1276, file: !1276, line: 157, type: !9376, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !9378)
!9376 = !DISubroutineType(types: !9377)
!9377 = !{null, !1136, !103, !103, !103}
!9378 = !{!9379, !9380, !9381, !9382, !9383, !9384, !9385, !9386, !9387, !9388, !9389}
!9379 = !DILocalVariable(name: "dev", arg: 1, scope: !9375, file: !1276, line: 157, type: !1136)
!9380 = !DILocalVariable(name: "pin", arg: 2, scope: !9375, file: !1276, line: 157, type: !103)
!9381 = !DILocalVariable(name: "conf", arg: 3, scope: !9375, file: !1276, line: 158, type: !103)
!9382 = !DILocalVariable(name: "func", arg: 4, scope: !9375, file: !1276, line: 158, type: !103)
!9383 = !DILocalVariable(name: "cfg", scope: !9375, file: !1276, line: 160, type: !8900)
!9384 = !DILocalVariable(name: "gpio", scope: !9375, file: !1276, line: 161, type: !1209)
!9385 = !DILocalVariable(name: "pin_ll", scope: !9375, file: !1276, line: 163, type: !103)
!9386 = !DILocalVariable(name: "mode", scope: !9375, file: !1276, line: 227, type: !32)
!9387 = !DILocalVariable(name: "otype", scope: !9375, file: !1276, line: 227, type: !32)
!9388 = !DILocalVariable(name: "ospeed", scope: !9375, file: !1276, line: 227, type: !32)
!9389 = !DILocalVariable(name: "pupd", scope: !9375, file: !1276, line: 227, type: !32)
!9390 = !DILocation(line: 0, scope: !9375)
!9391 = !DILocation(line: 160, column: 45, scope: !9375)
!9392 = !DILocation(line: 161, column: 44, scope: !9375)
!9393 = !DILocation(line: 163, column: 15, scope: !9375)
!9394 = !DILocation(line: 229, column: 14, scope: !9375)
!9395 = !DILocation(line: 246, column: 47, scope: !9375)
!9396 = !DILocation(line: 246, column: 2, scope: !9375)
!9397 = !DILocation(line: 248, column: 43, scope: !9375)
!9398 = !DILocation(line: 248, column: 2, scope: !9375)
!9399 = !DILocation(line: 250, column: 40, scope: !9375)
!9400 = !DILocation(line: 250, column: 2, scope: !9375)
!9401 = !DILocation(line: 252, column: 11, scope: !9402)
!9402 = distinct !DILexicalBlock(scope: !9375, file: !1276, line: 252, column: 6)
!9403 = !DILocation(line: 252, column: 6, scope: !9375)
!9404 = !DILocation(line: 253, column: 11, scope: !9405)
!9405 = distinct !DILexicalBlock(scope: !9406, file: !1276, line: 253, column: 7)
!9406 = distinct !DILexicalBlock(scope: !9402, file: !1276, line: 252, column: 36)
!9407 = !DILocation(line: 253, column: 7, scope: !9406)
!9408 = !DILocation(line: 254, column: 4, scope: !9409)
!9409 = distinct !DILexicalBlock(scope: !9405, file: !1276, line: 253, column: 16)
!9410 = !DILocation(line: 255, column: 3, scope: !9409)
!9411 = !DILocation(line: 256, column: 4, scope: !9412)
!9412 = distinct !DILexicalBlock(scope: !9405, file: !1276, line: 255, column: 10)
!9413 = !DILocation(line: 260, column: 40, scope: !9375)
!9414 = !DILocation(line: 260, column: 2, scope: !9375)
!9415 = !DILocation(line: 265, column: 1, scope: !9375)
!9416 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1276, file: !1276, line: 137, type: !9223, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !9417)
!9417 = !{!9418, !9419}
!9418 = !DILocalVariable(name: "pin", arg: 1, scope: !9416, file: !1276, line: 137, type: !103)
!9419 = !DILocalVariable(name: "pinval", scope: !9416, file: !1276, line: 139, type: !121)
!9420 = !DILocation(line: 0, scope: !9416)
!9421 = !DILocation(line: 149, column: 13, scope: !9416)
!9422 = !DILocation(line: 151, column: 2, scope: !9416)
!9423 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !9298, file: !9298, line: 342, type: !9424, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !9426)
!9424 = !DISubroutineType(types: !9425)
!9425 = !{null, !1209, !121, !121}
!9426 = !{!9427, !9428, !9429}
!9427 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9423, file: !9298, line: 342, type: !1209)
!9428 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9423, file: !9298, line: 342, type: !121)
!9429 = !DILocalVariable(name: "OutputType", arg: 3, scope: !9423, file: !9298, line: 342, type: !121)
!9430 = !DILocation(line: 0, scope: !9423)
!9431 = !DILocation(line: 344, column: 3, scope: !9423)
!9432 = !DILocation(line: 345, column: 1, scope: !9423)
!9433 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !9298, file: !9298, line: 413, type: !9424, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !9434)
!9434 = !{!9435, !9436, !9437}
!9435 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9433, file: !9298, line: 413, type: !1209)
!9436 = !DILocalVariable(name: "Pin", arg: 2, scope: !9433, file: !9298, line: 413, type: !121)
!9437 = !DILocalVariable(name: "Speed", arg: 3, scope: !9433, file: !9298, line: 413, type: !121)
!9438 = !DILocation(line: 0, scope: !9433)
!9439 = !DILocation(line: 415, column: 3, scope: !9433)
!9440 = !DILocation(line: 0, scope: !9243, inlinedAt: !9441)
!9441 = distinct !DILocation(line: 415, column: 3, scope: !9433)
!9442 = !DILocation(line: 380, column: 4, scope: !9243, inlinedAt: !9441)
!9443 = !DILocation(line: 0, scope: !9251, inlinedAt: !9444)
!9444 = distinct !DILocation(line: 415, column: 3, scope: !9433)
!9445 = !DILocation(line: 414, column: 7, scope: !9251, inlinedAt: !9444)
!9446 = !DILocation(line: 0, scope: !9243, inlinedAt: !9447)
!9447 = distinct !DILocation(line: 415, column: 3, scope: !9433)
!9448 = !DILocation(line: 0, scope: !9251, inlinedAt: !9449)
!9449 = distinct !DILocation(line: 415, column: 3, scope: !9433)
!9450 = !DILocation(line: 417, column: 1, scope: !9433)
!9451 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !9298, file: !9298, line: 484, type: !9424, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !9452)
!9452 = !{!9453, !9454, !9455}
!9453 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9451, file: !9298, line: 484, type: !1209)
!9454 = !DILocalVariable(name: "Pin", arg: 2, scope: !9451, file: !9298, line: 484, type: !121)
!9455 = !DILocalVariable(name: "Pull", arg: 3, scope: !9451, file: !9298, line: 484, type: !121)
!9456 = !DILocation(line: 0, scope: !9451)
!9457 = !DILocation(line: 486, column: 3, scope: !9451)
!9458 = !DILocation(line: 0, scope: !9243, inlinedAt: !9459)
!9459 = distinct !DILocation(line: 486, column: 3, scope: !9451)
!9460 = !DILocation(line: 380, column: 4, scope: !9243, inlinedAt: !9459)
!9461 = !DILocation(line: 0, scope: !9251, inlinedAt: !9462)
!9462 = distinct !DILocation(line: 486, column: 3, scope: !9451)
!9463 = !DILocation(line: 414, column: 7, scope: !9251, inlinedAt: !9462)
!9464 = !DILocation(line: 0, scope: !9243, inlinedAt: !9465)
!9465 = distinct !DILocation(line: 486, column: 3, scope: !9451)
!9466 = !DILocation(line: 0, scope: !9251, inlinedAt: !9467)
!9467 = distinct !DILocation(line: 486, column: 3, scope: !9451)
!9468 = !DILocation(line: 487, column: 1, scope: !9451)
!9469 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !9298, file: !9298, line: 556, type: !9424, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !9470)
!9470 = !{!9471, !9472, !9473}
!9471 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9469, file: !9298, line: 556, type: !1209)
!9472 = !DILocalVariable(name: "Pin", arg: 2, scope: !9469, file: !9298, line: 556, type: !121)
!9473 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9469, file: !9298, line: 556, type: !121)
!9474 = !DILocation(line: 0, scope: !9469)
!9475 = !DILocation(line: 558, column: 3, scope: !9469)
!9476 = !DILocation(line: 0, scope: !9243, inlinedAt: !9477)
!9477 = distinct !DILocation(line: 558, column: 3, scope: !9469)
!9478 = !DILocation(line: 380, column: 4, scope: !9243, inlinedAt: !9477)
!9479 = !DILocation(line: 0, scope: !9251, inlinedAt: !9480)
!9480 = distinct !DILocation(line: 558, column: 3, scope: !9469)
!9481 = !DILocation(line: 414, column: 7, scope: !9251, inlinedAt: !9480)
!9482 = !DILocation(line: 0, scope: !9243, inlinedAt: !9483)
!9483 = distinct !DILocation(line: 558, column: 3, scope: !9469)
!9484 = !DILocation(line: 0, scope: !9251, inlinedAt: !9485)
!9485 = distinct !DILocation(line: 558, column: 3, scope: !9469)
!9486 = !DILocation(line: 560, column: 1, scope: !9469)
!9487 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !9298, file: !9298, line: 633, type: !9424, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !9488)
!9488 = !{!9489, !9490, !9491}
!9489 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9487, file: !9298, line: 633, type: !1209)
!9490 = !DILocalVariable(name: "Pin", arg: 2, scope: !9487, file: !9298, line: 633, type: !121)
!9491 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9487, file: !9298, line: 633, type: !121)
!9492 = !DILocation(line: 0, scope: !9487)
!9493 = !DILocation(line: 635, column: 3, scope: !9487)
!9494 = !DILocation(line: 0, scope: !9243, inlinedAt: !9495)
!9495 = distinct !DILocation(line: 635, column: 3, scope: !9487)
!9496 = !DILocation(line: 380, column: 4, scope: !9243, inlinedAt: !9495)
!9497 = !DILocation(line: 0, scope: !9251, inlinedAt: !9498)
!9498 = distinct !DILocation(line: 635, column: 3, scope: !9487)
!9499 = !DILocation(line: 414, column: 7, scope: !9251, inlinedAt: !9498)
!9500 = !DILocation(line: 0, scope: !9243, inlinedAt: !9501)
!9501 = distinct !DILocation(line: 635, column: 3, scope: !9487)
!9502 = !DILocation(line: 0, scope: !9251, inlinedAt: !9503)
!9503 = distinct !DILocation(line: 635, column: 3, scope: !9487)
!9504 = !DILocation(line: 637, column: 1, scope: !9487)
!9505 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !9298, file: !9298, line: 273, type: !9424, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !9506)
!9506 = !{!9507, !9508, !9509}
!9507 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9505, file: !9298, line: 273, type: !1209)
!9508 = !DILocalVariable(name: "Pin", arg: 2, scope: !9505, file: !9298, line: 273, type: !121)
!9509 = !DILocalVariable(name: "Mode", arg: 3, scope: !9505, file: !9298, line: 273, type: !121)
!9510 = !DILocation(line: 0, scope: !9505)
!9511 = !DILocation(line: 275, column: 3, scope: !9505)
!9512 = !DILocation(line: 0, scope: !9243, inlinedAt: !9513)
!9513 = distinct !DILocation(line: 275, column: 3, scope: !9505)
!9514 = !DILocation(line: 380, column: 4, scope: !9243, inlinedAt: !9513)
!9515 = !DILocation(line: 0, scope: !9251, inlinedAt: !9516)
!9516 = distinct !DILocation(line: 275, column: 3, scope: !9505)
!9517 = !DILocation(line: 414, column: 7, scope: !9251, inlinedAt: !9516)
!9518 = !DILocation(line: 0, scope: !9243, inlinedAt: !9519)
!9519 = distinct !DILocation(line: 275, column: 3, scope: !9505)
!9520 = !DILocation(line: 0, scope: !9251, inlinedAt: !9521)
!9521 = distinct !DILocation(line: 275, column: 3, scope: !9505)
!9522 = !DILocation(line: 276, column: 1, scope: !9505)
!9523 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1276, file: !1276, line: 698, type: !1289, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !9524)
!9524 = !{!9525, !9526, !9527}
!9525 = !DILocalVariable(name: "dev", arg: 1, scope: !9523, file: !1276, line: 698, type: !1136)
!9526 = !DILocalVariable(name: "data", scope: !9523, file: !1276, line: 700, type: !8967)
!9527 = !DILocalVariable(name: "ret", scope: !9523, file: !1276, line: 701, type: !103)
!9528 = !DILocation(line: 0, scope: !9523)
!9529 = !DILocation(line: 700, column: 38, scope: !9523)
!9530 = !DILocation(line: 703, column: 8, scope: !9523)
!9531 = !DILocation(line: 703, column: 12, scope: !9523)
!9532 = !DILocation(line: 705, column: 7, scope: !9533)
!9533 = distinct !DILexicalBlock(scope: !9523, file: !1276, line: 705, column: 6)
!9534 = !DILocation(line: 705, column: 6, scope: !9523)
!9535 = !DILocation(line: 722, column: 8, scope: !9523)
!9536 = !DILocation(line: 723, column: 10, scope: !9537)
!9537 = distinct !DILexicalBlock(scope: !9523, file: !1276, line: 723, column: 6)
!9538 = !DILocation(line: 723, column: 6, scope: !9523)
!9539 = !DILocation(line: 731, column: 1, scope: !9523)
!9540 = distinct !DISubprogram(name: "device_is_ready", scope: !8191, file: !8191, line: 47, type: !9541, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !9543)
!9541 = !DISubroutineType(types: !9542)
!9542 = !{!157, !1136}
!9543 = !{!9544}
!9544 = !DILocalVariable(name: "dev", arg: 1, scope: !9540, file: !8191, line: 47, type: !1136)
!9545 = !DILocation(line: 0, scope: !9540)
!9546 = !DILocation(line: 55, column: 2, scope: !9547)
!9547 = distinct !DILexicalBlock(scope: !9540, file: !8191, line: 55, column: 2)
!9548 = !{i64 2154355904}
!9549 = !DILocation(line: 56, column: 9, scope: !9540)
!9550 = !DILocation(line: 56, column: 2, scope: !9540)
!9551 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1276, file: !1276, line: 270, type: !9552, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !9554)
!9552 = !DISubroutineType(types: !9553)
!9553 = !{!103, !1136, !157}
!9554 = !{!9555, !9556, !9557, !9558, !9559}
!9555 = !DILocalVariable(name: "dev", arg: 1, scope: !9551, file: !1276, line: 270, type: !1136)
!9556 = !DILocalVariable(name: "on", arg: 2, scope: !9551, file: !1276, line: 270, type: !157)
!9557 = !DILocalVariable(name: "cfg", scope: !9551, file: !1276, line: 272, type: !8900)
!9558 = !DILocalVariable(name: "ret", scope: !9551, file: !1276, line: 273, type: !103)
!9559 = !DILocalVariable(name: "clk", scope: !9551, file: !1276, line: 278, type: !9190)
!9560 = !DILocation(line: 0, scope: !9551)
!9561 = !DILocation(line: 272, column: 45, scope: !9551)
!9562 = !DILocation(line: 282, column: 38, scope: !9563)
!9563 = distinct !DILexicalBlock(scope: !9564, file: !1276, line: 280, column: 10)
!9564 = distinct !DILexicalBlock(scope: !9551, file: !1276, line: 280, column: 6)
!9565 = !DILocation(line: 282, column: 6, scope: !9563)
!9566 = !DILocation(line: 281, column: 9, scope: !9563)
!9567 = !DILocation(line: 293, column: 1, scope: !9551)
!9568 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !9541, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !9569)
!9569 = !{!9570}
!9570 = !DILocalVariable(name: "dev", arg: 1, scope: !9568, file: !141, line: 730, type: !1136)
!9571 = !DILocation(line: 0, scope: !9568)
!9572 = !DILocation(line: 732, column: 9, scope: !9568)
!9573 = !DILocation(line: 732, column: 2, scope: !9568)
!9574 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1276, file: !1276, line: 496, type: !9575, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !9577)
!9575 = !DISubroutineType(types: !9576)
!9576 = !{!103, !1136, !103, !103, !103}
!9577 = !{!9578, !9579, !9580, !9581, !9582, !9583}
!9578 = !DILocalVariable(name: "dev", arg: 1, scope: !9574, file: !1276, line: 496, type: !1136)
!9579 = !DILocalVariable(name: "pin", arg: 2, scope: !9574, file: !1276, line: 496, type: !103)
!9580 = !DILocalVariable(name: "conf", arg: 3, scope: !9574, file: !1276, line: 496, type: !103)
!9581 = !DILocalVariable(name: "func", arg: 4, scope: !9574, file: !1276, line: 496, type: !103)
!9582 = !DILocalVariable(name: "ret", scope: !9574, file: !1276, line: 498, type: !103)
!9583 = !DILocalVariable(name: "gpio_out", scope: !9584, file: !1276, line: 508, type: !121)
!9584 = distinct !DILexicalBlock(scope: !9585, file: !1276, line: 507, column: 27)
!9585 = distinct !DILexicalBlock(scope: !9574, file: !1276, line: 507, column: 6)
!9586 = !DILocation(line: 0, scope: !9574)
!9587 = !DILocation(line: 505, column: 2, scope: !9574)
!9588 = !DILocation(line: 507, column: 11, scope: !9585)
!9589 = !DILocation(line: 507, column: 6, scope: !9574)
!9590 = !DILocation(line: 508, column: 28, scope: !9584)
!9591 = !DILocation(line: 0, scope: !9584)
!9592 = !DILocation(line: 510, column: 16, scope: !9593)
!9593 = distinct !DILexicalBlock(scope: !9584, file: !1276, line: 510, column: 7)
!9594 = !DILocation(line: 0, scope: !9593)
!9595 = !DILocation(line: 510, column: 7, scope: !9584)
!9596 = !DILocation(line: 511, column: 4, scope: !9597)
!9597 = distinct !DILexicalBlock(scope: !9593, file: !1276, line: 510, column: 32)
!9598 = !DILocation(line: 512, column: 3, scope: !9597)
!9599 = !DILocation(line: 513, column: 4, scope: !9600)
!9600 = distinct !DILexicalBlock(scope: !9601, file: !1276, line: 512, column: 39)
!9601 = distinct !DILexicalBlock(scope: !9593, file: !1276, line: 512, column: 14)
!9602 = !DILocation(line: 514, column: 3, scope: !9600)
!9603 = !DILocation(line: 518, column: 1, scope: !9574)
!9604 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1584, file: !1584, line: 526, type: !1455, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !9605)
!9605 = !{!9606, !9607, !9608}
!9606 = !DILocalVariable(name: "dev", arg: 1, scope: !9604, file: !1584, line: 526, type: !1457)
!9607 = !DILocalVariable(name: "c", arg: 2, scope: !9604, file: !1584, line: 526, type: !230)
!9608 = !DILocalVariable(name: "config", scope: !9604, file: !1584, line: 528, type: !9609)
!9609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1676, size: 32)
!9610 = !DILocation(line: 0, scope: !9604)
!9611 = !DILocation(line: 528, column: 48, scope: !9604)
!9612 = !DILocation(line: 531, column: 40, scope: !9613)
!9613 = distinct !DILexicalBlock(scope: !9604, file: !1584, line: 531, column: 6)
!9614 = !DILocation(line: 531, column: 6, scope: !9613)
!9615 = !DILocation(line: 531, column: 6, scope: !9604)
!9616 = !DILocation(line: 532, column: 34, scope: !9617)
!9617 = distinct !DILexicalBlock(scope: !9613, file: !1584, line: 531, column: 48)
!9618 = !DILocation(line: 532, column: 3, scope: !9617)
!9619 = !DILocation(line: 533, column: 2, scope: !9617)
!9620 = !DILocation(line: 539, column: 42, scope: !9621)
!9621 = distinct !DILexicalBlock(scope: !9604, file: !1584, line: 539, column: 6)
!9622 = !DILocation(line: 539, column: 7, scope: !9621)
!9623 = !DILocation(line: 539, column: 6, scope: !9604)
!9624 = !DILocation(line: 543, column: 52, scope: !9604)
!9625 = !DILocation(line: 543, column: 22, scope: !9604)
!9626 = !DILocation(line: 543, column: 5, scope: !9604)
!9627 = !DILocation(line: 545, column: 2, scope: !9604)
!9628 = !DILocation(line: 546, column: 1, scope: !9604)
!9629 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1584, file: !1584, line: 548, type: !1474, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !9630)
!9630 = !{!9631, !9632, !9633, !9634}
!9631 = !DILocalVariable(name: "dev", arg: 1, scope: !9629, file: !1584, line: 548, type: !1457)
!9632 = !DILocalVariable(name: "c", arg: 2, scope: !9629, file: !1584, line: 549, type: !155)
!9633 = !DILocalVariable(name: "config", scope: !9629, file: !1584, line: 551, type: !9609)
!9634 = !DILocalVariable(name: "key", scope: !9629, file: !1584, line: 555, type: !32)
!9635 = !DILocation(line: 0, scope: !9629)
!9636 = !DILocation(line: 551, column: 48, scope: !9629)
!9637 = !DILocation(line: 562, column: 2, scope: !9629)
!9638 = !DILocation(line: 563, column: 41, scope: !9639)
!9639 = distinct !DILexicalBlock(scope: !9640, file: !1584, line: 563, column: 7)
!9640 = distinct !DILexicalBlock(scope: !9629, file: !1584, line: 562, column: 12)
!9641 = !DILocation(line: 563, column: 7, scope: !9639)
!9642 = !DILocation(line: 563, column: 7, scope: !9640)
!9643 = !DILocation(line: 55, column: 2, scope: !9644, inlinedAt: !9648)
!9644 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5768, file: !5768, line: 42, type: !5769, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !9645)
!9645 = !{!9646, !9647}
!9646 = !DILocalVariable(name: "key", scope: !9644, file: !5768, line: 44, type: !32)
!9647 = !DILocalVariable(name: "tmp", scope: !9644, file: !5768, line: 53, type: !32)
!9648 = distinct !DILocation(line: 564, column: 10, scope: !9649)
!9649 = distinct !DILexicalBlock(scope: !9639, file: !1584, line: 563, column: 49)
!9650 = !{i64 2086274}
!9651 = !DILocation(line: 0, scope: !9644, inlinedAt: !9648)
!9652 = !DILocation(line: 565, column: 42, scope: !9653)
!9653 = distinct !DILexicalBlock(scope: !9649, file: !1584, line: 565, column: 8)
!9654 = !DILocation(line: 565, column: 8, scope: !9653)
!9655 = !DILocation(line: 565, column: 8, scope: !9649)
!9656 = !DILocalVariable(name: "key", arg: 1, scope: !9657, file: !5768, line: 84, type: !32)
!9657 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5768, file: !5768, line: 84, type: !5779, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !9658)
!9658 = !{!9656}
!9659 = !DILocation(line: 0, scope: !9657, inlinedAt: !9660)
!9660 = distinct !DILocation(line: 568, column: 4, scope: !9649)
!9661 = !DILocation(line: 95, column: 2, scope: !9657, inlinedAt: !9660)
!9662 = !{i64 2087091}
!9663 = !DILocation(line: 569, column: 3, scope: !9649)
!9664 = distinct !{!9664, !9637, !9665}
!9665 = !DILocation(line: 570, column: 2, scope: !9629)
!9666 = !DILocation(line: 592, column: 33, scope: !9629)
!9667 = !DILocation(line: 592, column: 2, scope: !9629)
!9668 = !DILocation(line: 0, scope: !9657, inlinedAt: !9669)
!9669 = distinct !DILocation(line: 593, column: 2, scope: !9629)
!9670 = !DILocation(line: 95, column: 2, scope: !9657, inlinedAt: !9669)
!9671 = !DILocation(line: 594, column: 1, scope: !9629)
!9672 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1584, file: !1584, line: 596, type: !1478, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !9673)
!9673 = !{!9674, !9675, !9676}
!9674 = !DILocalVariable(name: "dev", arg: 1, scope: !9672, file: !1584, line: 596, type: !1457)
!9675 = !DILocalVariable(name: "config", scope: !9672, file: !1584, line: 598, type: !9609)
!9676 = !DILocalVariable(name: "err", scope: !9672, file: !1584, line: 599, type: !121)
!9677 = !DILocation(line: 0, scope: !9672)
!9678 = !DILocation(line: 598, column: 48, scope: !9672)
!9679 = !DILocation(line: 606, column: 40, scope: !9680)
!9680 = distinct !DILexicalBlock(scope: !9672, file: !1584, line: 606, column: 6)
!9681 = !DILocation(line: 606, column: 6, scope: !9680)
!9682 = !DILocation(line: 606, column: 6, scope: !9672)
!9683 = !DILocation(line: 610, column: 39, scope: !9684)
!9684 = distinct !DILexicalBlock(scope: !9672, file: !1584, line: 610, column: 6)
!9685 = !DILocation(line: 610, column: 6, scope: !9684)
!9686 = !DILocation(line: 610, column: 6, scope: !9672)
!9687 = !DILocation(line: 614, column: 39, scope: !9688)
!9688 = distinct !DILexicalBlock(scope: !9672, file: !1584, line: 614, column: 6)
!9689 = !DILocation(line: 614, column: 6, scope: !9688)
!9690 = !DILocation(line: 614, column: 6, scope: !9672)
!9691 = !DILocation(line: 619, column: 40, scope: !9692)
!9692 = distinct !DILexicalBlock(scope: !9672, file: !1584, line: 619, column: 6)
!9693 = !DILocation(line: 619, column: 6, scope: !9692)
!9694 = !DILocation(line: 619, column: 6, scope: !9672)
!9695 = !DILocation(line: 623, column: 10, scope: !9696)
!9696 = distinct !DILexicalBlock(scope: !9672, file: !1584, line: 623, column: 6)
!9697 = !DILocation(line: 623, column: 6, scope: !9672)
!9698 = !DILocation(line: 624, column: 34, scope: !9699)
!9699 = distinct !DILexicalBlock(scope: !9696, file: !1584, line: 623, column: 24)
!9700 = !DILocation(line: 624, column: 3, scope: !9699)
!9701 = !DILocation(line: 625, column: 2, scope: !9699)
!9702 = !DILocation(line: 632, column: 10, scope: !9703)
!9703 = distinct !DILexicalBlock(scope: !9672, file: !1584, line: 632, column: 6)
!9704 = !DILocation(line: 632, column: 6, scope: !9672)
!9705 = !DILocation(line: 633, column: 34, scope: !9706)
!9706 = distinct !DILexicalBlock(scope: !9703, file: !1584, line: 632, column: 32)
!9707 = !DILocation(line: 633, column: 3, scope: !9706)
!9708 = !DILocation(line: 634, column: 2, scope: !9706)
!9709 = !DILocation(line: 636, column: 10, scope: !9710)
!9710 = distinct !DILexicalBlock(scope: !9672, file: !1584, line: 636, column: 6)
!9711 = !DILocation(line: 636, column: 6, scope: !9672)
!9712 = !DILocation(line: 637, column: 33, scope: !9713)
!9713 = distinct !DILexicalBlock(scope: !9710, file: !1584, line: 636, column: 31)
!9714 = !DILocation(line: 637, column: 3, scope: !9713)
!9715 = !DILocation(line: 638, column: 2, scope: !9713)
!9716 = !DILocation(line: 640, column: 10, scope: !9717)
!9717 = distinct !DILexicalBlock(scope: !9672, file: !1584, line: 640, column: 6)
!9718 = !DILocation(line: 640, column: 6, scope: !9672)
!9719 = !DILocation(line: 641, column: 33, scope: !9720)
!9720 = distinct !DILexicalBlock(scope: !9717, file: !1584, line: 640, column: 32)
!9721 = !DILocation(line: 641, column: 3, scope: !9720)
!9722 = !DILocation(line: 642, column: 2, scope: !9720)
!9723 = !DILocation(line: 646, column: 32, scope: !9672)
!9724 = !DILocation(line: 646, column: 2, scope: !9672)
!9725 = !DILocation(line: 648, column: 2, scope: !9672)
!9726 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1584, file: !1584, line: 419, type: !1482, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !9727)
!9727 = !{!9728, !9729, !9730, !9731, !9733, !9734, !9735, !9736}
!9728 = !DILocalVariable(name: "dev", arg: 1, scope: !9726, file: !1584, line: 419, type: !1457)
!9729 = !DILocalVariable(name: "cfg", arg: 2, scope: !9726, file: !1584, line: 420, type: !1484)
!9730 = !DILocalVariable(name: "config", scope: !9726, file: !1584, line: 422, type: !9609)
!9731 = !DILocalVariable(name: "data", scope: !9726, file: !1584, line: 423, type: !9732)
!9732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1667, size: 32)
!9733 = !DILocalVariable(name: "parity", scope: !9726, file: !1584, line: 424, type: !6251)
!9734 = !DILocalVariable(name: "stopbits", scope: !9726, file: !1584, line: 425, type: !6251)
!9735 = !DILocalVariable(name: "databits", scope: !9726, file: !1584, line: 426, type: !6251)
!9736 = !DILocalVariable(name: "flowctrl", scope: !9726, file: !1584, line: 428, type: !6251)
!9737 = !DILocation(line: 0, scope: !9726)
!9738 = !DILocation(line: 422, column: 48, scope: !9726)
!9739 = !DILocation(line: 423, column: 38, scope: !9726)
!9740 = !DILocation(line: 424, column: 56, scope: !9726)
!9741 = !DILocation(line: 424, column: 51, scope: !9726)
!9742 = !DILocation(line: 424, column: 26, scope: !9726)
!9743 = !DILocation(line: 425, column: 60, scope: !9726)
!9744 = !DILocation(line: 425, column: 55, scope: !9726)
!9745 = !DILocation(line: 425, column: 28, scope: !9726)
!9746 = !DILocation(line: 426, column: 60, scope: !9726)
!9747 = !DILocation(line: 426, column: 55, scope: !9726)
!9748 = !DILocation(line: 426, column: 28, scope: !9726)
!9749 = !DILocation(line: 428, column: 58, scope: !9726)
!9750 = !DILocation(line: 428, column: 53, scope: !9726)
!9751 = !DILocation(line: 428, column: 28, scope: !9726)
!9752 = !DILocation(line: 431, column: 44, scope: !9753)
!9753 = distinct !DILexicalBlock(scope: !9726, file: !1584, line: 431, column: 6)
!9754 = !DILocation(line: 438, column: 22, scope: !9755)
!9755 = distinct !DILexicalBlock(scope: !9726, file: !1584, line: 437, column: 6)
!9756 = !DILocation(line: 437, column: 6, scope: !9726)
!9757 = !DILocation(line: 448, column: 6, scope: !9726)
!9758 = !DILocation(line: 465, column: 47, scope: !9759)
!9759 = distinct !DILexicalBlock(scope: !9726, file: !1584, line: 465, column: 6)
!9760 = !DILocation(line: 475, column: 21, scope: !9761)
!9761 = distinct !DILexicalBlock(scope: !9726, file: !1584, line: 475, column: 6)
!9762 = !DILocation(line: 475, column: 6, scope: !9726)
!9763 = !DILocation(line: 476, column: 8, scope: !9764)
!9764 = distinct !DILexicalBlock(scope: !9765, file: !1584, line: 476, column: 7)
!9765 = distinct !DILexicalBlock(scope: !9761, file: !1584, line: 475, column: 49)
!9766 = !DILocation(line: 477, column: 34, scope: !9764)
!9767 = !DILocation(line: 476, column: 7, scope: !9765)
!9768 = !DILocation(line: 482, column: 27, scope: !9726)
!9769 = !DILocation(line: 482, column: 2, scope: !9726)
!9770 = !DILocation(line: 484, column: 16, scope: !9771)
!9771 = distinct !DILexicalBlock(scope: !9726, file: !1584, line: 484, column: 6)
!9772 = !DILocation(line: 484, column: 13, scope: !9771)
!9773 = !DILocation(line: 484, column: 6, scope: !9726)
!9774 = !DILocation(line: 485, column: 3, scope: !9775)
!9775 = distinct !DILexicalBlock(scope: !9771, file: !1584, line: 484, column: 44)
!9776 = !DILocation(line: 486, column: 2, scope: !9775)
!9777 = !DILocation(line: 488, column: 18, scope: !9778)
!9778 = distinct !DILexicalBlock(scope: !9726, file: !1584, line: 488, column: 6)
!9779 = !DILocation(line: 488, column: 15, scope: !9778)
!9780 = !DILocation(line: 488, column: 6, scope: !9726)
!9781 = !DILocation(line: 489, column: 3, scope: !9782)
!9782 = distinct !DILexicalBlock(scope: !9778, file: !1584, line: 488, column: 48)
!9783 = !DILocation(line: 490, column: 2, scope: !9782)
!9784 = !DILocation(line: 492, column: 18, scope: !9785)
!9785 = distinct !DILexicalBlock(scope: !9726, file: !1584, line: 492, column: 6)
!9786 = !DILocation(line: 492, column: 15, scope: !9785)
!9787 = !DILocation(line: 492, column: 6, scope: !9726)
!9788 = !DILocation(line: 493, column: 3, scope: !9789)
!9789 = distinct !DILexicalBlock(scope: !9785, file: !1584, line: 492, column: 48)
!9790 = !DILocation(line: 494, column: 2, scope: !9789)
!9791 = !DILocation(line: 496, column: 18, scope: !9792)
!9792 = distinct !DILexicalBlock(scope: !9726, file: !1584, line: 496, column: 6)
!9793 = !DILocation(line: 496, column: 15, scope: !9792)
!9794 = !DILocation(line: 496, column: 6, scope: !9726)
!9795 = !DILocation(line: 497, column: 3, scope: !9796)
!9796 = distinct !DILexicalBlock(scope: !9792, file: !1584, line: 496, column: 46)
!9797 = !DILocation(line: 498, column: 2, scope: !9796)
!9798 = !DILocation(line: 500, column: 11, scope: !9799)
!9799 = distinct !DILexicalBlock(scope: !9726, file: !1584, line: 500, column: 6)
!9800 = !DILocation(line: 500, column: 29, scope: !9799)
!9801 = !DILocation(line: 500, column: 20, scope: !9799)
!9802 = !DILocation(line: 500, column: 6, scope: !9726)
!9803 = !DILocation(line: 501, column: 3, scope: !9804)
!9804 = distinct !DILexicalBlock(scope: !9799, file: !1584, line: 500, column: 40)
!9805 = !DILocation(line: 502, column: 26, scope: !9804)
!9806 = !DILocation(line: 502, column: 19, scope: !9804)
!9807 = !DILocation(line: 503, column: 2, scope: !9804)
!9808 = !DILocation(line: 505, column: 26, scope: !9726)
!9809 = !DILocation(line: 505, column: 2, scope: !9726)
!9810 = !DILocation(line: 506, column: 2, scope: !9726)
!9811 = !DILocation(line: 507, column: 1, scope: !9726)
!9812 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1584, file: !1584, line: 509, type: !1495, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !9813)
!9813 = !{!9814, !9815, !9816}
!9814 = !DILocalVariable(name: "dev", arg: 1, scope: !9812, file: !1584, line: 509, type: !1457)
!9815 = !DILocalVariable(name: "cfg", arg: 2, scope: !9812, file: !1584, line: 510, type: !1497)
!9816 = !DILocalVariable(name: "data", scope: !9812, file: !1584, line: 512, type: !9732)
!9817 = !DILocation(line: 0, scope: !9812)
!9818 = !DILocation(line: 512, column: 38, scope: !9812)
!9819 = !DILocation(line: 514, column: 24, scope: !9812)
!9820 = !DILocation(line: 514, column: 7, scope: !9812)
!9821 = !DILocation(line: 514, column: 16, scope: !9812)
!9822 = !DILocation(line: 515, column: 41, scope: !9812)
!9823 = !{i32 0, i32 1537}
!9824 = !DILocation(line: 515, column: 16, scope: !9812)
!9825 = !DILocation(line: 515, column: 7, scope: !9812)
!9826 = !DILocation(line: 515, column: 14, scope: !9812)
!9827 = !DILocation(line: 517, column: 3, scope: !9812)
!9828 = !{i32 0, i32 12289}
!9829 = !DILocation(line: 516, column: 19, scope: !9812)
!9830 = !DILocation(line: 516, column: 7, scope: !9812)
!9831 = !DILocation(line: 516, column: 17, scope: !9812)
!9832 = !DILocation(line: 519, column: 3, scope: !9812)
!9833 = !DILocation(line: 519, column: 33, scope: !9812)
!9834 = !DILocation(line: 518, column: 19, scope: !9812)
!9835 = !DILocation(line: 518, column: 7, scope: !9812)
!9836 = !DILocation(line: 518, column: 17, scope: !9812)
!9837 = !DILocation(line: 521, column: 3, scope: !9812)
!9838 = !{i32 0, i32 769}
!9839 = !DILocation(line: 520, column: 19, scope: !9812)
!9840 = !DILocation(line: 520, column: 7, scope: !9812)
!9841 = !DILocation(line: 520, column: 17, scope: !9812)
!9842 = !DILocation(line: 522, column: 2, scope: !9812)
!9843 = distinct !DISubprogram(name: "uart_stm32_fifo_fill", scope: !1584, file: !1584, line: 661, type: !1500, scopeLine: 664, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !9844)
!9844 = !{!9845, !9846, !9847, !9848, !9849, !9850}
!9845 = !DILocalVariable(name: "dev", arg: 1, scope: !9843, file: !1584, line: 661, type: !1457)
!9846 = !DILocalVariable(name: "tx_data", arg: 2, scope: !9843, file: !1584, line: 662, type: !261)
!9847 = !DILocalVariable(name: "size", arg: 3, scope: !9843, file: !1584, line: 663, type: !103)
!9848 = !DILocalVariable(name: "config", scope: !9843, file: !1584, line: 665, type: !9609)
!9849 = !DILocalVariable(name: "num_tx", scope: !9843, file: !1584, line: 666, type: !154)
!9850 = !DILocalVariable(name: "key", scope: !9843, file: !1584, line: 667, type: !32)
!9851 = !DILocation(line: 0, scope: !9843)
!9852 = !DILocation(line: 665, column: 48, scope: !9843)
!9853 = !DILocation(line: 669, column: 41, scope: !9854)
!9854 = distinct !DILexicalBlock(scope: !9843, file: !1584, line: 669, column: 6)
!9855 = !DILocation(line: 669, column: 7, scope: !9854)
!9856 = !DILocation(line: 669, column: 6, scope: !9843)
!9857 = !DILocation(line: 55, column: 2, scope: !9644, inlinedAt: !9858)
!9858 = distinct !DILocation(line: 674, column: 8, scope: !9843)
!9859 = !DILocation(line: 0, scope: !9644, inlinedAt: !9858)
!9860 = !DILocation(line: 676, column: 24, scope: !9843)
!9861 = !DILocation(line: 676, column: 29, scope: !9843)
!9862 = !DILocation(line: 677, column: 43, scope: !9843)
!9863 = !DILocation(line: 677, column: 9, scope: !9843)
!9864 = !DILocation(line: 676, column: 2, scope: !9843)
!9865 = !DILocation(line: 681, column: 34, scope: !9866)
!9866 = distinct !DILexicalBlock(scope: !9843, file: !1584, line: 677, column: 51)
!9867 = !DILocation(line: 681, column: 55, scope: !9866)
!9868 = !DILocation(line: 681, column: 41, scope: !9866)
!9869 = !DILocation(line: 681, column: 3, scope: !9866)
!9870 = !DILocation(line: 676, column: 17, scope: !9843)
!9871 = distinct !{!9871, !9864, !9872}
!9872 = !DILocation(line: 682, column: 2, scope: !9843)
!9873 = !DILocation(line: 0, scope: !9657, inlinedAt: !9874)
!9874 = distinct !DILocation(line: 684, column: 2, scope: !9843)
!9875 = !DILocation(line: 95, column: 2, scope: !9657, inlinedAt: !9874)
!9876 = !DILocation(line: 686, column: 2, scope: !9843)
!9877 = !DILocation(line: 687, column: 1, scope: !9843)
!9878 = distinct !DISubprogram(name: "uart_stm32_fifo_read", scope: !1584, file: !1584, line: 689, type: !1504, scopeLine: 691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !9879)
!9879 = !{!9880, !9881, !9882, !9883, !9884}
!9880 = !DILocalVariable(name: "dev", arg: 1, scope: !9878, file: !1584, line: 689, type: !1457)
!9881 = !DILocalVariable(name: "rx_data", arg: 2, scope: !9878, file: !1584, line: 689, type: !267)
!9882 = !DILocalVariable(name: "size", arg: 3, scope: !9878, file: !1584, line: 690, type: !268)
!9883 = !DILocalVariable(name: "config", scope: !9878, file: !1584, line: 692, type: !9609)
!9884 = !DILocalVariable(name: "num_rx", scope: !9878, file: !1584, line: 693, type: !154)
!9885 = !DILocation(line: 0, scope: !9878)
!9886 = !DILocation(line: 692, column: 48, scope: !9878)
!9887 = !DILocation(line: 696, column: 44, scope: !9878)
!9888 = !DILocation(line: 695, column: 24, scope: !9878)
!9889 = !DILocation(line: 695, column: 29, scope: !9878)
!9890 = !DILocation(line: 696, column: 9, scope: !9878)
!9891 = !DILocation(line: 695, column: 2, scope: !9878)
!9892 = !DILocation(line: 700, column: 53, scope: !9893)
!9893 = distinct !DILexicalBlock(scope: !9878, file: !1584, line: 696, column: 52)
!9894 = !DILocation(line: 700, column: 23, scope: !9893)
!9895 = !DILocation(line: 700, column: 17, scope: !9893)
!9896 = !DILocation(line: 700, column: 3, scope: !9893)
!9897 = !DILocation(line: 700, column: 21, scope: !9893)
!9898 = !DILocation(line: 703, column: 41, scope: !9899)
!9899 = distinct !DILexicalBlock(scope: !9893, file: !1584, line: 703, column: 7)
!9900 = !DILocation(line: 703, column: 7, scope: !9899)
!9901 = !DILocation(line: 703, column: 7, scope: !9893)
!9902 = !DILocation(line: 704, column: 35, scope: !9903)
!9903 = distinct !DILexicalBlock(scope: !9899, file: !1584, line: 703, column: 49)
!9904 = !DILocation(line: 704, column: 4, scope: !9903)
!9905 = !DILocation(line: 709, column: 3, scope: !9903)
!9906 = !DILocation(line: 695, column: 17, scope: !9878)
!9907 = distinct !{!9907, !9891, !9908}
!9908 = !DILocation(line: 710, column: 2, scope: !9878)
!9909 = !DILocation(line: 712, column: 2, scope: !9878)
!9910 = distinct !DISubprogram(name: "uart_stm32_irq_tx_enable", scope: !1584, file: !1584, line: 715, type: !1508, scopeLine: 716, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !9911)
!9911 = !{!9912, !9913}
!9912 = !DILocalVariable(name: "dev", arg: 1, scope: !9910, file: !1584, line: 715, type: !1457)
!9913 = !DILocalVariable(name: "config", scope: !9910, file: !1584, line: 717, type: !9609)
!9914 = !DILocation(line: 0, scope: !9910)
!9915 = !DILocation(line: 717, column: 48, scope: !9910)
!9916 = !DILocation(line: 729, column: 31, scope: !9910)
!9917 = !DILocation(line: 729, column: 2, scope: !9910)
!9918 = !DILocation(line: 734, column: 1, scope: !9910)
!9919 = distinct !DISubprogram(name: "uart_stm32_irq_tx_disable", scope: !1584, file: !1584, line: 736, type: !1508, scopeLine: 737, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !9920)
!9920 = !{!9921, !9922}
!9921 = !DILocalVariable(name: "dev", arg: 1, scope: !9919, file: !1584, line: 736, type: !1457)
!9922 = !DILocalVariable(name: "config", scope: !9919, file: !1584, line: 738, type: !9609)
!9923 = !DILocation(line: 0, scope: !9919)
!9924 = !DILocation(line: 738, column: 48, scope: !9919)
!9925 = !DILocation(line: 746, column: 32, scope: !9919)
!9926 = !DILocation(line: 746, column: 2, scope: !9919)
!9927 = !DILocation(line: 756, column: 1, scope: !9919)
!9928 = distinct !DISubprogram(name: "uart_stm32_irq_tx_ready", scope: !1584, file: !1584, line: 758, type: !1478, scopeLine: 759, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !9929)
!9929 = !{!9930, !9931}
!9930 = !DILocalVariable(name: "dev", arg: 1, scope: !9928, file: !1584, line: 758, type: !1457)
!9931 = !DILocalVariable(name: "config", scope: !9928, file: !1584, line: 760, type: !9609)
!9932 = !DILocation(line: 0, scope: !9928)
!9933 = !DILocation(line: 760, column: 48, scope: !9928)
!9934 = !DILocation(line: 762, column: 43, scope: !9928)
!9935 = !DILocation(line: 762, column: 9, scope: !9928)
!9936 = !DILocation(line: 762, column: 50, scope: !9928)
!9937 = !DILocation(line: 763, column: 35, scope: !9928)
!9938 = !DILocation(line: 763, column: 3, scope: !9928)
!9939 = !DILocation(line: 762, column: 2, scope: !9928)
!9940 = distinct !DISubprogram(name: "uart_stm32_irq_rx_enable", scope: !1584, file: !1584, line: 773, type: !1508, scopeLine: 774, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !9941)
!9941 = !{!9942, !9943}
!9942 = !DILocalVariable(name: "dev", arg: 1, scope: !9940, file: !1584, line: 773, type: !1457)
!9943 = !DILocalVariable(name: "config", scope: !9940, file: !1584, line: 775, type: !9609)
!9944 = !DILocation(line: 0, scope: !9940)
!9945 = !DILocation(line: 775, column: 48, scope: !9940)
!9946 = !DILocation(line: 777, column: 33, scope: !9940)
!9947 = !DILocation(line: 777, column: 2, scope: !9940)
!9948 = !DILocation(line: 778, column: 1, scope: !9940)
!9949 = distinct !DISubprogram(name: "uart_stm32_irq_rx_disable", scope: !1584, file: !1584, line: 780, type: !1508, scopeLine: 781, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !9950)
!9950 = !{!9951, !9952}
!9951 = !DILocalVariable(name: "dev", arg: 1, scope: !9949, file: !1584, line: 780, type: !1457)
!9952 = !DILocalVariable(name: "config", scope: !9949, file: !1584, line: 782, type: !9609)
!9953 = !DILocation(line: 0, scope: !9949)
!9954 = !DILocation(line: 782, column: 48, scope: !9949)
!9955 = !DILocation(line: 784, column: 34, scope: !9949)
!9956 = !DILocation(line: 784, column: 2, scope: !9949)
!9957 = !DILocation(line: 785, column: 1, scope: !9949)
!9958 = distinct !DISubprogram(name: "uart_stm32_irq_tx_complete", scope: !1584, file: !1584, line: 766, type: !1478, scopeLine: 767, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !9959)
!9959 = !{!9960, !9961}
!9960 = !DILocalVariable(name: "dev", arg: 1, scope: !9958, file: !1584, line: 766, type: !1457)
!9961 = !DILocalVariable(name: "config", scope: !9958, file: !1584, line: 768, type: !9609)
!9962 = !DILocation(line: 0, scope: !9958)
!9963 = !DILocation(line: 768, column: 48, scope: !9958)
!9964 = !DILocation(line: 770, column: 42, scope: !9958)
!9965 = !DILocation(line: 770, column: 9, scope: !9958)
!9966 = !DILocation(line: 770, column: 2, scope: !9958)
!9967 = distinct !DISubprogram(name: "uart_stm32_irq_rx_ready", scope: !1584, file: !1584, line: 787, type: !1478, scopeLine: 788, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !9968)
!9968 = !{!9969, !9970}
!9969 = !DILocalVariable(name: "dev", arg: 1, scope: !9967, file: !1584, line: 787, type: !1457)
!9970 = !DILocalVariable(name: "config", scope: !9967, file: !1584, line: 789, type: !9609)
!9971 = !DILocation(line: 0, scope: !9967)
!9972 = !DILocation(line: 789, column: 48, scope: !9967)
!9973 = !DILocation(line: 794, column: 44, scope: !9967)
!9974 = !DILocation(line: 794, column: 9, scope: !9967)
!9975 = !DILocation(line: 794, column: 2, scope: !9967)
!9976 = distinct !DISubprogram(name: "uart_stm32_irq_err_enable", scope: !1584, file: !1584, line: 797, type: !1508, scopeLine: 798, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !9977)
!9977 = !{!9978, !9979}
!9978 = !DILocalVariable(name: "dev", arg: 1, scope: !9976, file: !1584, line: 797, type: !1457)
!9979 = !DILocalVariable(name: "config", scope: !9976, file: !1584, line: 799, type: !9609)
!9980 = !DILocation(line: 0, scope: !9976)
!9981 = !DILocation(line: 799, column: 48, scope: !9976)
!9982 = !DILocation(line: 802, column: 34, scope: !9976)
!9983 = !DILocation(line: 802, column: 2, scope: !9976)
!9984 = !DILocation(line: 805, column: 6, scope: !9985)
!9985 = distinct !DILexicalBlock(scope: !9976, file: !1584, line: 805, column: 6)
!9986 = !DILocation(line: 806, column: 3, scope: !9987)
!9987 = distinct !DILexicalBlock(scope: !9985, file: !1584, line: 805, column: 43)
!9988 = !DILocation(line: 810, column: 31, scope: !9976)
!9989 = !DILocation(line: 807, column: 2, scope: !9987)
!9990 = !DILocation(line: 810, column: 2, scope: !9976)
!9991 = !DILocation(line: 811, column: 1, scope: !9976)
!9992 = distinct !DISubprogram(name: "uart_stm32_irq_err_disable", scope: !1584, file: !1584, line: 813, type: !1508, scopeLine: 814, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !9993)
!9993 = !{!9994, !9995}
!9994 = !DILocalVariable(name: "dev", arg: 1, scope: !9992, file: !1584, line: 813, type: !1457)
!9995 = !DILocalVariable(name: "config", scope: !9992, file: !1584, line: 815, type: !9609)
!9996 = !DILocation(line: 0, scope: !9992)
!9997 = !DILocation(line: 815, column: 48, scope: !9992)
!9998 = !DILocation(line: 818, column: 35, scope: !9992)
!9999 = !DILocation(line: 818, column: 2, scope: !9992)
!10000 = !DILocation(line: 821, column: 6, scope: !10001)
!10001 = distinct !DILexicalBlock(scope: !9992, file: !1584, line: 821, column: 6)
!10002 = !DILocation(line: 822, column: 3, scope: !10003)
!10003 = distinct !DILexicalBlock(scope: !10001, file: !1584, line: 821, column: 43)
!10004 = !DILocation(line: 826, column: 32, scope: !9992)
!10005 = !DILocation(line: 823, column: 2, scope: !10003)
!10006 = !DILocation(line: 826, column: 2, scope: !9992)
!10007 = !DILocation(line: 827, column: 1, scope: !9992)
!10008 = distinct !DISubprogram(name: "uart_stm32_irq_is_pending", scope: !1584, file: !1584, line: 829, type: !1478, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10009)
!10009 = !{!10010, !10011}
!10010 = !DILocalVariable(name: "dev", arg: 1, scope: !10008, file: !1584, line: 829, type: !1457)
!10011 = !DILocalVariable(name: "config", scope: !10008, file: !1584, line: 831, type: !9609)
!10012 = !DILocation(line: 0, scope: !10008)
!10013 = !DILocation(line: 831, column: 48, scope: !10008)
!10014 = !DILocation(line: 833, column: 46, scope: !10008)
!10015 = !DILocation(line: 833, column: 11, scope: !10008)
!10016 = !DILocation(line: 833, column: 53, scope: !10008)
!10017 = !DILocation(line: 834, column: 38, scope: !10008)
!10018 = !DILocation(line: 834, column: 4, scope: !10008)
!10019 = !DILocation(line: 834, column: 46, scope: !10008)
!10020 = !DILocation(line: 835, column: 37, scope: !10008)
!10021 = !DILocation(line: 835, column: 4, scope: !10008)
!10022 = !DILocation(line: 835, column: 44, scope: !10008)
!10023 = !DILocation(line: 836, column: 36, scope: !10008)
!10024 = !DILocation(line: 836, column: 4, scope: !10008)
!10025 = !DILocation(line: 833, column: 2, scope: !10008)
!10026 = distinct !DISubprogram(name: "uart_stm32_irq_update", scope: !1584, file: !1584, line: 839, type: !1478, scopeLine: 840, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10027)
!10027 = !{!10028}
!10028 = !DILocalVariable(name: "dev", arg: 1, scope: !10026, file: !1584, line: 839, type: !1457)
!10029 = !DILocation(line: 0, scope: !10026)
!10030 = !DILocation(line: 841, column: 2, scope: !10026)
!10031 = distinct !DISubprogram(name: "uart_stm32_irq_callback_set", scope: !1584, file: !1584, line: 844, type: !1522, scopeLine: 847, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10032)
!10032 = !{!10033, !10034, !10035, !10036}
!10033 = !DILocalVariable(name: "dev", arg: 1, scope: !10031, file: !1584, line: 844, type: !1457)
!10034 = !DILocalVariable(name: "cb", arg: 2, scope: !10031, file: !1584, line: 845, type: !1524)
!10035 = !DILocalVariable(name: "cb_data", arg: 3, scope: !10031, file: !1584, line: 846, type: !102)
!10036 = !DILocalVariable(name: "data", scope: !10031, file: !1584, line: 848, type: !9732)
!10037 = !DILocation(line: 0, scope: !10031)
!10038 = !DILocation(line: 848, column: 38, scope: !10031)
!10039 = !DILocation(line: 850, column: 8, scope: !10031)
!10040 = !DILocation(line: 850, column: 16, scope: !10031)
!10041 = !DILocation(line: 851, column: 8, scope: !10031)
!10042 = !DILocation(line: 851, column: 18, scope: !10031)
!10043 = !DILocation(line: 852, column: 1, scope: !10031)
!10044 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !10045, file: !10045, line: 1792, type: !10046, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10048)
!10045 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10046 = !DISubroutineType(types: !10047)
!10047 = !{!121, !1528}
!10048 = !{!10049}
!10049 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10044, file: !10045, line: 1792, type: !1528)
!10050 = !DILocation(line: 0, scope: !10044)
!10051 = !DILocation(line: 1794, column: 11, scope: !10044)
!10052 = !DILocation(line: 1794, column: 47, scope: !10044)
!10053 = !DILocation(line: 1794, column: 3, scope: !10044)
!10054 = distinct !DISubprogram(name: "LL_USART_IsEnabledIT_RXNE", scope: !10045, file: !10045, line: 2227, type: !10046, scopeLine: 2228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10055)
!10055 = !{!10056}
!10056 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10054, file: !10045, line: 2227, type: !1528)
!10057 = !DILocation(line: 0, scope: !10054)
!10058 = !DILocation(line: 2229, column: 11, scope: !10054)
!10059 = !DILocation(line: 2229, column: 51, scope: !10054)
!10060 = !DILocation(line: 2229, column: 3, scope: !10054)
!10061 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TC", scope: !10045, file: !10045, line: 1803, type: !10046, scopeLine: 1804, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10062)
!10062 = !{!10063}
!10063 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10061, file: !10045, line: 1803, type: !1528)
!10064 = !DILocation(line: 0, scope: !10061)
!10065 = !DILocation(line: 1805, column: 11, scope: !10061)
!10066 = !DILocation(line: 1805, column: 45, scope: !10061)
!10067 = !DILocation(line: 1805, column: 3, scope: !10061)
!10068 = distinct !DISubprogram(name: "LL_USART_IsEnabledIT_TC", scope: !10045, file: !10045, line: 2238, type: !10046, scopeLine: 2239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10069)
!10069 = !{!10070}
!10070 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10068, file: !10045, line: 2238, type: !1528)
!10071 = !DILocation(line: 0, scope: !10068)
!10072 = !DILocation(line: 2240, column: 11, scope: !10068)
!10073 = !DILocation(line: 2240, column: 49, scope: !10068)
!10074 = !DILocation(line: 2240, column: 3, scope: !10068)
!10075 = distinct !DISubprogram(name: "LL_USART_DisableIT_ERROR", scope: !10045, file: !10045, line: 2192, type: !10076, scopeLine: 2193, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10078)
!10076 = !DISubroutineType(types: !10077)
!10077 = !{null, !1528}
!10078 = !{!10079, !10080}
!10079 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10075, file: !10045, line: 2192, type: !1528)
!10080 = !DILocalVariable(name: "val", scope: !10081, file: !10045, line: 2194, type: !121)
!10081 = distinct !DILexicalBlock(scope: !10075, file: !10045, line: 2194, column: 3)
!10082 = !DILocation(line: 0, scope: !10075)
!10083 = !DILocation(line: 2194, column: 3, scope: !10081)
!10084 = !DILocalVariable(name: "addr", arg: 1, scope: !10085, file: !5983, line: 476, type: !1580)
!10085 = distinct !DISubprogram(name: "__LDREXW", scope: !5983, file: !5983, line: 476, type: !10086, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10088)
!10086 = !DISubroutineType(types: !10087)
!10087 = !{!121, !1580}
!10088 = !{!10084, !10089}
!10089 = !DILocalVariable(name: "result", scope: !10085, file: !5983, line: 478, type: !121)
!10090 = !DILocation(line: 0, scope: !10085, inlinedAt: !10091)
!10091 = distinct !DILocation(line: 2194, column: 3, scope: !10092)
!10092 = distinct !DILexicalBlock(scope: !10081, file: !10045, line: 2194, column: 3)
!10093 = !DILocation(line: 480, column: 4, scope: !10085, inlinedAt: !10091)
!10094 = !{i64 2945172}
!10095 = !DILocation(line: 2194, column: 3, scope: !10092)
!10096 = !DILocation(line: 0, scope: !10081)
!10097 = !DILocalVariable(name: "value", arg: 1, scope: !10098, file: !5983, line: 527, type: !121)
!10098 = distinct !DISubprogram(name: "__STREXW", scope: !5983, file: !5983, line: 527, type: !10099, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10101)
!10099 = !DISubroutineType(types: !10100)
!10100 = !{!121, !121, !1580}
!10101 = !{!10097, !10102, !10103}
!10102 = !DILocalVariable(name: "addr", arg: 2, scope: !10098, file: !5983, line: 527, type: !1580)
!10103 = !DILocalVariable(name: "result", scope: !10098, file: !5983, line: 529, type: !121)
!10104 = !DILocation(line: 0, scope: !10098, inlinedAt: !10105)
!10105 = distinct !DILocation(line: 2194, column: 3, scope: !10081)
!10106 = !DILocation(line: 531, column: 4, scope: !10098, inlinedAt: !10105)
!10107 = !{i64 2946608}
!10108 = distinct !{!10108, !10083, !10083}
!10109 = !DILocation(line: 2195, column: 1, scope: !10075)
!10110 = distinct !DISubprogram(name: "LL_USART_DisableIT_LBD", scope: !10045, file: !10045, line: 2177, type: !10076, scopeLine: 2178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10111)
!10111 = !{!10112}
!10112 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10110, file: !10045, line: 2177, type: !1528)
!10113 = !DILocation(line: 0, scope: !10110)
!10114 = !DILocation(line: 2179, column: 3, scope: !10110)
!10115 = !DILocation(line: 2180, column: 1, scope: !10110)
!10116 = distinct !DISubprogram(name: "LL_USART_DisableIT_PE", scope: !10045, file: !10045, line: 2164, type: !10076, scopeLine: 2165, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10117)
!10117 = !{!10118, !10119}
!10118 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10116, file: !10045, line: 2164, type: !1528)
!10119 = !DILocalVariable(name: "val", scope: !10120, file: !10045, line: 2166, type: !121)
!10120 = distinct !DILexicalBlock(scope: !10116, file: !10045, line: 2166, column: 3)
!10121 = !DILocation(line: 0, scope: !10116)
!10122 = !DILocation(line: 2166, column: 3, scope: !10120)
!10123 = !DILocation(line: 0, scope: !10085, inlinedAt: !10124)
!10124 = distinct !DILocation(line: 2166, column: 3, scope: !10125)
!10125 = distinct !DILexicalBlock(scope: !10120, file: !10045, line: 2166, column: 3)
!10126 = !DILocation(line: 480, column: 4, scope: !10085, inlinedAt: !10124)
!10127 = !DILocation(line: 2166, column: 3, scope: !10125)
!10128 = !DILocation(line: 0, scope: !10120)
!10129 = !DILocation(line: 0, scope: !10098, inlinedAt: !10130)
!10130 = distinct !DILocation(line: 2166, column: 3, scope: !10120)
!10131 = !DILocation(line: 531, column: 4, scope: !10098, inlinedAt: !10130)
!10132 = distinct !{!10132, !10122, !10122}
!10133 = !DILocation(line: 2167, column: 1, scope: !10116)
!10134 = distinct !DISubprogram(name: "LL_USART_EnableIT_ERROR", scope: !10045, file: !10045, line: 2096, type: !10076, scopeLine: 2097, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10135)
!10135 = !{!10136, !10137}
!10136 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10134, file: !10045, line: 2096, type: !1528)
!10137 = !DILocalVariable(name: "val", scope: !10138, file: !10045, line: 2098, type: !121)
!10138 = distinct !DILexicalBlock(scope: !10134, file: !10045, line: 2098, column: 3)
!10139 = !DILocation(line: 0, scope: !10134)
!10140 = !DILocation(line: 2098, column: 3, scope: !10138)
!10141 = !DILocation(line: 0, scope: !10085, inlinedAt: !10142)
!10142 = distinct !DILocation(line: 2098, column: 3, scope: !10143)
!10143 = distinct !DILexicalBlock(scope: !10138, file: !10045, line: 2098, column: 3)
!10144 = !DILocation(line: 480, column: 4, scope: !10085, inlinedAt: !10142)
!10145 = !DILocation(line: 2098, column: 3, scope: !10143)
!10146 = !DILocation(line: 0, scope: !10138)
!10147 = !DILocation(line: 0, scope: !10098, inlinedAt: !10148)
!10148 = distinct !DILocation(line: 2098, column: 3, scope: !10138)
!10149 = !DILocation(line: 531, column: 4, scope: !10098, inlinedAt: !10148)
!10150 = distinct !{!10150, !10140, !10140}
!10151 = !DILocation(line: 2099, column: 1, scope: !10134)
!10152 = distinct !DISubprogram(name: "LL_USART_EnableIT_LBD", scope: !10045, file: !10045, line: 2081, type: !10076, scopeLine: 2082, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10153)
!10153 = !{!10154}
!10154 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10152, file: !10045, line: 2081, type: !1528)
!10155 = !DILocation(line: 0, scope: !10152)
!10156 = !DILocation(line: 2083, column: 3, scope: !10152)
!10157 = !DILocation(line: 2084, column: 1, scope: !10152)
!10158 = distinct !DISubprogram(name: "LL_USART_EnableIT_PE", scope: !10045, file: !10045, line: 2068, type: !10076, scopeLine: 2069, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10159)
!10159 = !{!10160, !10161}
!10160 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10158, file: !10045, line: 2068, type: !1528)
!10161 = !DILocalVariable(name: "val", scope: !10162, file: !10045, line: 2070, type: !121)
!10162 = distinct !DILexicalBlock(scope: !10158, file: !10045, line: 2070, column: 3)
!10163 = !DILocation(line: 0, scope: !10158)
!10164 = !DILocation(line: 2070, column: 3, scope: !10162)
!10165 = !DILocation(line: 0, scope: !10085, inlinedAt: !10166)
!10166 = distinct !DILocation(line: 2070, column: 3, scope: !10167)
!10167 = distinct !DILexicalBlock(scope: !10162, file: !10045, line: 2070, column: 3)
!10168 = !DILocation(line: 480, column: 4, scope: !10085, inlinedAt: !10166)
!10169 = !DILocation(line: 2070, column: 3, scope: !10167)
!10170 = !DILocation(line: 0, scope: !10162)
!10171 = !DILocation(line: 0, scope: !10098, inlinedAt: !10172)
!10172 = distinct !DILocation(line: 2070, column: 3, scope: !10162)
!10173 = !DILocation(line: 531, column: 4, scope: !10098, inlinedAt: !10172)
!10174 = distinct !{!10174, !10164, !10164}
!10175 = !DILocation(line: 2071, column: 1, scope: !10158)
!10176 = distinct !DISubprogram(name: "LL_USART_DisableIT_RXNE", scope: !10045, file: !10045, line: 2131, type: !10076, scopeLine: 2132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10177)
!10177 = !{!10178, !10179}
!10178 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10176, file: !10045, line: 2131, type: !1528)
!10179 = !DILocalVariable(name: "val", scope: !10180, file: !10045, line: 2133, type: !121)
!10180 = distinct !DILexicalBlock(scope: !10176, file: !10045, line: 2133, column: 3)
!10181 = !DILocation(line: 0, scope: !10176)
!10182 = !DILocation(line: 2133, column: 3, scope: !10180)
!10183 = !DILocation(line: 0, scope: !10085, inlinedAt: !10184)
!10184 = distinct !DILocation(line: 2133, column: 3, scope: !10185)
!10185 = distinct !DILexicalBlock(scope: !10180, file: !10045, line: 2133, column: 3)
!10186 = !DILocation(line: 480, column: 4, scope: !10085, inlinedAt: !10184)
!10187 = !DILocation(line: 2133, column: 3, scope: !10185)
!10188 = !DILocation(line: 0, scope: !10180)
!10189 = !DILocation(line: 0, scope: !10098, inlinedAt: !10190)
!10190 = distinct !DILocation(line: 2133, column: 3, scope: !10180)
!10191 = !DILocation(line: 531, column: 4, scope: !10098, inlinedAt: !10190)
!10192 = distinct !{!10192, !10182, !10182}
!10193 = !DILocation(line: 2134, column: 1, scope: !10176)
!10194 = distinct !DISubprogram(name: "LL_USART_EnableIT_RXNE", scope: !10045, file: !10045, line: 2035, type: !10076, scopeLine: 2036, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10195)
!10195 = !{!10196, !10197}
!10196 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10194, file: !10045, line: 2035, type: !1528)
!10197 = !DILocalVariable(name: "val", scope: !10198, file: !10045, line: 2037, type: !121)
!10198 = distinct !DILexicalBlock(scope: !10194, file: !10045, line: 2037, column: 3)
!10199 = !DILocation(line: 0, scope: !10194)
!10200 = !DILocation(line: 2037, column: 3, scope: !10198)
!10201 = !DILocation(line: 0, scope: !10085, inlinedAt: !10202)
!10202 = distinct !DILocation(line: 2037, column: 3, scope: !10203)
!10203 = distinct !DILexicalBlock(scope: !10198, file: !10045, line: 2037, column: 3)
!10204 = !DILocation(line: 480, column: 4, scope: !10085, inlinedAt: !10202)
!10205 = !DILocation(line: 2037, column: 3, scope: !10203)
!10206 = !DILocation(line: 0, scope: !10198)
!10207 = !DILocation(line: 0, scope: !10098, inlinedAt: !10208)
!10208 = distinct !DILocation(line: 2037, column: 3, scope: !10198)
!10209 = !DILocation(line: 531, column: 4, scope: !10098, inlinedAt: !10208)
!10210 = distinct !{!10210, !10200, !10200}
!10211 = !DILocation(line: 2038, column: 1, scope: !10194)
!10212 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !10045, file: !10045, line: 1814, type: !10046, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10213)
!10213 = !{!10214}
!10214 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10212, file: !10045, line: 1814, type: !1528)
!10215 = !DILocation(line: 0, scope: !10212)
!10216 = !DILocation(line: 1816, column: 11, scope: !10212)
!10217 = !DILocation(line: 1816, column: 46, scope: !10212)
!10218 = !DILocation(line: 1816, column: 3, scope: !10212)
!10219 = distinct !DISubprogram(name: "LL_USART_DisableIT_TC", scope: !10045, file: !10045, line: 2142, type: !10076, scopeLine: 2143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10220)
!10220 = !{!10221, !10222}
!10221 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10219, file: !10045, line: 2142, type: !1528)
!10222 = !DILocalVariable(name: "val", scope: !10223, file: !10045, line: 2144, type: !121)
!10223 = distinct !DILexicalBlock(scope: !10219, file: !10045, line: 2144, column: 3)
!10224 = !DILocation(line: 0, scope: !10219)
!10225 = !DILocation(line: 2144, column: 3, scope: !10223)
!10226 = !DILocation(line: 0, scope: !10085, inlinedAt: !10227)
!10227 = distinct !DILocation(line: 2144, column: 3, scope: !10228)
!10228 = distinct !DILexicalBlock(scope: !10223, file: !10045, line: 2144, column: 3)
!10229 = !DILocation(line: 480, column: 4, scope: !10085, inlinedAt: !10227)
!10230 = !DILocation(line: 2144, column: 3, scope: !10228)
!10231 = !DILocation(line: 0, scope: !10223)
!10232 = !DILocation(line: 0, scope: !10098, inlinedAt: !10233)
!10233 = distinct !DILocation(line: 2144, column: 3, scope: !10223)
!10234 = !DILocation(line: 531, column: 4, scope: !10098, inlinedAt: !10233)
!10235 = distinct !{!10235, !10225, !10225}
!10236 = !DILocation(line: 2145, column: 1, scope: !10219)
!10237 = distinct !DISubprogram(name: "LL_USART_EnableIT_TC", scope: !10045, file: !10045, line: 2046, type: !10076, scopeLine: 2047, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10238)
!10238 = !{!10239, !10240}
!10239 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10237, file: !10045, line: 2046, type: !1528)
!10240 = !DILocalVariable(name: "val", scope: !10241, file: !10045, line: 2048, type: !121)
!10241 = distinct !DILexicalBlock(scope: !10237, file: !10045, line: 2048, column: 3)
!10242 = !DILocation(line: 0, scope: !10237)
!10243 = !DILocation(line: 2048, column: 3, scope: !10241)
!10244 = !DILocation(line: 0, scope: !10085, inlinedAt: !10245)
!10245 = distinct !DILocation(line: 2048, column: 3, scope: !10246)
!10246 = distinct !DILexicalBlock(scope: !10241, file: !10045, line: 2048, column: 3)
!10247 = !DILocation(line: 480, column: 4, scope: !10085, inlinedAt: !10245)
!10248 = !DILocation(line: 2048, column: 3, scope: !10246)
!10249 = !DILocation(line: 0, scope: !10241)
!10250 = !DILocation(line: 0, scope: !10098, inlinedAt: !10251)
!10251 = distinct !DILocation(line: 2048, column: 3, scope: !10241)
!10252 = !DILocation(line: 531, column: 4, scope: !10098, inlinedAt: !10251)
!10253 = distinct !{!10253, !10243, !10243}
!10254 = !DILocation(line: 2049, column: 1, scope: !10237)
!10255 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !10045, file: !10045, line: 2403, type: !10256, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10258)
!10256 = !DISubroutineType(types: !10257)
!10257 = !{!154, !1528}
!10258 = !{!10259}
!10259 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10255, file: !10045, line: 2403, type: !1528)
!10260 = !DILocation(line: 0, scope: !10255)
!10261 = !DILocation(line: 2405, column: 20, scope: !10255)
!10262 = !DILocation(line: 2405, column: 10, scope: !10255)
!10263 = !DILocation(line: 2405, column: 3, scope: !10255)
!10264 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !10045, file: !10045, line: 1770, type: !10046, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10265)
!10265 = !{!10266}
!10266 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10264, file: !10045, line: 1770, type: !1528)
!10267 = !DILocation(line: 0, scope: !10264)
!10268 = !DILocation(line: 1772, column: 11, scope: !10264)
!10269 = !DILocation(line: 1772, column: 46, scope: !10264)
!10270 = !DILocation(line: 1772, column: 3, scope: !10264)
!10271 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !10045, file: !10045, line: 1934, type: !10076, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10272)
!10272 = !{!10273, !10274}
!10273 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10271, file: !10045, line: 1934, type: !1528)
!10274 = !DILocalVariable(name: "tmpreg", scope: !10271, file: !10045, line: 1936, type: !120)
!10275 = !DILocation(line: 0, scope: !10271)
!10276 = !DILocation(line: 1936, column: 3, scope: !10271)
!10277 = !DILocation(line: 1936, column: 17, scope: !10271)
!10278 = !DILocation(line: 1937, column: 20, scope: !10271)
!10279 = !DILocation(line: 1937, column: 10, scope: !10271)
!10280 = !DILocation(line: 1938, column: 10, scope: !10271)
!10281 = !DILocation(line: 1939, column: 20, scope: !10271)
!10282 = !DILocation(line: 1939, column: 10, scope: !10271)
!10283 = !DILocation(line: 1940, column: 10, scope: !10271)
!10284 = !DILocation(line: 1941, column: 1, scope: !10271)
!10285 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !10045, file: !10045, line: 2426, type: !10286, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10288)
!10286 = !DISubroutineType(types: !10287)
!10287 = !{null, !1528, !154}
!10288 = !{!10289, !10290}
!10289 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10285, file: !10045, line: 2426, type: !1528)
!10290 = !DILocalVariable(name: "Value", arg: 2, scope: !10285, file: !10045, line: 2426, type: !154)
!10291 = !DILocation(line: 0, scope: !10285)
!10292 = !DILocation(line: 2428, column: 16, scope: !10285)
!10293 = !DILocation(line: 2428, column: 11, scope: !10285)
!10294 = !DILocation(line: 2428, column: 14, scope: !10285)
!10295 = !DILocation(line: 2429, column: 1, scope: !10285)
!10296 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1584, file: !1584, line: 205, type: !10297, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10299)
!10297 = !DISubroutineType(types: !10298)
!10298 = !{!121, !1457}
!10299 = !{!10300, !10301}
!10300 = !DILocalVariable(name: "dev", arg: 1, scope: !10296, file: !1584, line: 205, type: !1457)
!10301 = !DILocalVariable(name: "config", scope: !10296, file: !1584, line: 207, type: !9609)
!10302 = !DILocation(line: 0, scope: !10296)
!10303 = !DILocation(line: 207, column: 48, scope: !10296)
!10304 = !DILocation(line: 209, column: 36, scope: !10296)
!10305 = !DILocation(line: 209, column: 9, scope: !10296)
!10306 = !DILocation(line: 209, column: 2, scope: !10296)
!10307 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1584, file: !1584, line: 270, type: !10308, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10310)
!10308 = !DISubroutineType(types: !10309)
!10309 = !{!1423, !121}
!10310 = !{!10311}
!10311 = !DILocalVariable(name: "parity", arg: 1, scope: !10307, file: !1584, line: 270, type: !121)
!10312 = !DILocation(line: 0, scope: !10307)
!10313 = !DILocation(line: 272, column: 2, scope: !10307)
!10314 = !DILocation(line: 281, column: 1, scope: !10307)
!10315 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1584, file: !1584, line: 220, type: !10297, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10316)
!10316 = !{!10317, !10318}
!10317 = !DILocalVariable(name: "dev", arg: 1, scope: !10315, file: !1584, line: 220, type: !1457)
!10318 = !DILocalVariable(name: "config", scope: !10315, file: !1584, line: 222, type: !9609)
!10319 = !DILocation(line: 0, scope: !10315)
!10320 = !DILocation(line: 222, column: 48, scope: !10315)
!10321 = !DILocation(line: 224, column: 44, scope: !10315)
!10322 = !DILocation(line: 224, column: 9, scope: !10315)
!10323 = !DILocation(line: 224, column: 2, scope: !10315)
!10324 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1584, file: !1584, line: 304, type: !10325, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10327)
!10325 = !DISubroutineType(types: !10326)
!10326 = !{!1437, !121}
!10327 = !{!10328}
!10328 = !DILocalVariable(name: "sb", arg: 1, scope: !10324, file: !1584, line: 304, type: !121)
!10329 = !DILocation(line: 0, scope: !10324)
!10330 = !DILocation(line: 306, column: 2, scope: !10324)
!10331 = !DILocation(line: 0, scope: !10332)
!10332 = distinct !DILexicalBlock(scope: !10324, file: !1584, line: 306, column: 14)
!10333 = !DILocation(line: 323, column: 1, scope: !10324)
!10334 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1584, file: !1584, line: 235, type: !10297, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10335)
!10335 = !{!10336, !10337}
!10336 = !DILocalVariable(name: "dev", arg: 1, scope: !10334, file: !1584, line: 235, type: !1457)
!10337 = !DILocalVariable(name: "config", scope: !10334, file: !1584, line: 237, type: !9609)
!10338 = !DILocation(line: 0, scope: !10334)
!10339 = !DILocation(line: 237, column: 48, scope: !10334)
!10340 = !DILocation(line: 239, column: 39, scope: !10334)
!10341 = !DILocation(line: 239, column: 9, scope: !10334)
!10342 = !DILocation(line: 239, column: 2, scope: !10334)
!10343 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1584, file: !1584, line: 355, type: !10344, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10346)
!10344 = !DISubroutineType(types: !10345)
!10345 = !{!1430, !121, !121}
!10346 = !{!10347, !10348}
!10347 = !DILocalVariable(name: "db", arg: 1, scope: !10343, file: !1584, line: 355, type: !121)
!10348 = !DILocalVariable(name: "p", arg: 2, scope: !10343, file: !1584, line: 356, type: !121)
!10349 = !DILocation(line: 0, scope: !10343)
!10350 = !DILocation(line: 358, column: 2, scope: !10343)
!10351 = !DILocation(line: 384, column: 1, scope: !10343)
!10352 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1584, file: !1584, line: 250, type: !10297, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10353)
!10353 = !{!10354, !10355}
!10354 = !DILocalVariable(name: "dev", arg: 1, scope: !10352, file: !1584, line: 250, type: !1457)
!10355 = !DILocalVariable(name: "config", scope: !10352, file: !1584, line: 252, type: !9609)
!10356 = !DILocation(line: 0, scope: !10352)
!10357 = !DILocation(line: 252, column: 48, scope: !10352)
!10358 = !DILocation(line: 254, column: 40, scope: !10352)
!10359 = !DILocation(line: 254, column: 9, scope: !10352)
!10360 = !DILocation(line: 254, column: 2, scope: !10352)
!10361 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1584, file: !1584, line: 409, type: !10362, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10364)
!10362 = !DISubroutineType(types: !10363)
!10363 = !{!1443, !121}
!10364 = !{!10365}
!10365 = !DILocalVariable(name: "fc", arg: 1, scope: !10361, file: !1584, line: 409, type: !121)
!10366 = !DILocation(line: 0, scope: !10361)
!10367 = !DILocation(line: 411, column: 9, scope: !10368)
!10368 = distinct !DILexicalBlock(scope: !10361, file: !1584, line: 411, column: 6)
!10369 = !DILocation(line: 416, column: 1, scope: !10361)
!10370 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !10045, file: !10045, line: 967, type: !10046, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10371)
!10371 = !{!10372}
!10372 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10370, file: !10045, line: 967, type: !1528)
!10373 = !DILocation(line: 0, scope: !10370)
!10374 = !DILocation(line: 969, column: 21, scope: !10370)
!10375 = !DILocation(line: 969, column: 3, scope: !10370)
!10376 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !10045, file: !10045, line: 601, type: !10046, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10377)
!10377 = !{!10378}
!10378 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10376, file: !10045, line: 601, type: !1528)
!10379 = !DILocation(line: 0, scope: !10376)
!10380 = !DILocation(line: 603, column: 21, scope: !10376)
!10381 = !DILocation(line: 603, column: 3, scope: !10376)
!10382 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !10045, file: !10045, line: 820, type: !10046, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10383)
!10383 = !{!10384}
!10384 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10382, file: !10045, line: 820, type: !1528)
!10385 = !DILocation(line: 0, scope: !10382)
!10386 = !DILocation(line: 822, column: 21, scope: !10382)
!10387 = !DILocation(line: 822, column: 3, scope: !10382)
!10388 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !10045, file: !10045, line: 547, type: !10046, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10389)
!10389 = !{!10390}
!10390 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10388, file: !10045, line: 547, type: !1528)
!10391 = !DILocation(line: 0, scope: !10388)
!10392 = !DILocation(line: 549, column: 21, scope: !10388)
!10393 = !DILocation(line: 549, column: 3, scope: !10388)
!10394 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1584, file: !1584, line: 257, type: !10395, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10397)
!10395 = !DISubroutineType(types: !10396)
!10396 = !{!121, !1423}
!10397 = !{!10398}
!10398 = !DILocalVariable(name: "parity", arg: 1, scope: !10394, file: !1584, line: 257, type: !1423)
!10399 = !DILocation(line: 0, scope: !10394)
!10400 = !DILocation(line: 259, column: 2, scope: !10394)
!10401 = !DILocation(line: 268, column: 1, scope: !10394)
!10402 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1584, file: !1584, line: 283, type: !10403, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10405)
!10403 = !DISubroutineType(types: !10404)
!10404 = !{!121, !1437}
!10405 = !{!10406}
!10406 = !DILocalVariable(name: "sb", arg: 1, scope: !10402, file: !1584, line: 283, type: !1437)
!10407 = !DILocation(line: 0, scope: !10402)
!10408 = !DILocation(line: 285, column: 2, scope: !10402)
!10409 = !DILocation(line: 0, scope: !10410)
!10410 = distinct !DILexicalBlock(scope: !10402, file: !1584, line: 285, column: 14)
!10411 = !DILocation(line: 302, column: 1, scope: !10402)
!10412 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1584, file: !1584, line: 325, type: !10413, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10415)
!10413 = !DISubroutineType(types: !10414)
!10414 = !{!121, !1430, !1423}
!10415 = !{!10416, !10417}
!10416 = !DILocalVariable(name: "db", arg: 1, scope: !10412, file: !1584, line: 325, type: !1430)
!10417 = !DILocalVariable(name: "p", arg: 2, scope: !10412, file: !1584, line: 326, type: !1423)
!10418 = !DILocation(line: 0, scope: !10412)
!10419 = !DILocation(line: 328, column: 2, scope: !10412)
!10420 = !DILocation(line: 353, column: 1, scope: !10412)
!10421 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1584, file: !1584, line: 393, type: !10422, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10424)
!10422 = !DISubroutineType(types: !10423)
!10423 = !{!121, !1443}
!10424 = !{!10425}
!10425 = !DILocalVariable(name: "fc", arg: 1, scope: !10421, file: !1584, line: 393, type: !1443)
!10426 = !DILocation(line: 0, scope: !10421)
!10427 = !DILocation(line: 395, column: 9, scope: !10428)
!10428 = distinct !DILexicalBlock(scope: !10421, file: !1584, line: 395, column: 6)
!10429 = !DILocation(line: 400, column: 1, scope: !10421)
!10430 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !10045, file: !10045, line: 424, type: !10076, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10431)
!10431 = !{!10432}
!10432 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10430, file: !10045, line: 424, type: !1528)
!10433 = !DILocation(line: 0, scope: !10430)
!10434 = !DILocation(line: 426, column: 3, scope: !10430)
!10435 = !DILocation(line: 427, column: 1, scope: !10430)
!10436 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1584, file: !1584, line: 197, type: !10437, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10439)
!10437 = !DISubroutineType(types: !10438)
!10438 = !{null, !1457, !121}
!10439 = !{!10440, !10441, !10442}
!10440 = !DILocalVariable(name: "dev", arg: 1, scope: !10436, file: !1584, line: 197, type: !1457)
!10441 = !DILocalVariable(name: "parity", arg: 2, scope: !10436, file: !1584, line: 198, type: !121)
!10442 = !DILocalVariable(name: "config", scope: !10436, file: !1584, line: 200, type: !9609)
!10443 = !DILocation(line: 0, scope: !10436)
!10444 = !DILocation(line: 200, column: 48, scope: !10436)
!10445 = !DILocation(line: 202, column: 29, scope: !10436)
!10446 = !DILocation(line: 202, column: 2, scope: !10436)
!10447 = !DILocation(line: 203, column: 1, scope: !10436)
!10448 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1584, file: !1584, line: 212, type: !10437, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10449)
!10449 = !{!10450, !10451, !10452}
!10450 = !DILocalVariable(name: "dev", arg: 1, scope: !10448, file: !1584, line: 212, type: !1457)
!10451 = !DILocalVariable(name: "stopbits", arg: 2, scope: !10448, file: !1584, line: 213, type: !121)
!10452 = !DILocalVariable(name: "config", scope: !10448, file: !1584, line: 215, type: !9609)
!10453 = !DILocation(line: 0, scope: !10448)
!10454 = !DILocation(line: 215, column: 48, scope: !10448)
!10455 = !DILocation(line: 217, column: 37, scope: !10448)
!10456 = !DILocation(line: 217, column: 2, scope: !10448)
!10457 = !DILocation(line: 218, column: 1, scope: !10448)
!10458 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1584, file: !1584, line: 227, type: !10437, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10459)
!10459 = !{!10460, !10461, !10462}
!10460 = !DILocalVariable(name: "dev", arg: 1, scope: !10458, file: !1584, line: 227, type: !1457)
!10461 = !DILocalVariable(name: "databits", arg: 2, scope: !10458, file: !1584, line: 228, type: !121)
!10462 = !DILocalVariable(name: "config", scope: !10458, file: !1584, line: 230, type: !9609)
!10463 = !DILocation(line: 0, scope: !10458)
!10464 = !DILocation(line: 230, column: 48, scope: !10458)
!10465 = !DILocation(line: 232, column: 32, scope: !10458)
!10466 = !DILocation(line: 232, column: 2, scope: !10458)
!10467 = !DILocation(line: 233, column: 1, scope: !10458)
!10468 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1584, file: !1584, line: 242, type: !10437, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10469)
!10469 = !{!10470, !10471, !10472}
!10470 = !DILocalVariable(name: "dev", arg: 1, scope: !10468, file: !1584, line: 242, type: !1457)
!10471 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !10468, file: !1584, line: 243, type: !121)
!10472 = !DILocalVariable(name: "config", scope: !10468, file: !1584, line: 245, type: !9609)
!10473 = !DILocation(line: 0, scope: !10468)
!10474 = !DILocation(line: 245, column: 48, scope: !10468)
!10475 = !DILocation(line: 247, column: 33, scope: !10468)
!10476 = !DILocation(line: 247, column: 2, scope: !10468)
!10477 = !DILocation(line: 248, column: 1, scope: !10468)
!10478 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1584, file: !1584, line: 107, type: !10437, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10479)
!10479 = !{!10480, !10481, !10482, !10483, !10484}
!10480 = !DILocalVariable(name: "dev", arg: 1, scope: !10478, file: !1584, line: 107, type: !1457)
!10481 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !10478, file: !1584, line: 107, type: !121)
!10482 = !DILocalVariable(name: "config", scope: !10478, file: !1584, line: 109, type: !9609)
!10483 = !DILocalVariable(name: "data", scope: !10478, file: !1584, line: 110, type: !9732)
!10484 = !DILocalVariable(name: "clock_rate", scope: !10478, file: !1584, line: 112, type: !121)
!10485 = !DILocation(line: 0, scope: !10478)
!10486 = !DILocation(line: 109, column: 48, scope: !10478)
!10487 = !DILocation(line: 110, column: 38, scope: !10478)
!10488 = !DILocation(line: 112, column: 2, scope: !10478)
!10489 = !DILocation(line: 123, column: 36, scope: !10490)
!10490 = distinct !DILexicalBlock(scope: !10491, file: !1584, line: 123, column: 7)
!10491 = distinct !DILexicalBlock(scope: !10492, file: !1584, line: 122, column: 9)
!10492 = distinct !DILexicalBlock(scope: !10478, file: !1584, line: 115, column: 6)
!10493 = !DILocation(line: 124, column: 42, scope: !10490)
!10494 = !DILocation(line: 123, column: 7, scope: !10490)
!10495 = !DILocation(line: 125, column: 22, scope: !10490)
!10496 = !DILocation(line: 123, column: 7, scope: !10491)
!10497 = !DILocation(line: 176, column: 36, scope: !10478)
!10498 = !DILocation(line: 176, column: 3, scope: !10478)
!10499 = !DILocation(line: 179, column: 32, scope: !10478)
!10500 = !DILocation(line: 180, column: 10, scope: !10478)
!10501 = !DILocation(line: 179, column: 3, scope: !10478)
!10502 = !DILocation(line: 195, column: 1, scope: !10478)
!10503 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !10045, file: !10045, line: 410, type: !10076, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10504)
!10504 = !{!10505}
!10505 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10503, file: !10045, line: 410, type: !1528)
!10506 = !DILocation(line: 0, scope: !10503)
!10507 = !DILocation(line: 412, column: 3, scope: !10503)
!10508 = !DILocation(line: 413, column: 1, scope: !10503)
!10509 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !798, file: !798, line: 216, type: !1561, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10510)
!10510 = !{!10511, !10512, !10513, !10514}
!10511 = !DILocalVariable(name: "dev", arg: 1, scope: !10509, file: !798, line: 216, type: !1457)
!10512 = !DILocalVariable(name: "sys", arg: 2, scope: !10509, file: !798, line: 217, type: !893)
!10513 = !DILocalVariable(name: "rate", arg: 3, scope: !10509, file: !798, line: 218, type: !849)
!10514 = !DILocalVariable(name: "api", scope: !10509, file: !798, line: 220, type: !1539)
!10515 = !DILocation(line: 0, scope: !10509)
!10516 = !DILocation(line: 221, column: 49, scope: !10509)
!10517 = !DILocation(line: 223, column: 11, scope: !10518)
!10518 = distinct !DILexicalBlock(scope: !10509, file: !798, line: 223, column: 6)
!10519 = !DILocation(line: 223, column: 20, scope: !10518)
!10520 = !DILocation(line: 223, column: 6, scope: !10509)
!10521 = !DILocation(line: 227, column: 9, scope: !10509)
!10522 = !DILocation(line: 227, column: 2, scope: !10509)
!10523 = !DILocation(line: 228, column: 1, scope: !10509)
!10524 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !10045, file: !10045, line: 615, type: !10525, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10527)
!10525 = !DISubroutineType(types: !10526)
!10526 = !{null, !1528, !121}
!10527 = !{!10528, !10529}
!10528 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10524, file: !10045, line: 615, type: !1528)
!10529 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !10524, file: !10045, line: 615, type: !121)
!10530 = !DILocation(line: 0, scope: !10524)
!10531 = !DILocation(line: 617, column: 3, scope: !10524)
!10532 = !DILocation(line: 618, column: 1, scope: !10524)
!10533 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !10045, file: !10045, line: 1020, type: !10534, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10536)
!10534 = !DISubroutineType(types: !10535)
!10535 = !{null, !1528, !121, !121, !121}
!10536 = !{!10537, !10538, !10539, !10540}
!10537 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10533, file: !10045, line: 1020, type: !1528)
!10538 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !10533, file: !10045, line: 1020, type: !121)
!10539 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !10533, file: !10045, line: 1020, type: !121)
!10540 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !10533, file: !10045, line: 1021, type: !121)
!10541 = !DILocation(line: 0, scope: !10533)
!10542 = !DILocation(line: 1029, column: 30, scope: !10543)
!10543 = distinct !DILexicalBlock(scope: !10544, file: !10045, line: 1028, column: 3)
!10544 = distinct !DILexicalBlock(scope: !10533, file: !10045, line: 1023, column: 7)
!10545 = !DILocation(line: 1029, column: 19, scope: !10543)
!10546 = !DILocation(line: 1029, column: 13, scope: !10543)
!10547 = !DILocation(line: 1029, column: 17, scope: !10543)
!10548 = !DILocation(line: 1031, column: 1, scope: !10533)
!10549 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !10045, file: !10045, line: 949, type: !10525, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10550)
!10550 = !{!10551, !10552}
!10551 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10549, file: !10045, line: 949, type: !1528)
!10552 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !10549, file: !10045, line: 949, type: !121)
!10553 = !DILocation(line: 0, scope: !10549)
!10554 = !DILocation(line: 951, column: 3, scope: !10549)
!10555 = !DILocation(line: 952, column: 1, scope: !10549)
!10556 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !10045, file: !10045, line: 588, type: !10525, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10557)
!10557 = !{!10558, !10559}
!10558 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10556, file: !10045, line: 588, type: !1528)
!10559 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10556, file: !10045, line: 588, type: !121)
!10560 = !DILocation(line: 0, scope: !10556)
!10561 = !DILocation(line: 590, column: 3, scope: !10556)
!10562 = !DILocation(line: 591, column: 1, scope: !10556)
!10563 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !10045, file: !10045, line: 805, type: !10525, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10564)
!10564 = !{!10565, !10566}
!10565 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10563, file: !10045, line: 805, type: !1528)
!10566 = !DILocalVariable(name: "StopBits", arg: 2, scope: !10563, file: !10045, line: 805, type: !121)
!10567 = !DILocation(line: 0, scope: !10563)
!10568 = !DILocation(line: 807, column: 3, scope: !10563)
!10569 = !DILocation(line: 808, column: 1, scope: !10563)
!10570 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !10045, file: !10045, line: 532, type: !10525, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10571)
!10571 = !{!10572, !10573}
!10572 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10570, file: !10045, line: 532, type: !1528)
!10573 = !DILocalVariable(name: "Parity", arg: 2, scope: !10570, file: !10045, line: 532, type: !121)
!10574 = !DILocation(line: 0, scope: !10570)
!10575 = !DILocation(line: 534, column: 3, scope: !10570)
!10576 = !DILocation(line: 535, column: 1, scope: !10570)
!10577 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !10045, file: !10045, line: 1737, type: !10046, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10578)
!10578 = !{!10579}
!10579 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10577, file: !10045, line: 1737, type: !1528)
!10580 = !DILocation(line: 0, scope: !10577)
!10581 = !DILocation(line: 1739, column: 11, scope: !10577)
!10582 = !DILocation(line: 1739, column: 3, scope: !10577)
!10583 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !10045, file: !10045, line: 1748, type: !10046, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10584)
!10584 = !{!10585}
!10585 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10583, file: !10045, line: 1748, type: !1528)
!10586 = !DILocation(line: 0, scope: !10583)
!10587 = !DILocation(line: 1750, column: 11, scope: !10583)
!10588 = !DILocation(line: 1750, column: 45, scope: !10583)
!10589 = !DILocation(line: 1750, column: 3, scope: !10583)
!10590 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !10045, file: !10045, line: 1827, type: !10046, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10591)
!10591 = !{!10592}
!10592 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10590, file: !10045, line: 1827, type: !1528)
!10593 = !DILocation(line: 0, scope: !10590)
!10594 = !DILocation(line: 1829, column: 11, scope: !10590)
!10595 = !DILocation(line: 1829, column: 46, scope: !10590)
!10596 = !DILocation(line: 1829, column: 3, scope: !10590)
!10597 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !10045, file: !10045, line: 1992, type: !10076, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10598)
!10598 = !{!10599}
!10599 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10597, file: !10045, line: 1992, type: !1528)
!10600 = !DILocation(line: 0, scope: !10597)
!10601 = !DILocation(line: 1994, column: 3, scope: !10597)
!10602 = !DILocation(line: 1995, column: 1, scope: !10597)
!10603 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !10045, file: !10045, line: 1877, type: !10076, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10604)
!10604 = !{!10605, !10606}
!10605 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10603, file: !10045, line: 1877, type: !1528)
!10606 = !DILocalVariable(name: "tmpreg", scope: !10603, file: !10045, line: 1879, type: !120)
!10607 = !DILocation(line: 0, scope: !10603)
!10608 = !DILocation(line: 1879, column: 3, scope: !10603)
!10609 = !DILocation(line: 1879, column: 17, scope: !10603)
!10610 = !DILocation(line: 1880, column: 20, scope: !10603)
!10611 = !DILocation(line: 1880, column: 10, scope: !10603)
!10612 = !DILocation(line: 1881, column: 10, scope: !10603)
!10613 = !DILocation(line: 1882, column: 20, scope: !10603)
!10614 = !DILocation(line: 1882, column: 10, scope: !10603)
!10615 = !DILocation(line: 1883, column: 10, scope: !10603)
!10616 = !DILocation(line: 1884, column: 1, scope: !10603)
!10617 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !10045, file: !10045, line: 1896, type: !10076, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10618)
!10618 = !{!10619, !10620}
!10619 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10617, file: !10045, line: 1896, type: !1528)
!10620 = !DILocalVariable(name: "tmpreg", scope: !10617, file: !10045, line: 1898, type: !120)
!10621 = !DILocation(line: 0, scope: !10617)
!10622 = !DILocation(line: 1898, column: 3, scope: !10617)
!10623 = !DILocation(line: 1898, column: 17, scope: !10617)
!10624 = !DILocation(line: 1899, column: 20, scope: !10617)
!10625 = !DILocation(line: 1899, column: 10, scope: !10617)
!10626 = !DILocation(line: 1900, column: 10, scope: !10617)
!10627 = !DILocation(line: 1901, column: 20, scope: !10617)
!10628 = !DILocation(line: 1901, column: 10, scope: !10617)
!10629 = !DILocation(line: 1902, column: 10, scope: !10617)
!10630 = !DILocation(line: 1903, column: 1, scope: !10617)
!10631 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !10045, file: !10045, line: 1915, type: !10076, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10632)
!10632 = !{!10633, !10634}
!10633 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10631, file: !10045, line: 1915, type: !1528)
!10634 = !DILocalVariable(name: "tmpreg", scope: !10631, file: !10045, line: 1917, type: !120)
!10635 = !DILocation(line: 0, scope: !10631)
!10636 = !DILocation(line: 1917, column: 3, scope: !10631)
!10637 = !DILocation(line: 1917, column: 17, scope: !10631)
!10638 = !DILocation(line: 1918, column: 20, scope: !10631)
!10639 = !DILocation(line: 1918, column: 10, scope: !10631)
!10640 = !DILocation(line: 1919, column: 10, scope: !10631)
!10641 = !DILocation(line: 1920, column: 20, scope: !10631)
!10642 = !DILocation(line: 1920, column: 10, scope: !10631)
!10643 = !DILocation(line: 1921, column: 10, scope: !10631)
!10644 = !DILocation(line: 1922, column: 1, scope: !10631)
!10645 = !DILocation(line: 0, scope: !1654)
!10646 = !DILocation(line: 1914, column: 1, scope: !10647)
!10647 = distinct !DILexicalBlock(scope: !1654, file: !1584, line: 1914, column: 1)
!10648 = !DILocation(line: 1914, column: 1, scope: !1654)
!10649 = !DILocation(line: 0, scope: !1703)
!10650 = !DILocation(line: 1914, column: 1, scope: !10651)
!10651 = distinct !DILexicalBlock(scope: !1703, file: !1584, line: 1914, column: 1)
!10652 = !DILocation(line: 1914, column: 1, scope: !1703)
!10653 = !DILocation(line: 0, scope: !1720)
!10654 = !DILocation(line: 1914, column: 1, scope: !10655)
!10655 = distinct !DILexicalBlock(scope: !1720, file: !1584, line: 1914, column: 1)
!10656 = !DILocation(line: 1914, column: 1, scope: !1720)
!10657 = distinct !DISubprogram(name: "uart_stm32_isr", scope: !1584, file: !1584, line: 987, type: !1508, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10658)
!10658 = !{!10659, !10660}
!10659 = !DILocalVariable(name: "dev", arg: 1, scope: !10657, file: !1584, line: 987, type: !1457)
!10660 = !DILocalVariable(name: "data", scope: !10657, file: !1584, line: 989, type: !9732)
!10661 = !DILocation(line: 0, scope: !10657)
!10662 = !DILocation(line: 989, column: 38, scope: !10657)
!10663 = !DILocation(line: 1014, column: 12, scope: !10664)
!10664 = distinct !DILexicalBlock(scope: !10657, file: !1584, line: 1014, column: 6)
!10665 = !DILocation(line: 1014, column: 6, scope: !10664)
!10666 = !DILocation(line: 1014, column: 6, scope: !10657)
!10667 = !DILocation(line: 1015, column: 28, scope: !10668)
!10668 = distinct !DILexicalBlock(scope: !10664, file: !1584, line: 1014, column: 21)
!10669 = !DILocation(line: 1015, column: 3, scope: !10668)
!10670 = !DILocation(line: 1016, column: 2, scope: !10668)
!10671 = !DILocation(line: 1059, column: 1, scope: !10657)
!10672 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1584, file: !1584, line: 1583, type: !1478, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10673)
!10673 = !{!10674, !10675, !10676, !10677, !10678, !10679}
!10674 = !DILocalVariable(name: "dev", arg: 1, scope: !10672, file: !1584, line: 1583, type: !1457)
!10675 = !DILocalVariable(name: "config", scope: !10672, file: !1584, line: 1585, type: !9609)
!10676 = !DILocalVariable(name: "data", scope: !10672, file: !1584, line: 1586, type: !9732)
!10677 = !DILocalVariable(name: "ll_parity", scope: !10672, file: !1584, line: 1587, type: !121)
!10678 = !DILocalVariable(name: "ll_datawidth", scope: !10672, file: !1584, line: 1588, type: !121)
!10679 = !DILocalVariable(name: "err", scope: !10672, file: !1584, line: 1589, type: !103)
!10680 = !DILocation(line: 0, scope: !10672)
!10681 = !DILocation(line: 1585, column: 48, scope: !10672)
!10682 = !DILocation(line: 1586, column: 38, scope: !10672)
!10683 = !DILocation(line: 1591, column: 2, scope: !10672)
!10684 = !DILocation(line: 1593, column: 29, scope: !10685)
!10685 = distinct !DILexicalBlock(scope: !10672, file: !1584, line: 1593, column: 6)
!10686 = !DILocation(line: 1593, column: 7, scope: !10685)
!10687 = !DILocation(line: 1593, column: 6, scope: !10672)
!10688 = !DILocation(line: 1599, column: 31, scope: !10672)
!10689 = !DILocation(line: 1599, column: 71, scope: !10672)
!10690 = !DILocation(line: 1599, column: 8, scope: !10672)
!10691 = !DILocation(line: 1600, column: 10, scope: !10692)
!10692 = distinct !DILexicalBlock(scope: !10672, file: !1584, line: 1600, column: 6)
!10693 = !DILocation(line: 1600, column: 6, scope: !10672)
!10694 = !DILocation(line: 1616, column: 36, scope: !10672)
!10695 = !DILocation(line: 1616, column: 8, scope: !10672)
!10696 = !DILocation(line: 1617, column: 10, scope: !10697)
!10697 = distinct !DILexicalBlock(scope: !10672, file: !1584, line: 1617, column: 6)
!10698 = !DILocation(line: 1617, column: 6, scope: !10672)
!10699 = !DILocation(line: 1621, column: 27, scope: !10672)
!10700 = !DILocation(line: 1621, column: 2, scope: !10672)
!10701 = !DILocation(line: 1624, column: 40, scope: !10672)
!10702 = !DILocation(line: 1624, column: 2, scope: !10672)
!10703 = !DILocation(line: 1630, column: 14, scope: !10704)
!10704 = distinct !DILexicalBlock(scope: !10672, file: !1584, line: 1630, column: 6)
!10705 = !DILocation(line: 1630, column: 6, scope: !10672)
!10706 = !DILocation(line: 1638, column: 2, scope: !10707)
!10707 = distinct !DILexicalBlock(scope: !10708, file: !1584, line: 1634, column: 34)
!10708 = distinct !DILexicalBlock(scope: !10704, file: !1584, line: 1634, column: 13)
!10709 = !DILocation(line: 0, scope: !10704)
!10710 = !DILocation(line: 1649, column: 35, scope: !10672)
!10711 = !DILocation(line: 1649, column: 2, scope: !10672)
!10712 = !DILocation(line: 1654, column: 14, scope: !10713)
!10713 = distinct !DILexicalBlock(scope: !10672, file: !1584, line: 1654, column: 6)
!10714 = !DILocation(line: 1654, column: 6, scope: !10672)
!10715 = !DILocation(line: 1655, column: 3, scope: !10716)
!10716 = distinct !DILexicalBlock(scope: !10713, file: !1584, line: 1654, column: 31)
!10717 = !DILocation(line: 1656, column: 2, scope: !10716)
!10718 = !DILocation(line: 1659, column: 37, scope: !10672)
!10719 = !DILocation(line: 1659, column: 2, scope: !10672)
!10720 = !DILocation(line: 1662, column: 14, scope: !10721)
!10721 = distinct !DILexicalBlock(scope: !10672, file: !1584, line: 1662, column: 6)
!10722 = !DILocation(line: 1662, column: 6, scope: !10672)
!10723 = !DILocation(line: 1663, column: 37, scope: !10724)
!10724 = distinct !DILexicalBlock(scope: !10721, file: !1584, line: 1662, column: 27)
!10725 = !DILocation(line: 1663, column: 3, scope: !10724)
!10726 = !DILocation(line: 1664, column: 2, scope: !10724)
!10727 = !DILocation(line: 1684, column: 26, scope: !10672)
!10728 = !DILocation(line: 1684, column: 2, scope: !10672)
!10729 = !DILocation(line: 1701, column: 10, scope: !10672)
!10730 = !DILocation(line: 1701, column: 2, scope: !10672)
!10731 = !DILocation(line: 1722, column: 2, scope: !10672)
!10732 = !DILocation(line: 1724, column: 1, scope: !10672)
!10733 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1584, file: !1584, line: 651, type: !1508, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10734)
!10734 = !{!10735, !10736, !10737}
!10735 = !DILocalVariable(name: "dev", arg: 1, scope: !10733, file: !1584, line: 651, type: !1457)
!10736 = !DILocalVariable(name: "data", scope: !10733, file: !1584, line: 653, type: !9732)
!10737 = !DILocalVariable(name: "clk", scope: !10733, file: !1584, line: 654, type: !10738)
!10738 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1457)
!10739 = !DILocation(line: 0, scope: !10733)
!10740 = !DILocation(line: 653, column: 38, scope: !10733)
!10741 = !DILocation(line: 656, column: 8, scope: !10733)
!10742 = !DILocation(line: 656, column: 14, scope: !10733)
!10743 = !DILocation(line: 657, column: 1, scope: !10733)
!10744 = distinct !DISubprogram(name: "device_is_ready", scope: !8191, file: !8191, line: 47, type: !10745, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10747)
!10745 = !DISubroutineType(types: !10746)
!10746 = !{!157, !1457}
!10747 = !{!10748}
!10748 = !DILocalVariable(name: "dev", arg: 1, scope: !10744, file: !8191, line: 47, type: !1457)
!10749 = !DILocation(line: 0, scope: !10744)
!10750 = !DILocation(line: 55, column: 2, scope: !10751)
!10751 = distinct !DILexicalBlock(scope: !10744, file: !8191, line: 55, column: 2)
!10752 = !{i64 2154447067}
!10753 = !DILocation(line: 56, column: 9, scope: !10744)
!10754 = !DILocation(line: 56, column: 2, scope: !10744)
!10755 = distinct !DISubprogram(name: "clock_control_on", scope: !798, file: !798, line: 123, type: !1546, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10756)
!10756 = !{!10757, !10758, !10759}
!10757 = !DILocalVariable(name: "dev", arg: 1, scope: !10755, file: !798, line: 123, type: !1457)
!10758 = !DILocalVariable(name: "sys", arg: 2, scope: !10755, file: !798, line: 124, type: !893)
!10759 = !DILocalVariable(name: "api", scope: !10755, file: !798, line: 126, type: !1539)
!10760 = !DILocation(line: 0, scope: !10755)
!10761 = !DILocation(line: 127, column: 49, scope: !10755)
!10762 = !DILocation(line: 129, column: 14, scope: !10755)
!10763 = !DILocation(line: 129, column: 9, scope: !10755)
!10764 = !DILocation(line: 129, column: 2, scope: !10755)
!10765 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1627, file: !1627, line: 342, type: !10766, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10768)
!10766 = !DISubroutineType(types: !10767)
!10767 = !{!103, !1690, !154}
!10768 = !{!10769, !10770, !10771, !10772}
!10769 = !DILocalVariable(name: "config", arg: 1, scope: !10765, file: !1627, line: 342, type: !1690)
!10770 = !DILocalVariable(name: "id", arg: 2, scope: !10765, file: !1627, line: 343, type: !154)
!10771 = !DILocalVariable(name: "ret", scope: !10765, file: !1627, line: 345, type: !103)
!10772 = !DILocalVariable(name: "state", scope: !10765, file: !1627, line: 346, type: !1630)
!10773 = !DILocation(line: 0, scope: !10765)
!10774 = !DILocation(line: 346, column: 2, scope: !10765)
!10775 = !DILocation(line: 348, column: 8, scope: !10765)
!10776 = !DILocation(line: 349, column: 10, scope: !10777)
!10777 = distinct !DILexicalBlock(scope: !10765, file: !1627, line: 349, column: 6)
!10778 = !DILocation(line: 349, column: 6, scope: !10765)
!10779 = !DILocation(line: 353, column: 44, scope: !10765)
!10780 = !DILocation(line: 353, column: 9, scope: !10765)
!10781 = !DILocation(line: 353, column: 2, scope: !10765)
!10782 = !DILocation(line: 354, column: 1, scope: !10765)
!10783 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !10045, file: !10045, line: 497, type: !10525, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10784)
!10784 = !{!10785, !10786, !10787}
!10785 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10783, file: !10045, line: 497, type: !1528)
!10786 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !10783, file: !10045, line: 497, type: !121)
!10787 = !DILocalVariable(name: "val", scope: !10788, file: !10045, line: 499, type: !121)
!10788 = distinct !DILexicalBlock(scope: !10783, file: !10045, line: 499, column: 3)
!10789 = !DILocation(line: 0, scope: !10783)
!10790 = !DILocation(line: 499, column: 3, scope: !10788)
!10791 = !DILocation(line: 0, scope: !10085, inlinedAt: !10792)
!10792 = distinct !DILocation(line: 499, column: 3, scope: !10793)
!10793 = distinct !DILexicalBlock(scope: !10788, file: !10045, line: 499, column: 3)
!10794 = !DILocation(line: 480, column: 4, scope: !10085, inlinedAt: !10792)
!10795 = !DILocation(line: 499, column: 3, scope: !10793)
!10796 = !DILocation(line: 0, scope: !10788)
!10797 = !DILocation(line: 0, scope: !10098, inlinedAt: !10798)
!10798 = distinct !DILocation(line: 499, column: 3, scope: !10788)
!10799 = !DILocation(line: 531, column: 4, scope: !10098, inlinedAt: !10798)
!10800 = distinct !{!10800, !10790, !10790}
!10801 = !DILocation(line: 500, column: 1, scope: !10783)
!10802 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !10045, file: !10045, line: 850, type: !10534, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10803)
!10803 = !{!10804, !10805, !10806, !10807}
!10804 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10802, file: !10045, line: 850, type: !1528)
!10805 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10802, file: !10045, line: 850, type: !121)
!10806 = !DILocalVariable(name: "Parity", arg: 3, scope: !10802, file: !10045, line: 850, type: !121)
!10807 = !DILocalVariable(name: "StopBits", arg: 4, scope: !10802, file: !10045, line: 851, type: !121)
!10808 = !DILocation(line: 0, scope: !10802)
!10809 = !DILocation(line: 853, column: 3, scope: !10802)
!10810 = !DILocation(line: 854, column: 3, scope: !10802)
!10811 = !DILocation(line: 855, column: 1, scope: !10802)
!10812 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !10045, file: !10045, line: 1337, type: !10076, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10813)
!10813 = !{!10814}
!10814 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10812, file: !10045, line: 1337, type: !1528)
!10815 = !DILocation(line: 0, scope: !10812)
!10816 = !DILocation(line: 1339, column: 3, scope: !10812)
!10817 = !DILocation(line: 1340, column: 1, scope: !10812)
!10818 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1627, file: !1627, line: 316, type: !10819, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10821)
!10819 = !DISubroutineType(types: !10820)
!10820 = !{!103, !1690, !1630}
!10821 = !{!10822, !10823, !10824}
!10822 = !DILocalVariable(name: "config", arg: 1, scope: !10818, file: !1627, line: 317, type: !1690)
!10823 = !DILocalVariable(name: "state", arg: 2, scope: !10818, file: !1627, line: 318, type: !1630)
!10824 = !DILocalVariable(name: "reg", scope: !10818, file: !1627, line: 320, type: !22)
!10825 = !DILocation(line: 0, scope: !10818)
!10826 = !DILocation(line: 329, column: 39, scope: !10818)
!10827 = !DILocation(line: 329, column: 52, scope: !10818)
!10828 = !DILocation(line: 329, column: 9, scope: !10818)
!10829 = !DILocation(line: 329, column: 2, scope: !10818)
!10830 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !10745, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !10831)
!10831 = !{!10832}
!10832 = !DILocalVariable(name: "dev", arg: 1, scope: !10830, file: !141, line: 730, type: !1457)
!10833 = !DILocation(line: 0, scope: !10830)
!10834 = !DILocation(line: 732, column: 9, scope: !10830)
!10835 = !DILocation(line: 732, column: 2, scope: !10830)
!10836 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1805, file: !1805, line: 270, type: !1811, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1727, retainedNodes: !10837)
!10837 = !{!10838}
!10838 = !DILocalVariable(name: "dev", arg: 1, scope: !10836, file: !1805, line: 270, type: !1813)
!10839 = !DILocation(line: 0, scope: !10836)
!10840 = !DILocation(line: 274, column: 2, scope: !10836)
!10841 = !DILocation(line: 275, column: 12, scope: !10836)
!10842 = !DILocation(line: 276, column: 15, scope: !10836)
!10843 = !DILocation(line: 277, column: 16, scope: !10836)
!10844 = !DILocation(line: 278, column: 15, scope: !10836)
!10845 = !DILocation(line: 279, column: 16, scope: !10836)
!10846 = !DILocation(line: 282, column: 2, scope: !10836)
!10847 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !515, file: !515, line: 1814, type: !6017, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1727, retainedNodes: !10848)
!10848 = !{!10849, !10850}
!10849 = !DILocalVariable(name: "IRQn", arg: 1, scope: !10847, file: !515, line: 1814, type: !750)
!10850 = !DILocalVariable(name: "priority", arg: 2, scope: !10847, file: !515, line: 1814, type: !121)
!10851 = !DILocation(line: 0, scope: !10847)
!10852 = !DILocation(line: 1822, column: 46, scope: !10853)
!10853 = distinct !DILexicalBlock(scope: !10854, file: !515, line: 1821, column: 3)
!10854 = distinct !DILexicalBlock(scope: !10847, file: !515, line: 1816, column: 7)
!10855 = !DILocation(line: 1824, column: 1, scope: !10847)
!10856 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1805, file: !1805, line: 118, type: !5920, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1727, retainedNodes: !10857)
!10857 = !{!10858, !10859}
!10858 = !DILocalVariable(name: "arg", arg: 1, scope: !10856, file: !1805, line: 118, type: !102)
!10859 = !DILocalVariable(name: "dticks", scope: !10856, file: !1805, line: 121, type: !121)
!10860 = !DILocation(line: 0, scope: !10856)
!10861 = !DILocation(line: 124, column: 2, scope: !10856)
!10862 = !DILocation(line: 129, column: 17, scope: !10856)
!10863 = !DILocation(line: 129, column: 14, scope: !10856)
!10864 = !DILocation(line: 130, column: 15, scope: !10856)
!10865 = !DILocation(line: 145, column: 27, scope: !10866)
!10866 = distinct !DILexicalBlock(scope: !10867, file: !1805, line: 132, column: 16)
!10867 = distinct !DILexicalBlock(scope: !10856, file: !1805, line: 132, column: 6)
!10868 = !DILocation(line: 145, column: 25, scope: !10866)
!10869 = !DILocation(line: 145, column: 45, scope: !10866)
!10870 = !DILocation(line: 146, column: 30, scope: !10866)
!10871 = !DILocation(line: 146, column: 20, scope: !10866)
!10872 = !DILocation(line: 147, column: 3, scope: !10866)
!10873 = !DILocation(line: 151, column: 2, scope: !10856)
!10874 = !DILocation(line: 152, column: 1, scope: !10856)
!10875 = distinct !DISubprogram(name: "elapsed", scope: !1805, file: !1805, line: 85, type: !6064, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1727, retainedNodes: !10876)
!10876 = !{!10877, !10878, !10879}
!10877 = !DILocalVariable(name: "val1", scope: !10875, file: !1805, line: 87, type: !121)
!10878 = !DILocalVariable(name: "ctrl", scope: !10875, file: !1805, line: 88, type: !121)
!10879 = !DILocalVariable(name: "val2", scope: !10875, file: !1805, line: 89, type: !121)
!10880 = !DILocation(line: 87, column: 27, scope: !10875)
!10881 = !DILocation(line: 0, scope: !10875)
!10882 = !DILocation(line: 88, column: 27, scope: !10875)
!10883 = !DILocation(line: 89, column: 27, scope: !10875)
!10884 = !DILocation(line: 105, column: 12, scope: !10885)
!10885 = distinct !DILexicalBlock(scope: !10875, file: !1805, line: 105, column: 6)
!10886 = !DILocation(line: 106, column: 6, scope: !10885)
!10887 = !DILocation(line: 107, column: 16, scope: !10888)
!10888 = distinct !DILexicalBlock(scope: !10885, file: !1805, line: 106, column: 24)
!10889 = !DILocation(line: 111, column: 18, scope: !10888)
!10890 = !DILocation(line: 112, column: 2, scope: !10888)
!10891 = !DILocation(line: 114, column: 20, scope: !10875)
!10892 = !DILocation(line: 114, column: 30, scope: !10875)
!10893 = !DILocation(line: 114, column: 28, scope: !10875)
!10894 = !DILocation(line: 114, column: 2, scope: !10875)
!10895 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1805, file: !1805, line: 154, type: !10896, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1727, retainedNodes: !10898)
!10896 = !DISubroutineType(types: !10897)
!10897 = !{null, !724, !157}
!10898 = !{!10899, !10900, !10901, !10902, !10903, !10904, !10905, !10910, !10911}
!10899 = !DILocalVariable(name: "ticks", arg: 1, scope: !10895, file: !1805, line: 154, type: !724)
!10900 = !DILocalVariable(name: "idle", arg: 2, scope: !10895, file: !1805, line: 154, type: !157)
!10901 = !DILocalVariable(name: "delay", scope: !10895, file: !1805, line: 169, type: !121)
!10902 = !DILocalVariable(name: "val1", scope: !10895, file: !1805, line: 170, type: !121)
!10903 = !DILocalVariable(name: "val2", scope: !10895, file: !1805, line: 170, type: !121)
!10904 = !DILocalVariable(name: "last_load_", scope: !10895, file: !1805, line: 171, type: !121)
!10905 = !DILocalVariable(name: "key", scope: !10895, file: !1805, line: 176, type: !10906)
!10906 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !316, line: 106, baseType: !10907)
!10907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !316, line: 32, size: 32, elements: !10908)
!10908 = !{!10909}
!10909 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !10907, file: !316, line: 33, baseType: !103, size: 32)
!10910 = !DILocalVariable(name: "pending", scope: !10895, file: !1805, line: 178, type: !121)
!10911 = !DILocalVariable(name: "unannounced", scope: !10895, file: !1805, line: 185, type: !121)
!10912 = !DILocation(line: 0, scope: !10895)
!10913 = !DILocation(line: 162, column: 49, scope: !10914)
!10914 = distinct !DILexicalBlock(scope: !10895, file: !1805, line: 162, column: 6)
!10915 = !DILocation(line: 163, column: 17, scope: !10916)
!10916 = distinct !DILexicalBlock(scope: !10914, file: !1805, line: 162, column: 78)
!10917 = !DILocation(line: 164, column: 13, scope: !10916)
!10918 = !DILocation(line: 165, column: 3, scope: !10916)
!10919 = !DILocation(line: 171, column: 24, scope: !10895)
!10920 = !DILocation(line: 173, column: 10, scope: !10895)
!10921 = !DILocation(line: 174, column: 10, scope: !10895)
!10922 = !DILocalVariable(name: "l", arg: 1, scope: !10923, file: !316, line: 136, type: !10926)
!10923 = distinct !DISubprogram(name: "k_spin_lock", scope: !316, file: !316, line: 136, type: !10924, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1727, retainedNodes: !10927)
!10924 = !DISubroutineType(types: !10925)
!10925 = !{!10906, !10926}
!10926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1831, size: 32)
!10927 = !{!10922, !10928}
!10928 = !DILocalVariable(name: "k", scope: !10923, file: !316, line: 139, type: !10906)
!10929 = !DILocation(line: 0, scope: !10923, inlinedAt: !10930)
!10930 = distinct !DILocation(line: 176, column: 25, scope: !10895)
!10931 = !DILocation(line: 55, column: 2, scope: !10932, inlinedAt: !10936)
!10932 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5768, file: !5768, line: 42, type: !5769, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1727, retainedNodes: !10933)
!10933 = !{!10934, !10935}
!10934 = !DILocalVariable(name: "key", scope: !10932, file: !5768, line: 44, type: !32)
!10935 = !DILocalVariable(name: "tmp", scope: !10932, file: !5768, line: 53, type: !32)
!10936 = distinct !DILocation(line: 145, column: 10, scope: !10923, inlinedAt: !10930)
!10937 = !{i64 2023020}
!10938 = !DILocation(line: 0, scope: !10932, inlinedAt: !10936)
!10939 = !DILocation(line: 178, column: 21, scope: !10895)
!10940 = !DILocation(line: 180, column: 18, scope: !10895)
!10941 = !DILocation(line: 182, column: 14, scope: !10895)
!10942 = !DILocation(line: 183, column: 15, scope: !10895)
!10943 = !DILocation(line: 185, column: 39, scope: !10895)
!10944 = !DILocation(line: 185, column: 37, scope: !10895)
!10945 = !DILocation(line: 187, column: 27, scope: !10946)
!10946 = distinct !DILexicalBlock(scope: !10895, file: !1805, line: 187, column: 6)
!10947 = !DILocation(line: 187, column: 6, scope: !10895)
!10948 = !DILocation(line: 202, column: 27, scope: !10949)
!10949 = distinct !DILexicalBlock(scope: !10946, file: !1805, line: 195, column: 9)
!10950 = !DILocation(line: 202, column: 48, scope: !10949)
!10951 = !DILocation(line: 203, column: 9, scope: !10949)
!10952 = !DILocation(line: 204, column: 11, scope: !10949)
!10953 = !DILocation(line: 205, column: 13, scope: !10954)
!10954 = distinct !DILexicalBlock(scope: !10949, file: !1805, line: 205, column: 7)
!10955 = !DILocation(line: 205, column: 7, scope: !10949)
!10956 = !DILocation(line: 0, scope: !10946)
!10957 = !DILocation(line: 212, column: 18, scope: !10895)
!10958 = !DILocation(line: 214, column: 28, scope: !10895)
!10959 = !DILocation(line: 214, column: 16, scope: !10895)
!10960 = !DILocation(line: 215, column: 15, scope: !10895)
!10961 = !DILocation(line: 227, column: 11, scope: !10962)
!10962 = distinct !DILexicalBlock(scope: !10895, file: !1805, line: 227, column: 6)
!10963 = !DILocation(line: 227, column: 6, scope: !10895)
!10964 = !DILocation(line: 228, column: 15, scope: !10965)
!10965 = distinct !DILexicalBlock(scope: !10962, file: !1805, line: 227, column: 19)
!10966 = !DILocation(line: 228, column: 38, scope: !10965)
!10967 = !DILocation(line: 228, column: 24, scope: !10965)
!10968 = !DILocation(line: 229, column: 2, scope: !10965)
!10969 = !DILocation(line: 230, column: 24, scope: !10970)
!10970 = distinct !DILexicalBlock(scope: !10962, file: !1805, line: 229, column: 9)
!10971 = !DILocation(line: 230, column: 15, scope: !10970)
!10972 = !DILocation(line: 0, scope: !10962)
!10973 = !DILocalVariable(name: "key", arg: 2, scope: !10974, file: !316, line: 190, type: !10906)
!10974 = distinct !DISubprogram(name: "k_spin_unlock", scope: !316, file: !316, line: 189, type: !10975, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1727, retainedNodes: !10977)
!10975 = !DISubroutineType(types: !10976)
!10976 = !{null, !10926, !10906}
!10977 = !{!10978, !10973}
!10978 = !DILocalVariable(name: "l", arg: 1, scope: !10974, file: !316, line: 189, type: !10926)
!10979 = !DILocation(line: 0, scope: !10974, inlinedAt: !10980)
!10980 = distinct !DILocation(line: 232, column: 2, scope: !10895)
!10981 = !DILocalVariable(name: "key", arg: 1, scope: !10982, file: !5768, line: 84, type: !32)
!10982 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5768, file: !5768, line: 84, type: !5779, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1727, retainedNodes: !10983)
!10983 = !{!10981}
!10984 = !DILocation(line: 0, scope: !10982, inlinedAt: !10985)
!10985 = distinct !DILocation(line: 215, column: 2, scope: !10974, inlinedAt: !10980)
!10986 = !DILocation(line: 95, column: 2, scope: !10982, inlinedAt: !10985)
!10987 = !{i64 2023837}
!10988 = !DILocation(line: 234, column: 1, scope: !10895)
!10989 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1805, file: !1805, line: 236, type: !6064, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1727, retainedNodes: !10990)
!10990 = !{!10991, !10992}
!10991 = !DILocalVariable(name: "key", scope: !10989, file: !1805, line: 242, type: !10906)
!10992 = !DILocalVariable(name: "cyc", scope: !10989, file: !1805, line: 243, type: !121)
!10993 = !DILocation(line: 0, scope: !10923, inlinedAt: !10994)
!10994 = distinct !DILocation(line: 242, column: 25, scope: !10989)
!10995 = !DILocation(line: 55, column: 2, scope: !10932, inlinedAt: !10996)
!10996 = distinct !DILocation(line: 145, column: 10, scope: !10923, inlinedAt: !10994)
!10997 = !DILocation(line: 0, scope: !10932, inlinedAt: !10996)
!10998 = !DILocation(line: 0, scope: !10989)
!10999 = !DILocation(line: 243, column: 17, scope: !10989)
!11000 = !DILocation(line: 243, column: 29, scope: !10989)
!11001 = !DILocation(line: 243, column: 27, scope: !10989)
!11002 = !DILocation(line: 243, column: 43, scope: !10989)
!11003 = !DILocation(line: 243, column: 41, scope: !10989)
!11004 = !DILocation(line: 0, scope: !10974, inlinedAt: !11005)
!11005 = distinct !DILocation(line: 245, column: 2, scope: !10989)
!11006 = !DILocation(line: 0, scope: !10982, inlinedAt: !11007)
!11007 = distinct !DILocation(line: 215, column: 2, scope: !10974, inlinedAt: !11005)
!11008 = !DILocation(line: 95, column: 2, scope: !10982, inlinedAt: !11007)
!11009 = !DILocation(line: 246, column: 13, scope: !10989)
!11010 = !DILocation(line: 246, column: 2, scope: !10989)
!11011 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1805, file: !1805, line: 249, type: !6064, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1727, retainedNodes: !11012)
!11012 = !{!11013, !11014}
!11013 = !DILocalVariable(name: "key", scope: !11011, file: !1805, line: 251, type: !10906)
!11014 = !DILocalVariable(name: "ret", scope: !11011, file: !1805, line: 252, type: !121)
!11015 = !DILocation(line: 0, scope: !10923, inlinedAt: !11016)
!11016 = distinct !DILocation(line: 251, column: 25, scope: !11011)
!11017 = !DILocation(line: 55, column: 2, scope: !10932, inlinedAt: !11018)
!11018 = distinct !DILocation(line: 145, column: 10, scope: !10923, inlinedAt: !11016)
!11019 = !DILocation(line: 0, scope: !10932, inlinedAt: !11018)
!11020 = !DILocation(line: 0, scope: !11011)
!11021 = !DILocation(line: 252, column: 17, scope: !11011)
!11022 = !DILocation(line: 252, column: 29, scope: !11011)
!11023 = !DILocation(line: 252, column: 27, scope: !11011)
!11024 = !DILocation(line: 0, scope: !10974, inlinedAt: !11025)
!11025 = distinct !DILocation(line: 254, column: 2, scope: !11011)
!11026 = !DILocation(line: 0, scope: !10982, inlinedAt: !11027)
!11027 = distinct !DILocation(line: 215, column: 2, scope: !10974, inlinedAt: !11025)
!11028 = !DILocation(line: 95, column: 2, scope: !10982, inlinedAt: !11027)
!11029 = !DILocation(line: 255, column: 2, scope: !11011)
!11030 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1805, file: !1805, line: 258, type: !3213, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1727, retainedNodes: !317)
!11031 = !DILocation(line: 260, column: 6, scope: !11032)
!11032 = distinct !DILexicalBlock(scope: !11030, file: !1805, line: 260, column: 6)
!11033 = !DILocation(line: 260, column: 16, scope: !11032)
!11034 = !DILocation(line: 260, column: 6, scope: !11030)
!11035 = !DILocation(line: 261, column: 17, scope: !11036)
!11036 = distinct !DILexicalBlock(scope: !11032, file: !1805, line: 260, column: 34)
!11037 = !DILocation(line: 262, column: 2, scope: !11036)
!11038 = !DILocation(line: 263, column: 1, scope: !11030)
!11039 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1805, file: !1805, line: 265, type: !3213, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1727, retainedNodes: !317)
!11040 = !DILocation(line: 267, column: 16, scope: !11039)
!11041 = !DILocation(line: 268, column: 1, scope: !11039)
!11042 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !11043, file: !11043, line: 9, type: !11044, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2977, retainedNodes: !11067)
!11043 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11044 = !DISubroutineType(types: !11045)
!11045 = !{!103, !11046, !154, !11066}
!11046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11047, size: 32)
!11047 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11048)
!11048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1627, line: 60, size: 64, elements: !11049)
!11049 = !{!11050, !11065}
!11050 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !11048, file: !1627, line: 69, baseType: !11051, size: 32)
!11051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11052, size: 32)
!11052 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11053)
!11053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1627, line: 50, size: 64, elements: !11054)
!11054 = !{!11055, !11063, !11064}
!11055 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !11053, file: !1627, line: 52, baseType: !11056, size: 32)
!11056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11057, size: 32)
!11057 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11058)
!11058 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1638, line: 37, baseType: !11059)
!11059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1638, line: 32, size: 64, elements: !11060)
!11060 = !{!11061, !11062}
!11061 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !11059, file: !1638, line: 34, baseType: !121, size: 32)
!11062 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !11059, file: !1638, line: 36, baseType: !121, size: 32, offset: 32)
!11063 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !11053, file: !1627, line: 54, baseType: !154, size: 8, offset: 32)
!11064 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !11053, file: !1627, line: 56, baseType: !154, size: 8, offset: 40)
!11065 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !11048, file: !1627, line: 71, baseType: !154, size: 8, offset: 32)
!11066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11051, size: 32)
!11067 = !{!11068, !11069, !11070}
!11068 = !DILocalVariable(name: "config", arg: 1, scope: !11042, file: !11043, line: 9, type: !11046)
!11069 = !DILocalVariable(name: "id", arg: 2, scope: !11042, file: !11043, line: 9, type: !154)
!11070 = !DILocalVariable(name: "state", arg: 3, scope: !11042, file: !11043, line: 10, type: !11066)
!11071 = !DILocation(line: 0, scope: !11042)
!11072 = !DILocation(line: 12, column: 20, scope: !11042)
!11073 = !DILocation(line: 13, column: 27, scope: !11042)
!11074 = !DILocation(line: 13, column: 42, scope: !11042)
!11075 = !DILocation(line: 13, column: 19, scope: !11042)
!11076 = !DILocation(line: 13, column: 16, scope: !11042)
!11077 = !DILocation(line: 13, column: 2, scope: !11042)
!11078 = distinct !{!11078, !11077, !11079}
!11079 = !DILocation(line: 19, column: 2, scope: !11042)
!11080 = !DILocation(line: 14, column: 23, scope: !11081)
!11081 = distinct !DILexicalBlock(scope: !11082, file: !11043, line: 14, column: 7)
!11082 = distinct !DILexicalBlock(scope: !11042, file: !11043, line: 13, column: 54)
!11083 = !DILocation(line: 14, column: 10, scope: !11081)
!11084 = !DILocation(line: 18, column: 11, scope: !11082)
!11085 = !DILocation(line: 14, column: 7, scope: !11082)
!11086 = !DILocation(line: 22, column: 1, scope: !11042)
!11087 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1922, file: !1922, line: 193, type: !11088, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1840, retainedNodes: !11097)
!11088 = !DISubroutineType(types: !11089)
!11089 = !{!103, !11090, !154, !22}
!11090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11091, size: 32)
!11091 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11092)
!11092 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1638, line: 37, baseType: !11093)
!11093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1638, line: 32, size: 64, elements: !11094)
!11094 = !{!11095, !11096}
!11095 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !11093, file: !1638, line: 34, baseType: !121, size: 32)
!11096 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !11093, file: !1638, line: 36, baseType: !121, size: 32, offset: 32)
!11097 = !{!11098, !11099, !11100, !11101, !11102, !11103, !11104, !11105, !11107}
!11098 = !DILocalVariable(name: "pins", arg: 1, scope: !11087, file: !1922, line: 193, type: !11090)
!11099 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !11087, file: !1922, line: 193, type: !154)
!11100 = !DILocalVariable(name: "reg", arg: 3, scope: !11087, file: !1922, line: 194, type: !22)
!11101 = !DILocalVariable(name: "pin", scope: !11087, file: !1922, line: 196, type: !121)
!11102 = !DILocalVariable(name: "mux", scope: !11087, file: !1922, line: 196, type: !121)
!11103 = !DILocalVariable(name: "pin_cgf", scope: !11087, file: !1922, line: 197, type: !121)
!11104 = !DILocalVariable(name: "ret", scope: !11087, file: !1922, line: 198, type: !103)
!11105 = !DILocalVariable(name: "i", scope: !11106, file: !1922, line: 209, type: !154)
!11106 = distinct !DILexicalBlock(scope: !11087, file: !1922, line: 209, column: 2)
!11107 = !DILocalVariable(name: "gpio_out", scope: !11108, file: !1922, line: 239, type: !121)
!11108 = distinct !DILexicalBlock(scope: !11109, file: !1922, line: 238, column: 55)
!11109 = distinct !DILexicalBlock(scope: !11110, file: !1922, line: 238, column: 14)
!11110 = distinct !DILexicalBlock(scope: !11111, file: !1922, line: 236, column: 14)
!11111 = distinct !DILexicalBlock(scope: !11112, file: !1922, line: 234, column: 7)
!11112 = distinct !DILexicalBlock(scope: !11113, file: !1922, line: 209, column: 41)
!11113 = distinct !DILexicalBlock(scope: !11106, file: !1922, line: 209, column: 2)
!11114 = !DILocation(line: 0, scope: !11087)
!11115 = !DILocation(line: 0, scope: !11106)
!11116 = !DILocation(line: 209, column: 25, scope: !11113)
!11117 = !DILocation(line: 209, column: 2, scope: !11106)
!11118 = distinct !{!11118, !11117, !11119}
!11119 = !DILocation(line: 259, column: 2, scope: !11106)
!11120 = !DILocation(line: 210, column: 17, scope: !11112)
!11121 = !DILocation(line: 234, column: 7, scope: !11111)
!11122 = !DILocation(line: 234, column: 33, scope: !11111)
!11123 = !DILocation(line: 234, column: 7, scope: !11112)
!11124 = !DILocation(line: 235, column: 22, scope: !11125)
!11125 = distinct !DILexicalBlock(scope: !11111, file: !1922, line: 234, column: 49)
!11126 = !DILocation(line: 235, column: 29, scope: !11125)
!11127 = !DILocation(line: 236, column: 3, scope: !11125)
!11128 = !DILocation(line: 236, column: 14, scope: !11111)
!11129 = !DILocation(line: 239, column: 32, scope: !11108)
!11130 = !DILocation(line: 0, scope: !11108)
!11131 = !DILocation(line: 241, column: 8, scope: !11108)
!11132 = !DILocation(line: 246, column: 3, scope: !11108)
!11133 = !DILocation(line: 252, column: 9, scope: !11112)
!11134 = !DILocation(line: 255, column: 9, scope: !11112)
!11135 = !DILocation(line: 256, column: 11, scope: !11136)
!11136 = distinct !DILexicalBlock(scope: !11112, file: !1922, line: 256, column: 7)
!11137 = !DILocation(line: 209, column: 37, scope: !11113)
!11138 = !DILocation(line: 256, column: 7, scope: !11112)
!11139 = !DILocation(line: 262, column: 1, scope: !11087)
!11140 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1922, file: !1922, line: 176, type: !11141, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1840, retainedNodes: !11143)
!11141 = !DISubroutineType(types: !11142)
!11142 = !{!103, !121, !121, !121}
!11143 = !{!11144, !11145, !11146, !11147}
!11144 = !DILocalVariable(name: "pin", arg: 1, scope: !11140, file: !1922, line: 176, type: !121)
!11145 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !11140, file: !1922, line: 176, type: !121)
!11146 = !DILocalVariable(name: "pin_func", arg: 3, scope: !11140, file: !1922, line: 176, type: !121)
!11147 = !DILocalVariable(name: "port_device", scope: !11140, file: !1922, line: 178, type: !1852)
!11148 = !DILocation(line: 0, scope: !11140)
!11149 = !DILocation(line: 180, column: 22, scope: !11150)
!11150 = distinct !DILexicalBlock(scope: !11140, file: !1922, line: 180, column: 6)
!11151 = !DILocation(line: 180, column: 6, scope: !11140)
!11152 = !DILocation(line: 180, column: 6, scope: !11150)
!11153 = !DILocation(line: 184, column: 16, scope: !11140)
!11154 = !DILocation(line: 186, column: 19, scope: !11155)
!11155 = distinct !DILexicalBlock(scope: !11140, file: !1922, line: 186, column: 6)
!11156 = !DILocation(line: 186, column: 28, scope: !11155)
!11157 = !DILocation(line: 186, column: 33, scope: !11155)
!11158 = !DILocation(line: 186, column: 6, scope: !11140)
!11159 = !DILocation(line: 190, column: 43, scope: !11140)
!11160 = !DILocation(line: 190, column: 9, scope: !11140)
!11161 = !DILocation(line: 190, column: 2, scope: !11140)
!11162 = !DILocation(line: 191, column: 1, scope: !11140)
!11163 = distinct !DISubprogram(name: "device_is_ready", scope: !8191, file: !8191, line: 47, type: !11164, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1840, retainedNodes: !11166)
!11164 = !DISubroutineType(types: !11165)
!11165 = !{!157, !1852}
!11166 = !{!11167}
!11167 = !DILocalVariable(name: "dev", arg: 1, scope: !11163, file: !8191, line: 47, type: !1852)
!11168 = !DILocation(line: 0, scope: !11163)
!11169 = !DILocation(line: 55, column: 2, scope: !11170)
!11170 = distinct !DILexicalBlock(scope: !11163, file: !8191, line: 55, column: 2)
!11171 = !{i64 2149261090}
!11172 = !DILocation(line: 56, column: 9, scope: !11163)
!11173 = !DILocation(line: 56, column: 2, scope: !11163)
!11174 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !11164, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1840, retainedNodes: !11175)
!11175 = !{!11176}
!11176 = !DILocalVariable(name: "dev", arg: 1, scope: !11174, file: !141, line: 730, type: !1852)
!11177 = !DILocation(line: 0, scope: !11174)
!11178 = !DILocation(line: 732, column: 9, scope: !11174)
!11179 = !DILocation(line: 732, column: 2, scope: !11174)
!11180 = distinct !DISubprogram(name: "SystemInit", scope: !1972, file: !1972, line: 167, type: !3213, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1930, retainedNodes: !317)
!11181 = !DILocation(line: 182, column: 1, scope: !11180)
!11182 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1972, file: !1972, line: 220, type: !3213, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1930, retainedNodes: !11183)
!11183 = !{!11184, !11185, !11186, !11187, !11188}
!11184 = !DILocalVariable(name: "tmp", scope: !11182, file: !1972, line: 222, type: !121)
!11185 = !DILocalVariable(name: "pllvco", scope: !11182, file: !1972, line: 222, type: !121)
!11186 = !DILocalVariable(name: "pllp", scope: !11182, file: !1972, line: 222, type: !121)
!11187 = !DILocalVariable(name: "pllsource", scope: !11182, file: !1972, line: 222, type: !121)
!11188 = !DILocalVariable(name: "pllm", scope: !11182, file: !1972, line: 222, type: !121)
!11189 = !DILocation(line: 0, scope: !11182)
!11190 = !DILocation(line: 225, column: 14, scope: !11182)
!11191 = !DILocation(line: 225, column: 19, scope: !11182)
!11192 = !DILocation(line: 227, column: 3, scope: !11182)
!11193 = !DILocation(line: 240, column: 25, scope: !11194)
!11194 = distinct !DILexicalBlock(scope: !11182, file: !1972, line: 228, column: 3)
!11195 = !DILocation(line: 241, column: 19, scope: !11194)
!11196 = !DILocation(line: 241, column: 27, scope: !11194)
!11197 = !DILocation(line: 0, scope: !11198)
!11198 = distinct !DILexicalBlock(scope: !11194, file: !1972, line: 243, column: 11)
!11199 = !DILocation(line: 254, column: 22, scope: !11194)
!11200 = !DILocation(line: 254, column: 62, scope: !11194)
!11201 = !DILocation(line: 255, column: 31, scope: !11194)
!11202 = !DILocation(line: 256, column: 7, scope: !11194)
!11203 = !DILocation(line: 0, scope: !11194)
!11204 = !DILocation(line: 263, column: 30, scope: !11182)
!11205 = !DILocation(line: 263, column: 52, scope: !11182)
!11206 = !DILocation(line: 263, column: 9, scope: !11182)
!11207 = !DILocation(line: 265, column: 19, scope: !11182)
!11208 = !DILocation(line: 266, column: 1, scope: !11182)
!11209 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !11210, file: !11210, line: 200, type: !11211, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2979, retainedNodes: !317)
!11210 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11211 = !DISubroutineType(types: !11212)
!11212 = !{!11213}
!11213 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !2983, line: 44, baseType: !2982)
!11214 = !DILocation(line: 202, column: 3, scope: !11209)
!11215 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !11210, file: !11210, line: 219, type: !11216, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2979, retainedNodes: !11240)
!11216 = !DISubroutineType(types: !11217)
!11217 = !{!11213, !11218}
!11218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11219, size: 32)
!11219 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !11220, line: 70, baseType: !11221)
!11220 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11221 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11220, line: 49, size: 384, elements: !11222)
!11222 = !{!11223, !11224, !11225, !11226, !11227, !11228, !11229}
!11223 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !11221, file: !11220, line: 51, baseType: !121, size: 32)
!11224 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !11221, file: !11220, line: 54, baseType: !121, size: 32, offset: 32)
!11225 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !11221, file: !11220, line: 57, baseType: !121, size: 32, offset: 64)
!11226 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !11221, file: !11220, line: 60, baseType: !121, size: 32, offset: 96)
!11227 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !11221, file: !11220, line: 63, baseType: !121, size: 32, offset: 128)
!11228 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !11221, file: !11220, line: 66, baseType: !121, size: 32, offset: 160)
!11229 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !11221, file: !11220, line: 69, baseType: !11230, size: 192, offset: 192)
!11230 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !11231, line: 73, baseType: !11232)
!11231 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11232 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11231, line: 45, size: 192, elements: !11233)
!11233 = !{!11234, !11235, !11236, !11237, !11238, !11239}
!11234 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !11232, file: !11231, line: 47, baseType: !121, size: 32)
!11235 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !11232, file: !11231, line: 50, baseType: !121, size: 32, offset: 32)
!11236 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !11232, file: !11231, line: 53, baseType: !121, size: 32, offset: 64)
!11237 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !11232, file: !11231, line: 56, baseType: !121, size: 32, offset: 96)
!11238 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !11232, file: !11231, line: 60, baseType: !121, size: 32, offset: 128)
!11239 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !11232, file: !11231, line: 63, baseType: !121, size: 32, offset: 160)
!11240 = !{!11241, !11242, !11243, !11244, !11248}
!11241 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11215, file: !11210, line: 219, type: !11218)
!11242 = !DILocalVariable(name: "tickstart", scope: !11215, file: !11210, line: 221, type: !121)
!11243 = !DILocalVariable(name: "pll_config", scope: !11215, file: !11210, line: 221, type: !121)
!11244 = !DILocalVariable(name: "pwrclkchanged", scope: !11245, file: !11210, line: 391, type: !11247)
!11245 = distinct !DILexicalBlock(scope: !11246, file: !11210, line: 390, column: 3)
!11246 = distinct !DILexicalBlock(scope: !11215, file: !11210, line: 389, column: 6)
!11247 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !793, line: 188, baseType: !2989)
!11248 = !DILocalVariable(name: "tmpreg", scope: !11249, file: !11210, line: 400, type: !120)
!11249 = distinct !DILexicalBlock(scope: !11250, file: !11210, line: 400, column: 7)
!11250 = distinct !DILexicalBlock(scope: !11251, file: !11210, line: 399, column: 5)
!11251 = distinct !DILexicalBlock(scope: !11245, file: !11210, line: 398, column: 8)
!11252 = !DILocation(line: 0, scope: !11215)
!11253 = !DILocation(line: 224, column: 24, scope: !11254)
!11254 = distinct !DILexicalBlock(scope: !11215, file: !11210, line: 224, column: 6)
!11255 = !DILocation(line: 224, column: 6, scope: !11215)
!11256 = !DILocation(line: 232, column: 27, scope: !11257)
!11257 = distinct !DILexicalBlock(scope: !11215, file: !11210, line: 232, column: 6)
!11258 = !DILocation(line: 232, column: 43, scope: !11257)
!11259 = !DILocation(line: 232, column: 69, scope: !11257)
!11260 = !DILocation(line: 232, column: 6, scope: !11215)
!11261 = !DILocation(line: 237, column: 9, scope: !11262)
!11262 = distinct !DILexicalBlock(scope: !11263, file: !11210, line: 237, column: 8)
!11263 = distinct !DILexicalBlock(scope: !11257, file: !11210, line: 233, column: 3)
!11264 = !DILocation(line: 237, column: 39, scope: !11262)
!11265 = !DILocation(line: 237, column: 60, scope: !11262)
!11266 = !DILocation(line: 238, column: 9, scope: !11262)
!11267 = !DILocation(line: 238, column: 39, scope: !11262)
!11268 = !DILocation(line: 238, column: 60, scope: !11262)
!11269 = !DILocation(line: 238, column: 70, scope: !11262)
!11270 = !DILocation(line: 238, column: 78, scope: !11262)
!11271 = !DILocation(line: 238, column: 100, scope: !11262)
!11272 = !DILocation(line: 237, column: 8, scope: !11263)
!11273 = !DILocation(line: 240, column: 11, scope: !11274)
!11274 = distinct !DILexicalBlock(scope: !11275, file: !11210, line: 240, column: 10)
!11275 = distinct !DILexicalBlock(scope: !11262, file: !11210, line: 239, column: 5)
!11276 = !DILocation(line: 240, column: 57, scope: !11274)
!11277 = !DILocation(line: 240, column: 80, scope: !11274)
!11278 = !DILocation(line: 240, column: 89, scope: !11274)
!11279 = !DILocation(line: 240, column: 10, scope: !11275)
!11280 = !DILocation(line: 248, column: 7, scope: !11281)
!11281 = distinct !DILexicalBlock(scope: !11282, file: !11210, line: 248, column: 7)
!11282 = distinct !DILexicalBlock(scope: !11283, file: !11210, line: 248, column: 7)
!11283 = distinct !DILexicalBlock(scope: !11262, file: !11210, line: 246, column: 5)
!11284 = !DILocation(line: 248, column: 7, scope: !11282)
!11285 = !DILocation(line: 248, column: 7, scope: !11286)
!11286 = distinct !DILexicalBlock(scope: !11281, file: !11210, line: 248, column: 7)
!11287 = !DILocation(line: 248, column: 7, scope: !11288)
!11288 = distinct !DILexicalBlock(scope: !11289, file: !11210, line: 248, column: 7)
!11289 = distinct !DILexicalBlock(scope: !11281, file: !11210, line: 248, column: 7)
!11290 = !DILocation(line: 248, column: 7, scope: !11291)
!11291 = distinct !DILexicalBlock(scope: !11289, file: !11210, line: 248, column: 7)
!11292 = !DILocation(line: 0, scope: !11281)
!11293 = !DILocation(line: 251, column: 30, scope: !11294)
!11294 = distinct !DILexicalBlock(scope: !11283, file: !11210, line: 251, column: 10)
!11295 = !DILocation(line: 251, column: 40, scope: !11294)
!11296 = !DILocation(line: 0, scope: !11294)
!11297 = !DILocation(line: 251, column: 10, scope: !11283)
!11298 = !DILocation(line: 257, column: 15, scope: !11299)
!11299 = distinct !DILexicalBlock(scope: !11294, file: !11210, line: 252, column: 7)
!11300 = !DILocation(line: 257, column: 51, scope: !11299)
!11301 = !DILocation(line: 257, column: 9, scope: !11299)
!11302 = !DILocation(line: 259, column: 15, scope: !11303)
!11303 = distinct !DILexicalBlock(scope: !11304, file: !11210, line: 259, column: 14)
!11304 = distinct !DILexicalBlock(scope: !11299, file: !11210, line: 258, column: 9)
!11305 = !DILocation(line: 259, column: 29, scope: !11303)
!11306 = !DILocation(line: 259, column: 43, scope: !11303)
!11307 = !DILocation(line: 259, column: 14, scope: !11304)
!11308 = distinct !{!11308, !11301, !11309}
!11309 = !DILocation(line: 263, column: 9, scope: !11299)
!11310 = !DILocation(line: 271, column: 15, scope: !11311)
!11311 = distinct !DILexicalBlock(scope: !11294, file: !11210, line: 266, column: 7)
!11312 = !DILocation(line: 271, column: 9, scope: !11311)
!11313 = !DILocation(line: 273, column: 15, scope: !11314)
!11314 = distinct !DILexicalBlock(scope: !11315, file: !11210, line: 273, column: 14)
!11315 = distinct !DILexicalBlock(scope: !11311, file: !11210, line: 272, column: 9)
!11316 = !DILocation(line: 273, column: 29, scope: !11314)
!11317 = !DILocation(line: 273, column: 43, scope: !11314)
!11318 = !DILocation(line: 273, column: 14, scope: !11315)
!11319 = distinct !{!11319, !11312, !11320}
!11320 = !DILocation(line: 277, column: 9, scope: !11311)
!11321 = !DILocation(line: 282, column: 27, scope: !11322)
!11322 = distinct !DILexicalBlock(scope: !11215, file: !11210, line: 282, column: 6)
!11323 = !DILocation(line: 282, column: 43, scope: !11322)
!11324 = !DILocation(line: 282, column: 69, scope: !11322)
!11325 = !DILocation(line: 282, column: 6, scope: !11215)
!11326 = !DILocation(line: 289, column: 9, scope: !11327)
!11327 = distinct !DILexicalBlock(scope: !11328, file: !11210, line: 289, column: 8)
!11328 = distinct !DILexicalBlock(scope: !11322, file: !11210, line: 283, column: 3)
!11329 = !DILocation(line: 289, column: 39, scope: !11327)
!11330 = !DILocation(line: 289, column: 60, scope: !11327)
!11331 = !DILocation(line: 290, column: 9, scope: !11327)
!11332 = !DILocation(line: 290, column: 39, scope: !11327)
!11333 = !DILocation(line: 290, column: 60, scope: !11327)
!11334 = !DILocation(line: 290, column: 70, scope: !11327)
!11335 = !DILocation(line: 290, column: 78, scope: !11327)
!11336 = !DILocation(line: 290, column: 100, scope: !11327)
!11337 = !DILocation(line: 289, column: 8, scope: !11328)
!11338 = !DILocation(line: 293, column: 11, scope: !11339)
!11339 = distinct !DILexicalBlock(scope: !11340, file: !11210, line: 293, column: 10)
!11340 = distinct !DILexicalBlock(scope: !11327, file: !11210, line: 291, column: 5)
!11341 = !DILocation(line: 293, column: 57, scope: !11339)
!11342 = !DILocation(line: 293, column: 80, scope: !11339)
!11343 = !DILocation(line: 293, column: 89, scope: !11339)
!11344 = !DILocation(line: 293, column: 10, scope: !11340)
!11345 = !DILocation(line: 307, column: 30, scope: !11346)
!11346 = distinct !DILexicalBlock(scope: !11347, file: !11210, line: 307, column: 10)
!11347 = distinct !DILexicalBlock(scope: !11327, file: !11210, line: 305, column: 5)
!11348 = !DILocation(line: 307, column: 39, scope: !11346)
!11349 = !DILocation(line: 307, column: 10, scope: !11347)
!11350 = !DILocation(line: 310, column: 9, scope: !11351)
!11351 = distinct !DILexicalBlock(scope: !11346, file: !11210, line: 308, column: 7)
!11352 = !DILocation(line: 313, column: 21, scope: !11351)
!11353 = !DILocation(line: 316, column: 9, scope: !11351)
!11354 = !DILocation(line: 316, column: 15, scope: !11351)
!11355 = !DILocation(line: 316, column: 51, scope: !11351)
!11356 = !DILocation(line: 318, column: 15, scope: !11357)
!11357 = distinct !DILexicalBlock(scope: !11358, file: !11210, line: 318, column: 14)
!11358 = distinct !DILexicalBlock(scope: !11351, file: !11210, line: 317, column: 9)
!11359 = !DILocation(line: 318, column: 29, scope: !11357)
!11360 = !DILocation(line: 318, column: 43, scope: !11357)
!11361 = !DILocation(line: 318, column: 14, scope: !11358)
!11362 = distinct !{!11362, !11353, !11363}
!11363 = !DILocation(line: 322, column: 9, scope: !11351)
!11364 = !DILocation(line: 330, column: 9, scope: !11365)
!11365 = distinct !DILexicalBlock(scope: !11346, file: !11210, line: 328, column: 7)
!11366 = !DILocation(line: 333, column: 21, scope: !11365)
!11367 = !DILocation(line: 336, column: 9, scope: !11365)
!11368 = !DILocation(line: 336, column: 15, scope: !11365)
!11369 = !DILocation(line: 338, column: 15, scope: !11370)
!11370 = distinct !DILexicalBlock(scope: !11371, file: !11210, line: 338, column: 14)
!11371 = distinct !DILexicalBlock(scope: !11365, file: !11210, line: 337, column: 9)
!11372 = !DILocation(line: 338, column: 29, scope: !11370)
!11373 = !DILocation(line: 338, column: 43, scope: !11370)
!11374 = !DILocation(line: 338, column: 14, scope: !11371)
!11375 = distinct !{!11375, !11367, !11376}
!11376 = !DILocation(line: 342, column: 9, scope: !11365)
!11377 = !DILocation(line: 0, scope: !11327)
!11378 = !DILocation(line: 347, column: 27, scope: !11379)
!11379 = distinct !DILexicalBlock(scope: !11215, file: !11210, line: 347, column: 6)
!11380 = !DILocation(line: 347, column: 43, scope: !11379)
!11381 = !DILocation(line: 347, column: 69, scope: !11379)
!11382 = !DILocation(line: 347, column: 6, scope: !11215)
!11383 = !DILocation(line: 353, column: 28, scope: !11384)
!11384 = distinct !DILexicalBlock(scope: !11385, file: !11210, line: 353, column: 8)
!11385 = distinct !DILexicalBlock(scope: !11379, file: !11210, line: 348, column: 3)
!11386 = !DILocation(line: 353, column: 37, scope: !11384)
!11387 = !DILocation(line: 353, column: 8, scope: !11385)
!11388 = !DILocation(line: 356, column: 7, scope: !11389)
!11389 = distinct !DILexicalBlock(scope: !11384, file: !11210, line: 354, column: 5)
!11390 = !DILocation(line: 359, column: 19, scope: !11389)
!11391 = !DILocation(line: 362, column: 7, scope: !11389)
!11392 = !DILocation(line: 362, column: 13, scope: !11389)
!11393 = !DILocation(line: 362, column: 49, scope: !11389)
!11394 = !DILocation(line: 364, column: 13, scope: !11395)
!11395 = distinct !DILexicalBlock(scope: !11396, file: !11210, line: 364, column: 12)
!11396 = distinct !DILexicalBlock(scope: !11389, file: !11210, line: 363, column: 7)
!11397 = !DILocation(line: 364, column: 27, scope: !11395)
!11398 = !DILocation(line: 364, column: 41, scope: !11395)
!11399 = !DILocation(line: 364, column: 12, scope: !11396)
!11400 = distinct !{!11400, !11391, !11401}
!11401 = !DILocation(line: 368, column: 7, scope: !11389)
!11402 = !DILocation(line: 373, column: 7, scope: !11403)
!11403 = distinct !DILexicalBlock(scope: !11384, file: !11210, line: 371, column: 5)
!11404 = !DILocation(line: 376, column: 19, scope: !11403)
!11405 = !DILocation(line: 379, column: 7, scope: !11403)
!11406 = !DILocation(line: 379, column: 13, scope: !11403)
!11407 = !DILocation(line: 381, column: 13, scope: !11408)
!11408 = distinct !DILexicalBlock(scope: !11409, file: !11210, line: 381, column: 12)
!11409 = distinct !DILexicalBlock(scope: !11403, file: !11210, line: 380, column: 7)
!11410 = !DILocation(line: 381, column: 27, scope: !11408)
!11411 = !DILocation(line: 381, column: 41, scope: !11408)
!11412 = !DILocation(line: 381, column: 12, scope: !11409)
!11413 = distinct !{!11413, !11405, !11414}
!11414 = !DILocation(line: 385, column: 7, scope: !11403)
!11415 = !DILocation(line: 389, column: 27, scope: !11246)
!11416 = !DILocation(line: 389, column: 43, scope: !11246)
!11417 = !DILocation(line: 389, column: 69, scope: !11246)
!11418 = !DILocation(line: 389, column: 6, scope: !11215)
!11419 = !DILocation(line: 0, scope: !11245)
!11420 = !DILocation(line: 398, column: 8, scope: !11251)
!11421 = !DILocation(line: 398, column: 8, scope: !11245)
!11422 = !DILocation(line: 400, column: 7, scope: !11249)
!11423 = !DILocation(line: 400, column: 7, scope: !11250)
!11424 = !DILocation(line: 402, column: 5, scope: !11250)
!11425 = !DILocation(line: 404, column: 8, scope: !11426)
!11426 = distinct !DILexicalBlock(scope: !11245, file: !11210, line: 404, column: 8)
!11427 = !DILocation(line: 404, column: 8, scope: !11245)
!11428 = !DILocation(line: 407, column: 7, scope: !11429)
!11429 = distinct !DILexicalBlock(scope: !11426, file: !11210, line: 405, column: 5)
!11430 = !DILocation(line: 410, column: 19, scope: !11429)
!11431 = !DILocation(line: 412, column: 7, scope: !11429)
!11432 = !DILocation(line: 412, column: 13, scope: !11429)
!11433 = !DILocation(line: 414, column: 13, scope: !11434)
!11434 = distinct !DILexicalBlock(scope: !11435, file: !11210, line: 414, column: 12)
!11435 = distinct !DILexicalBlock(scope: !11429, file: !11210, line: 413, column: 7)
!11436 = !DILocation(line: 414, column: 27, scope: !11434)
!11437 = !DILocation(line: 414, column: 40, scope: !11434)
!11438 = !DILocation(line: 414, column: 12, scope: !11435)
!11439 = distinct !{!11439, !11431, !11440}
!11440 = !DILocation(line: 418, column: 7, scope: !11429)
!11441 = !DILocation(line: 422, column: 5, scope: !11442)
!11442 = distinct !DILexicalBlock(scope: !11443, file: !11210, line: 422, column: 5)
!11443 = distinct !DILexicalBlock(scope: !11245, file: !11210, line: 422, column: 5)
!11444 = !DILocation(line: 422, column: 5, scope: !11443)
!11445 = !DILocation(line: 422, column: 5, scope: !11446)
!11446 = distinct !DILexicalBlock(scope: !11442, file: !11210, line: 422, column: 5)
!11447 = !DILocation(line: 422, column: 5, scope: !11448)
!11448 = distinct !DILexicalBlock(scope: !11449, file: !11210, line: 422, column: 5)
!11449 = distinct !DILexicalBlock(scope: !11442, file: !11210, line: 422, column: 5)
!11450 = !DILocation(line: 422, column: 5, scope: !11451)
!11451 = distinct !DILexicalBlock(scope: !11449, file: !11210, line: 422, column: 5)
!11452 = !DILocation(line: 0, scope: !11442)
!11453 = !DILocation(line: 424, column: 28, scope: !11454)
!11454 = distinct !DILexicalBlock(scope: !11245, file: !11210, line: 424, column: 8)
!11455 = !DILocation(line: 424, column: 38, scope: !11454)
!11456 = !DILocation(line: 0, scope: !11454)
!11457 = !DILocation(line: 424, column: 8, scope: !11245)
!11458 = !DILocation(line: 430, column: 13, scope: !11459)
!11459 = distinct !DILexicalBlock(scope: !11454, file: !11210, line: 425, column: 5)
!11460 = !DILocation(line: 430, column: 49, scope: !11459)
!11461 = !DILocation(line: 430, column: 7, scope: !11459)
!11462 = !DILocation(line: 432, column: 13, scope: !11463)
!11463 = distinct !DILexicalBlock(scope: !11464, file: !11210, line: 432, column: 12)
!11464 = distinct !DILexicalBlock(scope: !11459, file: !11210, line: 431, column: 7)
!11465 = !DILocation(line: 432, column: 27, scope: !11463)
!11466 = !DILocation(line: 432, column: 41, scope: !11463)
!11467 = !DILocation(line: 432, column: 12, scope: !11464)
!11468 = distinct !{!11468, !11461, !11469}
!11469 = !DILocation(line: 436, column: 7, scope: !11459)
!11470 = !DILocation(line: 444, column: 13, scope: !11471)
!11471 = distinct !DILexicalBlock(scope: !11454, file: !11210, line: 439, column: 5)
!11472 = !DILocation(line: 444, column: 7, scope: !11471)
!11473 = !DILocation(line: 446, column: 13, scope: !11474)
!11474 = distinct !DILexicalBlock(scope: !11475, file: !11210, line: 446, column: 12)
!11475 = distinct !DILexicalBlock(scope: !11471, file: !11210, line: 445, column: 7)
!11476 = !DILocation(line: 446, column: 27, scope: !11474)
!11477 = !DILocation(line: 446, column: 41, scope: !11474)
!11478 = !DILocation(line: 446, column: 12, scope: !11475)
!11479 = distinct !{!11479, !11472, !11480}
!11480 = !DILocation(line: 450, column: 7, scope: !11471)
!11481 = !DILocation(line: 454, column: 8, scope: !11245)
!11482 = !DILocation(line: 456, column: 7, scope: !11483)
!11483 = distinct !DILexicalBlock(scope: !11484, file: !11210, line: 455, column: 5)
!11484 = distinct !DILexicalBlock(scope: !11245, file: !11210, line: 454, column: 8)
!11485 = !DILocation(line: 457, column: 5, scope: !11483)
!11486 = !DILocation(line: 462, column: 31, scope: !11487)
!11487 = distinct !DILexicalBlock(scope: !11215, file: !11210, line: 462, column: 7)
!11488 = !DILocation(line: 462, column: 41, scope: !11487)
!11489 = !DILocation(line: 462, column: 7, scope: !11215)
!11490 = !DILocation(line: 465, column: 8, scope: !11491)
!11491 = distinct !DILexicalBlock(scope: !11492, file: !11210, line: 465, column: 8)
!11492 = distinct !DILexicalBlock(scope: !11487, file: !11210, line: 463, column: 3)
!11493 = !DILocation(line: 465, column: 38, scope: !11491)
!11494 = !DILocation(line: 465, column: 8, scope: !11492)
!11495 = !DILocation(line: 467, column: 44, scope: !11496)
!11496 = distinct !DILexicalBlock(scope: !11497, file: !11210, line: 467, column: 10)
!11497 = distinct !DILexicalBlock(scope: !11491, file: !11210, line: 466, column: 5)
!11498 = !DILocation(line: 0, scope: !11496)
!11499 = !DILocation(line: 467, column: 10, scope: !11497)
!11500 = !DILocation(line: 483, column: 15, scope: !11501)
!11501 = distinct !DILexicalBlock(scope: !11496, file: !11210, line: 468, column: 7)
!11502 = !DILocation(line: 483, column: 9, scope: !11501)
!11503 = !DILocation(line: 485, column: 15, scope: !11504)
!11504 = distinct !DILexicalBlock(scope: !11505, file: !11210, line: 485, column: 14)
!11505 = distinct !DILexicalBlock(scope: !11501, file: !11210, line: 484, column: 9)
!11506 = !DILocation(line: 485, column: 29, scope: !11504)
!11507 = !DILocation(line: 485, column: 43, scope: !11504)
!11508 = !DILocation(line: 485, column: 14, scope: !11505)
!11509 = distinct !{!11509, !11502, !11510}
!11510 = !DILocation(line: 489, column: 9, scope: !11501)
!11511 = !DILocation(line: 492, column: 9, scope: !11501)
!11512 = !DILocation(line: 498, column: 9, scope: !11501)
!11513 = !DILocation(line: 501, column: 21, scope: !11501)
!11514 = !DILocation(line: 504, column: 9, scope: !11501)
!11515 = !DILocation(line: 504, column: 15, scope: !11501)
!11516 = !DILocation(line: 504, column: 51, scope: !11501)
!11517 = !DILocation(line: 506, column: 15, scope: !11518)
!11518 = distinct !DILexicalBlock(scope: !11519, file: !11210, line: 506, column: 14)
!11519 = distinct !DILexicalBlock(scope: !11501, file: !11210, line: 505, column: 9)
!11520 = !DILocation(line: 506, column: 29, scope: !11518)
!11521 = !DILocation(line: 506, column: 43, scope: !11518)
!11522 = !DILocation(line: 506, column: 14, scope: !11519)
!11523 = distinct !{!11523, !11514, !11524}
!11524 = !DILocation(line: 510, column: 9, scope: !11501)
!11525 = !DILocation(line: 521, column: 15, scope: !11526)
!11526 = distinct !DILexicalBlock(scope: !11496, file: !11210, line: 513, column: 7)
!11527 = !DILocation(line: 521, column: 9, scope: !11526)
!11528 = !DILocation(line: 523, column: 15, scope: !11529)
!11529 = distinct !DILexicalBlock(scope: !11530, file: !11210, line: 523, column: 14)
!11530 = distinct !DILexicalBlock(scope: !11526, file: !11210, line: 522, column: 9)
!11531 = !DILocation(line: 523, column: 29, scope: !11529)
!11532 = !DILocation(line: 523, column: 43, scope: !11529)
!11533 = !DILocation(line: 523, column: 14, scope: !11530)
!11534 = distinct !{!11534, !11527, !11535}
!11535 = !DILocation(line: 527, column: 9, scope: !11526)
!11536 = !DILocation(line: 533, column: 44, scope: !11537)
!11537 = distinct !DILexicalBlock(scope: !11538, file: !11210, line: 533, column: 10)
!11538 = distinct !DILexicalBlock(scope: !11491, file: !11210, line: 531, column: 5)
!11539 = !DILocation(line: 533, column: 10, scope: !11538)
!11540 = !DILocation(line: 540, column: 27, scope: !11541)
!11541 = distinct !DILexicalBlock(scope: !11537, file: !11210, line: 538, column: 7)
!11542 = !DILocation(line: 551, column: 14, scope: !11543)
!11543 = distinct !DILexicalBlock(scope: !11541, file: !11210, line: 550, column: 13)
!11544 = !DILocation(line: 551, column: 81, scope: !11543)
!11545 = !DILocation(line: 551, column: 55, scope: !11543)
!11546 = !DILocation(line: 551, column: 92, scope: !11543)
!11547 = !DILocation(line: 552, column: 14, scope: !11543)
!11548 = !DILocation(line: 552, column: 80, scope: !11543)
!11549 = !DILocation(line: 552, column: 53, scope: !11543)
!11550 = !DILocation(line: 552, column: 111, scope: !11543)
!11551 = !DILocation(line: 553, column: 14, scope: !11543)
!11552 = !DILocation(line: 553, column: 80, scope: !11543)
!11553 = !DILocation(line: 553, column: 86, scope: !11543)
!11554 = !DILocation(line: 553, column: 53, scope: !11543)
!11555 = !DILocation(line: 553, column: 111, scope: !11543)
!11556 = !DILocation(line: 554, column: 14, scope: !11543)
!11557 = !DILocation(line: 554, column: 82, scope: !11543)
!11558 = !DILocation(line: 554, column: 101, scope: !11543)
!11559 = !DILocation(line: 554, column: 53, scope: !11543)
!11560 = !DILocation(line: 554, column: 126, scope: !11543)
!11561 = !DILocation(line: 555, column: 14, scope: !11543)
!11562 = !DILocation(line: 555, column: 80, scope: !11543)
!11563 = !DILocation(line: 555, column: 85, scope: !11543)
!11564 = !DILocation(line: 555, column: 53, scope: !11543)
!11565 = !DILocation(line: 550, column: 13, scope: !11541)
!11566 = !DILocation(line: 563, column: 3, scope: !11215)
!11567 = !DILocation(line: 564, column: 1, scope: !11215)
!11568 = !DISubprogram(name: "HAL_GetTick", scope: !11569, file: !11569, line: 234, type: !6064, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !317)
!11569 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11570 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !11210, file: !11210, line: 591, type: !11571, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2979, retainedNodes: !11582)
!11571 = !DISubroutineType(types: !11572)
!11572 = !{!11213, !11573, !121}
!11573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11574, size: 32)
!11574 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !11220, line: 92, baseType: !11575)
!11575 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11220, line: 75, size: 160, elements: !11576)
!11576 = !{!11577, !11578, !11579, !11580, !11581}
!11577 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !11575, file: !11220, line: 77, baseType: !121, size: 32)
!11578 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !11575, file: !11220, line: 80, baseType: !121, size: 32, offset: 32)
!11579 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !11575, file: !11220, line: 83, baseType: !121, size: 32, offset: 64)
!11580 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !11575, file: !11220, line: 86, baseType: !121, size: 32, offset: 96)
!11581 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !11575, file: !11220, line: 89, baseType: !121, size: 32, offset: 128)
!11582 = !{!11583, !11584, !11585}
!11583 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !11570, file: !11210, line: 591, type: !11573)
!11584 = !DILocalVariable(name: "FLatency", arg: 2, scope: !11570, file: !11210, line: 591, type: !121)
!11585 = !DILocalVariable(name: "tickstart", scope: !11570, file: !11210, line: 593, type: !121)
!11586 = !DILocation(line: 0, scope: !11570)
!11587 = !DILocation(line: 596, column: 24, scope: !11588)
!11588 = distinct !DILexicalBlock(scope: !11570, file: !11210, line: 596, column: 6)
!11589 = !DILocation(line: 596, column: 6, scope: !11570)
!11590 = !DILocation(line: 610, column: 17, scope: !11591)
!11591 = distinct !DILexicalBlock(scope: !11570, file: !11210, line: 610, column: 6)
!11592 = !DILocation(line: 610, column: 15, scope: !11591)
!11593 = !DILocation(line: 610, column: 6, scope: !11570)
!11594 = !DILocation(line: 613, column: 5, scope: !11595)
!11595 = distinct !DILexicalBlock(scope: !11591, file: !11210, line: 611, column: 3)
!11596 = !DILocation(line: 617, column: 8, scope: !11597)
!11597 = distinct !DILexicalBlock(scope: !11595, file: !11210, line: 617, column: 8)
!11598 = !DILocation(line: 617, column: 34, scope: !11597)
!11599 = !DILocation(line: 617, column: 8, scope: !11595)
!11600 = !DILocation(line: 624, column: 27, scope: !11601)
!11601 = distinct !DILexicalBlock(scope: !11570, file: !11210, line: 624, column: 6)
!11602 = !DILocation(line: 624, column: 38, scope: !11601)
!11603 = !DILocation(line: 624, column: 60, scope: !11601)
!11604 = !DILocation(line: 624, column: 6, scope: !11570)
!11605 = !DILocation(line: 628, column: 40, scope: !11606)
!11606 = distinct !DILexicalBlock(scope: !11607, file: !11210, line: 628, column: 8)
!11607 = distinct !DILexicalBlock(scope: !11601, file: !11210, line: 625, column: 3)
!11608 = !DILocation(line: 628, column: 63, scope: !11606)
!11609 = !DILocation(line: 628, column: 8, scope: !11607)
!11610 = !DILocation(line: 630, column: 7, scope: !11611)
!11611 = distinct !DILexicalBlock(scope: !11606, file: !11210, line: 629, column: 5)
!11612 = !DILocation(line: 633, column: 29, scope: !11613)
!11613 = distinct !DILexicalBlock(scope: !11607, file: !11210, line: 633, column: 8)
!11614 = !DILocation(line: 631, column: 5, scope: !11611)
!11615 = !DILocation(line: 633, column: 40, scope: !11613)
!11616 = !DILocation(line: 633, column: 63, scope: !11613)
!11617 = !DILocation(line: 633, column: 8, scope: !11607)
!11618 = !DILocation(line: 635, column: 7, scope: !11619)
!11619 = distinct !DILexicalBlock(scope: !11613, file: !11210, line: 634, column: 5)
!11620 = !DILocation(line: 636, column: 5, scope: !11619)
!11621 = !DILocation(line: 639, column: 5, scope: !11607)
!11622 = !DILocation(line: 643, column: 27, scope: !11623)
!11623 = distinct !DILexicalBlock(scope: !11570, file: !11210, line: 643, column: 6)
!11624 = !DILocation(line: 640, column: 3, scope: !11607)
!11625 = !DILocation(line: 643, column: 38, scope: !11623)
!11626 = !DILocation(line: 643, column: 62, scope: !11623)
!11627 = !DILocation(line: 643, column: 6, scope: !11570)
!11628 = !DILocation(line: 648, column: 27, scope: !11629)
!11629 = distinct !DILexicalBlock(scope: !11630, file: !11210, line: 648, column: 8)
!11630 = distinct !DILexicalBlock(scope: !11623, file: !11210, line: 644, column: 3)
!11631 = !DILocation(line: 648, column: 8, scope: !11630)
!11632 = !DILocation(line: 651, column: 10, scope: !11633)
!11633 = distinct !DILexicalBlock(scope: !11634, file: !11210, line: 651, column: 10)
!11634 = distinct !DILexicalBlock(scope: !11629, file: !11210, line: 649, column: 5)
!11635 = !DILocation(line: 651, column: 46, scope: !11633)
!11636 = !DILocation(line: 651, column: 10, scope: !11634)
!11637 = !DILocation(line: 661, column: 10, scope: !11638)
!11638 = distinct !DILexicalBlock(scope: !11639, file: !11210, line: 661, column: 10)
!11639 = distinct !DILexicalBlock(scope: !11640, file: !11210, line: 659, column: 5)
!11640 = distinct !DILexicalBlock(scope: !11629, file: !11210, line: 657, column: 13)
!11641 = !DILocation(line: 661, column: 46, scope: !11638)
!11642 = !DILocation(line: 661, column: 10, scope: !11639)
!11643 = !DILocation(line: 670, column: 10, scope: !11644)
!11644 = distinct !DILexicalBlock(scope: !11645, file: !11210, line: 670, column: 10)
!11645 = distinct !DILexicalBlock(scope: !11640, file: !11210, line: 668, column: 5)
!11646 = !DILocation(line: 670, column: 46, scope: !11644)
!11647 = !DILocation(line: 670, column: 10, scope: !11645)
!11648 = !DILocation(line: 676, column: 5, scope: !11630)
!11649 = !DILocation(line: 679, column: 17, scope: !11630)
!11650 = !DILocation(line: 681, column: 5, scope: !11630)
!11651 = !DILocation(line: 681, column: 12, scope: !11630)
!11652 = !DILocation(line: 681, column: 65, scope: !11630)
!11653 = !DILocation(line: 681, column: 78, scope: !11630)
!11654 = !DILocation(line: 681, column: 42, scope: !11630)
!11655 = !DILocation(line: 683, column: 12, scope: !11656)
!11656 = distinct !DILexicalBlock(scope: !11657, file: !11210, line: 683, column: 11)
!11657 = distinct !DILexicalBlock(scope: !11630, file: !11210, line: 682, column: 5)
!11658 = !DILocation(line: 683, column: 26, scope: !11656)
!11659 = !DILocation(line: 683, column: 39, scope: !11656)
!11660 = !DILocation(line: 683, column: 11, scope: !11657)
!11661 = distinct !{!11661, !11650, !11662}
!11662 = !DILocation(line: 687, column: 5, scope: !11630)
!11663 = !DILocation(line: 691, column: 17, scope: !11664)
!11664 = distinct !DILexicalBlock(scope: !11570, file: !11210, line: 691, column: 6)
!11665 = !DILocation(line: 691, column: 15, scope: !11664)
!11666 = !DILocation(line: 691, column: 6, scope: !11570)
!11667 = !DILocation(line: 694, column: 5, scope: !11668)
!11668 = distinct !DILexicalBlock(scope: !11664, file: !11210, line: 692, column: 3)
!11669 = !DILocation(line: 698, column: 8, scope: !11670)
!11670 = distinct !DILexicalBlock(scope: !11668, file: !11210, line: 698, column: 8)
!11671 = !DILocation(line: 698, column: 34, scope: !11670)
!11672 = !DILocation(line: 698, column: 8, scope: !11668)
!11673 = !DILocation(line: 705, column: 27, scope: !11674)
!11674 = distinct !DILexicalBlock(scope: !11570, file: !11210, line: 705, column: 6)
!11675 = !DILocation(line: 705, column: 38, scope: !11674)
!11676 = !DILocation(line: 705, column: 61, scope: !11674)
!11677 = !DILocation(line: 705, column: 6, scope: !11570)
!11678 = !DILocation(line: 708, column: 5, scope: !11679)
!11679 = distinct !DILexicalBlock(scope: !11674, file: !11210, line: 706, column: 3)
!11680 = !DILocation(line: 712, column: 27, scope: !11681)
!11681 = distinct !DILexicalBlock(scope: !11570, file: !11210, line: 712, column: 6)
!11682 = !DILocation(line: 709, column: 3, scope: !11679)
!11683 = !DILocation(line: 712, column: 38, scope: !11681)
!11684 = !DILocation(line: 712, column: 61, scope: !11681)
!11685 = !DILocation(line: 712, column: 6, scope: !11570)
!11686 = !DILocation(line: 715, column: 5, scope: !11687)
!11687 = distinct !DILexicalBlock(scope: !11681, file: !11210, line: 713, column: 3)
!11688 = !DILocation(line: 716, column: 3, scope: !11687)
!11689 = !DILocation(line: 719, column: 21, scope: !11570)
!11690 = !DILocation(line: 719, column: 70, scope: !11570)
!11691 = !DILocation(line: 719, column: 91, scope: !11570)
!11692 = !DILocation(line: 719, column: 50, scope: !11570)
!11693 = !DILocation(line: 719, column: 47, scope: !11570)
!11694 = !DILocation(line: 719, column: 19, scope: !11570)
!11695 = !DILocation(line: 722, column: 17, scope: !11570)
!11696 = !DILocation(line: 722, column: 3, scope: !11570)
!11697 = !DILocation(line: 724, column: 3, scope: !11570)
!11698 = !DILocation(line: 725, column: 1, scope: !11570)
!11699 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !11210, file: !11210, line: 885, type: !6064, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2979, retainedNodes: !11700)
!11700 = !{!11701, !11702, !11703, !11704}
!11701 = !DILocalVariable(name: "pllm", scope: !11699, file: !11210, line: 887, type: !121)
!11702 = !DILocalVariable(name: "pllvco", scope: !11699, file: !11210, line: 887, type: !121)
!11703 = !DILocalVariable(name: "pllp", scope: !11699, file: !11210, line: 887, type: !121)
!11704 = !DILocalVariable(name: "sysclockfreq", scope: !11699, file: !11210, line: 888, type: !121)
!11705 = !DILocation(line: 0, scope: !11699)
!11706 = !DILocation(line: 891, column: 16, scope: !11699)
!11707 = !DILocation(line: 891, column: 21, scope: !11699)
!11708 = !DILocation(line: 891, column: 3, scope: !11699)
!11709 = !DILocation(line: 907, column: 19, scope: !11710)
!11710 = distinct !DILexicalBlock(scope: !11711, file: !11210, line: 904, column: 5)
!11711 = distinct !DILexicalBlock(scope: !11699, file: !11210, line: 892, column: 3)
!11712 = !DILocation(line: 907, column: 27, scope: !11710)
!11713 = !DILocation(line: 908, column: 10, scope: !11714)
!11714 = distinct !DILexicalBlock(scope: !11710, file: !11210, line: 908, column: 10)
!11715 = !DILocation(line: 0, scope: !11714)
!11716 = !DILocation(line: 918, column: 23, scope: !11710)
!11717 = !DILocation(line: 918, column: 82, scope: !11710)
!11718 = !DILocation(line: 920, column: 28, scope: !11710)
!11719 = !DILocation(line: 921, column: 7, scope: !11710)
!11720 = !DILocation(line: 0, scope: !11711)
!11721 = !DILocation(line: 929, column: 3, scope: !11699)
!11722 = !DISubprogram(name: "HAL_InitTick", scope: !11569, file: !11569, line: 223, type: !11723, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !317)
!11723 = !DISubroutineType(types: !11724)
!11724 = !{!11213, !121}
!11725 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !11210, file: !11210, line: 775, type: !11726, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2979, retainedNodes: !11728)
!11726 = !DISubroutineType(types: !11727)
!11727 = !{null, !121, !121, !121}
!11728 = !{!11729, !11730, !11731, !11732, !11742, !11746}
!11729 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !11725, file: !11210, line: 775, type: !121)
!11730 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !11725, file: !11210, line: 775, type: !121)
!11731 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !11725, file: !11210, line: 775, type: !121)
!11732 = !DILocalVariable(name: "GPIO_InitStruct", scope: !11725, file: !11210, line: 777, type: !11733)
!11733 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !11734, line: 62, baseType: !11735)
!11734 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11735 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11734, line: 46, size: 160, elements: !11736)
!11736 = !{!11737, !11738, !11739, !11740, !11741}
!11737 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !11735, file: !11734, line: 48, baseType: !121, size: 32)
!11738 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !11735, file: !11734, line: 51, baseType: !121, size: 32, offset: 32)
!11739 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !11735, file: !11734, line: 54, baseType: !121, size: 32, offset: 64)
!11740 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !11735, file: !11734, line: 57, baseType: !121, size: 32, offset: 96)
!11741 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !11735, file: !11734, line: 60, baseType: !121, size: 32, offset: 128)
!11742 = !DILocalVariable(name: "tmpreg", scope: !11743, file: !11210, line: 787, type: !120)
!11743 = distinct !DILexicalBlock(scope: !11744, file: !11210, line: 787, column: 5)
!11744 = distinct !DILexicalBlock(scope: !11745, file: !11210, line: 783, column: 3)
!11745 = distinct !DILexicalBlock(scope: !11725, file: !11210, line: 782, column: 6)
!11746 = !DILocalVariable(name: "tmpreg", scope: !11747, file: !11210, line: 811, type: !120)
!11747 = distinct !DILexicalBlock(scope: !11748, file: !11210, line: 811, column: 5)
!11748 = distinct !DILexicalBlock(scope: !11745, file: !11210, line: 807, column: 3)
!11749 = !DILocation(line: 0, scope: !11725)
!11750 = !DILocation(line: 777, column: 3, scope: !11725)
!11751 = !DILocation(line: 777, column: 20, scope: !11725)
!11752 = !DILocation(line: 782, column: 15, scope: !11745)
!11753 = !DILocation(line: 782, column: 6, scope: !11725)
!11754 = !DILocation(line: 787, column: 5, scope: !11743)
!11755 = !DILocation(line: 787, column: 5, scope: !11744)
!11756 = !DILocation(line: 790, column: 21, scope: !11744)
!11757 = !DILocation(line: 790, column: 25, scope: !11744)
!11758 = !DILocation(line: 791, column: 21, scope: !11744)
!11759 = !DILocation(line: 791, column: 26, scope: !11744)
!11760 = !DILocation(line: 792, column: 21, scope: !11744)
!11761 = !DILocation(line: 792, column: 27, scope: !11744)
!11762 = !DILocation(line: 793, column: 21, scope: !11744)
!11763 = !DILocation(line: 793, column: 26, scope: !11744)
!11764 = !DILocation(line: 794, column: 21, scope: !11744)
!11765 = !DILocation(line: 794, column: 31, scope: !11744)
!11766 = !DILocation(line: 795, column: 5, scope: !11744)
!11767 = !DILocation(line: 798, column: 5, scope: !11744)
!11768 = !DILocation(line: 804, column: 3, scope: !11744)
!11769 = !DILocation(line: 811, column: 5, scope: !11747)
!11770 = !DILocation(line: 811, column: 5, scope: !11748)
!11771 = !DILocation(line: 814, column: 21, scope: !11748)
!11772 = !DILocation(line: 814, column: 25, scope: !11748)
!11773 = !DILocation(line: 815, column: 21, scope: !11748)
!11774 = !DILocation(line: 815, column: 26, scope: !11748)
!11775 = !DILocation(line: 816, column: 21, scope: !11748)
!11776 = !DILocation(line: 816, column: 27, scope: !11748)
!11777 = !DILocation(line: 817, column: 21, scope: !11748)
!11778 = !DILocation(line: 817, column: 26, scope: !11748)
!11779 = !DILocation(line: 818, column: 21, scope: !11748)
!11780 = !DILocation(line: 818, column: 31, scope: !11748)
!11781 = !DILocation(line: 819, column: 5, scope: !11748)
!11782 = !DILocation(line: 822, column: 5, scope: !11748)
!11783 = !DILocation(line: 0, scope: !11745)
!11784 = !DILocation(line: 830, column: 1, scope: !11725)
!11785 = !DISubprogram(name: "HAL_GPIO_Init", scope: !11734, file: !11734, line: 224, type: !11786, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !317)
!11786 = !DISubroutineType(types: !11787)
!11787 = !{null, !3052, !11788}
!11788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11733, size: 32)
!11789 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !11210, file: !11210, line: 841, type: !3213, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2979, retainedNodes: !317)
!11790 = !DILocation(line: 843, column: 38, scope: !11789)
!11791 = !DILocation(line: 844, column: 1, scope: !11789)
!11792 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !11210, file: !11210, line: 850, type: !3213, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2979, retainedNodes: !317)
!11793 = !DILocation(line: 852, column: 38, scope: !11792)
!11794 = !DILocation(line: 853, column: 1, scope: !11792)
!11795 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !11210, file: !11210, line: 941, type: !6064, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2979, retainedNodes: !317)
!11796 = !DILocation(line: 943, column: 10, scope: !11795)
!11797 = !DILocation(line: 943, column: 3, scope: !11795)
!11798 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !11210, file: !11210, line: 952, type: !6064, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2979, retainedNodes: !317)
!11799 = !DILocation(line: 955, column: 11, scope: !11798)
!11800 = !DILocation(line: 955, column: 56, scope: !11798)
!11801 = !DILocation(line: 955, column: 78, scope: !11798)
!11802 = !DILocation(line: 955, column: 36, scope: !11798)
!11803 = !DILocation(line: 955, column: 33, scope: !11798)
!11804 = !DILocation(line: 955, column: 3, scope: !11798)
!11805 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !11210, file: !11210, line: 964, type: !6064, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2979, retainedNodes: !317)
!11806 = !DILocation(line: 967, column: 11, scope: !11805)
!11807 = !DILocation(line: 967, column: 55, scope: !11805)
!11808 = !DILocation(line: 967, column: 77, scope: !11805)
!11809 = !DILocation(line: 967, column: 35, scope: !11805)
!11810 = !DILocation(line: 967, column: 32, scope: !11805)
!11811 = !DILocation(line: 967, column: 3, scope: !11805)
!11812 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !11210, file: !11210, line: 977, type: !11813, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2979, retainedNodes: !11815)
!11813 = !DISubroutineType(types: !11814)
!11814 = !{null, !11218}
!11815 = !{!11816}
!11816 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11812, file: !11210, line: 977, type: !11218)
!11817 = !DILocation(line: 0, scope: !11812)
!11818 = !DILocation(line: 980, column: 22, scope: !11812)
!11819 = !DILocation(line: 980, column: 37, scope: !11812)
!11820 = !DILocation(line: 983, column: 12, scope: !11821)
!11821 = distinct !DILexicalBlock(scope: !11812, file: !11210, line: 983, column: 6)
!11822 = !DILocation(line: 983, column: 15, scope: !11821)
!11823 = !DILocation(line: 983, column: 31, scope: !11821)
!11824 = !DILocation(line: 983, column: 6, scope: !11812)
!11825 = !DILocation(line: 985, column: 24, scope: !11826)
!11826 = distinct !DILexicalBlock(scope: !11821, file: !11210, line: 984, column: 3)
!11827 = !DILocation(line: 985, column: 33, scope: !11826)
!11828 = !DILocation(line: 986, column: 3, scope: !11826)
!11829 = !DILocation(line: 987, column: 17, scope: !11830)
!11830 = distinct !DILexicalBlock(scope: !11821, file: !11210, line: 987, column: 11)
!11831 = !DILocation(line: 987, column: 20, scope: !11830)
!11832 = !DILocation(line: 987, column: 35, scope: !11830)
!11833 = !DILocation(line: 0, scope: !11830)
!11834 = !DILocation(line: 987, column: 11, scope: !11821)
!11835 = !DILocation(line: 989, column: 33, scope: !11836)
!11836 = distinct !DILexicalBlock(scope: !11830, file: !11210, line: 988, column: 3)
!11837 = !DILocation(line: 990, column: 3, scope: !11836)
!11838 = !DILocation(line: 993, column: 33, scope: !11839)
!11839 = distinct !DILexicalBlock(scope: !11830, file: !11210, line: 992, column: 3)
!11840 = !DILocation(line: 997, column: 12, scope: !11841)
!11841 = distinct !DILexicalBlock(scope: !11812, file: !11210, line: 997, column: 6)
!11842 = !DILocation(line: 997, column: 15, scope: !11841)
!11843 = !DILocation(line: 1003, column: 24, scope: !11844)
!11844 = distinct !DILexicalBlock(scope: !11841, file: !11210, line: 1002, column: 3)
!11845 = !DILocation(line: 1003, column: 33, scope: !11844)
!11846 = !DILocation(line: 1006, column: 61, scope: !11812)
!11847 = !DILocation(line: 1006, column: 81, scope: !11812)
!11848 = !DILocation(line: 1006, column: 22, scope: !11812)
!11849 = !DILocation(line: 1006, column: 42, scope: !11812)
!11850 = !DILocation(line: 1009, column: 12, scope: !11851)
!11851 = distinct !DILexicalBlock(scope: !11812, file: !11210, line: 1009, column: 6)
!11852 = !DILocation(line: 1009, column: 17, scope: !11851)
!11853 = !DILocation(line: 1009, column: 35, scope: !11851)
!11854 = !DILocation(line: 1009, column: 6, scope: !11812)
!11855 = !DILocation(line: 1011, column: 24, scope: !11856)
!11856 = distinct !DILexicalBlock(scope: !11851, file: !11210, line: 1010, column: 3)
!11857 = !DILocation(line: 1011, column: 33, scope: !11856)
!11858 = !DILocation(line: 1012, column: 3, scope: !11856)
!11859 = !DILocation(line: 1013, column: 17, scope: !11860)
!11860 = distinct !DILexicalBlock(scope: !11851, file: !11210, line: 1013, column: 11)
!11861 = !DILocation(line: 1013, column: 22, scope: !11860)
!11862 = !DILocation(line: 1013, column: 39, scope: !11860)
!11863 = !DILocation(line: 0, scope: !11860)
!11864 = !DILocation(line: 1013, column: 11, scope: !11851)
!11865 = !DILocation(line: 1015, column: 33, scope: !11866)
!11866 = distinct !DILexicalBlock(scope: !11860, file: !11210, line: 1014, column: 3)
!11867 = !DILocation(line: 1016, column: 3, scope: !11866)
!11868 = !DILocation(line: 1019, column: 33, scope: !11869)
!11869 = distinct !DILexicalBlock(scope: !11860, file: !11210, line: 1018, column: 3)
!11870 = !DILocation(line: 1023, column: 12, scope: !11871)
!11871 = distinct !DILexicalBlock(scope: !11812, file: !11210, line: 1023, column: 6)
!11872 = !DILocation(line: 1023, column: 16, scope: !11871)
!11873 = !DILocation(line: 1029, column: 24, scope: !11874)
!11874 = distinct !DILexicalBlock(scope: !11871, file: !11210, line: 1028, column: 3)
!11875 = !DILocation(line: 1029, column: 33, scope: !11874)
!11876 = !DILocation(line: 1033, column: 12, scope: !11877)
!11877 = distinct !DILexicalBlock(scope: !11812, file: !11210, line: 1033, column: 6)
!11878 = !DILocation(line: 1033, column: 15, scope: !11877)
!11879 = !DILocation(line: 1033, column: 30, scope: !11877)
!11880 = !DILocation(line: 1033, column: 6, scope: !11812)
!11881 = !DILocation(line: 1039, column: 28, scope: !11882)
!11882 = distinct !DILexicalBlock(scope: !11877, file: !11210, line: 1038, column: 3)
!11883 = !DILocation(line: 1039, column: 37, scope: !11882)
!11884 = !DILocation(line: 1041, column: 54, scope: !11812)
!11885 = !DILocation(line: 1041, column: 62, scope: !11812)
!11886 = !DILocation(line: 1041, column: 26, scope: !11812)
!11887 = !DILocation(line: 1041, column: 36, scope: !11812)
!11888 = !DILocation(line: 1042, column: 49, scope: !11812)
!11889 = !DILocation(line: 1042, column: 57, scope: !11812)
!11890 = !DILocation(line: 1042, column: 26, scope: !11812)
!11891 = !DILocation(line: 1042, column: 31, scope: !11812)
!11892 = !DILocation(line: 1043, column: 50, scope: !11812)
!11893 = !DILocation(line: 1043, column: 78, scope: !11812)
!11894 = !DILocation(line: 1043, column: 26, scope: !11812)
!11895 = !DILocation(line: 1043, column: 31, scope: !11812)
!11896 = !DILocation(line: 1044, column: 52, scope: !11812)
!11897 = !DILocation(line: 1044, column: 102, scope: !11812)
!11898 = !DILocation(line: 1044, column: 109, scope: !11812)
!11899 = !DILocation(line: 1044, column: 26, scope: !11812)
!11900 = !DILocation(line: 1044, column: 31, scope: !11812)
!11901 = !DILocation(line: 1045, column: 50, scope: !11812)
!11902 = !DILocation(line: 1045, column: 78, scope: !11812)
!11903 = !DILocation(line: 1045, column: 26, scope: !11812)
!11904 = !DILocation(line: 1045, column: 31, scope: !11812)
!11905 = !DILocation(line: 1046, column: 1, scope: !11812)
!11906 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !11210, file: !11210, line: 1056, type: !11907, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2979, retainedNodes: !11909)
!11907 = !DISubroutineType(types: !11908)
!11908 = !{null, !11573, !849}
!11909 = !{!11910, !11911}
!11910 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !11906, file: !11210, line: 1056, type: !11573)
!11911 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !11906, file: !11210, line: 1056, type: !849)
!11912 = !DILocation(line: 0, scope: !11906)
!11913 = !DILocation(line: 1059, column: 22, scope: !11906)
!11914 = !DILocation(line: 1059, column: 32, scope: !11906)
!11915 = !DILocation(line: 1062, column: 53, scope: !11906)
!11916 = !DILocation(line: 1062, column: 58, scope: !11906)
!11917 = !DILocation(line: 1062, column: 22, scope: !11906)
!11918 = !DILocation(line: 1062, column: 35, scope: !11906)
!11919 = !DILocation(line: 1065, column: 54, scope: !11906)
!11920 = !DILocation(line: 1065, column: 59, scope: !11906)
!11921 = !DILocation(line: 1065, column: 22, scope: !11906)
!11922 = !DILocation(line: 1065, column: 36, scope: !11906)
!11923 = !DILocation(line: 1068, column: 55, scope: !11906)
!11924 = !DILocation(line: 1068, column: 60, scope: !11906)
!11925 = !DILocation(line: 1068, column: 22, scope: !11906)
!11926 = !DILocation(line: 1068, column: 37, scope: !11906)
!11927 = !DILocation(line: 1071, column: 56, scope: !11906)
!11928 = !DILocation(line: 1071, column: 79, scope: !11906)
!11929 = !DILocation(line: 1071, column: 22, scope: !11906)
!11930 = !DILocation(line: 1071, column: 37, scope: !11906)
!11931 = !DILocation(line: 1074, column: 34, scope: !11906)
!11932 = !DILocation(line: 1074, column: 38, scope: !11906)
!11933 = !DILocation(line: 1074, column: 14, scope: !11906)
!11934 = !DILocation(line: 1075, column: 1, scope: !11906)
!11935 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !11210, file: !11210, line: 1082, type: !3213, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2979, retainedNodes: !317)
!11936 = !DILocation(line: 1085, column: 6, scope: !11937)
!11937 = distinct !DILexicalBlock(scope: !11935, file: !11210, line: 1085, column: 6)
!11938 = !DILocation(line: 1085, column: 6, scope: !11935)
!11939 = !DILocation(line: 1088, column: 5, scope: !11940)
!11940 = distinct !DILexicalBlock(scope: !11937, file: !11210, line: 1086, column: 3)
!11941 = !DILocation(line: 1091, column: 5, scope: !11940)
!11942 = !DILocation(line: 1092, column: 3, scope: !11940)
!11943 = !DILocation(line: 1093, column: 1, scope: !11935)
!11944 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !11210, file: !11210, line: 1099, type: !3213, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2979, retainedNodes: !317)
!11945 = !DILocation(line: 1104, column: 1, scope: !11944)
!11946 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !11947, file: !11947, line: 257, type: !6074, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3065, retainedNodes: !11948)
!11947 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11948 = !{!11949}
!11949 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11946, file: !11947, line: 257, type: !121)
!11950 = !DILocation(line: 0, scope: !11946)
!11951 = !DILocation(line: 260, column: 3, scope: !11946)
!11952 = !DILocation(line: 261, column: 1, scope: !11946)
!11953 = distinct !DISubprogram(name: "LL_InitTick", scope: !11954, file: !11954, line: 260, type: !9235, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3065, retainedNodes: !11955)
!11954 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11955 = !{!11956, !11957}
!11956 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11953, file: !11954, line: 260, type: !121)
!11957 = !DILocalVariable(name: "Ticks", arg: 2, scope: !11953, file: !11954, line: 260, type: !121)
!11958 = !DILocation(line: 0, scope: !11953)
!11959 = !DILocation(line: 263, column: 46, scope: !11953)
!11960 = !DILocation(line: 263, column: 55, scope: !11953)
!11961 = !DILocation(line: 263, column: 18, scope: !11953)
!11962 = !DILocation(line: 264, column: 18, scope: !11953)
!11963 = !DILocation(line: 265, column: 18, scope: !11953)
!11964 = !DILocation(line: 267, column: 1, scope: !11953)
!11965 = distinct !DISubprogram(name: "LL_mDelay", scope: !11947, file: !11947, line: 273, type: !6074, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3065, retainedNodes: !11966)
!11966 = !{!11967, !11968}
!11967 = !DILocalVariable(name: "Delay", arg: 1, scope: !11965, file: !11947, line: 273, type: !121)
!11968 = !DILocalVariable(name: "tmp", scope: !11965, file: !11947, line: 275, type: !120)
!11969 = !DILocation(line: 0, scope: !11965)
!11970 = !DILocation(line: 275, column: 3, scope: !11965)
!11971 = !DILocation(line: 275, column: 18, scope: !11965)
!11972 = !DILocation(line: 275, column: 33, scope: !11965)
!11973 = !DILocation(line: 277, column: 10, scope: !11965)
!11974 = !DILocation(line: 280, column: 12, scope: !11975)
!11975 = distinct !DILexicalBlock(scope: !11965, file: !11947, line: 280, column: 6)
!11976 = !DILocation(line: 285, column: 3, scope: !11965)
!11977 = !DILocation(line: 287, column: 18, scope: !11978)
!11978 = distinct !DILexicalBlock(scope: !11979, file: !11947, line: 287, column: 8)
!11979 = distinct !DILexicalBlock(scope: !11965, file: !11947, line: 286, column: 3)
!11980 = !DILocation(line: 292, column: 1, scope: !11965)
!11981 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !11947, file: !11947, line: 323, type: !6074, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3065, retainedNodes: !11982)
!11982 = !{!11983}
!11983 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11981, file: !11947, line: 323, type: !121)
!11984 = !DILocation(line: 0, scope: !11981)
!11985 = !DILocation(line: 326, column: 19, scope: !11981)
!11986 = !DILocation(line: 327, column: 1, scope: !11981)
!11987 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !11947, file: !11947, line: 338, type: !11988, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3065, retainedNodes: !11991)
!11988 = !DISubroutineType(types: !11989)
!11989 = !{!11990, !121}
!11990 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !793, line: 201, baseType: !792)
!11991 = !{!11992, !11993, !11994, !11995, !11996}
!11992 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !11987, file: !11947, line: 338, type: !121)
!11993 = !DILocalVariable(name: "timeout", scope: !11987, file: !11947, line: 340, type: !121)
!11994 = !DILocalVariable(name: "getlatency", scope: !11987, file: !11947, line: 341, type: !121)
!11995 = !DILocalVariable(name: "latency", scope: !11987, file: !11947, line: 342, type: !121)
!11996 = !DILocalVariable(name: "status", scope: !11987, file: !11947, line: 343, type: !11990)
!11997 = !DILocation(line: 0, scope: !11987)
!11998 = !DILocation(line: 347, column: 21, scope: !11999)
!11999 = distinct !DILexicalBlock(scope: !11987, file: !11947, line: 347, column: 6)
!12000 = !DILocation(line: 347, column: 6, scope: !11987)
!12001 = !DILocation(line: 353, column: 8, scope: !12002)
!12002 = distinct !DILexicalBlock(scope: !12003, file: !11947, line: 353, column: 8)
!12003 = distinct !DILexicalBlock(scope: !11999, file: !11947, line: 352, column: 3)
!12004 = !DILocation(line: 387, column: 8, scope: !12005)
!12005 = distinct !DILexicalBlock(scope: !12003, file: !11947, line: 387, column: 8)
!12006 = !DILocation(line: 387, column: 40, scope: !12005)
!12007 = !DILocation(line: 387, column: 8, scope: !12003)
!12008 = !DILocation(line: 407, column: 26, scope: !12009)
!12009 = distinct !DILexicalBlock(scope: !12010, file: !11947, line: 407, column: 10)
!12010 = distinct !DILexicalBlock(scope: !12005, file: !11947, line: 388, column: 5)
!12011 = !DILocation(line: 407, column: 55, scope: !12009)
!12012 = !DILocation(line: 413, column: 28, scope: !12013)
!12013 = distinct !DILexicalBlock(scope: !12014, file: !11947, line: 413, column: 12)
!12014 = distinct !DILexicalBlock(scope: !12009, file: !11947, line: 412, column: 7)
!12015 = !DILocation(line: 413, column: 57, scope: !12013)
!12016 = !DILocation(line: 420, column: 8, scope: !12017)
!12017 = distinct !DILexicalBlock(scope: !12003, file: !11947, line: 420, column: 8)
!12018 = !DILocation(line: 420, column: 40, scope: !12017)
!12019 = !DILocation(line: 420, column: 8, scope: !12003)
!12020 = !DILocation(line: 429, column: 26, scope: !12021)
!12021 = distinct !DILexicalBlock(scope: !12022, file: !11947, line: 429, column: 10)
!12022 = distinct !DILexicalBlock(scope: !12017, file: !11947, line: 421, column: 5)
!12023 = !DILocation(line: 429, column: 55, scope: !12021)
!12024 = !DILocation(line: 435, column: 28, scope: !12025)
!12025 = distinct !DILexicalBlock(scope: !12026, file: !11947, line: 435, column: 12)
!12026 = distinct !DILexicalBlock(scope: !12021, file: !11947, line: 434, column: 7)
!12027 = !DILocation(line: 435, column: 57, scope: !12025)
!12028 = !DILocation(line: 0, scope: !12003)
!12029 = !DILocation(line: 444, column: 5, scope: !12003)
!12030 = !DILocation(line: 448, column: 5, scope: !12003)
!12031 = !DILocation(line: 451, column: 18, scope: !12032)
!12032 = distinct !DILexicalBlock(scope: !12003, file: !11947, line: 449, column: 5)
!12033 = !DILocation(line: 452, column: 12, scope: !12032)
!12034 = !DILocation(line: 453, column: 26, scope: !12003)
!12035 = !DILocation(line: 453, column: 38, scope: !12003)
!12036 = !DILocation(line: 453, column: 5, scope: !12032)
!12037 = distinct !{!12037, !12030, !12038}
!12038 = !DILocation(line: 453, column: 54, scope: !12003)
!12039 = !DILocation(line: 0, scope: !11999)
!12040 = !DILocation(line: 464, column: 3, scope: !11987)
!12041 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !12042, file: !12042, line: 519, type: !6064, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3065, retainedNodes: !317)
!12042 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12043 = !DILocation(line: 521, column: 21, scope: !12041)
!12044 = !DILocation(line: 521, column: 3, scope: !12041)
!12045 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !5789, file: !5789, line: 1543, type: !6074, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3065, retainedNodes: !12046)
!12046 = !{!12047}
!12047 = !DILocalVariable(name: "Latency", arg: 1, scope: !12045, file: !5789, line: 1543, type: !121)
!12048 = !DILocation(line: 0, scope: !12045)
!12049 = !DILocation(line: 1545, column: 3, scope: !12045)
!12050 = !DILocation(line: 1546, column: 1, scope: !12045)
!12051 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !5789, file: !5789, line: 1569, type: !6064, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3065, retainedNodes: !317)
!12052 = !DILocation(line: 1571, column: 21, scope: !12051)
!12053 = !DILocation(line: 1571, column: 3, scope: !12051)
!12054 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !11947, file: !11947, line: 483, type: !12055, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3065, retainedNodes: !12071)
!12055 = !DISubroutineType(types: !12056)
!12056 = !{!11990, !12057, !12064}
!12057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12058, size: 32)
!12058 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !11954, line: 114, baseType: !12059)
!12059 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11954, line: 94, size: 96, elements: !12060)
!12060 = !{!12061, !12062, !12063}
!12061 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !12059, file: !11954, line: 96, baseType: !121, size: 32)
!12062 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !12059, file: !11954, line: 102, baseType: !121, size: 32, offset: 32)
!12063 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !12059, file: !11954, line: 109, baseType: !121, size: 32, offset: 64)
!12064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12065, size: 32)
!12065 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !11954, line: 139, baseType: !12066)
!12066 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11954, line: 119, size: 96, elements: !12067)
!12067 = !{!12068, !12069, !12070}
!12068 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12066, file: !11954, line: 121, baseType: !121, size: 32)
!12069 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12066, file: !11954, line: 127, baseType: !121, size: 32, offset: 32)
!12070 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12066, file: !11954, line: 133, baseType: !121, size: 32, offset: 64)
!12071 = !{!12072, !12073, !12074, !12075}
!12072 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !12054, file: !11947, line: 483, type: !12057)
!12073 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12054, file: !11947, line: 484, type: !12064)
!12074 = !DILocalVariable(name: "status", scope: !12054, file: !11947, line: 486, type: !11990)
!12075 = !DILocalVariable(name: "pllfreq", scope: !12054, file: !11947, line: 487, type: !121)
!12076 = !DILocation(line: 0, scope: !12054)
!12077 = !DILocation(line: 490, column: 6, scope: !12078)
!12078 = distinct !DILexicalBlock(scope: !12054, file: !11947, line: 490, column: 6)
!12079 = !DILocation(line: 490, column: 25, scope: !12078)
!12080 = !DILocation(line: 490, column: 6, scope: !12054)
!12081 = !DILocation(line: 493, column: 15, scope: !12082)
!12082 = distinct !DILexicalBlock(scope: !12078, file: !11947, line: 491, column: 3)
!12083 = !DILocation(line: 496, column: 8, scope: !12084)
!12084 = distinct !DILexicalBlock(scope: !12082, file: !11947, line: 496, column: 8)
!12085 = !DILocation(line: 496, column: 29, scope: !12084)
!12086 = !DILocation(line: 496, column: 8, scope: !12082)
!12087 = !DILocation(line: 498, column: 7, scope: !12088)
!12088 = distinct !DILexicalBlock(scope: !12084, file: !11947, line: 497, column: 5)
!12089 = !DILocation(line: 499, column: 7, scope: !12088)
!12090 = !DILocation(line: 499, column: 14, scope: !12088)
!12091 = !DILocation(line: 499, column: 35, scope: !12088)
!12092 = distinct !{!12092, !12089, !12093}
!12093 = !DILocation(line: 502, column: 7, scope: !12088)
!12094 = !DILocation(line: 506, column: 76, scope: !12082)
!12095 = !DILocation(line: 506, column: 103, scope: !12082)
!12096 = !DILocation(line: 507, column: 54, scope: !12082)
!12097 = !DILocation(line: 506, column: 5, scope: !12082)
!12098 = !DILocation(line: 510, column: 14, scope: !12082)
!12099 = !DILocation(line: 511, column: 3, scope: !12082)
!12100 = !DILocation(line: 0, scope: !12078)
!12101 = !DILocation(line: 518, column: 3, scope: !12054)
!12102 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !11947, file: !11947, line: 642, type: !12103, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3065, retainedNodes: !12105)
!12103 = !DISubroutineType(types: !12104)
!12104 = !{!11990}
!12105 = !{!12106}
!12106 = !DILocalVariable(name: "status", scope: !12102, file: !11947, line: 644, type: !11990)
!12107 = !DILocation(line: 0, scope: !12102)
!12108 = !DILocation(line: 647, column: 6, scope: !12109)
!12109 = distinct !DILexicalBlock(scope: !12102, file: !11947, line: 647, column: 6)
!12110 = !DILocation(line: 647, column: 27, scope: !12109)
!12111 = !DILocation(line: 663, column: 6, scope: !12112)
!12112 = distinct !DILexicalBlock(scope: !12102, file: !11947, line: 663, column: 6)
!12113 = !DILocation(line: 663, column: 30, scope: !12112)
!12114 = !DILocation(line: 663, column: 6, scope: !12102)
!12115 = !DILocation(line: 669, column: 3, scope: !12102)
!12116 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !11947, file: !11947, line: 611, type: !12117, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3065, retainedNodes: !12119)
!12117 = !DISubroutineType(types: !12118)
!12118 = !{!121, !121, !12057}
!12119 = !{!12120, !12121, !12122}
!12120 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !12116, file: !11947, line: 611, type: !121)
!12121 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !12116, file: !11947, line: 611, type: !12057)
!12122 = !DILocalVariable(name: "pllfreq", scope: !12116, file: !11947, line: 613, type: !121)
!12123 = !DILocation(line: 0, scope: !12116)
!12124 = !DILocation(line: 622, column: 56, scope: !12116)
!12125 = !DILocation(line: 622, column: 61, scope: !12116)
!12126 = !DILocation(line: 622, column: 32, scope: !12116)
!12127 = !DILocation(line: 626, column: 45, scope: !12116)
!12128 = !DILocation(line: 626, column: 50, scope: !12116)
!12129 = !DILocation(line: 626, column: 21, scope: !12116)
!12130 = !DILocation(line: 630, column: 47, scope: !12116)
!12131 = !DILocation(line: 630, column: 82, scope: !12116)
!12132 = !DILocation(line: 630, column: 21, scope: !12116)
!12133 = !DILocation(line: 633, column: 3, scope: !12116)
!12134 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8019, file: !8019, line: 3007, type: !6064, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3065, retainedNodes: !317)
!12135 = !DILocation(line: 3009, column: 11, scope: !12134)
!12136 = !DILocation(line: 3009, column: 44, scope: !12134)
!12137 = !DILocation(line: 3009, column: 3, scope: !12134)
!12138 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8019, file: !8019, line: 2987, type: !3213, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3065, retainedNodes: !317)
!12139 = !DILocation(line: 2989, column: 3, scope: !12138)
!12140 = !DILocation(line: 2990, column: 1, scope: !12138)
!12141 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8019, file: !8019, line: 4304, type: !8153, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3065, retainedNodes: !12142)
!12142 = !{!12143, !12144, !12145, !12146}
!12143 = !DILocalVariable(name: "Source", arg: 1, scope: !12141, file: !8019, line: 4304, type: !121)
!12144 = !DILocalVariable(name: "PLLM", arg: 2, scope: !12141, file: !8019, line: 4304, type: !121)
!12145 = !DILocalVariable(name: "PLLN", arg: 3, scope: !12141, file: !8019, line: 4304, type: !121)
!12146 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !12141, file: !8019, line: 4304, type: !121)
!12147 = !DILocation(line: 0, scope: !12141)
!12148 = !DILocation(line: 4306, column: 3, scope: !12141)
!12149 = !DILocation(line: 4308, column: 3, scope: !12141)
!12150 = !DILocation(line: 4312, column: 1, scope: !12141)
!12151 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !11947, file: !11947, line: 681, type: !12152, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3065, retainedNodes: !12154)
!12152 = !DISubroutineType(types: !12153)
!12153 = !{!11990, !121, !12064}
!12154 = !{!12155, !12156, !12157, !12158}
!12155 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !12151, file: !11947, line: 681, type: !121)
!12156 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12151, file: !11947, line: 681, type: !12064)
!12157 = !DILocalVariable(name: "status", scope: !12151, file: !11947, line: 683, type: !11990)
!12158 = !DILocalVariable(name: "hclk_frequency", scope: !12151, file: !11947, line: 684, type: !121)
!12159 = !DILocation(line: 0, scope: !12151)
!12160 = !DILocation(line: 691, column: 20, scope: !12151)
!12161 = !DILocation(line: 694, column: 6, scope: !12162)
!12162 = distinct !DILexicalBlock(scope: !12151, file: !11947, line: 694, column: 6)
!12163 = !DILocation(line: 694, column: 22, scope: !12162)
!12164 = !DILocation(line: 694, column: 6, scope: !12151)
!12165 = !DILocation(line: 697, column: 14, scope: !12166)
!12166 = distinct !DILexicalBlock(scope: !12162, file: !11947, line: 695, column: 3)
!12167 = !DILocation(line: 701, column: 13, scope: !12168)
!12168 = distinct !DILexicalBlock(scope: !12151, file: !11947, line: 701, column: 6)
!12169 = !DILocation(line: 701, column: 6, scope: !12151)
!12170 = !DILocation(line: 704, column: 5, scope: !12171)
!12171 = distinct !DILexicalBlock(scope: !12168, file: !11947, line: 702, column: 3)
!12172 = !DILocation(line: 705, column: 5, scope: !12171)
!12173 = !DILocation(line: 705, column: 12, scope: !12171)
!12174 = !DILocation(line: 705, column: 33, scope: !12171)
!12175 = distinct !{!12175, !12172, !12176}
!12176 = !DILocation(line: 708, column: 5, scope: !12171)
!12177 = !DILocation(line: 711, column: 49, scope: !12171)
!12178 = !DILocation(line: 711, column: 5, scope: !12171)
!12179 = !DILocation(line: 712, column: 5, scope: !12171)
!12180 = !DILocation(line: 713, column: 5, scope: !12171)
!12181 = !DILocation(line: 713, column: 12, scope: !12171)
!12182 = !DILocation(line: 713, column: 37, scope: !12171)
!12183 = distinct !{!12183, !12180, !12184}
!12184 = !DILocation(line: 716, column: 5, scope: !12171)
!12185 = !DILocation(line: 719, column: 50, scope: !12171)
!12186 = !DILocation(line: 719, column: 5, scope: !12171)
!12187 = !DILocation(line: 720, column: 50, scope: !12171)
!12188 = !DILocation(line: 720, column: 5, scope: !12171)
!12189 = !DILocation(line: 721, column: 3, scope: !12171)
!12190 = !DILocation(line: 724, column: 6, scope: !12191)
!12191 = distinct !DILexicalBlock(scope: !12151, file: !11947, line: 724, column: 6)
!12192 = !DILocation(line: 724, column: 22, scope: !12191)
!12193 = !DILocation(line: 724, column: 6, scope: !12151)
!12194 = !DILocation(line: 727, column: 14, scope: !12195)
!12195 = distinct !DILexicalBlock(scope: !12191, file: !11947, line: 725, column: 3)
!12196 = !DILocation(line: 728, column: 3, scope: !12195)
!12197 = !DILocation(line: 731, column: 13, scope: !12198)
!12198 = distinct !DILexicalBlock(scope: !12151, file: !11947, line: 731, column: 6)
!12199 = !DILocation(line: 731, column: 6, scope: !12151)
!12200 = !DILocation(line: 733, column: 5, scope: !12201)
!12201 = distinct !DILexicalBlock(scope: !12198, file: !11947, line: 732, column: 3)
!12202 = !DILocation(line: 734, column: 3, scope: !12201)
!12203 = !DILocation(line: 736, column: 3, scope: !12151)
!12204 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8019, file: !8019, line: 4184, type: !3213, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3065, retainedNodes: !317)
!12205 = !DILocation(line: 4186, column: 3, scope: !12204)
!12206 = !DILocation(line: 4187, column: 1, scope: !12204)
!12207 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8019, file: !8019, line: 4205, type: !6064, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3065, retainedNodes: !317)
!12208 = !DILocation(line: 4207, column: 11, scope: !12207)
!12209 = !DILocation(line: 4207, column: 44, scope: !12207)
!12210 = !DILocation(line: 4207, column: 3, scope: !12207)
!12211 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8019, file: !8019, line: 3224, type: !6074, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3065, retainedNodes: !12212)
!12212 = !{!12213}
!12213 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12211, file: !8019, line: 3224, type: !121)
!12214 = !DILocation(line: 0, scope: !12211)
!12215 = !DILocation(line: 3226, column: 3, scope: !12211)
!12216 = !DILocation(line: 3227, column: 1, scope: !12211)
!12217 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8019, file: !8019, line: 3188, type: !6074, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3065, retainedNodes: !12218)
!12218 = !{!12219}
!12219 = !DILocalVariable(name: "Source", arg: 1, scope: !12217, file: !8019, line: 3188, type: !121)
!12220 = !DILocation(line: 0, scope: !12217)
!12221 = !DILocation(line: 3190, column: 3, scope: !12217)
!12222 = !DILocation(line: 3191, column: 1, scope: !12217)
!12223 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8019, file: !8019, line: 3204, type: !6064, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3065, retainedNodes: !317)
!12224 = !DILocation(line: 3206, column: 21, scope: !12223)
!12225 = !DILocation(line: 3206, column: 3, scope: !12223)
!12226 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8019, file: !8019, line: 3240, type: !6074, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3065, retainedNodes: !12227)
!12227 = !{!12228}
!12228 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12226, file: !8019, line: 3240, type: !121)
!12229 = !DILocation(line: 0, scope: !12226)
!12230 = !DILocation(line: 3242, column: 3, scope: !12226)
!12231 = !DILocation(line: 3243, column: 1, scope: !12226)
!12232 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8019, file: !8019, line: 3256, type: !6074, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3065, retainedNodes: !12233)
!12233 = !{!12234}
!12234 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12232, file: !8019, line: 3256, type: !121)
!12235 = !DILocation(line: 0, scope: !12232)
!12236 = !DILocation(line: 3258, column: 3, scope: !12232)
!12237 = !DILocation(line: 3259, column: 1, scope: !12232)
!12238 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !8019, file: !8019, line: 5153, type: !6064, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3065, retainedNodes: !317)
!12239 = !DILocation(line: 5155, column: 11, scope: !12238)
!12240 = !DILocation(line: 5155, column: 47, scope: !12238)
!12241 = !DILocation(line: 5155, column: 3, scope: !12238)
!12242 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !11947, file: !11947, line: 540, type: !12243, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3065, retainedNodes: !12245)
!12243 = !DISubroutineType(types: !12244)
!12244 = !{!11990, !121, !121, !12057, !12064}
!12245 = !{!12246, !12247, !12248, !12249, !12250, !12251}
!12246 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !12242, file: !11947, line: 540, type: !121)
!12247 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !12242, file: !11947, line: 540, type: !121)
!12248 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !12242, file: !11947, line: 541, type: !12057)
!12249 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !12242, file: !11947, line: 541, type: !12064)
!12250 = !DILocalVariable(name: "status", scope: !12242, file: !11947, line: 543, type: !11990)
!12251 = !DILocalVariable(name: "pllfreq", scope: !12242, file: !11947, line: 544, type: !121)
!12252 = !DILocation(line: 0, scope: !12242)
!12253 = !DILocation(line: 551, column: 6, scope: !12254)
!12254 = distinct !DILexicalBlock(scope: !12242, file: !11947, line: 551, column: 6)
!12255 = !DILocation(line: 551, column: 25, scope: !12254)
!12256 = !DILocation(line: 551, column: 6, scope: !12242)
!12257 = !DILocation(line: 554, column: 15, scope: !12258)
!12258 = distinct !DILexicalBlock(scope: !12254, file: !11947, line: 552, column: 3)
!12259 = !DILocation(line: 557, column: 8, scope: !12260)
!12260 = distinct !DILexicalBlock(scope: !12258, file: !11947, line: 557, column: 8)
!12261 = !DILocation(line: 557, column: 29, scope: !12260)
!12262 = !DILocation(line: 557, column: 8, scope: !12258)
!12263 = !DILocation(line: 560, column: 20, scope: !12264)
!12264 = distinct !DILexicalBlock(scope: !12265, file: !11947, line: 560, column: 10)
!12265 = distinct !DILexicalBlock(scope: !12260, file: !11947, line: 558, column: 5)
!12266 = !DILocation(line: 560, column: 10, scope: !12265)
!12267 = !DILocation(line: 562, column: 9, scope: !12268)
!12268 = distinct !DILexicalBlock(scope: !12264, file: !11947, line: 561, column: 7)
!12269 = !DILocation(line: 563, column: 7, scope: !12268)
!12270 = !DILocation(line: 566, column: 9, scope: !12271)
!12271 = distinct !DILexicalBlock(scope: !12264, file: !11947, line: 565, column: 7)
!12272 = !DILocation(line: 570, column: 7, scope: !12265)
!12273 = !DILocation(line: 571, column: 7, scope: !12265)
!12274 = !DILocation(line: 571, column: 14, scope: !12265)
!12275 = !DILocation(line: 571, column: 35, scope: !12265)
!12276 = distinct !{!12276, !12273, !12277}
!12277 = !DILocation(line: 574, column: 7, scope: !12265)
!12278 = !DILocation(line: 578, column: 76, scope: !12258)
!12279 = !DILocation(line: 578, column: 103, scope: !12258)
!12280 = !DILocation(line: 579, column: 54, scope: !12258)
!12281 = !DILocation(line: 578, column: 5, scope: !12258)
!12282 = !DILocation(line: 582, column: 14, scope: !12258)
!12283 = !DILocation(line: 583, column: 3, scope: !12258)
!12284 = !DILocation(line: 0, scope: !12254)
!12285 = !DILocation(line: 590, column: 3, scope: !12242)
!12286 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8019, file: !8019, line: 2969, type: !6064, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3065, retainedNodes: !317)
!12287 = !DILocation(line: 2971, column: 11, scope: !12286)
!12288 = !DILocation(line: 2971, column: 44, scope: !12286)
!12289 = !DILocation(line: 2971, column: 3, scope: !12286)
!12290 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !8019, file: !8019, line: 2929, type: !3213, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3065, retainedNodes: !317)
!12291 = !DILocation(line: 2931, column: 3, scope: !12290)
!12292 = !DILocation(line: 2932, column: 1, scope: !12290)
!12293 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8019, file: !8019, line: 2939, type: !3213, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3065, retainedNodes: !317)
!12294 = !DILocation(line: 2941, column: 3, scope: !12293)
!12295 = !DILocation(line: 2942, column: 1, scope: !12293)
!12296 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8019, file: !8019, line: 2949, type: !3213, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3065, retainedNodes: !317)
!12297 = !DILocation(line: 2951, column: 3, scope: !12296)
!12298 = !DILocation(line: 2952, column: 1, scope: !12296)
!12299 = distinct !DISubprogram(name: "z_device_state_init", scope: !12300, file: !12300, line: 23, type: !3213, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3130, retainedNodes: !12301)
!12300 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12301 = !{!12302}
!12302 = !DILocalVariable(name: "dev", scope: !12299, file: !12300, line: 25, type: !12303)
!12303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12304, size: 32)
!12304 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12305)
!12305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !12306)
!12306 = !{!12307, !12308, !12309, !12310, !12316, !12317}
!12307 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12305, file: !141, line: 380, baseType: !144, size: 32)
!12308 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !12305, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!12309 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !12305, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!12310 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !12305, file: !141, line: 386, baseType: !12311, size: 32, offset: 96)
!12311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12312, size: 32)
!12312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !12313)
!12313 = !{!12314, !12315}
!12314 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !12312, file: !141, line: 359, baseType: !154, size: 8)
!12315 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !12312, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!12316 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12305, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!12317 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !12305, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!12318 = !DILocation(line: 0, scope: !12299)
!12319 = !DILocation(line: 31, column: 1, scope: !12299)
!12320 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !12300, file: !12300, line: 33, type: !12321, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3130, retainedNodes: !12323)
!12321 = !DISubroutineType(types: !12322)
!12322 = !{!12303, !144}
!12323 = !{!12324, !12325}
!12324 = !DILocalVariable(name: "name", arg: 1, scope: !12320, file: !12300, line: 33, type: !144)
!12325 = !DILocalVariable(name: "dev", scope: !12320, file: !12300, line: 35, type: !12303)
!12326 = !DILocation(line: 0, scope: !12320)
!12327 = !DILocation(line: 40, column: 12, scope: !12328)
!12328 = distinct !DILexicalBlock(scope: !12320, file: !12300, line: 40, column: 6)
!12329 = !DILocation(line: 40, column: 21, scope: !12328)
!12330 = !DILocation(line: 40, column: 25, scope: !12328)
!12331 = !DILocation(line: 40, column: 33, scope: !12328)
!12332 = !DILocation(line: 40, column: 6, scope: !12320)
!12333 = !DILocation(line: 55, column: 2, scope: !12334)
!12334 = distinct !DILexicalBlock(scope: !12320, file: !12300, line: 55, column: 2)
!12335 = !DILocation(line: 50, column: 7, scope: !12336)
!12336 = distinct !DILexicalBlock(scope: !12337, file: !12300, line: 50, column: 7)
!12337 = distinct !DILexicalBlock(scope: !12338, file: !12300, line: 49, column: 57)
!12338 = distinct !DILexicalBlock(scope: !12339, file: !12300, line: 49, column: 2)
!12339 = distinct !DILexicalBlock(scope: !12320, file: !12300, line: 49, column: 2)
!12340 = !DILocation(line: 50, column: 30, scope: !12336)
!12341 = !DILocation(line: 50, column: 39, scope: !12336)
!12342 = !DILocation(line: 50, column: 44, scope: !12336)
!12343 = !DILocation(line: 50, column: 7, scope: !12337)
!12344 = !DILocation(line: 49, column: 53, scope: !12338)
!12345 = !DILocation(line: 49, column: 33, scope: !12338)
!12346 = !DILocation(line: 49, column: 2, scope: !12339)
!12347 = distinct !{!12347, !12346, !12348}
!12348 = !DILocation(line: 53, column: 2, scope: !12339)
!12349 = !DILocation(line: 56, column: 7, scope: !12350)
!12350 = distinct !DILexicalBlock(scope: !12351, file: !12300, line: 56, column: 7)
!12351 = distinct !DILexicalBlock(scope: !12352, file: !12300, line: 55, column: 57)
!12352 = distinct !DILexicalBlock(scope: !12334, file: !12300, line: 55, column: 2)
!12353 = !DILocation(line: 56, column: 30, scope: !12350)
!12354 = !DILocation(line: 56, column: 52, scope: !12350)
!12355 = !DILocation(line: 56, column: 34, scope: !12350)
!12356 = !DILocation(line: 56, column: 58, scope: !12350)
!12357 = !DILocation(line: 56, column: 7, scope: !12351)
!12358 = !DILocation(line: 55, column: 53, scope: !12352)
!12359 = !DILocation(line: 55, column: 33, scope: !12352)
!12360 = distinct !{!12360, !12333, !12361}
!12361 = !DILocation(line: 59, column: 2, scope: !12334)
!12362 = !DILocation(line: 62, column: 1, scope: !12320)
!12363 = distinct !DISubprogram(name: "z_device_is_ready", scope: !12300, file: !12300, line: 93, type: !12364, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3130, retainedNodes: !12366)
!12364 = !DISubroutineType(types: !12365)
!12365 = !{!157, !12303}
!12366 = !{!12367}
!12367 = !DILocalVariable(name: "dev", arg: 1, scope: !12363, file: !12300, line: 93, type: !12303)
!12368 = !DILocation(line: 0, scope: !12363)
!12369 = !DILocation(line: 99, column: 10, scope: !12370)
!12370 = distinct !DILexicalBlock(scope: !12363, file: !12300, line: 99, column: 6)
!12371 = !DILocation(line: 99, column: 6, scope: !12363)
!12372 = !DILocation(line: 103, column: 14, scope: !12363)
!12373 = !DILocation(line: 103, column: 21, scope: !12363)
!12374 = !DILocation(line: 103, column: 33, scope: !12363)
!12375 = !DILocation(line: 103, column: 49, scope: !12363)
!12376 = !DILocation(line: 103, column: 58, scope: !12363)
!12377 = !DILocation(line: 104, column: 1, scope: !12363)
!12378 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !12300, file: !12300, line: 87, type: !12379, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3130, retainedNodes: !12382)
!12379 = !DISubroutineType(types: !12380)
!12380 = !{!204, !12381}
!12381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12303, size: 32)
!12382 = !{!12383}
!12383 = !DILocalVariable(name: "devices", arg: 1, scope: !12378, file: !12300, line: 87, type: !12381)
!12384 = !DILocation(line: 0, scope: !12378)
!12385 = !DILocation(line: 89, column: 11, scope: !12378)
!12386 = !DILocation(line: 90, column: 2, scope: !12378)
!12387 = distinct !DISubprogram(name: "device_required_foreach", scope: !12300, file: !12300, line: 125, type: !12388, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3130, retainedNodes: !12394)
!12388 = !DISubroutineType(types: !12389)
!12389 = !{!103, !12303, !12390, !102}
!12390 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !141, line: 471, baseType: !12391)
!12391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12392, size: 32)
!12392 = !DISubroutineType(types: !12393)
!12393 = !{!103, !12303, !102}
!12394 = !{!12395, !12396, !12397, !12398, !12399}
!12395 = !DILocalVariable(name: "dev", arg: 1, scope: !12387, file: !12300, line: 125, type: !12303)
!12396 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !12387, file: !12300, line: 126, type: !12390)
!12397 = !DILocalVariable(name: "context", arg: 3, scope: !12387, file: !12300, line: 127, type: !102)
!12398 = !DILocalVariable(name: "handle_count", scope: !12387, file: !12300, line: 129, type: !204)
!12399 = !DILocalVariable(name: "handles", scope: !12387, file: !12300, line: 130, type: !160)
!12400 = !DILocation(line: 0, scope: !12387)
!12401 = !DILocation(line: 129, column: 2, scope: !12387)
!12402 = !DILocation(line: 129, column: 9, scope: !12387)
!12403 = !DILocation(line: 130, column: 35, scope: !12387)
!12404 = !DILocation(line: 132, column: 33, scope: !12387)
!12405 = !DILocation(line: 132, column: 9, scope: !12387)
!12406 = !DILocation(line: 133, column: 1, scope: !12387)
!12407 = !DILocation(line: 132, column: 2, scope: !12387)
!12408 = distinct !DISubprogram(name: "device_required_handles_get", scope: !141, file: !141, line: 493, type: !12409, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3130, retainedNodes: !12411)
!12409 = !DISubroutineType(types: !12410)
!12410 = !{!160, !12303, !2626}
!12411 = !{!12412, !12413, !12414, !12415}
!12412 = !DILocalVariable(name: "dev", arg: 1, scope: !12408, file: !141, line: 493, type: !12303)
!12413 = !DILocalVariable(name: "count", arg: 2, scope: !12408, file: !141, line: 493, type: !2626)
!12414 = !DILocalVariable(name: "rv", scope: !12408, file: !141, line: 495, type: !160)
!12415 = !DILocalVariable(name: "i", scope: !12416, file: !141, line: 498, type: !204)
!12416 = distinct !DILexicalBlock(scope: !12417, file: !141, line: 497, column: 18)
!12417 = distinct !DILexicalBlock(scope: !12408, file: !141, line: 497, column: 6)
!12418 = !DILocation(line: 0, scope: !12408)
!12419 = !DILocation(line: 495, column: 35, scope: !12408)
!12420 = !DILocation(line: 497, column: 9, scope: !12417)
!12421 = !DILocation(line: 497, column: 6, scope: !12408)
!12422 = !DILocation(line: 0, scope: !12416)
!12423 = !DILocation(line: 500, column: 11, scope: !12416)
!12424 = !DILocation(line: 500, column: 40, scope: !12416)
!12425 = !DILocation(line: 502, column: 4, scope: !12426)
!12426 = distinct !DILexicalBlock(scope: !12416, file: !141, line: 501, column: 40)
!12427 = distinct !{!12427, !12428, !12429}
!12428 = !DILocation(line: 500, column: 3, scope: !12416)
!12429 = !DILocation(line: 503, column: 3, scope: !12416)
!12430 = !DILocation(line: 504, column: 10, scope: !12416)
!12431 = !DILocation(line: 505, column: 2, scope: !12416)
!12432 = !DILocation(line: 507, column: 2, scope: !12408)
!12433 = distinct !DISubprogram(name: "device_visitor", scope: !12300, file: !12300, line: 106, type: !12434, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3130, retainedNodes: !12436)
!12434 = !DISubroutineType(types: !12435)
!12435 = !{!103, !160, !204, !12390, !102}
!12436 = !{!12437, !12438, !12439, !12440, !12441, !12443, !12446, !12447}
!12437 = !DILocalVariable(name: "handles", arg: 1, scope: !12433, file: !12300, line: 106, type: !160)
!12438 = !DILocalVariable(name: "handle_count", arg: 2, scope: !12433, file: !12300, line: 107, type: !204)
!12439 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !12433, file: !12300, line: 108, type: !12390)
!12440 = !DILocalVariable(name: "context", arg: 4, scope: !12433, file: !12300, line: 109, type: !102)
!12441 = !DILocalVariable(name: "i", scope: !12442, file: !12300, line: 112, type: !204)
!12442 = distinct !DILexicalBlock(scope: !12433, file: !12300, line: 112, column: 2)
!12443 = !DILocalVariable(name: "dh", scope: !12444, file: !12300, line: 113, type: !162)
!12444 = distinct !DILexicalBlock(scope: !12445, file: !12300, line: 112, column: 44)
!12445 = distinct !DILexicalBlock(scope: !12442, file: !12300, line: 112, column: 2)
!12446 = !DILocalVariable(name: "rdev", scope: !12444, file: !12300, line: 114, type: !12303)
!12447 = !DILocalVariable(name: "rc", scope: !12444, file: !12300, line: 115, type: !103)
!12448 = !DILocation(line: 0, scope: !12433)
!12449 = !DILocation(line: 0, scope: !12442)
!12450 = !DILocation(line: 112, column: 23, scope: !12445)
!12451 = !DILocation(line: 112, column: 2, scope: !12442)
!12452 = distinct !{!12452, !12451, !12453}
!12453 = !DILocation(line: 120, column: 2, scope: !12442)
!12454 = !DILocation(line: 113, column: 24, scope: !12444)
!12455 = !DILocation(line: 0, scope: !12444)
!12456 = !DILocation(line: 114, column: 31, scope: !12444)
!12457 = !DILocation(line: 115, column: 12, scope: !12444)
!12458 = !DILocation(line: 117, column: 10, scope: !12459)
!12459 = distinct !DILexicalBlock(scope: !12444, file: !12300, line: 117, column: 7)
!12460 = !DILocation(line: 112, column: 39, scope: !12445)
!12461 = !DILocation(line: 123, column: 1, scope: !12433)
!12462 = distinct !DISubprogram(name: "device_from_handle", scope: !141, file: !141, line: 439, type: !12463, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3130, retainedNodes: !12465)
!12463 = !DISubroutineType(types: !12464)
!12464 = !{!12303, !162}
!12465 = !{!12466, !12467, !12468}
!12466 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !12462, file: !141, line: 439, type: !162)
!12467 = !DILocalVariable(name: "dev", scope: !12462, file: !141, line: 443, type: !12303)
!12468 = !DILocalVariable(name: "numdev", scope: !12462, file: !141, line: 444, type: !204)
!12469 = !DILocation(line: 0, scope: !12462)
!12470 = !DILocation(line: 446, column: 7, scope: !12471)
!12471 = distinct !DILexicalBlock(scope: !12462, file: !141, line: 446, column: 6)
!12472 = !DILocation(line: 446, column: 18, scope: !12471)
!12473 = !DILocation(line: 446, column: 23, scope: !12471)
!12474 = !DILocation(line: 450, column: 2, scope: !12462)
!12475 = distinct !DISubprogram(name: "device_supported_foreach", scope: !12300, file: !12300, line: 135, type: !12388, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3130, retainedNodes: !12476)
!12476 = !{!12477, !12478, !12479, !12480, !12481}
!12477 = !DILocalVariable(name: "dev", arg: 1, scope: !12475, file: !12300, line: 135, type: !12303)
!12478 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !12475, file: !12300, line: 136, type: !12390)
!12479 = !DILocalVariable(name: "context", arg: 3, scope: !12475, file: !12300, line: 137, type: !102)
!12480 = !DILocalVariable(name: "handle_count", scope: !12475, file: !12300, line: 139, type: !204)
!12481 = !DILocalVariable(name: "handles", scope: !12475, file: !12300, line: 140, type: !160)
!12482 = !DILocation(line: 0, scope: !12475)
!12483 = !DILocation(line: 139, column: 2, scope: !12475)
!12484 = !DILocation(line: 139, column: 9, scope: !12475)
!12485 = !DILocation(line: 140, column: 35, scope: !12475)
!12486 = !DILocation(line: 142, column: 33, scope: !12475)
!12487 = !DILocation(line: 142, column: 9, scope: !12475)
!12488 = !DILocation(line: 143, column: 1, scope: !12475)
!12489 = !DILocation(line: 142, column: 2, scope: !12475)
!12490 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !141, file: !141, line: 573, type: !12409, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3130, retainedNodes: !12491)
!12491 = !{!12492, !12493, !12494, !12495, !12496}
!12492 = !DILocalVariable(name: "dev", arg: 1, scope: !12490, file: !141, line: 573, type: !12303)
!12493 = !DILocalVariable(name: "count", arg: 2, scope: !12490, file: !141, line: 573, type: !2626)
!12494 = !DILocalVariable(name: "rv", scope: !12490, file: !141, line: 575, type: !160)
!12495 = !DILocalVariable(name: "region", scope: !12490, file: !141, line: 576, type: !204)
!12496 = !DILocalVariable(name: "i", scope: !12490, file: !141, line: 577, type: !204)
!12497 = !DILocation(line: 0, scope: !12490)
!12498 = !DILocation(line: 575, column: 35, scope: !12490)
!12499 = !DILocation(line: 579, column: 9, scope: !12500)
!12500 = distinct !DILexicalBlock(scope: !12490, file: !141, line: 579, column: 6)
!12501 = !DILocation(line: 579, column: 6, scope: !12490)
!12502 = !DILocation(line: 582, column: 8, scope: !12503)
!12503 = distinct !DILexicalBlock(scope: !12504, file: !141, line: 582, column: 8)
!12504 = distinct !DILexicalBlock(scope: !12505, file: !141, line: 581, column: 23)
!12505 = distinct !DILexicalBlock(scope: !12500, file: !141, line: 579, column: 18)
!12506 = !DILocation(line: 582, column: 12, scope: !12503)
!12507 = !DILocation(line: 585, column: 6, scope: !12504)
!12508 = !DILocation(line: 0, scope: !12505)
!12509 = !DILocation(line: 581, column: 17, scope: !12505)
!12510 = !DILocation(line: 581, column: 3, scope: !12505)
!12511 = !DILocation(line: 588, column: 10, scope: !12505)
!12512 = !DILocation(line: 588, column: 16, scope: !12505)
!12513 = !DILocation(line: 589, column: 4, scope: !12514)
!12514 = distinct !DILexicalBlock(scope: !12505, file: !141, line: 588, column: 39)
!12515 = !DILocation(line: 588, column: 3, scope: !12505)
!12516 = distinct !{!12516, !12515, !12517}
!12517 = !DILocation(line: 590, column: 3, scope: !12505)
!12518 = !DILocation(line: 591, column: 10, scope: !12505)
!12519 = !DILocation(line: 592, column: 2, scope: !12505)
!12520 = !DILocation(line: 575, column: 25, scope: !12490)
!12521 = !DILocation(line: 594, column: 2, scope: !12490)
!12522 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1984, file: !1984, line: 49, type: !12523, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1981, retainedNodes: !317)
!12523 = !DISubroutineType(types: !12524)
!12524 = !{!2620}
!12525 = !DILocation(line: 51, column: 10, scope: !12522)
!12526 = !DILocation(line: 51, column: 20, scope: !12522)
!12527 = !DILocation(line: 51, column: 2, scope: !12522)
!12528 = distinct !DISubprogram(name: "coredump", scope: !3137, file: !3137, line: 209, type: !12529, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !12675)
!12529 = !DISubroutineType(types: !12530)
!12530 = !{null, !32, !12531, !12575}
!12531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12532, size: 32)
!12532 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12533)
!12533 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2751, line: 141, baseType: !12534)
!12534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2751, line: 97, size: 256, elements: !12535)
!12535 = !{!12536}
!12536 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !12534, file: !2751, line: 107, baseType: !12537, size: 256)
!12537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2751, line: 98, size: 256, elements: !12538)
!12538 = !{!12539, !12544, !12549, !12554, !12559, !12564, !12569, !12574}
!12539 = !DIDerivedType(tag: DW_TAG_member, scope: !12537, file: !2751, line: 99, baseType: !12540, size: 32)
!12540 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12537, file: !2751, line: 99, size: 32, elements: !12541)
!12541 = !{!12542, !12543}
!12542 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !12540, file: !2751, line: 99, baseType: !121, size: 32)
!12543 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !12540, file: !2751, line: 99, baseType: !121, size: 32)
!12544 = !DIDerivedType(tag: DW_TAG_member, scope: !12537, file: !2751, line: 100, baseType: !12545, size: 32, offset: 32)
!12545 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12537, file: !2751, line: 100, size: 32, elements: !12546)
!12546 = !{!12547, !12548}
!12547 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !12545, file: !2751, line: 100, baseType: !121, size: 32)
!12548 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !12545, file: !2751, line: 100, baseType: !121, size: 32)
!12549 = !DIDerivedType(tag: DW_TAG_member, scope: !12537, file: !2751, line: 101, baseType: !12550, size: 32, offset: 64)
!12550 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12537, file: !2751, line: 101, size: 32, elements: !12551)
!12551 = !{!12552, !12553}
!12552 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !12550, file: !2751, line: 101, baseType: !121, size: 32)
!12553 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !12550, file: !2751, line: 101, baseType: !121, size: 32)
!12554 = !DIDerivedType(tag: DW_TAG_member, scope: !12537, file: !2751, line: 102, baseType: !12555, size: 32, offset: 96)
!12555 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12537, file: !2751, line: 102, size: 32, elements: !12556)
!12556 = !{!12557, !12558}
!12557 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !12555, file: !2751, line: 102, baseType: !121, size: 32)
!12558 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !12555, file: !2751, line: 102, baseType: !121, size: 32)
!12559 = !DIDerivedType(tag: DW_TAG_member, scope: !12537, file: !2751, line: 103, baseType: !12560, size: 32, offset: 128)
!12560 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12537, file: !2751, line: 103, size: 32, elements: !12561)
!12561 = !{!12562, !12563}
!12562 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !12560, file: !2751, line: 103, baseType: !121, size: 32)
!12563 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !12560, file: !2751, line: 103, baseType: !121, size: 32)
!12564 = !DIDerivedType(tag: DW_TAG_member, scope: !12537, file: !2751, line: 104, baseType: !12565, size: 32, offset: 160)
!12565 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12537, file: !2751, line: 104, size: 32, elements: !12566)
!12566 = !{!12567, !12568}
!12567 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !12565, file: !2751, line: 104, baseType: !121, size: 32)
!12568 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !12565, file: !2751, line: 104, baseType: !121, size: 32)
!12569 = !DIDerivedType(tag: DW_TAG_member, scope: !12537, file: !2751, line: 105, baseType: !12570, size: 32, offset: 192)
!12570 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12537, file: !2751, line: 105, size: 32, elements: !12571)
!12571 = !{!12572, !12573}
!12572 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !12570, file: !2751, line: 105, baseType: !121, size: 32)
!12573 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !12570, file: !2751, line: 105, baseType: !121, size: 32)
!12574 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !12537, file: !2751, line: 106, baseType: !121, size: 32, offset: 224)
!12575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12576, size: 32)
!12576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !379, line: 245, size: 1024, elements: !12577)
!12577 = !{!12578, !12636, !12648, !12649, !12650, !12651, !12657, !12670}
!12578 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !12576, file: !379, line: 247, baseType: !12579, size: 384)
!12579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !379, line: 57, size: 384, elements: !12580)
!12580 = !{!12581, !12605, !12612, !12613, !12614, !12623, !12624, !12625}
!12581 = !DIDerivedType(tag: DW_TAG_member, scope: !12579, file: !379, line: 60, baseType: !12582, size: 64)
!12582 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12579, file: !379, line: 60, size: 64, elements: !12583)
!12583 = !{!12584, !12599}
!12584 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !12582, file: !379, line: 61, baseType: !12585, size: 64)
!12585 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !325, line: 49, baseType: !12586)
!12586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !12587)
!12587 = !{!12588, !12594}
!12588 = !DIDerivedType(tag: DW_TAG_member, scope: !12586, file: !325, line: 38, baseType: !12589, size: 32)
!12589 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12586, file: !325, line: 38, size: 32, elements: !12590)
!12590 = !{!12591, !12593}
!12591 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !12589, file: !325, line: 39, baseType: !12592, size: 32)
!12592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12586, size: 32)
!12593 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !12589, file: !325, line: 40, baseType: !12592, size: 32)
!12594 = !DIDerivedType(tag: DW_TAG_member, scope: !12586, file: !325, line: 42, baseType: !12595, size: 32, offset: 32)
!12595 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12586, file: !325, line: 42, size: 32, elements: !12596)
!12596 = !{!12597, !12598}
!12597 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !12595, file: !325, line: 43, baseType: !12592, size: 32)
!12598 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !12595, file: !325, line: 44, baseType: !12592, size: 32)
!12599 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !12582, file: !379, line: 62, baseType: !12600, size: 64)
!12600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !404, line: 49, size: 64, elements: !12601)
!12601 = !{!12602}
!12602 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !12600, file: !404, line: 50, baseType: !12603, size: 64)
!12603 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12604, size: 64, elements: !363)
!12604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12600, size: 32)
!12605 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !12579, file: !379, line: 68, baseType: !12606, size: 32, offset: 64)
!12606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12607, size: 32)
!12607 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !12608)
!12608 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !12609)
!12609 = !{!12610}
!12610 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !12608, file: !320, line: 232, baseType: !12611, size: 64)
!12611 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !12586)
!12612 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !12579, file: !379, line: 71, baseType: !154, size: 8, offset: 96)
!12613 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !12579, file: !379, line: 74, baseType: !154, size: 8, offset: 104)
!12614 = !DIDerivedType(tag: DW_TAG_member, scope: !12579, file: !379, line: 90, baseType: !12615, size: 16, offset: 112)
!12615 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12579, file: !379, line: 90, size: 16, elements: !12616)
!12616 = !{!12617, !12622}
!12617 = !DIDerivedType(tag: DW_TAG_member, scope: !12615, file: !379, line: 91, baseType: !12618, size: 16)
!12618 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !12615, file: !379, line: 91, size: 16, elements: !12619)
!12619 = !{!12620, !12621}
!12620 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !12618, file: !379, line: 96, baseType: !425, size: 8)
!12621 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !12618, file: !379, line: 97, baseType: !154, size: 8, offset: 8)
!12622 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !12615, file: !379, line: 100, baseType: !429, size: 16)
!12623 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !12579, file: !379, line: 107, baseType: !121, size: 32, offset: 128)
!12624 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !12579, file: !379, line: 127, baseType: !102, size: 32, offset: 160)
!12625 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !12579, file: !379, line: 131, baseType: !12626, size: 192, offset: 192)
!12626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !320, line: 244, size: 192, elements: !12627)
!12627 = !{!12628, !12629, !12635}
!12628 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !12626, file: !320, line: 245, baseType: !12585, size: 64)
!12629 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !12626, file: !320, line: 246, baseType: !12630, size: 32, offset: 64)
!12630 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !320, line: 242, baseType: !12631)
!12631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12632, size: 32)
!12632 = !DISubroutineType(types: !12633)
!12633 = !{null, !12634}
!12634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12626, size: 32)
!12635 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !12626, file: !320, line: 249, baseType: !202, size: 64, offset: 128)
!12636 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !12576, file: !379, line: 250, baseType: !12637, size: 288, offset: 384)
!12637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !446, line: 25, size: 288, elements: !12638)
!12638 = !{!12639, !12640, !12641, !12642, !12643, !12644, !12645, !12646, !12647}
!12639 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !12637, file: !446, line: 26, baseType: !121, size: 32)
!12640 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !12637, file: !446, line: 27, baseType: !121, size: 32, offset: 32)
!12641 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !12637, file: !446, line: 28, baseType: !121, size: 32, offset: 64)
!12642 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !12637, file: !446, line: 29, baseType: !121, size: 32, offset: 96)
!12643 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !12637, file: !446, line: 30, baseType: !121, size: 32, offset: 128)
!12644 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !12637, file: !446, line: 31, baseType: !121, size: 32, offset: 160)
!12645 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !12637, file: !446, line: 32, baseType: !121, size: 32, offset: 192)
!12646 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !12637, file: !446, line: 33, baseType: !121, size: 32, offset: 224)
!12647 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !12637, file: !446, line: 34, baseType: !121, size: 32, offset: 256)
!12648 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !12576, file: !379, line: 253, baseType: !102, size: 32, offset: 672)
!12649 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !12576, file: !379, line: 256, baseType: !12607, size: 64, offset: 704)
!12650 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !12576, file: !379, line: 294, baseType: !103, size: 32, offset: 768)
!12651 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !12576, file: !379, line: 300, baseType: !12652, size: 96, offset: 800)
!12652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !379, line: 149, size: 96, elements: !12653)
!12653 = !{!12654, !12655, !12656}
!12654 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !12652, file: !379, line: 153, baseType: !22, size: 32)
!12655 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !12652, file: !379, line: 162, baseType: !204, size: 32, offset: 32)
!12656 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !12652, file: !379, line: 168, baseType: !204, size: 32, offset: 64)
!12657 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !12576, file: !379, line: 325, baseType: !12658, size: 32, offset: 896)
!12658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12659, size: 32)
!12659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !296, line: 5073, size: 160, elements: !12660)
!12660 = !{!12661, !12667, !12668}
!12661 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12659, file: !296, line: 5074, baseType: !12662, size: 96)
!12662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !12663)
!12663 = !{!12664, !12665, !12666}
!12664 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12662, file: !472, line: 57, baseType: !475, size: 32)
!12665 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !12662, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!12666 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !12662, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!12667 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !12659, file: !296, line: 5075, baseType: !12607, size: 64, offset: 96)
!12668 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !12659, file: !296, line: 5076, baseType: !12669, offset: 160)
!12669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!12670 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !12576, file: !379, line: 343, baseType: !12671, size: 64, offset: 928)
!12671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !446, line: 60, size: 64, elements: !12672)
!12672 = !{!12673, !12674}
!12673 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !12671, file: !446, line: 63, baseType: !121, size: 32)
!12674 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !12671, file: !446, line: 66, baseType: !121, size: 32, offset: 32)
!12675 = !{!12676, !12677, !12678}
!12676 = !DILocalVariable(name: "reason", arg: 1, scope: !12528, file: !3137, line: 209, type: !32)
!12677 = !DILocalVariable(name: "esf", arg: 2, scope: !12528, file: !3137, line: 209, type: !12531)
!12678 = !DILocalVariable(name: "thread", arg: 3, scope: !12528, file: !3137, line: 210, type: !12575)
!12679 = !DILocation(line: 0, scope: !12528)
!12680 = !DILocation(line: 212, column: 1, scope: !12528)
!12681 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3137, file: !3137, line: 214, type: !12682, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !12684)
!12682 = !DISubroutineType(types: !12683)
!12683 = !{null, !22, !22}
!12684 = !{!12685, !12686}
!12685 = !DILocalVariable(name: "start_addr", arg: 1, scope: !12681, file: !3137, line: 214, type: !22)
!12686 = !DILocalVariable(name: "end_addr", arg: 2, scope: !12681, file: !3137, line: 214, type: !22)
!12687 = !DILocation(line: 0, scope: !12681)
!12688 = !DILocation(line: 216, column: 1, scope: !12681)
!12689 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3137, file: !3137, line: 218, type: !12690, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !12692)
!12690 = !DISubroutineType(types: !12691)
!12691 = !{null, !267, !204}
!12692 = !{!12693, !12694}
!12693 = !DILocalVariable(name: "buf", arg: 1, scope: !12689, file: !3137, line: 218, type: !267)
!12694 = !DILocalVariable(name: "buflen", arg: 2, scope: !12689, file: !3137, line: 218, type: !204)
!12695 = !DILocation(line: 0, scope: !12689)
!12696 = !DILocation(line: 220, column: 1, scope: !12689)
!12697 = distinct !DISubprogram(name: "coredump_query", scope: !3137, file: !3137, line: 222, type: !12698, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !12700)
!12698 = !DISubroutineType(types: !12699)
!12699 = !{!103, !3136, !102}
!12700 = !{!12701, !12702}
!12701 = !DILocalVariable(name: "query_id", arg: 1, scope: !12697, file: !3137, line: 222, type: !3136)
!12702 = !DILocalVariable(name: "arg", arg: 2, scope: !12697, file: !3137, line: 222, type: !102)
!12703 = !DILocation(line: 0, scope: !12697)
!12704 = !DILocation(line: 224, column: 2, scope: !12697)
!12705 = distinct !DISubprogram(name: "coredump_cmd", scope: !3137, file: !3137, line: 227, type: !12706, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !12708)
!12706 = !DISubroutineType(types: !12707)
!12707 = !{!103, !3143, !102}
!12708 = !{!12709, !12710}
!12709 = !DILocalVariable(name: "query_id", arg: 1, scope: !12705, file: !3137, line: 227, type: !3143)
!12710 = !DILocalVariable(name: "arg", arg: 2, scope: !12705, file: !3137, line: 227, type: !102)
!12711 = !DILocation(line: 0, scope: !12705)
!12712 = !DILocation(line: 229, column: 2, scope: !12705)
!12713 = distinct !DISubprogram(name: "arch_system_halt", scope: !12714, file: !12714, line: 23, type: !5779, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !12715)
!12714 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12715 = !{!12716}
!12716 = !DILocalVariable(name: "reason", arg: 1, scope: !12713, file: !12714, line: 23, type: !32)
!12717 = !DILocation(line: 0, scope: !12713)
!12718 = !DILocation(line: 55, column: 2, scope: !12719, inlinedAt: !12723)
!12719 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5768, file: !5768, line: 42, type: !5769, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !12720)
!12720 = !{!12721, !12722}
!12721 = !DILocalVariable(name: "key", scope: !12719, file: !5768, line: 44, type: !32)
!12722 = !DILocalVariable(name: "tmp", scope: !12719, file: !5768, line: 53, type: !32)
!12723 = distinct !DILocation(line: 31, column: 8, scope: !12713)
!12724 = !{i64 2038834}
!12725 = !DILocation(line: 0, scope: !12719, inlinedAt: !12723)
!12726 = !DILocation(line: 32, column: 2, scope: !12713)
!12727 = !DILocation(line: 32, column: 2, scope: !12728)
!12728 = distinct !DILexicalBlock(scope: !12729, file: !12714, line: 32, column: 2)
!12729 = distinct !DILexicalBlock(scope: !12713, file: !12714, line: 32, column: 2)
!12730 = distinct !{!12730, !12731, !12732}
!12731 = !DILocation(line: 32, column: 2, scope: !12729)
!12732 = !DILocation(line: 34, column: 2, scope: !12729)
!12733 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !12714, file: !12714, line: 39, type: !12734, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !12736)
!12734 = !DISubroutineType(types: !12735)
!12735 = !{null, !32, !12531}
!12736 = !{!12737, !12738}
!12737 = !DILocalVariable(name: "reason", arg: 1, scope: !12733, file: !12714, line: 39, type: !32)
!12738 = !DILocalVariable(name: "esf", arg: 2, scope: !12733, file: !12714, line: 40, type: !12531)
!12739 = !DILocation(line: 0, scope: !12733)
!12740 = !DILocation(line: 46, column: 2, scope: !12733)
!12741 = distinct !DISubprogram(name: "k_fatal_halt", scope: !12714, file: !12714, line: 81, type: !5779, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !12742)
!12742 = !{!12743}
!12743 = !DILocalVariable(name: "reason", arg: 1, scope: !12741, file: !12714, line: 81, type: !32)
!12744 = !DILocation(line: 0, scope: !12741)
!12745 = !DILocation(line: 83, column: 2, scope: !12741)
!12746 = distinct !DISubprogram(name: "z_fatal_error", scope: !12714, file: !12714, line: 96, type: !12734, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !12747)
!12747 = !{!12748, !12749, !12750, !12751}
!12748 = !DILocalVariable(name: "reason", arg: 1, scope: !12746, file: !12714, line: 96, type: !32)
!12749 = !DILocalVariable(name: "esf", arg: 2, scope: !12746, file: !12714, line: 96, type: !12531)
!12750 = !DILocalVariable(name: "key", scope: !12746, file: !12714, line: 102, type: !32)
!12751 = !DILocalVariable(name: "thread", scope: !12746, file: !12714, line: 103, type: !12575)
!12752 = !DILocation(line: 0, scope: !12746)
!12753 = !DILocation(line: 55, column: 2, scope: !12719, inlinedAt: !12754)
!12754 = distinct !DILocation(line: 102, column: 21, scope: !12746)
!12755 = !DILocation(line: 0, scope: !12719, inlinedAt: !12754)
!12756 = !DILocation(line: 119, column: 11, scope: !12757)
!12757 = distinct !DILexicalBlock(scope: !12746, file: !12714, line: 119, column: 6)
!12758 = !DILocation(line: 119, column: 20, scope: !12757)
!12759 = !DILocation(line: 131, column: 2, scope: !12746)
!12760 = !DILocation(line: 151, column: 7, scope: !12761)
!12761 = distinct !DILexicalBlock(scope: !12762, file: !12714, line: 146, column: 32)
!12762 = distinct !DILexicalBlock(scope: !12746, file: !12714, line: 146, column: 6)
!12763 = !DILocation(line: 151, column: 21, scope: !12764)
!12764 = distinct !DILexicalBlock(scope: !12761, file: !12714, line: 151, column: 7)
!12765 = !DILocation(line: 104, column: 4, scope: !12746)
!12766 = !DILocalVariable(name: "key", arg: 1, scope: !12767, file: !5768, line: 84, type: !32)
!12767 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5768, file: !5768, line: 84, type: !5779, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !12768)
!12768 = !{!12766}
!12769 = !DILocation(line: 0, scope: !12767, inlinedAt: !12770)
!12770 = distinct !DILocation(line: 186, column: 2, scope: !12746)
!12771 = !DILocation(line: 95, column: 2, scope: !12767, inlinedAt: !12770)
!12772 = !{i64 2039651}
!12773 = !DILocation(line: 189, column: 3, scope: !12774)
!12774 = distinct !DILexicalBlock(scope: !12775, file: !12714, line: 188, column: 41)
!12775 = distinct !DILexicalBlock(scope: !12746, file: !12714, line: 188, column: 6)
!12776 = !DILocation(line: 191, column: 1, scope: !12746)
!12777 = distinct !DISubprogram(name: "k_current_get", scope: !296, file: !296, line: 530, type: !12778, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !317)
!12778 = !DISubroutineType(types: !12779)
!12779 = !{!12780}
!12780 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !379, line: 347, baseType: !12575)
!12781 = !DILocation(line: 535, column: 9, scope: !12777)
!12782 = !DILocation(line: 535, column: 2, scope: !12777)
!12783 = distinct !DISubprogram(name: "k_thread_abort", scope: !3649, file: !3649, line: 188, type: !12784, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !12786)
!12784 = !DISubroutineType(types: !12785)
!12785 = !{null, !12780}
!12786 = !{!12787}
!12787 = !DILocalVariable(name: "thread", arg: 1, scope: !12783, file: !3649, line: 188, type: !12780)
!12788 = !DILocation(line: 0, scope: !12783)
!12789 = !DILocation(line: 197, column: 2, scope: !12790)
!12790 = distinct !DILexicalBlock(scope: !12783, file: !3649, line: 197, column: 2)
!12791 = !{i64 2154150562}
!12792 = !DILocation(line: 198, column: 2, scope: !12783)
!12793 = !DILocation(line: 199, column: 1, scope: !12783)
!12794 = distinct !DISubprogram(name: "z_current_get", scope: !3649, file: !3649, line: 173, type: !12778, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !317)
!12795 = !DILocation(line: 180, column: 2, scope: !12796)
!12796 = distinct !DILexicalBlock(scope: !12794, file: !3649, line: 180, column: 2)
!12797 = !{i64 2154150494}
!12798 = !DILocation(line: 181, column: 9, scope: !12794)
!12799 = !DILocation(line: 181, column: 2, scope: !12794)
!12800 = distinct !DISubprogram(name: "z_early_memset", scope: !1991, file: !1991, line: 108, type: !12801, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1987, retainedNodes: !12803)
!12801 = !DISubroutineType(types: !12802)
!12802 = !{null, !102, !103, !204}
!12803 = !{!12804, !12805, !12806}
!12804 = !DILocalVariable(name: "dst", arg: 1, scope: !12800, file: !1991, line: 108, type: !102)
!12805 = !DILocalVariable(name: "c", arg: 2, scope: !12800, file: !1991, line: 108, type: !103)
!12806 = !DILocalVariable(name: "n", arg: 3, scope: !12800, file: !1991, line: 108, type: !204)
!12807 = !DILocation(line: 0, scope: !12800)
!12808 = !DILocation(line: 110, column: 9, scope: !12800)
!12809 = !DILocation(line: 111, column: 1, scope: !12800)
!12810 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1991, file: !1991, line: 121, type: !12811, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1987, retainedNodes: !12813)
!12811 = !DISubroutineType(types: !12812)
!12812 = !{null, !102, !13, !204}
!12813 = !{!12814, !12815, !12816}
!12814 = !DILocalVariable(name: "dst", arg: 1, scope: !12810, file: !1991, line: 121, type: !102)
!12815 = !DILocalVariable(name: "src", arg: 2, scope: !12810, file: !1991, line: 121, type: !13)
!12816 = !DILocalVariable(name: "n", arg: 3, scope: !12810, file: !1991, line: 121, type: !204)
!12817 = !DILocation(line: 0, scope: !12810)
!12818 = !DILocation(line: 123, column: 9, scope: !12810)
!12819 = !DILocation(line: 124, column: 1, scope: !12810)
!12820 = distinct !DISubprogram(name: "z_bss_zero", scope: !1991, file: !1991, line: 132, type: !3213, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1987, retainedNodes: !317)
!12821 = !DILocation(line: 143, column: 2, scope: !12820)
!12822 = !DILocation(line: 168, column: 1, scope: !12820)
!12823 = distinct !DISubprogram(name: "z_init_cpu", scope: !1991, file: !1991, line: 372, type: !7627, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1987, retainedNodes: !12824)
!12824 = !{!12825}
!12825 = !DILocalVariable(name: "id", arg: 1, scope: !12823, file: !1991, line: 372, type: !103)
!12826 = !DILocation(line: 0, scope: !12823)
!12827 = !DILocation(line: 374, column: 2, scope: !12823)
!12828 = !DILocation(line: 375, column: 34, scope: !12823)
!12829 = !DILocation(line: 375, column: 19, scope: !12823)
!12830 = !DILocation(line: 375, column: 31, scope: !12823)
!12831 = !DILocation(line: 376, column: 24, scope: !12823)
!12832 = !DILocation(line: 376, column: 19, scope: !12823)
!12833 = !DILocation(line: 376, column: 22, scope: !12823)
!12834 = !DILocation(line: 378, column: 26, scope: !12823)
!12835 = !DILocation(line: 378, column: 4, scope: !12823)
!12836 = !DILocation(line: 378, column: 50, scope: !12823)
!12837 = !DILocation(line: 377, column: 19, scope: !12823)
!12838 = !DILocation(line: 377, column: 29, scope: !12823)
!12839 = !DILocation(line: 384, column: 1, scope: !12823)
!12840 = distinct !DISubprogram(name: "init_idle_thread", scope: !1991, file: !1991, line: 343, type: !7627, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1987, retainedNodes: !12841)
!12841 = !{!12842, !12843, !12844, !12847}
!12842 = !DILocalVariable(name: "i", arg: 1, scope: !12840, file: !1991, line: 343, type: !103)
!12843 = !DILocalVariable(name: "thread", scope: !12840, file: !1991, line: 345, type: !2083)
!12844 = !DILocalVariable(name: "stack", scope: !12840, file: !1991, line: 346, type: !12845)
!12845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12846, size: 32)
!12846 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3528, line: 44, baseType: !2197)
!12847 = !DILocalVariable(name: "tname", scope: !12840, file: !1991, line: 358, type: !344)
!12848 = !DILocation(line: 0, scope: !12840)
!12849 = !DILocation(line: 345, column: 29, scope: !12840)
!12850 = !DILocation(line: 346, column: 28, scope: !12840)
!12851 = !DILocation(line: 362, column: 37, scope: !12840)
!12852 = !DILocation(line: 362, column: 36, scope: !12840)
!12853 = !DILocation(line: 361, column: 2, scope: !12840)
!12854 = !DILocation(line: 365, column: 2, scope: !12840)
!12855 = !DILocation(line: 370, column: 1, scope: !12840)
!12856 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2198, file: !2198, line: 331, type: !12857, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1987, retainedNodes: !12859)
!12857 = !DISubroutineType(types: !12858)
!12858 = !{!344, !12845}
!12859 = !{!12860}
!12860 = !DILocalVariable(name: "sym", arg: 1, scope: !12856, file: !2198, line: 331, type: !12845)
!12861 = !DILocation(line: 0, scope: !12856)
!12862 = !DILocation(line: 333, column: 21, scope: !12856)
!12863 = !DILocation(line: 333, column: 2, scope: !12856)
!12864 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12865, file: !12865, line: 155, type: !12866, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1987, retainedNodes: !12868)
!12865 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12866 = !DISubroutineType(types: !12867)
!12867 = !{null, !2083}
!12868 = !{!12869}
!12869 = !DILocalVariable(name: "thread", arg: 1, scope: !12864, file: !12865, line: 155, type: !2083)
!12870 = !DILocation(line: 0, scope: !12864)
!12871 = !DILocation(line: 157, column: 15, scope: !12864)
!12872 = !DILocation(line: 157, column: 28, scope: !12864)
!12873 = !DILocation(line: 158, column: 1, scope: !12864)
!12874 = distinct !DISubprogram(name: "z_cstart", scope: !1991, file: !1991, line: 501, type: !3213, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1987, retainedNodes: !12875)
!12875 = !{!12876}
!12876 = !DILocalVariable(name: "dummy_thread", scope: !12874, file: !1991, line: 518, type: !2084)
!12877 = !DILocation(line: 507, column: 2, scope: !12874)
!12878 = !DILocation(line: 43, column: 14, scope: !12879, inlinedAt: !12883)
!12879 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !12880, file: !12880, line: 40, type: !3213, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1987, retainedNodes: !12881)
!12880 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12881 = !{!12882}
!12882 = !DILocalVariable(name: "msp", scope: !12879, file: !12880, line: 42, type: !121)
!12883 = distinct !DILocation(line: 44, column: 2, scope: !12884, inlinedAt: !12886)
!12884 = distinct !DISubprogram(name: "arch_kernel_init", scope: !12885, file: !12885, line: 42, type: !3213, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1987, retainedNodes: !317)
!12885 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12886 = distinct !DILocation(line: 510, column: 2, scope: !12874)
!12887 = !DILocation(line: 43, column: 3, scope: !12879, inlinedAt: !12883)
!12888 = !DILocation(line: 43, column: 60, scope: !12879, inlinedAt: !12883)
!12889 = !DILocation(line: 0, scope: !12879, inlinedAt: !12883)
!12890 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !12891, file: !5983, line: 1153, type: !121)
!12891 = distinct !DISubprogram(name: "__set_MSP", scope: !5983, file: !5983, line: 1153, type: !6074, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1987, retainedNodes: !12892)
!12892 = !{!12890}
!12893 = !DILocation(line: 0, scope: !12891, inlinedAt: !12894)
!12894 = distinct !DILocation(line: 46, column: 2, scope: !12879, inlinedAt: !12883)
!12895 = !DILocation(line: 1155, column: 3, scope: !12891, inlinedAt: !12894)
!12896 = !{i64 2932914}
!12897 = !DILocation(line: 62, column: 11, scope: !12879, inlinedAt: !12883)
!12898 = !DILocation(line: 102, column: 2, scope: !12899, inlinedAt: !12900)
!12899 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !6777, file: !6777, line: 97, type: !3213, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1987, retainedNodes: !317)
!12900 = distinct !DILocation(line: 45, column: 2, scope: !12884, inlinedAt: !12886)
!12901 = !DILocation(line: 108, column: 2, scope: !12899, inlinedAt: !12900)
!12902 = !DILocation(line: 112, column: 2, scope: !12899, inlinedAt: !12900)
!12903 = !DILocation(line: 113, column: 2, scope: !12899, inlinedAt: !12900)
!12904 = !DILocation(line: 114, column: 2, scope: !12899, inlinedAt: !12900)
!12905 = !DILocation(line: 116, column: 2, scope: !12899, inlinedAt: !12900)
!12906 = !DILocation(line: 123, column: 13, scope: !12899, inlinedAt: !12900)
!12907 = !DILocation(line: 46, column: 2, scope: !12884, inlinedAt: !12886)
!12908 = !DILocation(line: 47, column: 2, scope: !12884, inlinedAt: !12886)
!12909 = !DILocation(line: 174, column: 12, scope: !12910, inlinedAt: !12911)
!12910 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !6777, file: !6777, line: 169, type: !3213, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1987, retainedNodes: !317)
!12911 = distinct !DILocation(line: 48, column: 2, scope: !12884, inlinedAt: !12886)
!12912 = !DILocation(line: 179, column: 12, scope: !12910, inlinedAt: !12911)
!12913 = !DILocation(line: 50, column: 2, scope: !12884, inlinedAt: !12886)
!12914 = !DILocation(line: 57, column: 2, scope: !12884, inlinedAt: !12886)
!12915 = !DILocation(line: 518, column: 2, scope: !12874)
!12916 = !DILocation(line: 518, column: 18, scope: !12874)
!12917 = !DILocation(line: 520, column: 2, scope: !12874)
!12918 = !DILocation(line: 523, column: 2, scope: !12874)
!12919 = !DILocation(line: 526, column: 2, scope: !12874)
!12920 = !DILocation(line: 527, column: 2, scope: !12874)
!12921 = !DILocation(line: 543, column: 24, scope: !12874)
!12922 = !DILocation(line: 543, column: 2, scope: !12874)
!12923 = !DILocation(line: 0, scope: !2217)
!12924 = !DILocation(line: 246, column: 15, scope: !2235)
!12925 = !DILocation(line: 246, column: 36, scope: !2234)
!12926 = !DILocation(line: 246, column: 2, scope: !2235)
!12927 = !DILocation(line: 247, column: 37, scope: !2233)
!12928 = !DILocation(line: 0, scope: !2233)
!12929 = !DILocation(line: 248, column: 19, scope: !2233)
!12930 = !DILocation(line: 248, column: 12, scope: !2233)
!12931 = !DILocation(line: 250, column: 11, scope: !12932)
!12932 = distinct !DILexicalBlock(scope: !2233, file: !1991, line: 250, column: 7)
!12933 = !DILocation(line: 250, column: 7, scope: !2233)
!12934 = !DILocation(line: 254, column: 11, scope: !12935)
!12935 = distinct !DILexicalBlock(scope: !12936, file: !1991, line: 254, column: 8)
!12936 = distinct !DILexicalBlock(scope: !12932, file: !1991, line: 250, column: 20)
!12937 = !DILocation(line: 254, column: 8, scope: !12936)
!12938 = !DILocation(line: 255, column: 9, scope: !12939)
!12939 = distinct !DILexicalBlock(scope: !12935, file: !1991, line: 254, column: 17)
!12940 = !DILocation(line: 258, column: 9, scope: !12939)
!12941 = !DILocation(line: 261, column: 28, scope: !12939)
!12942 = !DILocation(line: 261, column: 10, scope: !12939)
!12943 = !DILocation(line: 261, column: 17, scope: !12939)
!12944 = !DILocation(line: 261, column: 26, scope: !12939)
!12945 = !DILocation(line: 262, column: 4, scope: !12939)
!12946 = !DILocation(line: 263, column: 9, scope: !12936)
!12947 = !DILocation(line: 263, column: 16, scope: !12936)
!12948 = !DILocation(line: 263, column: 28, scope: !12936)
!12949 = !DILocation(line: 264, column: 3, scope: !12936)
!12950 = !DILocation(line: 246, column: 60, scope: !2234)
!12951 = distinct !{!12951, !12926, !12952}
!12952 = !DILocation(line: 265, column: 2, scope: !2235)
!12953 = !DILocation(line: 266, column: 1, scope: !2217)
!12954 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !515, file: !515, line: 1814, type: !6017, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1987, retainedNodes: !12955)
!12955 = !{!12956, !12957}
!12956 = !DILocalVariable(name: "IRQn", arg: 1, scope: !12954, file: !515, line: 1814, type: !750)
!12957 = !DILocalVariable(name: "priority", arg: 2, scope: !12954, file: !515, line: 1814, type: !121)
!12958 = !DILocation(line: 0, scope: !12954)
!12959 = !DILocation(line: 1822, column: 48, scope: !12960)
!12960 = distinct !DILexicalBlock(scope: !12961, file: !515, line: 1821, column: 3)
!12961 = distinct !DILexicalBlock(scope: !12954, file: !515, line: 1816, column: 7)
!12962 = !DILocation(line: 1822, column: 32, scope: !12960)
!12963 = !DILocation(line: 1822, column: 40, scope: !12960)
!12964 = !DILocation(line: 1822, column: 5, scope: !12960)
!12965 = !DILocation(line: 1822, column: 46, scope: !12960)
!12966 = !DILocation(line: 1824, column: 1, scope: !12954)
!12967 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !12885, file: !12885, line: 32, type: !3213, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !317)
!12968 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !12969, file: !12969, line: 215, type: !12866, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1987, retainedNodes: !12970)
!12969 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12970 = !{!12971}
!12971 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !12968, file: !12969, line: 215, type: !2083)
!12972 = !DILocation(line: 0, scope: !12968)
!12973 = !DILocation(line: 217, column: 21, scope: !12968)
!12974 = !DILocation(line: 217, column: 34, scope: !12968)
!12975 = !DILocation(line: 221, column: 21, scope: !12968)
!12976 = !DILocation(line: 221, column: 34, scope: !12968)
!12977 = !DILocation(line: 223, column: 27, scope: !12968)
!12978 = !DILocation(line: 223, column: 33, scope: !12968)
!12979 = !DILocation(line: 224, column: 27, scope: !12968)
!12980 = !DILocation(line: 224, column: 32, scope: !12968)
!12981 = !DILocation(line: 232, column: 16, scope: !12968)
!12982 = !DILocation(line: 232, column: 30, scope: !12968)
!12983 = !DILocation(line: 239, column: 24, scope: !12968)
!12984 = !DILocation(line: 240, column: 1, scope: !12968)
!12985 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1991, file: !1991, line: 399, type: !342, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1987, retainedNodes: !12986)
!12986 = !{!12987}
!12987 = !DILocalVariable(name: "stack_ptr", scope: !12985, file: !1991, line: 401, type: !344)
!12988 = !DILocation(line: 404, column: 2, scope: !12985)
!12989 = !DILocation(line: 416, column: 24, scope: !12985)
!12990 = !DILocation(line: 418, column: 14, scope: !12985)
!12991 = !DILocation(line: 0, scope: !12985)
!12992 = !DILocation(line: 423, column: 2, scope: !12985)
!12993 = !DILocation(line: 424, column: 2, scope: !12985)
!12994 = !DILocation(line: 426, column: 2, scope: !12985)
!12995 = !DILocation(line: 428, column: 2, scope: !12985)
!12996 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1991, file: !1991, line: 432, type: !12997, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1987, retainedNodes: !12999)
!12997 = !DISubroutineType(types: !12998)
!12998 = !{null, !344}
!12999 = !{!13000}
!13000 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !12996, file: !1991, line: 432, type: !344)
!13001 = !DILocation(line: 0, scope: !12996)
!13002 = !DILocation(line: 435, column: 2, scope: !12996)
!13003 = !DILocation(line: 445, column: 2, scope: !12996)
!13004 = distinct !DISubprogram(name: "bg_thread_main", scope: !1991, file: !1991, line: 277, type: !3530, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1987, retainedNodes: !13005)
!13005 = !{!13006, !13007, !13008}
!13006 = !DILocalVariable(name: "unused1", arg: 1, scope: !13004, file: !1991, line: 277, type: !102)
!13007 = !DILocalVariable(name: "unused2", arg: 2, scope: !13004, file: !1991, line: 277, type: !102)
!13008 = !DILocalVariable(name: "unused3", arg: 3, scope: !13004, file: !1991, line: 277, type: !102)
!13009 = !DILocation(line: 0, scope: !13004)
!13010 = !DILocation(line: 291, column: 20, scope: !13004)
!13011 = !DILocation(line: 293, column: 2, scope: !13004)
!13012 = !DILocation(line: 297, column: 2, scope: !13004)
!13013 = !DILocation(line: 305, column: 2, scope: !13004)
!13014 = !DILocation(line: 307, column: 2, scope: !13004)
!13015 = !DILocation(line: 330, column: 8, scope: !13004)
!13016 = !DILocation(line: 333, column: 34, scope: !13004)
!13017 = !DILocation(line: 339, column: 1, scope: !13004)
!13018 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2244, file: !2244, line: 45, type: !13019, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !13027)
!13019 = !DISubroutineType(types: !13020)
!13020 = !{null, !13021, !102}
!13021 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !296, line: 103, baseType: !13022)
!13022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13023, size: 32)
!13023 = !DISubroutineType(types: !13024)
!13024 = !{null, !13025, !102}
!13025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13026, size: 32)
!13026 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2249)
!13027 = !{!13028, !13029}
!13028 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13018, file: !2244, line: 45, type: !13021)
!13029 = !DILocalVariable(name: "user_data", arg: 2, scope: !13018, file: !2244, line: 45, type: !102)
!13030 = !DILocation(line: 0, scope: !13018)
!13031 = !DILocation(line: 71, column: 1, scope: !13018)
!13032 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2244, file: !2244, line: 73, type: !13019, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !13033)
!13033 = !{!13034, !13035}
!13034 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13032, file: !2244, line: 73, type: !13021)
!13035 = !DILocalVariable(name: "user_data", arg: 2, scope: !13032, file: !2244, line: 73, type: !102)
!13036 = !DILocation(line: 0, scope: !13032)
!13037 = !DILocation(line: 95, column: 1, scope: !13032)
!13038 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2244, file: !2244, line: 97, type: !6778, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !317)
!13039 = !DILocation(line: 1031, column: 3, scope: !13040, inlinedAt: !13043)
!13040 = distinct !DISubprogram(name: "__get_IPSR", scope: !5983, file: !5983, line: 1027, type: !6064, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !13041)
!13041 = !{!13042}
!13042 = !DILocalVariable(name: "result", scope: !13040, file: !5983, line: 1029, type: !121)
!13043 = distinct !DILocation(line: 48, column: 10, scope: !13044, inlinedAt: !13045)
!13044 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6777, file: !6777, line: 46, type: !6778, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !317)
!13045 = distinct !DILocation(line: 99, column: 9, scope: !13038)
!13046 = !{i64 2938565}
!13047 = !DILocation(line: 0, scope: !13040, inlinedAt: !13043)
!13048 = !DILocation(line: 48, column: 9, scope: !13044, inlinedAt: !13045)
!13049 = !DILocation(line: 99, column: 2, scope: !13038)
!13050 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2244, file: !2244, line: 106, type: !3213, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !317)
!13051 = !DILocation(line: 108, column: 2, scope: !13050)
!13052 = !DILocation(line: 108, column: 17, scope: !13050)
!13053 = !DILocation(line: 108, column: 30, scope: !13050)
!13054 = !DILocation(line: 109, column: 1, scope: !13050)
!13055 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2244, file: !2244, line: 116, type: !3213, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !317)
!13056 = !DILocation(line: 118, column: 2, scope: !13055)
!13057 = !DILocation(line: 118, column: 17, scope: !13055)
!13058 = !DILocation(line: 118, column: 30, scope: !13055)
!13059 = !DILocation(line: 119, column: 1, scope: !13055)
!13060 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2244, file: !2244, line: 126, type: !6778, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !317)
!13061 = !DILocation(line: 128, column: 10, scope: !13060)
!13062 = !DILocation(line: 128, column: 25, scope: !13060)
!13063 = !DILocation(line: 128, column: 38, scope: !13060)
!13064 = !DILocation(line: 128, column: 53, scope: !13060)
!13065 = !DILocation(line: 128, column: 2, scope: !13060)
!13066 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2244, file: !2244, line: 187, type: !13067, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !13069)
!13067 = !DISubroutineType(types: !13068)
!13068 = !{!103, !2248, !144}
!13069 = !{!13070, !13071}
!13070 = !DILocalVariable(name: "thread", arg: 1, scope: !13066, file: !2244, line: 187, type: !2248)
!13071 = !DILocalVariable(name: "value", arg: 2, scope: !13066, file: !2244, line: 187, type: !144)
!13072 = !DILocation(line: 0, scope: !13066)
!13073 = !DILocation(line: 206, column: 2, scope: !13066)
!13074 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2244, file: !2244, line: 238, type: !13075, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !13077)
!13075 = !DISubroutineType(types: !13076)
!13076 = !{!144, !2248}
!13077 = !{!13078}
!13078 = !DILocalVariable(name: "thread", arg: 1, scope: !13074, file: !2244, line: 238, type: !2248)
!13079 = !DILocation(line: 0, scope: !13074)
!13080 = !DILocation(line: 244, column: 2, scope: !13074)
!13081 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2244, file: !2244, line: 248, type: !13082, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !13084)
!13082 = !DISubroutineType(types: !13083)
!13083 = !{!103, !2247, !344, !204}
!13084 = !{!13085, !13086, !13087}
!13085 = !DILocalVariable(name: "thread", arg: 1, scope: !13081, file: !2244, line: 248, type: !2247)
!13086 = !DILocalVariable(name: "buf", arg: 2, scope: !13081, file: !2244, line: 248, type: !344)
!13087 = !DILocalVariable(name: "size", arg: 3, scope: !13081, file: !2244, line: 248, type: !204)
!13088 = !DILocation(line: 0, scope: !13081)
!13089 = !DILocation(line: 257, column: 2, scope: !13081)
!13090 = !DILocation(line: 0, scope: !2243)
!13091 = !DILocation(line: 281, column: 11, scope: !13092)
!13092 = distinct !DILexicalBlock(scope: !2243, file: !2244, line: 281, column: 6)
!13093 = !DILocation(line: 281, column: 20, scope: !13092)
!13094 = !DILocation(line: 275, column: 45, scope: !2243)
!13095 = !DILocation(line: 285, column: 10, scope: !2243)
!13096 = !DILocation(line: 0, scope: !2364)
!13097 = !DILocation(line: 293, column: 39, scope: !13098)
!13098 = distinct !DILexicalBlock(scope: !2364, file: !2244, line: 293, column: 2)
!13099 = !DILocation(line: 293, column: 2, scope: !2364)
!13100 = !DILocation(line: 273, column: 14, scope: !2243)
!13101 = !DILocation(line: 309, column: 2, scope: !2243)
!13102 = !DILocation(line: 309, column: 11, scope: !2243)
!13103 = !DILocation(line: 311, column: 2, scope: !2243)
!13104 = !DILocation(line: 293, column: 26, scope: !13098)
!13105 = !DILocation(line: 294, column: 9, scope: !13106)
!13106 = distinct !DILexicalBlock(scope: !13098, file: !2244, line: 293, column: 54)
!13107 = !DILocation(line: 295, column: 21, scope: !13108)
!13108 = distinct !DILexicalBlock(scope: !13106, file: !2244, line: 295, column: 7)
!13109 = !DILocation(line: 295, column: 28, scope: !13108)
!13110 = !DILocation(line: 295, column: 7, scope: !13106)
!13111 = !DILocation(line: 299, column: 25, scope: !13106)
!13112 = !DILocation(line: 299, column: 41, scope: !13106)
!13113 = !DILocation(line: 300, column: 7, scope: !13106)
!13114 = !DILocation(line: 300, column: 26, scope: !13106)
!13115 = !DILocation(line: 299, column: 10, scope: !13106)
!13116 = !DILocation(line: 299, column: 7, scope: !13106)
!13117 = !DILocation(line: 302, column: 16, scope: !13106)
!13118 = !DILocation(line: 304, column: 20, scope: !13119)
!13119 = distinct !DILexicalBlock(scope: !13106, file: !2244, line: 304, column: 7)
!13120 = !DILocation(line: 304, column: 7, scope: !13106)
!13121 = !DILocation(line: 305, column: 26, scope: !13122)
!13122 = distinct !DILexicalBlock(scope: !13119, file: !2244, line: 304, column: 26)
!13123 = !DILocation(line: 305, column: 42, scope: !13122)
!13124 = !DILocation(line: 305, column: 11, scope: !13122)
!13125 = !DILocation(line: 305, column: 8, scope: !13122)
!13126 = !DILocation(line: 306, column: 3, scope: !13122)
!13127 = !DILocation(line: 293, column: 50, scope: !13098)
!13128 = !DILocation(line: 312, column: 1, scope: !2243)
!13129 = distinct !DISubprogram(name: "copy_bytes", scope: !2244, file: !2244, line: 261, type: !13130, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !13132)
!13130 = !DISubroutineType(types: !13131)
!13131 = !{!204, !344, !204, !144, !204}
!13132 = !{!13133, !13134, !13135, !13136, !13137}
!13133 = !DILocalVariable(name: "dest", arg: 1, scope: !13129, file: !2244, line: 261, type: !344)
!13134 = !DILocalVariable(name: "dest_size", arg: 2, scope: !13129, file: !2244, line: 261, type: !204)
!13135 = !DILocalVariable(name: "src", arg: 3, scope: !13129, file: !2244, line: 261, type: !144)
!13136 = !DILocalVariable(name: "src_size", arg: 4, scope: !13129, file: !2244, line: 261, type: !204)
!13137 = !DILocalVariable(name: "bytes_to_copy", scope: !13129, file: !2244, line: 263, type: !204)
!13138 = !DILocation(line: 0, scope: !13129)
!13139 = !DILocation(line: 265, column: 18, scope: !13129)
!13140 = !DILocation(line: 266, column: 2, scope: !13129)
!13141 = !DILocation(line: 268, column: 2, scope: !13129)
!13142 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2244, file: !2244, line: 383, type: !13143, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !13145)
!13143 = !DISubroutineType(types: !13144)
!13144 = !{null, !2248}
!13145 = !{!13146}
!13146 = !DILocalVariable(name: "thread", arg: 1, scope: !13142, file: !2244, line: 383, type: !2248)
!13147 = !DILocation(line: 0, scope: !13142)
!13148 = !DILocation(line: 387, column: 2, scope: !13142)
!13149 = !DILocation(line: 388, column: 1, scope: !13142)
!13150 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2244, file: !2244, line: 528, type: !13151, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !13158)
!13151 = !DISubroutineType(types: !13152)
!13152 = !{!344, !2248, !13153, !204, !3527, !102, !102, !102, !103, !121, !144}
!13153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13154, size: 32)
!13154 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3528, line: 44, baseType: !13155)
!13155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2198, line: 47, size: 8, elements: !13156)
!13156 = !{!13157}
!13157 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13155, file: !2198, line: 48, baseType: !146, size: 8)
!13158 = !{!13159, !13160, !13161, !13162, !13163, !13164, !13165, !13166, !13167, !13168, !13169}
!13159 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13150, file: !2244, line: 528, type: !2248)
!13160 = !DILocalVariable(name: "stack", arg: 2, scope: !13150, file: !2244, line: 529, type: !13153)
!13161 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13150, file: !2244, line: 529, type: !204)
!13162 = !DILocalVariable(name: "entry", arg: 4, scope: !13150, file: !2244, line: 530, type: !3527)
!13163 = !DILocalVariable(name: "p1", arg: 5, scope: !13150, file: !2244, line: 531, type: !102)
!13164 = !DILocalVariable(name: "p2", arg: 6, scope: !13150, file: !2244, line: 531, type: !102)
!13165 = !DILocalVariable(name: "p3", arg: 7, scope: !13150, file: !2244, line: 531, type: !102)
!13166 = !DILocalVariable(name: "prio", arg: 8, scope: !13150, file: !2244, line: 532, type: !103)
!13167 = !DILocalVariable(name: "options", arg: 9, scope: !13150, file: !2244, line: 532, type: !121)
!13168 = !DILocalVariable(name: "name", arg: 10, scope: !13150, file: !2244, line: 532, type: !144)
!13169 = !DILocalVariable(name: "stack_ptr", scope: !13150, file: !2244, line: 534, type: !344)
!13170 = !DILocation(line: 0, scope: !13150)
!13171 = !DILocation(line: 550, column: 28, scope: !13150)
!13172 = !DILocation(line: 550, column: 2, scope: !13150)
!13173 = !DILocation(line: 553, column: 34, scope: !13150)
!13174 = !DILocation(line: 553, column: 2, scope: !13150)
!13175 = !DILocation(line: 554, column: 14, scope: !13150)
!13176 = !DILocation(line: 564, column: 2, scope: !13150)
!13177 = !DILocation(line: 567, column: 14, scope: !13150)
!13178 = !DILocation(line: 567, column: 24, scope: !13150)
!13179 = !DILocation(line: 612, column: 7, scope: !13180)
!13180 = distinct !DILexicalBlock(scope: !13150, file: !2244, line: 612, column: 6)
!13181 = !DILocation(line: 612, column: 6, scope: !13150)
!13182 = !DILocation(line: 627, column: 40, scope: !13150)
!13183 = !DILocation(line: 637, column: 2, scope: !13150)
!13184 = !DILocation(line: 613, column: 15, scope: !13185)
!13185 = distinct !DILexicalBlock(scope: !13180, file: !2244, line: 612, column: 17)
!13186 = !DILocation(line: 613, column: 29, scope: !13185)
!13187 = !DILocation(line: 638, column: 1, scope: !13150)
!13188 = distinct !DISubprogram(name: "z_waitq_init", scope: !13189, file: !13189, line: 47, type: !13190, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !13192)
!13189 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13190 = !DISubroutineType(types: !13191)
!13191 = !{null, !2279}
!13192 = !{!13193}
!13193 = !DILocalVariable(name: "w", arg: 1, scope: !13188, file: !13189, line: 47, type: !2279)
!13194 = !DILocation(line: 0, scope: !13188)
!13195 = !DILocation(line: 49, column: 21, scope: !13188)
!13196 = !DILocation(line: 49, column: 2, scope: !13188)
!13197 = !DILocation(line: 50, column: 1, scope: !13188)
!13198 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2244, file: !2244, line: 791, type: !13199, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !13202)
!13199 = !DISubroutineType(types: !13200)
!13200 = !{null, !13201, !103, !121, !32}
!13201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2252, size: 32)
!13202 = !{!13203, !13204, !13205, !13206}
!13203 = !DILocalVariable(name: "thread_base", arg: 1, scope: !13198, file: !2244, line: 791, type: !13201)
!13204 = !DILocalVariable(name: "priority", arg: 2, scope: !13198, file: !2244, line: 791, type: !103)
!13205 = !DILocalVariable(name: "initial_state", arg: 3, scope: !13198, file: !2244, line: 792, type: !121)
!13206 = !DILocalVariable(name: "options", arg: 4, scope: !13198, file: !2244, line: 792, type: !32)
!13207 = !DILocation(line: 0, scope: !13198)
!13208 = !DILocation(line: 795, column: 15, scope: !13198)
!13209 = !DILocation(line: 795, column: 25, scope: !13198)
!13210 = !DILocation(line: 796, column: 30, scope: !13198)
!13211 = !DILocation(line: 796, column: 15, scope: !13198)
!13212 = !DILocation(line: 796, column: 28, scope: !13198)
!13213 = !DILocation(line: 797, column: 30, scope: !13198)
!13214 = !DILocation(line: 797, column: 15, scope: !13198)
!13215 = !DILocation(line: 797, column: 28, scope: !13198)
!13216 = !DILocation(line: 799, column: 22, scope: !13198)
!13217 = !DILocation(line: 799, column: 15, scope: !13198)
!13218 = !DILocation(line: 799, column: 20, scope: !13198)
!13219 = !DILocation(line: 801, column: 15, scope: !13198)
!13220 = !DILocation(line: 801, column: 28, scope: !13198)
!13221 = !DILocation(line: 814, column: 2, scope: !13198)
!13222 = !DILocation(line: 815, column: 1, scope: !13198)
!13223 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2244, file: !2244, line: 449, type: !13224, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !13226)
!13224 = !DISubroutineType(types: !13225)
!13225 = !{!344, !2248, !13153, !204}
!13226 = !{!13227, !13228, !13229, !13230, !13231, !13232, !13233, !13234}
!13227 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13223, file: !2244, line: 449, type: !2248)
!13228 = !DILocalVariable(name: "stack", arg: 2, scope: !13223, file: !2244, line: 450, type: !13153)
!13229 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13223, file: !2244, line: 450, type: !204)
!13230 = !DILocalVariable(name: "stack_obj_size", scope: !13223, file: !2244, line: 452, type: !204)
!13231 = !DILocalVariable(name: "stack_buf_size", scope: !13223, file: !2244, line: 452, type: !204)
!13232 = !DILocalVariable(name: "stack_ptr", scope: !13223, file: !2244, line: 453, type: !344)
!13233 = !DILocalVariable(name: "stack_buf_start", scope: !13223, file: !2244, line: 453, type: !344)
!13234 = !DILocalVariable(name: "delta", scope: !13223, file: !2244, line: 454, type: !204)
!13235 = !DILocation(line: 0, scope: !13223)
!13236 = !DILocation(line: 465, column: 20, scope: !13237)
!13237 = distinct !DILexicalBlock(scope: !13223, file: !2244, line: 463, column: 2)
!13238 = !DILocation(line: 466, column: 21, scope: !13237)
!13239 = !DILocation(line: 473, column: 28, scope: !13223)
!13240 = !DILocation(line: 514, column: 33, scope: !13223)
!13241 = !DILocation(line: 514, column: 25, scope: !13223)
!13242 = !DILocation(line: 514, column: 31, scope: !13223)
!13243 = !DILocation(line: 515, column: 25, scope: !13223)
!13244 = !DILocation(line: 515, column: 30, scope: !13223)
!13245 = !DILocation(line: 516, column: 25, scope: !13223)
!13246 = !DILocation(line: 516, column: 31, scope: !13223)
!13247 = !DILocation(line: 520, column: 2, scope: !13223)
!13248 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2198, file: !2198, line: 331, type: !13249, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !13251)
!13249 = !DISubroutineType(types: !13250)
!13250 = !{!344, !13153}
!13251 = !{!13252}
!13252 = !DILocalVariable(name: "sym", arg: 1, scope: !13248, file: !2198, line: 331, type: !13153)
!13253 = !DILocation(line: 0, scope: !13248)
!13254 = !DILocation(line: 333, column: 21, scope: !13248)
!13255 = !DILocation(line: 333, column: 2, scope: !13248)
!13256 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !13257, file: !13257, line: 40, type: !13258, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !13260)
!13257 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13258 = !DISubroutineType(types: !13259)
!13259 = !{null, !13201}
!13260 = !{!13261}
!13261 = !DILocalVariable(name: "thread_base", arg: 1, scope: !13256, file: !13257, line: 40, type: !13201)
!13262 = !DILocation(line: 0, scope: !13256)
!13263 = !DILocation(line: 42, column: 31, scope: !13256)
!13264 = !DILocation(line: 42, column: 2, scope: !13256)
!13265 = !DILocation(line: 43, column: 1, scope: !13256)
!13266 = distinct !DISubprogram(name: "z_init_timeout", scope: !13257, file: !13257, line: 25, type: !2305, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !13267)
!13267 = !{!13268}
!13268 = !DILocalVariable(name: "to", arg: 1, scope: !13266, file: !13257, line: 25, type: !2307)
!13269 = !DILocation(line: 0, scope: !13266)
!13270 = !DILocation(line: 27, column: 22, scope: !13266)
!13271 = !DILocation(line: 27, column: 2, scope: !13266)
!13272 = !DILocation(line: 28, column: 1, scope: !13266)
!13273 = distinct !DISubprogram(name: "sys_dnode_init", scope: !325, file: !325, line: 211, type: !13274, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !13276)
!13274 = !DISubroutineType(types: !13275)
!13275 = !{null, !2351}
!13276 = !{!13277}
!13277 = !DILocalVariable(name: "node", arg: 1, scope: !13273, file: !325, line: 211, type: !2351)
!13278 = !DILocation(line: 0, scope: !13273)
!13279 = !DILocation(line: 213, column: 8, scope: !13273)
!13280 = !DILocation(line: 213, column: 13, scope: !13273)
!13281 = !DILocation(line: 214, column: 8, scope: !13273)
!13282 = !DILocation(line: 214, column: 13, scope: !13273)
!13283 = !DILocation(line: 215, column: 1, scope: !13273)
!13284 = distinct !DISubprogram(name: "sys_dlist_init", scope: !325, file: !325, line: 197, type: !13285, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !13288)
!13285 = !DISubroutineType(types: !13286)
!13286 = !{null, !13287}
!13287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2284, size: 32)
!13288 = !{!13289}
!13289 = !DILocalVariable(name: "list", arg: 1, scope: !13284, file: !325, line: 197, type: !13287)
!13290 = !DILocation(line: 0, scope: !13284)
!13291 = !DILocation(line: 199, column: 8, scope: !13284)
!13292 = !DILocation(line: 199, column: 13, scope: !13284)
!13293 = !DILocation(line: 200, column: 8, scope: !13284)
!13294 = !DILocation(line: 200, column: 13, scope: !13284)
!13295 = !DILocation(line: 201, column: 1, scope: !13284)
!13296 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2244, file: !2244, line: 641, type: !13297, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !13303)
!13297 = !DISubroutineType(types: !13298)
!13298 = !{!2247, !2248, !13153, !204, !3527, !102, !102, !102, !103, !121, !13299}
!13299 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !201, line: 67, baseType: !13300)
!13300 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 65, size: 64, elements: !13301)
!13301 = !{!13302}
!13302 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13300, file: !201, line: 66, baseType: !200, size: 64)
!13303 = !{!13304, !13305, !13306, !13307, !13308, !13309, !13310, !13311, !13312, !13313}
!13304 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13296, file: !2244, line: 641, type: !2248)
!13305 = !DILocalVariable(name: "stack", arg: 2, scope: !13296, file: !2244, line: 642, type: !13153)
!13306 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13296, file: !2244, line: 643, type: !204)
!13307 = !DILocalVariable(name: "entry", arg: 4, scope: !13296, file: !2244, line: 643, type: !3527)
!13308 = !DILocalVariable(name: "p1", arg: 5, scope: !13296, file: !2244, line: 644, type: !102)
!13309 = !DILocalVariable(name: "p2", arg: 6, scope: !13296, file: !2244, line: 644, type: !102)
!13310 = !DILocalVariable(name: "p3", arg: 7, scope: !13296, file: !2244, line: 644, type: !102)
!13311 = !DILocalVariable(name: "prio", arg: 8, scope: !13296, file: !2244, line: 645, type: !103)
!13312 = !DILocalVariable(name: "options", arg: 9, scope: !13296, file: !2244, line: 645, type: !121)
!13313 = !DILocalVariable(name: "delay", arg: 10, scope: !13296, file: !2244, line: 645, type: !13299)
!13314 = !DILocation(line: 0, scope: !13296)
!13315 = !DILocation(line: 649, column: 2, scope: !13296)
!13316 = !DILocation(line: 652, column: 7, scope: !13317)
!13317 = distinct !DILexicalBlock(scope: !13296, file: !2244, line: 652, column: 6)
!13318 = !DILocation(line: 652, column: 6, scope: !13296)
!13319 = !DILocation(line: 653, column: 3, scope: !13320)
!13320 = distinct !DILexicalBlock(scope: !13317, file: !2244, line: 652, column: 39)
!13321 = !DILocation(line: 654, column: 2, scope: !13320)
!13322 = !DILocation(line: 656, column: 2, scope: !13296)
!13323 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2244, file: !2244, line: 401, type: !13324, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !13326)
!13324 = !DISubroutineType(types: !13325)
!13325 = !{null, !2248, !13299}
!13326 = !{!13327, !13328}
!13327 = !DILocalVariable(name: "thread", arg: 1, scope: !13323, file: !2244, line: 401, type: !2248)
!13328 = !DILocalVariable(name: "delay", arg: 2, scope: !13323, file: !2244, line: 401, type: !13299)
!13329 = !DILocation(line: 0, scope: !13323)
!13330 = !DILocation(line: 404, column: 6, scope: !13331)
!13331 = distinct !DILexicalBlock(scope: !13323, file: !2244, line: 404, column: 6)
!13332 = !DILocation(line: 404, column: 6, scope: !13323)
!13333 = !DILocation(line: 405, column: 3, scope: !13334)
!13334 = distinct !DILexicalBlock(scope: !13331, file: !2244, line: 404, column: 38)
!13335 = !DILocation(line: 406, column: 2, scope: !13334)
!13336 = !DILocation(line: 407, column: 3, scope: !13337)
!13337 = distinct !DILexicalBlock(scope: !13331, file: !2244, line: 406, column: 9)
!13338 = !DILocation(line: 413, column: 1, scope: !13323)
!13339 = distinct !DISubprogram(name: "k_thread_start", scope: !3649, file: !3649, line: 205, type: !13340, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !13342)
!13340 = !DISubroutineType(types: !13341)
!13341 = !{null, !2247}
!13342 = !{!13343}
!13343 = !DILocalVariable(name: "thread", arg: 1, scope: !13339, file: !3649, line: 205, type: !2247)
!13344 = !DILocation(line: 0, scope: !13339)
!13345 = !DILocation(line: 214, column: 2, scope: !13346)
!13346 = distinct !DILexicalBlock(scope: !13339, file: !3649, line: 214, column: 2)
!13347 = !{i64 2154175786}
!13348 = !DILocation(line: 215, column: 2, scope: !13339)
!13349 = !DILocation(line: 216, column: 1, scope: !13339)
!13350 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !13257, file: !13257, line: 47, type: !13324, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !13351)
!13351 = !{!13352, !13353}
!13352 = !DILocalVariable(name: "thread", arg: 1, scope: !13350, file: !13257, line: 47, type: !2248)
!13353 = !DILocalVariable(name: "ticks", arg: 2, scope: !13350, file: !13257, line: 47, type: !13299)
!13354 = !DILocation(line: 0, scope: !13350)
!13355 = !DILocation(line: 49, column: 30, scope: !13350)
!13356 = !DILocation(line: 49, column: 2, scope: !13350)
!13357 = !DILocation(line: 50, column: 1, scope: !13350)
!13358 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2244, file: !2244, line: 748, type: !3213, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !13359)
!13359 = !{!13360, !13378}
!13360 = !DILocalVariable(name: "thread_data", scope: !13361, file: !2244, line: 750, type: !13362)
!13361 = distinct !DILexicalBlock(scope: !13358, file: !2244, line: 750, column: 2)
!13362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13363, size: 32)
!13363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !296, line: 620, size: 384, elements: !13364)
!13364 = !{!13365, !13366, !13367, !13368, !13369, !13370, !13371, !13372, !13373, !13374, !13375, !13377}
!13365 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !13363, file: !296, line: 621, baseType: !2248, size: 32)
!13366 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !13363, file: !296, line: 622, baseType: !13153, size: 32, offset: 32)
!13367 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !13363, file: !296, line: 623, baseType: !32, size: 32, offset: 64)
!13368 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !13363, file: !296, line: 624, baseType: !3527, size: 32, offset: 96)
!13369 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !13363, file: !296, line: 625, baseType: !102, size: 32, offset: 128)
!13370 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !13363, file: !296, line: 626, baseType: !102, size: 32, offset: 160)
!13371 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !13363, file: !296, line: 627, baseType: !102, size: 32, offset: 192)
!13372 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !13363, file: !296, line: 628, baseType: !103, size: 32, offset: 224)
!13373 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !13363, file: !296, line: 629, baseType: !121, size: 32, offset: 256)
!13374 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !13363, file: !296, line: 630, baseType: !724, size: 32, offset: 288)
!13375 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !13363, file: !296, line: 631, baseType: !13376, size: 32, offset: 320)
!13376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3213, size: 32)
!13377 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !13363, file: !296, line: 632, baseType: !144, size: 32, offset: 352)
!13378 = !DILocalVariable(name: "thread_data", scope: !13379, file: !2244, line: 781, type: !13362)
!13379 = distinct !DILexicalBlock(scope: !13358, file: !2244, line: 781, column: 2)
!13380 = !DILocation(line: 0, scope: !13361)
!13381 = !DILocation(line: 750, column: 2, scope: !13361)
!13382 = !DILocation(line: 780, column: 2, scope: !13358)
!13383 = !DILocation(line: 0, scope: !13379)
!13384 = !DILocation(line: 781, column: 2, scope: !13379)
!13385 = !DILocation(line: 752, column: 17, scope: !13386)
!13386 = distinct !DILexicalBlock(scope: !13387, file: !2244, line: 750, column: 38)
!13387 = distinct !DILexicalBlock(scope: !13361, file: !2244, line: 750, column: 2)
!13388 = !DILocation(line: 753, column: 17, scope: !13386)
!13389 = !DILocation(line: 754, column: 17, scope: !13386)
!13390 = !DILocation(line: 755, column: 17, scope: !13386)
!13391 = !DILocation(line: 756, column: 17, scope: !13386)
!13392 = !DILocation(line: 757, column: 17, scope: !13386)
!13393 = !DILocation(line: 758, column: 17, scope: !13386)
!13394 = !DILocation(line: 759, column: 17, scope: !13386)
!13395 = !DILocation(line: 760, column: 17, scope: !13386)
!13396 = !DILocation(line: 751, column: 3, scope: !13386)
!13397 = !DILocation(line: 763, column: 16, scope: !13386)
!13398 = !DILocation(line: 763, column: 29, scope: !13386)
!13399 = !DILocation(line: 763, column: 39, scope: !13386)
!13400 = !DILocation(line: 750, column: 2, scope: !13387)
!13401 = !DILocation(line: 750, column: 2, scope: !13402)
!13402 = distinct !DILexicalBlock(scope: !13387, file: !2244, line: 750, column: 2)
!13403 = distinct !{!13403, !13381, !13404}
!13404 = !DILocation(line: 764, column: 2, scope: !13361)
!13405 = !DILocation(line: 787, column: 2, scope: !13358)
!13406 = !DILocation(line: 788, column: 1, scope: !13358)
!13407 = !DILocation(line: 782, column: 20, scope: !13408)
!13408 = distinct !DILexicalBlock(scope: !13409, file: !2244, line: 782, column: 7)
!13409 = distinct !DILexicalBlock(scope: !13410, file: !2244, line: 781, column: 38)
!13410 = distinct !DILexicalBlock(scope: !13379, file: !2244, line: 781, column: 2)
!13411 = !DILocation(line: 782, column: 31, scope: !13408)
!13412 = !DILocation(line: 782, column: 7, scope: !13409)
!13413 = !DILocation(line: 783, column: 37, scope: !13414)
!13414 = distinct !DILexicalBlock(scope: !13408, file: !2244, line: 782, column: 51)
!13415 = !DILocation(line: 784, column: 10, scope: !13414)
!13416 = !DILocation(line: 783, column: 4, scope: !13414)
!13417 = !DILocation(line: 785, column: 3, scope: !13414)
!13418 = !DILocation(line: 781, column: 2, scope: !13410)
!13419 = !DILocation(line: 781, column: 2, scope: !13420)
!13420 = distinct !DILexicalBlock(scope: !13410, file: !2244, line: 781, column: 2)
!13421 = distinct !{!13421, !13384, !13422}
!13422 = !DILocation(line: 786, column: 2, scope: !13379)
!13423 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !13424, file: !13424, line: 403, type: !13425, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !13427)
!13424 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13425 = !DISubroutineType(types: !13426)
!13426 = !{!1578, !1578}
!13427 = !{!13428}
!13428 = !DILocalVariable(name: "t", arg: 1, scope: !13423, file: !13424, line: 403, type: !1578)
!13429 = !DILocation(line: 0, scope: !13423)
!13430 = !DILocalVariable(name: "t", arg: 1, scope: !13431, file: !13424, line: 102, type: !1578)
!13431 = distinct !DISubprogram(name: "z_tmcvt", scope: !13424, file: !13424, line: 102, type: !13432, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !13434)
!13432 = !DISubroutineType(types: !13433)
!13433 = !{!1578, !1578, !121, !121, !157, !157, !157, !157}
!13434 = !{!13430, !13435, !13436, !13437, !13438, !13439, !13440, !13441, !13442, !13443, !13444}
!13435 = !DILocalVariable(name: "from_hz", arg: 2, scope: !13431, file: !13424, line: 102, type: !121)
!13436 = !DILocalVariable(name: "to_hz", arg: 3, scope: !13431, file: !13424, line: 103, type: !121)
!13437 = !DILocalVariable(name: "const_hz", arg: 4, scope: !13431, file: !13424, line: 103, type: !157)
!13438 = !DILocalVariable(name: "result32", arg: 5, scope: !13431, file: !13424, line: 104, type: !157)
!13439 = !DILocalVariable(name: "round_up", arg: 6, scope: !13431, file: !13424, line: 104, type: !157)
!13440 = !DILocalVariable(name: "round_off", arg: 7, scope: !13431, file: !13424, line: 105, type: !157)
!13441 = !DILocalVariable(name: "mul_ratio", scope: !13431, file: !13424, line: 107, type: !157)
!13442 = !DILocalVariable(name: "div_ratio", scope: !13431, file: !13424, line: 109, type: !157)
!13443 = !DILocalVariable(name: "off", scope: !13431, file: !13424, line: 116, type: !1578)
!13444 = !DILocalVariable(name: "rdivisor", scope: !13445, file: !13424, line: 119, type: !121)
!13445 = distinct !DILexicalBlock(scope: !13446, file: !13424, line: 118, column: 18)
!13446 = distinct !DILexicalBlock(scope: !13431, file: !13424, line: 118, column: 6)
!13447 = !DILocation(line: 0, scope: !13431, inlinedAt: !13448)
!13448 = distinct !DILocation(line: 406, column: 9, scope: !13423)
!13449 = !DILocation(line: 145, column: 13, scope: !13450, inlinedAt: !13448)
!13450 = distinct !DILexicalBlock(scope: !13451, file: !13424, line: 144, column: 10)
!13451 = distinct !DILexicalBlock(scope: !13452, file: !13424, line: 142, column: 7)
!13452 = distinct !DILexicalBlock(scope: !13453, file: !13424, line: 141, column: 24)
!13453 = distinct !DILexicalBlock(scope: !13454, file: !13424, line: 141, column: 13)
!13454 = distinct !DILexicalBlock(scope: !13431, file: !13424, line: 134, column: 6)
!13455 = !DILocation(line: 406, column: 2, scope: !13423)
!13456 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2244, file: !2244, line: 817, type: !3525, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !13457)
!13457 = !{!13458, !13459, !13460, !13461}
!13458 = !DILocalVariable(name: "entry", arg: 1, scope: !13456, file: !2244, line: 817, type: !3527)
!13459 = !DILocalVariable(name: "p1", arg: 2, scope: !13456, file: !2244, line: 818, type: !102)
!13460 = !DILocalVariable(name: "p2", arg: 3, scope: !13456, file: !2244, line: 818, type: !102)
!13461 = !DILocalVariable(name: "p3", arg: 4, scope: !13456, file: !2244, line: 818, type: !102)
!13462 = !DILocation(line: 0, scope: !13456)
!13463 = !DILocation(line: 822, column: 2, scope: !13456)
!13464 = !DILocation(line: 822, column: 17, scope: !13456)
!13465 = !DILocation(line: 822, column: 30, scope: !13456)
!13466 = !DILocation(line: 823, column: 2, scope: !13456)
!13467 = !DILocation(line: 845, column: 2, scope: !13456)
!13468 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2244, file: !2244, line: 888, type: !13469, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !13471)
!13469 = !DISubroutineType(types: !13470)
!13470 = !{!103, !2248}
!13471 = !{!13472}
!13472 = !DILocalVariable(name: "thread", arg: 1, scope: !13468, file: !2244, line: 888, type: !2248)
!13473 = !DILocation(line: 0, scope: !13468)
!13474 = !DILocation(line: 893, column: 2, scope: !13468)
!13475 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2244, file: !2244, line: 897, type: !13476, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !13478)
!13476 = !DISubroutineType(types: !13477)
!13477 = !{!103, !2248, !32}
!13478 = !{!13479, !13480}
!13479 = !DILocalVariable(name: "thread", arg: 1, scope: !13475, file: !2244, line: 897, type: !2248)
!13480 = !DILocalVariable(name: "options", arg: 2, scope: !13475, file: !2244, line: 897, type: !32)
!13481 = !DILocation(line: 0, scope: !13475)
!13482 = !DILocation(line: 902, column: 2, scope: !13475)
!13483 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2244, file: !2244, line: 1072, type: !13484, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !13489)
!13484 = !DISubroutineType(types: !13485)
!13485 = !{!103, !2247, !13486}
!13486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13487, size: 32)
!13487 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !379, line: 234, baseType: !13488)
!13488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !379, line: 192, elements: !317)
!13489 = !{!13490, !13491}
!13490 = !DILocalVariable(name: "thread", arg: 1, scope: !13483, file: !2244, line: 1072, type: !2247)
!13491 = !DILocalVariable(name: "stats", arg: 2, scope: !13483, file: !2244, line: 1073, type: !13486)
!13492 = !DILocation(line: 0, scope: !13483)
!13493 = !DILocation(line: 1075, column: 14, scope: !13494)
!13494 = distinct !DILexicalBlock(scope: !13483, file: !2244, line: 1075, column: 6)
!13495 = !DILocation(line: 1075, column: 23, scope: !13494)
!13496 = !DILocation(line: 1086, column: 1, scope: !13483)
!13497 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2244, file: !2244, line: 1088, type: !13498, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !13500)
!13498 = !DISubroutineType(types: !13499)
!13499 = !{!103, !13486}
!13500 = !{!13501}
!13501 = !DILocalVariable(name: "stats", arg: 1, scope: !13497, file: !2244, line: 1088, type: !13486)
!13502 = !DILocation(line: 0, scope: !13497)
!13503 = !DILocation(line: 1094, column: 12, scope: !13504)
!13504 = distinct !DILexicalBlock(scope: !13497, file: !2244, line: 1094, column: 6)
!13505 = !DILocation(line: 1120, column: 1, scope: !13497)
!13506 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !13507, file: !13507, line: 20, type: !3213, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3151, retainedNodes: !317)
!13507 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13508 = !DILocation(line: 30, column: 2, scope: !13506)
!13509 = !DILocation(line: 31, column: 1, scope: !13506)
!13510 = distinct !DISubprogram(name: "idle", scope: !13507, file: !13507, line: 33, type: !3530, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3151, retainedNodes: !13511)
!13511 = !{!13512, !13513, !13514}
!13512 = !DILocalVariable(name: "unused1", arg: 1, scope: !13510, file: !13507, line: 33, type: !102)
!13513 = !DILocalVariable(name: "unused2", arg: 2, scope: !13510, file: !13507, line: 33, type: !102)
!13514 = !DILocalVariable(name: "unused3", arg: 3, scope: !13510, file: !13507, line: 33, type: !102)
!13515 = !DILocation(line: 0, scope: !13510)
!13516 = !DILocation(line: 41, column: 2, scope: !13510)
!13517 = !DILocation(line: 55, column: 2, scope: !13518, inlinedAt: !13522)
!13518 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5768, file: !5768, line: 42, type: !5769, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3151, retainedNodes: !13519)
!13519 = !{!13520, !13521}
!13520 = !DILocalVariable(name: "key", scope: !13518, file: !5768, line: 44, type: !32)
!13521 = !DILocalVariable(name: "tmp", scope: !13518, file: !5768, line: 53, type: !32)
!13522 = distinct !DILocation(line: 62, column: 10, scope: !13523)
!13523 = distinct !DILexicalBlock(scope: !13510, file: !13507, line: 41, column: 15)
!13524 = !{i64 2037176}
!13525 = !DILocation(line: 0, scope: !13518, inlinedAt: !13522)
!13526 = !DILocation(line: 86, column: 3, scope: !13523)
!13527 = distinct !{!13527, !13516, !13528}
!13528 = !DILocation(line: 105, column: 2, scope: !13510)
!13529 = distinct !DISubprogram(name: "k_cpu_idle", scope: !296, file: !296, line: 5627, type: !3213, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3151, retainedNodes: !317)
!13530 = !DILocation(line: 5629, column: 2, scope: !13529)
!13531 = !DILocation(line: 5630, column: 1, scope: !13529)
!13532 = !DISubprogram(name: "arch_cpu_idle", scope: !3528, file: !3528, line: 167, type: !3213, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !317)
!13533 = distinct !DISubprogram(name: "z_queue_node_peek", scope: !3169, file: !3169, line: 30, type: !13534, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !13536)
!13534 = !DISubroutineType(types: !13535)
!13535 = !{!102, !3178, !157}
!13536 = !{!13537, !13538, !13539, !13540}
!13537 = !DILocalVariable(name: "node", arg: 1, scope: !13533, file: !3169, line: 30, type: !3178)
!13538 = !DILocalVariable(name: "needs_free", arg: 2, scope: !13533, file: !3169, line: 30, type: !157)
!13539 = !DILocalVariable(name: "ret", scope: !13533, file: !3169, line: 32, type: !102)
!13540 = !DILocalVariable(name: "anode", scope: !13541, file: !3169, line: 40, type: !3167)
!13541 = distinct !DILexicalBlock(scope: !13542, file: !3169, line: 34, column: 68)
!13542 = distinct !DILexicalBlock(scope: !13533, file: !3169, line: 34, column: 6)
!13543 = !DILocation(line: 0, scope: !13533)
!13544 = !DILocation(line: 34, column: 12, scope: !13542)
!13545 = !DILocation(line: 34, column: 21, scope: !13542)
!13546 = !DILocation(line: 34, column: 25, scope: !13542)
!13547 = !DILocation(line: 34, column: 52, scope: !13542)
!13548 = !DILocation(line: 34, column: 6, scope: !13533)
!13549 = !DILocation(line: 0, scope: !13541)
!13550 = !DILocation(line: 43, column: 16, scope: !13541)
!13551 = !DILocation(line: 44, column: 7, scope: !13541)
!13552 = !DILocation(line: 42, column: 11, scope: !13541)
!13553 = !DILocation(line: 45, column: 4, scope: !13554)
!13554 = distinct !DILexicalBlock(scope: !13555, file: !3169, line: 44, column: 19)
!13555 = distinct !DILexicalBlock(scope: !13541, file: !3169, line: 44, column: 7)
!13556 = !DILocation(line: 46, column: 3, scope: !13554)
!13557 = !DILocation(line: 52, column: 9, scope: !13558)
!13558 = distinct !DILexicalBlock(scope: !13542, file: !3169, line: 47, column: 9)
!13559 = !DILocation(line: 0, scope: !13542)
!13560 = !DILocation(line: 55, column: 2, scope: !13533)
!13561 = distinct !DISubprogram(name: "sys_sfnode_flags_get", scope: !303, file: !303, line: 270, type: !13562, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !13564)
!13562 = !DISubroutineType(types: !13563)
!13563 = !{!154, !3178}
!13564 = !{!13565}
!13565 = !DILocalVariable(name: "node", arg: 1, scope: !13561, file: !303, line: 270, type: !3178)
!13566 = !DILocation(line: 0, scope: !13561)
!13567 = !DILocation(line: 272, column: 15, scope: !13561)
!13568 = !DILocation(line: 272, column: 9, scope: !13561)
!13569 = !DILocation(line: 272, column: 2, scope: !13561)
!13570 = distinct !DISubprogram(name: "z_impl_k_queue_init", scope: !3169, file: !3169, line: 58, type: !13571, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !13590)
!13571 = !DISubroutineType(types: !13572)
!13572 = !{null, !13573}
!13573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13574, size: 32)
!13574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !296, line: 1709, size: 128, elements: !13575)
!13575 = !{!13576, !13582, !13584}
!13576 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !13574, file: !296, line: 1710, baseType: !13577, size: 64)
!13577 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !303, line: 46, baseType: !13578)
!13578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !303, line: 41, size: 64, elements: !13579)
!13579 = !{!13580, !13581}
!13580 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !13578, file: !303, line: 42, baseType: !3178, size: 32)
!13581 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !13578, file: !303, line: 43, baseType: !3178, size: 32, offset: 32)
!13582 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13574, file: !296, line: 1711, baseType: !13583, offset: 64)
!13583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!13584 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13574, file: !296, line: 1712, baseType: !13585, size: 64, offset: 64)
!13585 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !13586)
!13586 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !13587)
!13587 = !{!13588}
!13588 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !13586, file: !320, line: 232, baseType: !13589, size: 64)
!13589 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !3181)
!13590 = !{!13591}
!13591 = !DILocalVariable(name: "queue", arg: 1, scope: !13570, file: !3169, line: 58, type: !13573)
!13592 = !DILocation(line: 0, scope: !13570)
!13593 = !DILocation(line: 60, column: 26, scope: !13570)
!13594 = !DILocation(line: 60, column: 2, scope: !13570)
!13595 = !DILocation(line: 62, column: 23, scope: !13570)
!13596 = !DILocation(line: 62, column: 2, scope: !13570)
!13597 = !DILocation(line: 70, column: 1, scope: !13570)
!13598 = distinct !DISubprogram(name: "sys_sflist_init", scope: !303, file: !303, line: 202, type: !13599, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !13602)
!13599 = !DISubroutineType(types: !13600)
!13600 = !{null, !13601}
!13601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13577, size: 32)
!13602 = !{!13603}
!13603 = !DILocalVariable(name: "list", arg: 1, scope: !13598, file: !303, line: 202, type: !13601)
!13604 = !DILocation(line: 0, scope: !13598)
!13605 = !DILocation(line: 204, column: 8, scope: !13598)
!13606 = !DILocation(line: 204, column: 13, scope: !13598)
!13607 = !DILocation(line: 205, column: 8, scope: !13598)
!13608 = !DILocation(line: 205, column: 13, scope: !13598)
!13609 = !DILocation(line: 206, column: 1, scope: !13598)
!13610 = distinct !DISubprogram(name: "z_waitq_init", scope: !13189, file: !13189, line: 47, type: !13611, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !13614)
!13611 = !DISubroutineType(types: !13612)
!13612 = !{null, !13613}
!13613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13585, size: 32)
!13614 = !{!13615}
!13615 = !DILocalVariable(name: "w", arg: 1, scope: !13610, file: !13189, line: 47, type: !13613)
!13616 = !DILocation(line: 0, scope: !13610)
!13617 = !DILocation(line: 49, column: 21, scope: !13610)
!13618 = !DILocation(line: 49, column: 2, scope: !13610)
!13619 = !DILocation(line: 50, column: 1, scope: !13610)
!13620 = distinct !DISubprogram(name: "sys_dlist_init", scope: !325, file: !325, line: 197, type: !13621, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !13624)
!13621 = !DISubroutineType(types: !13622)
!13622 = !{null, !13623}
!13623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13589, size: 32)
!13624 = !{!13625}
!13625 = !DILocalVariable(name: "list", arg: 1, scope: !13620, file: !325, line: 197, type: !13623)
!13626 = !DILocation(line: 0, scope: !13620)
!13627 = !DILocation(line: 199, column: 8, scope: !13620)
!13628 = !DILocation(line: 199, column: 13, scope: !13620)
!13629 = !DILocation(line: 200, column: 8, scope: !13620)
!13630 = !DILocation(line: 200, column: 13, scope: !13620)
!13631 = !DILocation(line: 201, column: 1, scope: !13620)
!13632 = distinct !DISubprogram(name: "z_impl_k_queue_cancel_wait", scope: !3169, file: !3169, line: 94, type: !13571, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !13633)
!13633 = !{!13634, !13635, !13640}
!13634 = !DILocalVariable(name: "queue", arg: 1, scope: !13632, file: !3169, line: 94, type: !13573)
!13635 = !DILocalVariable(name: "key", scope: !13632, file: !3169, line: 98, type: !13636)
!13636 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !316, line: 106, baseType: !13637)
!13637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !316, line: 32, size: 32, elements: !13638)
!13638 = !{!13639}
!13639 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13637, file: !316, line: 33, baseType: !103, size: 32)
!13640 = !DILocalVariable(name: "first_pending_thread", scope: !13632, file: !3169, line: 99, type: !13641)
!13641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13642, size: 32)
!13642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !379, line: 245, size: 1024, elements: !13643)
!13643 = !{!13644, !13682, !13694, !13695, !13696, !13697, !13703, !13715}
!13644 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !13642, file: !379, line: 247, baseType: !13645, size: 384)
!13645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !379, line: 57, size: 384, elements: !13646)
!13646 = !{!13647, !13657, !13658, !13659, !13660, !13669, !13670, !13671}
!13647 = !DIDerivedType(tag: DW_TAG_member, scope: !13645, file: !379, line: 60, baseType: !13648, size: 64)
!13648 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13645, file: !379, line: 60, size: 64, elements: !13649)
!13649 = !{!13650, !13651}
!13650 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !13648, file: !379, line: 61, baseType: !3180, size: 64)
!13651 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !13648, file: !379, line: 62, baseType: !13652, size: 64)
!13652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !404, line: 49, size: 64, elements: !13653)
!13653 = !{!13654}
!13654 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !13652, file: !404, line: 50, baseType: !13655, size: 64)
!13655 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13656, size: 64, elements: !363)
!13656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13652, size: 32)
!13657 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !13645, file: !379, line: 68, baseType: !13613, size: 32, offset: 64)
!13658 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !13645, file: !379, line: 71, baseType: !154, size: 8, offset: 96)
!13659 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !13645, file: !379, line: 74, baseType: !154, size: 8, offset: 104)
!13660 = !DIDerivedType(tag: DW_TAG_member, scope: !13645, file: !379, line: 90, baseType: !13661, size: 16, offset: 112)
!13661 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13645, file: !379, line: 90, size: 16, elements: !13662)
!13662 = !{!13663, !13668}
!13663 = !DIDerivedType(tag: DW_TAG_member, scope: !13661, file: !379, line: 91, baseType: !13664, size: 16)
!13664 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !13661, file: !379, line: 91, size: 16, elements: !13665)
!13665 = !{!13666, !13667}
!13666 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !13664, file: !379, line: 96, baseType: !425, size: 8)
!13667 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !13664, file: !379, line: 97, baseType: !154, size: 8, offset: 8)
!13668 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !13661, file: !379, line: 100, baseType: !429, size: 16)
!13669 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !13645, file: !379, line: 107, baseType: !121, size: 32, offset: 128)
!13670 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !13645, file: !379, line: 127, baseType: !102, size: 32, offset: 160)
!13671 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !13645, file: !379, line: 131, baseType: !13672, size: 192, offset: 192)
!13672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !320, line: 244, size: 192, elements: !13673)
!13673 = !{!13674, !13675, !13681}
!13674 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !13672, file: !320, line: 245, baseType: !3180, size: 64)
!13675 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !13672, file: !320, line: 246, baseType: !13676, size: 32, offset: 64)
!13676 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !320, line: 242, baseType: !13677)
!13677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13678, size: 32)
!13678 = !DISubroutineType(types: !13679)
!13679 = !{null, !13680}
!13680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13672, size: 32)
!13681 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !13672, file: !320, line: 249, baseType: !202, size: 64, offset: 128)
!13682 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !13642, file: !379, line: 250, baseType: !13683, size: 288, offset: 384)
!13683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !446, line: 25, size: 288, elements: !13684)
!13684 = !{!13685, !13686, !13687, !13688, !13689, !13690, !13691, !13692, !13693}
!13685 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !13683, file: !446, line: 26, baseType: !121, size: 32)
!13686 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !13683, file: !446, line: 27, baseType: !121, size: 32, offset: 32)
!13687 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !13683, file: !446, line: 28, baseType: !121, size: 32, offset: 64)
!13688 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !13683, file: !446, line: 29, baseType: !121, size: 32, offset: 96)
!13689 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !13683, file: !446, line: 30, baseType: !121, size: 32, offset: 128)
!13690 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !13683, file: !446, line: 31, baseType: !121, size: 32, offset: 160)
!13691 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !13683, file: !446, line: 32, baseType: !121, size: 32, offset: 192)
!13692 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !13683, file: !446, line: 33, baseType: !121, size: 32, offset: 224)
!13693 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !13683, file: !446, line: 34, baseType: !121, size: 32, offset: 256)
!13694 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !13642, file: !379, line: 253, baseType: !102, size: 32, offset: 672)
!13695 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !13642, file: !379, line: 256, baseType: !13585, size: 64, offset: 704)
!13696 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !13642, file: !379, line: 294, baseType: !103, size: 32, offset: 768)
!13697 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !13642, file: !379, line: 300, baseType: !13698, size: 96, offset: 800)
!13698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !379, line: 149, size: 96, elements: !13699)
!13699 = !{!13700, !13701, !13702}
!13700 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !13698, file: !379, line: 153, baseType: !22, size: 32)
!13701 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13698, file: !379, line: 162, baseType: !204, size: 32, offset: 32)
!13702 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !13698, file: !379, line: 168, baseType: !204, size: 32, offset: 64)
!13703 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !13642, file: !379, line: 325, baseType: !13704, size: 32, offset: 896)
!13704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13705, size: 32)
!13705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !296, line: 5073, size: 160, elements: !13706)
!13706 = !{!13707, !13713, !13714}
!13707 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13705, file: !296, line: 5074, baseType: !13708, size: 96)
!13708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !13709)
!13709 = !{!13710, !13711, !13712}
!13710 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13708, file: !472, line: 57, baseType: !475, size: 32)
!13711 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !13708, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!13712 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !13708, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!13713 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13705, file: !296, line: 5075, baseType: !13585, size: 64, offset: 96)
!13714 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13705, file: !296, line: 5076, baseType: !13583, offset: 160)
!13715 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !13642, file: !379, line: 343, baseType: !13716, size: 64, offset: 928)
!13716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !446, line: 60, size: 64, elements: !13717)
!13717 = !{!13718, !13719}
!13718 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !13716, file: !446, line: 63, baseType: !121, size: 32)
!13719 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !13716, file: !446, line: 66, baseType: !121, size: 32, offset: 32)
!13720 = !DILocation(line: 0, scope: !13632)
!13721 = !DILocalVariable(name: "l", arg: 1, scope: !13722, file: !316, line: 136, type: !13725)
!13722 = distinct !DISubprogram(name: "k_spin_lock", scope: !316, file: !316, line: 136, type: !13723, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !13726)
!13723 = !DISubroutineType(types: !13724)
!13724 = !{!13636, !13725}
!13725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13583, size: 32)
!13726 = !{!13721, !13727}
!13727 = !DILocalVariable(name: "k", scope: !13722, file: !316, line: 139, type: !13636)
!13728 = !DILocation(line: 0, scope: !13722, inlinedAt: !13729)
!13729 = distinct !DILocation(line: 98, column: 25, scope: !13632)
!13730 = !DILocation(line: 55, column: 2, scope: !13731, inlinedAt: !13735)
!13731 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5768, file: !5768, line: 42, type: !5769, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !13732)
!13732 = !{!13733, !13734}
!13733 = !DILocalVariable(name: "key", scope: !13731, file: !5768, line: 44, type: !32)
!13734 = !DILocalVariable(name: "tmp", scope: !13731, file: !5768, line: 53, type: !32)
!13735 = distinct !DILocation(line: 145, column: 10, scope: !13722, inlinedAt: !13729)
!13736 = !{i64 2044917}
!13737 = !DILocation(line: 0, scope: !13731, inlinedAt: !13735)
!13738 = !DILocation(line: 101, column: 55, scope: !13632)
!13739 = !DILocation(line: 101, column: 25, scope: !13632)
!13740 = !DILocation(line: 103, column: 27, scope: !13741)
!13741 = distinct !DILexicalBlock(scope: !13632, file: !3169, line: 103, column: 6)
!13742 = !DILocation(line: 103, column: 6, scope: !13632)
!13743 = !DILocation(line: 104, column: 3, scope: !13744)
!13744 = distinct !DILexicalBlock(scope: !13741, file: !3169, line: 103, column: 36)
!13745 = !DILocation(line: 105, column: 2, scope: !13744)
!13746 = !DILocation(line: 98, column: 45, scope: !13632)
!13747 = !DILocation(line: 108, column: 2, scope: !13632)
!13748 = !DILocation(line: 109, column: 1, scope: !13632)
!13749 = distinct !DISubprogram(name: "prepare_thread_to_run", scope: !3169, file: !3169, line: 81, type: !13750, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !13752)
!13750 = !DISubroutineType(types: !13751)
!13751 = !{null, !13641, !102}
!13752 = !{!13753, !13754}
!13753 = !DILocalVariable(name: "thread", arg: 1, scope: !13749, file: !3169, line: 81, type: !13641)
!13754 = !DILocalVariable(name: "data", arg: 2, scope: !13749, file: !3169, line: 81, type: !102)
!13755 = !DILocation(line: 0, scope: !13749)
!13756 = !DILocalVariable(name: "thread", arg: 1, scope: !13757, file: !13758, line: 134, type: !13641)
!13757 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !13758, file: !13758, line: 134, type: !13759, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !13761)
!13758 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13759 = !DISubroutineType(types: !13760)
!13760 = !{null, !13641, !32, !102}
!13761 = !{!13756, !13762, !13763}
!13762 = !DILocalVariable(name: "value", arg: 2, scope: !13757, file: !13758, line: 135, type: !32)
!13763 = !DILocalVariable(name: "data", arg: 3, scope: !13757, file: !13758, line: 136, type: !102)
!13764 = !DILocation(line: 0, scope: !13757, inlinedAt: !13765)
!13765 = distinct !DILocation(line: 83, column: 2, scope: !13749)
!13766 = !DILocalVariable(name: "thread", arg: 1, scope: !13767, file: !12885, line: 65, type: !13641)
!13767 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12885, file: !12885, line: 65, type: !13768, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !13770)
!13768 = !DISubroutineType(types: !13769)
!13769 = !{null, !13641, !32}
!13770 = !{!13766, !13771}
!13771 = !DILocalVariable(name: "value", arg: 2, scope: !13767, file: !12885, line: 65, type: !32)
!13772 = !DILocation(line: 0, scope: !13767, inlinedAt: !13773)
!13773 = distinct !DILocation(line: 138, column: 2, scope: !13757, inlinedAt: !13765)
!13774 = !DILocation(line: 67, column: 15, scope: !13767, inlinedAt: !13773)
!13775 = !DILocation(line: 67, column: 33, scope: !13767, inlinedAt: !13773)
!13776 = !DILocation(line: 139, column: 15, scope: !13757, inlinedAt: !13765)
!13777 = !DILocation(line: 139, column: 25, scope: !13757, inlinedAt: !13765)
!13778 = !DILocation(line: 84, column: 2, scope: !13749)
!13779 = !DILocation(line: 85, column: 1, scope: !13749)
!13780 = distinct !DISubprogram(name: "k_queue_insert", scope: !3169, file: !3169, line: 175, type: !13781, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !13783)
!13781 = !DISubroutineType(types: !13782)
!13782 = !{null, !13573, !102, !102}
!13783 = !{!13784, !13785, !13786}
!13784 = !DILocalVariable(name: "queue", arg: 1, scope: !13780, file: !3169, line: 175, type: !13573)
!13785 = !DILocalVariable(name: "prev", arg: 2, scope: !13780, file: !3169, line: 175, type: !102)
!13786 = !DILocalVariable(name: "data", arg: 3, scope: !13780, file: !3169, line: 175, type: !102)
!13787 = !DILocation(line: 0, scope: !13780)
!13788 = !DILocation(line: 179, column: 8, scope: !13780)
!13789 = !DILocation(line: 182, column: 1, scope: !13780)
!13790 = distinct !DISubprogram(name: "queue_insert", scope: !3169, file: !3169, line: 120, type: !13791, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !13793)
!13791 = !DISubroutineType(types: !13792)
!13792 = !{!724, !13573, !102, !102, !157, !157}
!13793 = !{!13794, !13795, !13796, !13797, !13798, !13799, !13800, !13801}
!13794 = !DILocalVariable(name: "queue", arg: 1, scope: !13790, file: !3169, line: 120, type: !13573)
!13795 = !DILocalVariable(name: "prev", arg: 2, scope: !13790, file: !3169, line: 120, type: !102)
!13796 = !DILocalVariable(name: "data", arg: 3, scope: !13790, file: !3169, line: 120, type: !102)
!13797 = !DILocalVariable(name: "alloc", arg: 4, scope: !13790, file: !3169, line: 121, type: !157)
!13798 = !DILocalVariable(name: "is_append", arg: 5, scope: !13790, file: !3169, line: 121, type: !157)
!13799 = !DILocalVariable(name: "first_pending_thread", scope: !13790, file: !3169, line: 123, type: !13641)
!13800 = !DILocalVariable(name: "key", scope: !13790, file: !3169, line: 124, type: !13636)
!13801 = !DILocalVariable(name: "anode", scope: !13802, file: !3169, line: 146, type: !3167)
!13802 = distinct !DILexicalBlock(scope: !13803, file: !3169, line: 145, column: 13)
!13803 = distinct !DILexicalBlock(scope: !13790, file: !3169, line: 145, column: 6)
!13804 = !DILocation(line: 0, scope: !13790)
!13805 = !DILocation(line: 124, column: 45, scope: !13790)
!13806 = !DILocation(line: 0, scope: !13722, inlinedAt: !13807)
!13807 = distinct !DILocation(line: 124, column: 25, scope: !13790)
!13808 = !DILocation(line: 55, column: 2, scope: !13731, inlinedAt: !13809)
!13809 = distinct !DILocation(line: 145, column: 10, scope: !13722, inlinedAt: !13807)
!13810 = !DILocation(line: 0, scope: !13731, inlinedAt: !13809)
!13811 = !DILocation(line: 128, column: 6, scope: !13790)
!13812 = !DILocation(line: 129, column: 39, scope: !13813)
!13813 = distinct !DILexicalBlock(scope: !13814, file: !3169, line: 128, column: 17)
!13814 = distinct !DILexicalBlock(scope: !13790, file: !3169, line: 128, column: 6)
!13815 = !DILocation(line: 129, column: 10, scope: !13813)
!13816 = !DILocation(line: 130, column: 2, scope: !13813)
!13817 = !DILocation(line: 131, column: 55, scope: !13790)
!13818 = !DILocation(line: 131, column: 25, scope: !13790)
!13819 = !DILocation(line: 133, column: 27, scope: !13820)
!13820 = distinct !DILexicalBlock(scope: !13790, file: !3169, line: 133, column: 6)
!13821 = !DILocation(line: 133, column: 6, scope: !13790)
!13822 = !DILocation(line: 136, column: 3, scope: !13823)
!13823 = distinct !DILexicalBlock(scope: !13820, file: !3169, line: 133, column: 36)
!13824 = !DILocation(line: 137, column: 3, scope: !13823)
!13825 = !DILocation(line: 141, column: 3, scope: !13823)
!13826 = !DILocation(line: 145, column: 6, scope: !13790)
!13827 = !DILocation(line: 148, column: 11, scope: !13802)
!13828 = !DILocation(line: 0, scope: !13802)
!13829 = !DILocation(line: 149, column: 13, scope: !13830)
!13830 = distinct !DILexicalBlock(scope: !13802, file: !3169, line: 149, column: 7)
!13831 = !DILocation(line: 149, column: 7, scope: !13802)
!13832 = !DILocalVariable(name: "key", arg: 2, scope: !13833, file: !316, line: 190, type: !13636)
!13833 = distinct !DISubprogram(name: "k_spin_unlock", scope: !316, file: !316, line: 189, type: !13834, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !13836)
!13834 = !DISubroutineType(types: !13835)
!13835 = !{null, !13725, !13636}
!13836 = !{!13837, !13832}
!13837 = !DILocalVariable(name: "l", arg: 1, scope: !13833, file: !316, line: 189, type: !13725)
!13838 = !DILocation(line: 0, scope: !13833, inlinedAt: !13839)
!13839 = distinct !DILocation(line: 150, column: 4, scope: !13840)
!13840 = distinct !DILexicalBlock(scope: !13830, file: !3169, line: 149, column: 22)
!13841 = !DILocalVariable(name: "key", arg: 1, scope: !13842, file: !5768, line: 84, type: !32)
!13842 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5768, file: !5768, line: 84, type: !5779, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !13843)
!13843 = !{!13841}
!13844 = !DILocation(line: 0, scope: !13842, inlinedAt: !13845)
!13845 = distinct !DILocation(line: 215, column: 2, scope: !13833, inlinedAt: !13839)
!13846 = !DILocation(line: 95, column: 2, scope: !13842, inlinedAt: !13845)
!13847 = !{i64 2045734}
!13848 = !DILocation(line: 157, column: 10, scope: !13802)
!13849 = !DILocation(line: 157, column: 15, scope: !13802)
!13850 = !DILocation(line: 158, column: 27, scope: !13802)
!13851 = !DILocation(line: 158, column: 3, scope: !13802)
!13852 = !DILocation(line: 161, column: 19, scope: !13853)
!13853 = distinct !DILexicalBlock(scope: !13803, file: !3169, line: 160, column: 9)
!13854 = !DILocation(line: 161, column: 3, scope: !13853)
!13855 = !DILocation(line: 166, column: 42, scope: !13790)
!13856 = !DILocation(line: 166, column: 28, scope: !13790)
!13857 = !DILocation(line: 166, column: 36, scope: !13790)
!13858 = !DILocation(line: 166, column: 2, scope: !13790)
!13859 = !DILocation(line: 168, column: 2, scope: !13790)
!13860 = !DILocation(line: 172, column: 2, scope: !13790)
!13861 = !DILocation(line: 173, column: 1, scope: !13790)
!13862 = distinct !DISubprogram(name: "sys_sflist_peek_tail", scope: !303, file: !303, line: 255, type: !13863, scopeLine: 256, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !13865)
!13863 = !DISubroutineType(types: !13864)
!13864 = !{!3178, !13601}
!13865 = !{!13866}
!13866 = !DILocalVariable(name: "list", arg: 1, scope: !13862, file: !303, line: 255, type: !13601)
!13867 = !DILocation(line: 0, scope: !13862)
!13868 = !DILocation(line: 257, column: 15, scope: !13862)
!13869 = !DILocation(line: 257, column: 2, scope: !13862)
!13870 = distinct !DISubprogram(name: "z_thread_malloc", scope: !13758, file: !13758, line: 102, type: !13871, scopeLine: 103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !13872)
!13871 = !DISubroutineType(types: !3132)
!13872 = !{!13873}
!13873 = !DILocalVariable(name: "size", arg: 1, scope: !13870, file: !13758, line: 102, type: !204)
!13874 = !DILocation(line: 0, scope: !13870)
!13875 = !DILocation(line: 104, column: 9, scope: !13870)
!13876 = !DILocation(line: 104, column: 2, scope: !13870)
!13877 = distinct !DISubprogram(name: "sys_sfnode_init", scope: !303, file: !303, line: 288, type: !13878, scopeLine: 289, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !13880)
!13878 = !DISubroutineType(types: !13879)
!13879 = !{null, !3178, !154}
!13880 = !{!13881, !13882}
!13881 = !DILocalVariable(name: "node", arg: 1, scope: !13877, file: !303, line: 288, type: !3178)
!13882 = !DILocalVariable(name: "flags", arg: 2, scope: !13877, file: !303, line: 288, type: !154)
!13883 = !DILocation(line: 0, scope: !13877)
!13884 = !DILocation(line: 291, column: 25, scope: !13877)
!13885 = !DILocation(line: 291, column: 8, scope: !13877)
!13886 = !DILocation(line: 291, column: 23, scope: !13877)
!13887 = !DILocation(line: 292, column: 1, scope: !13877)
!13888 = distinct !DISubprogram(name: "sys_sflist_insert", scope: !303, file: !303, line: 420, type: !13889, scopeLine: 420, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !13891)
!13889 = !DISubroutineType(types: !13890)
!13890 = !{null, !13601, !3178, !3178}
!13891 = !{!13892, !13893, !13894}
!13892 = !DILocalVariable(name: "list", arg: 1, scope: !13888, file: !303, line: 420, type: !13601)
!13893 = !DILocalVariable(name: "prev", arg: 2, scope: !13888, file: !303, line: 420, type: !3178)
!13894 = !DILocalVariable(name: "node", arg: 3, scope: !13888, file: !303, line: 420, type: !3178)
!13895 = !DILocation(line: 0, scope: !13888)
!13896 = !DILocation(line: 420, column: 1, scope: !13897)
!13897 = distinct !DILexicalBlock(scope: !13888, file: !303, line: 420, column: 1)
!13898 = !DILocation(line: 420, column: 1, scope: !13888)
!13899 = !DILocation(line: 420, column: 1, scope: !13900)
!13900 = distinct !DILexicalBlock(scope: !13897, file: !303, line: 420, column: 1)
!13901 = !DILocation(line: 420, column: 1, scope: !13902)
!13902 = distinct !DILexicalBlock(scope: !13897, file: !303, line: 420, column: 1)
!13903 = !DILocation(line: 420, column: 1, scope: !13904)
!13904 = distinct !DILexicalBlock(scope: !13902, file: !303, line: 420, column: 1)
!13905 = !DILocation(line: 420, column: 1, scope: !13906)
!13906 = distinct !DILexicalBlock(scope: !13902, file: !303, line: 420, column: 1)
!13907 = distinct !DISubprogram(name: "sys_sflist_prepend", scope: !303, file: !303, line: 360, type: !13908, scopeLine: 360, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !13910)
!13908 = !DISubroutineType(types: !13909)
!13909 = !{null, !13601, !3178}
!13910 = !{!13911, !13912}
!13911 = !DILocalVariable(name: "list", arg: 1, scope: !13907, file: !303, line: 360, type: !13601)
!13912 = !DILocalVariable(name: "node", arg: 2, scope: !13907, file: !303, line: 360, type: !3178)
!13913 = !DILocation(line: 0, scope: !13907)
!13914 = !DILocation(line: 360, column: 1, scope: !13907)
!13915 = !DILocation(line: 360, column: 1, scope: !13916)
!13916 = distinct !DILexicalBlock(scope: !13907, file: !303, line: 360, column: 1)
!13917 = !DILocation(line: 360, column: 1, scope: !13918)
!13918 = distinct !DILexicalBlock(scope: !13916, file: !303, line: 360, column: 1)
!13919 = distinct !DISubprogram(name: "z_sfnode_next_peek", scope: !303, file: !303, line: 211, type: !13920, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !13922)
!13920 = !DISubroutineType(types: !13921)
!13921 = !{!3178, !3178}
!13922 = !{!13923}
!13923 = !DILocalVariable(name: "node", arg: 1, scope: !13919, file: !303, line: 211, type: !3178)
!13924 = !DILocation(line: 0, scope: !13919)
!13925 = !DILocation(line: 213, column: 32, scope: !13919)
!13926 = !DILocation(line: 213, column: 47, scope: !13919)
!13927 = !DILocation(line: 213, column: 9, scope: !13919)
!13928 = !DILocation(line: 213, column: 2, scope: !13919)
!13929 = distinct !DISubprogram(name: "sys_sflist_append", scope: !303, file: !303, line: 373, type: !13908, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !13930)
!13930 = !{!13931, !13932}
!13931 = !DILocalVariable(name: "list", arg: 1, scope: !13929, file: !303, line: 373, type: !13601)
!13932 = !DILocalVariable(name: "node", arg: 2, scope: !13929, file: !303, line: 373, type: !3178)
!13933 = !DILocation(line: 0, scope: !13929)
!13934 = !DILocation(line: 373, column: 1, scope: !13929)
!13935 = !DILocation(line: 373, column: 1, scope: !13936)
!13936 = distinct !DILexicalBlock(scope: !13929, file: !303, line: 373, column: 1)
!13937 = !DILocation(line: 373, column: 1, scope: !13938)
!13938 = distinct !DILexicalBlock(scope: !13936, file: !303, line: 373, column: 1)
!13939 = !DILocation(line: 373, column: 1, scope: !13940)
!13940 = distinct !DILexicalBlock(scope: !13936, file: !303, line: 373, column: 1)
!13941 = distinct !DISubprogram(name: "z_sfnode_next_set", scope: !303, file: !303, line: 218, type: !13942, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !13944)
!13942 = !DISubroutineType(types: !13943)
!13943 = !{null, !3178, !3178}
!13944 = !{!13945, !13946, !13947}
!13945 = !DILocalVariable(name: "parent", arg: 1, scope: !13941, file: !303, line: 218, type: !3178)
!13946 = !DILocalVariable(name: "child", arg: 2, scope: !13941, file: !303, line: 219, type: !3178)
!13947 = !DILocalVariable(name: "cur_flags", scope: !13941, file: !303, line: 221, type: !154)
!13948 = !DILocation(line: 0, scope: !13941)
!13949 = !DILocation(line: 221, column: 22, scope: !13941)
!13950 = !DILocation(line: 223, column: 27, scope: !13941)
!13951 = !DILocation(line: 223, column: 39, scope: !13941)
!13952 = !DILocation(line: 223, column: 37, scope: !13941)
!13953 = !DILocation(line: 223, column: 10, scope: !13941)
!13954 = !DILocation(line: 223, column: 25, scope: !13941)
!13955 = !DILocation(line: 224, column: 1, scope: !13941)
!13956 = distinct !DISubprogram(name: "z_sflist_tail_set", scope: !303, file: !303, line: 231, type: !13908, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !13957)
!13957 = !{!13958, !13959}
!13958 = !DILocalVariable(name: "list", arg: 1, scope: !13956, file: !303, line: 231, type: !13601)
!13959 = !DILocalVariable(name: "node", arg: 2, scope: !13956, file: !303, line: 231, type: !3178)
!13960 = !DILocation(line: 0, scope: !13956)
!13961 = !DILocation(line: 233, column: 8, scope: !13956)
!13962 = !DILocation(line: 233, column: 13, scope: !13956)
!13963 = !DILocation(line: 234, column: 1, scope: !13956)
!13964 = distinct !DISubprogram(name: "z_sflist_head_set", scope: !303, file: !303, line: 226, type: !13908, scopeLine: 227, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !13965)
!13965 = !{!13966, !13967}
!13966 = !DILocalVariable(name: "list", arg: 1, scope: !13964, file: !303, line: 226, type: !13601)
!13967 = !DILocalVariable(name: "node", arg: 2, scope: !13964, file: !303, line: 226, type: !3178)
!13968 = !DILocation(line: 0, scope: !13964)
!13969 = !DILocation(line: 228, column: 8, scope: !13964)
!13970 = !DILocation(line: 228, column: 13, scope: !13964)
!13971 = !DILocation(line: 229, column: 1, scope: !13964)
!13972 = distinct !DISubprogram(name: "sys_sflist_peek_head", scope: !303, file: !303, line: 243, type: !13863, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !13973)
!13973 = !{!13974}
!13974 = !DILocalVariable(name: "list", arg: 1, scope: !13972, file: !303, line: 243, type: !13601)
!13975 = !DILocation(line: 0, scope: !13972)
!13976 = !DILocation(line: 245, column: 15, scope: !13972)
!13977 = !DILocation(line: 245, column: 2, scope: !13972)
!13978 = distinct !DISubprogram(name: "k_queue_append", scope: !3169, file: !3169, line: 184, type: !13979, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !13981)
!13979 = !DISubroutineType(types: !13980)
!13980 = !{null, !13573, !102}
!13981 = !{!13982, !13983}
!13982 = !DILocalVariable(name: "queue", arg: 1, scope: !13978, file: !3169, line: 184, type: !13573)
!13983 = !DILocalVariable(name: "data", arg: 2, scope: !13978, file: !3169, line: 184, type: !102)
!13984 = !DILocation(line: 0, scope: !13978)
!13985 = !DILocation(line: 188, column: 8, scope: !13978)
!13986 = !DILocation(line: 191, column: 1, scope: !13978)
!13987 = distinct !DISubprogram(name: "k_queue_prepend", scope: !3169, file: !3169, line: 193, type: !13979, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !13988)
!13988 = !{!13989, !13990}
!13989 = !DILocalVariable(name: "queue", arg: 1, scope: !13987, file: !3169, line: 193, type: !13573)
!13990 = !DILocalVariable(name: "data", arg: 2, scope: !13987, file: !3169, line: 193, type: !102)
!13991 = !DILocation(line: 0, scope: !13987)
!13992 = !DILocation(line: 197, column: 8, scope: !13987)
!13993 = !DILocation(line: 200, column: 1, scope: !13987)
!13994 = distinct !DISubprogram(name: "z_impl_k_queue_alloc_append", scope: !3169, file: !3169, line: 202, type: !13995, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !13997)
!13995 = !DISubroutineType(types: !13996)
!13996 = !{!724, !13573, !102}
!13997 = !{!13998, !13999, !14000}
!13998 = !DILocalVariable(name: "queue", arg: 1, scope: !13994, file: !3169, line: 202, type: !13573)
!13999 = !DILocalVariable(name: "data", arg: 2, scope: !13994, file: !3169, line: 202, type: !102)
!14000 = !DILocalVariable(name: "ret", scope: !13994, file: !3169, line: 206, type: !724)
!14001 = !DILocation(line: 0, scope: !13994)
!14002 = !DILocation(line: 206, column: 16, scope: !13994)
!14003 = !DILocation(line: 210, column: 2, scope: !13994)
!14004 = distinct !DISubprogram(name: "z_impl_k_queue_alloc_prepend", scope: !3169, file: !3169, line: 223, type: !13995, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !14005)
!14005 = !{!14006, !14007, !14008}
!14006 = !DILocalVariable(name: "queue", arg: 1, scope: !14004, file: !3169, line: 223, type: !13573)
!14007 = !DILocalVariable(name: "data", arg: 2, scope: !14004, file: !3169, line: 223, type: !102)
!14008 = !DILocalVariable(name: "ret", scope: !14004, file: !3169, line: 227, type: !724)
!14009 = !DILocation(line: 0, scope: !14004)
!14010 = !DILocation(line: 227, column: 16, scope: !14004)
!14011 = !DILocation(line: 231, column: 2, scope: !14004)
!14012 = distinct !DISubprogram(name: "k_queue_append_list", scope: !3169, file: !3169, line: 244, type: !14013, scopeLine: 245, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !14015)
!14013 = !DISubroutineType(types: !14014)
!14014 = !{!103, !13573, !102, !102}
!14015 = !{!14016, !14017, !14018, !14019, !14020}
!14016 = !DILocalVariable(name: "queue", arg: 1, scope: !14012, file: !3169, line: 244, type: !13573)
!14017 = !DILocalVariable(name: "head", arg: 2, scope: !14012, file: !3169, line: 244, type: !102)
!14018 = !DILocalVariable(name: "tail", arg: 3, scope: !14012, file: !3169, line: 244, type: !102)
!14019 = !DILocalVariable(name: "key", scope: !14012, file: !3169, line: 255, type: !13636)
!14020 = !DILocalVariable(name: "thread", scope: !14012, file: !3169, line: 256, type: !13641)
!14021 = !DILocation(line: 0, scope: !14012)
!14022 = !DILocation(line: 249, column: 2, scope: !14023)
!14023 = distinct !DILexicalBlock(scope: !14012, file: !3169, line: 249, column: 2)
!14024 = !DILocation(line: 255, column: 45, scope: !14012)
!14025 = !DILocation(line: 0, scope: !13722, inlinedAt: !14026)
!14026 = distinct !DILocation(line: 255, column: 25, scope: !14012)
!14027 = !DILocation(line: 55, column: 2, scope: !13731, inlinedAt: !14028)
!14028 = distinct !DILocation(line: 145, column: 10, scope: !13722, inlinedAt: !14026)
!14029 = !DILocation(line: 0, scope: !13731, inlinedAt: !14028)
!14030 = !DILocation(line: 259, column: 42, scope: !14031)
!14031 = distinct !DILexicalBlock(scope: !14032, file: !3169, line: 258, column: 20)
!14032 = distinct !DILexicalBlock(scope: !14012, file: !3169, line: 258, column: 6)
!14033 = !DILocation(line: 259, column: 12, scope: !14031)
!14034 = !DILocation(line: 262, column: 24, scope: !14012)
!14035 = !DILocation(line: 262, column: 2, scope: !14012)
!14036 = !DILocation(line: 263, column: 3, scope: !14037)
!14037 = distinct !DILexicalBlock(scope: !14012, file: !3169, line: 262, column: 45)
!14038 = !DILocation(line: 264, column: 11, scope: !14037)
!14039 = !DILocation(line: 264, column: 10, scope: !14037)
!14040 = !DILocation(line: 265, column: 12, scope: !14037)
!14041 = !DILocation(line: 262, column: 15, scope: !14012)
!14042 = distinct !{!14042, !14035, !14043}
!14043 = !DILocation(line: 266, column: 2, scope: !14012)
!14044 = !DILocation(line: 268, column: 6, scope: !14012)
!14045 = !DILocation(line: 269, column: 34, scope: !14046)
!14046 = distinct !DILexicalBlock(scope: !14047, file: !3169, line: 268, column: 20)
!14047 = distinct !DILexicalBlock(scope: !14012, file: !3169, line: 268, column: 6)
!14048 = !DILocation(line: 269, column: 3, scope: !14046)
!14049 = !DILocation(line: 270, column: 2, scope: !14046)
!14050 = !DILocation(line: 275, column: 2, scope: !14012)
!14051 = !DILocation(line: 277, column: 1, scope: !14012)
!14052 = distinct !DISubprogram(name: "sys_sflist_append_list", scope: !303, file: !303, line: 391, type: !14053, scopeLine: 391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !14055)
!14053 = !DISubroutineType(types: !14054)
!14054 = !{null, !13601, !102, !102}
!14055 = !{!14056, !14057, !14058}
!14056 = !DILocalVariable(name: "list", arg: 1, scope: !14052, file: !303, line: 391, type: !13601)
!14057 = !DILocalVariable(name: "head", arg: 2, scope: !14052, file: !303, line: 391, type: !102)
!14058 = !DILocalVariable(name: "tail", arg: 3, scope: !14052, file: !303, line: 391, type: !102)
!14059 = !DILocation(line: 0, scope: !14052)
!14060 = !DILocation(line: 391, column: 1, scope: !14061)
!14061 = distinct !DILexicalBlock(scope: !14052, file: !303, line: 391, column: 1)
!14062 = !DILocation(line: 391, column: 1, scope: !14063)
!14063 = distinct !DILexicalBlock(scope: !14064, file: !303, line: 391, column: 1)
!14064 = distinct !DILexicalBlock(scope: !14061, file: !303, line: 391, column: 1)
!14065 = !DILocation(line: 0, scope: !14063)
!14066 = !DILocation(line: 391, column: 1, scope: !14064)
!14067 = !DILocation(line: 391, column: 1, scope: !14068)
!14068 = distinct !DILexicalBlock(scope: !14063, file: !303, line: 391, column: 1)
!14069 = !DILocation(line: 391, column: 1, scope: !14070)
!14070 = distinct !DILexicalBlock(scope: !14063, file: !303, line: 391, column: 1)
!14071 = !DILocation(line: 391, column: 1, scope: !14052)
!14072 = distinct !DISubprogram(name: "k_queue_merge_slist", scope: !3169, file: !3169, line: 279, type: !14073, scopeLine: 280, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !14087)
!14073 = !DISubroutineType(types: !14074)
!14074 = !{!103, !13573, !14075}
!14075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14076, size: 32)
!14076 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1183, line: 40, baseType: !14077)
!14077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1183, line: 35, size: 64, elements: !14078)
!14078 = !{!14079, !14086}
!14079 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !14077, file: !1183, line: 36, baseType: !14080, size: 32)
!14080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14081, size: 32)
!14081 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1183, line: 33, baseType: !14082)
!14082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1183, line: 29, size: 32, elements: !14083)
!14083 = !{!14084}
!14084 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !14082, file: !1183, line: 30, baseType: !14085, size: 32)
!14085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14082, size: 32)
!14086 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !14077, file: !1183, line: 37, baseType: !14080, size: 32, offset: 32)
!14087 = !{!14088, !14089, !14090}
!14088 = !DILocalVariable(name: "queue", arg: 1, scope: !14072, file: !3169, line: 279, type: !13573)
!14089 = !DILocalVariable(name: "list", arg: 2, scope: !14072, file: !3169, line: 279, type: !14075)
!14090 = !DILocalVariable(name: "ret", scope: !14072, file: !3169, line: 281, type: !103)
!14091 = !DILocation(line: 0, scope: !14072)
!14092 = !DILocation(line: 286, column: 2, scope: !14093)
!14093 = distinct !DILexicalBlock(scope: !14072, file: !3169, line: 286, column: 2)
!14094 = !DILocation(line: 286, column: 2, scope: !14072)
!14095 = !DILocation(line: 301, column: 41, scope: !14072)
!14096 = !DILocation(line: 301, column: 53, scope: !14072)
!14097 = !DILocation(line: 301, column: 8, scope: !14072)
!14098 = !DILocation(line: 302, column: 2, scope: !14099)
!14099 = distinct !DILexicalBlock(scope: !14072, file: !3169, line: 302, column: 2)
!14100 = !DILocation(line: 302, column: 2, scope: !14072)
!14101 = !DILocation(line: 307, column: 2, scope: !14072)
!14102 = !DILocation(line: 311, column: 2, scope: !14072)
!14103 = !DILocation(line: 312, column: 1, scope: !14072)
!14104 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1183, file: !1183, line: 261, type: !14105, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !14107)
!14105 = !DISubroutineType(types: !14106)
!14106 = !{!157, !14075}
!14107 = !{!14108}
!14108 = !DILocalVariable(name: "list", arg: 1, scope: !14104, file: !1183, line: 261, type: !14075)
!14109 = !DILocation(line: 0, scope: !14104)
!14110 = !DILocation(line: 261, column: 1, scope: !14104)
!14111 = distinct !DISubprogram(name: "sys_slist_init", scope: !1183, file: !1183, line: 196, type: !14112, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !14114)
!14112 = !DISubroutineType(types: !14113)
!14113 = !{null, !14075}
!14114 = !{!14115}
!14115 = !DILocalVariable(name: "list", arg: 1, scope: !14111, file: !1183, line: 196, type: !14075)
!14116 = !DILocation(line: 0, scope: !14111)
!14117 = !DILocation(line: 198, column: 8, scope: !14111)
!14118 = !DILocation(line: 198, column: 13, scope: !14111)
!14119 = !DILocation(line: 199, column: 8, scope: !14111)
!14120 = !DILocation(line: 199, column: 13, scope: !14111)
!14121 = !DILocation(line: 200, column: 1, scope: !14111)
!14122 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1183, file: !1183, line: 231, type: !14123, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !14125)
!14123 = !DISubroutineType(types: !14124)
!14124 = !{!14080, !14075}
!14125 = !{!14126}
!14126 = !DILocalVariable(name: "list", arg: 1, scope: !14122, file: !1183, line: 231, type: !14075)
!14127 = !DILocation(line: 0, scope: !14122)
!14128 = !DILocation(line: 233, column: 15, scope: !14122)
!14129 = !DILocation(line: 233, column: 2, scope: !14122)
!14130 = distinct !DISubprogram(name: "z_impl_k_queue_get", scope: !3169, file: !3169, line: 314, type: !14131, scopeLine: 315, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !14137)
!14131 = !DISubroutineType(types: !14132)
!14132 = !{!102, !13573, !14133}
!14133 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !201, line: 67, baseType: !14134)
!14134 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 65, size: 64, elements: !14135)
!14135 = !{!14136}
!14136 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14134, file: !201, line: 66, baseType: !200, size: 64)
!14137 = !{!14138, !14139, !14140, !14141, !14142, !14145}
!14138 = !DILocalVariable(name: "queue", arg: 1, scope: !14130, file: !3169, line: 314, type: !13573)
!14139 = !DILocalVariable(name: "timeout", arg: 2, scope: !14130, file: !3169, line: 314, type: !14133)
!14140 = !DILocalVariable(name: "key", scope: !14130, file: !3169, line: 316, type: !13636)
!14141 = !DILocalVariable(name: "data", scope: !14130, file: !3169, line: 317, type: !102)
!14142 = !DILocalVariable(name: "node", scope: !14143, file: !3169, line: 322, type: !3178)
!14143 = distinct !DILexicalBlock(scope: !14144, file: !3169, line: 321, column: 52)
!14144 = distinct !DILexicalBlock(scope: !14130, file: !3169, line: 321, column: 6)
!14145 = !DILocalVariable(name: "ret", scope: !14130, file: !3169, line: 343, type: !103)
!14146 = !DILocation(line: 0, scope: !14130)
!14147 = !DILocation(line: 316, column: 45, scope: !14130)
!14148 = !DILocation(line: 0, scope: !13722, inlinedAt: !14149)
!14149 = distinct !DILocation(line: 316, column: 25, scope: !14130)
!14150 = !DILocation(line: 55, column: 2, scope: !13731, inlinedAt: !14151)
!14151 = distinct !DILocation(line: 145, column: 10, scope: !13722, inlinedAt: !14149)
!14152 = !DILocation(line: 0, scope: !13731, inlinedAt: !14151)
!14153 = !DILocation(line: 321, column: 6, scope: !14144)
!14154 = !DILocation(line: 321, column: 6, scope: !14130)
!14155 = !{!"branch_weights", i32 1, i32 2000}
!14156 = !DILocation(line: 324, column: 10, scope: !14143)
!14157 = !DILocation(line: 0, scope: !14143)
!14158 = !DILocation(line: 325, column: 10, scope: !14143)
!14159 = !DILocation(line: 0, scope: !13833, inlinedAt: !14160)
!14160 = distinct !DILocation(line: 326, column: 3, scope: !14143)
!14161 = !DILocation(line: 0, scope: !13842, inlinedAt: !14162)
!14162 = distinct !DILocation(line: 215, column: 2, scope: !13833, inlinedAt: !14160)
!14163 = !DILocation(line: 95, column: 2, scope: !13842, inlinedAt: !14162)
!14164 = !DILocation(line: 335, column: 6, scope: !14165)
!14165 = distinct !DILexicalBlock(scope: !14130, file: !3169, line: 335, column: 6)
!14166 = !DILocation(line: 335, column: 6, scope: !14130)
!14167 = !DILocation(line: 0, scope: !13833, inlinedAt: !14168)
!14168 = distinct !DILocation(line: 336, column: 3, scope: !14169)
!14169 = distinct !DILexicalBlock(scope: !14165, file: !3169, line: 335, column: 40)
!14170 = !DILocation(line: 0, scope: !13842, inlinedAt: !14171)
!14171 = distinct !DILocation(line: 215, column: 2, scope: !13833, inlinedAt: !14168)
!14172 = !DILocation(line: 95, column: 2, scope: !13842, inlinedAt: !14171)
!14173 = !DILocation(line: 340, column: 3, scope: !14169)
!14174 = !DILocation(line: 343, column: 51, scope: !14130)
!14175 = !DILocation(line: 343, column: 12, scope: !14130)
!14176 = !DILocation(line: 348, column: 14, scope: !14130)
!14177 = !DILocation(line: 348, column: 9, scope: !14130)
!14178 = !DILocation(line: 348, column: 29, scope: !14130)
!14179 = !DILocation(line: 348, column: 44, scope: !14130)
!14180 = !DILocation(line: 349, column: 1, scope: !14130)
!14181 = distinct !DISubprogram(name: "sys_sflist_is_empty", scope: !303, file: !303, line: 323, type: !14182, scopeLine: 323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !14184)
!14182 = !DISubroutineType(types: !14183)
!14183 = !{!157, !13601}
!14184 = !{!14185}
!14185 = !DILocalVariable(name: "list", arg: 1, scope: !14181, file: !303, line: 323, type: !13601)
!14186 = !DILocation(line: 0, scope: !14181)
!14187 = !DILocation(line: 323, column: 1, scope: !14181)
!14188 = distinct !DISubprogram(name: "sys_sflist_get_not_empty", scope: !303, file: !303, line: 434, type: !13863, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !14189)
!14189 = !{!14190, !14191}
!14190 = !DILocalVariable(name: "list", arg: 1, scope: !14188, file: !303, line: 434, type: !13601)
!14191 = !DILocalVariable(name: "node", scope: !14188, file: !303, line: 434, type: !3178)
!14192 = !DILocation(line: 0, scope: !14188)
!14193 = !DILocation(line: 434, column: 1, scope: !14188)
!14194 = !DILocation(line: 434, column: 1, scope: !14195)
!14195 = distinct !DILexicalBlock(scope: !14188, file: !303, line: 434, column: 1)
!14196 = !DILocation(line: 434, column: 1, scope: !14197)
!14197 = distinct !DILexicalBlock(scope: !14195, file: !303, line: 434, column: 1)
!14198 = distinct !DISubprogram(name: "k_queue_remove", scope: !3169, file: !3169, line: 351, type: !14199, scopeLine: 352, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !14201)
!14199 = !DISubroutineType(types: !14200)
!14200 = !{!157, !13573, !102}
!14201 = !{!14202, !14203, !14204}
!14202 = !DILocalVariable(name: "queue", arg: 1, scope: !14198, file: !3169, line: 351, type: !13573)
!14203 = !DILocalVariable(name: "data", arg: 2, scope: !14198, file: !3169, line: 351, type: !102)
!14204 = !DILocalVariable(name: "ret", scope: !14198, file: !3169, line: 355, type: !157)
!14205 = !DILocation(line: 0, scope: !14198)
!14206 = !DILocation(line: 355, column: 48, scope: !14198)
!14207 = !DILocation(line: 355, column: 56, scope: !14198)
!14208 = !DILocation(line: 355, column: 13, scope: !14198)
!14209 = !DILocation(line: 359, column: 2, scope: !14198)
!14210 = distinct !DISubprogram(name: "sys_sflist_find_and_remove", scope: !303, file: !303, line: 478, type: !14211, scopeLine: 478, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !14213)
!14211 = !DISubroutineType(types: !14212)
!14212 = !{!157, !13601, !3178}
!14213 = !{!14214, !14215, !14216, !14217}
!14214 = !DILocalVariable(name: "list", arg: 1, scope: !14210, file: !303, line: 478, type: !13601)
!14215 = !DILocalVariable(name: "node", arg: 2, scope: !14210, file: !303, line: 478, type: !3178)
!14216 = !DILocalVariable(name: "prev", scope: !14210, file: !303, line: 478, type: !3178)
!14217 = !DILocalVariable(name: "test", scope: !14210, file: !303, line: 478, type: !3178)
!14218 = !DILocation(line: 0, scope: !14210)
!14219 = !DILocation(line: 478, column: 1, scope: !14220)
!14220 = distinct !DILexicalBlock(scope: !14210, file: !303, line: 478, column: 1)
!14221 = !DILocation(line: 478, column: 1, scope: !14222)
!14222 = distinct !DILexicalBlock(scope: !14220, file: !303, line: 478, column: 1)
!14223 = !DILocation(line: 478, column: 1, scope: !14224)
!14224 = distinct !DILexicalBlock(scope: !14225, file: !303, line: 478, column: 1)
!14225 = distinct !DILexicalBlock(scope: !14222, file: !303, line: 478, column: 1)
!14226 = !DILocation(line: 478, column: 1, scope: !14225)
!14227 = distinct !{!14227, !14219, !14219}
!14228 = !DILocation(line: 478, column: 1, scope: !14229)
!14229 = distinct !DILexicalBlock(scope: !14224, file: !303, line: 478, column: 1)
!14230 = !DILocation(line: 478, column: 1, scope: !14210)
!14231 = distinct !DISubprogram(name: "sys_sflist_remove", scope: !303, file: !303, line: 463, type: !13889, scopeLine: 463, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !14232)
!14232 = !{!14233, !14234, !14235}
!14233 = !DILocalVariable(name: "list", arg: 1, scope: !14231, file: !303, line: 463, type: !13601)
!14234 = !DILocalVariable(name: "prev_node", arg: 2, scope: !14231, file: !303, line: 463, type: !3178)
!14235 = !DILocalVariable(name: "node", arg: 3, scope: !14231, file: !303, line: 463, type: !3178)
!14236 = !DILocation(line: 0, scope: !14231)
!14237 = !DILocation(line: 463, column: 1, scope: !14238)
!14238 = distinct !DILexicalBlock(scope: !14231, file: !303, line: 463, column: 1)
!14239 = !DILocation(line: 0, scope: !14238)
!14240 = !DILocation(line: 463, column: 1, scope: !14231)
!14241 = !DILocation(line: 463, column: 1, scope: !14242)
!14242 = distinct !DILexicalBlock(scope: !14238, file: !303, line: 463, column: 1)
!14243 = !DILocation(line: 463, column: 1, scope: !14244)
!14244 = distinct !DILexicalBlock(scope: !14242, file: !303, line: 463, column: 1)
!14245 = !DILocation(line: 463, column: 1, scope: !14246)
!14246 = distinct !DILexicalBlock(scope: !14244, file: !303, line: 463, column: 1)
!14247 = !DILocation(line: 463, column: 1, scope: !14248)
!14248 = distinct !DILexicalBlock(scope: !14238, file: !303, line: 463, column: 1)
!14249 = !DILocation(line: 463, column: 1, scope: !14250)
!14250 = distinct !DILexicalBlock(scope: !14248, file: !303, line: 463, column: 1)
!14251 = !DILocation(line: 463, column: 1, scope: !14252)
!14252 = distinct !DILexicalBlock(scope: !14250, file: !303, line: 463, column: 1)
!14253 = distinct !DISubprogram(name: "sys_sflist_peek_next", scope: !303, file: !303, line: 347, type: !13920, scopeLine: 347, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !14254)
!14254 = !{!14255}
!14255 = !DILocalVariable(name: "node", arg: 1, scope: !14253, file: !303, line: 347, type: !3178)
!14256 = !DILocation(line: 0, scope: !14253)
!14257 = !DILocation(line: 347, column: 1, scope: !14253)
!14258 = distinct !DISubprogram(name: "sys_sflist_peek_next_no_check", scope: !303, file: !303, line: 336, type: !13920, scopeLine: 336, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !14259)
!14259 = !{!14260}
!14260 = !DILocalVariable(name: "node", arg: 1, scope: !14258, file: !303, line: 336, type: !3178)
!14261 = !DILocation(line: 0, scope: !14258)
!14262 = !DILocation(line: 336, column: 1, scope: !14258)
!14263 = distinct !DISubprogram(name: "k_queue_unique_append", scope: !3169, file: !3169, line: 362, type: !14199, scopeLine: 363, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !14264)
!14264 = !{!14265, !14266, !14267}
!14265 = !DILocalVariable(name: "queue", arg: 1, scope: !14263, file: !3169, line: 362, type: !13573)
!14266 = !DILocalVariable(name: "data", arg: 2, scope: !14263, file: !3169, line: 362, type: !102)
!14267 = !DILocalVariable(name: "test", scope: !14263, file: !3169, line: 366, type: !3178)
!14268 = !DILocation(line: 0, scope: !14263)
!14269 = !DILocation(line: 368, column: 2, scope: !14270)
!14270 = distinct !DILexicalBlock(scope: !14263, file: !3169, line: 368, column: 2)
!14271 = !DILocation(line: 368, column: 2, scope: !14272)
!14272 = distinct !DILexicalBlock(scope: !14270, file: !3169, line: 368, column: 2)
!14273 = !DILocation(line: 369, column: 12, scope: !14274)
!14274 = distinct !DILexicalBlock(scope: !14275, file: !3169, line: 369, column: 7)
!14275 = distinct !DILexicalBlock(scope: !14272, file: !3169, line: 368, column: 49)
!14276 = !DILocation(line: 369, column: 7, scope: !14275)
!14277 = distinct !{!14277, !14269, !14278}
!14278 = !DILocation(line: 374, column: 2, scope: !14270)
!14279 = !DILocation(line: 376, column: 2, scope: !14263)
!14280 = !DILocation(line: 380, column: 2, scope: !14263)
!14281 = !DILocation(line: 381, column: 1, scope: !14263)
!14282 = distinct !DISubprogram(name: "z_impl_k_queue_peek_head", scope: !3169, file: !3169, line: 383, type: !14283, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !14285)
!14283 = !DISubroutineType(types: !14284)
!14284 = !{!102, !13573}
!14285 = !{!14286, !14287}
!14286 = !DILocalVariable(name: "queue", arg: 1, scope: !14282, file: !3169, line: 383, type: !13573)
!14287 = !DILocalVariable(name: "ret", scope: !14282, file: !3169, line: 385, type: !102)
!14288 = !DILocation(line: 0, scope: !14282)
!14289 = !DILocation(line: 385, column: 61, scope: !14282)
!14290 = !DILocation(line: 385, column: 32, scope: !14282)
!14291 = !DILocation(line: 385, column: 14, scope: !14282)
!14292 = !DILocation(line: 389, column: 2, scope: !14282)
!14293 = distinct !DISubprogram(name: "z_impl_k_queue_peek_tail", scope: !3169, file: !3169, line: 392, type: !14283, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !14294)
!14294 = !{!14295, !14296}
!14295 = !DILocalVariable(name: "queue", arg: 1, scope: !14293, file: !3169, line: 392, type: !13573)
!14296 = !DILocalVariable(name: "ret", scope: !14293, file: !3169, line: 394, type: !102)
!14297 = !DILocation(line: 0, scope: !14293)
!14298 = !DILocation(line: 394, column: 61, scope: !14293)
!14299 = !DILocation(line: 394, column: 32, scope: !14293)
!14300 = !DILocation(line: 394, column: 14, scope: !14293)
!14301 = !DILocation(line: 398, column: 2, scope: !14293)
!14302 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2476, file: !2476, line: 93, type: !14303, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !14305)
!14303 = !DISubroutineType(types: !14304)
!14304 = !{!724, !2371, !2371}
!14305 = !{!14306, !14307, !14308, !14309}
!14306 = !DILocalVariable(name: "thread_1", arg: 1, scope: !14302, file: !2476, line: 93, type: !2371)
!14307 = !DILocalVariable(name: "thread_2", arg: 2, scope: !14302, file: !2476, line: 94, type: !2371)
!14308 = !DILocalVariable(name: "b1", scope: !14302, file: !2476, line: 97, type: !724)
!14309 = !DILocalVariable(name: "b2", scope: !14302, file: !2476, line: 98, type: !724)
!14310 = !DILocation(line: 0, scope: !14302)
!14311 = !DILocation(line: 97, column: 30, scope: !14302)
!14312 = !DILocation(line: 98, column: 30, scope: !14302)
!14313 = !DILocation(line: 100, column: 9, scope: !14314)
!14314 = distinct !DILexicalBlock(scope: !14302, file: !2476, line: 100, column: 6)
!14315 = !DILocation(line: 100, column: 6, scope: !14302)
!14316 = !DILocation(line: 125, column: 1, scope: !14302)
!14317 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2476, file: !2476, line: 428, type: !14318, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !14320)
!14318 = !DISubroutineType(types: !14319)
!14319 = !{null, !2371}
!14320 = !{!14321}
!14321 = !DILocalVariable(name: "curr", arg: 1, scope: !14317, file: !2476, line: 428, type: !2371)
!14322 = !DILocation(line: 0, scope: !14317)
!14323 = !DILocation(line: 434, column: 6, scope: !14324)
!14324 = distinct !DILexicalBlock(scope: !14317, file: !2476, line: 434, column: 6)
!14325 = !DILocation(line: 434, column: 23, scope: !14324)
!14326 = !DILocation(line: 434, column: 6, scope: !14317)
!14327 = !DILocation(line: 435, column: 50, scope: !14328)
!14328 = distinct !DILexicalBlock(scope: !14324, file: !2476, line: 434, column: 29)
!14329 = !DILocation(line: 435, column: 48, scope: !14328)
!14330 = !DILocation(line: 435, column: 29, scope: !14328)
!14331 = !DILocation(line: 436, column: 24, scope: !14328)
!14332 = !DILocation(line: 436, column: 3, scope: !14328)
!14333 = !DILocation(line: 437, column: 2, scope: !14328)
!14334 = !DILocation(line: 438, column: 1, scope: !14317)
!14335 = distinct !DISubprogram(name: "slice_time", scope: !2476, file: !2476, line: 407, type: !14336, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !14338)
!14336 = !DISubroutineType(types: !14337)
!14337 = !{!103, !2371}
!14338 = !{!14339, !14340}
!14339 = !DILocalVariable(name: "curr", arg: 1, scope: !14335, file: !2476, line: 407, type: !2371)
!14340 = !DILocalVariable(name: "ret", scope: !14335, file: !2476, line: 409, type: !103)
!14341 = !DILocation(line: 0, scope: !14335)
!14342 = !DILocation(line: 409, column: 12, scope: !14335)
!14343 = !DILocation(line: 416, column: 2, scope: !14335)
!14344 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2476, file: !2476, line: 440, type: !14345, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !14347)
!14345 = !DISubroutineType(types: !14346)
!14346 = !{null, !724, !103}
!14347 = !{!14348, !14349, !14350, !14356}
!14348 = !DILocalVariable(name: "slice", arg: 1, scope: !14344, file: !2476, line: 440, type: !724)
!14349 = !DILocalVariable(name: "prio", arg: 2, scope: !14344, file: !2476, line: 440, type: !103)
!14350 = !DILocalVariable(name: "__i", scope: !14351, file: !2476, line: 442, type: !14352)
!14351 = distinct !DILexicalBlock(scope: !14344, file: !2476, line: 442, column: 2)
!14352 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !316, line: 106, baseType: !14353)
!14353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !316, line: 32, size: 32, elements: !14354)
!14354 = !{!14355}
!14355 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14353, file: !316, line: 33, baseType: !103, size: 32)
!14356 = !DILocalVariable(name: "__key", scope: !14351, file: !2476, line: 442, type: !14352)
!14357 = !DILocation(line: 0, scope: !14344)
!14358 = !DILocation(line: 0, scope: !14351)
!14359 = !DILocalVariable(name: "l", arg: 1, scope: !14360, file: !316, line: 136, type: !14363)
!14360 = distinct !DISubprogram(name: "k_spin_lock", scope: !316, file: !316, line: 136, type: !14361, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !14364)
!14361 = !DISubroutineType(types: !14362)
!14362 = !{!14352, !14363}
!14363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2465, size: 32)
!14364 = !{!14359, !14365}
!14365 = !DILocalVariable(name: "k", scope: !14360, file: !316, line: 139, type: !14352)
!14366 = !DILocation(line: 0, scope: !14360, inlinedAt: !14367)
!14367 = distinct !DILocation(line: 442, column: 2, scope: !14351)
!14368 = !DILocation(line: 55, column: 2, scope: !14369, inlinedAt: !14373)
!14369 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5768, file: !5768, line: 42, type: !5769, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !14370)
!14370 = !{!14371, !14372}
!14371 = !DILocalVariable(name: "key", scope: !14369, file: !5768, line: 44, type: !32)
!14372 = !DILocalVariable(name: "tmp", scope: !14369, file: !5768, line: 53, type: !32)
!14373 = distinct !DILocation(line: 145, column: 10, scope: !14360, inlinedAt: !14367)
!14374 = !{i64 2081147}
!14375 = !DILocation(line: 0, scope: !14369, inlinedAt: !14373)
!14376 = !DILocation(line: 443, column: 29, scope: !14377)
!14377 = distinct !DILexicalBlock(scope: !14378, file: !2476, line: 442, column: 26)
!14378 = distinct !DILexicalBlock(scope: !14351, file: !2476, line: 442, column: 2)
!14379 = !DILocation(line: 444, column: 17, scope: !14377)
!14380 = !DILocation(line: 445, column: 51, scope: !14381)
!14381 = distinct !DILexicalBlock(scope: !14377, file: !2476, line: 445, column: 7)
!14382 = !DILocation(line: 445, column: 7, scope: !14377)
!14383 = !DILocation(line: 0, scope: !14377)
!14384 = !DILocation(line: 451, column: 18, scope: !14377)
!14385 = !DILocation(line: 452, column: 3, scope: !14377)
!14386 = !DILocalVariable(name: "key", arg: 2, scope: !14387, file: !316, line: 190, type: !14352)
!14387 = distinct !DISubprogram(name: "k_spin_unlock", scope: !316, file: !316, line: 189, type: !14388, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !14390)
!14388 = !DISubroutineType(types: !14389)
!14389 = !{null, !14363, !14352}
!14390 = !{!14391, !14386}
!14391 = !DILocalVariable(name: "l", arg: 1, scope: !14387, file: !316, line: 189, type: !14363)
!14392 = !DILocation(line: 0, scope: !14387, inlinedAt: !14393)
!14393 = distinct !DILocation(line: 442, column: 2, scope: !14378)
!14394 = !DILocalVariable(name: "key", arg: 1, scope: !14395, file: !5768, line: 84, type: !32)
!14395 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5768, file: !5768, line: 84, type: !5779, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !14396)
!14396 = !{!14394}
!14397 = !DILocation(line: 0, scope: !14395, inlinedAt: !14398)
!14398 = distinct !DILocation(line: 215, column: 2, scope: !14387, inlinedAt: !14393)
!14399 = !DILocation(line: 95, column: 2, scope: !14395, inlinedAt: !14398)
!14400 = !{i64 2081964}
!14401 = !DILocation(line: 454, column: 1, scope: !14344)
!14402 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !13424, file: !13424, line: 389, type: !6990, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !14403)
!14403 = !{!14404}
!14404 = !DILocalVariable(name: "t", arg: 1, scope: !14402, file: !13424, line: 389, type: !121)
!14405 = !DILocation(line: 0, scope: !14402)
!14406 = !DILocalVariable(name: "t", arg: 1, scope: !14407, file: !13424, line: 102, type: !1578)
!14407 = distinct !DISubprogram(name: "z_tmcvt", scope: !13424, file: !13424, line: 102, type: !13432, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !14408)
!14408 = !{!14406, !14409, !14410, !14411, !14412, !14413, !14414, !14415, !14416, !14417, !14418}
!14409 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14407, file: !13424, line: 102, type: !121)
!14410 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14407, file: !13424, line: 103, type: !121)
!14411 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14407, file: !13424, line: 103, type: !157)
!14412 = !DILocalVariable(name: "result32", arg: 5, scope: !14407, file: !13424, line: 104, type: !157)
!14413 = !DILocalVariable(name: "round_up", arg: 6, scope: !14407, file: !13424, line: 104, type: !157)
!14414 = !DILocalVariable(name: "round_off", arg: 7, scope: !14407, file: !13424, line: 105, type: !157)
!14415 = !DILocalVariable(name: "mul_ratio", scope: !14407, file: !13424, line: 107, type: !157)
!14416 = !DILocalVariable(name: "div_ratio", scope: !14407, file: !13424, line: 109, type: !157)
!14417 = !DILocalVariable(name: "off", scope: !14407, file: !13424, line: 116, type: !1578)
!14418 = !DILocalVariable(name: "rdivisor", scope: !14419, file: !13424, line: 119, type: !121)
!14419 = distinct !DILexicalBlock(scope: !14420, file: !13424, line: 118, column: 18)
!14420 = distinct !DILexicalBlock(scope: !14407, file: !13424, line: 118, column: 6)
!14421 = !DILocation(line: 0, scope: !14407, inlinedAt: !14422)
!14422 = distinct !DILocation(line: 392, column: 9, scope: !14402)
!14423 = !DILocation(line: 143, column: 25, scope: !14424, inlinedAt: !14422)
!14424 = distinct !DILexicalBlock(scope: !14425, file: !13424, line: 142, column: 17)
!14425 = distinct !DILexicalBlock(scope: !14426, file: !13424, line: 142, column: 7)
!14426 = distinct !DILexicalBlock(scope: !14427, file: !13424, line: 141, column: 24)
!14427 = distinct !DILexicalBlock(scope: !14428, file: !13424, line: 141, column: 13)
!14428 = distinct !DILexicalBlock(scope: !14407, file: !13424, line: 134, column: 6)
!14429 = !DILocation(line: 392, column: 2, scope: !14402)
!14430 = distinct !DISubprogram(name: "z_time_slice", scope: !2476, file: !2476, line: 502, type: !7627, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !14431)
!14431 = !{!14432, !14433}
!14432 = !DILocalVariable(name: "ticks", arg: 1, scope: !14430, file: !2476, line: 502, type: !103)
!14433 = !DILocalVariable(name: "key", scope: !14430, file: !2476, line: 511, type: !14352)
!14434 = !DILocation(line: 0, scope: !14430)
!14435 = !DILocation(line: 0, scope: !14360, inlinedAt: !14436)
!14436 = distinct !DILocation(line: 511, column: 25, scope: !14430)
!14437 = !DILocation(line: 55, column: 2, scope: !14369, inlinedAt: !14438)
!14438 = distinct !DILocation(line: 145, column: 10, scope: !14360, inlinedAt: !14436)
!14439 = !DILocation(line: 0, scope: !14369, inlinedAt: !14438)
!14440 = !DILocation(line: 514, column: 6, scope: !14441)
!14441 = distinct !DILexicalBlock(scope: !14430, file: !2476, line: 514, column: 6)
!14442 = !DILocation(line: 514, column: 25, scope: !14441)
!14443 = !DILocation(line: 514, column: 22, scope: !14441)
!14444 = !DILocation(line: 514, column: 6, scope: !14430)
!14445 = !DILocation(line: 515, column: 3, scope: !14446)
!14446 = distinct !DILexicalBlock(scope: !14441, file: !2476, line: 514, column: 35)
!14447 = !DILocation(line: 0, scope: !14387, inlinedAt: !14448)
!14448 = distinct !DILocation(line: 516, column: 3, scope: !14446)
!14449 = !DILocation(line: 0, scope: !14395, inlinedAt: !14450)
!14450 = distinct !DILocation(line: 215, column: 2, scope: !14387, inlinedAt: !14448)
!14451 = !DILocation(line: 95, column: 2, scope: !14395, inlinedAt: !14450)
!14452 = !DILocation(line: 517, column: 3, scope: !14446)
!14453 = !DILocation(line: 519, column: 18, scope: !14430)
!14454 = !DILocation(line: 522, column: 6, scope: !14455)
!14455 = distinct !DILexicalBlock(scope: !14430, file: !2476, line: 522, column: 6)
!14456 = !DILocation(line: 522, column: 27, scope: !14455)
!14457 = !DILocation(line: 522, column: 30, scope: !14455)
!14458 = !DILocation(line: 522, column: 6, scope: !14430)
!14459 = !DILocation(line: 523, column: 30, scope: !14460)
!14460 = distinct !DILexicalBlock(scope: !14461, file: !2476, line: 523, column: 7)
!14461 = distinct !DILexicalBlock(scope: !14455, file: !2476, line: 522, column: 51)
!14462 = !DILocation(line: 523, column: 13, scope: !14460)
!14463 = !DILocation(line: 523, column: 7, scope: !14461)
!14464 = !DILocation(line: 530, column: 10, scope: !14465)
!14465 = distinct !DILexicalBlock(scope: !14460, file: !2476, line: 523, column: 43)
!14466 = !DILocation(line: 531, column: 3, scope: !14465)
!14467 = !DILocation(line: 532, column: 30, scope: !14468)
!14468 = distinct !DILexicalBlock(scope: !14460, file: !2476, line: 531, column: 10)
!14469 = !DILocation(line: 535, column: 29, scope: !14470)
!14470 = distinct !DILexicalBlock(scope: !14455, file: !2476, line: 534, column: 9)
!14471 = !DILocation(line: 0, scope: !14387, inlinedAt: !14472)
!14472 = distinct !DILocation(line: 537, column: 2, scope: !14430)
!14473 = !DILocation(line: 0, scope: !14395, inlinedAt: !14474)
!14474 = distinct !DILocation(line: 215, column: 2, scope: !14387, inlinedAt: !14472)
!14475 = !DILocation(line: 95, column: 2, scope: !14395, inlinedAt: !14474)
!14476 = !DILocation(line: 538, column: 1, scope: !14430)
!14477 = distinct !DISubprogram(name: "sliceable", scope: !2476, file: !2476, line: 468, type: !14478, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !14480)
!14478 = !DISubroutineType(types: !14479)
!14479 = !{!157, !2371}
!14480 = !{!14481, !14482}
!14481 = !DILocalVariable(name: "thread", arg: 1, scope: !14477, file: !2476, line: 468, type: !2371)
!14482 = !DILocalVariable(name: "ret", scope: !14477, file: !2476, line: 470, type: !157)
!14483 = !DILocation(line: 0, scope: !14477)
!14484 = !DILocation(line: 470, column: 13, scope: !14477)
!14485 = !DILocation(line: 471, column: 3, scope: !14477)
!14486 = !DILocation(line: 471, column: 7, scope: !14477)
!14487 = !DILocation(line: 472, column: 3, scope: !14477)
!14488 = !DILocation(line: 472, column: 37, scope: !14477)
!14489 = !DILocation(line: 472, column: 24, scope: !14477)
!14490 = !DILocation(line: 472, column: 43, scope: !14477)
!14491 = !DILocation(line: 472, column: 7, scope: !14477)
!14492 = !DILocation(line: 473, column: 3, scope: !14477)
!14493 = !DILocation(line: 473, column: 7, scope: !14477)
!14494 = !DILocation(line: 473, column: 6, scope: !14477)
!14495 = !DILocation(line: 479, column: 2, scope: !14477)
!14496 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2476, file: !2476, line: 482, type: !14497, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !14499)
!14497 = !DISubroutineType(types: !14498)
!14498 = !{!14352, !14352}
!14499 = !{!14500, !14501}
!14500 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !14496, file: !2476, line: 482, type: !14352)
!14501 = !DILocalVariable(name: "curr", scope: !14496, file: !2476, line: 484, type: !2371)
!14502 = !DILocation(line: 0, scope: !14496)
!14503 = !DILocation(line: 484, column: 26, scope: !14496)
!14504 = !DILocation(line: 493, column: 7, scope: !14505)
!14505 = distinct !DILexicalBlock(scope: !14496, file: !2476, line: 493, column: 6)
!14506 = !DILocation(line: 493, column: 6, scope: !14496)
!14507 = !DILocation(line: 494, column: 3, scope: !14508)
!14508 = distinct !DILexicalBlock(scope: !14505, file: !2476, line: 493, column: 49)
!14509 = !DILocation(line: 495, column: 2, scope: !14508)
!14510 = !DILocation(line: 496, column: 2, scope: !14496)
!14511 = !DILocation(line: 499, column: 1, scope: !14496)
!14512 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !12865, file: !12865, line: 106, type: !14478, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !14513)
!14513 = !{!14514, !14515}
!14514 = !DILocalVariable(name: "thread", arg: 1, scope: !14512, file: !12865, line: 106, type: !2371)
!14515 = !DILocalVariable(name: "state", scope: !14512, file: !12865, line: 108, type: !154)
!14516 = !DILocation(line: 0, scope: !14512)
!14517 = !DILocation(line: 108, column: 31, scope: !14512)
!14518 = !DILocation(line: 110, column: 16, scope: !14512)
!14519 = !DILocation(line: 111, column: 41, scope: !14512)
!14520 = !DILocation(line: 110, column: 2, scope: !14512)
!14521 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2476, file: !2476, line: 393, type: !14318, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !14522)
!14522 = !{!14523}
!14523 = !DILocalVariable(name: "thread", arg: 1, scope: !14521, file: !2476, line: 393, type: !2371)
!14524 = !DILocation(line: 0, scope: !14521)
!14525 = !DILocation(line: 395, column: 6, scope: !14526)
!14526 = distinct !DILexicalBlock(scope: !14521, file: !2476, line: 395, column: 6)
!14527 = !DILocation(line: 395, column: 6, scope: !14521)
!14528 = !DILocalVariable(name: "thread", arg: 1, scope: !14529, file: !2476, line: 264, type: !2371)
!14529 = distinct !DISubprogram(name: "dequeue_thread", scope: !2476, file: !2476, line: 264, type: !14318, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !14530)
!14530 = !{!14528}
!14531 = !DILocation(line: 0, scope: !14529, inlinedAt: !14532)
!14532 = distinct !DILocation(line: 396, column: 3, scope: !14533)
!14533 = distinct !DILexicalBlock(scope: !14526, file: !2476, line: 395, column: 34)
!14534 = !DILocation(line: 266, column: 15, scope: !14529, inlinedAt: !14532)
!14535 = !DILocation(line: 266, column: 28, scope: !14529, inlinedAt: !14532)
!14536 = !DILocalVariable(name: "thread", arg: 1, scope: !14537, file: !2476, line: 232, type: !2371)
!14537 = distinct !DISubprogram(name: "runq_remove", scope: !2476, file: !2476, line: 232, type: !14318, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !14538)
!14538 = !{!14536}
!14539 = !DILocation(line: 0, scope: !14537, inlinedAt: !14540)
!14540 = distinct !DILocation(line: 268, column: 3, scope: !14541, inlinedAt: !14532)
!14541 = distinct !DILexicalBlock(scope: !14542, file: !2476, line: 267, column: 35)
!14542 = distinct !DILexicalBlock(scope: !14529, file: !2476, line: 267, column: 6)
!14543 = !DILocation(line: 234, column: 2, scope: !14537, inlinedAt: !14540)
!14544 = !DILocation(line: 397, column: 2, scope: !14533)
!14545 = !DILocalVariable(name: "thread", arg: 1, scope: !14546, file: !2476, line: 250, type: !2371)
!14546 = distinct !DISubprogram(name: "queue_thread", scope: !2476, file: !2476, line: 250, type: !14318, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !14547)
!14547 = !{!14545}
!14548 = !DILocation(line: 0, scope: !14546, inlinedAt: !14549)
!14549 = distinct !DILocation(line: 398, column: 2, scope: !14521)
!14550 = !DILocation(line: 252, column: 15, scope: !14546, inlinedAt: !14549)
!14551 = !DILocation(line: 252, column: 28, scope: !14546, inlinedAt: !14549)
!14552 = !DILocalVariable(name: "thread", arg: 1, scope: !14553, file: !2476, line: 227, type: !2371)
!14553 = distinct !DISubprogram(name: "runq_add", scope: !2476, file: !2476, line: 227, type: !14318, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !14554)
!14554 = !{!14552}
!14555 = !DILocation(line: 0, scope: !14553, inlinedAt: !14556)
!14556 = distinct !DILocation(line: 254, column: 3, scope: !14557, inlinedAt: !14549)
!14557 = distinct !DILexicalBlock(scope: !14558, file: !2476, line: 253, column: 35)
!14558 = distinct !DILexicalBlock(scope: !14546, file: !2476, line: 253, column: 6)
!14559 = !DILocalVariable(name: "pq", arg: 1, scope: !14560, file: !2476, line: 181, type: !14563)
!14560 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2476, file: !2476, line: 181, type: !14561, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !14564)
!14561 = !DISubroutineType(types: !14562)
!14562 = !{null, !14563, !2371}
!14563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2407, size: 32)
!14564 = !{!14559, !14565, !14566}
!14565 = !DILocalVariable(name: "thread", arg: 2, scope: !14560, file: !2476, line: 182, type: !2371)
!14566 = !DILocalVariable(name: "t", scope: !14560, file: !2476, line: 184, type: !2371)
!14567 = !DILocation(line: 0, scope: !14560, inlinedAt: !14568)
!14568 = distinct !DILocation(line: 229, column: 2, scope: !14553, inlinedAt: !14556)
!14569 = !DILocation(line: 188, column: 2, scope: !14570, inlinedAt: !14568)
!14570 = distinct !DILexicalBlock(scope: !14560, file: !2476, line: 188, column: 2)
!14571 = !DILocation(line: 188, column: 2, scope: !14572, inlinedAt: !14568)
!14572 = distinct !DILexicalBlock(scope: !14570, file: !2476, line: 188, column: 2)
!14573 = !DILocation(line: 0, scope: !14570, inlinedAt: !14568)
!14574 = !DILocation(line: 189, column: 7, scope: !14575, inlinedAt: !14568)
!14575 = distinct !DILexicalBlock(scope: !14576, file: !2476, line: 189, column: 7)
!14576 = distinct !DILexicalBlock(scope: !14572, file: !2476, line: 188, column: 56)
!14577 = !DILocation(line: 189, column: 35, scope: !14575, inlinedAt: !14568)
!14578 = !DILocation(line: 189, column: 7, scope: !14576, inlinedAt: !14568)
!14579 = !DILocation(line: 191, column: 21, scope: !14580, inlinedAt: !14568)
!14580 = distinct !DILexicalBlock(scope: !14575, file: !2476, line: 189, column: 40)
!14581 = !DILocation(line: 190, column: 4, scope: !14580, inlinedAt: !14568)
!14582 = !DILocation(line: 192, column: 4, scope: !14580, inlinedAt: !14568)
!14583 = distinct !{!14583, !14569, !14584}
!14584 = !DILocation(line: 194, column: 2, scope: !14570, inlinedAt: !14568)
!14585 = !DILocation(line: 196, column: 37, scope: !14560, inlinedAt: !14568)
!14586 = !DILocation(line: 196, column: 2, scope: !14560, inlinedAt: !14568)
!14587 = !DILocation(line: 197, column: 1, scope: !14560, inlinedAt: !14568)
!14588 = !DILocation(line: 399, column: 25, scope: !14521)
!14589 = !DILocation(line: 399, column: 22, scope: !14521)
!14590 = !DILocation(line: 399, column: 2, scope: !14521)
!14591 = !DILocation(line: 400, column: 1, scope: !14521)
!14592 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !12865, file: !12865, line: 136, type: !14478, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !14593)
!14593 = !{!14594}
!14594 = !DILocalVariable(name: "thread", arg: 1, scope: !14592, file: !12865, line: 136, type: !2371)
!14595 = !DILocation(line: 0, scope: !14592)
!14596 = !DILocation(line: 138, column: 9, scope: !14592)
!14597 = !DILocation(line: 138, column: 2, scope: !14592)
!14598 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2476, file: !2476, line: 1137, type: !14561, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !14599)
!14599 = !{!14600, !14601}
!14600 = !DILocalVariable(name: "pq", arg: 1, scope: !14598, file: !2476, line: 1137, type: !14563)
!14601 = !DILocalVariable(name: "thread", arg: 2, scope: !14598, file: !2476, line: 1137, type: !2371)
!14602 = !DILocation(line: 0, scope: !14598)
!14603 = !DILocation(line: 1141, column: 33, scope: !14598)
!14604 = !DILocation(line: 1141, column: 2, scope: !14598)
!14605 = !DILocation(line: 1142, column: 1, scope: !14598)
!14606 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !325, file: !325, line: 294, type: !14607, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !14609)
!14607 = !DISubroutineType(types: !14608)
!14608 = !{!2472, !14563}
!14609 = !{!14610}
!14610 = !DILocalVariable(name: "list", arg: 1, scope: !14606, file: !325, line: 294, type: !14563)
!14611 = !DILocation(line: 0, scope: !14606)
!14612 = !DILocation(line: 296, column: 9, scope: !14606)
!14613 = !DILocation(line: 296, column: 49, scope: !14606)
!14614 = !DILocation(line: 296, column: 2, scope: !14606)
!14615 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !325, file: !325, line: 443, type: !14616, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !14618)
!14616 = !DISubroutineType(types: !14617)
!14617 = !{null, !2472, !2472}
!14618 = !{!14619, !14620, !14621}
!14619 = !DILocalVariable(name: "successor", arg: 1, scope: !14615, file: !325, line: 443, type: !2472)
!14620 = !DILocalVariable(name: "node", arg: 2, scope: !14615, file: !325, line: 443, type: !2472)
!14621 = !DILocalVariable(name: "prev", scope: !14615, file: !325, line: 445, type: !14622)
!14622 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2472)
!14623 = !DILocation(line: 0, scope: !14615)
!14624 = !DILocation(line: 445, column: 39, scope: !14615)
!14625 = !DILocation(line: 447, column: 8, scope: !14615)
!14626 = !DILocation(line: 447, column: 13, scope: !14615)
!14627 = !DILocation(line: 448, column: 8, scope: !14615)
!14628 = !DILocation(line: 448, column: 13, scope: !14615)
!14629 = !DILocation(line: 449, column: 8, scope: !14615)
!14630 = !DILocation(line: 449, column: 13, scope: !14615)
!14631 = !DILocation(line: 450, column: 18, scope: !14615)
!14632 = !DILocation(line: 451, column: 1, scope: !14615)
!14633 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !325, file: !325, line: 341, type: !14634, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !14636)
!14634 = !DISubroutineType(types: !14635)
!14635 = !{!2472, !14563, !2472}
!14636 = !{!14637, !14638}
!14637 = !DILocalVariable(name: "list", arg: 1, scope: !14633, file: !325, line: 341, type: !14563)
!14638 = !DILocalVariable(name: "node", arg: 2, scope: !14633, file: !325, line: 342, type: !2472)
!14639 = !DILocation(line: 0, scope: !14633)
!14640 = !DILocation(line: 344, column: 15, scope: !14633)
!14641 = !DILocation(line: 344, column: 9, scope: !14633)
!14642 = !DILocation(line: 344, column: 26, scope: !14633)
!14643 = !DILocation(line: 344, column: 2, scope: !14633)
!14644 = distinct !DISubprogram(name: "sys_dlist_append", scope: !325, file: !325, line: 404, type: !14645, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !14647)
!14645 = !DISubroutineType(types: !14646)
!14646 = !{null, !14563, !2472}
!14647 = !{!14648, !14649, !14650}
!14648 = !DILocalVariable(name: "list", arg: 1, scope: !14644, file: !325, line: 404, type: !14563)
!14649 = !DILocalVariable(name: "node", arg: 2, scope: !14644, file: !325, line: 404, type: !2472)
!14650 = !DILocalVariable(name: "tail", scope: !14644, file: !325, line: 406, type: !14622)
!14651 = !DILocation(line: 0, scope: !14644)
!14652 = !DILocation(line: 406, column: 34, scope: !14644)
!14653 = !DILocation(line: 408, column: 8, scope: !14644)
!14654 = !DILocation(line: 408, column: 13, scope: !14644)
!14655 = !DILocation(line: 409, column: 8, scope: !14644)
!14656 = !DILocation(line: 409, column: 13, scope: !14644)
!14657 = !DILocation(line: 411, column: 8, scope: !14644)
!14658 = !DILocation(line: 411, column: 13, scope: !14644)
!14659 = !DILocation(line: 412, column: 13, scope: !14644)
!14660 = !DILocation(line: 413, column: 1, scope: !14644)
!14661 = distinct !DISubprogram(name: "update_cache", scope: !2476, file: !2476, line: 559, type: !7627, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !14662)
!14662 = !{!14663, !14664}
!14663 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !14661, file: !2476, line: 559, type: !103)
!14664 = !DILocalVariable(name: "thread", scope: !14661, file: !2476, line: 562, type: !2371)
!14665 = !DILocation(line: 0, scope: !14661)
!14666 = !DILocation(line: 239, column: 9, scope: !14667, inlinedAt: !14670)
!14667 = distinct !DISubprogram(name: "runq_best", scope: !2476, file: !2476, line: 237, type: !14668, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !317)
!14668 = !DISubroutineType(types: !14669)
!14669 = !{!2371}
!14670 = distinct !DILocation(line: 314, column: 28, scope: !14671, inlinedAt: !14674)
!14671 = distinct !DISubprogram(name: "next_up", scope: !2476, file: !2476, line: 312, type: !14668, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !14672)
!14672 = !{!14673}
!14673 = !DILocalVariable(name: "thread", scope: !14671, file: !2476, line: 314, type: !2371)
!14674 = distinct !DILocation(line: 562, column: 28, scope: !14661)
!14675 = !DILocation(line: 0, scope: !14671, inlinedAt: !14674)
!14676 = !DILocation(line: 340, column: 17, scope: !14671, inlinedAt: !14674)
!14677 = !DILocation(line: 340, column: 9, scope: !14671, inlinedAt: !14674)
!14678 = !DILocalVariable(name: "thread", arg: 1, scope: !14679, file: !2476, line: 127, type: !2371)
!14679 = distinct !DISubprogram(name: "should_preempt", scope: !2476, file: !2476, line: 127, type: !14680, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !14682)
!14680 = !DISubroutineType(types: !14681)
!14681 = !{!157, !2371, !103}
!14682 = !{!14678, !14683}
!14683 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !14679, file: !2476, line: 128, type: !103)
!14684 = !DILocation(line: 0, scope: !14679, inlinedAt: !14685)
!14685 = distinct !DILocation(line: 564, column: 6, scope: !14686)
!14686 = distinct !DILexicalBlock(scope: !14661, file: !2476, line: 564, column: 6)
!14687 = !DILocation(line: 133, column: 17, scope: !14688, inlinedAt: !14685)
!14688 = distinct !DILexicalBlock(scope: !14679, file: !2476, line: 133, column: 6)
!14689 = !DILocation(line: 0, scope: !14686)
!14690 = !DILocation(line: 133, column: 6, scope: !14679, inlinedAt: !14685)
!14691 = !DILocation(line: 140, column: 6, scope: !14692, inlinedAt: !14685)
!14692 = distinct !DILexicalBlock(scope: !14679, file: !2476, line: 140, column: 6)
!14693 = !DILocation(line: 140, column: 6, scope: !14679, inlinedAt: !14685)
!14694 = !DILocation(line: 150, column: 9, scope: !14695, inlinedAt: !14685)
!14695 = distinct !DILexicalBlock(scope: !14679, file: !2476, line: 149, column: 6)
!14696 = !DILocation(line: 149, column: 6, scope: !14679, inlinedAt: !14685)
!14697 = !DILocation(line: 157, column: 6, scope: !14698, inlinedAt: !14685)
!14698 = distinct !DILexicalBlock(scope: !14679, file: !2476, line: 157, column: 6)
!14699 = !DILocation(line: 564, column: 6, scope: !14661)
!14700 = !DILocation(line: 566, column: 14, scope: !14701)
!14701 = distinct !DILexicalBlock(scope: !14702, file: !2476, line: 566, column: 7)
!14702 = distinct !DILexicalBlock(scope: !14686, file: !2476, line: 564, column: 42)
!14703 = !DILocation(line: 566, column: 7, scope: !14702)
!14704 = !DILocation(line: 567, column: 4, scope: !14705)
!14705 = distinct !DILexicalBlock(scope: !14701, file: !2476, line: 566, column: 27)
!14706 = !DILocation(line: 568, column: 3, scope: !14705)
!14707 = !DILocation(line: 585, column: 1, scope: !14661)
!14708 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2476, file: !2476, line: 1144, type: !14709, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !14711)
!14709 = !DISubroutineType(types: !14710)
!14710 = !{!2371, !14563}
!14711 = !{!14712, !14713, !14714}
!14712 = !DILocalVariable(name: "pq", arg: 1, scope: !14708, file: !2476, line: 1144, type: !14563)
!14713 = !DILocalVariable(name: "thread", scope: !14708, file: !2476, line: 1146, type: !2371)
!14714 = !DILocalVariable(name: "n", scope: !14708, file: !2476, line: 1147, type: !2472)
!14715 = !DILocation(line: 0, scope: !14708)
!14716 = !DILocation(line: 1147, column: 19, scope: !14708)
!14717 = !DILocation(line: 1152, column: 2, scope: !14708)
!14718 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !12865, file: !12865, line: 115, type: !14478, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !14719)
!14719 = !{!14720}
!14720 = !DILocalVariable(name: "thread", arg: 1, scope: !14718, file: !12865, line: 115, type: !2371)
!14721 = !DILocation(line: 0, scope: !14718)
!14722 = !DILocation(line: 117, column: 46, scope: !14718)
!14723 = !DILocation(line: 117, column: 10, scope: !14718)
!14724 = !DILocation(line: 117, column: 9, scope: !14718)
!14725 = !DILocation(line: 117, column: 2, scope: !14718)
!14726 = distinct !DISubprogram(name: "is_preempt", scope: !2476, file: !2476, line: 62, type: !14336, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !14727)
!14727 = !{!14728}
!14728 = !DILocalVariable(name: "thread", arg: 1, scope: !14726, file: !2476, line: 62, type: !2371)
!14729 = !DILocation(line: 0, scope: !14726)
!14730 = !DILocation(line: 65, column: 22, scope: !14726)
!14731 = !DILocation(line: 65, column: 30, scope: !14726)
!14732 = !DILocation(line: 65, column: 2, scope: !14726)
!14733 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !13257, file: !13257, line: 35, type: !14734, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !14738)
!14734 = !DISubroutineType(types: !14735)
!14735 = !{!157, !14736}
!14736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14737, size: 32)
!14737 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2422)
!14738 = !{!14739}
!14739 = !DILocalVariable(name: "to", arg: 1, scope: !14733, file: !13257, line: 35, type: !14736)
!14740 = !DILocation(line: 0, scope: !14733)
!14741 = !DILocation(line: 37, column: 35, scope: !14733)
!14742 = !DILocation(line: 37, column: 10, scope: !14733)
!14743 = !DILocation(line: 37, column: 9, scope: !14733)
!14744 = !DILocation(line: 37, column: 2, scope: !14733)
!14745 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !325, file: !325, line: 225, type: !14746, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !14750)
!14746 = !DISubroutineType(types: !14747)
!14747 = !{!157, !14748}
!14748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14749, size: 32)
!14749 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2381)
!14750 = !{!14751}
!14751 = !DILocalVariable(name: "node", arg: 1, scope: !14745, file: !325, line: 225, type: !14748)
!14752 = !DILocation(line: 0, scope: !14745)
!14753 = !DILocation(line: 227, column: 15, scope: !14745)
!14754 = !DILocation(line: 227, column: 20, scope: !14745)
!14755 = !DILocation(line: 227, column: 2, scope: !14745)
!14756 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !325, file: !325, line: 325, type: !14634, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !14757)
!14757 = !{!14758, !14759}
!14758 = !DILocalVariable(name: "list", arg: 1, scope: !14756, file: !325, line: 325, type: !14563)
!14759 = !DILocalVariable(name: "node", arg: 2, scope: !14756, file: !325, line: 326, type: !2472)
!14760 = !DILocation(line: 0, scope: !14756)
!14761 = !DILocation(line: 328, column: 24, scope: !14756)
!14762 = !DILocation(line: 328, column: 15, scope: !14756)
!14763 = !DILocation(line: 328, column: 9, scope: !14756)
!14764 = !DILocation(line: 328, column: 45, scope: !14756)
!14765 = !DILocation(line: 328, column: 2, scope: !14756)
!14766 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !325, file: !325, line: 266, type: !14767, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !14769)
!14767 = !DISubroutineType(types: !14768)
!14768 = !{!157, !14563}
!14769 = !{!14770}
!14770 = !DILocalVariable(name: "list", arg: 1, scope: !14766, file: !325, line: 266, type: !14563)
!14771 = !DILocation(line: 0, scope: !14766)
!14772 = !DILocation(line: 268, column: 15, scope: !14766)
!14773 = !DILocation(line: 268, column: 20, scope: !14766)
!14774 = !DILocation(line: 268, column: 2, scope: !14766)
!14775 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !325, file: !325, line: 496, type: !14776, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !14778)
!14776 = !DISubroutineType(types: !14777)
!14777 = !{null, !2472}
!14778 = !{!14779, !14780, !14781}
!14779 = !DILocalVariable(name: "node", arg: 1, scope: !14775, file: !325, line: 496, type: !2472)
!14780 = !DILocalVariable(name: "prev", scope: !14775, file: !325, line: 498, type: !14622)
!14781 = !DILocalVariable(name: "next", scope: !14775, file: !325, line: 499, type: !14622)
!14782 = !DILocation(line: 0, scope: !14775)
!14783 = !DILocation(line: 498, column: 34, scope: !14775)
!14784 = !DILocation(line: 499, column: 34, scope: !14775)
!14785 = !DILocation(line: 501, column: 8, scope: !14775)
!14786 = !DILocation(line: 501, column: 13, scope: !14775)
!14787 = !DILocation(line: 502, column: 8, scope: !14775)
!14788 = !DILocation(line: 502, column: 13, scope: !14775)
!14789 = !DILocation(line: 503, column: 2, scope: !14775)
!14790 = !DILocation(line: 504, column: 1, scope: !14775)
!14791 = distinct !DISubprogram(name: "sys_dnode_init", scope: !325, file: !325, line: 211, type: !14776, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !14792)
!14792 = !{!14793}
!14793 = !DILocalVariable(name: "node", arg: 1, scope: !14791, file: !325, line: 211, type: !2472)
!14794 = !DILocation(line: 0, scope: !14791)
!14795 = !DILocation(line: 213, column: 8, scope: !14791)
!14796 = !DILocation(line: 213, column: 13, scope: !14791)
!14797 = !DILocation(line: 214, column: 8, scope: !14791)
!14798 = !DILocation(line: 214, column: 13, scope: !14791)
!14799 = !DILocation(line: 215, column: 1, scope: !14791)
!14800 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !12865, file: !12865, line: 131, type: !14801, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !14803)
!14801 = !DISubroutineType(types: !14802)
!14802 = !{!157, !2371, !121}
!14803 = !{!14804, !14805}
!14804 = !DILocalVariable(name: "thread", arg: 1, scope: !14800, file: !12865, line: 131, type: !2371)
!14805 = !DILocalVariable(name: "state", arg: 2, scope: !14800, file: !12865, line: 131, type: !121)
!14806 = !DILocation(line: 0, scope: !14800)
!14807 = !DILocation(line: 133, column: 23, scope: !14800)
!14808 = !DILocation(line: 133, column: 45, scope: !14800)
!14809 = !DILocation(line: 133, column: 2, scope: !14800)
!14810 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !12865, file: !12865, line: 211, type: !14811, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !14813)
!14811 = !DISubroutineType(types: !14812)
!14812 = !{!157, !103, !103}
!14813 = !{!14814, !14815}
!14814 = !DILocalVariable(name: "prio", arg: 1, scope: !14810, file: !12865, line: 211, type: !103)
!14815 = !DILocalVariable(name: "test_prio", arg: 2, scope: !14810, file: !12865, line: 211, type: !103)
!14816 = !DILocation(line: 0, scope: !14810)
!14817 = !DILocation(line: 213, column: 9, scope: !14810)
!14818 = !DILocation(line: 213, column: 2, scope: !14810)
!14819 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !12865, file: !12865, line: 83, type: !14478, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !14820)
!14820 = !{!14821}
!14821 = !DILocalVariable(name: "thread", arg: 1, scope: !14819, file: !12865, line: 83, type: !2371)
!14822 = !DILocation(line: 0, scope: !14819)
!14823 = !DILocation(line: 89, column: 16, scope: !14819)
!14824 = !DILocation(line: 89, column: 2, scope: !14819)
!14825 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !12865, file: !12865, line: 206, type: !14811, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !14826)
!14826 = !{!14827, !14828}
!14827 = !DILocalVariable(name: "prio1", arg: 1, scope: !14825, file: !12865, line: 206, type: !103)
!14828 = !DILocalVariable(name: "prio2", arg: 2, scope: !14825, file: !12865, line: 206, type: !103)
!14829 = !DILocation(line: 0, scope: !14825)
!14830 = !DILocation(line: 208, column: 15, scope: !14825)
!14831 = !DILocation(line: 208, column: 2, scope: !14825)
!14832 = distinct !DISubprogram(name: "z_ready_thread", scope: !2476, file: !2476, line: 635, type: !14318, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !14833)
!14833 = !{!14834, !14835, !14837}
!14834 = !DILocalVariable(name: "thread", arg: 1, scope: !14832, file: !2476, line: 635, type: !2371)
!14835 = !DILocalVariable(name: "__i", scope: !14836, file: !2476, line: 637, type: !14352)
!14836 = distinct !DILexicalBlock(scope: !14832, file: !2476, line: 637, column: 2)
!14837 = !DILocalVariable(name: "__key", scope: !14836, file: !2476, line: 637, type: !14352)
!14838 = !DILocation(line: 0, scope: !14832)
!14839 = !DILocation(line: 0, scope: !14836)
!14840 = !DILocation(line: 0, scope: !14360, inlinedAt: !14841)
!14841 = distinct !DILocation(line: 637, column: 2, scope: !14836)
!14842 = !DILocation(line: 55, column: 2, scope: !14369, inlinedAt: !14843)
!14843 = distinct !DILocation(line: 145, column: 10, scope: !14360, inlinedAt: !14841)
!14844 = !DILocation(line: 0, scope: !14369, inlinedAt: !14843)
!14845 = !DILocation(line: 639, column: 4, scope: !14846)
!14846 = distinct !DILexicalBlock(scope: !14847, file: !2476, line: 638, column: 41)
!14847 = distinct !DILexicalBlock(scope: !14848, file: !2476, line: 638, column: 7)
!14848 = distinct !DILexicalBlock(scope: !14849, file: !2476, line: 637, column: 26)
!14849 = distinct !DILexicalBlock(scope: !14836, file: !2476, line: 637, column: 2)
!14850 = !DILocation(line: 0, scope: !14387, inlinedAt: !14851)
!14851 = distinct !DILocation(line: 637, column: 2, scope: !14849)
!14852 = !DILocation(line: 0, scope: !14395, inlinedAt: !14853)
!14853 = distinct !DILocation(line: 215, column: 2, scope: !14387, inlinedAt: !14851)
!14854 = !DILocation(line: 95, column: 2, scope: !14395, inlinedAt: !14853)
!14855 = !DILocation(line: 642, column: 1, scope: !14832)
!14856 = distinct !DISubprogram(name: "ready_thread", scope: !2476, file: !2476, line: 617, type: !14318, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !14857)
!14857 = !{!14858}
!14858 = !DILocalVariable(name: "thread", arg: 1, scope: !14856, file: !2476, line: 617, type: !2371)
!14859 = !DILocation(line: 0, scope: !14856)
!14860 = !DILocation(line: 626, column: 7, scope: !14861)
!14861 = distinct !DILexicalBlock(scope: !14856, file: !2476, line: 626, column: 6)
!14862 = !DILocation(line: 626, column: 34, scope: !14861)
!14863 = !DILocation(line: 626, column: 37, scope: !14861)
!14864 = !DILocation(line: 626, column: 6, scope: !14856)
!14865 = !DILocation(line: 0, scope: !14546, inlinedAt: !14866)
!14866 = distinct !DILocation(line: 629, column: 3, scope: !14867)
!14867 = distinct !DILexicalBlock(scope: !14861, file: !2476, line: 626, column: 64)
!14868 = !DILocation(line: 252, column: 15, scope: !14546, inlinedAt: !14866)
!14869 = !DILocation(line: 252, column: 28, scope: !14546, inlinedAt: !14866)
!14870 = !DILocation(line: 0, scope: !14553, inlinedAt: !14871)
!14871 = distinct !DILocation(line: 254, column: 3, scope: !14557, inlinedAt: !14866)
!14872 = !DILocation(line: 0, scope: !14560, inlinedAt: !14873)
!14873 = distinct !DILocation(line: 229, column: 2, scope: !14553, inlinedAt: !14871)
!14874 = !DILocation(line: 188, column: 2, scope: !14570, inlinedAt: !14873)
!14875 = !DILocation(line: 188, column: 2, scope: !14572, inlinedAt: !14873)
!14876 = !DILocation(line: 0, scope: !14570, inlinedAt: !14873)
!14877 = !DILocation(line: 189, column: 7, scope: !14575, inlinedAt: !14873)
!14878 = !DILocation(line: 189, column: 35, scope: !14575, inlinedAt: !14873)
!14879 = !DILocation(line: 189, column: 7, scope: !14576, inlinedAt: !14873)
!14880 = !DILocation(line: 191, column: 21, scope: !14580, inlinedAt: !14873)
!14881 = !DILocation(line: 190, column: 4, scope: !14580, inlinedAt: !14873)
!14882 = !DILocation(line: 192, column: 4, scope: !14580, inlinedAt: !14873)
!14883 = distinct !{!14883, !14874, !14884}
!14884 = !DILocation(line: 194, column: 2, scope: !14570, inlinedAt: !14873)
!14885 = !DILocation(line: 196, column: 37, scope: !14560, inlinedAt: !14873)
!14886 = !DILocation(line: 196, column: 2, scope: !14560, inlinedAt: !14873)
!14887 = !DILocation(line: 197, column: 1, scope: !14560, inlinedAt: !14873)
!14888 = !DILocation(line: 630, column: 3, scope: !14867)
!14889 = !DILocation(line: 632, column: 2, scope: !14867)
!14890 = !DILocation(line: 633, column: 1, scope: !14856)
!14891 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !12865, file: !12865, line: 120, type: !14478, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !14892)
!14892 = !{!14893}
!14893 = !DILocalVariable(name: "thread", arg: 1, scope: !14891, file: !12865, line: 120, type: !2371)
!14894 = !DILocation(line: 0, scope: !14891)
!14895 = !DILocation(line: 122, column: 12, scope: !14891)
!14896 = !DILocation(line: 122, column: 62, scope: !14891)
!14897 = !DILocation(line: 123, column: 4, scope: !14891)
!14898 = !DILocation(line: 122, column: 2, scope: !14891)
!14899 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2476, file: !2476, line: 644, type: !14318, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !14900)
!14900 = !{!14901, !14902, !14904}
!14901 = !DILocalVariable(name: "thread", arg: 1, scope: !14899, file: !2476, line: 644, type: !2371)
!14902 = !DILocalVariable(name: "__i", scope: !14903, file: !2476, line: 646, type: !14352)
!14903 = distinct !DILexicalBlock(scope: !14899, file: !2476, line: 646, column: 2)
!14904 = !DILocalVariable(name: "__key", scope: !14903, file: !2476, line: 646, type: !14352)
!14905 = !DILocation(line: 0, scope: !14899)
!14906 = !DILocation(line: 0, scope: !14903)
!14907 = !DILocation(line: 0, scope: !14360, inlinedAt: !14908)
!14908 = distinct !DILocation(line: 646, column: 2, scope: !14903)
!14909 = !DILocation(line: 55, column: 2, scope: !14369, inlinedAt: !14910)
!14910 = distinct !DILocation(line: 145, column: 10, scope: !14360, inlinedAt: !14908)
!14911 = !DILocation(line: 0, scope: !14369, inlinedAt: !14910)
!14912 = !DILocation(line: 647, column: 3, scope: !14913)
!14913 = distinct !DILexicalBlock(scope: !14914, file: !2476, line: 646, column: 26)
!14914 = distinct !DILexicalBlock(scope: !14903, file: !2476, line: 646, column: 2)
!14915 = !DILocation(line: 0, scope: !14387, inlinedAt: !14916)
!14916 = distinct !DILocation(line: 646, column: 2, scope: !14914)
!14917 = !DILocation(line: 0, scope: !14395, inlinedAt: !14918)
!14918 = distinct !DILocation(line: 215, column: 2, scope: !14387, inlinedAt: !14916)
!14919 = !DILocation(line: 95, column: 2, scope: !14395, inlinedAt: !14918)
!14920 = !DILocation(line: 649, column: 1, scope: !14899)
!14921 = distinct !DISubprogram(name: "z_sched_start", scope: !2476, file: !2476, line: 651, type: !14318, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !14922)
!14922 = !{!14923, !14924}
!14923 = !DILocalVariable(name: "thread", arg: 1, scope: !14921, file: !2476, line: 651, type: !2371)
!14924 = !DILocalVariable(name: "key", scope: !14921, file: !2476, line: 653, type: !14352)
!14925 = !DILocation(line: 0, scope: !14921)
!14926 = !DILocation(line: 0, scope: !14360, inlinedAt: !14927)
!14927 = distinct !DILocation(line: 653, column: 25, scope: !14921)
!14928 = !DILocation(line: 55, column: 2, scope: !14369, inlinedAt: !14929)
!14929 = distinct !DILocation(line: 145, column: 10, scope: !14360, inlinedAt: !14927)
!14930 = !DILocation(line: 0, scope: !14369, inlinedAt: !14929)
!14931 = !DILocation(line: 655, column: 6, scope: !14932)
!14932 = distinct !DILexicalBlock(scope: !14921, file: !2476, line: 655, column: 6)
!14933 = !DILocation(line: 655, column: 6, scope: !14921)
!14934 = !DILocation(line: 0, scope: !14387, inlinedAt: !14935)
!14935 = distinct !DILocation(line: 656, column: 3, scope: !14936)
!14936 = distinct !DILexicalBlock(scope: !14932, file: !2476, line: 655, column: 36)
!14937 = !DILocation(line: 0, scope: !14395, inlinedAt: !14938)
!14938 = distinct !DILocation(line: 215, column: 2, scope: !14387, inlinedAt: !14935)
!14939 = !DILocation(line: 95, column: 2, scope: !14395, inlinedAt: !14938)
!14940 = !DILocation(line: 657, column: 3, scope: !14936)
!14941 = !DILocation(line: 660, column: 2, scope: !14921)
!14942 = !DILocation(line: 661, column: 2, scope: !14921)
!14943 = !DILocation(line: 662, column: 2, scope: !14921)
!14944 = !DILocation(line: 663, column: 1, scope: !14921)
!14945 = distinct !DISubprogram(name: "z_has_thread_started", scope: !12865, file: !12865, line: 126, type: !14478, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !14946)
!14946 = !{!14947}
!14947 = !DILocalVariable(name: "thread", arg: 1, scope: !14945, file: !12865, line: 126, type: !2371)
!14948 = !DILocation(line: 0, scope: !14945)
!14949 = !DILocation(line: 128, column: 23, scope: !14945)
!14950 = !DILocation(line: 128, column: 36, scope: !14945)
!14951 = !DILocation(line: 128, column: 56, scope: !14945)
!14952 = !DILocation(line: 128, column: 2, scope: !14945)
!14953 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12865, file: !12865, line: 155, type: !14318, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !14954)
!14954 = !{!14955}
!14955 = !DILocalVariable(name: "thread", arg: 1, scope: !14953, file: !12865, line: 155, type: !2371)
!14956 = !DILocation(line: 0, scope: !14953)
!14957 = !DILocation(line: 157, column: 15, scope: !14953)
!14958 = !DILocation(line: 157, column: 28, scope: !14953)
!14959 = !DILocation(line: 158, column: 1, scope: !14953)
!14960 = distinct !DISubprogram(name: "z_reschedule", scope: !2476, file: !2476, line: 967, type: !14388, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !14961)
!14961 = !{!14962, !14963}
!14962 = !DILocalVariable(name: "lock", arg: 1, scope: !14960, file: !2476, line: 967, type: !14363)
!14963 = !DILocalVariable(name: "key", arg: 2, scope: !14960, file: !2476, line: 967, type: !14352)
!14964 = !DILocation(line: 0, scope: !14960)
!14965 = !DILocation(line: 969, column: 6, scope: !14966)
!14966 = distinct !DILexicalBlock(scope: !14960, file: !2476, line: 969, column: 6)
!14967 = !DILocation(line: 969, column: 23, scope: !14966)
!14968 = !DILocation(line: 969, column: 26, scope: !14966)
!14969 = !DILocation(line: 969, column: 6, scope: !14960)
!14970 = !DILocalVariable(name: "key", arg: 2, scope: !14971, file: !12969, line: 193, type: !14352)
!14971 = distinct !DISubprogram(name: "z_swap", scope: !12969, file: !12969, line: 193, type: !14972, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !14974)
!14972 = !DISubroutineType(types: !14973)
!14973 = !{!103, !14363, !14352}
!14974 = !{!14975, !14970}
!14975 = !DILocalVariable(name: "lock", arg: 1, scope: !14971, file: !12969, line: 193, type: !14363)
!14976 = !DILocation(line: 0, scope: !14971, inlinedAt: !14977)
!14977 = distinct !DILocation(line: 970, column: 3, scope: !14978)
!14978 = distinct !DILexicalBlock(scope: !14966, file: !2476, line: 969, column: 39)
!14979 = !DILocation(line: 196, column: 9, scope: !14971, inlinedAt: !14977)
!14980 = !DILocation(line: 971, column: 2, scope: !14978)
!14981 = !DILocation(line: 0, scope: !14387, inlinedAt: !14982)
!14982 = distinct !DILocation(line: 972, column: 3, scope: !14983)
!14983 = distinct !DILexicalBlock(scope: !14966, file: !2476, line: 971, column: 9)
!14984 = !DILocation(line: 0, scope: !14395, inlinedAt: !14985)
!14985 = distinct !DILocation(line: 215, column: 2, scope: !14387, inlinedAt: !14982)
!14986 = !DILocation(line: 95, column: 2, scope: !14395, inlinedAt: !14985)
!14987 = !DILocation(line: 975, column: 1, scope: !14960)
!14988 = distinct !DISubprogram(name: "resched", scope: !2476, file: !2476, line: 940, type: !14989, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !14991)
!14989 = !DISubroutineType(types: !14990)
!14990 = !{!157, !121}
!14991 = !{!14992}
!14992 = !DILocalVariable(name: "key", arg: 1, scope: !14988, file: !2476, line: 940, type: !121)
!14993 = !DILocation(line: 0, scope: !14988)
!14994 = !DILocalVariable(name: "key", arg: 1, scope: !14995, file: !5768, line: 112, type: !32)
!14995 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !5768, file: !5768, line: 112, type: !14996, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !14998)
!14996 = !DISubroutineType(types: !14997)
!14997 = !{!157, !32}
!14998 = !{!14994}
!14999 = !DILocation(line: 0, scope: !14995, inlinedAt: !15000)
!15000 = distinct !DILocation(line: 946, column: 9, scope: !14988)
!15001 = !DILocation(line: 115, column: 13, scope: !14995, inlinedAt: !15000)
!15002 = !DILocation(line: 946, column: 32, scope: !14988)
!15003 = !DILocation(line: 1031, column: 3, scope: !15004, inlinedAt: !15007)
!15004 = distinct !DISubprogram(name: "__get_IPSR", scope: !5983, file: !5983, line: 1027, type: !6064, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !15005)
!15005 = !{!15006}
!15006 = !DILocalVariable(name: "result", scope: !15004, file: !5983, line: 1029, type: !121)
!15007 = distinct !DILocation(line: 48, column: 10, scope: !15008, inlinedAt: !15009)
!15008 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6777, file: !6777, line: 46, type: !6778, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !317)
!15009 = distinct !DILocation(line: 946, column: 36, scope: !14988)
!15010 = !{i64 2955722}
!15011 = !DILocation(line: 0, scope: !15004, inlinedAt: !15007)
!15012 = !DILocation(line: 48, column: 9, scope: !15008, inlinedAt: !15009)
!15013 = !DILocation(line: 946, column: 2, scope: !14988)
!15014 = distinct !DISubprogram(name: "need_swap", scope: !2476, file: !2476, line: 953, type: !6778, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !15015)
!15015 = !{!15016}
!15016 = !DILocalVariable(name: "new_thread", scope: !15014, file: !2476, line: 959, type: !2371)
!15017 = !DILocation(line: 962, column: 31, scope: !15014)
!15018 = !DILocation(line: 0, scope: !15014)
!15019 = !DILocation(line: 963, column: 23, scope: !15014)
!15020 = !DILocation(line: 963, column: 20, scope: !15014)
!15021 = !DILocation(line: 963, column: 2, scope: !15014)
!15022 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !12969, file: !12969, line: 181, type: !5993, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !15023)
!15023 = !{!15024, !15025}
!15024 = !DILocalVariable(name: "key", arg: 1, scope: !15022, file: !12969, line: 181, type: !32)
!15025 = !DILocalVariable(name: "ret", scope: !15022, file: !12969, line: 183, type: !103)
!15026 = !DILocation(line: 0, scope: !15022)
!15027 = !DILocation(line: 185, column: 8, scope: !15022)
!15028 = !DILocation(line: 186, column: 2, scope: !15022)
!15029 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2476, file: !2476, line: 665, type: !14318, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !15030)
!15030 = !{!15031, !15032, !15034}
!15031 = !DILocalVariable(name: "thread", arg: 1, scope: !15029, file: !2476, line: 665, type: !2371)
!15032 = !DILocalVariable(name: "__i", scope: !15033, file: !2476, line: 671, type: !14352)
!15033 = distinct !DILexicalBlock(scope: !15029, file: !2476, line: 671, column: 2)
!15034 = !DILocalVariable(name: "__key", scope: !15033, file: !2476, line: 671, type: !14352)
!15035 = !DILocation(line: 0, scope: !15029)
!15036 = !DILocation(line: 669, column: 8, scope: !15029)
!15037 = !DILocation(line: 0, scope: !15033)
!15038 = !DILocation(line: 0, scope: !14360, inlinedAt: !15039)
!15039 = distinct !DILocation(line: 671, column: 2, scope: !15033)
!15040 = !DILocation(line: 55, column: 2, scope: !14369, inlinedAt: !15041)
!15041 = distinct !DILocation(line: 145, column: 10, scope: !14360, inlinedAt: !15039)
!15042 = !DILocation(line: 0, scope: !14369, inlinedAt: !15041)
!15043 = !DILocation(line: 672, column: 7, scope: !15044)
!15044 = distinct !DILexicalBlock(scope: !15045, file: !2476, line: 672, column: 7)
!15045 = distinct !DILexicalBlock(scope: !15046, file: !2476, line: 671, column: 26)
!15046 = distinct !DILexicalBlock(scope: !15033, file: !2476, line: 671, column: 2)
!15047 = !DILocation(line: 672, column: 7, scope: !15045)
!15048 = !DILocation(line: 0, scope: !14529, inlinedAt: !15049)
!15049 = distinct !DILocation(line: 673, column: 4, scope: !15050)
!15050 = distinct !DILexicalBlock(scope: !15044, file: !2476, line: 672, column: 35)
!15051 = !DILocation(line: 266, column: 15, scope: !14529, inlinedAt: !15049)
!15052 = !DILocation(line: 266, column: 28, scope: !14529, inlinedAt: !15049)
!15053 = !DILocation(line: 0, scope: !14537, inlinedAt: !15054)
!15054 = distinct !DILocation(line: 268, column: 3, scope: !14541, inlinedAt: !15049)
!15055 = !DILocation(line: 234, column: 2, scope: !14537, inlinedAt: !15054)
!15056 = !DILocation(line: 674, column: 3, scope: !15050)
!15057 = !DILocation(line: 675, column: 3, scope: !15045)
!15058 = !DILocation(line: 676, column: 26, scope: !15045)
!15059 = !DILocation(line: 676, column: 23, scope: !15045)
!15060 = !DILocation(line: 676, column: 3, scope: !15045)
!15061 = !DILocation(line: 0, scope: !14387, inlinedAt: !15062)
!15062 = distinct !DILocation(line: 671, column: 2, scope: !15046)
!15063 = !DILocation(line: 0, scope: !14395, inlinedAt: !15064)
!15064 = distinct !DILocation(line: 215, column: 2, scope: !14387, inlinedAt: !15062)
!15065 = !DILocation(line: 95, column: 2, scope: !14395, inlinedAt: !15064)
!15066 = !DILocation(line: 679, column: 16, scope: !15067)
!15067 = distinct !DILexicalBlock(scope: !15029, file: !2476, line: 679, column: 6)
!15068 = !DILocation(line: 679, column: 13, scope: !15067)
!15069 = !DILocation(line: 679, column: 6, scope: !15029)
!15070 = !DILocation(line: 680, column: 3, scope: !15071)
!15071 = distinct !DILexicalBlock(scope: !15067, file: !2476, line: 679, column: 26)
!15072 = !DILocation(line: 681, column: 2, scope: !15071)
!15073 = !DILocation(line: 684, column: 1, scope: !15029)
!15074 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !13257, file: !13257, line: 52, type: !14336, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !15075)
!15075 = !{!15076}
!15076 = !DILocalVariable(name: "thread", arg: 1, scope: !15074, file: !13257, line: 52, type: !2371)
!15077 = !DILocation(line: 0, scope: !15074)
!15078 = !DILocation(line: 54, column: 39, scope: !15074)
!15079 = !DILocation(line: 54, column: 9, scope: !15074)
!15080 = !DILocation(line: 54, column: 2, scope: !15074)
!15081 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !12865, file: !12865, line: 141, type: !14318, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !15082)
!15082 = !{!15083}
!15083 = !DILocalVariable(name: "thread", arg: 1, scope: !15081, file: !12865, line: 141, type: !2371)
!15084 = !DILocation(line: 0, scope: !15081)
!15085 = !DILocation(line: 143, column: 15, scope: !15081)
!15086 = !DILocation(line: 143, column: 28, scope: !15081)
!15087 = !DILocation(line: 146, column: 1, scope: !15081)
!15088 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !12865, file: !12865, line: 73, type: !3213, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !317)
!15089 = !DILocation(line: 55, column: 2, scope: !14369, inlinedAt: !15090)
!15090 = distinct !DILocation(line: 75, column: 30, scope: !15088)
!15091 = !DILocation(line: 0, scope: !14369, inlinedAt: !15090)
!15092 = !DILocation(line: 75, column: 9, scope: !15088)
!15093 = !DILocation(line: 76, column: 1, scope: !15088)
!15094 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2476, file: !2476, line: 977, type: !6074, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !15095)
!15095 = !{!15096}
!15096 = !DILocalVariable(name: "key", arg: 1, scope: !15094, file: !2476, line: 977, type: !121)
!15097 = !DILocation(line: 0, scope: !15094)
!15098 = !DILocation(line: 979, column: 6, scope: !15099)
!15099 = distinct !DILexicalBlock(scope: !15094, file: !2476, line: 979, column: 6)
!15100 = !DILocation(line: 979, column: 6, scope: !15094)
!15101 = !DILocation(line: 980, column: 3, scope: !15102)
!15102 = distinct !DILexicalBlock(scope: !15099, file: !2476, line: 979, column: 20)
!15103 = !DILocation(line: 981, column: 2, scope: !15102)
!15104 = !DILocation(line: 0, scope: !14395, inlinedAt: !15105)
!15105 = distinct !DILocation(line: 982, column: 3, scope: !15106)
!15106 = distinct !DILexicalBlock(scope: !15099, file: !2476, line: 981, column: 9)
!15107 = !DILocation(line: 95, column: 2, scope: !14395, inlinedAt: !15105)
!15108 = !DILocation(line: 985, column: 1, scope: !15094)
!15109 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2476, file: !2476, line: 695, type: !14318, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !15110)
!15110 = !{!15111, !15112}
!15111 = !DILocalVariable(name: "thread", arg: 1, scope: !15109, file: !2476, line: 695, type: !2371)
!15112 = !DILocalVariable(name: "key", scope: !15109, file: !2476, line: 699, type: !14352)
!15113 = !DILocation(line: 0, scope: !15109)
!15114 = !DILocation(line: 0, scope: !14360, inlinedAt: !15115)
!15115 = distinct !DILocation(line: 699, column: 25, scope: !15109)
!15116 = !DILocation(line: 55, column: 2, scope: !14369, inlinedAt: !15117)
!15117 = distinct !DILocation(line: 145, column: 10, scope: !14360, inlinedAt: !15115)
!15118 = !DILocation(line: 0, scope: !14369, inlinedAt: !15117)
!15119 = !DILocation(line: 702, column: 7, scope: !15120)
!15120 = distinct !DILexicalBlock(scope: !15109, file: !2476, line: 702, column: 6)
!15121 = !DILocation(line: 702, column: 6, scope: !15109)
!15122 = !DILocation(line: 0, scope: !14387, inlinedAt: !15123)
!15123 = distinct !DILocation(line: 703, column: 3, scope: !15124)
!15124 = distinct !DILexicalBlock(scope: !15120, file: !2476, line: 702, column: 38)
!15125 = !DILocation(line: 0, scope: !14395, inlinedAt: !15126)
!15126 = distinct !DILocation(line: 215, column: 2, scope: !14387, inlinedAt: !15123)
!15127 = !DILocation(line: 95, column: 2, scope: !14395, inlinedAt: !15126)
!15128 = !DILocation(line: 704, column: 3, scope: !15124)
!15129 = !DILocation(line: 707, column: 2, scope: !15109)
!15130 = !DILocation(line: 708, column: 2, scope: !15109)
!15131 = !DILocation(line: 710, column: 2, scope: !15109)
!15132 = !DILocation(line: 713, column: 1, scope: !15109)
!15133 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !12865, file: !12865, line: 96, type: !14478, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !15134)
!15134 = !{!15135}
!15135 = !DILocalVariable(name: "thread", arg: 1, scope: !15133, file: !12865, line: 96, type: !2371)
!15136 = !DILocation(line: 0, scope: !15133)
!15137 = !DILocation(line: 98, column: 23, scope: !15133)
!15138 = !DILocation(line: 98, column: 36, scope: !15133)
!15139 = !DILocation(line: 98, column: 57, scope: !15133)
!15140 = !DILocation(line: 98, column: 2, scope: !15133)
!15141 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !12865, file: !12865, line: 148, type: !14318, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !15142)
!15142 = !{!15143}
!15143 = !DILocalVariable(name: "thread", arg: 1, scope: !15141, file: !12865, line: 148, type: !2371)
!15144 = !DILocation(line: 0, scope: !15141)
!15145 = !DILocation(line: 150, column: 15, scope: !15141)
!15146 = !DILocation(line: 150, column: 28, scope: !15141)
!15147 = !DILocation(line: 153, column: 1, scope: !15141)
!15148 = distinct !DISubprogram(name: "z_pend_thread", scope: !2476, file: !2476, line: 770, type: !15149, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !15155)
!15149 = !DISubroutineType(types: !15150)
!15150 = !{null, !2371, !2402, !15151}
!15151 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !201, line: 67, baseType: !15152)
!15152 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 65, size: 64, elements: !15153)
!15153 = !{!15154}
!15154 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15152, file: !201, line: 66, baseType: !200, size: 64)
!15155 = !{!15156, !15157, !15158, !15159, !15161}
!15156 = !DILocalVariable(name: "thread", arg: 1, scope: !15148, file: !2476, line: 770, type: !2371)
!15157 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15148, file: !2476, line: 770, type: !2402)
!15158 = !DILocalVariable(name: "timeout", arg: 3, scope: !15148, file: !2476, line: 771, type: !15151)
!15159 = !DILocalVariable(name: "__i", scope: !15160, file: !2476, line: 774, type: !14352)
!15160 = distinct !DILexicalBlock(scope: !15148, file: !2476, line: 774, column: 2)
!15161 = !DILocalVariable(name: "__key", scope: !15160, file: !2476, line: 774, type: !14352)
!15162 = !DILocation(line: 0, scope: !15148)
!15163 = !DILocation(line: 0, scope: !15160)
!15164 = !DILocation(line: 0, scope: !14360, inlinedAt: !15165)
!15165 = distinct !DILocation(line: 774, column: 2, scope: !15160)
!15166 = !DILocation(line: 55, column: 2, scope: !14369, inlinedAt: !15167)
!15167 = distinct !DILocation(line: 145, column: 10, scope: !14360, inlinedAt: !15165)
!15168 = !DILocation(line: 0, scope: !14369, inlinedAt: !15167)
!15169 = !DILocation(line: 775, column: 3, scope: !15170)
!15170 = distinct !DILexicalBlock(scope: !15171, file: !2476, line: 774, column: 26)
!15171 = distinct !DILexicalBlock(scope: !15160, file: !2476, line: 774, column: 2)
!15172 = !DILocation(line: 0, scope: !14387, inlinedAt: !15173)
!15173 = distinct !DILocation(line: 774, column: 2, scope: !15171)
!15174 = !DILocation(line: 0, scope: !14395, inlinedAt: !15175)
!15175 = distinct !DILocation(line: 215, column: 2, scope: !14387, inlinedAt: !15173)
!15176 = !DILocation(line: 95, column: 2, scope: !14395, inlinedAt: !15175)
!15177 = !DILocation(line: 777, column: 1, scope: !15148)
!15178 = distinct !DISubprogram(name: "pend_locked", scope: !2476, file: !2476, line: 760, type: !15149, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !15179)
!15179 = !{!15180, !15181, !15182}
!15180 = !DILocalVariable(name: "thread", arg: 1, scope: !15178, file: !2476, line: 760, type: !2371)
!15181 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15178, file: !2476, line: 760, type: !2402)
!15182 = !DILocalVariable(name: "timeout", arg: 3, scope: !15178, file: !2476, line: 761, type: !15151)
!15183 = !DILocation(line: 0, scope: !15178)
!15184 = !DILocation(line: 766, column: 2, scope: !15178)
!15185 = !DILocation(line: 767, column: 2, scope: !15178)
!15186 = !DILocation(line: 768, column: 1, scope: !15178)
!15187 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2476, file: !2476, line: 740, type: !15188, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !15190)
!15188 = !DISubroutineType(types: !15189)
!15189 = !{null, !2371, !2402}
!15190 = !{!15191, !15192}
!15191 = !DILocalVariable(name: "thread", arg: 1, scope: !15187, file: !2476, line: 740, type: !2371)
!15192 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15187, file: !2476, line: 740, type: !2402)
!15193 = !DILocation(line: 0, scope: !15187)
!15194 = !DILocation(line: 742, column: 2, scope: !15187)
!15195 = !DILocation(line: 743, column: 2, scope: !15187)
!15196 = !DILocation(line: 747, column: 13, scope: !15197)
!15197 = distinct !DILexicalBlock(scope: !15187, file: !2476, line: 747, column: 6)
!15198 = !DILocation(line: 747, column: 6, scope: !15187)
!15199 = !DILocation(line: 748, column: 16, scope: !15200)
!15200 = distinct !DILexicalBlock(scope: !15197, file: !2476, line: 747, column: 22)
!15201 = !DILocation(line: 748, column: 26, scope: !15200)
!15202 = !DILocation(line: 749, column: 28, scope: !15200)
!15203 = !DILocation(line: 0, scope: !14560, inlinedAt: !15204)
!15204 = distinct !DILocation(line: 749, column: 3, scope: !15200)
!15205 = !DILocation(line: 188, column: 2, scope: !14570, inlinedAt: !15204)
!15206 = !DILocation(line: 188, column: 2, scope: !14572, inlinedAt: !15204)
!15207 = !DILocation(line: 0, scope: !14570, inlinedAt: !15204)
!15208 = !DILocation(line: 189, column: 7, scope: !14575, inlinedAt: !15204)
!15209 = !DILocation(line: 189, column: 35, scope: !14575, inlinedAt: !15204)
!15210 = !DILocation(line: 189, column: 7, scope: !14576, inlinedAt: !15204)
!15211 = !DILocation(line: 191, column: 21, scope: !14580, inlinedAt: !15204)
!15212 = !DILocation(line: 190, column: 4, scope: !14580, inlinedAt: !15204)
!15213 = !DILocation(line: 192, column: 4, scope: !14580, inlinedAt: !15204)
!15214 = distinct !{!15214, !15205, !15215}
!15215 = !DILocation(line: 194, column: 2, scope: !14570, inlinedAt: !15204)
!15216 = !DILocation(line: 196, column: 37, scope: !14560, inlinedAt: !15204)
!15217 = !DILocation(line: 196, column: 2, scope: !14560, inlinedAt: !15204)
!15218 = !DILocation(line: 197, column: 1, scope: !14560, inlinedAt: !15204)
!15219 = !DILocation(line: 751, column: 1, scope: !15187)
!15220 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2476, file: !2476, line: 753, type: !15221, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !15223)
!15221 = !DISubroutineType(types: !15222)
!15222 = !{null, !2371, !15151}
!15223 = !{!15224, !15225}
!15224 = !DILocalVariable(name: "thread", arg: 1, scope: !15220, file: !2476, line: 753, type: !2371)
!15225 = !DILocalVariable(name: "timeout", arg: 2, scope: !15220, file: !2476, line: 753, type: !15151)
!15226 = !DILocation(line: 0, scope: !15220)
!15227 = !DILocation(line: 755, column: 7, scope: !15228)
!15228 = distinct !DILexicalBlock(scope: !15220, file: !2476, line: 755, column: 6)
!15229 = !DILocation(line: 755, column: 6, scope: !15220)
!15230 = !DILocation(line: 756, column: 3, scope: !15231)
!15231 = distinct !DILexicalBlock(scope: !15228, file: !2476, line: 755, column: 41)
!15232 = !DILocation(line: 757, column: 2, scope: !15231)
!15233 = !DILocation(line: 758, column: 1, scope: !15220)
!15234 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !13257, file: !13257, line: 47, type: !15221, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !15235)
!15235 = !{!15236, !15237}
!15236 = !DILocalVariable(name: "thread", arg: 1, scope: !15234, file: !13257, line: 47, type: !2371)
!15237 = !DILocalVariable(name: "ticks", arg: 2, scope: !15234, file: !13257, line: 47, type: !15151)
!15238 = !DILocation(line: 0, scope: !15234)
!15239 = !DILocation(line: 49, column: 30, scope: !15234)
!15240 = !DILocation(line: 49, column: 2, scope: !15234)
!15241 = !DILocation(line: 50, column: 1, scope: !15234)
!15242 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2476, file: !2476, line: 795, type: !2428, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !15243)
!15243 = !{!15244, !15245, !15246, !15248, !15249}
!15244 = !DILocalVariable(name: "timeout", arg: 1, scope: !15242, file: !2476, line: 795, type: !2430)
!15245 = !DILocalVariable(name: "thread", scope: !15242, file: !2476, line: 797, type: !2371)
!15246 = !DILocalVariable(name: "__i", scope: !15247, file: !2476, line: 800, type: !14352)
!15247 = distinct !DILexicalBlock(scope: !15242, file: !2476, line: 800, column: 2)
!15248 = !DILocalVariable(name: "__key", scope: !15247, file: !2476, line: 800, type: !14352)
!15249 = !DILocalVariable(name: "killed", scope: !15250, file: !2476, line: 801, type: !157)
!15250 = distinct !DILexicalBlock(scope: !15251, file: !2476, line: 800, column: 26)
!15251 = distinct !DILexicalBlock(scope: !15247, file: !2476, line: 800, column: 2)
!15252 = !DILocation(line: 0, scope: !15242)
!15253 = !DILocation(line: 797, column: 28, scope: !15242)
!15254 = !DILocation(line: 0, scope: !15247)
!15255 = !DILocation(line: 0, scope: !14360, inlinedAt: !15256)
!15256 = distinct !DILocation(line: 800, column: 2, scope: !15247)
!15257 = !DILocation(line: 55, column: 2, scope: !14369, inlinedAt: !15258)
!15258 = distinct !DILocation(line: 145, column: 10, scope: !14360, inlinedAt: !15256)
!15259 = !DILocation(line: 0, scope: !14369, inlinedAt: !15258)
!15260 = !DILocation(line: 801, column: 27, scope: !15250)
!15261 = !DILocation(line: 801, column: 32, scope: !15250)
!15262 = !DILocation(line: 801, column: 61, scope: !15250)
!15263 = !DILocation(line: 0, scope: !15250)
!15264 = !DILocation(line: 804, column: 7, scope: !15250)
!15265 = !DILocation(line: 805, column: 21, scope: !15266)
!15266 = distinct !DILexicalBlock(scope: !15267, file: !2476, line: 805, column: 8)
!15267 = distinct !DILexicalBlock(scope: !15268, file: !2476, line: 804, column: 16)
!15268 = distinct !DILexicalBlock(scope: !15250, file: !2476, line: 804, column: 7)
!15269 = !DILocation(line: 805, column: 31, scope: !15266)
!15270 = !DILocation(line: 805, column: 8, scope: !15267)
!15271 = !DILocation(line: 806, column: 5, scope: !15272)
!15272 = distinct !DILexicalBlock(scope: !15266, file: !2476, line: 805, column: 40)
!15273 = !DILocation(line: 807, column: 4, scope: !15272)
!15274 = !DILocation(line: 808, column: 4, scope: !15267)
!15275 = !DILocation(line: 809, column: 4, scope: !15267)
!15276 = !DILocation(line: 810, column: 4, scope: !15267)
!15277 = !DILocation(line: 811, column: 3, scope: !15267)
!15278 = !DILocation(line: 0, scope: !14387, inlinedAt: !15279)
!15279 = distinct !DILocation(line: 800, column: 2, scope: !15251)
!15280 = !DILocation(line: 0, scope: !14395, inlinedAt: !15281)
!15281 = distinct !DILocation(line: 215, column: 2, scope: !14387, inlinedAt: !15279)
!15282 = !DILocation(line: 95, column: 2, scope: !14395, inlinedAt: !15281)
!15283 = !DILocation(line: 813, column: 1, scope: !15242)
!15284 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2476, file: !2476, line: 779, type: !14318, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !15285)
!15285 = !{!15286}
!15286 = !DILocalVariable(name: "thread", arg: 1, scope: !15284, file: !2476, line: 779, type: !2371)
!15287 = !DILocation(line: 0, scope: !15284)
!15288 = !DILocation(line: 781, column: 2, scope: !15284)
!15289 = !DILocation(line: 782, column: 2, scope: !15284)
!15290 = !DILocation(line: 783, column: 15, scope: !15284)
!15291 = !DILocation(line: 783, column: 25, scope: !15284)
!15292 = !DILocation(line: 784, column: 1, scope: !15284)
!15293 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !12865, file: !12865, line: 165, type: !14318, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !15294)
!15294 = !{!15295}
!15295 = !DILocalVariable(name: "thread", arg: 1, scope: !15293, file: !12865, line: 165, type: !2371)
!15296 = !DILocation(line: 0, scope: !15293)
!15297 = !DILocation(line: 167, column: 15, scope: !15293)
!15298 = !DILocation(line: 167, column: 28, scope: !15293)
!15299 = !DILocation(line: 168, column: 1, scope: !15293)
!15300 = distinct !DISubprogram(name: "unready_thread", scope: !2476, file: !2476, line: 731, type: !14318, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !15301)
!15301 = !{!15302}
!15302 = !DILocalVariable(name: "thread", arg: 1, scope: !15300, file: !2476, line: 731, type: !2371)
!15303 = !DILocation(line: 0, scope: !15300)
!15304 = !DILocation(line: 733, column: 6, scope: !15305)
!15305 = distinct !DILexicalBlock(scope: !15300, file: !2476, line: 733, column: 6)
!15306 = !DILocation(line: 733, column: 6, scope: !15300)
!15307 = !DILocation(line: 0, scope: !14529, inlinedAt: !15308)
!15308 = distinct !DILocation(line: 734, column: 3, scope: !15309)
!15309 = distinct !DILexicalBlock(scope: !15305, file: !2476, line: 733, column: 34)
!15310 = !DILocation(line: 266, column: 15, scope: !14529, inlinedAt: !15308)
!15311 = !DILocation(line: 266, column: 28, scope: !14529, inlinedAt: !15308)
!15312 = !DILocation(line: 0, scope: !14537, inlinedAt: !15313)
!15313 = distinct !DILocation(line: 268, column: 3, scope: !14541, inlinedAt: !15308)
!15314 = !DILocation(line: 234, column: 2, scope: !14537, inlinedAt: !15313)
!15315 = !DILocation(line: 735, column: 2, scope: !15309)
!15316 = !DILocation(line: 736, column: 25, scope: !15300)
!15317 = !DILocation(line: 736, column: 22, scope: !15300)
!15318 = !DILocation(line: 736, column: 2, scope: !15300)
!15319 = !DILocation(line: 737, column: 1, scope: !15300)
!15320 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !12865, file: !12865, line: 160, type: !14318, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !15321)
!15321 = !{!15322}
!15322 = !DILocalVariable(name: "thread", arg: 1, scope: !15320, file: !12865, line: 160, type: !2371)
!15323 = !DILocation(line: 0, scope: !15320)
!15324 = !DILocation(line: 162, column: 15, scope: !15320)
!15325 = !DILocation(line: 162, column: 28, scope: !15320)
!15326 = !DILocation(line: 163, column: 1, scope: !15320)
!15327 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2476, file: !2476, line: 786, type: !14318, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !15328)
!15328 = !{!15329, !15330, !15332}
!15329 = !DILocalVariable(name: "thread", arg: 1, scope: !15327, file: !2476, line: 786, type: !2371)
!15330 = !DILocalVariable(name: "__i", scope: !15331, file: !2476, line: 788, type: !14352)
!15331 = distinct !DILexicalBlock(scope: !15327, file: !2476, line: 788, column: 2)
!15332 = !DILocalVariable(name: "__key", scope: !15331, file: !2476, line: 788, type: !14352)
!15333 = !DILocation(line: 0, scope: !15327)
!15334 = !DILocation(line: 0, scope: !15331)
!15335 = !DILocation(line: 0, scope: !14360, inlinedAt: !15336)
!15336 = distinct !DILocation(line: 788, column: 2, scope: !15331)
!15337 = !DILocation(line: 55, column: 2, scope: !14369, inlinedAt: !15338)
!15338 = distinct !DILocation(line: 145, column: 10, scope: !14360, inlinedAt: !15336)
!15339 = !DILocation(line: 0, scope: !14369, inlinedAt: !15338)
!15340 = !DILocation(line: 789, column: 3, scope: !15341)
!15341 = distinct !DILexicalBlock(scope: !15342, file: !2476, line: 788, column: 26)
!15342 = distinct !DILexicalBlock(scope: !15331, file: !2476, line: 788, column: 2)
!15343 = !DILocation(line: 0, scope: !14387, inlinedAt: !15344)
!15344 = distinct !DILocation(line: 788, column: 2, scope: !15342)
!15345 = !DILocation(line: 0, scope: !14395, inlinedAt: !15346)
!15346 = distinct !DILocation(line: 215, column: 2, scope: !14387, inlinedAt: !15344)
!15347 = !DILocation(line: 95, column: 2, scope: !14395, inlinedAt: !15346)
!15348 = !DILocation(line: 791, column: 1, scope: !15327)
!15349 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2476, file: !2476, line: 816, type: !15350, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !15352)
!15350 = !DISubroutineType(types: !15351)
!15351 = !{!103, !121, !2402, !15151}
!15352 = !{!15353, !15354, !15355, !15356, !15357, !15359}
!15353 = !DILocalVariable(name: "key", arg: 1, scope: !15349, file: !2476, line: 816, type: !121)
!15354 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15349, file: !2476, line: 816, type: !2402)
!15355 = !DILocalVariable(name: "timeout", arg: 3, scope: !15349, file: !2476, line: 816, type: !15151)
!15356 = !DILocalVariable(name: "ret", scope: !15349, file: !2476, line: 828, type: !103)
!15357 = !DILocalVariable(name: "__i", scope: !15358, file: !2476, line: 829, type: !14352)
!15358 = distinct !DILexicalBlock(scope: !15349, file: !2476, line: 829, column: 2)
!15359 = !DILocalVariable(name: "__key", scope: !15358, file: !2476, line: 829, type: !14352)
!15360 = !DILocation(line: 0, scope: !15349)
!15361 = !DILocation(line: 823, column: 14, scope: !15349)
!15362 = !DILocation(line: 823, column: 2, scope: !15349)
!15363 = !DILocation(line: 826, column: 20, scope: !15349)
!15364 = !DILocation(line: 826, column: 18, scope: !15349)
!15365 = !DILocation(line: 828, column: 12, scope: !15349)
!15366 = !DILocation(line: 0, scope: !15358)
!15367 = !DILocation(line: 0, scope: !14360, inlinedAt: !15368)
!15368 = distinct !DILocation(line: 829, column: 2, scope: !15358)
!15369 = !DILocation(line: 55, column: 2, scope: !14369, inlinedAt: !15370)
!15370 = distinct !DILocation(line: 145, column: 10, scope: !14360, inlinedAt: !15368)
!15371 = !DILocation(line: 0, scope: !14369, inlinedAt: !15370)
!15372 = !DILocation(line: 830, column: 7, scope: !15373)
!15373 = distinct !DILexicalBlock(scope: !15374, file: !2476, line: 830, column: 7)
!15374 = distinct !DILexicalBlock(scope: !15375, file: !2476, line: 829, column: 26)
!15375 = distinct !DILexicalBlock(scope: !15358, file: !2476, line: 829, column: 2)
!15376 = !DILocation(line: 830, column: 26, scope: !15373)
!15377 = !DILocation(line: 830, column: 23, scope: !15373)
!15378 = !DILocation(line: 830, column: 7, scope: !15374)
!15379 = !DILocation(line: 831, column: 20, scope: !15380)
!15380 = distinct !DILexicalBlock(scope: !15373, file: !2476, line: 830, column: 36)
!15381 = !DILocation(line: 832, column: 3, scope: !15380)
!15382 = !DILocation(line: 0, scope: !14387, inlinedAt: !15383)
!15383 = distinct !DILocation(line: 829, column: 2, scope: !15375)
!15384 = !DILocation(line: 0, scope: !14395, inlinedAt: !15385)
!15385 = distinct !DILocation(line: 215, column: 2, scope: !14387, inlinedAt: !15383)
!15386 = !DILocation(line: 95, column: 2, scope: !14395, inlinedAt: !15385)
!15387 = !DILocation(line: 834, column: 2, scope: !15349)
!15388 = distinct !DISubprogram(name: "z_pend_curr", scope: !2476, file: !2476, line: 840, type: !15389, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !15391)
!15389 = !DISubroutineType(types: !15390)
!15390 = !{!103, !14363, !14352, !2402, !15151}
!15391 = !{!15392, !15393, !15394, !15395}
!15392 = !DILocalVariable(name: "lock", arg: 1, scope: !15388, file: !2476, line: 840, type: !14363)
!15393 = !DILocalVariable(name: "key", arg: 2, scope: !15388, file: !2476, line: 840, type: !14352)
!15394 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15388, file: !2476, line: 841, type: !2402)
!15395 = !DILocalVariable(name: "timeout", arg: 4, scope: !15388, file: !2476, line: 841, type: !15151)
!15396 = !DILocation(line: 0, scope: !15388)
!15397 = !DILocation(line: 844, column: 20, scope: !15388)
!15398 = !DILocation(line: 844, column: 18, scope: !15388)
!15399 = !DILocation(line: 0, scope: !14360, inlinedAt: !15400)
!15400 = distinct !DILocation(line: 856, column: 9, scope: !15388)
!15401 = !DILocation(line: 55, column: 2, scope: !14369, inlinedAt: !15402)
!15402 = distinct !DILocation(line: 145, column: 10, scope: !14360, inlinedAt: !15400)
!15403 = !DILocation(line: 0, scope: !14369, inlinedAt: !15402)
!15404 = !DILocation(line: 857, column: 14, scope: !15388)
!15405 = !DILocation(line: 857, column: 2, scope: !15388)
!15406 = !DILocation(line: 0, scope: !14971, inlinedAt: !15407)
!15407 = distinct !DILocation(line: 859, column: 9, scope: !15388)
!15408 = !DILocation(line: 196, column: 9, scope: !14971, inlinedAt: !15407)
!15409 = !DILocation(line: 859, column: 2, scope: !15388)
!15410 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2476, file: !2476, line: 862, type: !15411, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !15413)
!15411 = !DISubroutineType(types: !15412)
!15412 = !{!2371, !2402}
!15413 = !{!15414, !15415, !15416, !15418}
!15414 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15410, file: !2476, line: 862, type: !2402)
!15415 = !DILocalVariable(name: "thread", scope: !15410, file: !2476, line: 864, type: !2371)
!15416 = !DILocalVariable(name: "__i", scope: !15417, file: !2476, line: 866, type: !14352)
!15417 = distinct !DILexicalBlock(scope: !15410, file: !2476, line: 866, column: 2)
!15418 = !DILocalVariable(name: "__key", scope: !15417, file: !2476, line: 866, type: !14352)
!15419 = !DILocation(line: 0, scope: !15410)
!15420 = !DILocation(line: 0, scope: !15417)
!15421 = !DILocation(line: 0, scope: !14360, inlinedAt: !15422)
!15422 = distinct !DILocation(line: 866, column: 2, scope: !15417)
!15423 = !DILocation(line: 55, column: 2, scope: !14369, inlinedAt: !15424)
!15424 = distinct !DILocation(line: 145, column: 10, scope: !14360, inlinedAt: !15422)
!15425 = !DILocation(line: 0, scope: !14369, inlinedAt: !15424)
!15426 = !DILocation(line: 867, column: 12, scope: !15427)
!15427 = distinct !DILexicalBlock(scope: !15428, file: !2476, line: 866, column: 26)
!15428 = distinct !DILexicalBlock(scope: !15417, file: !2476, line: 866, column: 2)
!15429 = !DILocation(line: 869, column: 14, scope: !15430)
!15430 = distinct !DILexicalBlock(scope: !15427, file: !2476, line: 869, column: 7)
!15431 = !DILocation(line: 869, column: 7, scope: !15427)
!15432 = !DILocation(line: 870, column: 4, scope: !15433)
!15433 = distinct !DILexicalBlock(scope: !15430, file: !2476, line: 869, column: 23)
!15434 = !DILocation(line: 871, column: 3, scope: !15433)
!15435 = !DILocation(line: 0, scope: !14387, inlinedAt: !15436)
!15436 = distinct !DILocation(line: 866, column: 2, scope: !15428)
!15437 = !DILocation(line: 0, scope: !14395, inlinedAt: !15438)
!15438 = distinct !DILocation(line: 215, column: 2, scope: !14387, inlinedAt: !15436)
!15439 = !DILocation(line: 95, column: 2, scope: !14395, inlinedAt: !15438)
!15440 = !DILocation(line: 874, column: 2, scope: !15410)
!15441 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2476, file: !2476, line: 877, type: !15411, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !15442)
!15442 = !{!15443, !15444, !15445, !15447}
!15443 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15441, file: !2476, line: 877, type: !2402)
!15444 = !DILocalVariable(name: "thread", scope: !15441, file: !2476, line: 879, type: !2371)
!15445 = !DILocalVariable(name: "__i", scope: !15446, file: !2476, line: 881, type: !14352)
!15446 = distinct !DILexicalBlock(scope: !15441, file: !2476, line: 881, column: 2)
!15447 = !DILocalVariable(name: "__key", scope: !15446, file: !2476, line: 881, type: !14352)
!15448 = !DILocation(line: 0, scope: !15441)
!15449 = !DILocation(line: 0, scope: !15446)
!15450 = !DILocation(line: 0, scope: !14360, inlinedAt: !15451)
!15451 = distinct !DILocation(line: 881, column: 2, scope: !15446)
!15452 = !DILocation(line: 55, column: 2, scope: !14369, inlinedAt: !15453)
!15453 = distinct !DILocation(line: 145, column: 10, scope: !14360, inlinedAt: !15451)
!15454 = !DILocation(line: 0, scope: !14369, inlinedAt: !15453)
!15455 = !DILocation(line: 882, column: 12, scope: !15456)
!15456 = distinct !DILexicalBlock(scope: !15457, file: !2476, line: 881, column: 26)
!15457 = distinct !DILexicalBlock(scope: !15446, file: !2476, line: 881, column: 2)
!15458 = !DILocation(line: 884, column: 14, scope: !15459)
!15459 = distinct !DILexicalBlock(scope: !15456, file: !2476, line: 884, column: 7)
!15460 = !DILocation(line: 884, column: 7, scope: !15456)
!15461 = !DILocation(line: 885, column: 4, scope: !15462)
!15462 = distinct !DILexicalBlock(scope: !15459, file: !2476, line: 884, column: 23)
!15463 = !DILocation(line: 886, column: 10, scope: !15462)
!15464 = !DILocation(line: 887, column: 3, scope: !15462)
!15465 = !DILocation(line: 0, scope: !14387, inlinedAt: !15466)
!15466 = distinct !DILocation(line: 881, column: 2, scope: !15457)
!15467 = !DILocation(line: 0, scope: !14395, inlinedAt: !15468)
!15468 = distinct !DILocation(line: 215, column: 2, scope: !14387, inlinedAt: !15466)
!15469 = !DILocation(line: 95, column: 2, scope: !14395, inlinedAt: !15468)
!15470 = !DILocation(line: 890, column: 2, scope: !15441)
!15471 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2476, file: !2476, line: 893, type: !14318, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !15472)
!15472 = !{!15473}
!15473 = !DILocalVariable(name: "thread", arg: 1, scope: !15471, file: !2476, line: 893, type: !2371)
!15474 = !DILocation(line: 0, scope: !15471)
!15475 = !DILocation(line: 0, scope: !15327, inlinedAt: !15476)
!15476 = distinct !DILocation(line: 895, column: 2, scope: !15471)
!15477 = !DILocation(line: 0, scope: !15331, inlinedAt: !15476)
!15478 = !DILocation(line: 0, scope: !14360, inlinedAt: !15479)
!15479 = distinct !DILocation(line: 788, column: 2, scope: !15331, inlinedAt: !15476)
!15480 = !DILocation(line: 55, column: 2, scope: !14369, inlinedAt: !15481)
!15481 = distinct !DILocation(line: 145, column: 10, scope: !14360, inlinedAt: !15479)
!15482 = !DILocation(line: 0, scope: !14369, inlinedAt: !15481)
!15483 = !DILocation(line: 789, column: 3, scope: !15341, inlinedAt: !15476)
!15484 = !DILocation(line: 0, scope: !14387, inlinedAt: !15485)
!15485 = distinct !DILocation(line: 788, column: 2, scope: !15342, inlinedAt: !15476)
!15486 = !DILocation(line: 0, scope: !14395, inlinedAt: !15487)
!15487 = distinct !DILocation(line: 215, column: 2, scope: !14387, inlinedAt: !15485)
!15488 = !DILocation(line: 95, column: 2, scope: !14395, inlinedAt: !15487)
!15489 = !DILocation(line: 896, column: 8, scope: !15471)
!15490 = !DILocation(line: 897, column: 1, scope: !15471)
!15491 = distinct !DISubprogram(name: "z_set_prio", scope: !2476, file: !2476, line: 902, type: !14680, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !15492)
!15492 = !{!15493, !15494, !15495, !15496, !15498}
!15493 = !DILocalVariable(name: "thread", arg: 1, scope: !15491, file: !2476, line: 902, type: !2371)
!15494 = !DILocalVariable(name: "prio", arg: 2, scope: !15491, file: !2476, line: 902, type: !103)
!15495 = !DILocalVariable(name: "need_sched", scope: !15491, file: !2476, line: 904, type: !157)
!15496 = !DILocalVariable(name: "__i", scope: !15497, file: !2476, line: 906, type: !14352)
!15497 = distinct !DILexicalBlock(scope: !15491, file: !2476, line: 906, column: 2)
!15498 = !DILocalVariable(name: "__key", scope: !15497, file: !2476, line: 906, type: !14352)
!15499 = !DILocation(line: 0, scope: !15491)
!15500 = !DILocation(line: 0, scope: !15497)
!15501 = !DILocation(line: 0, scope: !14360, inlinedAt: !15502)
!15502 = distinct !DILocation(line: 906, column: 2, scope: !15497)
!15503 = !DILocation(line: 55, column: 2, scope: !14369, inlinedAt: !15504)
!15504 = distinct !DILocation(line: 145, column: 10, scope: !14360, inlinedAt: !15502)
!15505 = !DILocation(line: 0, scope: !14369, inlinedAt: !15504)
!15506 = !DILocation(line: 907, column: 16, scope: !15507)
!15507 = distinct !DILexicalBlock(scope: !15508, file: !2476, line: 906, column: 26)
!15508 = distinct !DILexicalBlock(scope: !15497, file: !2476, line: 906, column: 2)
!15509 = !DILocation(line: 909, column: 7, scope: !15507)
!15510 = !DILocation(line: 0, scope: !14529, inlinedAt: !15511)
!15511 = distinct !DILocation(line: 912, column: 5, scope: !15512)
!15512 = distinct !DILexicalBlock(scope: !15513, file: !2476, line: 911, column: 63)
!15513 = distinct !DILexicalBlock(scope: !15514, file: !2476, line: 911, column: 8)
!15514 = distinct !DILexicalBlock(scope: !15515, file: !2476, line: 909, column: 19)
!15515 = distinct !DILexicalBlock(scope: !15507, file: !2476, line: 909, column: 7)
!15516 = !DILocation(line: 266, column: 28, scope: !14529, inlinedAt: !15511)
!15517 = !DILocation(line: 0, scope: !14537, inlinedAt: !15518)
!15518 = distinct !DILocation(line: 268, column: 3, scope: !14541, inlinedAt: !15511)
!15519 = !DILocation(line: 234, column: 2, scope: !14537, inlinedAt: !15518)
!15520 = !DILocation(line: 913, column: 23, scope: !15512)
!15521 = !DILocation(line: 0, scope: !14546, inlinedAt: !15522)
!15522 = distinct !DILocation(line: 914, column: 5, scope: !15512)
!15523 = !DILocation(line: 252, column: 28, scope: !14546, inlinedAt: !15522)
!15524 = !DILocation(line: 0, scope: !14553, inlinedAt: !15525)
!15525 = distinct !DILocation(line: 254, column: 3, scope: !14557, inlinedAt: !15522)
!15526 = !DILocation(line: 0, scope: !14560, inlinedAt: !15527)
!15527 = distinct !DILocation(line: 229, column: 2, scope: !14553, inlinedAt: !15525)
!15528 = !DILocation(line: 188, column: 2, scope: !14570, inlinedAt: !15527)
!15529 = !DILocation(line: 188, column: 2, scope: !14572, inlinedAt: !15527)
!15530 = !DILocation(line: 0, scope: !14570, inlinedAt: !15527)
!15531 = !DILocation(line: 189, column: 7, scope: !14575, inlinedAt: !15527)
!15532 = !DILocation(line: 189, column: 35, scope: !14575, inlinedAt: !15527)
!15533 = !DILocation(line: 189, column: 7, scope: !14576, inlinedAt: !15527)
!15534 = !DILocation(line: 190, column: 4, scope: !14580, inlinedAt: !15527)
!15535 = !DILocation(line: 192, column: 4, scope: !14580, inlinedAt: !15527)
!15536 = distinct !{!15536, !15528, !15537}
!15537 = !DILocation(line: 194, column: 2, scope: !14570, inlinedAt: !15527)
!15538 = !DILocation(line: 196, column: 2, scope: !14560, inlinedAt: !15527)
!15539 = !DILocation(line: 197, column: 1, scope: !14560, inlinedAt: !15527)
!15540 = !DILocation(line: 918, column: 4, scope: !15514)
!15541 = !DILocation(line: 919, column: 3, scope: !15514)
!15542 = !DILocation(line: 920, column: 22, scope: !15543)
!15543 = distinct !DILexicalBlock(scope: !15515, file: !2476, line: 919, column: 10)
!15544 = !DILocation(line: 0, scope: !14387, inlinedAt: !15545)
!15545 = distinct !DILocation(line: 906, column: 2, scope: !15508)
!15546 = !DILocation(line: 0, scope: !14395, inlinedAt: !15547)
!15547 = distinct !DILocation(line: 215, column: 2, scope: !14387, inlinedAt: !15545)
!15548 = !DILocation(line: 95, column: 2, scope: !14395, inlinedAt: !15547)
!15549 = !DILocation(line: 926, column: 2, scope: !15491)
!15550 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2476, file: !2476, line: 929, type: !15551, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !15553)
!15551 = !DISubroutineType(types: !15552)
!15552 = !{null, !2371, !103}
!15553 = !{!15554, !15555, !15556}
!15554 = !DILocalVariable(name: "thread", arg: 1, scope: !15550, file: !2476, line: 929, type: !2371)
!15555 = !DILocalVariable(name: "prio", arg: 2, scope: !15550, file: !2476, line: 929, type: !103)
!15556 = !DILocalVariable(name: "need_sched", scope: !15550, file: !2476, line: 931, type: !157)
!15557 = !DILocation(line: 0, scope: !15550)
!15558 = !DILocation(line: 931, column: 20, scope: !15550)
!15559 = !DILocation(line: 935, column: 17, scope: !15560)
!15560 = distinct !DILexicalBlock(scope: !15550, file: !2476, line: 935, column: 6)
!15561 = !DILocation(line: 935, column: 20, scope: !15560)
!15562 = !DILocation(line: 935, column: 35, scope: !15560)
!15563 = !DILocation(line: 935, column: 48, scope: !15560)
!15564 = !DILocation(line: 935, column: 6, scope: !15550)
!15565 = !DILocation(line: 936, column: 3, scope: !15566)
!15566 = distinct !DILexicalBlock(scope: !15560, file: !2476, line: 935, column: 55)
!15567 = !DILocation(line: 937, column: 2, scope: !15566)
!15568 = !DILocation(line: 938, column: 1, scope: !15550)
!15569 = distinct !DISubprogram(name: "k_sched_lock", scope: !2476, file: !2476, line: 987, type: !3213, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !15570)
!15570 = !{!15571, !15573}
!15571 = !DILocalVariable(name: "__i", scope: !15572, file: !2476, line: 989, type: !14352)
!15572 = distinct !DILexicalBlock(scope: !15569, file: !2476, line: 989, column: 2)
!15573 = !DILocalVariable(name: "__key", scope: !15572, file: !2476, line: 989, type: !14352)
!15574 = !DILocation(line: 0, scope: !15572)
!15575 = !DILocation(line: 0, scope: !14360, inlinedAt: !15576)
!15576 = distinct !DILocation(line: 989, column: 2, scope: !15572)
!15577 = !DILocation(line: 55, column: 2, scope: !14369, inlinedAt: !15578)
!15578 = distinct !DILocation(line: 145, column: 10, scope: !14360, inlinedAt: !15576)
!15579 = !DILocation(line: 0, scope: !14369, inlinedAt: !15578)
!15580 = !DILocation(line: 992, column: 3, scope: !15581)
!15581 = distinct !DILexicalBlock(scope: !15582, file: !2476, line: 989, column: 26)
!15582 = distinct !DILexicalBlock(scope: !15572, file: !2476, line: 989, column: 2)
!15583 = !DILocation(line: 0, scope: !14387, inlinedAt: !15584)
!15584 = distinct !DILocation(line: 989, column: 2, scope: !15582)
!15585 = !DILocation(line: 0, scope: !14395, inlinedAt: !15586)
!15586 = distinct !DILocation(line: 215, column: 2, scope: !14387, inlinedAt: !15584)
!15587 = !DILocation(line: 95, column: 2, scope: !14395, inlinedAt: !15586)
!15588 = !DILocation(line: 994, column: 1, scope: !15569)
!15589 = distinct !DISubprogram(name: "z_sched_lock", scope: !12865, file: !12865, line: 251, type: !3213, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !317)
!15590 = !DILocation(line: 256, column: 4, scope: !15589)
!15591 = !DILocation(line: 256, column: 19, scope: !15589)
!15592 = !DILocation(line: 256, column: 2, scope: !15589)
!15593 = !DILocation(line: 258, column: 2, scope: !15594)
!15594 = distinct !DILexicalBlock(scope: !15589, file: !12865, line: 258, column: 2)
!15595 = !{i64 2154274962}
!15596 = !DILocation(line: 259, column: 1, scope: !15589)
!15597 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2476, file: !2476, line: 996, type: !3213, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !15598)
!15598 = !{!15599, !15601}
!15599 = !DILocalVariable(name: "__i", scope: !15600, file: !2476, line: 998, type: !14352)
!15600 = distinct !DILexicalBlock(scope: !15597, file: !2476, line: 998, column: 2)
!15601 = !DILocalVariable(name: "__key", scope: !15600, file: !2476, line: 998, type: !14352)
!15602 = !DILocation(line: 0, scope: !15600)
!15603 = !DILocation(line: 0, scope: !14360, inlinedAt: !15604)
!15604 = distinct !DILocation(line: 998, column: 2, scope: !15600)
!15605 = !DILocation(line: 55, column: 2, scope: !14369, inlinedAt: !15606)
!15606 = distinct !DILocation(line: 145, column: 10, scope: !14360, inlinedAt: !15604)
!15607 = !DILocation(line: 0, scope: !14369, inlinedAt: !15606)
!15608 = !DILocation(line: 1002, column: 5, scope: !15609)
!15609 = distinct !DILexicalBlock(scope: !15610, file: !2476, line: 998, column: 26)
!15610 = distinct !DILexicalBlock(scope: !15600, file: !2476, line: 998, column: 2)
!15611 = !DILocation(line: 1002, column: 20, scope: !15609)
!15612 = !DILocation(line: 1002, column: 3, scope: !15609)
!15613 = !DILocation(line: 1003, column: 3, scope: !15609)
!15614 = !DILocation(line: 0, scope: !14387, inlinedAt: !15615)
!15615 = distinct !DILocation(line: 998, column: 2, scope: !15610)
!15616 = !DILocation(line: 0, scope: !14395, inlinedAt: !15617)
!15617 = distinct !DILocation(line: 215, column: 2, scope: !14387, inlinedAt: !15615)
!15618 = !DILocation(line: 95, column: 2, scope: !14395, inlinedAt: !15617)
!15619 = !DILocation(line: 1011, column: 2, scope: !15597)
!15620 = !DILocation(line: 1012, column: 1, scope: !15597)
!15621 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2476, file: !2476, line: 1014, type: !14668, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !317)
!15622 = !DILocation(line: 1028, column: 25, scope: !15621)
!15623 = !DILocation(line: 1028, column: 2, scope: !15621)
!15624 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2476, file: !2476, line: 1155, type: !15625, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !15627)
!15625 = !DISubroutineType(types: !15626)
!15626 = !{!157, !2400, !2400}
!15627 = !{!15628, !15629, !15630, !15631, !15632}
!15628 = !DILocalVariable(name: "a", arg: 1, scope: !15624, file: !2476, line: 1155, type: !2400)
!15629 = !DILocalVariable(name: "b", arg: 2, scope: !15624, file: !2476, line: 1155, type: !2400)
!15630 = !DILocalVariable(name: "thread_a", scope: !15624, file: !2476, line: 1157, type: !2371)
!15631 = !DILocalVariable(name: "thread_b", scope: !15624, file: !2476, line: 1157, type: !2371)
!15632 = !DILocalVariable(name: "cmp", scope: !15624, file: !2476, line: 1158, type: !724)
!15633 = !DILocation(line: 0, scope: !15624)
!15634 = !DILocation(line: 1160, column: 13, scope: !15624)
!15635 = !DILocation(line: 1161, column: 13, scope: !15624)
!15636 = !DILocation(line: 1163, column: 8, scope: !15624)
!15637 = !DILocation(line: 1165, column: 10, scope: !15638)
!15638 = distinct !DILexicalBlock(scope: !15624, file: !2476, line: 1165, column: 6)
!15639 = !DILocation(line: 1165, column: 6, scope: !15624)
!15640 = !DILocation(line: 1167, column: 17, scope: !15641)
!15641 = distinct !DILexicalBlock(scope: !15638, file: !2476, line: 1167, column: 13)
!15642 = !DILocation(line: 1167, column: 13, scope: !15638)
!15643 = !DILocation(line: 1170, column: 25, scope: !15644)
!15644 = distinct !DILexicalBlock(scope: !15641, file: !2476, line: 1169, column: 9)
!15645 = !DILocation(line: 1170, column: 52, scope: !15644)
!15646 = !DILocation(line: 1170, column: 35, scope: !15644)
!15647 = !DILocation(line: 1170, column: 3, scope: !15644)
!15648 = !DILocation(line: 0, scope: !15638)
!15649 = !DILocation(line: 1173, column: 1, scope: !15624)
!15650 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2476, file: !2476, line: 1175, type: !15651, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !15666)
!15651 = !DISubroutineType(types: !15652)
!15652 = !{null, !15653, !2371}
!15653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15654, size: 32)
!15654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !15655, line: 37, size: 128, elements: !15656)
!15655 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15656 = !{!15657, !15665}
!15657 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !15654, file: !15655, line: 38, baseType: !15658, size: 96)
!15658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !404, line: 83, size: 96, elements: !15659)
!15659 = !{!15660, !15661, !15664}
!15660 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !15658, file: !404, line: 84, baseType: !2400, size: 32)
!15661 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !15658, file: !404, line: 85, baseType: !15662, size: 32, offset: 32)
!15662 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !404, line: 81, baseType: !15663)
!15663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15625, size: 32)
!15664 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !15658, file: !404, line: 86, baseType: !103, size: 32, offset: 64)
!15665 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !15654, file: !15655, line: 39, baseType: !103, size: 32, offset: 96)
!15666 = !{!15667, !15668, !15669, !15670, !15679}
!15667 = !DILocalVariable(name: "pq", arg: 1, scope: !15650, file: !2476, line: 1175, type: !15653)
!15668 = !DILocalVariable(name: "thread", arg: 2, scope: !15650, file: !2476, line: 1175, type: !2371)
!15669 = !DILocalVariable(name: "t", scope: !15650, file: !2476, line: 1177, type: !2371)
!15670 = !DILocalVariable(name: "__f", scope: !15671, file: !2476, line: 1190, type: !15674)
!15671 = distinct !DILexicalBlock(scope: !15672, file: !2476, line: 1190, column: 3)
!15672 = distinct !DILexicalBlock(scope: !15673, file: !2476, line: 1189, column: 27)
!15673 = distinct !DILexicalBlock(scope: !15650, file: !2476, line: 1189, column: 6)
!15674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !404, line: 155, size: 96, elements: !15675)
!15675 = !{!15676, !15677, !15678}
!15676 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !15674, file: !404, line: 156, baseType: !2471, size: 32)
!15677 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !15674, file: !404, line: 157, baseType: !267, size: 32, offset: 32)
!15678 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !15674, file: !404, line: 158, baseType: !724, size: 32, offset: 64)
!15679 = !DILocalVariable(name: "n", scope: !15680, file: !2476, line: 1190, type: !2400)
!15680 = distinct !DILexicalBlock(scope: !15681, file: !2476, line: 1190, column: 3)
!15681 = distinct !DILexicalBlock(scope: !15671, file: !2476, line: 1190, column: 3)
!15682 = !DILocation(line: 0, scope: !15650)
!15683 = !DILocation(line: 1181, column: 31, scope: !15650)
!15684 = !DILocation(line: 1181, column: 45, scope: !15650)
!15685 = !DILocation(line: 1181, column: 15, scope: !15650)
!15686 = !DILocation(line: 1181, column: 25, scope: !15650)
!15687 = !DILocation(line: 1189, column: 11, scope: !15673)
!15688 = !DILocation(line: 1189, column: 7, scope: !15673)
!15689 = !DILocation(line: 1189, column: 6, scope: !15650)
!15690 = !DILocation(line: 1190, column: 3, scope: !15671)
!15691 = !DILocation(line: 1190, column: 3, scope: !15680)
!15692 = !DILocation(line: 0, scope: !15680)
!15693 = !DILocation(line: 1190, column: 3, scope: !15681)
!15694 = !DILocation(line: 1193, column: 2, scope: !15672)
!15695 = !DILocation(line: 1191, column: 42, scope: !15696)
!15696 = distinct !DILexicalBlock(scope: !15681, file: !2476, line: 1190, column: 54)
!15697 = !DILocation(line: 1191, column: 12, scope: !15696)
!15698 = !DILocation(line: 1191, column: 22, scope: !15696)
!15699 = distinct !{!15699, !15690, !15700}
!15700 = !DILocation(line: 1192, column: 3, scope: !15671)
!15701 = !DILocation(line: 1195, column: 17, scope: !15650)
!15702 = !DILocation(line: 1195, column: 37, scope: !15650)
!15703 = !DILocation(line: 1195, column: 2, scope: !15650)
!15704 = !DILocation(line: 1196, column: 1, scope: !15650)
!15705 = !DISubprogram(name: "z_rb_foreach_next", scope: !404, file: !404, line: 176, type: !15706, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !317)
!15706 = !DISubroutineType(types: !15707)
!15707 = !{!2400, !15708, !15709}
!15708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15658, size: 32)
!15709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15674, size: 32)
!15710 = !DISubprogram(name: "rb_insert", scope: !404, file: !404, line: 105, type: !15711, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !317)
!15711 = !DISubroutineType(types: !15712)
!15712 = !{null, !15708, !2400}
!15713 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2476, file: !2476, line: 1198, type: !15651, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !15714)
!15714 = !{!15715, !15716}
!15715 = !DILocalVariable(name: "pq", arg: 1, scope: !15713, file: !2476, line: 1198, type: !15653)
!15716 = !DILocalVariable(name: "thread", arg: 2, scope: !15713, file: !2476, line: 1198, type: !2371)
!15717 = !DILocation(line: 0, scope: !15713)
!15718 = !DILocation(line: 1202, column: 17, scope: !15713)
!15719 = !DILocation(line: 1202, column: 37, scope: !15713)
!15720 = !DILocation(line: 1202, column: 2, scope: !15713)
!15721 = !DILocation(line: 1204, column: 16, scope: !15722)
!15722 = distinct !DILexicalBlock(scope: !15713, file: !2476, line: 1204, column: 6)
!15723 = !DILocation(line: 1204, column: 7, scope: !15722)
!15724 = !DILocation(line: 1204, column: 6, scope: !15713)
!15725 = !DILocation(line: 1205, column: 7, scope: !15726)
!15726 = distinct !DILexicalBlock(scope: !15722, file: !2476, line: 1204, column: 22)
!15727 = !DILocation(line: 1205, column: 22, scope: !15726)
!15728 = !DILocation(line: 1206, column: 2, scope: !15726)
!15729 = !DILocation(line: 1207, column: 1, scope: !15713)
!15730 = !DISubprogram(name: "rb_remove", scope: !404, file: !404, line: 110, type: !15711, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !317)
!15731 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2476, file: !2476, line: 1209, type: !15732, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !15734)
!15732 = !DISubroutineType(types: !15733)
!15733 = !{!2371, !15653}
!15734 = !{!15735, !15736, !15737}
!15735 = !DILocalVariable(name: "pq", arg: 1, scope: !15731, file: !2476, line: 1209, type: !15653)
!15736 = !DILocalVariable(name: "thread", scope: !15731, file: !2476, line: 1211, type: !2371)
!15737 = !DILocalVariable(name: "n", scope: !15731, file: !2476, line: 1212, type: !2400)
!15738 = !DILocation(line: 0, scope: !15731)
!15739 = !DILocation(line: 1212, column: 37, scope: !15731)
!15740 = !DILocation(line: 1212, column: 21, scope: !15731)
!15741 = !DILocation(line: 1217, column: 2, scope: !15731)
!15742 = distinct !DISubprogram(name: "rb_get_min", scope: !404, file: !404, line: 115, type: !15743, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !15745)
!15743 = !DISubroutineType(types: !15744)
!15744 = !{!2400, !15708}
!15745 = !{!15746}
!15746 = !DILocalVariable(name: "tree", arg: 1, scope: !15742, file: !404, line: 115, type: !15708)
!15747 = !DILocation(line: 0, scope: !15742)
!15748 = !DILocation(line: 117, column: 9, scope: !15742)
!15749 = !DILocation(line: 117, column: 2, scope: !15742)
!15750 = !DISubprogram(name: "z_rb_get_minmax", scope: !404, file: !404, line: 100, type: !15751, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !317)
!15751 = !DISubroutineType(types: !15752)
!15752 = !{!2400, !15708, !154}
!15753 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2476, file: !2476, line: 1246, type: !15754, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !15764)
!15754 = !DISubroutineType(types: !15755)
!15755 = !{!2371, !15756}
!15756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15757, size: 32)
!15757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !15655, line: 53, size: 2080, elements: !15758)
!15758 = !{!15759, !15763}
!15759 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !15757, file: !15655, line: 54, baseType: !15760, size: 2048)
!15760 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2407, size: 2048, elements: !15761)
!15761 = !{!15762}
!15762 = !DISubrange(count: 32)
!15763 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !15757, file: !15655, line: 55, baseType: !32, size: 32, offset: 2048)
!15764 = !{!15765, !15766, !15767, !15768}
!15765 = !DILocalVariable(name: "pq", arg: 1, scope: !15753, file: !2476, line: 1246, type: !15756)
!15766 = !DILocalVariable(name: "thread", scope: !15753, file: !2476, line: 1252, type: !2371)
!15767 = !DILocalVariable(name: "l", scope: !15753, file: !2476, line: 1253, type: !14563)
!15768 = !DILocalVariable(name: "n", scope: !15753, file: !2476, line: 1254, type: !2472)
!15769 = !DILocation(line: 0, scope: !15753)
!15770 = !DILocation(line: 1248, column: 11, scope: !15771)
!15771 = distinct !DILexicalBlock(scope: !15753, file: !2476, line: 1248, column: 6)
!15772 = !DILocation(line: 1248, column: 7, scope: !15771)
!15773 = !DILocation(line: 1248, column: 6, scope: !15753)
!15774 = !DILocation(line: 1253, column: 31, scope: !15753)
!15775 = !DILocation(line: 1253, column: 20, scope: !15753)
!15776 = !DILocation(line: 1254, column: 19, scope: !15753)
!15777 = !DILocation(line: 1260, column: 1, scope: !15753)
!15778 = distinct !DISubprogram(name: "z_unpend_all", scope: !2476, file: !2476, line: 1262, type: !15779, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !15781)
!15779 = !DISubroutineType(types: !15780)
!15780 = !{!103, !2402}
!15781 = !{!15782, !15783, !15784}
!15782 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15778, file: !2476, line: 1262, type: !2402)
!15783 = !DILocalVariable(name: "need_sched", scope: !15778, file: !2476, line: 1264, type: !103)
!15784 = !DILocalVariable(name: "thread", scope: !15778, file: !2476, line: 1265, type: !2371)
!15785 = !DILocation(line: 0, scope: !15778)
!15786 = !DILocation(line: 1267, column: 19, scope: !15778)
!15787 = !DILocation(line: 1267, column: 41, scope: !15778)
!15788 = !DILocation(line: 1267, column: 2, scope: !15778)
!15789 = !DILocation(line: 1268, column: 3, scope: !15790)
!15790 = distinct !DILexicalBlock(scope: !15778, file: !2476, line: 1267, column: 50)
!15791 = !DILocation(line: 1269, column: 3, scope: !15790)
!15792 = distinct !{!15792, !15788, !15793}
!15793 = !DILocation(line: 1271, column: 2, scope: !15778)
!15794 = !DILocation(line: 1273, column: 2, scope: !15778)
!15795 = distinct !DISubprogram(name: "z_waitq_head", scope: !13189, file: !13189, line: 52, type: !15411, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !15796)
!15796 = !{!15797}
!15797 = !DILocalVariable(name: "w", arg: 1, scope: !15795, file: !13189, line: 52, type: !2402)
!15798 = !DILocation(line: 0, scope: !15795)
!15799 = !DILocation(line: 54, column: 52, scope: !15795)
!15800 = !DILocation(line: 54, column: 28, scope: !15795)
!15801 = !DILocation(line: 54, column: 9, scope: !15795)
!15802 = !DILocation(line: 54, column: 2, scope: !15795)
!15803 = distinct !DISubprogram(name: "init_ready_q", scope: !2476, file: !2476, line: 1276, type: !15804, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !15811)
!15804 = !DISubroutineType(types: !15805)
!15805 = !{null, !15806}
!15806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15807, size: 32)
!15807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !320, line: 83, size: 96, elements: !15808)
!15808 = !{!15809, !15810}
!15809 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !15807, file: !320, line: 86, baseType: !2371, size: 32)
!15810 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !15807, file: !320, line: 90, baseType: !2407, size: 64, offset: 32)
!15811 = !{!15812}
!15812 = !DILocalVariable(name: "rq", arg: 1, scope: !15803, file: !2476, line: 1276, type: !15806)
!15813 = !DILocation(line: 0, scope: !15803)
!15814 = !DILocation(line: 1289, column: 22, scope: !15803)
!15815 = !DILocation(line: 1289, column: 2, scope: !15803)
!15816 = !DILocation(line: 1291, column: 1, scope: !15803)
!15817 = distinct !DISubprogram(name: "sys_dlist_init", scope: !325, file: !325, line: 197, type: !15818, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !15820)
!15818 = !DISubroutineType(types: !15819)
!15819 = !{null, !14563}
!15820 = !{!15821}
!15821 = !DILocalVariable(name: "list", arg: 1, scope: !15817, file: !325, line: 197, type: !14563)
!15822 = !DILocation(line: 0, scope: !15817)
!15823 = !DILocation(line: 199, column: 8, scope: !15817)
!15824 = !DILocation(line: 199, column: 13, scope: !15817)
!15825 = !DILocation(line: 200, column: 8, scope: !15817)
!15826 = !DILocation(line: 200, column: 13, scope: !15817)
!15827 = !DILocation(line: 201, column: 1, scope: !15817)
!15828 = distinct !DISubprogram(name: "z_sched_init", scope: !2476, file: !2476, line: 1293, type: !3213, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !317)
!15829 = !DILocation(line: 1302, column: 2, scope: !15828)
!15830 = !DILocation(line: 1306, column: 2, scope: !15828)
!15831 = !DILocation(line: 1309, column: 1, scope: !15828)
!15832 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2476, file: !2476, line: 1311, type: !15833, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !15836)
!15833 = !DISubroutineType(types: !15834)
!15834 = !{!103, !15835}
!15835 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !379, line: 347, baseType: !2371)
!15836 = !{!15837}
!15837 = !DILocalVariable(name: "thread", arg: 1, scope: !15832, file: !2476, line: 1311, type: !15835)
!15838 = !DILocation(line: 0, scope: !15832)
!15839 = !DILocation(line: 1313, column: 22, scope: !15832)
!15840 = !DILocation(line: 1313, column: 9, scope: !15832)
!15841 = !DILocation(line: 1313, column: 2, scope: !15832)
!15842 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2476, file: !2476, line: 1325, type: !15843, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !15845)
!15843 = !DISubroutineType(types: !15844)
!15844 = !{null, !15835, !103}
!15845 = !{!15846, !15847, !15848}
!15846 = !DILocalVariable(name: "thread", arg: 1, scope: !15842, file: !2476, line: 1325, type: !15835)
!15847 = !DILocalVariable(name: "prio", arg: 2, scope: !15842, file: !2476, line: 1325, type: !103)
!15848 = !DILocalVariable(name: "th", scope: !15842, file: !2476, line: 1334, type: !2371)
!15849 = !DILocation(line: 0, scope: !15842)
!15850 = !DILocation(line: 1336, column: 2, scope: !15842)
!15851 = !DILocation(line: 1337, column: 1, scope: !15842)
!15852 = distinct !DISubprogram(name: "k_can_yield", scope: !2476, file: !2476, line: 1384, type: !6778, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !317)
!15853 = !DILocation(line: 1386, column: 11, scope: !15852)
!15854 = !DILocation(line: 1386, column: 29, scope: !15852)
!15855 = !DILocation(line: 1386, column: 32, scope: !15852)
!15856 = !DILocation(line: 1386, column: 46, scope: !15852)
!15857 = !DILocation(line: 1387, column: 28, scope: !15852)
!15858 = !DILocation(line: 1387, column: 4, scope: !15852)
!15859 = !DILocation(line: 1386, column: 2, scope: !15852)
!15860 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !296, file: !296, line: 989, type: !6778, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !317)
!15861 = !DILocation(line: 993, column: 10, scope: !15860)
!15862 = !DILocation(line: 993, column: 2, scope: !15860)
!15863 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2476, file: !2476, line: 1390, type: !3213, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !15864)
!15864 = !{!15865}
!15865 = !DILocalVariable(name: "key", scope: !15863, file: !2476, line: 1396, type: !14352)
!15866 = !DILocation(line: 0, scope: !14360, inlinedAt: !15867)
!15867 = distinct !DILocation(line: 1396, column: 25, scope: !15863)
!15868 = !DILocation(line: 55, column: 2, scope: !14369, inlinedAt: !15869)
!15869 = distinct !DILocation(line: 145, column: 10, scope: !14360, inlinedAt: !15867)
!15870 = !DILocation(line: 0, scope: !14369, inlinedAt: !15869)
!15871 = !DILocation(line: 0, scope: !15863)
!15872 = !DILocation(line: 1400, column: 18, scope: !15873)
!15873 = distinct !DILexicalBlock(scope: !15874, file: !2476, line: 1399, column: 36)
!15874 = distinct !DILexicalBlock(scope: !15863, file: !2476, line: 1398, column: 6)
!15875 = !DILocation(line: 0, scope: !14529, inlinedAt: !15876)
!15876 = distinct !DILocation(line: 1400, column: 3, scope: !15873)
!15877 = !DILocation(line: 266, column: 15, scope: !14529, inlinedAt: !15876)
!15878 = !DILocation(line: 266, column: 28, scope: !14529, inlinedAt: !15876)
!15879 = !DILocation(line: 0, scope: !14537, inlinedAt: !15880)
!15880 = distinct !DILocation(line: 268, column: 3, scope: !14541, inlinedAt: !15876)
!15881 = !DILocation(line: 234, column: 2, scope: !14537, inlinedAt: !15880)
!15882 = !DILocation(line: 1402, column: 15, scope: !15863)
!15883 = !DILocation(line: 0, scope: !14546, inlinedAt: !15884)
!15884 = distinct !DILocation(line: 1402, column: 2, scope: !15863)
!15885 = !DILocation(line: 252, column: 15, scope: !14546, inlinedAt: !15884)
!15886 = !DILocation(line: 252, column: 28, scope: !14546, inlinedAt: !15884)
!15887 = !DILocation(line: 0, scope: !14553, inlinedAt: !15888)
!15888 = distinct !DILocation(line: 254, column: 3, scope: !14557, inlinedAt: !15884)
!15889 = !DILocation(line: 0, scope: !14560, inlinedAt: !15890)
!15890 = distinct !DILocation(line: 229, column: 2, scope: !14553, inlinedAt: !15888)
!15891 = !DILocation(line: 188, column: 2, scope: !14570, inlinedAt: !15890)
!15892 = !DILocation(line: 188, column: 2, scope: !14572, inlinedAt: !15890)
!15893 = !DILocation(line: 0, scope: !14570, inlinedAt: !15890)
!15894 = !DILocation(line: 189, column: 7, scope: !14575, inlinedAt: !15890)
!15895 = !DILocation(line: 189, column: 35, scope: !14575, inlinedAt: !15890)
!15896 = !DILocation(line: 189, column: 7, scope: !14576, inlinedAt: !15890)
!15897 = !DILocation(line: 191, column: 21, scope: !14580, inlinedAt: !15890)
!15898 = !DILocation(line: 190, column: 4, scope: !14580, inlinedAt: !15890)
!15899 = !DILocation(line: 192, column: 4, scope: !14580, inlinedAt: !15890)
!15900 = distinct !{!15900, !15891, !15901}
!15901 = !DILocation(line: 194, column: 2, scope: !14570, inlinedAt: !15890)
!15902 = !DILocation(line: 196, column: 37, scope: !14560, inlinedAt: !15890)
!15903 = !DILocation(line: 196, column: 2, scope: !14560, inlinedAt: !15890)
!15904 = !DILocation(line: 197, column: 1, scope: !14560, inlinedAt: !15890)
!15905 = !DILocation(line: 1403, column: 2, scope: !15863)
!15906 = !DILocation(line: 0, scope: !14971, inlinedAt: !15907)
!15907 = distinct !DILocation(line: 1404, column: 2, scope: !15863)
!15908 = !DILocation(line: 196, column: 9, scope: !14971, inlinedAt: !15907)
!15909 = !DILocation(line: 1405, column: 1, scope: !15863)
!15910 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2476, file: !2476, line: 1459, type: !15911, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !15913)
!15911 = !DISubroutineType(types: !15912)
!15912 = !{!724, !15151}
!15913 = !{!15914, !15915, !15916}
!15914 = !DILocalVariable(name: "timeout", arg: 1, scope: !15910, file: !2476, line: 1459, type: !15151)
!15915 = !DILocalVariable(name: "ticks", scope: !15910, file: !2476, line: 1461, type: !200)
!15916 = !DILocalVariable(name: "ret", scope: !15910, file: !2476, line: 1480, type: !724)
!15917 = !DILocation(line: 0, scope: !15910)
!15918 = !DILocation(line: 1468, column: 6, scope: !15919)
!15919 = distinct !DILexicalBlock(scope: !15910, file: !2476, line: 1468, column: 6)
!15920 = !DILocation(line: 1468, column: 6, scope: !15910)
!15921 = !DILocation(line: 1469, column: 20, scope: !15922)
!15922 = distinct !DILexicalBlock(scope: !15919, file: !2476, line: 1468, column: 40)
!15923 = !DILocation(line: 1469, column: 3, scope: !15922)
!15924 = !DILocation(line: 1473, column: 3, scope: !15922)
!15925 = !DILocation(line: 1478, column: 10, scope: !15910)
!15926 = !DILocation(line: 1480, column: 16, scope: !15910)
!15927 = !DILocation(line: 1485, column: 1, scope: !15910)
!15928 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3649, file: !3649, line: 310, type: !15929, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !15931)
!15929 = !DISubroutineType(types: !15930)
!15930 = !{null, !15835}
!15931 = !{!15932}
!15932 = !DILocalVariable(name: "thread", arg: 1, scope: !15928, file: !3649, line: 310, type: !15835)
!15933 = !DILocation(line: 0, scope: !15928)
!15934 = !DILocation(line: 319, column: 2, scope: !15935)
!15935 = distinct !DILexicalBlock(scope: !15928, file: !3649, line: 319, column: 2)
!15936 = !{i64 2154193351}
!15937 = !DILocation(line: 320, column: 2, scope: !15928)
!15938 = !DILocation(line: 321, column: 1, scope: !15928)
!15939 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2476, file: !2476, line: 1415, type: !15940, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !15942)
!15940 = !DISubroutineType(types: !15941)
!15941 = !{!724, !200}
!15942 = !{!15943, !15944, !15945, !15946}
!15943 = !DILocalVariable(name: "ticks", arg: 1, scope: !15939, file: !2476, line: 1415, type: !200)
!15944 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !15939, file: !2476, line: 1418, type: !121)
!15945 = !DILocalVariable(name: "timeout", scope: !15939, file: !2476, line: 1430, type: !15151)
!15946 = !DILocalVariable(name: "key", scope: !15939, file: !2476, line: 1437, type: !14352)
!15947 = !DILocation(line: 0, scope: !15939)
!15948 = !DILocation(line: 1425, column: 12, scope: !15949)
!15949 = distinct !DILexicalBlock(scope: !15939, file: !2476, line: 1425, column: 6)
!15950 = !DILocation(line: 1425, column: 6, scope: !15939)
!15951 = !DILocation(line: 1426, column: 3, scope: !15952)
!15952 = distinct !DILexicalBlock(scope: !15949, file: !2476, line: 1425, column: 18)
!15953 = !DILocation(line: 1427, column: 3, scope: !15952)
!15954 = !DILocation(line: 1431, column: 24, scope: !15955)
!15955 = distinct !DILexicalBlock(scope: !15939, file: !2476, line: 1431, column: 6)
!15956 = !DILocation(line: 1431, column: 6, scope: !15939)
!15957 = !DILocation(line: 1432, column: 35, scope: !15958)
!15958 = distinct !DILexicalBlock(scope: !15955, file: !2476, line: 1431, column: 30)
!15959 = !DILocation(line: 1432, column: 27, scope: !15958)
!15960 = !DILocation(line: 1433, column: 2, scope: !15958)
!15961 = !DILocation(line: 1434, column: 27, scope: !15962)
!15962 = distinct !DILexicalBlock(scope: !15955, file: !2476, line: 1433, column: 9)
!15963 = !DILocation(line: 0, scope: !15955)
!15964 = !DILocation(line: 0, scope: !14360, inlinedAt: !15965)
!15965 = distinct !DILocation(line: 1437, column: 25, scope: !15939)
!15966 = !DILocation(line: 55, column: 2, scope: !14369, inlinedAt: !15967)
!15967 = distinct !DILocation(line: 145, column: 10, scope: !14360, inlinedAt: !15965)
!15968 = !DILocation(line: 0, scope: !14369, inlinedAt: !15967)
!15969 = !DILocation(line: 1440, column: 20, scope: !15939)
!15970 = !DILocation(line: 1440, column: 18, scope: !15939)
!15971 = !DILocation(line: 1442, column: 2, scope: !15939)
!15972 = !DILocation(line: 1443, column: 23, scope: !15939)
!15973 = !DILocation(line: 1443, column: 2, scope: !15939)
!15974 = !DILocation(line: 1444, column: 29, scope: !15939)
!15975 = !DILocation(line: 1444, column: 2, scope: !15939)
!15976 = !DILocation(line: 0, scope: !14971, inlinedAt: !15977)
!15977 = distinct !DILocation(line: 1446, column: 8, scope: !15939)
!15978 = !DILocation(line: 196, column: 9, scope: !14971, inlinedAt: !15977)
!15979 = !DILocation(line: 1450, column: 10, scope: !15939)
!15980 = !DILocation(line: 1450, column: 45, scope: !15939)
!15981 = !DILocation(line: 1450, column: 43, scope: !15939)
!15982 = !DILocation(line: 1451, column: 6, scope: !15939)
!15983 = !DILocation(line: 1457, column: 1, scope: !15939)
!15984 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !13424, file: !13424, line: 1103, type: !13425, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !15985)
!15985 = !{!15986}
!15986 = !DILocalVariable(name: "t", arg: 1, scope: !15984, file: !13424, line: 1103, type: !1578)
!15987 = !DILocation(line: 0, scope: !15984)
!15988 = !DILocation(line: 0, scope: !14407, inlinedAt: !15989)
!15989 = distinct !DILocation(line: 1106, column: 9, scope: !15984)
!15990 = !DILocation(line: 139, column: 13, scope: !15991, inlinedAt: !15989)
!15991 = distinct !DILexicalBlock(scope: !15992, file: !13424, line: 138, column: 10)
!15992 = distinct !DILexicalBlock(scope: !15993, file: !13424, line: 136, column: 7)
!15993 = distinct !DILexicalBlock(scope: !14428, file: !13424, line: 134, column: 17)
!15994 = !DILocation(line: 1106, column: 2, scope: !15984)
!15995 = distinct !DISubprogram(name: "k_yield", scope: !3649, file: !3649, line: 140, type: !3213, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !317)
!15996 = !DILocation(line: 148, column: 2, scope: !15997)
!15997 = distinct !DILexicalBlock(scope: !15995, file: !3649, line: 148, column: 2)
!15998 = !{i64 2154192671}
!15999 = !DILocation(line: 149, column: 2, scope: !15995)
!16000 = !DILocation(line: 150, column: 1, scope: !15995)
!16001 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2476, file: !2476, line: 1495, type: !16002, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !16004)
!16002 = !DISubroutineType(types: !16003)
!16003 = !{!724, !103}
!16004 = !{!16005, !16006}
!16005 = !DILocalVariable(name: "us", arg: 1, scope: !16001, file: !2476, line: 1495, type: !103)
!16006 = !DILocalVariable(name: "ticks", scope: !16001, file: !2476, line: 1497, type: !724)
!16007 = !DILocation(line: 0, scope: !16001)
!16008 = !DILocation(line: 1501, column: 31, scope: !16001)
!16009 = !DILocation(line: 1501, column: 10, scope: !16001)
!16010 = !DILocation(line: 1502, column: 23, scope: !16001)
!16011 = !DILocation(line: 1502, column: 10, scope: !16001)
!16012 = !DILocation(line: 1506, column: 31, scope: !16001)
!16013 = !DILocation(line: 1506, column: 9, scope: !16001)
!16014 = !DILocation(line: 1506, column: 2, scope: !16001)
!16015 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !13424, file: !13424, line: 571, type: !13425, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !16016)
!16016 = !{!16017}
!16017 = !DILocalVariable(name: "t", arg: 1, scope: !16015, file: !13424, line: 571, type: !1578)
!16018 = !DILocation(line: 0, scope: !16015)
!16019 = !DILocation(line: 0, scope: !14407, inlinedAt: !16020)
!16020 = distinct !DILocation(line: 574, column: 9, scope: !16015)
!16021 = !DILocation(line: 135, column: 5, scope: !15993, inlinedAt: !16020)
!16022 = !DILocation(line: 139, column: 13, scope: !15991, inlinedAt: !16020)
!16023 = !DILocation(line: 574, column: 2, scope: !16015)
!16024 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !13424, file: !13424, line: 1187, type: !13425, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !16025)
!16025 = !{!16026}
!16026 = !DILocalVariable(name: "t", arg: 1, scope: !16024, file: !13424, line: 1187, type: !1578)
!16027 = !DILocation(line: 0, scope: !16024)
!16028 = !DILocation(line: 0, scope: !14407, inlinedAt: !16029)
!16029 = distinct !DILocation(line: 1190, column: 9, scope: !16024)
!16030 = !DILocation(line: 145, column: 13, scope: !16031, inlinedAt: !16029)
!16031 = distinct !DILexicalBlock(scope: !14425, file: !13424, line: 144, column: 10)
!16032 = !DILocation(line: 1190, column: 2, scope: !16024)
!16033 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2476, file: !2476, line: 1517, type: !15929, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !16034)
!16034 = !{!16035}
!16035 = !DILocalVariable(name: "thread", arg: 1, scope: !16033, file: !2476, line: 1517, type: !15835)
!16036 = !DILocation(line: 0, scope: !16033)
!16037 = !DILocation(line: 1521, column: 6, scope: !16038)
!16038 = distinct !DILexicalBlock(scope: !16033, file: !2476, line: 1521, column: 6)
!16039 = !DILocation(line: 1521, column: 6, scope: !16033)
!16040 = !DILocation(line: 1525, column: 6, scope: !16041)
!16041 = distinct !DILexicalBlock(scope: !16033, file: !2476, line: 1525, column: 6)
!16042 = !DILocation(line: 1525, column: 37, scope: !16041)
!16043 = !DILocation(line: 1525, column: 6, scope: !16033)
!16044 = !DILocation(line: 1527, column: 20, scope: !16045)
!16045 = distinct !DILexicalBlock(scope: !16046, file: !2476, line: 1527, column: 7)
!16046 = distinct !DILexicalBlock(scope: !16041, file: !2476, line: 1525, column: 42)
!16047 = !DILocation(line: 1527, column: 33, scope: !16045)
!16048 = !DILocation(line: 1527, column: 7, scope: !16046)
!16049 = !DILocation(line: 1532, column: 2, scope: !16033)
!16050 = !DILocation(line: 1533, column: 2, scope: !16033)
!16051 = !DILocation(line: 1031, column: 3, scope: !15004, inlinedAt: !16052)
!16052 = distinct !DILocation(line: 48, column: 10, scope: !15008, inlinedAt: !16053)
!16053 = distinct !DILocation(line: 1537, column: 7, scope: !16054)
!16054 = distinct !DILexicalBlock(scope: !16033, file: !2476, line: 1537, column: 6)
!16055 = !DILocation(line: 0, scope: !15004, inlinedAt: !16052)
!16056 = !DILocation(line: 48, column: 9, scope: !15008, inlinedAt: !16053)
!16057 = !DILocation(line: 1537, column: 6, scope: !16033)
!16058 = !DILocation(line: 1538, column: 3, scope: !16059)
!16059 = distinct !DILexicalBlock(scope: !16054, file: !2476, line: 1537, column: 25)
!16060 = !DILocation(line: 1539, column: 2, scope: !16059)
!16061 = !DILocation(line: 1540, column: 1, scope: !16033)
!16062 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !12865, file: !12865, line: 101, type: !14478, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !16063)
!16063 = !{!16064}
!16064 = !DILocalVariable(name: "thread", arg: 1, scope: !16062, file: !12865, line: 101, type: !2371)
!16065 = !DILocation(line: 0, scope: !16062)
!16066 = !DILocation(line: 103, column: 23, scope: !16062)
!16067 = !DILocation(line: 103, column: 36, scope: !16062)
!16068 = !DILocation(line: 103, column: 55, scope: !16062)
!16069 = !DILocation(line: 103, column: 2, scope: !16062)
!16070 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2476, file: !2476, line: 1567, type: !16071, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !16073)
!16071 = !DISubroutineType(types: !16072)
!16072 = !{!15835}
!16073 = !{!16074}
!16074 = !DILocalVariable(name: "ret", scope: !16070, file: !2476, line: 1577, type: !15835)
!16075 = !DILocation(line: 1577, column: 30, scope: !16070)
!16076 = !DILocation(line: 0, scope: !16070)
!16077 = !DILocation(line: 1582, column: 2, scope: !16070)
!16078 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2476, file: !2476, line: 1593, type: !7052, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !317)
!16079 = !DILocation(line: 1031, column: 3, scope: !15004, inlinedAt: !16080)
!16080 = distinct !DILocation(line: 48, column: 10, scope: !15008, inlinedAt: !16081)
!16081 = distinct !DILocation(line: 1595, column: 10, scope: !16078)
!16082 = !DILocation(line: 0, scope: !15004, inlinedAt: !16080)
!16083 = !DILocation(line: 48, column: 9, scope: !15008, inlinedAt: !16081)
!16084 = !DILocation(line: 1595, column: 27, scope: !16078)
!16085 = !DILocation(line: 1595, column: 41, scope: !16078)
!16086 = !DILocation(line: 1595, column: 30, scope: !16078)
!16087 = !DILocation(line: 1595, column: 2, scope: !16078)
!16088 = distinct !DISubprogram(name: "z_thread_abort", scope: !2476, file: !2476, line: 1725, type: !14318, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !16089)
!16089 = !{!16090, !16091}
!16090 = !DILocalVariable(name: "thread", arg: 1, scope: !16088, file: !2476, line: 1725, type: !2371)
!16091 = !DILocalVariable(name: "key", scope: !16088, file: !2476, line: 1727, type: !14352)
!16092 = !DILocation(line: 0, scope: !16088)
!16093 = !DILocation(line: 0, scope: !14360, inlinedAt: !16094)
!16094 = distinct !DILocation(line: 1727, column: 25, scope: !16088)
!16095 = !DILocation(line: 55, column: 2, scope: !14369, inlinedAt: !16096)
!16096 = distinct !DILocation(line: 145, column: 10, scope: !14360, inlinedAt: !16094)
!16097 = !DILocation(line: 0, scope: !14369, inlinedAt: !16096)
!16098 = !DILocation(line: 1729, column: 20, scope: !16099)
!16099 = distinct !DILexicalBlock(scope: !16088, file: !2476, line: 1729, column: 6)
!16100 = !DILocation(line: 1729, column: 33, scope: !16099)
!16101 = !DILocation(line: 1729, column: 48, scope: !16099)
!16102 = !DILocation(line: 1729, column: 6, scope: !16088)
!16103 = !DILocation(line: 0, scope: !14387, inlinedAt: !16104)
!16104 = distinct !DILocation(line: 1730, column: 3, scope: !16105)
!16105 = distinct !DILexicalBlock(scope: !16099, file: !2476, line: 1729, column: 54)
!16106 = !DILocation(line: 0, scope: !14395, inlinedAt: !16107)
!16107 = distinct !DILocation(line: 215, column: 2, scope: !14387, inlinedAt: !16104)
!16108 = !DILocation(line: 95, column: 2, scope: !14395, inlinedAt: !16107)
!16109 = !DILocation(line: 1732, column: 3, scope: !16110)
!16110 = distinct !DILexicalBlock(scope: !16105, file: !2476, line: 1732, column: 3)
!16111 = !{i64 2154930081, i64 2154930097, i64 2154930123, i64 2154930151, i64 2154930171}
!16112 = !DILocation(line: 1733, column: 3, scope: !16105)
!16113 = !DILocation(line: 1736, column: 20, scope: !16114)
!16114 = distinct !DILexicalBlock(scope: !16088, file: !2476, line: 1736, column: 6)
!16115 = !DILocation(line: 1736, column: 33, scope: !16114)
!16116 = !DILocation(line: 1736, column: 49, scope: !16114)
!16117 = !DILocation(line: 1736, column: 6, scope: !16088)
!16118 = !DILocation(line: 0, scope: !14387, inlinedAt: !16119)
!16119 = distinct !DILocation(line: 1737, column: 3, scope: !16120)
!16120 = distinct !DILexicalBlock(scope: !16114, file: !2476, line: 1736, column: 56)
!16121 = !DILocation(line: 0, scope: !14395, inlinedAt: !16122)
!16122 = distinct !DILocation(line: 215, column: 2, scope: !14387, inlinedAt: !16119)
!16123 = !DILocation(line: 95, column: 2, scope: !14395, inlinedAt: !16122)
!16124 = !DILocation(line: 1738, column: 3, scope: !16120)
!16125 = !DILocation(line: 1775, column: 2, scope: !16088)
!16126 = !DILocation(line: 1776, column: 16, scope: !16127)
!16127 = distinct !DILexicalBlock(scope: !16088, file: !2476, line: 1776, column: 6)
!16128 = !DILocation(line: 1776, column: 13, scope: !16127)
!16129 = !DILocation(line: 1776, column: 25, scope: !16127)
!16130 = !DILocation(line: 1031, column: 3, scope: !15004, inlinedAt: !16131)
!16131 = distinct !DILocation(line: 48, column: 10, scope: !15008, inlinedAt: !16132)
!16132 = distinct !DILocation(line: 1776, column: 29, scope: !16127)
!16133 = !DILocation(line: 0, scope: !15004, inlinedAt: !16131)
!16134 = !DILocation(line: 48, column: 9, scope: !15008, inlinedAt: !16132)
!16135 = !DILocation(line: 1776, column: 6, scope: !16088)
!16136 = !DILocation(line: 0, scope: !14971, inlinedAt: !16137)
!16137 = distinct !DILocation(line: 1777, column: 3, scope: !16138)
!16138 = distinct !DILexicalBlock(scope: !16127, file: !2476, line: 1776, column: 47)
!16139 = !DILocation(line: 196, column: 9, scope: !14971, inlinedAt: !16137)
!16140 = !DILocation(line: 1779, column: 2, scope: !16138)
!16141 = !DILocation(line: 0, scope: !14387, inlinedAt: !16142)
!16142 = distinct !DILocation(line: 1780, column: 2, scope: !16088)
!16143 = !DILocation(line: 0, scope: !14395, inlinedAt: !16144)
!16144 = distinct !DILocation(line: 215, column: 2, scope: !14387, inlinedAt: !16142)
!16145 = !DILocation(line: 95, column: 2, scope: !14395, inlinedAt: !16144)
!16146 = !DILocation(line: 1781, column: 1, scope: !16088)
!16147 = distinct !DISubprogram(name: "end_thread", scope: !2476, file: !2476, line: 1690, type: !14318, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !16148)
!16148 = !{!16149}
!16149 = !DILocalVariable(name: "thread", arg: 1, scope: !16147, file: !2476, line: 1690, type: !2371)
!16150 = !DILocation(line: 0, scope: !16147)
!16151 = !DILocation(line: 1695, column: 20, scope: !16152)
!16152 = distinct !DILexicalBlock(scope: !16147, file: !2476, line: 1695, column: 6)
!16153 = !DILocation(line: 1695, column: 33, scope: !16152)
!16154 = !DILocation(line: 1695, column: 49, scope: !16152)
!16155 = !DILocation(line: 1695, column: 6, scope: !16147)
!16156 = !DILocation(line: 1697, column: 29, scope: !16157)
!16157 = distinct !DILexicalBlock(scope: !16152, file: !2476, line: 1695, column: 56)
!16158 = !DILocation(line: 1698, column: 7, scope: !16159)
!16159 = distinct !DILexicalBlock(scope: !16157, file: !2476, line: 1698, column: 7)
!16160 = !DILocation(line: 1698, column: 7, scope: !16157)
!16161 = !DILocation(line: 0, scope: !14529, inlinedAt: !16162)
!16162 = distinct !DILocation(line: 1699, column: 4, scope: !16163)
!16163 = distinct !DILexicalBlock(scope: !16159, file: !2476, line: 1698, column: 35)
!16164 = !DILocation(line: 266, column: 28, scope: !14529, inlinedAt: !16162)
!16165 = !DILocation(line: 0, scope: !14537, inlinedAt: !16166)
!16166 = distinct !DILocation(line: 268, column: 3, scope: !14541, inlinedAt: !16162)
!16167 = !DILocation(line: 234, column: 2, scope: !14537, inlinedAt: !16166)
!16168 = !DILocation(line: 1700, column: 3, scope: !16163)
!16169 = !DILocation(line: 1701, column: 20, scope: !16170)
!16170 = distinct !DILexicalBlock(scope: !16157, file: !2476, line: 1701, column: 7)
!16171 = !DILocation(line: 1701, column: 30, scope: !16170)
!16172 = !DILocation(line: 1701, column: 7, scope: !16157)
!16173 = !DILocation(line: 1702, column: 4, scope: !16174)
!16174 = distinct !DILexicalBlock(scope: !16170, file: !2476, line: 1701, column: 39)
!16175 = !DILocation(line: 1703, column: 3, scope: !16174)
!16176 = !DILocation(line: 1704, column: 9, scope: !16157)
!16177 = !DILocation(line: 1705, column: 23, scope: !16157)
!16178 = !DILocation(line: 1705, column: 3, scope: !16157)
!16179 = !DILocation(line: 1706, column: 3, scope: !16157)
!16180 = !DILocation(line: 1722, column: 2, scope: !16157)
!16181 = !DILocation(line: 1723, column: 1, scope: !16147)
!16182 = distinct !DISubprogram(name: "unpend_all", scope: !2476, file: !2476, line: 1674, type: !16183, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !16185)
!16183 = !DISubroutineType(types: !16184)
!16184 = !{null, !2402}
!16185 = !{!16186, !16187}
!16186 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16182, file: !2476, line: 1674, type: !2402)
!16187 = !DILocalVariable(name: "thread", scope: !16182, file: !2476, line: 1676, type: !2371)
!16188 = !DILocation(line: 0, scope: !16182)
!16189 = !DILocation(line: 1678, column: 19, scope: !16182)
!16190 = !DILocation(line: 1678, column: 41, scope: !16182)
!16191 = !DILocation(line: 1678, column: 2, scope: !16182)
!16192 = !DILocation(line: 1679, column: 3, scope: !16193)
!16193 = distinct !DILexicalBlock(scope: !16182, file: !2476, line: 1678, column: 50)
!16194 = !DILocation(line: 1680, column: 9, scope: !16193)
!16195 = !DILocalVariable(name: "thread", arg: 1, scope: !16196, file: !12885, line: 65, type: !2371)
!16196 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12885, file: !12885, line: 65, type: !16197, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !16199)
!16197 = !DISubroutineType(types: !16198)
!16198 = !{null, !2371, !32}
!16199 = !{!16195, !16200}
!16200 = !DILocalVariable(name: "value", arg: 2, scope: !16196, file: !12885, line: 65, type: !32)
!16201 = !DILocation(line: 0, scope: !16196, inlinedAt: !16202)
!16202 = distinct !DILocation(line: 1681, column: 3, scope: !16193)
!16203 = !DILocation(line: 67, column: 15, scope: !16196, inlinedAt: !16202)
!16204 = !DILocation(line: 67, column: 33, scope: !16196, inlinedAt: !16202)
!16205 = !DILocation(line: 1682, column: 3, scope: !16193)
!16206 = distinct !{!16206, !16191, !16207}
!16207 = !DILocation(line: 1683, column: 2, scope: !16182)
!16208 = !DILocation(line: 1684, column: 1, scope: !16182)
!16209 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2476, file: !2476, line: 1794, type: !16210, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !16212)
!16210 = !DISubroutineType(types: !16211)
!16211 = !{!103, !2371, !15151}
!16212 = !{!16213, !16214, !16215, !16216}
!16213 = !DILocalVariable(name: "thread", arg: 1, scope: !16209, file: !2476, line: 1794, type: !2371)
!16214 = !DILocalVariable(name: "timeout", arg: 2, scope: !16209, file: !2476, line: 1794, type: !15151)
!16215 = !DILocalVariable(name: "key", scope: !16209, file: !2476, line: 1796, type: !14352)
!16216 = !DILocalVariable(name: "ret", scope: !16209, file: !2476, line: 1797, type: !103)
!16217 = !DILocation(line: 0, scope: !16209)
!16218 = !DILocation(line: 0, scope: !14360, inlinedAt: !16219)
!16219 = distinct !DILocation(line: 1796, column: 25, scope: !16209)
!16220 = !DILocation(line: 55, column: 2, scope: !14369, inlinedAt: !16221)
!16221 = distinct !DILocation(line: 145, column: 10, scope: !14360, inlinedAt: !16219)
!16222 = !DILocation(line: 0, scope: !14369, inlinedAt: !16221)
!16223 = !DILocation(line: 1801, column: 20, scope: !16224)
!16224 = distinct !DILexicalBlock(scope: !16209, file: !2476, line: 1801, column: 6)
!16225 = !DILocation(line: 1801, column: 33, scope: !16224)
!16226 = !DILocation(line: 1801, column: 49, scope: !16224)
!16227 = !DILocation(line: 1801, column: 6, scope: !16209)
!16228 = !DILocation(line: 1803, column: 13, scope: !16229)
!16229 = distinct !DILexicalBlock(scope: !16224, file: !2476, line: 1803, column: 13)
!16230 = !DILocation(line: 1803, column: 13, scope: !16224)
!16231 = !DILocation(line: 1805, column: 24, scope: !16232)
!16232 = distinct !DILexicalBlock(scope: !16229, file: !2476, line: 1805, column: 13)
!16233 = !DILocation(line: 1805, column: 21, scope: !16232)
!16234 = !DILocation(line: 1805, column: 34, scope: !16232)
!16235 = !DILocation(line: 1806, column: 20, scope: !16232)
!16236 = !DILocation(line: 1806, column: 44, scope: !16232)
!16237 = !DILocation(line: 1806, column: 30, scope: !16232)
!16238 = !DILocation(line: 1805, column: 13, scope: !16229)
!16239 = !DILocation(line: 1810, column: 42, scope: !16240)
!16240 = distinct !DILexicalBlock(scope: !16232, file: !2476, line: 1808, column: 9)
!16241 = !DILocation(line: 1810, column: 3, scope: !16240)
!16242 = !DILocation(line: 1811, column: 22, scope: !16240)
!16243 = !DILocation(line: 1811, column: 3, scope: !16240)
!16244 = !DILocation(line: 0, scope: !14971, inlinedAt: !16245)
!16245 = distinct !DILocation(line: 1814, column: 9, scope: !16240)
!16246 = !DILocation(line: 196, column: 9, scope: !14971, inlinedAt: !16245)
!16247 = !DILocation(line: 1817, column: 3, scope: !16240)
!16248 = !DILocation(line: 0, scope: !16224)
!16249 = !DILocation(line: 0, scope: !14387, inlinedAt: !16250)
!16250 = distinct !DILocation(line: 1822, column: 2, scope: !16209)
!16251 = !DILocation(line: 0, scope: !14395, inlinedAt: !16252)
!16252 = distinct !DILocation(line: 215, column: 2, scope: !14387, inlinedAt: !16250)
!16253 = !DILocation(line: 95, column: 2, scope: !14395, inlinedAt: !16252)
!16254 = !DILocation(line: 1823, column: 2, scope: !16209)
!16255 = !DILocation(line: 1824, column: 1, scope: !16209)
!16256 = distinct !DISubprogram(name: "z_sched_wake", scope: !2476, file: !2476, line: 1882, type: !16257, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !16259)
!16257 = !DISubroutineType(types: !16258)
!16258 = !{!157, !2402, !103, !102}
!16259 = !{!16260, !16261, !16262, !16263, !16264, !16265, !16267}
!16260 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16256, file: !2476, line: 1882, type: !2402)
!16261 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !16256, file: !2476, line: 1882, type: !103)
!16262 = !DILocalVariable(name: "swap_data", arg: 3, scope: !16256, file: !2476, line: 1882, type: !102)
!16263 = !DILocalVariable(name: "thread", scope: !16256, file: !2476, line: 1884, type: !2371)
!16264 = !DILocalVariable(name: "ret", scope: !16256, file: !2476, line: 1885, type: !157)
!16265 = !DILocalVariable(name: "__i", scope: !16266, file: !2476, line: 1887, type: !14352)
!16266 = distinct !DILexicalBlock(scope: !16256, file: !2476, line: 1887, column: 2)
!16267 = !DILocalVariable(name: "__key", scope: !16266, file: !2476, line: 1887, type: !14352)
!16268 = !DILocation(line: 0, scope: !16256)
!16269 = !DILocation(line: 0, scope: !16266)
!16270 = !DILocation(line: 0, scope: !14360, inlinedAt: !16271)
!16271 = distinct !DILocation(line: 1887, column: 2, scope: !16266)
!16272 = !DILocation(line: 55, column: 2, scope: !14369, inlinedAt: !16273)
!16273 = distinct !DILocation(line: 145, column: 10, scope: !14360, inlinedAt: !16271)
!16274 = !DILocation(line: 0, scope: !14369, inlinedAt: !16273)
!16275 = !DILocation(line: 1888, column: 12, scope: !16276)
!16276 = distinct !DILexicalBlock(scope: !16277, file: !2476, line: 1887, column: 26)
!16277 = distinct !DILexicalBlock(scope: !16266, file: !2476, line: 1887, column: 2)
!16278 = !DILocation(line: 1890, column: 14, scope: !16279)
!16279 = distinct !DILexicalBlock(scope: !16276, file: !2476, line: 1890, column: 7)
!16280 = !DILocation(line: 1890, column: 7, scope: !16276)
!16281 = !DILocalVariable(name: "thread", arg: 1, scope: !16282, file: !13758, line: 134, type: !2371)
!16282 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !13758, file: !13758, line: 134, type: !16283, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !16285)
!16283 = !DISubroutineType(types: !16284)
!16284 = !{null, !2371, !32, !102}
!16285 = !{!16281, !16286, !16287}
!16286 = !DILocalVariable(name: "value", arg: 2, scope: !16282, file: !13758, line: 135, type: !32)
!16287 = !DILocalVariable(name: "data", arg: 3, scope: !16282, file: !13758, line: 136, type: !102)
!16288 = !DILocation(line: 0, scope: !16282, inlinedAt: !16289)
!16289 = distinct !DILocation(line: 1891, column: 4, scope: !16290)
!16290 = distinct !DILexicalBlock(scope: !16279, file: !2476, line: 1890, column: 23)
!16291 = !DILocation(line: 0, scope: !16196, inlinedAt: !16292)
!16292 = distinct !DILocation(line: 138, column: 2, scope: !16282, inlinedAt: !16289)
!16293 = !DILocation(line: 67, column: 15, scope: !16196, inlinedAt: !16292)
!16294 = !DILocation(line: 67, column: 33, scope: !16196, inlinedAt: !16292)
!16295 = !DILocation(line: 139, column: 15, scope: !16282, inlinedAt: !16289)
!16296 = !DILocation(line: 139, column: 25, scope: !16282, inlinedAt: !16289)
!16297 = !DILocation(line: 1894, column: 4, scope: !16290)
!16298 = !DILocation(line: 1895, column: 10, scope: !16290)
!16299 = !DILocation(line: 1896, column: 4, scope: !16290)
!16300 = !DILocation(line: 1898, column: 3, scope: !16290)
!16301 = !DILocation(line: 0, scope: !14387, inlinedAt: !16302)
!16302 = distinct !DILocation(line: 1887, column: 2, scope: !16277)
!16303 = !DILocation(line: 0, scope: !14395, inlinedAt: !16304)
!16304 = distinct !DILocation(line: 215, column: 2, scope: !14387, inlinedAt: !16302)
!16305 = !DILocation(line: 95, column: 2, scope: !14395, inlinedAt: !16304)
!16306 = !DILocation(line: 1901, column: 2, scope: !16256)
!16307 = distinct !DISubprogram(name: "z_sched_wait", scope: !2476, file: !2476, line: 1904, type: !16308, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !16310)
!16308 = !DISubroutineType(types: !16309)
!16309 = !{!103, !14363, !14352, !2402, !15151, !3177}
!16310 = !{!16311, !16312, !16313, !16314, !16315, !16316}
!16311 = !DILocalVariable(name: "lock", arg: 1, scope: !16307, file: !2476, line: 1904, type: !14363)
!16312 = !DILocalVariable(name: "key", arg: 2, scope: !16307, file: !2476, line: 1904, type: !14352)
!16313 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16307, file: !2476, line: 1905, type: !2402)
!16314 = !DILocalVariable(name: "timeout", arg: 4, scope: !16307, file: !2476, line: 1905, type: !15151)
!16315 = !DILocalVariable(name: "data", arg: 5, scope: !16307, file: !2476, line: 1905, type: !3177)
!16316 = !DILocalVariable(name: "ret", scope: !16307, file: !2476, line: 1907, type: !103)
!16317 = !DILocation(line: 0, scope: !16307)
!16318 = !DILocation(line: 1907, column: 12, scope: !16307)
!16319 = !DILocation(line: 1909, column: 11, scope: !16320)
!16320 = distinct !DILexicalBlock(scope: !16307, file: !2476, line: 1909, column: 6)
!16321 = !DILocation(line: 1909, column: 6, scope: !16307)
!16322 = !DILocation(line: 1910, column: 11, scope: !16323)
!16323 = distinct !DILexicalBlock(scope: !16320, file: !2476, line: 1909, column: 20)
!16324 = !DILocation(line: 1910, column: 26, scope: !16323)
!16325 = !DILocation(line: 1910, column: 9, scope: !16323)
!16326 = !DILocation(line: 1911, column: 2, scope: !16323)
!16327 = !DILocation(line: 1912, column: 2, scope: !16307)
!16328 = distinct !DISubprogram(name: "z_data_copy", scope: !16329, file: !16329, line: 22, type: !3213, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3194, retainedNodes: !317)
!16329 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16330 = !DILocation(line: 24, column: 2, scope: !16328)
!16331 = !DILocation(line: 27, column: 2, scope: !16328)
!16332 = !DILocation(line: 71, column: 1, scope: !16328)
!16333 = distinct !DISubprogram(name: "z_add_timeout", scope: !2513, file: !2513, line: 88, type: !16334, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2483, retainedNodes: !16340)
!16334 = !DISubroutineType(types: !16335)
!16335 = !{null, !2486, !2505, !16336}
!16336 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !201, line: 67, baseType: !16337)
!16337 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 65, size: 64, elements: !16338)
!16338 = !{!16339}
!16339 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16337, file: !201, line: 66, baseType: !200, size: 64)
!16340 = !{!16341, !16342, !16343, !16344, !16350, !16351, !16354, !16357}
!16341 = !DILocalVariable(name: "to", arg: 1, scope: !16333, file: !2513, line: 88, type: !2486)
!16342 = !DILocalVariable(name: "fn", arg: 2, scope: !16333, file: !2513, line: 88, type: !2505)
!16343 = !DILocalVariable(name: "timeout", arg: 3, scope: !16333, file: !2513, line: 89, type: !16336)
!16344 = !DILocalVariable(name: "__i", scope: !16345, file: !2513, line: 102, type: !16346)
!16345 = distinct !DILexicalBlock(scope: !16333, file: !2513, line: 102, column: 2)
!16346 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !316, line: 106, baseType: !16347)
!16347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !316, line: 32, size: 32, elements: !16348)
!16348 = !{!16349}
!16349 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16347, file: !316, line: 33, baseType: !103, size: 32)
!16350 = !DILocalVariable(name: "__key", scope: !16345, file: !2513, line: 102, type: !16346)
!16351 = !DILocalVariable(name: "t", scope: !16352, file: !2513, line: 103, type: !2486)
!16352 = distinct !DILexicalBlock(scope: !16353, file: !2513, line: 102, column: 24)
!16353 = distinct !DILexicalBlock(scope: !16345, file: !2513, line: 102, column: 2)
!16354 = !DILocalVariable(name: "ticks", scope: !16355, file: !2513, line: 107, type: !200)
!16355 = distinct !DILexicalBlock(scope: !16356, file: !2513, line: 106, column: 39)
!16356 = distinct !DILexicalBlock(scope: !16352, file: !2513, line: 105, column: 7)
!16357 = !DILocalVariable(name: "next_time", scope: !16358, file: !2513, line: 137, type: !724)
!16358 = distinct !DILexicalBlock(scope: !16359, file: !2513, line: 127, column: 22)
!16359 = distinct !DILexicalBlock(scope: !16352, file: !2513, line: 127, column: 7)
!16360 = !DILocation(line: 0, scope: !16333)
!16361 = !DILocation(line: 91, column: 6, scope: !16362)
!16362 = distinct !DILexicalBlock(scope: !16333, file: !2513, line: 91, column: 6)
!16363 = !DILocation(line: 91, column: 6, scope: !16333)
!16364 = !DILocation(line: 100, column: 6, scope: !16333)
!16365 = !DILocation(line: 100, column: 9, scope: !16333)
!16366 = !DILocation(line: 0, scope: !16345)
!16367 = !DILocalVariable(name: "l", arg: 1, scope: !16368, file: !316, line: 136, type: !16371)
!16368 = distinct !DISubprogram(name: "k_spin_lock", scope: !316, file: !316, line: 136, type: !16369, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2483, retainedNodes: !16372)
!16369 = !DISubroutineType(types: !16370)
!16370 = !{!16346, !16371}
!16371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2514, size: 32)
!16372 = !{!16367, !16373}
!16373 = !DILocalVariable(name: "k", scope: !16368, file: !316, line: 139, type: !16346)
!16374 = !DILocation(line: 0, scope: !16368, inlinedAt: !16375)
!16375 = distinct !DILocation(line: 102, column: 2, scope: !16345)
!16376 = !DILocation(line: 55, column: 2, scope: !16377, inlinedAt: !16381)
!16377 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5768, file: !5768, line: 42, type: !5769, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2483, retainedNodes: !16378)
!16378 = !{!16379, !16380}
!16379 = !DILocalVariable(name: "key", scope: !16377, file: !5768, line: 44, type: !32)
!16380 = !DILocalVariable(name: "tmp", scope: !16377, file: !5768, line: 53, type: !32)
!16381 = distinct !DILocation(line: 145, column: 10, scope: !16368, inlinedAt: !16375)
!16382 = !{i64 2042689}
!16383 = !DILocation(line: 0, scope: !16377, inlinedAt: !16381)
!16384 = !DILocation(line: 106, column: 33, scope: !16356)
!16385 = !DILocation(line: 105, column: 7, scope: !16352)
!16386 = !DILocation(line: 107, column: 50, scope: !16355)
!16387 = !DILocation(line: 107, column: 48, scope: !16355)
!16388 = !DILocation(line: 0, scope: !16355)
!16389 = !DILocation(line: 109, column: 17, scope: !16355)
!16390 = !DILocation(line: 110, column: 3, scope: !16355)
!16391 = !DILocation(line: 111, column: 31, scope: !16392)
!16392 = distinct !DILexicalBlock(scope: !16356, file: !2513, line: 110, column: 10)
!16393 = !DILocation(line: 111, column: 37, scope: !16392)
!16394 = !DILocation(line: 111, column: 35, scope: !16392)
!16395 = !DILocation(line: 0, scope: !16356)
!16396 = !DILocation(line: 109, column: 8, scope: !16355)
!16397 = !DILocation(line: 109, column: 15, scope: !16355)
!16398 = !DILocation(line: 114, column: 12, scope: !16399)
!16399 = distinct !DILexicalBlock(scope: !16352, file: !2513, line: 114, column: 3)
!16400 = !DILocation(line: 0, scope: !16352)
!16401 = !DILocation(line: 114, column: 3, scope: !16399)
!16402 = !DILocation(line: 115, column: 24, scope: !16403)
!16403 = distinct !DILexicalBlock(scope: !16404, file: !2513, line: 115, column: 8)
!16404 = distinct !DILexicalBlock(scope: !16405, file: !2513, line: 114, column: 45)
!16405 = distinct !DILexicalBlock(scope: !16399, file: !2513, line: 114, column: 3)
!16406 = !DILocation(line: 115, column: 11, scope: !16403)
!16407 = !DILocation(line: 115, column: 18, scope: !16403)
!16408 = !DILocation(line: 115, column: 8, scope: !16404)
!16409 = !DILocation(line: 116, column: 15, scope: !16410)
!16410 = distinct !DILexicalBlock(scope: !16403, file: !2513, line: 115, column: 32)
!16411 = !DILocation(line: 117, column: 26, scope: !16410)
!16412 = !DILocation(line: 117, column: 37, scope: !16410)
!16413 = !DILocation(line: 117, column: 5, scope: !16410)
!16414 = !DILocation(line: 123, column: 7, scope: !16352)
!16415 = !DILocation(line: 120, column: 15, scope: !16404)
!16416 = !DILocation(line: 114, column: 36, scope: !16405)
!16417 = distinct !{!16417, !16401, !16418}
!16418 = !DILocation(line: 121, column: 3, scope: !16399)
!16419 = !DILocation(line: 124, column: 41, scope: !16420)
!16420 = distinct !DILexicalBlock(scope: !16421, file: !2513, line: 123, column: 18)
!16421 = distinct !DILexicalBlock(scope: !16352, file: !2513, line: 123, column: 7)
!16422 = !DILocation(line: 124, column: 4, scope: !16420)
!16423 = !DILocation(line: 125, column: 3, scope: !16420)
!16424 = !DILocation(line: 127, column: 13, scope: !16359)
!16425 = !DILocation(line: 127, column: 10, scope: !16359)
!16426 = !DILocation(line: 127, column: 7, scope: !16352)
!16427 = !DILocation(line: 137, column: 24, scope: !16358)
!16428 = !DILocation(line: 0, scope: !16358)
!16429 = !DILocation(line: 139, column: 18, scope: !16430)
!16430 = distinct !DILexicalBlock(scope: !16358, file: !2513, line: 139, column: 8)
!16431 = !DILocation(line: 139, column: 23, scope: !16430)
!16432 = !DILocation(line: 141, column: 5, scope: !16433)
!16433 = distinct !DILexicalBlock(scope: !16430, file: !2513, line: 140, column: 48)
!16434 = !DILocation(line: 142, column: 4, scope: !16433)
!16435 = !DILocalVariable(name: "key", arg: 2, scope: !16436, file: !316, line: 190, type: !16346)
!16436 = distinct !DISubprogram(name: "k_spin_unlock", scope: !316, file: !316, line: 189, type: !16437, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2483, retainedNodes: !16439)
!16437 = !DISubroutineType(types: !16438)
!16438 = !{null, !16371, !16346}
!16439 = !{!16440, !16435}
!16440 = !DILocalVariable(name: "l", arg: 1, scope: !16436, file: !316, line: 189, type: !16371)
!16441 = !DILocation(line: 0, scope: !16436, inlinedAt: !16442)
!16442 = distinct !DILocation(line: 102, column: 2, scope: !16353)
!16443 = !DILocalVariable(name: "key", arg: 1, scope: !16444, file: !5768, line: 84, type: !32)
!16444 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5768, file: !5768, line: 84, type: !5779, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2483, retainedNodes: !16445)
!16445 = !{!16443}
!16446 = !DILocation(line: 0, scope: !16444, inlinedAt: !16447)
!16447 = distinct !DILocation(line: 215, column: 2, scope: !16436, inlinedAt: !16442)
!16448 = !DILocation(line: 95, column: 2, scope: !16444, inlinedAt: !16447)
!16449 = !{i64 2043506}
!16450 = !DILocation(line: 148, column: 1, scope: !16333)
!16451 = distinct !DISubprogram(name: "elapsed", scope: !2513, file: !2513, line: 62, type: !16452, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2483, retainedNodes: !317)
!16452 = !DISubroutineType(types: !16453)
!16453 = !{!724}
!16454 = !DILocation(line: 64, column: 9, scope: !16451)
!16455 = !DILocation(line: 64, column: 28, scope: !16451)
!16456 = !DILocation(line: 64, column: 35, scope: !16451)
!16457 = !DILocation(line: 64, column: 2, scope: !16451)
!16458 = distinct !DISubprogram(name: "first", scope: !2513, file: !2513, line: 39, type: !16459, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2483, retainedNodes: !16461)
!16459 = !DISubroutineType(types: !16460)
!16460 = !{!2486}
!16461 = !{!16462}
!16462 = !DILocalVariable(name: "t", scope: !16458, file: !2513, line: 41, type: !16463)
!16463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2490, size: 32)
!16464 = !DILocation(line: 41, column: 19, scope: !16458)
!16465 = !DILocation(line: 0, scope: !16458)
!16466 = !DILocation(line: 43, column: 9, scope: !16458)
!16467 = !DILocation(line: 43, column: 2, scope: !16458)
!16468 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !325, file: !325, line: 443, type: !16469, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2483, retainedNodes: !16471)
!16469 = !DISubroutineType(types: !16470)
!16470 = !{null, !16463, !16463}
!16471 = !{!16472, !16473, !16474}
!16472 = !DILocalVariable(name: "successor", arg: 1, scope: !16468, file: !325, line: 443, type: !16463)
!16473 = !DILocalVariable(name: "node", arg: 2, scope: !16468, file: !325, line: 443, type: !16463)
!16474 = !DILocalVariable(name: "prev", scope: !16468, file: !325, line: 445, type: !16475)
!16475 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16463)
!16476 = !DILocation(line: 0, scope: !16468)
!16477 = !DILocation(line: 445, column: 39, scope: !16468)
!16478 = !DILocation(line: 447, column: 8, scope: !16468)
!16479 = !DILocation(line: 447, column: 13, scope: !16468)
!16480 = !DILocation(line: 448, column: 8, scope: !16468)
!16481 = !DILocation(line: 448, column: 13, scope: !16468)
!16482 = !DILocation(line: 449, column: 8, scope: !16468)
!16483 = !DILocation(line: 449, column: 13, scope: !16468)
!16484 = !DILocation(line: 450, column: 18, scope: !16468)
!16485 = !DILocation(line: 451, column: 1, scope: !16468)
!16486 = distinct !DISubprogram(name: "next", scope: !2513, file: !2513, line: 46, type: !16487, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2483, retainedNodes: !16489)
!16487 = !DISubroutineType(types: !16488)
!16488 = !{!2486, !2486}
!16489 = !{!16490, !16491}
!16490 = !DILocalVariable(name: "t", arg: 1, scope: !16486, file: !2513, line: 46, type: !2486)
!16491 = !DILocalVariable(name: "n", scope: !16486, file: !2513, line: 48, type: !16463)
!16492 = !DILocation(line: 0, scope: !16486)
!16493 = !DILocation(line: 48, column: 58, scope: !16486)
!16494 = !DILocation(line: 48, column: 19, scope: !16486)
!16495 = !DILocation(line: 50, column: 9, scope: !16486)
!16496 = !DILocation(line: 50, column: 2, scope: !16486)
!16497 = distinct !DISubprogram(name: "sys_dlist_append", scope: !325, file: !325, line: 404, type: !16498, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2483, retainedNodes: !16501)
!16498 = !DISubroutineType(types: !16499)
!16499 = !{null, !16500, !16463}
!16500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2519, size: 32)
!16501 = !{!16502, !16503, !16504}
!16502 = !DILocalVariable(name: "list", arg: 1, scope: !16497, file: !325, line: 404, type: !16500)
!16503 = !DILocalVariable(name: "node", arg: 2, scope: !16497, file: !325, line: 404, type: !16463)
!16504 = !DILocalVariable(name: "tail", scope: !16497, file: !325, line: 406, type: !16475)
!16505 = !DILocation(line: 0, scope: !16497)
!16506 = !DILocation(line: 406, column: 34, scope: !16497)
!16507 = !DILocation(line: 408, column: 8, scope: !16497)
!16508 = !DILocation(line: 408, column: 13, scope: !16497)
!16509 = !DILocation(line: 409, column: 8, scope: !16497)
!16510 = !DILocation(line: 409, column: 13, scope: !16497)
!16511 = !DILocation(line: 411, column: 8, scope: !16497)
!16512 = !DILocation(line: 411, column: 13, scope: !16497)
!16513 = !DILocation(line: 412, column: 13, scope: !16497)
!16514 = !DILocation(line: 413, column: 1, scope: !16497)
!16515 = distinct !DISubprogram(name: "next_timeout", scope: !2513, file: !2513, line: 67, type: !16452, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2483, retainedNodes: !16516)
!16516 = !{!16517, !16518, !16519}
!16517 = !DILocalVariable(name: "to", scope: !16515, file: !2513, line: 69, type: !2486)
!16518 = !DILocalVariable(name: "ticks_elapsed", scope: !16515, file: !2513, line: 70, type: !724)
!16519 = !DILocalVariable(name: "ret", scope: !16515, file: !2513, line: 71, type: !724)
!16520 = !DILocation(line: 69, column: 24, scope: !16515)
!16521 = !DILocation(line: 0, scope: !16515)
!16522 = !DILocation(line: 70, column: 26, scope: !16515)
!16523 = !DILocation(line: 73, column: 10, scope: !16524)
!16524 = distinct !DILexicalBlock(scope: !16515, file: !2513, line: 73, column: 6)
!16525 = !DILocation(line: 73, column: 19, scope: !16524)
!16526 = !DILocation(line: 74, column: 21, scope: !16524)
!16527 = !DILocation(line: 74, column: 30, scope: !16524)
!16528 = !DILocation(line: 74, column: 28, scope: !16524)
!16529 = !DILocation(line: 74, column: 45, scope: !16524)
!16530 = !DILocation(line: 73, column: 6, scope: !16515)
!16531 = !DILocation(line: 77, column: 9, scope: !16532)
!16532 = distinct !DILexicalBlock(scope: !16524, file: !2513, line: 76, column: 9)
!16533 = !DILocation(line: 0, scope: !16524)
!16534 = !DILocation(line: 81, column: 20, scope: !16535)
!16535 = distinct !DILexicalBlock(scope: !16515, file: !2513, line: 81, column: 6)
!16536 = !DILocation(line: 81, column: 6, scope: !16535)
!16537 = !DILocation(line: 81, column: 32, scope: !16535)
!16538 = !DILocation(line: 85, column: 2, scope: !16515)
!16539 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !325, file: !325, line: 341, type: !16540, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2483, retainedNodes: !16542)
!16540 = !DISubroutineType(types: !16541)
!16541 = !{!16463, !16500, !16463}
!16542 = !{!16543, !16544}
!16543 = !DILocalVariable(name: "list", arg: 1, scope: !16539, file: !325, line: 341, type: !16500)
!16544 = !DILocalVariable(name: "node", arg: 2, scope: !16539, file: !325, line: 342, type: !16463)
!16545 = !DILocation(line: 0, scope: !16539)
!16546 = !DILocation(line: 344, column: 15, scope: !16539)
!16547 = !DILocation(line: 344, column: 9, scope: !16539)
!16548 = !DILocation(line: 344, column: 26, scope: !16539)
!16549 = !DILocation(line: 344, column: 2, scope: !16539)
!16550 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !325, file: !325, line: 325, type: !16540, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2483, retainedNodes: !16551)
!16551 = !{!16552, !16553}
!16552 = !DILocalVariable(name: "list", arg: 1, scope: !16550, file: !325, line: 325, type: !16500)
!16553 = !DILocalVariable(name: "node", arg: 2, scope: !16550, file: !325, line: 326, type: !16463)
!16554 = !DILocation(line: 0, scope: !16550)
!16555 = !DILocation(line: 328, column: 24, scope: !16550)
!16556 = !DILocation(line: 328, column: 15, scope: !16550)
!16557 = !DILocation(line: 328, column: 9, scope: !16550)
!16558 = !DILocation(line: 328, column: 45, scope: !16550)
!16559 = !DILocation(line: 328, column: 2, scope: !16550)
!16560 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !325, file: !325, line: 294, type: !16561, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2483, retainedNodes: !16563)
!16561 = !DISubroutineType(types: !16562)
!16562 = !{!16463, !16500}
!16563 = !{!16564}
!16564 = !DILocalVariable(name: "list", arg: 1, scope: !16560, file: !325, line: 294, type: !16500)
!16565 = !DILocation(line: 0, scope: !16560)
!16566 = !DILocation(line: 296, column: 9, scope: !16560)
!16567 = !DILocation(line: 296, column: 2, scope: !16560)
!16568 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !325, file: !325, line: 266, type: !16569, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2483, retainedNodes: !16571)
!16569 = !DISubroutineType(types: !16570)
!16570 = !{!157, !16500}
!16571 = !{!16572}
!16572 = !DILocalVariable(name: "list", arg: 1, scope: !16568, file: !325, line: 266, type: !16500)
!16573 = !DILocation(line: 0, scope: !16568)
!16574 = !DILocation(line: 268, column: 15, scope: !16568)
!16575 = !DILocation(line: 268, column: 20, scope: !16568)
!16576 = !DILocation(line: 268, column: 2, scope: !16568)
!16577 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2513, file: !2513, line: 150, type: !16578, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2483, retainedNodes: !16580)
!16578 = !DISubroutineType(types: !16579)
!16579 = !{!103, !2486}
!16580 = !{!16581, !16582, !16583, !16585}
!16581 = !DILocalVariable(name: "to", arg: 1, scope: !16577, file: !2513, line: 150, type: !2486)
!16582 = !DILocalVariable(name: "ret", scope: !16577, file: !2513, line: 152, type: !103)
!16583 = !DILocalVariable(name: "__i", scope: !16584, file: !2513, line: 154, type: !16346)
!16584 = distinct !DILexicalBlock(scope: !16577, file: !2513, line: 154, column: 2)
!16585 = !DILocalVariable(name: "__key", scope: !16584, file: !2513, line: 154, type: !16346)
!16586 = !DILocation(line: 0, scope: !16577)
!16587 = !DILocation(line: 0, scope: !16584)
!16588 = !DILocation(line: 0, scope: !16368, inlinedAt: !16589)
!16589 = distinct !DILocation(line: 154, column: 2, scope: !16584)
!16590 = !DILocation(line: 55, column: 2, scope: !16377, inlinedAt: !16591)
!16591 = distinct !DILocation(line: 145, column: 10, scope: !16368, inlinedAt: !16589)
!16592 = !DILocation(line: 0, scope: !16377, inlinedAt: !16591)
!16593 = !DILocation(line: 155, column: 7, scope: !16594)
!16594 = distinct !DILexicalBlock(scope: !16595, file: !2513, line: 155, column: 7)
!16595 = distinct !DILexicalBlock(scope: !16596, file: !2513, line: 154, column: 24)
!16596 = distinct !DILexicalBlock(scope: !16584, file: !2513, line: 154, column: 2)
!16597 = !DILocation(line: 155, column: 7, scope: !16595)
!16598 = !DILocation(line: 156, column: 4, scope: !16599)
!16599 = distinct !DILexicalBlock(scope: !16594, file: !2513, line: 155, column: 39)
!16600 = !DILocation(line: 158, column: 3, scope: !16599)
!16601 = !DILocation(line: 0, scope: !16436, inlinedAt: !16602)
!16602 = distinct !DILocation(line: 154, column: 2, scope: !16596)
!16603 = !DILocation(line: 0, scope: !16444, inlinedAt: !16604)
!16604 = distinct !DILocation(line: 215, column: 2, scope: !16436, inlinedAt: !16602)
!16605 = !DILocation(line: 95, column: 2, scope: !16444, inlinedAt: !16604)
!16606 = !DILocation(line: 161, column: 2, scope: !16577)
!16607 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !325, file: !325, line: 225, type: !16608, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2483, retainedNodes: !16612)
!16608 = !DISubroutineType(types: !16609)
!16609 = !{!157, !16610}
!16610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16611, size: 32)
!16611 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2490)
!16612 = !{!16613}
!16613 = !DILocalVariable(name: "node", arg: 1, scope: !16607, file: !325, line: 225, type: !16610)
!16614 = !DILocation(line: 0, scope: !16607)
!16615 = !DILocation(line: 227, column: 15, scope: !16607)
!16616 = !DILocation(line: 227, column: 20, scope: !16607)
!16617 = !DILocation(line: 227, column: 2, scope: !16607)
!16618 = distinct !DISubprogram(name: "remove_timeout", scope: !2513, file: !2513, line: 53, type: !2507, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2483, retainedNodes: !16619)
!16619 = !{!16620}
!16620 = !DILocalVariable(name: "t", arg: 1, scope: !16618, file: !2513, line: 53, type: !2486)
!16621 = !DILocation(line: 0, scope: !16618)
!16622 = !DILocation(line: 55, column: 6, scope: !16623)
!16623 = distinct !DILexicalBlock(scope: !16618, file: !2513, line: 55, column: 6)
!16624 = !DILocation(line: 55, column: 14, scope: !16623)
!16625 = !DILocation(line: 55, column: 6, scope: !16618)
!16626 = !DILocation(line: 56, column: 25, scope: !16627)
!16627 = distinct !DILexicalBlock(scope: !16623, file: !2513, line: 55, column: 23)
!16628 = !DILocation(line: 56, column: 12, scope: !16627)
!16629 = !DILocation(line: 56, column: 19, scope: !16627)
!16630 = !DILocation(line: 57, column: 2, scope: !16627)
!16631 = !DILocation(line: 59, column: 23, scope: !16618)
!16632 = !DILocation(line: 59, column: 2, scope: !16618)
!16633 = !DILocation(line: 60, column: 1, scope: !16618)
!16634 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !325, file: !325, line: 496, type: !16635, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2483, retainedNodes: !16637)
!16635 = !DISubroutineType(types: !16636)
!16636 = !{null, !16463}
!16637 = !{!16638, !16639, !16640}
!16638 = !DILocalVariable(name: "node", arg: 1, scope: !16634, file: !325, line: 496, type: !16463)
!16639 = !DILocalVariable(name: "prev", scope: !16634, file: !325, line: 498, type: !16475)
!16640 = !DILocalVariable(name: "next", scope: !16634, file: !325, line: 499, type: !16475)
!16641 = !DILocation(line: 0, scope: !16634)
!16642 = !DILocation(line: 498, column: 34, scope: !16634)
!16643 = !DILocation(line: 499, column: 34, scope: !16634)
!16644 = !DILocation(line: 501, column: 8, scope: !16634)
!16645 = !DILocation(line: 501, column: 13, scope: !16634)
!16646 = !DILocation(line: 502, column: 8, scope: !16634)
!16647 = !DILocation(line: 502, column: 13, scope: !16634)
!16648 = !DILocation(line: 503, column: 2, scope: !16634)
!16649 = !DILocation(line: 504, column: 1, scope: !16634)
!16650 = distinct !DISubprogram(name: "sys_dnode_init", scope: !325, file: !325, line: 211, type: !16635, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2483, retainedNodes: !16651)
!16651 = !{!16652}
!16652 = !DILocalVariable(name: "node", arg: 1, scope: !16650, file: !325, line: 211, type: !16463)
!16653 = !DILocation(line: 0, scope: !16650)
!16654 = !DILocation(line: 213, column: 8, scope: !16650)
!16655 = !DILocation(line: 213, column: 13, scope: !16650)
!16656 = !DILocation(line: 214, column: 8, scope: !16650)
!16657 = !DILocation(line: 214, column: 13, scope: !16650)
!16658 = !DILocation(line: 215, column: 1, scope: !16650)
!16659 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2513, file: !2513, line: 183, type: !16660, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2483, retainedNodes: !16664)
!16660 = !DISubroutineType(types: !16661)
!16661 = !{!200, !16662}
!16662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16663, size: 32)
!16663 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2487)
!16664 = !{!16665, !16666, !16667, !16669}
!16665 = !DILocalVariable(name: "timeout", arg: 1, scope: !16659, file: !2513, line: 183, type: !16662)
!16666 = !DILocalVariable(name: "ticks", scope: !16659, file: !2513, line: 185, type: !200)
!16667 = !DILocalVariable(name: "__i", scope: !16668, file: !2513, line: 187, type: !16346)
!16668 = distinct !DILexicalBlock(scope: !16659, file: !2513, line: 187, column: 2)
!16669 = !DILocalVariable(name: "__key", scope: !16668, file: !2513, line: 187, type: !16346)
!16670 = !DILocation(line: 0, scope: !16659)
!16671 = !DILocation(line: 0, scope: !16668)
!16672 = !DILocation(line: 0, scope: !16368, inlinedAt: !16673)
!16673 = distinct !DILocation(line: 187, column: 2, scope: !16668)
!16674 = !DILocation(line: 55, column: 2, scope: !16377, inlinedAt: !16675)
!16675 = distinct !DILocation(line: 145, column: 10, scope: !16368, inlinedAt: !16673)
!16676 = !DILocation(line: 0, scope: !16377, inlinedAt: !16675)
!16677 = !DILocation(line: 188, column: 11, scope: !16678)
!16678 = distinct !DILexicalBlock(scope: !16679, file: !2513, line: 187, column: 24)
!16679 = distinct !DILexicalBlock(scope: !16668, file: !2513, line: 187, column: 2)
!16680 = !DILocation(line: 0, scope: !16436, inlinedAt: !16681)
!16681 = distinct !DILocation(line: 187, column: 2, scope: !16679)
!16682 = !DILocation(line: 0, scope: !16444, inlinedAt: !16683)
!16683 = distinct !DILocation(line: 215, column: 2, scope: !16436, inlinedAt: !16681)
!16684 = !DILocation(line: 95, column: 2, scope: !16444, inlinedAt: !16683)
!16685 = !DILocation(line: 191, column: 2, scope: !16659)
!16686 = distinct !DISubprogram(name: "timeout_rem", scope: !2513, file: !2513, line: 165, type: !16660, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2483, retainedNodes: !16687)
!16687 = !{!16688, !16689, !16690}
!16688 = !DILocalVariable(name: "timeout", arg: 1, scope: !16686, file: !2513, line: 165, type: !16662)
!16689 = !DILocalVariable(name: "ticks", scope: !16686, file: !2513, line: 167, type: !200)
!16690 = !DILocalVariable(name: "t", scope: !16691, file: !2513, line: 173, type: !2486)
!16691 = distinct !DILexicalBlock(scope: !16686, file: !2513, line: 173, column: 2)
!16692 = !DILocation(line: 0, scope: !16686)
!16693 = !DILocation(line: 169, column: 6, scope: !16694)
!16694 = distinct !DILexicalBlock(scope: !16686, file: !2513, line: 169, column: 6)
!16695 = !DILocation(line: 169, column: 6, scope: !16686)
!16696 = !DILocation(line: 173, column: 28, scope: !16691)
!16697 = !DILocation(line: 0, scope: !16691)
!16698 = !DILocation(line: 173, column: 39, scope: !16699)
!16699 = distinct !DILexicalBlock(scope: !16691, file: !2513, line: 173, column: 2)
!16700 = !DILocation(line: 173, column: 2, scope: !16691)
!16701 = !DILocation(line: 174, column: 15, scope: !16702)
!16702 = distinct !DILexicalBlock(scope: !16699, file: !2513, line: 173, column: 61)
!16703 = !DILocation(line: 174, column: 9, scope: !16702)
!16704 = !DILocation(line: 175, column: 15, scope: !16705)
!16705 = distinct !DILexicalBlock(scope: !16702, file: !2513, line: 175, column: 7)
!16706 = !DILocation(line: 175, column: 7, scope: !16702)
!16707 = !DILocation(line: 173, column: 52, scope: !16699)
!16708 = distinct !{!16708, !16700, !16709}
!16709 = !DILocation(line: 178, column: 2, scope: !16691)
!16710 = !DILocation(line: 180, column: 17, scope: !16686)
!16711 = !DILocation(line: 180, column: 15, scope: !16686)
!16712 = !DILocation(line: 180, column: 2, scope: !16686)
!16713 = !DILocation(line: 181, column: 1, scope: !16686)
!16714 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !13257, file: !13257, line: 35, type: !16715, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2483, retainedNodes: !16717)
!16715 = !DISubroutineType(types: !16716)
!16716 = !{!157, !16662}
!16717 = !{!16718}
!16718 = !DILocalVariable(name: "to", arg: 1, scope: !16714, file: !13257, line: 35, type: !16662)
!16719 = !DILocation(line: 0, scope: !16714)
!16720 = !DILocation(line: 37, column: 35, scope: !16714)
!16721 = !DILocation(line: 37, column: 10, scope: !16714)
!16722 = !DILocation(line: 37, column: 9, scope: !16714)
!16723 = !DILocation(line: 37, column: 2, scope: !16714)
!16724 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2513, file: !2513, line: 194, type: !16660, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2483, retainedNodes: !16725)
!16725 = !{!16726, !16727, !16728, !16730}
!16726 = !DILocalVariable(name: "timeout", arg: 1, scope: !16724, file: !2513, line: 194, type: !16662)
!16727 = !DILocalVariable(name: "ticks", scope: !16724, file: !2513, line: 196, type: !200)
!16728 = !DILocalVariable(name: "__i", scope: !16729, file: !2513, line: 198, type: !16346)
!16729 = distinct !DILexicalBlock(scope: !16724, file: !2513, line: 198, column: 2)
!16730 = !DILocalVariable(name: "__key", scope: !16729, file: !2513, line: 198, type: !16346)
!16731 = !DILocation(line: 0, scope: !16724)
!16732 = !DILocation(line: 0, scope: !16729)
!16733 = !DILocation(line: 0, scope: !16368, inlinedAt: !16734)
!16734 = distinct !DILocation(line: 198, column: 2, scope: !16729)
!16735 = !DILocation(line: 55, column: 2, scope: !16377, inlinedAt: !16736)
!16736 = distinct !DILocation(line: 145, column: 10, scope: !16368, inlinedAt: !16734)
!16737 = !DILocation(line: 0, scope: !16377, inlinedAt: !16736)
!16738 = !DILocation(line: 199, column: 11, scope: !16739)
!16739 = distinct !DILexicalBlock(scope: !16740, file: !2513, line: 198, column: 24)
!16740 = distinct !DILexicalBlock(scope: !16729, file: !2513, line: 198, column: 2)
!16741 = !DILocation(line: 199, column: 23, scope: !16739)
!16742 = !DILocation(line: 0, scope: !16436, inlinedAt: !16743)
!16743 = distinct !DILocation(line: 198, column: 2, scope: !16740)
!16744 = !DILocation(line: 0, scope: !16444, inlinedAt: !16745)
!16745 = distinct !DILocation(line: 215, column: 2, scope: !16436, inlinedAt: !16743)
!16746 = !DILocation(line: 95, column: 2, scope: !16444, inlinedAt: !16745)
!16747 = !DILocation(line: 199, column: 21, scope: !16739)
!16748 = !DILocation(line: 202, column: 2, scope: !16724)
!16749 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2513, file: !2513, line: 205, type: !16452, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2483, retainedNodes: !16750)
!16750 = !{!16751, !16752, !16754}
!16751 = !DILocalVariable(name: "ret", scope: !16749, file: !2513, line: 207, type: !724)
!16752 = !DILocalVariable(name: "__i", scope: !16753, file: !2513, line: 209, type: !16346)
!16753 = distinct !DILexicalBlock(scope: !16749, file: !2513, line: 209, column: 2)
!16754 = !DILocalVariable(name: "__key", scope: !16753, file: !2513, line: 209, type: !16346)
!16755 = !DILocation(line: 0, scope: !16749)
!16756 = !DILocation(line: 0, scope: !16753)
!16757 = !DILocation(line: 0, scope: !16368, inlinedAt: !16758)
!16758 = distinct !DILocation(line: 209, column: 2, scope: !16753)
!16759 = !DILocation(line: 55, column: 2, scope: !16377, inlinedAt: !16760)
!16760 = distinct !DILocation(line: 145, column: 10, scope: !16368, inlinedAt: !16758)
!16761 = !DILocation(line: 0, scope: !16377, inlinedAt: !16760)
!16762 = !DILocation(line: 210, column: 9, scope: !16763)
!16763 = distinct !DILexicalBlock(scope: !16764, file: !2513, line: 209, column: 24)
!16764 = distinct !DILexicalBlock(scope: !16753, file: !2513, line: 209, column: 2)
!16765 = !DILocation(line: 0, scope: !16436, inlinedAt: !16766)
!16766 = distinct !DILocation(line: 209, column: 2, scope: !16764)
!16767 = !DILocation(line: 0, scope: !16444, inlinedAt: !16768)
!16768 = distinct !DILocation(line: 215, column: 2, scope: !16436, inlinedAt: !16766)
!16769 = !DILocation(line: 95, column: 2, scope: !16444, inlinedAt: !16768)
!16770 = !DILocation(line: 212, column: 2, scope: !16749)
!16771 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2513, file: !2513, line: 215, type: !10896, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2483, retainedNodes: !16772)
!16772 = !{!16773, !16774, !16775, !16777, !16778, !16781, !16782}
!16773 = !DILocalVariable(name: "ticks", arg: 1, scope: !16771, file: !2513, line: 215, type: !724)
!16774 = !DILocalVariable(name: "is_idle", arg: 2, scope: !16771, file: !2513, line: 215, type: !157)
!16775 = !DILocalVariable(name: "__i", scope: !16776, file: !2513, line: 217, type: !16346)
!16776 = distinct !DILexicalBlock(scope: !16771, file: !2513, line: 217, column: 2)
!16777 = !DILocalVariable(name: "__key", scope: !16776, file: !2513, line: 217, type: !16346)
!16778 = !DILocalVariable(name: "next_to", scope: !16779, file: !2513, line: 218, type: !103)
!16779 = distinct !DILexicalBlock(scope: !16780, file: !2513, line: 217, column: 24)
!16780 = distinct !DILexicalBlock(scope: !16776, file: !2513, line: 217, column: 2)
!16781 = !DILocalVariable(name: "sooner", scope: !16779, file: !2513, line: 219, type: !157)
!16782 = !DILocalVariable(name: "imminent", scope: !16779, file: !2513, line: 221, type: !157)
!16783 = !DILocation(line: 0, scope: !16771)
!16784 = !DILocation(line: 0, scope: !16776)
!16785 = !DILocation(line: 0, scope: !16368, inlinedAt: !16786)
!16786 = distinct !DILocation(line: 217, column: 2, scope: !16776)
!16787 = !DILocation(line: 55, column: 2, scope: !16377, inlinedAt: !16788)
!16788 = distinct !DILocation(line: 145, column: 10, scope: !16368, inlinedAt: !16786)
!16789 = !DILocation(line: 0, scope: !16377, inlinedAt: !16788)
!16790 = !DILocation(line: 218, column: 17, scope: !16779)
!16791 = !DILocation(line: 0, scope: !16779)
!16792 = !DILocation(line: 221, column: 27, scope: !16779)
!16793 = !DILocation(line: 233, column: 17, scope: !16794)
!16794 = distinct !DILexicalBlock(scope: !16779, file: !2513, line: 233, column: 7)
!16795 = !DILocation(line: 234, column: 26, scope: !16796)
!16796 = distinct !DILexicalBlock(scope: !16794, file: !2513, line: 233, column: 56)
!16797 = !DILocation(line: 234, column: 4, scope: !16796)
!16798 = !DILocation(line: 235, column: 3, scope: !16796)
!16799 = !DILocation(line: 0, scope: !16436, inlinedAt: !16800)
!16800 = distinct !DILocation(line: 217, column: 2, scope: !16780)
!16801 = !DILocation(line: 0, scope: !16444, inlinedAt: !16802)
!16802 = distinct !DILocation(line: 215, column: 2, scope: !16436, inlinedAt: !16800)
!16803 = !DILocation(line: 95, column: 2, scope: !16444, inlinedAt: !16802)
!16804 = !DILocation(line: 237, column: 1, scope: !16771)
!16805 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2513, file: !2513, line: 239, type: !16806, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2483, retainedNodes: !16808)
!16806 = !DISubroutineType(types: !16807)
!16807 = !{null, !724}
!16808 = !{!16809, !16810, !16811, !16813}
!16809 = !DILocalVariable(name: "ticks", arg: 1, scope: !16805, file: !2513, line: 239, type: !724)
!16810 = !DILocalVariable(name: "key", scope: !16805, file: !2513, line: 245, type: !16346)
!16811 = !DILocalVariable(name: "t", scope: !16812, file: !2513, line: 262, type: !2486)
!16812 = distinct !DILexicalBlock(scope: !16805, file: !2513, line: 261, column: 67)
!16813 = !DILocalVariable(name: "dt", scope: !16812, file: !2513, line: 263, type: !103)
!16814 = !DILocation(line: 0, scope: !16805)
!16815 = !DILocation(line: 242, column: 2, scope: !16805)
!16816 = !DILocation(line: 0, scope: !16368, inlinedAt: !16817)
!16817 = distinct !DILocation(line: 245, column: 25, scope: !16805)
!16818 = !DILocation(line: 55, column: 2, scope: !16377, inlinedAt: !16819)
!16819 = distinct !DILocation(line: 145, column: 10, scope: !16368, inlinedAt: !16817)
!16820 = !DILocation(line: 0, scope: !16377, inlinedAt: !16819)
!16821 = !DILocation(line: 261, column: 9, scope: !16805)
!16822 = !DILocation(line: 261, column: 17, scope: !16805)
!16823 = !DILocation(line: 261, column: 25, scope: !16805)
!16824 = !DILocation(line: 261, column: 37, scope: !16805)
!16825 = !DILocation(line: 261, column: 47, scope: !16805)
!16826 = !DILocation(line: 261, column: 44, scope: !16805)
!16827 = !DILocation(line: 261, column: 2, scope: !16805)
!16828 = !DILocation(line: 0, scope: !16812)
!16829 = !DILocation(line: 263, column: 12, scope: !16812)
!16830 = !DILocation(line: 265, column: 16, scope: !16812)
!16831 = !DILocation(line: 265, column: 13, scope: !16812)
!16832 = !DILocation(line: 266, column: 13, scope: !16812)
!16833 = !DILocation(line: 267, column: 3, scope: !16812)
!16834 = !DILocation(line: 0, scope: !16436, inlinedAt: !16835)
!16835 = distinct !DILocation(line: 269, column: 3, scope: !16812)
!16836 = !DILocation(line: 0, scope: !16444, inlinedAt: !16837)
!16837 = distinct !DILocation(line: 215, column: 2, scope: !16436, inlinedAt: !16835)
!16838 = !DILocation(line: 95, column: 2, scope: !16444, inlinedAt: !16837)
!16839 = !DILocation(line: 270, column: 6, scope: !16812)
!16840 = !DILocation(line: 270, column: 3, scope: !16812)
!16841 = !DILocation(line: 0, scope: !16368, inlinedAt: !16842)
!16842 = distinct !DILocation(line: 271, column: 9, scope: !16812)
!16843 = !DILocation(line: 55, column: 2, scope: !16377, inlinedAt: !16844)
!16844 = distinct !DILocation(line: 145, column: 10, scope: !16368, inlinedAt: !16842)
!16845 = !DILocation(line: 0, scope: !16377, inlinedAt: !16844)
!16846 = !DILocation(line: 272, column: 22, scope: !16812)
!16847 = distinct !{!16847, !16827, !16848}
!16848 = !DILocation(line: 273, column: 2, scope: !16805)
!16849 = !DILocation(line: 276, column: 19, scope: !16850)
!16850 = distinct !DILexicalBlock(scope: !16851, file: !2513, line: 275, column: 23)
!16851 = distinct !DILexicalBlock(scope: !16805, file: !2513, line: 275, column: 6)
!16852 = !DILocation(line: 277, column: 2, scope: !16850)
!16853 = !DILocation(line: 279, column: 15, scope: !16805)
!16854 = !DILocation(line: 279, column: 12, scope: !16805)
!16855 = !DILocation(line: 280, column: 21, scope: !16805)
!16856 = !DILocation(line: 282, column: 24, scope: !16805)
!16857 = !DILocation(line: 282, column: 2, scope: !16805)
!16858 = !DILocation(line: 0, scope: !16436, inlinedAt: !16859)
!16859 = distinct !DILocation(line: 284, column: 2, scope: !16805)
!16860 = !DILocation(line: 0, scope: !16444, inlinedAt: !16861)
!16861 = distinct !DILocation(line: 215, column: 2, scope: !16436, inlinedAt: !16859)
!16862 = !DILocation(line: 95, column: 2, scope: !16444, inlinedAt: !16861)
!16863 = !DILocation(line: 285, column: 1, scope: !16805)
!16864 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2513, file: !2513, line: 287, type: !16865, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2483, retainedNodes: !16867)
!16865 = !DISubroutineType(types: !16866)
!16866 = !{!202}
!16867 = !{!16868, !16869, !16871}
!16868 = !DILocalVariable(name: "t", scope: !16864, file: !2513, line: 289, type: !1578)
!16869 = !DILocalVariable(name: "__i", scope: !16870, file: !2513, line: 291, type: !16346)
!16870 = distinct !DILexicalBlock(scope: !16864, file: !2513, line: 291, column: 2)
!16871 = !DILocalVariable(name: "__key", scope: !16870, file: !2513, line: 291, type: !16346)
!16872 = !DILocation(line: 0, scope: !16864)
!16873 = !DILocation(line: 0, scope: !16870)
!16874 = !DILocation(line: 0, scope: !16368, inlinedAt: !16875)
!16875 = distinct !DILocation(line: 291, column: 2, scope: !16870)
!16876 = !DILocation(line: 55, column: 2, scope: !16377, inlinedAt: !16877)
!16877 = distinct !DILocation(line: 145, column: 10, scope: !16368, inlinedAt: !16875)
!16878 = !DILocation(line: 0, scope: !16377, inlinedAt: !16877)
!16879 = !DILocation(line: 292, column: 7, scope: !16880)
!16880 = distinct !DILexicalBlock(scope: !16881, file: !2513, line: 291, column: 24)
!16881 = distinct !DILexicalBlock(scope: !16870, file: !2513, line: 291, column: 2)
!16882 = !DILocation(line: 292, column: 19, scope: !16880)
!16883 = !DILocation(line: 0, scope: !16436, inlinedAt: !16884)
!16884 = distinct !DILocation(line: 291, column: 2, scope: !16881)
!16885 = !DILocation(line: 0, scope: !16444, inlinedAt: !16886)
!16886 = distinct !DILocation(line: 215, column: 2, scope: !16436, inlinedAt: !16884)
!16887 = !DILocation(line: 95, column: 2, scope: !16444, inlinedAt: !16886)
!16888 = !DILocation(line: 292, column: 17, scope: !16880)
!16889 = !DILocation(line: 294, column: 2, scope: !16864)
!16890 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2513, file: !2513, line: 297, type: !6064, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2483, retainedNodes: !317)
!16891 = !DILocation(line: 300, column: 19, scope: !16890)
!16892 = !DILocation(line: 300, column: 9, scope: !16890)
!16893 = !DILocation(line: 300, column: 2, scope: !16890)
!16894 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2513, file: !2513, line: 306, type: !16865, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2483, retainedNodes: !317)
!16895 = !DILocation(line: 308, column: 9, scope: !16894)
!16896 = !DILocation(line: 308, column: 2, scope: !16894)
!16897 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2513, file: !2513, line: 319, type: !6074, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2483, retainedNodes: !16898)
!16898 = !{!16899, !16900, !16901, !16902}
!16899 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !16897, file: !2513, line: 319, type: !121)
!16900 = !DILocalVariable(name: "start_cycles", scope: !16897, file: !2513, line: 328, type: !121)
!16901 = !DILocalVariable(name: "cycles_to_wait", scope: !16897, file: !2513, line: 331, type: !121)
!16902 = !DILocalVariable(name: "current_cycles", scope: !16903, file: !2513, line: 338, type: !121)
!16903 = distinct !DILexicalBlock(scope: !16904, file: !2513, line: 337, column: 11)
!16904 = distinct !DILexicalBlock(scope: !16905, file: !2513, line: 337, column: 2)
!16905 = distinct !DILexicalBlock(scope: !16897, file: !2513, line: 337, column: 2)
!16906 = !DILocation(line: 0, scope: !16897)
!16907 = !DILocation(line: 322, column: 19, scope: !16908)
!16908 = distinct !DILexicalBlock(scope: !16897, file: !2513, line: 322, column: 6)
!16909 = !DILocation(line: 322, column: 6, scope: !16897)
!16910 = !DILocation(line: 328, column: 26, scope: !16897)
!16911 = !DILocation(line: 333, column: 43, scope: !16897)
!16912 = !DILocation(line: 337, column: 2, scope: !16897)
!16913 = !DILocation(line: 338, column: 29, scope: !16903)
!16914 = !DILocation(line: 0, scope: !16903)
!16915 = !DILocation(line: 341, column: 23, scope: !16916)
!16916 = distinct !DILexicalBlock(scope: !16903, file: !2513, line: 341, column: 7)
!16917 = !DILocation(line: 341, column: 39, scope: !16916)
!16918 = !DILocation(line: 349, column: 1, scope: !16897)
!16919 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !296, file: !296, line: 1675, type: !6064, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2483, retainedNodes: !317)
!16920 = !DILocation(line: 1677, column: 9, scope: !16919)
!16921 = !DILocation(line: 1677, column: 2, scope: !16919)
!16922 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !16923, file: !16923, line: 24, type: !6064, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2483, retainedNodes: !317)
!16923 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16924 = !DILocation(line: 26, column: 9, scope: !16922)
!16925 = !DILocation(line: 26, column: 2, scope: !16922)
!16926 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2513, file: !2513, line: 364, type: !16927, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2483, retainedNodes: !16929)
!16927 = !DISubroutineType(types: !16928)
!16928 = !{!1578, !16336}
!16929 = !{!16930, !16931}
!16930 = !DILocalVariable(name: "timeout", arg: 1, scope: !16926, file: !2513, line: 364, type: !16336)
!16931 = !DILocalVariable(name: "dt", scope: !16926, file: !2513, line: 366, type: !200)
!16932 = !DILocation(line: 0, scope: !16926)
!16933 = !DILocation(line: 368, column: 6, scope: !16926)
!16934 = !DILocation(line: 371, column: 10, scope: !16935)
!16935 = distinct !DILexicalBlock(scope: !16936, file: !2513, line: 370, column: 47)
!16936 = distinct !DILexicalBlock(scope: !16937, file: !2513, line: 370, column: 13)
!16937 = distinct !DILexicalBlock(scope: !16926, file: !2513, line: 368, column: 6)
!16938 = !DILocation(line: 371, column: 3, scope: !16935)
!16939 = !DILocation(line: 376, column: 58, scope: !16940)
!16940 = distinct !DILexicalBlock(scope: !16941, file: !2513, line: 376, column: 7)
!16941 = distinct !DILexicalBlock(scope: !16936, file: !2513, line: 372, column: 9)
!16942 = !DILocation(line: 376, column: 7, scope: !16941)
!16943 = !DILocation(line: 376, column: 43, scope: !16940)
!16944 = !DILocation(line: 377, column: 4, scope: !16945)
!16945 = distinct !DILexicalBlock(scope: !16940, file: !2513, line: 376, column: 64)
!16946 = !DILocation(line: 379, column: 10, scope: !16941)
!16947 = !DILocation(line: 379, column: 33, scope: !16941)
!16948 = !DILocation(line: 379, column: 31, scope: !16941)
!16949 = !DILocation(line: 379, column: 3, scope: !16941)
!16950 = !DILocation(line: 0, scope: !16937)
!16951 = !DILocation(line: 381, column: 1, scope: !16926)
!16952 = distinct !DISubprogram(name: "k_free", scope: !16953, file: !16953, line: 43, type: !5920, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3197, retainedNodes: !16954)
!16953 = !DIFile(filename: "zephyr/kernel/mempool.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16954 = !{!16955, !16956}
!16955 = !DILocalVariable(name: "ptr", arg: 1, scope: !16952, file: !16953, line: 43, type: !102)
!16956 = !DILocalVariable(name: "heap_ref", scope: !16952, file: !16953, line: 45, type: !16957)
!16957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16958, size: 32)
!16958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16959, size: 32)
!16959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !296, line: 5073, size: 160, elements: !16960)
!16960 = !{!16961, !16967, !16986}
!16961 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !16959, file: !296, line: 5074, baseType: !16962, size: 96)
!16962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !16963)
!16963 = !{!16964, !16965, !16966}
!16964 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !16962, file: !472, line: 57, baseType: !475, size: 32)
!16965 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !16962, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!16966 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !16962, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!16967 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !16959, file: !296, line: 5075, baseType: !16968, size: 64, offset: 96)
!16968 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !16969)
!16969 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !16970)
!16970 = !{!16971}
!16971 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !16969, file: !320, line: 232, baseType: !16972, size: 64)
!16972 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !16973)
!16973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !16974)
!16974 = !{!16975, !16981}
!16975 = !DIDerivedType(tag: DW_TAG_member, scope: !16973, file: !325, line: 38, baseType: !16976, size: 32)
!16976 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !16973, file: !325, line: 38, size: 32, elements: !16977)
!16977 = !{!16978, !16980}
!16978 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !16976, file: !325, line: 39, baseType: !16979, size: 32)
!16979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16973, size: 32)
!16980 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !16976, file: !325, line: 40, baseType: !16979, size: 32)
!16981 = !DIDerivedType(tag: DW_TAG_member, scope: !16973, file: !325, line: 42, baseType: !16982, size: 32, offset: 32)
!16982 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !16973, file: !325, line: 42, size: 32, elements: !16983)
!16983 = !{!16984, !16985}
!16984 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !16982, file: !325, line: 43, baseType: !16979, size: 32)
!16985 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !16982, file: !325, line: 44, baseType: !16979, size: 32)
!16986 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !16959, file: !296, line: 5076, baseType: !16987, offset: 160)
!16987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!16988 = !DILocation(line: 0, scope: !16952)
!16989 = !DILocation(line: 47, column: 10, scope: !16990)
!16990 = distinct !DILexicalBlock(scope: !16952, file: !16953, line: 47, column: 6)
!16991 = !DILocation(line: 47, column: 6, scope: !16952)
!16992 = !DILocation(line: 49, column: 9, scope: !16993)
!16993 = distinct !DILexicalBlock(scope: !16990, file: !16953, line: 47, column: 19)
!16994 = !DILocation(line: 53, column: 15, scope: !16993)
!16995 = !DILocation(line: 53, column: 3, scope: !16993)
!16996 = !DILocation(line: 56, column: 2, scope: !16993)
!16997 = !DILocation(line: 57, column: 1, scope: !16952)
!16998 = distinct !DISubprogram(name: "z_thread_aligned_alloc", scope: !16953, file: !16953, line: 124, type: !16999, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3197, retainedNodes: !17001)
!16999 = !DISubroutineType(types: !17000)
!17000 = !{!102, !204, !204}
!17001 = !{!17002, !17003, !17004, !17005}
!17002 = !DILocalVariable(name: "align", arg: 1, scope: !16998, file: !16953, line: 124, type: !204)
!17003 = !DILocalVariable(name: "size", arg: 2, scope: !16998, file: !16953, line: 124, type: !204)
!17004 = !DILocalVariable(name: "ret", scope: !16998, file: !16953, line: 126, type: !102)
!17005 = !DILocalVariable(name: "heap", scope: !16998, file: !16953, line: 127, type: !16958)
!17006 = !DILocation(line: 0, scope: !16998)
!17007 = !DILocation(line: 129, column: 6, scope: !17008)
!17008 = distinct !DILexicalBlock(scope: !16998, file: !16953, line: 129, column: 6)
!17009 = !DILocation(line: 129, column: 6, scope: !16998)
!17010 = !DILocation(line: 132, column: 10, scope: !17011)
!17011 = distinct !DILexicalBlock(scope: !17008, file: !16953, line: 131, column: 9)
!17012 = !DILocation(line: 132, column: 20, scope: !17011)
!17013 = !DILocation(line: 135, column: 11, scope: !17014)
!17014 = distinct !DILexicalBlock(scope: !16998, file: !16953, line: 135, column: 6)
!17015 = !DILocation(line: 135, column: 6, scope: !16998)
!17016 = !DILocation(line: 136, column: 9, scope: !17017)
!17017 = distinct !DILexicalBlock(scope: !17014, file: !16953, line: 135, column: 20)
!17018 = !DILocation(line: 137, column: 2, scope: !17017)
!17019 = !DILocation(line: 0, scope: !17014)
!17020 = !DILocation(line: 141, column: 2, scope: !16998)
!17021 = distinct !DISubprogram(name: "z_heap_aligned_alloc", scope: !16953, file: !16953, line: 12, type: !17022, scopeLine: 13, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3197, retainedNodes: !17024)
!17022 = !DISubroutineType(types: !17023)
!17023 = !{!102, !16958, !204, !204}
!17024 = !{!17025, !17026, !17027, !17028, !17029, !17030}
!17025 = !DILocalVariable(name: "heap", arg: 1, scope: !17021, file: !16953, line: 12, type: !16958)
!17026 = !DILocalVariable(name: "align", arg: 2, scope: !17021, file: !16953, line: 12, type: !204)
!17027 = !DILocalVariable(name: "size", arg: 3, scope: !17021, file: !16953, line: 12, type: !204)
!17028 = !DILocalVariable(name: "mem", scope: !17021, file: !16953, line: 14, type: !102)
!17029 = !DILocalVariable(name: "heap_ref", scope: !17021, file: !16953, line: 15, type: !16957)
!17030 = !DILocalVariable(name: "__align", scope: !17021, file: !16953, line: 16, type: !204)
!17031 = !DILocation(line: 0, scope: !17021)
!17032 = !DILocation(line: 24, column: 6, scope: !17033)
!17033 = distinct !DILexicalBlock(scope: !17021, file: !16953, line: 24, column: 6)
!17034 = !DILocation(line: 24, column: 6, scope: !17021)
!17035 = !DILocation(line: 27, column: 18, scope: !17021)
!17036 = !DILocation(line: 29, column: 44, scope: !17021)
!17037 = !DILocation(line: 29, column: 8, scope: !17021)
!17038 = !DILocation(line: 30, column: 10, scope: !17039)
!17039 = distinct !DILexicalBlock(scope: !17021, file: !16953, line: 30, column: 6)
!17040 = !DILocation(line: 30, column: 6, scope: !17021)
!17041 = !DILocation(line: 34, column: 13, scope: !17021)
!17042 = !DILocation(line: 35, column: 12, scope: !17021)
!17043 = !DILocation(line: 36, column: 8, scope: !17021)
!17044 = !DILocation(line: 40, column: 2, scope: !17021)
!17045 = !DILocation(line: 41, column: 1, scope: !17021)
!17046 = distinct !DISubprogram(name: "size_add_overflow", scope: !17047, file: !17047, line: 47, type: !17048, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3197, retainedNodes: !17050)
!17047 = !DIFile(filename: "zephyr/include/zephyr/sys/math_extras_impl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17048 = !DISubroutineType(types: !17049)
!17049 = !{!157, !204, !204, !2626}
!17050 = !{!17051, !17052, !17053}
!17051 = !DILocalVariable(name: "a", arg: 1, scope: !17046, file: !17047, line: 47, type: !204)
!17052 = !DILocalVariable(name: "b", arg: 2, scope: !17046, file: !17047, line: 47, type: !204)
!17053 = !DILocalVariable(name: "result", arg: 3, scope: !17046, file: !17047, line: 47, type: !2626)
!17054 = !DILocation(line: 0, scope: !17046)
!17055 = !DILocation(line: 49, column: 9, scope: !17046)
!17056 = !DILocation(line: 49, column: 2, scope: !17046)
!17057 = distinct !DISubprogram(name: "boot_banner", scope: !17058, file: !17058, line: 26, type: !3213, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3199, retainedNodes: !317)
!17058 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17059 = !DILocation(line: 34, column: 2, scope: !17057)
!17060 = !DILocation(line: 36, column: 1, scope: !17057)
!17061 = distinct !DISubprogram(name: "statics_init", scope: !2541, file: !2541, line: 21, type: !2547, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2522, retainedNodes: !17062)
!17062 = !{!17063, !17064}
!17063 = !DILocalVariable(name: "unused", arg: 1, scope: !17061, file: !2541, line: 21, type: !2549)
!17064 = !DILocalVariable(name: "h", scope: !17065, file: !2541, line: 24, type: !17066)
!17065 = distinct !DILexicalBlock(scope: !17061, file: !2541, line: 24, column: 2)
!17066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17067, size: 32)
!17067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !296, line: 5073, size: 160, elements: !17068)
!17068 = !{!17069, !17075, !17081}
!17069 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !17067, file: !296, line: 5074, baseType: !17070, size: 96)
!17070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !17071)
!17071 = !{!17072, !17073, !17074}
!17072 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !17070, file: !472, line: 57, baseType: !475, size: 32)
!17073 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !17070, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!17074 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !17070, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!17075 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !17067, file: !296, line: 5075, baseType: !17076, size: 64, offset: 96)
!17076 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !17077)
!17077 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !17078)
!17078 = !{!17079}
!17079 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !17077, file: !320, line: 232, baseType: !17080, size: 64)
!17080 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !2527)
!17081 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !17067, file: !296, line: 5076, baseType: !17082, offset: 160)
!17082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!17083 = !DILocation(line: 0, scope: !17061)
!17084 = !DILocation(line: 0, scope: !17065)
!17085 = !DILocation(line: 24, column: 2, scope: !17065)
!17086 = !DILocation(line: 52, column: 2, scope: !17061)
!17087 = !DILocation(line: 49, column: 27, scope: !17088)
!17088 = distinct !DILexicalBlock(scope: !17089, file: !2541, line: 48, column: 3)
!17089 = distinct !DILexicalBlock(scope: !17090, file: !2541, line: 24, column: 36)
!17090 = distinct !DILexicalBlock(scope: !17065, file: !2541, line: 24, column: 2)
!17091 = !DILocation(line: 49, column: 45, scope: !17088)
!17092 = !DILocation(line: 49, column: 4, scope: !17088)
!17093 = !DILocation(line: 24, column: 2, scope: !17090)
!17094 = !DILocation(line: 24, column: 2, scope: !17095)
!17095 = distinct !DILexicalBlock(scope: !17090, file: !2541, line: 24, column: 2)
!17096 = distinct !{!17096, !17085, !17097}
!17097 = !DILocation(line: 51, column: 2, scope: !17065)
!17098 = distinct !DISubprogram(name: "k_heap_init", scope: !2541, file: !2541, line: 13, type: !17099, scopeLine: 14, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2522, retainedNodes: !17101)
!17099 = !DISubroutineType(types: !17100)
!17100 = !{null, !17066, !102, !204}
!17101 = !{!17102, !17103, !17104}
!17102 = !DILocalVariable(name: "h", arg: 1, scope: !17098, file: !2541, line: 13, type: !17066)
!17103 = !DILocalVariable(name: "mem", arg: 2, scope: !17098, file: !2541, line: 13, type: !102)
!17104 = !DILocalVariable(name: "bytes", arg: 3, scope: !17098, file: !2541, line: 13, type: !204)
!17105 = !DILocation(line: 0, scope: !17098)
!17106 = !DILocation(line: 15, column: 19, scope: !17098)
!17107 = !DILocation(line: 15, column: 2, scope: !17098)
!17108 = !DILocation(line: 16, column: 20, scope: !17098)
!17109 = !DILocation(line: 16, column: 2, scope: !17098)
!17110 = !DILocation(line: 19, column: 1, scope: !17098)
!17111 = distinct !DISubprogram(name: "z_waitq_init", scope: !13189, file: !13189, line: 47, type: !17112, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2522, retainedNodes: !17115)
!17112 = !DISubroutineType(types: !17113)
!17113 = !{null, !17114}
!17114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17076, size: 32)
!17115 = !{!17116}
!17116 = !DILocalVariable(name: "w", arg: 1, scope: !17111, file: !13189, line: 47, type: !17114)
!17117 = !DILocation(line: 0, scope: !17111)
!17118 = !DILocation(line: 49, column: 21, scope: !17111)
!17119 = !DILocation(line: 49, column: 2, scope: !17111)
!17120 = !DILocation(line: 50, column: 1, scope: !17111)
!17121 = distinct !DISubprogram(name: "sys_dlist_init", scope: !325, file: !325, line: 197, type: !17122, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2522, retainedNodes: !17125)
!17122 = !DISubroutineType(types: !17123)
!17123 = !{null, !17124}
!17124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17080, size: 32)
!17125 = !{!17126}
!17126 = !DILocalVariable(name: "list", arg: 1, scope: !17121, file: !325, line: 197, type: !17124)
!17127 = !DILocation(line: 0, scope: !17121)
!17128 = !DILocation(line: 199, column: 8, scope: !17121)
!17129 = !DILocation(line: 199, column: 13, scope: !17121)
!17130 = !DILocation(line: 200, column: 8, scope: !17121)
!17131 = !DILocation(line: 200, column: 13, scope: !17121)
!17132 = !DILocation(line: 201, column: 1, scope: !17121)
!17133 = distinct !DISubprogram(name: "k_heap_aligned_alloc", scope: !2541, file: !2541, line: 64, type: !17134, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2522, retainedNodes: !17140)
!17134 = !DISubroutineType(types: !17135)
!17135 = !{!102, !17066, !204, !204, !17136}
!17136 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !201, line: 67, baseType: !17137)
!17137 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 65, size: 64, elements: !17138)
!17138 = !{!17139}
!17139 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !17137, file: !201, line: 66, baseType: !200, size: 64)
!17140 = !{!17141, !17142, !17143, !17144, !17145, !17146, !17147, !17148, !17153}
!17141 = !DILocalVariable(name: "h", arg: 1, scope: !17133, file: !2541, line: 64, type: !17066)
!17142 = !DILocalVariable(name: "align", arg: 2, scope: !17133, file: !2541, line: 64, type: !204)
!17143 = !DILocalVariable(name: "bytes", arg: 3, scope: !17133, file: !2541, line: 64, type: !204)
!17144 = !DILocalVariable(name: "timeout", arg: 4, scope: !17133, file: !2541, line: 65, type: !17136)
!17145 = !DILocalVariable(name: "now", scope: !17133, file: !2541, line: 67, type: !202)
!17146 = !DILocalVariable(name: "end", scope: !17133, file: !2541, line: 67, type: !202)
!17147 = !DILocalVariable(name: "ret", scope: !17133, file: !2541, line: 68, type: !102)
!17148 = !DILocalVariable(name: "key", scope: !17133, file: !2541, line: 72, type: !17149)
!17149 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !316, line: 106, baseType: !17150)
!17150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !316, line: 32, size: 32, elements: !17151)
!17151 = !{!17152}
!17152 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !17150, file: !316, line: 33, baseType: !103, size: 32)
!17153 = !DILocalVariable(name: "blocked_alloc", scope: !17133, file: !2541, line: 78, type: !157)
!17154 = !DILocation(line: 0, scope: !17133)
!17155 = !DILocation(line: 67, column: 21, scope: !17133)
!17156 = !DILocation(line: 70, column: 8, scope: !17133)
!17157 = !DILocation(line: 72, column: 41, scope: !17133)
!17158 = !DILocalVariable(name: "l", arg: 1, scope: !17159, file: !316, line: 136, type: !17162)
!17159 = distinct !DISubprogram(name: "k_spin_lock", scope: !316, file: !316, line: 136, type: !17160, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2522, retainedNodes: !17163)
!17160 = !DISubroutineType(types: !17161)
!17161 = !{!17149, !17162}
!17162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17082, size: 32)
!17163 = !{!17158, !17164}
!17164 = !DILocalVariable(name: "k", scope: !17159, file: !316, line: 139, type: !17149)
!17165 = !DILocation(line: 0, scope: !17159, inlinedAt: !17166)
!17166 = distinct !DILocation(line: 72, column: 25, scope: !17133)
!17167 = !DILocation(line: 55, column: 2, scope: !17168, inlinedAt: !17172)
!17168 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5768, file: !5768, line: 42, type: !5769, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2522, retainedNodes: !17169)
!17169 = !{!17170, !17171}
!17170 = !DILocalVariable(name: "key", scope: !17168, file: !5768, line: 44, type: !32)
!17171 = !DILocalVariable(name: "tmp", scope: !17168, file: !5768, line: 53, type: !32)
!17172 = distinct !DILocation(line: 145, column: 10, scope: !17159, inlinedAt: !17166)
!17173 = !{i64 2037743}
!17174 = !DILocation(line: 0, scope: !17168, inlinedAt: !17172)
!17175 = !DILocation(line: 81, column: 9, scope: !17176)
!17176 = distinct !DILexicalBlock(scope: !17133, file: !2541, line: 80, column: 22)
!17177 = !DILocation(line: 83, column: 9, scope: !17176)
!17178 = !DILocation(line: 85, column: 12, scope: !17179)
!17179 = distinct !DILexicalBlock(scope: !17176, file: !2541, line: 84, column: 7)
!17180 = !DILocation(line: 85, column: 21, scope: !17179)
!17181 = !DILocation(line: 85, column: 30, scope: !17179)
!17182 = !DILocation(line: 85, column: 37, scope: !17179)
!17183 = !DILocation(line: 84, column: 7, scope: !17176)
!17184 = !DILocation(line: 99, column: 10, scope: !17176)
!17185 = !DILocation(line: 0, scope: !17159, inlinedAt: !17186)
!17186 = distinct !DILocation(line: 101, column: 9, scope: !17176)
!17187 = !DILocation(line: 55, column: 2, scope: !17168, inlinedAt: !17188)
!17188 = distinct !DILocation(line: 145, column: 10, scope: !17159, inlinedAt: !17186)
!17189 = !DILocation(line: 0, scope: !17168, inlinedAt: !17188)
!17190 = distinct !{!17190, !17191, !17192}
!17191 = !DILocation(line: 80, column: 2, scope: !17133)
!17192 = !DILocation(line: 102, column: 2, scope: !17133)
!17193 = !DILocalVariable(name: "key", arg: 2, scope: !17194, file: !316, line: 190, type: !17149)
!17194 = distinct !DISubprogram(name: "k_spin_unlock", scope: !316, file: !316, line: 189, type: !17195, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2522, retainedNodes: !17197)
!17195 = !DISubroutineType(types: !17196)
!17196 = !{null, !17162, !17149}
!17197 = !{!17198, !17193}
!17198 = !DILocalVariable(name: "l", arg: 1, scope: !17194, file: !316, line: 189, type: !17162)
!17199 = !DILocation(line: 0, scope: !17194, inlinedAt: !17200)
!17200 = distinct !DILocation(line: 106, column: 2, scope: !17133)
!17201 = !DILocalVariable(name: "key", arg: 1, scope: !17202, file: !5768, line: 84, type: !32)
!17202 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5768, file: !5768, line: 84, type: !5779, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2522, retainedNodes: !17203)
!17203 = !{!17201}
!17204 = !DILocation(line: 0, scope: !17202, inlinedAt: !17205)
!17205 = distinct !DILocation(line: 215, column: 2, scope: !17194, inlinedAt: !17200)
!17206 = !DILocation(line: 95, column: 2, scope: !17202, inlinedAt: !17205)
!17207 = !{i64 2038560}
!17208 = !DILocation(line: 107, column: 2, scope: !17133)
!17209 = distinct !DISubprogram(name: "k_heap_alloc", scope: !2541, file: !2541, line: 110, type: !17210, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2522, retainedNodes: !17212)
!17210 = !DISubroutineType(types: !17211)
!17211 = !{!102, !17066, !204, !17136}
!17212 = !{!17213, !17214, !17215, !17216}
!17213 = !DILocalVariable(name: "h", arg: 1, scope: !17209, file: !2541, line: 110, type: !17066)
!17214 = !DILocalVariable(name: "bytes", arg: 2, scope: !17209, file: !2541, line: 110, type: !204)
!17215 = !DILocalVariable(name: "timeout", arg: 3, scope: !17209, file: !2541, line: 110, type: !17136)
!17216 = !DILocalVariable(name: "ret", scope: !17209, file: !2541, line: 114, type: !102)
!17217 = !DILocation(line: 0, scope: !17209)
!17218 = !DILocation(line: 114, column: 14, scope: !17209)
!17219 = !DILocation(line: 118, column: 2, scope: !17209)
!17220 = distinct !DISubprogram(name: "k_heap_free", scope: !2541, file: !2541, line: 121, type: !17221, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2522, retainedNodes: !17223)
!17221 = !DISubroutineType(types: !17222)
!17222 = !{null, !17066, !102}
!17223 = !{!17224, !17225, !17226}
!17224 = !DILocalVariable(name: "h", arg: 1, scope: !17220, file: !2541, line: 121, type: !17066)
!17225 = !DILocalVariable(name: "mem", arg: 2, scope: !17220, file: !2541, line: 121, type: !102)
!17226 = !DILocalVariable(name: "key", scope: !17220, file: !2541, line: 123, type: !17149)
!17227 = !DILocation(line: 0, scope: !17220)
!17228 = !DILocation(line: 0, scope: !17159, inlinedAt: !17229)
!17229 = distinct !DILocation(line: 123, column: 25, scope: !17220)
!17230 = !DILocation(line: 55, column: 2, scope: !17168, inlinedAt: !17231)
!17231 = distinct !DILocation(line: 145, column: 10, scope: !17159, inlinedAt: !17229)
!17232 = !DILocation(line: 0, scope: !17168, inlinedAt: !17231)
!17233 = !DILocation(line: 125, column: 20, scope: !17220)
!17234 = !DILocation(line: 125, column: 2, scope: !17220)
!17235 = !DILocation(line: 128, column: 60, scope: !17236)
!17236 = distinct !DILexicalBlock(scope: !17220, file: !2541, line: 128, column: 6)
!17237 = !DILocation(line: 128, column: 43, scope: !17236)
!17238 = !DILocation(line: 128, column: 68, scope: !17236)
!17239 = !DILocation(line: 128, column: 6, scope: !17220)
!17240 = !DILocation(line: 123, column: 41, scope: !17220)
!17241 = !DILocation(line: 129, column: 3, scope: !17242)
!17242 = distinct !DILexicalBlock(scope: !17236, file: !2541, line: 128, column: 74)
!17243 = !DILocation(line: 130, column: 2, scope: !17242)
!17244 = !DILocation(line: 0, scope: !17194, inlinedAt: !17245)
!17245 = distinct !DILocation(line: 131, column: 3, scope: !17246)
!17246 = distinct !DILexicalBlock(scope: !17236, file: !2541, line: 130, column: 9)
!17247 = !DILocation(line: 0, scope: !17202, inlinedAt: !17248)
!17248 = distinct !DILocation(line: 215, column: 2, scope: !17194, inlinedAt: !17245)
!17249 = !DILocation(line: 95, column: 2, scope: !17202, inlinedAt: !17248)
!17250 = !DILocation(line: 133, column: 1, scope: !17220)
