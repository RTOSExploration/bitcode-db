; ModuleID = 'build/96b_carbon/pi/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, [32 x i8], i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon = type { %struct._dnode }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type opaque
%struct.k_spinlock = type { i32 }
%struct._thread_arch = type { i32, i32 }
%struct.z_thread_stack_element = type { i8 }
%struct.log_source_const_data = type { i8*, i8 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.k_spinlock }
%struct.arm_mpu_region = type { i32, i8*, %struct.k_spinlock }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.k_spinlock, i32*, i32, %struct._thread_arch }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.k_spinlock, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct._cpu_arch }
%struct._cpu_arch = type {}
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.k_spinlock, %struct.k_spinlock }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, i32 }
%struct.emitter = type { i8*, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %struct.k_spinlock*, %struct.k_spinlock* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32, i32, i32 }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [85 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [85 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134235700 to i8*), void (i8*)* inttoptr (i32 134234355 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134235700 to i8*), void (i8*)* inttoptr (i32 134234335 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134235700 to i8*), void (i8*)* inttoptr (i32 134234325 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134235700 to i8*), void (i8*)* inttoptr (i32 134234425 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134235700 to i8*), void (i8*)* inttoptr (i32 134234415 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134235700 to i8*), void (i8*)* inttoptr (i32 134234405 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134235700 to i8*), void (i8*)* inttoptr (i32 134234395 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134235700 to i8*), void (i8*)* inttoptr (i32 134234385 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134235700 to i8*), void (i8*)* inttoptr (i32 134234375 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134235700 to i8*), void (i8*)* inttoptr (i32 134234365 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134235700 to i8*), void (i8*)* inttoptr (i32 134234345 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@.str = private unnamed_addr constant [5 x i8] c"%.4d\00", align 1
@.str.1 = private unnamed_addr constant [62 x i8] c"Calculate first %d digits of Pi independently by %d threads.\0A\00", align 1
@tthread = internal global [16 x %struct.k_thread] zeroinitializer, align 8, !dbg !25
@tstack = internal global [16 x [4480 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.0", align 64, !dbg !123
@counter = internal global i32 16, align 4, !dbg !139
@buffer = internal global [16 x [241 x i8]] zeroinitializer, align 1, !dbg !134
@.str.2 = private unnamed_addr constant [39 x i8] c"Pi value calculated by thread #%d: %s\0A\00", align 1
@.str.3 = private unnamed_addr constant [48 x i8] c"All %d threads executed by %d cores in %d msec\0A\00", align 1
@llvm.compiler.used = appending global [45 x i8*] [i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_mpu to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_39 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_20 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_23 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_25 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_72 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_73 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_74 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_75 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_76 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_20 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_23 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_25 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_72 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_73 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_74 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_75 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_76 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_44 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_47 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_50 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_44 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_47 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_50 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_uart_stm32 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*)], section "llvm.metadata"
@.str.4 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !268
@.str.1.5 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.6 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.3.7 = private unnamed_addr constant [39 x i8] c"ZEPHYR_BASE/lib/os/cbprintf_packaged.c\00", align 1
@.str.4.8 = private unnamed_addr constant [33 x i8] c"\09String with too many arguments\0A\00", align 1
@.str.5 = private unnamed_addr constant [26 x i8] c"\09str_ptr_pos[] too small\0A\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"\09unexpected size %u\0A\00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"\09too many format args\0A\00", align 1
@.str.8 = private unnamed_addr constant [27 x i8] c"in_packaged != ((void *)0)\00", align 1
@.str.9 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@.str.10 = private unnamed_addr constant [31 x i8] c"scpy_cnt < sizeof(cpy_str_pos)\00", align 1
@.str.11 = private unnamed_addr constant [32 x i8] c"keep_cnt < sizeof(keep_str_pos)\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@.str.12 = private unnamed_addr constant [24 x i8] c"packaged != ((void *)0)\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !293
@.str.13 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !303
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !354
@.str.22 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.24 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.25 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.23 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.27 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.28 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.26 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.29 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.30 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.31 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.32 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@.str.33 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.34 = private unnamed_addr constant [27 x i8] c"prio <= ((1UL << (4)) - 1)\00", align 1
@.str.2.35 = private unnamed_addr constant [47 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/irq_manage.c\00", align 1
@.str.3.36 = private unnamed_addr constant [64 x i8] c"\09invalid priority %d for %d irq! values must be less than %lu\0A\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.39 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.40 = private unnamed_addr constant [19 x i8] c"esf != ((void *)0)\00", align 1
@.str.2.41 = private unnamed_addr constant [51 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/cortex_m/fault.c\00", align 1
@.str.3.42 = private unnamed_addr constant [62 x i8] c"\09ESF could not be retrieved successfully. Shall never occur.\0A\00", align 1
@.str.4.55 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.5.47 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.6.48 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.7.49 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.8.50 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.9.51 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.10.52 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.53 = private unnamed_addr constant [36 x i8] c"\09Fault escalation without FSR info\0A\00", align 1
@.str.12.54 = private unnamed_addr constant [48 x i8] c"\09HardFault without HFSR info Shall never occur\0A\00", align 1
@.str.13.46 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.14 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.15 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.16 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.17 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.18 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.19 = private unnamed_addr constant [52 x i8] c"%c:   Floating-point lazy state preservation error\0A\00", align 1
@.str.20 = private unnamed_addr constant [74 x i8] c"!(((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CFSR & (1UL << (0U + 4U)))\00", align 1
@.str.21 = private unnamed_addr constant [35 x i8] c"\09Stacking error not a stack fail\0A\0A\00", align 1
@.str.22.45 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.23 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.24 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.25 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.26 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.27 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.28 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.29.43 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.30 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.31 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.32 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.33.44 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.34 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.35 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.36 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.37 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.38 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@.str.61 = private unnamed_addr constant [4 x i8] c"mpu\00", align 1
@log_const_mpu = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.61, i32 0, i32 0), i8 3 }, section ".log_const_mpu", align 4, !dbg !383
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.k_spinlock { i32 101384192 } }], align 4, !dbg !517
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !389
@.str.67 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.68 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.2.69 = private unnamed_addr constant [48 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/mpu/arm_mpu.c\00", align 1
@.str.3.70 = private unnamed_addr constant [44 x i8] c"\09Configuring %u static MPU regions failed\0A\0A\00", align 1
@.str.4.75 = private unnamed_addr constant [45 x i8] c"\09Configuring %u dynamic MPU regions failed\0A\0A\00", align 1
@.str.5.76 = private unnamed_addr constant [52 x i8] c"\09Request to configure: %u regions (supported: %u)\0A\0A\00", align 1
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !526
@.str.6.77 = private unnamed_addr constant [80 x i8] c"(((MPU_Type *) ((0xE000E000UL) + 0x0D90UL) )->TYPE & (0xFFUL << 8U)) >> 8U == 8\00", align 1
@.str.7.78 = private unnamed_addr constant [33 x i8] c"\09Invalid number of MPU regions\0A\0A\00", align 1
@.str.8.71 = private unnamed_addr constant [40 x i8] c"%c: Partition %u: sanity check failed.\0A\00", align 1
@.str.9.72 = private unnamed_addr constant [43 x i8] c"%c: Failed to allocate new MPU region %u\0A\0A\00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !562
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.90, i32 0, i32 0), %struct.k_spinlock { i32 117571620 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.91, i32 0, i32 0), %struct.k_spinlock { i32 285933600 } }], align 4, !dbg !572
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !577
@.str.90 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.91 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@.str.94 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.95 = private unnamed_addr constant [5 x i8] c"line\00", align 1
@.str.2.96 = private unnamed_addr constant [59 x i8] c"ZEPHYR_BASE/drivers/interrupt_controller/intc_exti_stm32.c\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !597
@__devicehdl_dts_ord_39 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !769
@.str.4.92 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_39 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !730
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !713
@__device_dts_ord_39 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4.92, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_39, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_39, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !686
@__init___device_dts_ord_39 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_39 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !702
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !732
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !746
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !748
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !750
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !752
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !754
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !756
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !758
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !760
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !762
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !764
@__devicehdl_dts_ord_9 = dso_local constant [14 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 13, i16 32767], section ".__device_handles_pass2", align 2, !dbg !774
@.str.97 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !805
@__devstate_dts_ord_9 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !902
@__init___device_dts_ord_9 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_9 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !891
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !943
@__devicehdl_dts_ord_25 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !794
@.str.106 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1009
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1288
@__devstate_dts_ord_25 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1258
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1244
@__init___device_dts_ord_25 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_25 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1186
@__devicehdl_dts_ord_20 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !792
@.str.1.114 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1290
@__devstate_dts_ord_20 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1262
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1260
@__init___device_dts_ord_20 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_20 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1200
@__devicehdl_dts_ord_72 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !790
@.str.2.115 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1303
@__devstate_dts_ord_72 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1266
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1264
@__init___device_dts_ord_72 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_72 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1209
@__devicehdl_dts_ord_23 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !788
@.str.3.116 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1305
@__devstate_dts_ord_23 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1270
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1268
@__init___device_dts_ord_23 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_23 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1218
@__devicehdl_dts_ord_73 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !786
@.str.4.117 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1307
@__devstate_dts_ord_73 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1274
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1272
@__init___device_dts_ord_73 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_73 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1224
@__devicehdl_dts_ord_74 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !784
@.str.5.118 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1309
@__devstate_dts_ord_74 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1278
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1276
@__init___device_dts_ord_74 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_74 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1230
@__devicehdl_dts_ord_75 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !782
@.str.6.119 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1311
@__devstate_dts_ord_75 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1282
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1280
@__init___device_dts_ord_75 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_75 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1236
@__devicehdl_dts_ord_76 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !780
@.str.7.120 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1313
@__devstate_dts_ord_76 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1286
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1284
@__init___device_dts_ord_76 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_76 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1242
@.str.8.107 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.31.113 = private unnamed_addr constant [12 x i8] c"cb->handler\00", align 1
@.str.32.109 = private unnamed_addr constant [53 x i8] c"ZEPHYR_BASE/include/zephyr/drivers/gpio/gpio_utils.h\00", align 1
@.str.33.112 = private unnamed_addr constant [23 x i8] c"\09No callback handler!\0A\00", align 1
@.str.34.108 = private unnamed_addr constant [9 x i8] c"callback\00", align 1
@.str.35.110 = private unnamed_addr constant [15 x i8] c"\09No callback!\0A\00", align 1
@.str.36.111 = private unnamed_addr constant [18 x i8] c"callback->handler\00", align 1
@.str.124 = private unnamed_addr constant [11 x i8] c"uart_stm32\00", align 1
@log_const_uart_stm32 = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.124, i32 0, i32 0), i8 3 }, section ".log_const_uart_stm32", align 4, !dbg !1315
@__devicehdl_dts_ord_47 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !800
@.str.1.127 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_47 }, align 4, !dbg !1487
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1542
@__devstate_dts_ord_47 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1481
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1544
@__device_dts_ord_47 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.127, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_47, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_47, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1460
@__init___device_dts_ord_47 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_47 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1462
@__devicehdl_dts_ord_44 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !798
@.str.2.134 = private unnamed_addr constant [16 x i8] c"serial@40004400\00", align 1
@uart_stm32_cfg_1 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073759232 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_1, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_44 }, align 4, !dbg !1550
@__devstate_dts_ord_44 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1483
@uart_stm32_data_1 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1560
@__device_dts_ord_44 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2.134, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_1 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_44, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_1 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_44, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1471
@__init___device_dts_ord_44 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_44 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1473
@__devicehdl_dts_ord_50 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !796
@.str.3.135 = private unnamed_addr constant [16 x i8] c"serial@40011400\00", align 1
@uart_stm32_cfg_2 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073812480 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_2, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_50 }, align 4, !dbg !1562
@__devstate_dts_ord_50 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1485
@uart_stm32_data_2 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1572
@__device_dts_ord_50 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3.135, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_2 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_50, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_2 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_50, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1477
@__init___device_dts_ord_50 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_50 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1479
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1531
@__pinctrl_dev_config__device_dts_ord_47 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_47, i32 0, i32 0), i8 1 }, align 4, !dbg !1534
@__pinctrl_states__device_dts_ord_47 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_47, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1536
@__pinctrl_state_pins_0__device_dts_ord_47 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1539
@.str.4.129 = private unnamed_addr constant [51 x i8] c"%c: Failed call clock_control_get_rate(pclken[0])\0A\00", align 1
@.str.5.130 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.6.131 = private unnamed_addr constant [28 x i8] c"((config->usart->BRR)) > 16\00", align 1
@.str.7.132 = private unnamed_addr constant [40 x i8] c"ZEPHYR_BASE/drivers/serial/uart_stm32.c\00", align 1
@.str.8.133 = private unnamed_addr constant [20 x i8] c"\09BaudRateReg >= 16\0A\00", align 1
@.str.9.138 = private unnamed_addr constant [36 x i8] c"%c: clock control device not ready\0A\00", align 1
@.str.10.140 = private unnamed_addr constant [37 x i8] c"%c: Could not enable (LP)UART clock\0A\00", align 1
@.str.11.141 = private unnamed_addr constant [55 x i8] c"%c: Invalid parity setting '%d'.Defaulting to 'none'.\0A\00", align 1
@__device_dts_ord_9 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.97, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_9, i8* null, i16* getelementptr inbounds ([14 x i16], [14 x i16]* @__devicehdl_dts_ord_9, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !875
@pclken_1 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 131072 }], align 4, !dbg !1552
@__pinctrl_dev_config__device_dts_ord_44 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_44, i32 0, i32 0), i8 1 }, align 4, !dbg !1554
@__pinctrl_states__device_dts_ord_44 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_44, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1556
@__pinctrl_state_pins_0__device_dts_ord_44 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 71, i32 512 }, %struct._thread_arch { i32 103, i32 0 }], align 4, !dbg !1558
@pclken_2 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 32 }], align 4, !dbg !1564
@__pinctrl_dev_config__device_dts_ord_50 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_50, i32 0, i32 0), i8 1 }, align 4, !dbg !1566
@__pinctrl_states__device_dts_ord_50 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_50, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1568
@__pinctrl_state_pins_0__device_dts_ord_50 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1224, i32 512 }, %struct._thread_arch { i32 1256, i32 0 }], align 4, !dbg !1570
@switch.table.uart_stm32_init = private unnamed_addr constant [3 x i32] [i32 0, i32 1536, i32 1024], align 4
@switch.table.uart_stm32_init.12 = private unnamed_addr constant [3 x i32] [i32 0, i32 4096, i32 4096], align 4
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1579
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1690
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1692
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1688
@lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !1683
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1657
@.str.145 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.146 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.147 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.148 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.149 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.5.150 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_25, %struct.device* @__device_dts_ord_20, %struct.device* @__device_dts_ord_72, %struct.device* @__device_dts_ord_23, %struct.device* @__device_dts_ord_73, %struct.device* @__device_dts_ord_74, %struct.device* @__device_dts_ord_75, %struct.device* @__device_dts_ord_76, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1694
@__device_dts_ord_25 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.106, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_25, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_25, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1184
@__device_dts_ord_20 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.114, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_20, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_20, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1198
@__device_dts_ord_72 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.115, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_72, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_72, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1207
@__device_dts_ord_23 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.116, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_23, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_23, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1216
@__device_dts_ord_73 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.117, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_73, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_73, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1222
@__device_dts_ord_74 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.118, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_74, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_74, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1228
@__device_dts_ord_75 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.119, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_75, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_75, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1234
@__device_dts_ord_76 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7.120, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_76, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_76, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1240
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1784
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1826
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1829
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1834
@.str.184 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.188 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.189 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.190 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.194 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.5.195 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.6.196 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.7.197 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.8.198 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.9.193 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.10.192 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.194, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.195, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6.196, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.197, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8.198, i32 0, i32 0)], align 4
@.str.200 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.200, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !1841
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !2067
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2054
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2062
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2074
@.str.5.206 = private unnamed_addr constant [5 x i8] c"idle\00", align 1
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2079
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.6.210 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.215, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.216, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.217, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.218, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.219, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.220, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.214, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.221, i32 0, i32 0)], align 4, !dbg !2107
@.str.215 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.216 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.217 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.218 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.219 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.220 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.214 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.221 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2222
@.str.8.213 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.9.224 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.10.225 = private unnamed_addr constant [128 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((entry))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.11.226 = private unnamed_addr constant [28 x i8] c"ZEPHYR_BASE/kernel/thread.c\00", align 1
@.str.12.227 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.13.231 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.14.232 = private unnamed_addr constant [37 x i8] c"\09Threads may not be created in ISRs\0A\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@.str.15.235 = private unnamed_addr constant [45 x i8] c"thread_data <= __static_thread_data_list_end\00", align 1
@.str.16.236 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.246 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.247 = private unnamed_addr constant [40 x i8] c"_kernel.cpus[0].current->base.prio >= 0\00", align 1
@.str.2.248 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/kernel/idle.c\00", align 1
@sched_spinlock = dso_local global %struct.k_spinlock zeroinitializer, align 4, !dbg !2235
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2346
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2349
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2351
@.str.249 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.265 = private unnamed_addr constant [61 x i8] c"thread == _kernel.cpus[0].current || is_thread_dummy(thread)\00", align 1
@.str.2.256 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/sched.c\00", align 1
@.str.3.270 = private unnamed_addr constant [55 x i8] c"sizeof(sched_spinlock) == 0 || lock != &sched_spinlock\00", align 1
@.str.4.278 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 0U\00", align 1
@.str.5.258 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.6.273 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.7.255 = private unnamed_addr constant [33 x i8] c"!z_is_idle_thread_object(thread)\00", align 1
@.str.8.282 = private unnamed_addr constant [134 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((((void *)0)))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.9.283 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.10.291 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.292 = private unnamed_addr constant [31 x i8] c"\09aborting essential thread %p\0A\00", align 1
@.str.12.293 = private unnamed_addr constant [34 x i8] c"\09aborted _current back from dead\0A\00", align 1
@.str.13.294 = private unnamed_addr constant [21 x i8] c"\09cannot join in ISR\0A\00", align 1
@.str.14.250 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.15.251 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.16.252 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.17.253 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.18.254 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.19.257 = private unnamed_addr constant [39 x i8] c"_kernel.cpus[0].current != ((void *)0)\00", align 1
@.str.20.269 = private unnamed_addr constant [23 x i8] c"thread->base.pended_on\00", align 1
@.str.21.274 = private unnamed_addr constant [36 x i8] c"ZEPHYR_BASE/kernel/include/ksched.h\00", align 1
@.str.22.275 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 1U\00", align 1
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2064
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2072
@.str.23.286 = private unnamed_addr constant [64 x i8] c"!z_is_thread_state_set(_kernel.cpus[0].current, ((1UL << (4))))\00", align 1
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@.str.300 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.301 = private unnamed_addr constant [32 x i8] c"!sys_dnode_is_linked(&to->node)\00", align 1
@.str.2.302 = private unnamed_addr constant [29 x i8] c"ZEPHYR_BASE/kernel/timeout.c\00", align 1
@.str.3.303 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@timeout_lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2353
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2383
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2388
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !1928
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2386
@.str.4.304 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.305 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.306 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.310 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.311 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.331 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !2980 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #23, !dbg !2984, !srcloc !2985
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #23, !dbg !2986, !srcloc !2987
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #23, !dbg !2988, !srcloc !2989
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #23, !dbg !2990, !srcloc !2991
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #23, !dbg !2992, !srcloc !2993
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #23, !dbg !2994, !srcloc !2995
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #23, !dbg !2996, !srcloc !2997
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #23, !dbg !2998, !srcloc !2999
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #23, !dbg !3000, !srcloc !3001
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #23, !dbg !3002, !srcloc !3003
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #23, !dbg !3004, !srcloc !3005
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #23, !dbg !3006, !srcloc !3007
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #23, !dbg !3008, !srcloc !3009
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #23, !dbg !3010, !srcloc !3011
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #23, !dbg !3012, !srcloc !3013
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #23, !dbg !3014, !srcloc !3015
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #23, !dbg !3016, !srcloc !3017
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -149) #23, !dbg !3018, !srcloc !3019
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3020, !srcloc !3021
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #23, !dbg !3022, !srcloc !3023
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -133) #23, !dbg !3024, !srcloc !3025
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -161) #23, !dbg !3026, !srcloc !3027
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #23, !dbg !3028, !srcloc !3029
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3030, !srcloc !3031
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #23, !dbg !3032, !srcloc !3033
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #23, !dbg !3034, !srcloc !3035
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #23, !dbg !3036, !srcloc !3037
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #23, !dbg !3038, !srcloc !3041
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #23, !dbg !3042, !srcloc !3043
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3044, !srcloc !3045
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3046, !srcloc !3047
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3048, !srcloc !3049
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3050, !srcloc !3051
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #23, !dbg !3052, !srcloc !3053
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #23, !dbg !3054, !srcloc !3055
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #23, !dbg !3056, !srcloc !3057
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #23, !dbg !3058, !srcloc !3059
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3060, !srcloc !3061
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3062, !srcloc !3063
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3064, !srcloc !3065
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3066, !srcloc !3067
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3068, !srcloc !3069
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3070, !srcloc !3071
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #23, !dbg !3072, !srcloc !3073
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #23, !dbg !3074, !srcloc !3075
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #23, !dbg !3076, !srcloc !3077
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #23, !dbg !3078, !srcloc !3079
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #23, !dbg !3080, !srcloc !3081
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #23, !dbg !3082, !srcloc !3083
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3084, !srcloc !3085
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #23, !dbg !3086, !srcloc !3087
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -161) #23, !dbg !3088, !srcloc !3089
  ret void, !dbg !3090
}

; Function Attrs: noinline nounwind optsize
define dso_local void @test_thread(i8* nocapture noundef %0, i8* noundef %1, i8* nocapture readnone %2) #1 !dbg !3093 {
  %4 = alloca [841 x i32], align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3095, metadata !DIExpression()), !dbg !3112
  call void @llvm.dbg.value(metadata i8* %1, metadata !3096, metadata !DIExpression()), !dbg !3112
  call void @llvm.dbg.value(metadata i8* undef, metadata !3097, metadata !DIExpression()), !dbg !3112
  call void @llvm.dbg.value(metadata i8* %0, metadata !3098, metadata !DIExpression()), !dbg !3112
  call void @llvm.dbg.value(metadata i8* %1, metadata !3099, metadata !DIExpression()), !dbg !3112
  %5 = bitcast [841 x i32]* %4 to i8*, !dbg !3113
  call void @llvm.lifetime.start.p0i8(i64 3364, i8* nonnull %5) #23, !dbg !3113
  call void @llvm.dbg.declare(metadata [841 x i32]* %4, metadata !3100, metadata !DIExpression()), !dbg !3114
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(3364) %5, i8 0, i32 3364, i1 false), !dbg !3114
  call void @llvm.dbg.value(metadata i32 0, metadata !3104, metadata !DIExpression()), !dbg !3112
  call void @llvm.dbg.value(metadata i32 0, metadata !3105, metadata !DIExpression()), !dbg !3112
  br label %6, !dbg !3115

6:                                                ; preds = %3, %6
  %7 = phi i32 [ 0, %3 ], [ %9, %6 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !3105, metadata !DIExpression()), !dbg !3112
  %8 = getelementptr inbounds [841 x i32], [841 x i32]* %4, i32 0, i32 %7, !dbg !3117
  store i32 2000, i32* %8, align 4, !dbg !3120
  %9 = add nuw nsw i32 %7, 1, !dbg !3121
  call void @llvm.dbg.value(metadata i32 %9, metadata !3105, metadata !DIExpression()), !dbg !3112
  %10 = icmp eq i32 %9, 840, !dbg !3122
  br i1 %10, label %11, label %6, !dbg !3115, !llvm.loop !3123

11:                                               ; preds = %6, %32
  %12 = phi i8* [ %38, %32 ], [ %1, %6 ]
  %13 = phi i32 [ %39, %32 ], [ 840, %6 ]
  %14 = phi i32 [ %36, %32 ], [ 0, %6 ]
  call void @llvm.dbg.value(metadata i8* %12, metadata !3099, metadata !DIExpression()), !dbg !3112
  call void @llvm.dbg.value(metadata i32 %13, metadata !3105, metadata !DIExpression()), !dbg !3112
  call void @llvm.dbg.value(metadata i32 %14, metadata !3104, metadata !DIExpression()), !dbg !3112
  call void @llvm.dbg.value(metadata i32 0, metadata !3107, metadata !DIExpression()), !dbg !3125
  call void @llvm.dbg.value(metadata i32 %13, metadata !3106, metadata !DIExpression()), !dbg !3112
  br label %15, !dbg !3126

15:                                               ; preds = %11, %15
  %16 = phi i32 [ %27, %15 ], [ 0, %11 ]
  %17 = phi i32 [ %30, %15 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !3107, metadata !DIExpression()), !dbg !3125
  call void @llvm.dbg.value(metadata i32 %17, metadata !3106, metadata !DIExpression()), !dbg !3112
  %18 = mul nsw i32 %16, %17, !dbg !3128
  %19 = getelementptr inbounds [841 x i32], [841 x i32]* %4, i32 0, i32 %17, !dbg !3131
  %20 = load i32, i32* %19, align 4, !dbg !3131
  %21 = mul nsw i32 %20, 10000, !dbg !3132
  %22 = add nsw i32 %21, %18, !dbg !3133
  call void @llvm.dbg.value(metadata i32 %22, metadata !3107, metadata !DIExpression()), !dbg !3125
  %23 = shl nuw nsw i32 %17, 1, !dbg !3134
  %24 = add nsw i32 %23, -1, !dbg !3135
  %25 = freeze i32 %22
  %26 = freeze i32 %24
  %27 = sdiv i32 %25, %26, !dbg !3136
  %28 = mul i32 %27, %26
  %29 = sub i32 %25, %28
  store i32 %29, i32* %19, align 4, !dbg !3137
  call void @llvm.dbg.value(metadata i32 %27, metadata !3107, metadata !DIExpression()), !dbg !3125
  %30 = add nsw i32 %17, -1, !dbg !3138
  call void @llvm.dbg.value(metadata i32 %30, metadata !3106, metadata !DIExpression()), !dbg !3112
  %31 = icmp sgt i32 %17, 1, !dbg !3139
  br i1 %31, label %15, label %32, !dbg !3126, !llvm.loop !3140

32:                                               ; preds = %15
  %33 = sdiv i32 %27, 10000, !dbg !3142
  %34 = add nsw i32 %33, %14, !dbg !3143
  call void @llvm.dbg.value(metadata i32 %34, metadata !3111, metadata !DIExpression()), !dbg !3125
  %35 = mul i32 %33, 10000
  %36 = sub i32 %27, %35
  call void @llvm.dbg.value(metadata i32 %36, metadata !3104, metadata !DIExpression()), !dbg !3112
  %37 = tail call i32 (i8*, i8*, ...) @sprintf(i8* noundef %12, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i32 noundef %34) #24, !dbg !3144
  %38 = getelementptr inbounds i8, i8* %12, i32 4, !dbg !3145
  call void @llvm.dbg.value(metadata i8* %38, metadata !3099, metadata !DIExpression()), !dbg !3112
  %39 = add nsw i32 %13, -14, !dbg !3146
  call void @llvm.dbg.value(metadata i32 %39, metadata !3105, metadata !DIExpression()), !dbg !3112
  %40 = icmp ugt i32 %13, 14, !dbg !3147
  br i1 %40, label %11, label %41, !dbg !3148, !llvm.loop !3149

41:                                               ; preds = %32
  %42 = bitcast i8* %0 to i32*, !dbg !3151
  call void @llvm.dbg.value(metadata i32* %42, metadata !3098, metadata !DIExpression()), !dbg !3112
  tail call fastcc void @atomic_dec(i32* noundef %42) #25, !dbg !3152
  call void @llvm.lifetime.end.p0i8(i64 3364, i8* nonnull %5) #23, !dbg !3153
  ret void, !dbg !3153
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #4

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_dec(i32* nocapture noundef %0) unnamed_addr #5 !dbg !3154 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3160, metadata !DIExpression()), !dbg !3161
  tail call fastcc void @atomic_sub(i32* noundef %0) #25, !dbg !3162
  ret void, !dbg !3163
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_sub(i32* nocapture noundef %0) unnamed_addr #5 !dbg !3164 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3168, metadata !DIExpression()), !dbg !3170
  call void @llvm.dbg.value(metadata i32 1, metadata !3169, metadata !DIExpression()), !dbg !3170
  %2 = atomicrmw sub i32* %0, i32 1 seq_cst, align 4, !dbg !3171
  ret void, !dbg !3172
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !3173 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.1, i32 0, i32 0), i32 noundef 240, i32 noundef 16) #24, !dbg !3180
  %1 = tail call fastcc i32 @k_cycle_get_32() #25, !dbg !3181
  call void @llvm.dbg.value(metadata i32 %1, metadata !3175, metadata !DIExpression()), !dbg !3182
  call void @llvm.dbg.value(metadata i32 0, metadata !3179, metadata !DIExpression()), !dbg !3182
  br label %8, !dbg !3183

2:                                                ; preds = %8
  %3 = load i32, i32* @counter, align 4, !dbg !3185
  %4 = icmp eq i32 %3, 0, !dbg !3186
  br i1 %4, label %18, label %5, !dbg !3186

5:                                                ; preds = %2
  %6 = tail call fastcc i64 @k_ms_to_ticks_ceil64() #25, !dbg !3182
  %7 = insertvalue [1 x i64] poison, i64 %6, 0
  br label %15, !dbg !3186

8:                                                ; preds = %0, %8
  %9 = phi i32 [ 0, %0 ], [ %13, %8 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !3179, metadata !DIExpression()), !dbg !3182
  %10 = getelementptr inbounds [16 x %struct.k_thread], [16 x %struct.k_thread]* @tthread, i32 0, i32 %9, !dbg !3187
  %11 = getelementptr inbounds [16 x [4480 x %struct.z_thread_stack_element]], [16 x [4480 x %struct.z_thread_stack_element]]* @tstack, i32 0, i32 %9, i32 0, !dbg !3190
  %12 = getelementptr inbounds [16 x [241 x i8]], [16 x [241 x i8]]* @buffer, i32 0, i32 %9, i32 0, !dbg !3191
  tail call fastcc void @k_thread_create(%struct.k_thread* noundef nonnull %10, %struct.z_thread_stack_element* noundef nonnull %11, i8* noundef nonnull %12) #25, !dbg !3192
  %13 = add nuw nsw i32 %9, 1, !dbg !3193
  call void @llvm.dbg.value(metadata i32 %13, metadata !3179, metadata !DIExpression()), !dbg !3182
  %14 = icmp eq i32 %13, 16, !dbg !3194
  br i1 %14, label %2, label %8, !dbg !3183, !llvm.loop !3195

15:                                               ; preds = %5, %15
  tail call fastcc void @k_sleep([1 x i64] %7) #25, !dbg !3197
  %16 = load i32, i32* @counter, align 4, !dbg !3185
  %17 = icmp eq i32 %16, 0, !dbg !3186
  br i1 %17, label %18, label %15, !dbg !3186, !llvm.loop !3199

18:                                               ; preds = %15, %2
  %19 = tail call fastcc i32 @k_cycle_get_32() #25, !dbg !3201
  call void @llvm.dbg.value(metadata i32 %19, metadata !3176, metadata !DIExpression()), !dbg !3182
  call void @llvm.dbg.value(metadata !DIArgList(i32 %19, i32 %1), metadata !3177, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3182
  call void @llvm.dbg.value(metadata i64 undef, metadata !3178, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3182
  call void @llvm.dbg.value(metadata i32 0, metadata !3179, metadata !DIExpression()), !dbg !3182
  br label %20, !dbg !3202

20:                                               ; preds = %18, %20
  %21 = phi i32 [ 0, %18 ], [ %23, %20 ]
  call void @llvm.dbg.value(metadata i32 %21, metadata !3179, metadata !DIExpression()), !dbg !3182
  %22 = getelementptr inbounds [16 x [241 x i8]], [16 x [241 x i8]]* @buffer, i32 0, i32 %21, i32 0, !dbg !3204
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.2, i32 0, i32 0), i32 noundef %21, i8* noundef nonnull %22) #24, !dbg !3207
  %23 = add nuw nsw i32 %21, 1, !dbg !3208
  call void @llvm.dbg.value(metadata i32 %23, metadata !3179, metadata !DIExpression()), !dbg !3182
  %24 = icmp eq i32 %23, 16, !dbg !3209
  br i1 %24, label %25, label %20, !dbg !3202, !llvm.loop !3210

25:                                               ; preds = %20
  %26 = sub i32 %19, %1, !dbg !3212
  call void @llvm.dbg.value(metadata i32 %26, metadata !3177, metadata !DIExpression()), !dbg !3182
  %27 = zext i32 %26 to i64, !dbg !3213
  %28 = tail call fastcc i64 @k_cyc_to_ns_floor64(i64 noundef %27) #25, !dbg !3214
  call void @llvm.dbg.value(metadata i64 %28, metadata !3178, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3182
  %29 = trunc i64 %28 to i32, !dbg !3215
  call void @llvm.dbg.value(metadata i32 %29, metadata !3178, metadata !DIExpression()), !dbg !3182
  %30 = udiv i32 %29, 1000000, !dbg !3216
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.3, i32 0, i32 0), i32 noundef 16, i32 noundef 1, i32 noundef %30) #24, !dbg !3217
  ret void, !dbg !3218
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !3219 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #25, !dbg !3222
  ret i32 %1, !dbg !3223
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64() unnamed_addr #6 !dbg !3224 {
  call void @llvm.dbg.value(metadata i64 1, metadata !3229, metadata !DIExpression()), !dbg !3230
  ret i64 10, !dbg !3231
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_create(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %2) unnamed_addr #1 !dbg !3232 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3254, metadata !DIExpression()), !dbg !3255
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3245, metadata !DIExpression()), !dbg !3255
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !3246, metadata !DIExpression()), !dbg !3255
  call void @llvm.dbg.value(metadata i32 4384, metadata !3247, metadata !DIExpression()), !dbg !3255
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* @test_thread, metadata !3248, metadata !DIExpression()), !dbg !3255
  call void @llvm.dbg.value(metadata i8* bitcast (i32* @counter to i8*), metadata !3249, metadata !DIExpression()), !dbg !3255
  call void @llvm.dbg.value(metadata i8* %2, metadata !3250, metadata !DIExpression()), !dbg !3255
  call void @llvm.dbg.value(metadata i8* null, metadata !3251, metadata !DIExpression()), !dbg !3255
  call void @llvm.dbg.value(metadata i32 -6, metadata !3252, metadata !DIExpression()), !dbg !3255
  call void @llvm.dbg.value(metadata i32 0, metadata !3253, metadata !DIExpression()), !dbg !3255
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3256, !srcloc !3258
  %4 = tail call %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef 4384, void (i8*, i8*, i8*)* noundef nonnull @test_thread, i8* noundef bitcast (i32* @counter to i8*), i8* noundef %2, i8* noundef null, i32 noundef -6, i32 noundef 0, [1 x i64] zeroinitializer) #24, !dbg !3259
  ret void, !dbg !3260
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sleep([1 x i64] %0) unnamed_addr #1 !dbg !3261 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3265, metadata !DIExpression()), !dbg !3266
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3267, !srcloc !3269
  %2 = tail call i32 @z_impl_k_sleep([1 x i64] %0) #24, !dbg !3270
  ret void, !dbg !3271
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_cyc_to_ns_floor64(i64 noundef %0) unnamed_addr #6 !dbg !3272 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3274, metadata !DIExpression()), !dbg !3275
  call void @llvm.dbg.value(metadata i64 %0, metadata !3276, metadata !DIExpression()), !dbg !3293
  call void @llvm.dbg.value(metadata i32 84000000, metadata !3281, metadata !DIExpression()), !dbg !3293
  call void @llvm.dbg.value(metadata i32 1000000000, metadata !3282, metadata !DIExpression()), !dbg !3293
  call void @llvm.dbg.value(metadata i8 1, metadata !3283, metadata !DIExpression()), !dbg !3293
  call void @llvm.dbg.value(metadata i8 0, metadata !3284, metadata !DIExpression()), !dbg !3293
  call void @llvm.dbg.value(metadata i1 false, metadata !3285, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3293
  call void @llvm.dbg.value(metadata i8 0, metadata !3286, metadata !DIExpression()), !dbg !3293
  call void @llvm.dbg.value(metadata i1 false, metadata !3287, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3293
  call void @llvm.dbg.value(metadata i1 false, metadata !3288, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3293
  call void @llvm.dbg.value(metadata i64 0, metadata !3289, metadata !DIExpression()), !dbg !3293
  call void @llvm.dbg.value(metadata i64 0, metadata !3289, metadata !DIExpression()), !dbg !3293
  %2 = udiv i64 %0, 84000000, !dbg !3295
  %3 = mul i64 %2, 1000000000, !dbg !3302
  %4 = mul i64 %2, 84000000
  %5 = sub i64 %0, %4
  %6 = mul nuw nsw i64 %5, 1000000000, !dbg !3303
  %7 = udiv i64 %6, 84000000, !dbg !3304
  %8 = add i64 %7, %3, !dbg !3305
  ret i64 %8, !dbg !3306
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !3307 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #24, !dbg !3309
  ret i32 %1, !dbg !3310
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !3311 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !3326, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i8* %0, metadata !3322, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i32 %1, metadata !3323, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i32 %2, metadata !3324, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i8* %3, metadata !3325, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i8* %0, metadata !3327, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i8* %0, metadata !3328, metadata !DIExpression()), !dbg !3389
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !3390
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #23, !dbg !3390
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !3331, metadata !DIExpression()), !dbg !3391
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !3392
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #23, !dbg !3392
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !3333, metadata !DIExpression()), !dbg !3393
  call void @llvm.dbg.value(metadata i32 0, metadata !3334, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i32 0, metadata !3335, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i32 0, metadata !3336, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i32 -1, metadata !3337, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i8 0, metadata !3340, metadata !DIExpression()), !dbg !3389
  %12 = and i32 %2, 4, !dbg !3394
  %13 = icmp eq i32 %12, 0, !dbg !3395
  call void @llvm.dbg.value(metadata i1 %13, metadata !3341, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3389
  %14 = lshr i32 %2, 3, !dbg !3396
  %15 = and i32 %14, 7, !dbg !3396
  %16 = add nuw nsw i32 %15, 1, !dbg !3397
  call void @llvm.dbg.value(metadata i32 %16, metadata !3342, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i8 0, metadata !3343, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i8* %0, metadata !3344, metadata !DIExpression()), !dbg !3389
  %17 = ptrtoint i8* %0 to i32, !dbg !3398
  %18 = and i32 %17, 3, !dbg !3400
  %19 = icmp eq i32 %18, 0, !dbg !3400
  br i1 %19, label %20, label %320, !dbg !3401

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3402
  call void @llvm.dbg.value(metadata i8* %21, metadata !3328, metadata !DIExpression()), !dbg !3389
  %22 = icmp eq i8* %0, null, !dbg !3403
  %23 = and i32 %1, 7, !dbg !3405
  %24 = sub nuw nsw i32 8, %23, !dbg !3405
  %25 = select i1 %22, i32 %23, i32 0, !dbg !3405
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !3405
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !3405
  call void @llvm.dbg.value(metadata i32 %27, metadata !3323, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i8* %26, metadata !3328, metadata !DIExpression()), !dbg !3389
  br i1 %22, label %33, label %28, !dbg !3406

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !3408
  %30 = sub i32 4, %17, !dbg !3408
  %31 = add i32 %30, %29, !dbg !3409
  %32 = icmp ugt i32 %31, %27, !dbg !3410
  br i1 %32, label %320, label %33, !dbg !3411

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !3412
  call void @llvm.dbg.value(metadata i8* %34, metadata !3325, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i8* %3, metadata !3339, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i32 4, metadata !3330, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i32 4, metadata !3329, metadata !DIExpression()), !dbg !3389
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !3413

38:                                               ; preds = %63, %219
  %39 = phi i8 [ %224, %219 ], [ %64, %63 ]
  %40 = phi i8* [ %223, %219 ], [ %65, %63 ]
  %41 = phi i8* [ %221, %219 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %219 ], [ %67, %63 ]
  %43 = phi i8* [ %222, %219 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %219 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %219 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %219 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !3326, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i8* %42, metadata !3325, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i8* %43, metadata !3328, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i32 %44, metadata !3329, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i32 %45, metadata !3330, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i32 %72, metadata !3337, metadata !DIExpression()), !dbg !3389
  br i1 %46, label %73, label %47, !dbg !3414

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !3415
  %49 = zext i1 %48 to i32, !dbg !3419
  %50 = add nsw i32 %72, %49, !dbg !3419
  %51 = select i1 %48, i32 4, i32 %45, !dbg !3419
  %52 = select i1 %48, i32 4, i32 %44, !dbg !3419
  call void @llvm.dbg.value(metadata i32 %52, metadata !3329, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i32 %51, metadata !3330, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i8 poison, metadata !3340, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i32 %50, metadata !3337, metadata !DIExpression()), !dbg !3389
  br label %53, !dbg !3420

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !3326, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i8* %40, metadata !3325, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i8* %58, metadata !3328, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i32 %57, metadata !3329, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i32 %56, metadata !3330, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i8 poison, metadata !3340, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i32 %54, metadata !3337, metadata !DIExpression()), !dbg !3389
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3421
  call void @llvm.dbg.value(metadata i8* %60, metadata !3325, metadata !DIExpression()), !dbg !3389
  %61 = load i8, i8* %60, align 1, !dbg !3423
  %62 = icmp eq i8 %61, 0, !dbg !3424
  br i1 %62, label %226, label %63, !dbg !3425, !llvm.loop !3426

63:                                               ; preds = %192, %53
  %64 = phi i8 [ %61, %53 ], [ %199, %192 ]
  %65 = phi i8* [ %60, %53 ], [ %198, %192 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %192 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %192 ]
  %68 = phi i8* [ %58, %53 ], [ %197, %192 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %192 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %192 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %192 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %192 ]
  br label %38, !dbg !3414

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !3429

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3340, metadata !DIExpression()), !dbg !3389
  %75 = add nsw i32 %72, -1, !dbg !3430
  call void @llvm.dbg.value(metadata i32 %75, metadata !3337, metadata !DIExpression()), !dbg !3389
  br label %53, !dbg !3431

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !3432

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3330, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i32 4, metadata !3329, metadata !DIExpression()), !dbg !3389
  br label %53, !dbg !3433

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3330, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i32 4, metadata !3329, metadata !DIExpression()), !dbg !3389
  br label %53, !dbg !3434

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !3435
  %81 = icmp eq i8 %80, 108, !dbg !3437
  br i1 %81, label %82, label %109, !dbg !3438

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !3439
  %84 = load i8, i8* %83, align 1, !dbg !3439
  %85 = icmp eq i8 %84, 108, !dbg !3442
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !3443
  %89 = add i32 %88, 7, !dbg !3443
  %90 = and i32 %89, -8, !dbg !3443
  %91 = inttoptr i32 %90 to i8*, !dbg !3443
  %92 = inttoptr i32 %90 to double*, !dbg !3443
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !3443
  %94 = load double, double* %92, align 8, !dbg !3443
  call void @llvm.dbg.value(metadata i8* %93, metadata !3326, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i32 8, metadata !3329, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i32 8, metadata !3330, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata double %94, metadata !3357, metadata !DIExpression()), !dbg !3445
  %95 = ptrtoint i8* %43 to i32, !dbg !3446
  %96 = add i32 %95, 7, !dbg !3446
  %97 = and i32 %96, -8, !dbg !3446
  %98 = inttoptr i32 %97 to i8*, !dbg !3447
  call void @llvm.dbg.value(metadata i8* %98, metadata !3328, metadata !DIExpression()), !dbg !3389
  br i1 %22, label %104, label %99, !dbg !3448

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !3449
  %101 = icmp ugt i32 %100, %196, !dbg !3453
  br i1 %101, label %320, label %102, !dbg !3454

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !3455
  store double %94, double* %103, align 8, !dbg !3455
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !3458
  call void @llvm.dbg.value(metadata i8* %105, metadata !3328, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i8 poison, metadata !3340, metadata !DIExpression()), !dbg !3389
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3340, metadata !DIExpression()), !dbg !3389
  br label %53, !dbg !3459

107:                                              ; preds = %73, %73
  br label %109, !dbg !3460

108:                                              ; preds = %73
  br label %109, !dbg !3460

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !3389
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !3389
  call void @llvm.dbg.value(metadata i32 %113, metadata !3329, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i32 %112, metadata !3330, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i8 poison, metadata !3343, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i8 poison, metadata !3340, metadata !DIExpression()), !dbg !3389
  %114 = ptrtoint i8* %43 to i32, !dbg !3460
  %115 = add i32 %114, -1, !dbg !3460
  %116 = add i32 %115, %112, !dbg !3460
  %117 = sub i32 0, %112, !dbg !3460
  %118 = and i32 %116, %117, !dbg !3460
  %119 = inttoptr i32 %118 to i8*, !dbg !3461
  call void @llvm.dbg.value(metadata i8* %119, metadata !3328, metadata !DIExpression()), !dbg !3389
  br i1 %22, label %124, label %120, !dbg !3462

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !3464
  %122 = add i32 %121, %118, !dbg !3465
  %123 = icmp ugt i32 %122, %196, !dbg !3466
  br i1 %123, label %320, label %124, !dbg !3467

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %201, !dbg !3468

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !3461
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3469
  call void @llvm.dbg.value(metadata i8* %127, metadata !3326, metadata !DIExpression()), !dbg !3389
  %128 = bitcast i8* %41 to i8**, !dbg !3469
  %129 = load i8*, i8** %128, align 4, !dbg !3469
  call void @llvm.dbg.value(metadata i8* %129, metadata !3339, metadata !DIExpression()), !dbg !3389
  br label %130, !dbg !3470

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !3389
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !3471
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !3389
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %194, %125 ], !dbg !3472
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !3389
  %137 = phi i32 [ 0, %33 ], [ %195, %125 ], !dbg !3389
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !3389
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !3389
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !3389
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !3389
  %142 = phi i32 [ %27, %33 ], [ %196, %125 ], !dbg !3473
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !3326, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i32 %142, metadata !3323, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i8* %141, metadata !3325, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i8* %140, metadata !3328, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i32 %139, metadata !3329, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i32 %138, metadata !3330, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i32 %137, metadata !3334, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i32 %136, metadata !3342, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i32 %135, metadata !3335, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i8 poison, metadata !3340, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i8* %133, metadata !3339, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i32 %132, metadata !3337, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i32 %131, metadata !3336, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.label(metadata !3388), !dbg !3475
  br i1 %22, label %146, label %144, !dbg !3476

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !3477
  store i8* %133, i8** %145, align 4, !dbg !3480
  br label %146, !dbg !3481

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !3482
  call void @llvm.dbg.value(metadata i32 %147, metadata !3342, metadata !DIExpression()), !dbg !3389
  %148 = icmp sgt i32 %136, 0, !dbg !3483
  br i1 %148, label %152, label %149, !dbg !3484

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #25, !dbg !3485
  %151 = zext i1 %150 to i32, !dbg !3485
  br label %152, !dbg !3484

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !3484
  %154 = icmp eq i32 %153, 0, !dbg !3484
  call void @llvm.dbg.value(metadata i1 %154, metadata !3366, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3486
  call void @llvm.dbg.value(metadata i1 %36, metadata !3369, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3486
  %155 = or i1 %36, %154, !dbg !3487
  br i1 %155, label %156, label %192, !dbg !3487

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !3488
  %158 = sub i32 %157, %17, !dbg !3488
  %159 = lshr i32 %158, 2, !dbg !3489
  call void @llvm.dbg.value(metadata i32 %159, metadata !3370, metadata !DIExpression()), !dbg !3490
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !3491
  br i1 %161, label %162, label %163, !dbg !3491

162:                                              ; preds = %156
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.6, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 635) #24, !dbg !3493
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4.8, i32 0, i32 0)) #24, !dbg !3493
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 635) #24, !dbg !3493
  unreachable, !dbg !3493

163:                                              ; preds = %156
  %164 = icmp ugt i32 %137, 15, !dbg !3498
  br i1 %164, label %165, label %166, !dbg !3500

165:                                              ; preds = %163
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.6, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 640) #24, !dbg !3501
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i32 0, i32 0)) #24, !dbg !3501
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 640) #24, !dbg !3501
  unreachable, !dbg !3501

166:                                              ; preds = %163
  br i1 %22, label %177, label %167, !dbg !3506

167:                                              ; preds = %166
  %168 = trunc i32 %159 to i8, !dbg !3507
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !3510
  store i8 %168, i8* %169, align 1, !dbg !3511
  %170 = trunc i32 %132 to i8, !dbg !3512
  %171 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !3513
  store i8 %170, i8* %171, align 1, !dbg !3514
  br i1 %154, label %175, label %172, !dbg !3515

172:                                              ; preds = %167
  %173 = or i8 %168, -128, !dbg !3516
  store i8 %173, i8* %169, align 1, !dbg !3516
  %174 = add i32 %131, 1, !dbg !3519
  call void @llvm.dbg.value(metadata i32 %174, metadata !3336, metadata !DIExpression()), !dbg !3389
  br label %187, !dbg !3520

175:                                              ; preds = %167
  %176 = add i32 %135, 1, !dbg !3521
  call void @llvm.dbg.value(metadata i32 %176, metadata !3335, metadata !DIExpression()), !dbg !3389
  br label %187

177:                                              ; preds = %166
  br i1 %154, label %180, label %178, !dbg !3523

178:                                              ; preds = %177
  %179 = add i32 %142, 1, !dbg !3524
  call void @llvm.dbg.value(metadata i32 %179, metadata !3323, metadata !DIExpression()), !dbg !3389
  br label %187, !dbg !3527

180:                                              ; preds = %177
  br i1 %13, label %183, label %181, !dbg !3528

181:                                              ; preds = %180
  %182 = add i32 %142, 2, !dbg !3529
  call void @llvm.dbg.value(metadata i32 %182, metadata !3323, metadata !DIExpression()), !dbg !3389
  br label %187, !dbg !3532

183:                                              ; preds = %180
  %184 = tail call i32 @strlen(i8* noundef %133) #24, !dbg !3533
  %185 = add i32 %142, 2, !dbg !3535
  %186 = add i32 %185, %184, !dbg !3536
  call void @llvm.dbg.value(metadata i32 %186, metadata !3323, metadata !DIExpression()), !dbg !3389
  br label %187

187:                                              ; preds = %178, %183, %181, %172, %175
  %188 = phi i32 [ %174, %172 ], [ %131, %175 ], [ %131, %178 ], [ %131, %181 ], [ %131, %183 ], !dbg !3389
  %189 = phi i32 [ %135, %172 ], [ %176, %175 ], [ %135, %178 ], [ %135, %181 ], [ %135, %183 ], !dbg !3389
  %190 = phi i32 [ %142, %172 ], [ %142, %175 ], [ %179, %178 ], [ %182, %181 ], [ %186, %183 ], !dbg !3389
  call void @llvm.dbg.value(metadata i32 %190, metadata !3323, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i32 %189, metadata !3335, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i32 %188, metadata !3336, metadata !DIExpression()), !dbg !3389
  %191 = add nuw nsw i32 %137, 1, !dbg !3537
  call void @llvm.dbg.value(metadata i32 %191, metadata !3334, metadata !DIExpression()), !dbg !3389
  br label %192

192:                                              ; preds = %152, %187
  %193 = phi i32 [ %188, %187 ], [ %131, %152 ], !dbg !3389
  %194 = phi i32 [ %189, %187 ], [ %135, %152 ], !dbg !3472
  %195 = phi i32 [ %191, %187 ], [ %137, %152 ], !dbg !3389
  %196 = phi i32 [ %190, %187 ], [ %142, %152 ], !dbg !3473
  call void @llvm.dbg.value(metadata i32 %196, metadata !3323, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i32 %195, metadata !3334, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i32 %194, metadata !3335, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i32 %193, metadata !3336, metadata !DIExpression()), !dbg !3389
  %197 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !3538
  call void @llvm.dbg.value(metadata i8* %197, metadata !3328, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i8* %143, metadata !3326, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i8* %141, metadata !3325, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i32 %139, metadata !3329, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i32 %138, metadata !3330, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i8 poison, metadata !3343, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i8 poison, metadata !3340, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i32 %132, metadata !3337, metadata !DIExpression()), !dbg !3389
  %198 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !3421
  call void @llvm.dbg.value(metadata i8* %198, metadata !3325, metadata !DIExpression()), !dbg !3389
  %199 = load i8, i8* %198, align 1, !dbg !3423
  %200 = icmp eq i8 %199, 0, !dbg !3424
  br i1 %200, label %226, label %63, !dbg !3425

201:                                              ; preds = %124
  switch i32 %113, label %218 [
    i32 4, label %202
    i32 8, label %208
  ], !dbg !3539

202:                                              ; preds = %201
  %203 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3540
  call void @llvm.dbg.value(metadata i8* %203, metadata !3326, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i32 undef, metadata !3373, metadata !DIExpression()), !dbg !3541
  br i1 %22, label %219, label %204, !dbg !3542

204:                                              ; preds = %202
  %205 = bitcast i8* %41 to i32*, !dbg !3540
  %206 = load i32, i32* %205, align 4, !dbg !3540
  call void @llvm.dbg.value(metadata i32 %206, metadata !3373, metadata !DIExpression()), !dbg !3541
  %207 = inttoptr i32 %118 to i32*, !dbg !3543
  store i32 %206, i32* %207, align 4, !dbg !3546
  br label %219, !dbg !3547

208:                                              ; preds = %201
  %209 = ptrtoint i8* %41 to i32, !dbg !3548
  %210 = add i32 %209, 7, !dbg !3548
  %211 = and i32 %210, -8, !dbg !3548
  %212 = inttoptr i32 %211 to i8*, !dbg !3548
  %213 = getelementptr inbounds i8, i8* %212, i32 8, !dbg !3548
  call void @llvm.dbg.value(metadata i8* %213, metadata !3326, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i64 undef, metadata !3379, metadata !DIExpression()), !dbg !3549
  br i1 %22, label %219, label %214, !dbg !3550

214:                                              ; preds = %208
  %215 = inttoptr i32 %211 to i64*, !dbg !3548
  %216 = load i64, i64* %215, align 8, !dbg !3548
  call void @llvm.dbg.value(metadata i64 %216, metadata !3379, metadata !DIExpression()), !dbg !3549
  %217 = inttoptr i32 %118 to i64*, !dbg !3551
  store i64 %216, i64* %217, align 8, !dbg !3556
  br label %219, !dbg !3557

218:                                              ; preds = %201
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.6, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 709) #24, !dbg !3558
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i32 0, i32 0), i32 noundef %113) #24, !dbg !3558
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 709) #24, !dbg !3558
  unreachable, !dbg !3558

219:                                              ; preds = %208, %214, %202, %204
  %220 = phi i32 [ 4, %204 ], [ 4, %202 ], [ 8, %214 ], [ 8, %208 ]
  %221 = phi i8* [ %203, %204 ], [ %203, %202 ], [ %213, %214 ], [ %213, %208 ], !dbg !3563
  %222 = getelementptr inbounds i8, i8* %119, i32 %220, !dbg !3563
  call void @llvm.dbg.value(metadata i8* %221, metadata !3326, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i8* %40, metadata !3325, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i8* %222, metadata !3328, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i32 %113, metadata !3329, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i32 %112, metadata !3330, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i8 poison, metadata !3343, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i8 poison, metadata !3340, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i32 %72, metadata !3337, metadata !DIExpression()), !dbg !3389
  %223 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3421
  call void @llvm.dbg.value(metadata i8* %223, metadata !3325, metadata !DIExpression()), !dbg !3389
  %224 = load i8, i8* %223, align 1, !dbg !3423
  %225 = icmp eq i8 %224, 0, !dbg !3424
  br i1 %225, label %226, label %38, !dbg !3425

226:                                              ; preds = %192, %219, %53
  %227 = phi i8* [ %222, %219 ], [ %58, %53 ], [ %197, %192 ], !dbg !3564
  %228 = ptrtoint i8* %227 to i32, !dbg !3565
  %229 = sub i32 %228, %17, !dbg !3565
  %230 = lshr i32 %229, 2, !dbg !3567
  %231 = icmp ugt i32 %229, 1023, !dbg !3568
  br i1 %231, label %232, label %233, !dbg !3569

232:                                              ; preds = %226
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.6, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 721) #24, !dbg !3570
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i32 0, i32 0)) #24, !dbg !3570
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 721) #24, !dbg !3570
  unreachable, !dbg !3570

233:                                              ; preds = %226
  br i1 %22, label %234, label %237, !dbg !3575

234:                                              ; preds = %233
  %235 = add i32 %196, -8, !dbg !3576
  %236 = add i32 %235, %229, !dbg !3579
  br label %320, !dbg !3580

237:                                              ; preds = %233
  %238 = trunc i32 %230 to i8, !dbg !3581
  store i8 %238, i8* %0, align 1, !dbg !3582
  %239 = trunc i32 %194 to i8, !dbg !3583
  %240 = select i1 %13, i8 %239, i8 0
  %241 = select i1 %13, i8 0, i8 %239
  %242 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !3585
  store i8 %240, i8* %242, align 1, !dbg !3587
  %243 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !3588
  store i8 %241, i8* %243, align 1, !dbg !3589
  %244 = trunc i32 %193 to i8, !dbg !3590
  %245 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3591
  store i8 %244, i8* %245, align 1, !dbg !3592
  %246 = icmp eq i32 %193, 0, !dbg !3593
  %247 = xor i1 %246, true, !dbg !3594
  %248 = icmp ne i32 %195, 0
  %249 = select i1 %247, i1 %248, i1 false, !dbg !3594
  call void @llvm.dbg.value(metadata i8* %227, metadata !3328, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i32 0, metadata !3338, metadata !DIExpression()), !dbg !3389
  br i1 %249, label %250, label %269, !dbg !3594

250:                                              ; preds = %237
  %251 = sub i32 1, %17
  br label %252, !dbg !3595

252:                                              ; preds = %250, %265
  %253 = phi i8* [ %227, %250 ], [ %266, %265 ]
  %254 = phi i32 [ 0, %250 ], [ %267, %265 ]
  call void @llvm.dbg.value(metadata i8* %253, metadata !3328, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i32 %254, metadata !3338, metadata !DIExpression()), !dbg !3389
  %255 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %254, !dbg !3596
  %256 = load i8, i8* %255, align 1, !dbg !3596
  %257 = icmp sgt i8 %256, -1, !dbg !3598
  br i1 %257, label %265, label %258, !dbg !3599

258:                                              ; preds = %252
  call void @llvm.dbg.value(metadata i8 %256, metadata !3382, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3600
  %259 = ptrtoint i8* %253 to i32, !dbg !3601
  %260 = add i32 %251, %259, !dbg !3603
  %261 = icmp ugt i32 %260, %196, !dbg !3604
  br i1 %261, label %320, label %262, !dbg !3605

262:                                              ; preds = %258
  %263 = and i8 %256, 127, !dbg !3606
  call void @llvm.dbg.value(metadata i8 %263, metadata !3382, metadata !DIExpression()), !dbg !3600
  %264 = getelementptr inbounds i8, i8* %253, i32 1, !dbg !3607
  call void @llvm.dbg.value(metadata i8* %264, metadata !3328, metadata !DIExpression()), !dbg !3389
  store i8 %263, i8* %253, align 1, !dbg !3608
  br label %265

265:                                              ; preds = %262, %252
  %266 = phi i8* [ %264, %262 ], [ %253, %252 ], !dbg !3538
  call void @llvm.dbg.value(metadata i8* %266, metadata !3328, metadata !DIExpression()), !dbg !3389
  %267 = add nuw i32 %254, 1, !dbg !3609
  call void @llvm.dbg.value(metadata i32 %267, metadata !3338, metadata !DIExpression()), !dbg !3389
  %268 = icmp eq i32 %267, %195, !dbg !3610
  br i1 %268, label %269, label %252, !dbg !3595, !llvm.loop !3611

269:                                              ; preds = %265, %237
  %270 = phi i8* [ %227, %237 ], [ %266, %265 ], !dbg !3538
  call void @llvm.dbg.value(metadata i8* %270, metadata !3328, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i32 0, metadata !3338, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i8* %133, metadata !3339, metadata !DIExpression()), !dbg !3389
  %271 = icmp eq i32 %195, 0, !dbg !3613
  br i1 %271, label %316, label %272, !dbg !3616

272:                                              ; preds = %269
  %273 = sub i32 1, %17
  br label %274, !dbg !3616

274:                                              ; preds = %272, %311
  %275 = phi i8* [ %270, %272 ], [ %313, %311 ]
  %276 = phi i8* [ %133, %272 ], [ %312, %311 ]
  %277 = phi i32 [ 0, %272 ], [ %314, %311 ]
  call void @llvm.dbg.value(metadata i8* %275, metadata !3328, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i8* %276, metadata !3339, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i32 %277, metadata !3338, metadata !DIExpression()), !dbg !3389
  br i1 %246, label %282, label %278, !dbg !3617

278:                                              ; preds = %274
  %279 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3620
  %280 = load i8, i8* %279, align 1, !dbg !3620
  %281 = icmp sgt i8 %280, -1, !dbg !3621
  br i1 %281, label %282, label %311, !dbg !3622

282:                                              ; preds = %278, %274
  br i1 %13, label %287, label %283, !dbg !3623

283:                                              ; preds = %282
  call void @llvm.dbg.value(metadata i32 0, metadata !3329, metadata !DIExpression()), !dbg !3389
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %277, !dbg !3624
  %285 = load i8, i8* %284, align 1, !dbg !3624
  %286 = getelementptr inbounds i8, i8* %275, i32 1, !dbg !3627
  call void @llvm.dbg.value(metadata i8* %286, metadata !3328, metadata !DIExpression()), !dbg !3389
  store i8 %285, i8* %275, align 1, !dbg !3628
  br label %297, !dbg !3629

287:                                              ; preds = %282
  %288 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3630
  %289 = load i8, i8* %288, align 1, !dbg !3630
  %290 = zext i8 %289 to i32, !dbg !3630
  %291 = shl nuw nsw i32 %290, 2, !dbg !3632
  %292 = getelementptr inbounds i8, i8* %0, i32 %291, !dbg !3633
  %293 = bitcast i8* %292 to i8**, !dbg !3634
  %294 = load i8*, i8** %293, align 4, !dbg !3634
  call void @llvm.dbg.value(metadata i8* %294, metadata !3339, metadata !DIExpression()), !dbg !3389
  store i8* null, i8** %293, align 4, !dbg !3635
  %295 = tail call i32 @strlen(i8* noundef %294) #24, !dbg !3636
  %296 = add i32 %295, 1, !dbg !3637
  call void @llvm.dbg.value(metadata i32 %296, metadata !3329, metadata !DIExpression()), !dbg !3389
  br label %297

297:                                              ; preds = %287, %283
  %298 = phi i8* [ %276, %283 ], [ %294, %287 ], !dbg !3389
  %299 = phi i32 [ 0, %283 ], [ %296, %287 ], !dbg !3638
  %300 = phi i8* [ %286, %283 ], [ %275, %287 ], !dbg !3389
  call void @llvm.dbg.value(metadata i8* %300, metadata !3328, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i32 %299, metadata !3329, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i8* %298, metadata !3339, metadata !DIExpression()), !dbg !3389
  %301 = ptrtoint i8* %300 to i32, !dbg !3639
  %302 = add i32 %273, %299, !dbg !3641
  %303 = add i32 %302, %301, !dbg !3642
  %304 = icmp ugt i32 %303, %196, !dbg !3643
  br i1 %304, label %320, label %305, !dbg !3644

305:                                              ; preds = %297
  %306 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3645
  %307 = load i8, i8* %306, align 1, !dbg !3645
  %308 = getelementptr inbounds i8, i8* %300, i32 1, !dbg !3646
  call void @llvm.dbg.value(metadata i8* %308, metadata !3328, metadata !DIExpression()), !dbg !3389
  store i8 %307, i8* %300, align 1, !dbg !3647
  %309 = tail call i8* @memcpy(i8* noundef nonnull %308, i8* noundef %298, i32 noundef %299) #24, !dbg !3648
  %310 = getelementptr inbounds i8, i8* %308, i32 %299, !dbg !3649
  call void @llvm.dbg.value(metadata i8* %310, metadata !3328, metadata !DIExpression()), !dbg !3389
  br label %311, !dbg !3650

311:                                              ; preds = %278, %305
  %312 = phi i8* [ %276, %278 ], [ %298, %305 ], !dbg !3651
  %313 = phi i8* [ %275, %278 ], [ %310, %305 ], !dbg !3389
  call void @llvm.dbg.value(metadata i8* %313, metadata !3328, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i8* %312, metadata !3339, metadata !DIExpression()), !dbg !3389
  %314 = add nuw i32 %277, 1, !dbg !3652
  call void @llvm.dbg.value(metadata i32 %314, metadata !3338, metadata !DIExpression()), !dbg !3389
  %315 = icmp eq i32 %314, %195, !dbg !3613
  br i1 %315, label %316, label %274, !dbg !3616, !llvm.loop !3653

316:                                              ; preds = %311, %269
  %317 = phi i8* [ %270, %269 ], [ %313, %311 ], !dbg !3538
  %318 = ptrtoint i8* %317 to i32, !dbg !3655
  %319 = sub i32 %318, %17, !dbg !3655
  br label %320, !dbg !3656

320:                                              ; preds = %120, %99, %258, %297, %28, %5, %316, %234
  %321 = phi i32 [ %236, %234 ], [ %319, %316 ], [ -14, %5 ], [ -28, %28 ], [ -28, %297 ], [ -28, %258 ], [ -28, %99 ], [ -28, %120 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #23, !dbg !3657
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #23, !dbg !3657
  ret i32 %321, !dbg !3657
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #6 !dbg !3658 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3662, metadata !DIExpression()), !dbg !3663
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #25, !dbg !3664
  ret i1 %2, !dbg !3665
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #6 !dbg !3666 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3671, metadata !DIExpression()), !dbg !3672
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !3673
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !3674
  %4 = and i1 %2, %3, !dbg !3674
  ret i1 %4, !dbg !3675
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !3676 {
  %5 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3680, metadata !DIExpression()), !dbg !3686
  call void @llvm.dbg.value(metadata i32 %1, metadata !3681, metadata !DIExpression()), !dbg !3686
  call void @llvm.dbg.value(metadata i32 %2, metadata !3682, metadata !DIExpression()), !dbg !3686
  call void @llvm.dbg.value(metadata i8* %3, metadata !3683, metadata !DIExpression()), !dbg !3686
  %6 = bitcast %struct.__va_list* %5 to i8*, !dbg !3687
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #23, !dbg !3687
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !3684, metadata !DIExpression()), !dbg !3688
  call void @llvm.va_start(i8* nonnull %6), !dbg !3689
  %7 = bitcast %struct.__va_list* %5 to i32*, !dbg !3690
  %8 = load i32, i32* %7, align 4, !dbg !3690
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !3690
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #25, !dbg !3690
  call void @llvm.dbg.value(metadata i32 %10, metadata !3685, metadata !DIExpression()), !dbg !3686
  call void @llvm.va_end(i8* nonnull %6), !dbg !3691
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #23, !dbg !3692
  ret i32 %10, !dbg !3693
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #7

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #7

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !3694 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3706, metadata !DIExpression()), !dbg !3725
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !3707, metadata !DIExpression()), !dbg !3725
  call void @llvm.dbg.value(metadata i8* %2, metadata !3708, metadata !DIExpression()), !dbg !3725
  call void @llvm.dbg.value(metadata i8* %3, metadata !3709, metadata !DIExpression()), !dbg !3725
  call void @llvm.dbg.value(metadata i8* %3, metadata !3710, metadata !DIExpression()), !dbg !3725
  call void @llvm.dbg.value(metadata i8* %3, metadata !3711, metadata !DIExpression()), !dbg !3725
  %5 = icmp eq i8* %3, null, !dbg !3726
  br i1 %5, label %45, label %6, !dbg !3728

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !3720, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3725
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !3729
  %8 = load i8, i8* %7, align 1, !dbg !3729
  %9 = zext i8 %8 to i32, !dbg !3730
  call void @llvm.dbg.value(metadata i32 %9, metadata !3721, metadata !DIExpression()), !dbg !3725
  call void @llvm.dbg.value(metadata i8 undef, metadata !3722, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3725
  call void @llvm.dbg.value(metadata i8 undef, metadata !3723, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3725
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !3717, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3725
  call void @llvm.dbg.value(metadata i32 0, metadata !3719, metadata !DIExpression()), !dbg !3725
  %10 = icmp eq i8 %8, 0, !dbg !3731
  br i1 %10, label %39, label %11, !dbg !3734

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !3735
  call void @llvm.dbg.value(metadata i8 %12, metadata !3720, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3725
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !3717, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3725
  %13 = zext i8 %12 to i32, !dbg !3736
  call void @llvm.dbg.value(metadata i32 %13, metadata !3720, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3725
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !3717, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3725
  %14 = shl nuw nsw i32 %13, 2, !dbg !3737
  call void @llvm.dbg.value(metadata i32 %14, metadata !3720, metadata !DIExpression()), !dbg !3725
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !3717, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3725
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !3738
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !3717, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3725
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !3739
  %17 = load i8, i8* %16, align 1, !dbg !3739
  call void @llvm.dbg.value(metadata i8 %17, metadata !3722, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3725
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !3717, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3725
  %18 = zext i8 %17 to i32, !dbg !3740
  call void @llvm.dbg.value(metadata i32 %18, metadata !3722, metadata !DIExpression()), !dbg !3725
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !3717, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3725
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !3741
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !3717, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3725
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !3742
  %21 = load i8, i8* %20, align 1, !dbg !3742
  call void @llvm.dbg.value(metadata i8 %21, metadata !3723, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3725
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !3717, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3725
  %22 = zext i8 %21 to i32, !dbg !3743
  call void @llvm.dbg.value(metadata i32 %22, metadata !3723, metadata !DIExpression()), !dbg !3725
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !3717, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3725
  %23 = shl nuw nsw i32 %22, 1, !dbg !3744
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !3717, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3725
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !3745
  call void @llvm.dbg.value(metadata i8* %24, metadata !3717, metadata !DIExpression()), !dbg !3725
  br label %25, !dbg !3734

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !3717, metadata !DIExpression()), !dbg !3725
  call void @llvm.dbg.value(metadata i32 %27, metadata !3719, metadata !DIExpression()), !dbg !3725
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !3746
  call void @llvm.dbg.value(metadata i8* %28, metadata !3717, metadata !DIExpression()), !dbg !3725
  %29 = load i8, i8* %26, align 1, !dbg !3748
  %30 = zext i8 %29 to i32, !dbg !3748
  call void @llvm.dbg.value(metadata i32 %30, metadata !3724, metadata !DIExpression()), !dbg !3725
  %31 = shl nuw nsw i32 %30, 2, !dbg !3749
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !3750
  %33 = bitcast i8* %32 to i8**, !dbg !3751
  call void @llvm.dbg.value(metadata i8** %33, metadata !3718, metadata !DIExpression()), !dbg !3725
  store i8* %28, i8** %33, align 4, !dbg !3752
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #24, !dbg !3753
  %35 = add i32 %34, 1, !dbg !3754
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !3755
  call void @llvm.dbg.value(metadata i8* %36, metadata !3717, metadata !DIExpression()), !dbg !3725
  %37 = add nuw nsw i32 %27, 1, !dbg !3756
  call void @llvm.dbg.value(metadata i32 %37, metadata !3719, metadata !DIExpression()), !dbg !3725
  %38 = icmp eq i32 %37, %9, !dbg !3731
  br i1 %38, label %39, label %25, !dbg !3734, !llvm.loop !3757

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !3759
  call void @llvm.dbg.value(metadata i8* %40, metadata !3710, metadata !DIExpression()), !dbg !3725
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !3760
  %42 = bitcast i8* %41 to i8**, !dbg !3760
  %43 = load i8*, i8** %42, align 1, !dbg !3760
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #25, !dbg !3761
  br label %45, !dbg !3762

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !3725
  ret i32 %46, !dbg !3763
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !3764 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3768, metadata !DIExpression()), !dbg !3778
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !3769, metadata !DIExpression()), !dbg !3778
  call void @llvm.dbg.value(metadata i8* %2, metadata !3770, metadata !DIExpression()), !dbg !3778
  call void @llvm.dbg.value(metadata i8* %3, metadata !3771, metadata !DIExpression()), !dbg !3778
  call void @llvm.dbg.value(metadata i8* %4, metadata !3772, metadata !DIExpression()), !dbg !3778
  call void @llvm.dbg.value(metadata i8* %4, metadata !3773, metadata !DIExpression()), !dbg !3778
  %6 = ptrtoint i8* %4 to i32, !dbg !3779
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !3779
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #24, !dbg !3779
  ret i32 %8, !dbg !3780
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !3781 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3785, metadata !DIExpression()), !dbg !3790
  call void @llvm.dbg.value(metadata i32 %1, metadata !3786, metadata !DIExpression()), !dbg !3790
  call void @llvm.dbg.value(metadata i8 0, metadata !3788, metadata !DIExpression()), !dbg !3790
  call void @llvm.dbg.value(metadata i32 0, metadata !3789, metadata !DIExpression()), !dbg !3790
  call void @llvm.dbg.value(metadata i8 poison, metadata !3788, metadata !DIExpression()), !dbg !3790
  call void @llvm.dbg.value(metadata i8* %0, metadata !3785, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3790
  %3 = load i8, i8* %0, align 1, !dbg !3791
  call void @llvm.dbg.value(metadata i8 %3, metadata !3787, metadata !DIExpression()), !dbg !3790
  %4 = icmp eq i8 %3, 0, !dbg !3792
  br i1 %4, label %29, label %5, !dbg !3793

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !3794
  call void @llvm.dbg.value(metadata i32 %8, metadata !3789, metadata !DIExpression()), !dbg !3790
  br i1 %9, label %11, label %22, !dbg !3795

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !3797
  br i1 %12, label %13, label %17, !dbg !3801

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !3802
  br i1 %14, label %29, label %15, !dbg !3805

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #25, !dbg !3806
  br i1 %16, label %29, label %22, !dbg !3808

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #25, !dbg !3809
  %19 = xor i1 %18, true, !dbg !3811
  %20 = zext i1 %18 to i32, !dbg !3811
  %21 = add nsw i32 %8, %20, !dbg !3811
  br label %22, !dbg !3811

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !3790
  call void @llvm.dbg.value(metadata i32 %24, metadata !3789, metadata !DIExpression()), !dbg !3790
  call void @llvm.dbg.value(metadata i8 poison, metadata !3788, metadata !DIExpression()), !dbg !3790
  %25 = icmp eq i8 %6, 37, !dbg !3812
  %26 = xor i1 %25, %23, !dbg !3814
  call void @llvm.dbg.value(metadata i8* %10, metadata !3785, metadata !DIExpression()), !dbg !3790
  call void @llvm.dbg.value(metadata i8* %10, metadata !3785, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3790
  %27 = load i8, i8* %10, align 1, !dbg !3791
  call void @llvm.dbg.value(metadata i8 %27, metadata !3787, metadata !DIExpression()), !dbg !3790
  %28 = icmp eq i8 %27, 0, !dbg !3792
  br i1 %28, label %29, label %5, !dbg !3793, !llvm.loop !3815

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !3790
  ret i1 %30, !dbg !3817
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #6 !dbg !3818 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !3822, metadata !DIExpression()), !dbg !3823
  %2 = add i8 %0, -64, !dbg !3824
  %3 = icmp ult i8 %2, 59, !dbg !3824
  ret i1 %3, !dbg !3825
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !3826 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3834, metadata !DIExpression()), !dbg !3903
  call void @llvm.dbg.value(metadata i32 %1, metadata !3835, metadata !DIExpression()), !dbg !3903
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !3836, metadata !DIExpression()), !dbg !3903
  call void @llvm.dbg.value(metadata i8* %3, metadata !3837, metadata !DIExpression()), !dbg !3903
  call void @llvm.dbg.value(metadata i32 %4, metadata !3838, metadata !DIExpression()), !dbg !3903
  call void @llvm.dbg.value(metadata i16* %5, metadata !3839, metadata !DIExpression()), !dbg !3903
  call void @llvm.dbg.value(metadata i32 %6, metadata !3840, metadata !DIExpression()), !dbg !3903
  %11 = icmp eq i8* %0, null, !dbg !3904
  br i1 %11, label %12, label %13, !dbg !3907

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 916) #24, !dbg !3908
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 916) #24, !dbg !3908
  unreachable, !dbg !3908

13:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i8* %0, metadata !3841, metadata !DIExpression()), !dbg !3903
  %14 = bitcast i8* %0 to i32*, !dbg !3910
  call void @llvm.dbg.value(metadata i32* %14, metadata !3842, metadata !DIExpression()), !dbg !3903
  %15 = and i32 %4, 8, !dbg !3911
  %16 = icmp eq i32 %15, 0, !dbg !3912
  call void @llvm.dbg.value(metadata i1 %16, metadata !3846, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3903
  call void @llvm.dbg.value(metadata i8* %0, metadata !3849, metadata !DIExpression()), !dbg !3903
  %17 = icmp eq i32 %1, 0, !dbg !3913
  br i1 %17, label %18, label %20, !dbg !3914

18:                                               ; preds = %13
  %19 = tail call fastcc i32 @get_package_len(i8* noundef nonnull %0) #25, !dbg !3915
  br label %20, !dbg !3914

20:                                               ; preds = %13, %18
  %21 = phi i32 [ %19, %18 ], [ %1, %13 ], !dbg !3914
  call void @llvm.dbg.value(metadata i32 %21, metadata !3835, metadata !DIExpression()), !dbg !3903
  %22 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3916
  %23 = load i8, i8* %22, align 1, !dbg !3916
  %24 = zext i8 %23 to i32, !dbg !3917
  call void @llvm.dbg.value(metadata i32 %24, metadata !3844, metadata !DIExpression()), !dbg !3903
  %25 = icmp ne i8 %23, 0, !dbg !3918
  %26 = and i32 %4, 1, !dbg !3919
  %27 = icmp ne i32 %26, 0, !dbg !3919
  %28 = and i1 %27, %25, !dbg !3919
  call void @llvm.dbg.value(metadata i1 %28, metadata !3848, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3903
  %29 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !3920
  %30 = load i8, i8* %29, align 1, !dbg !3920
  %31 = zext i8 %30 to i32, !dbg !3921
  call void @llvm.dbg.value(metadata i32 %31, metadata !3845, metadata !DIExpression()), !dbg !3903
  %32 = icmp ne i8 %30, 0, !dbg !3922
  %33 = and i32 %4, 2, !dbg !3923
  %34 = icmp ne i32 %33, 0, !dbg !3923
  %35 = and i1 %34, %32, !dbg !3923
  call void @llvm.dbg.value(metadata i1 %35, metadata !3847, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3903
  %36 = select i1 %35, i1 true, i1 %28, !dbg !3924
  br i1 %36, label %41, label %37, !dbg !3924

37:                                               ; preds = %20
  %38 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !3926
  br i1 %38, label %287, label %39, !dbg !3929

39:                                               ; preds = %37
  %40 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %21, i8* noundef %3) #24, !dbg !3930
  br label %287, !dbg !3932

41:                                               ; preds = %20
  %42 = load i8, i8* %0, align 1, !dbg !3933
  %43 = zext i8 %42 to i32, !dbg !3934
  %44 = shl nuw nsw i32 %43, 2, !dbg !3935
  call void @llvm.dbg.value(metadata i32 %44, metadata !3843, metadata !DIExpression()), !dbg !3903
  %45 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3936
  %46 = bitcast i8* %45 to i8**, !dbg !3937
  %47 = load i8*, i8** %46, align 4, !dbg !3937
  call void @llvm.dbg.value(metadata i8* %47, metadata !3852, metadata !DIExpression()), !dbg !3903
  %48 = getelementptr inbounds i8, i8* %0, i32 %44, !dbg !3938
  call void @llvm.dbg.value(metadata i8* %48, metadata !3853, metadata !DIExpression()), !dbg !3903
  call void @llvm.dbg.value(metadata i32 0, metadata !3854, metadata !DIExpression()), !dbg !3903
  %49 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !3939
  br i1 %49, label %50, label %135, !dbg !3940

50:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %21, metadata !3851, metadata !DIExpression()), !dbg !3903
  br i1 %28, label %51, label %76, !dbg !3941

51:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %21, metadata !3851, metadata !DIExpression()), !dbg !3903
  call void @llvm.dbg.value(metadata i8* %48, metadata !3853, metadata !DIExpression()), !dbg !3903
  call void @llvm.dbg.value(metadata i32 0, metadata !3854, metadata !DIExpression()), !dbg !3903
  call void @llvm.dbg.value(metadata i32 0, metadata !3855, metadata !DIExpression()), !dbg !3942
  %52 = icmp ne i16* %5, null
  br label %53, !dbg !3943

53:                                               ; preds = %51, %70
  %54 = phi i32 [ %21, %51 ], [ %72, %70 ]
  %55 = phi i8* [ %48, %51 ], [ %73, %70 ]
  %56 = phi i32 [ 0, %51 ], [ %71, %70 ]
  %57 = phi i32 [ 0, %51 ], [ %74, %70 ]
  call void @llvm.dbg.value(metadata i32 %54, metadata !3851, metadata !DIExpression()), !dbg !3903
  call void @llvm.dbg.value(metadata i8* %55, metadata !3853, metadata !DIExpression()), !dbg !3903
  call void @llvm.dbg.value(metadata i32 %56, metadata !3854, metadata !DIExpression()), !dbg !3903
  call void @llvm.dbg.value(metadata i32 %57, metadata !3855, metadata !DIExpression()), !dbg !3942
  %58 = load i8, i8* %55, align 1, !dbg !3944
  %59 = zext i8 %58 to i32, !dbg !3945
  %60 = getelementptr inbounds i32, i32* %14, i32 %59, !dbg !3945
  %61 = bitcast i32* %60 to i8**, !dbg !3946
  %62 = load i8*, i8** %61, align 4, !dbg !3946
  call void @llvm.dbg.value(metadata i8* %62, metadata !3861, metadata !DIExpression()), !dbg !3947
  %63 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %62, i16 noundef zeroext 0) #25, !dbg !3948
  call void @llvm.dbg.value(metadata i32 %63, metadata !3864, metadata !DIExpression()), !dbg !3947
  %64 = icmp ult i32 %56, %6
  %65 = select i1 %52, i1 %64, i1 false, !dbg !3949
  br i1 %65, label %66, label %70, !dbg !3949

66:                                               ; preds = %53
  %67 = trunc i32 %63 to i16, !dbg !3951
  %68 = add nuw i32 %56, 1, !dbg !3953
  call void @llvm.dbg.value(metadata i32 %68, metadata !3854, metadata !DIExpression()), !dbg !3903
  %69 = getelementptr inbounds i16, i16* %5, i32 %56, !dbg !3954
  store i16 %67, i16* %69, align 2, !dbg !3955
  br label %70, !dbg !3956

70:                                               ; preds = %66, %53
  %71 = phi i32 [ %68, %66 ], [ %56, %53 ], !dbg !3903
  call void @llvm.dbg.value(metadata i32 %71, metadata !3854, metadata !DIExpression()), !dbg !3903
  %72 = add nsw i32 %63, %54, !dbg !3957
  call void @llvm.dbg.value(metadata i32 %72, metadata !3851, metadata !DIExpression()), !dbg !3903
  %73 = getelementptr inbounds i8, i8* %55, i32 1, !dbg !3958
  call void @llvm.dbg.value(metadata i8* %73, metadata !3853, metadata !DIExpression()), !dbg !3903
  %74 = add nuw nsw i32 %57, 1, !dbg !3959
  call void @llvm.dbg.value(metadata i32 %74, metadata !3855, metadata !DIExpression()), !dbg !3942
  %75 = icmp eq i32 %74, %24, !dbg !3960
  br i1 %75, label %82, label %53, !dbg !3943, !llvm.loop !3961

76:                                               ; preds = %50
  %77 = and i32 %4, 4
  %78 = icmp ne i32 %77, 0
  %79 = and i1 %78, %25, !dbg !3963
  %80 = select i1 %79, i32 %24, i32 0, !dbg !3963
  %81 = getelementptr i8, i8* %48, i32 %80, !dbg !3963
  br label %82, !dbg !3963

82:                                               ; preds = %70, %76
  %83 = phi i32 [ 0, %76 ], [ %71, %70 ], !dbg !3966
  %84 = phi i8* [ %81, %76 ], [ %73, %70 ], !dbg !3903
  %85 = phi i32 [ %21, %76 ], [ %72, %70 ], !dbg !3967
  call void @llvm.dbg.value(metadata i1 undef, metadata !3865, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3968
  call void @llvm.dbg.value(metadata i32 0, metadata !3866, metadata !DIExpression()), !dbg !3969
  call void @llvm.dbg.value(metadata i32 %85, metadata !3851, metadata !DIExpression()), !dbg !3903
  call void @llvm.dbg.value(metadata i8* %84, metadata !3853, metadata !DIExpression()), !dbg !3903
  call void @llvm.dbg.value(metadata i32 %83, metadata !3854, metadata !DIExpression()), !dbg !3903
  %86 = icmp eq i8 %30, 0, !dbg !3970
  br i1 %86, label %287, label %87, !dbg !3971

87:                                               ; preds = %82
  %88 = and i32 %4, 5, !dbg !3972
  %89 = icmp eq i32 %88, 0, !dbg !3973
  call void @llvm.dbg.value(metadata i1 %89, metadata !3865, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3968
  %90 = icmp eq i32 %33, 0
  %91 = icmp eq i32 %26, 0
  %92 = icmp ne i16* %5, null
  %93 = select i1 %89, i32 -2, i32 -1
  br label %94, !dbg !3971

94:                                               ; preds = %87, %130
  %95 = phi i32 [ %85, %87 ], [ %132, %130 ]
  %96 = phi i8* [ %84, %87 ], [ %100, %130 ]
  %97 = phi i32 [ %83, %87 ], [ %131, %130 ]
  %98 = phi i32 [ 0, %87 ], [ %133, %130 ]
  call void @llvm.dbg.value(metadata i32 %95, metadata !3851, metadata !DIExpression()), !dbg !3903
  call void @llvm.dbg.value(metadata i8* %96, metadata !3853, metadata !DIExpression()), !dbg !3903
  call void @llvm.dbg.value(metadata i32 %97, metadata !3854, metadata !DIExpression()), !dbg !3903
  call void @llvm.dbg.value(metadata i32 %98, metadata !3866, metadata !DIExpression()), !dbg !3969
  %99 = getelementptr inbounds i8, i8* %96, i32 1, !dbg !3974
  call void @llvm.dbg.value(metadata i8* %99, metadata !3853, metadata !DIExpression()), !dbg !3903
  call void @llvm.dbg.value(metadata i8 undef, metadata !3868, metadata !DIExpression()), !dbg !3975
  %100 = getelementptr inbounds i8, i8* %96, i32 2, !dbg !3976
  call void @llvm.dbg.value(metadata i8* %100, metadata !3853, metadata !DIExpression()), !dbg !3903
  %101 = load i8, i8* %99, align 1, !dbg !3977
  call void @llvm.dbg.value(metadata i8 %101, metadata !3871, metadata !DIExpression()), !dbg !3975
  %102 = zext i8 %101 to i32, !dbg !3978
  %103 = getelementptr inbounds i32, i32* %14, i32 %102, !dbg !3978
  %104 = bitcast i32* %103 to i8**, !dbg !3979
  %105 = load i8*, i8** %104, align 4, !dbg !3979
  call void @llvm.dbg.value(metadata i8* %105, metadata !3872, metadata !DIExpression()), !dbg !3975
  %106 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %105) #25, !dbg !3980
  call void @llvm.dbg.value(metadata i1 %106, metadata !3873, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3975
  br i1 %16, label %113, label %107, !dbg !3981

107:                                              ; preds = %94
  %108 = load i8, i8* %96, align 1, !dbg !3983
  call void @llvm.dbg.value(metadata i8 %108, metadata !3868, metadata !DIExpression()), !dbg !3975
  %109 = zext i8 %108 to i32, !dbg !3984
  %110 = tail call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %109) #25, !dbg !3985
  br i1 %110, label %111, label %113, !dbg !3986

111:                                              ; preds = %107
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.9, i32 0, i32 0), i32 noundef 87, i8* noundef %47, i32 noundef %109) #24, !dbg !3987
  %112 = add nsw i32 %95, -2, !dbg !3993
  call void @llvm.dbg.value(metadata i32 %112, metadata !3851, metadata !DIExpression()), !dbg !3903
  br label %130, !dbg !3994

113:                                              ; preds = %107, %94
  br i1 %106, label %114, label %117, !dbg !3995

114:                                              ; preds = %113
  br i1 %91, label %115, label %118, !dbg !3996

115:                                              ; preds = %114
  %116 = add i32 %95, %93, !dbg !3998
  call void @llvm.dbg.value(metadata i32 %116, metadata !3851, metadata !DIExpression()), !dbg !3903
  br label %130, !dbg !4001

117:                                              ; preds = %113
  br i1 %90, label %130, label %118, !dbg !4002

118:                                              ; preds = %117, %114
  call void @llvm.dbg.label(metadata !3899), !dbg !4003
  %119 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %105, i16 noundef zeroext 0) #25, !dbg !4004
  call void @llvm.dbg.value(metadata i32 %119, metadata !3874, metadata !DIExpression()), !dbg !3975
  %120 = icmp ult i32 %97, %6
  %121 = select i1 %92, i1 %120, i1 false, !dbg !4005
  br i1 %121, label %122, label %126, !dbg !4005

122:                                              ; preds = %118
  %123 = trunc i32 %119 to i16, !dbg !4007
  %124 = add nuw i32 %97, 1, !dbg !4009
  call void @llvm.dbg.value(metadata i32 %124, metadata !3854, metadata !DIExpression()), !dbg !3903
  %125 = getelementptr inbounds i16, i16* %5, i32 %97, !dbg !4010
  store i16 %123, i16* %125, align 2, !dbg !4011
  br label %126, !dbg !4012

126:                                              ; preds = %122, %118
  %127 = phi i32 [ %124, %122 ], [ %97, %118 ], !dbg !3903
  call void @llvm.dbg.value(metadata i32 %127, metadata !3854, metadata !DIExpression()), !dbg !3903
  %128 = add i32 %95, -1, !dbg !4013
  %129 = add i32 %128, %119, !dbg !4014
  call void @llvm.dbg.value(metadata i32 %129, metadata !3851, metadata !DIExpression()), !dbg !3903
  br label %130, !dbg !4015

130:                                              ; preds = %115, %126, %117, %111
  %131 = phi i32 [ %97, %111 ], [ %127, %126 ], [ %97, %115 ], [ %97, %117 ], !dbg !3903
  %132 = phi i32 [ %112, %111 ], [ %129, %126 ], [ %116, %115 ], [ %95, %117 ], !dbg !3975
  call void @llvm.dbg.value(metadata i32 %132, metadata !3851, metadata !DIExpression()), !dbg !3903
  call void @llvm.dbg.value(metadata i32 %131, metadata !3854, metadata !DIExpression()), !dbg !3903
  %133 = add nuw nsw i32 %98, 1, !dbg !4016
  call void @llvm.dbg.value(metadata i8* %100, metadata !3853, metadata !DIExpression()), !dbg !3903
  call void @llvm.dbg.value(metadata i32 %133, metadata !3866, metadata !DIExpression()), !dbg !3969
  %134 = icmp eq i32 %133, %31, !dbg !3970
  br i1 %134, label %287, label %94, !dbg !3971, !llvm.loop !4017

135:                                              ; preds = %41
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !3876, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !3877, metadata !DIExpression()), !dbg !4020
  br i1 %28, label %136, label %138, !dbg !4021

136:                                              ; preds = %135
  call void @llvm.dbg.value(metadata i8 %23, metadata !3878, metadata !DIExpression()), !dbg !3903
  call void @llvm.dbg.value(metadata i8 0, metadata !3879, metadata !DIExpression()), !dbg !3903
  %137 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !4022
  call void @llvm.dbg.value(metadata i8* %137, metadata !3880, metadata !DIExpression()), !dbg !3903
  br label %143, !dbg !4025

138:                                              ; preds = %135
  %139 = and i32 %4, 4
  %140 = icmp ne i32 %139, 0
  %141 = and i1 %140, %25, !dbg !4026
  %142 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %141, label %143, label %148, !dbg !4026

143:                                              ; preds = %136, %138
  %144 = phi i8 [ 0, %138 ], [ %23, %136 ]
  %145 = phi i8 [ %23, %138 ], [ 0, %136 ]
  %146 = phi i8* [ %142, %138 ], [ %137, %136 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !3880, metadata !DIExpression()), !dbg !3903
  call void @llvm.dbg.value(metadata i8 undef, metadata !3879, metadata !DIExpression()), !dbg !3903
  call void @llvm.dbg.value(metadata i8 0, metadata !3878, metadata !DIExpression()), !dbg !3903
  %147 = call i8* @memcpy(i8* noundef nonnull %146, i8* noundef nonnull %48, i32 noundef %24) #24, !dbg !4028
  br label %148, !dbg !4031

148:                                              ; preds = %138, %143
  %149 = phi i8 [ %145, %143 ], [ 0, %138 ]
  %150 = phi i8 [ %144, %143 ], [ 0, %138 ]
  %151 = getelementptr inbounds i8, i8* %48, i32 %24, !dbg !4032
  call void @llvm.dbg.value(metadata i8* %151, metadata !3853, metadata !DIExpression()), !dbg !3903
  call void @llvm.dbg.value(metadata i32 0, metadata !3882, metadata !DIExpression()), !dbg !4033
  call void @llvm.dbg.value(metadata i8 %149, metadata !3879, metadata !DIExpression()), !dbg !3903
  call void @llvm.dbg.value(metadata i8 %150, metadata !3878, metadata !DIExpression()), !dbg !3903
  %152 = icmp eq i8 %30, 0, !dbg !4034
  br i1 %152, label %153, label %155, !dbg !4035

153:                                              ; preds = %148
  %154 = and i32 %4, 4, !dbg !4036
  br label %160, !dbg !4035

155:                                              ; preds = %148
  %156 = icmp eq i32 %33, 0
  %157 = icmp eq i32 %26, 0
  %158 = and i32 %4, 4
  %159 = icmp eq i32 %158, 0
  br label %179, !dbg !4035

160:                                              ; preds = %235, %153
  %161 = phi i32 [ %154, %153 ], [ %158, %235 ], !dbg !4036
  %162 = phi i8 [ %150, %153 ], [ %236, %235 ], !dbg !4037
  %163 = phi i8 [ %149, %153 ], [ %237, %235 ], !dbg !4038
  %164 = phi i8* [ %151, %153 ], [ %186, %235 ], !dbg !3903
  call void @llvm.dbg.value(metadata i8 undef, metadata !3875, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !3903
  %165 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4039
  %166 = load i8, i8* %165, align 1, !dbg !4039
  %167 = zext i8 %162 to i32, !dbg !4040
  %168 = add i8 %166, %162, !dbg !4041
  call void @llvm.dbg.value(metadata i8 %168, metadata !3875, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !3903
  %169 = icmp eq i32 %33, 0, !dbg !4042
  %170 = lshr i8 %163, 1, !dbg !4043
  %171 = select i1 %169, i8 %170, i8 0, !dbg !4043
  call void @llvm.dbg.value(metadata i8 %171, metadata !3875, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !3903
  %172 = icmp eq i32 %26, 0, !dbg !4044
  %173 = icmp eq i32 %161, 0, !dbg !4036
  %174 = select i1 %173, i8 0, i8 %163, !dbg !4036
  %175 = select i1 %172, i8 %174, i8 0, !dbg !4036
  call void @llvm.dbg.value(metadata i8 %175, metadata !3875, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !3903
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !3890, metadata !DIExpression()), !dbg !4045
  %176 = load i32, i32* %14, align 1, !dbg !4046
  store i8 %168, i8* %165, align 1, !dbg !4047
  store i8 %175, i8* %22, align 1, !dbg !4047
  store i8 %171, i8* %29, align 1, !dbg !4047
  %177 = call i32 %2(i8* noundef nonnull %0, i32 noundef %44, i8* noundef %3) #24, !dbg !4048
  call void @llvm.dbg.value(metadata i32 %177, metadata !3881, metadata !DIExpression()), !dbg !3903
  %178 = icmp slt i32 %177, 0, !dbg !4049
  br i1 %178, label %287, label %240, !dbg !4051

179:                                              ; preds = %155, %235
  %180 = phi i8* [ %151, %155 ], [ %186, %235 ]
  %181 = phi i32 [ 0, %155 ], [ %238, %235 ]
  %182 = phi i8 [ %149, %155 ], [ %237, %235 ]
  %183 = phi i8 [ %150, %155 ], [ %236, %235 ]
  call void @llvm.dbg.value(metadata i8* %180, metadata !3853, metadata !DIExpression()), !dbg !3903
  call void @llvm.dbg.value(metadata i32 %181, metadata !3882, metadata !DIExpression()), !dbg !4033
  call void @llvm.dbg.value(metadata i8 %182, metadata !3879, metadata !DIExpression()), !dbg !3903
  call void @llvm.dbg.value(metadata i8 %183, metadata !3878, metadata !DIExpression()), !dbg !3903
  %184 = getelementptr inbounds i8, i8* %180, i32 1, !dbg !4052
  call void @llvm.dbg.value(metadata i8* %184, metadata !3853, metadata !DIExpression()), !dbg !3903
  %185 = load i8, i8* %180, align 1, !dbg !4053
  call void @llvm.dbg.value(metadata i8 %185, metadata !3884, metadata !DIExpression()), !dbg !4054
  %186 = getelementptr inbounds i8, i8* %180, i32 2, !dbg !4055
  call void @llvm.dbg.value(metadata i8* %186, metadata !3853, metadata !DIExpression()), !dbg !3903
  %187 = load i8, i8* %184, align 1, !dbg !4056
  call void @llvm.dbg.value(metadata i8 %187, metadata !3887, metadata !DIExpression()), !dbg !4054
  %188 = zext i8 %187 to i32, !dbg !4057
  %189 = getelementptr inbounds i32, i32* %14, i32 %188, !dbg !4057
  %190 = bitcast i32* %189 to i8**, !dbg !4058
  %191 = load i8*, i8** %190, align 4, !dbg !4058
  call void @llvm.dbg.value(metadata i8* %191, metadata !3888, metadata !DIExpression()), !dbg !4054
  %192 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %191) #25, !dbg !4059
  call void @llvm.dbg.value(metadata i1 %192, metadata !3889, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4054
  br i1 %16, label %196, label %193, !dbg !4060

193:                                              ; preds = %179
  %194 = zext i8 %185 to i32, !dbg !4062
  %195 = call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %194) #25, !dbg !4063
  br i1 %195, label %235, label %196, !dbg !4064

196:                                              ; preds = %193, %179
  br i1 %192, label %197, label %213, !dbg !4065

197:                                              ; preds = %196
  br i1 %157, label %205, label %198, !dbg !4066

198:                                              ; preds = %197
  %199 = icmp ult i8 %183, 16, !dbg !4069
  br i1 %199, label %201, label %200, !dbg !4074

200:                                              ; preds = %198
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 1086) #24, !dbg !4075
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 1086) #24, !dbg !4075
  unreachable, !dbg !4075

201:                                              ; preds = %198
  %202 = zext i8 %183 to i32, !dbg !4069
  %203 = add nuw nsw i8 %183, 1, !dbg !4077
  call void @llvm.dbg.value(metadata i8 %203, metadata !3878, metadata !DIExpression()), !dbg !3903
  %204 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %202, !dbg !4078
  br label %231, !dbg !4079

205:                                              ; preds = %197
  br i1 %159, label %235, label %206, !dbg !4080

206:                                              ; preds = %205
  %207 = icmp ult i8 %182, 16, !dbg !4081
  br i1 %207, label %209, label %208, !dbg !4086

208:                                              ; preds = %206
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 1089) #24, !dbg !4087
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 1089) #24, !dbg !4087
  unreachable, !dbg !4087

209:                                              ; preds = %206
  %210 = zext i8 %182 to i32, !dbg !4081
  %211 = add nuw nsw i8 %182, 1, !dbg !4089
  call void @llvm.dbg.value(metadata i8 %211, metadata !3879, metadata !DIExpression()), !dbg !3903
  %212 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %210, !dbg !4090
  br label %231, !dbg !4091

213:                                              ; preds = %196
  br i1 %156, label %221, label %214, !dbg !4092

214:                                              ; preds = %213
  %215 = icmp ult i8 %183, 16, !dbg !4094
  br i1 %215, label %217, label %216, !dbg !4099

216:                                              ; preds = %214
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 1096) #24, !dbg !4100
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 1096) #24, !dbg !4100
  unreachable, !dbg !4100

217:                                              ; preds = %214
  %218 = zext i8 %183 to i32, !dbg !4094
  %219 = add nuw nsw i8 %183, 1, !dbg !4102
  call void @llvm.dbg.value(metadata i8 %219, metadata !3878, metadata !DIExpression()), !dbg !3903
  %220 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %218, !dbg !4103
  br label %231, !dbg !4104

221:                                              ; preds = %213
  %222 = icmp ult i8 %182, 16, !dbg !4105
  br i1 %222, label %224, label %223, !dbg !4109

223:                                              ; preds = %221
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 1099) #24, !dbg !4110
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 1099) #24, !dbg !4110
  unreachable, !dbg !4110

224:                                              ; preds = %221
  %225 = zext i8 %182 to i32, !dbg !4105
  %226 = add nuw nsw i8 %182, 1, !dbg !4112
  call void @llvm.dbg.value(metadata i8 %226, metadata !3879, metadata !DIExpression()), !dbg !3903
  %227 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %225, !dbg !4113
  store i8 %185, i8* %227, align 1, !dbg !4114
  %228 = add nuw nsw i8 %182, 2, !dbg !4115
  call void @llvm.dbg.value(metadata i8 %228, metadata !3879, metadata !DIExpression()), !dbg !3903
  %229 = zext i8 %226 to i32, !dbg !4116
  %230 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %229, !dbg !4116
  br label %231

231:                                              ; preds = %217, %224, %201, %209
  %232 = phi i8* [ %212, %209 ], [ %204, %201 ], [ %230, %224 ], [ %220, %217 ]
  %233 = phi i8 [ %183, %209 ], [ %203, %201 ], [ %183, %224 ], [ %219, %217 ]
  %234 = phi i8 [ %211, %209 ], [ %182, %201 ], [ %228, %224 ], [ %182, %217 ]
  store i8 %187, i8* %232, align 1, !dbg !4117
  br label %235, !dbg !4118

235:                                              ; preds = %231, %205, %193
  %236 = phi i8 [ %183, %193 ], [ %183, %205 ], [ %233, %231 ], !dbg !3903
  %237 = phi i8 [ %182, %193 ], [ %182, %205 ], [ %234, %231 ], !dbg !4038
  call void @llvm.dbg.value(metadata i8 %237, metadata !3879, metadata !DIExpression()), !dbg !3903
  call void @llvm.dbg.value(metadata i8 %236, metadata !3878, metadata !DIExpression()), !dbg !3903
  %238 = add nuw nsw i32 %181, 1, !dbg !4118
  call void @llvm.dbg.value(metadata i8* %186, metadata !3853, metadata !DIExpression()), !dbg !3903
  call void @llvm.dbg.value(metadata i32 %238, metadata !3882, metadata !DIExpression()), !dbg !4033
  %239 = icmp eq i32 %238, %31, !dbg !4034
  br i1 %239, label %160, label %179, !dbg !4035, !llvm.loop !4119

240:                                              ; preds = %160
  %241 = zext i8 %163 to i32, !dbg !4043
  call void @llvm.dbg.value(metadata i32 %177, metadata !3851, metadata !DIExpression()), !dbg !3903
  store i32 %176, i32* %14, align 1, !dbg !4121
  %242 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !4122
  %243 = call i32 %2(i8* noundef nonnull %242, i32 noundef %241, i8* noundef %3) #24, !dbg !4123
  call void @llvm.dbg.value(metadata i32 %243, metadata !3881, metadata !DIExpression()), !dbg !3903
  %244 = icmp slt i32 %243, 0, !dbg !4124
  br i1 %244, label %287, label %245, !dbg !4126

245:                                              ; preds = %240
  call void @llvm.dbg.value(metadata !DIArgList(i32 %177, i32 %243), metadata !3851, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3903
  %246 = mul nsw i32 %31, -2
  %247 = add i32 %21, %246, !dbg !4127
  %248 = add nuw nsw i32 %44, %24, !dbg !4127
  %249 = sub i32 %247, %248, !dbg !4127
  call void @llvm.dbg.value(metadata i32 %249, metadata !3891, metadata !DIExpression()), !dbg !3903
  %250 = call i32 %2(i8* noundef %164, i32 noundef %249, i8* noundef %3) #24, !dbg !4128
  call void @llvm.dbg.value(metadata i32 %250, metadata !3881, metadata !DIExpression()), !dbg !3903
  %251 = icmp slt i32 %250, 0, !dbg !4129
  br i1 %251, label %287, label %252, !dbg !4131

252:                                              ; preds = %245
  %253 = add nuw nsw i32 %243, %177, !dbg !4132
  call void @llvm.dbg.value(metadata i32 %253, metadata !3851, metadata !DIExpression()), !dbg !3903
  %254 = add nuw nsw i32 %253, %250, !dbg !4133
  call void @llvm.dbg.value(metadata i32 %254, metadata !3851, metadata !DIExpression()), !dbg !3903
  call void @llvm.dbg.value(metadata i32 0, metadata !3892, metadata !DIExpression()), !dbg !4134
  %255 = icmp eq i8 %162, 0, !dbg !4135
  br i1 %255, label %284, label %256, !dbg !4136

256:                                              ; preds = %252
  %257 = icmp eq i16* %5, null
  br label %258, !dbg !4136

258:                                              ; preds = %256, %279
  %259 = phi i32 [ 0, %256 ], [ %282, %279 ]
  %260 = phi i32 [ %254, %256 ], [ %281, %279 ]
  call void @llvm.dbg.value(metadata i32 %259, metadata !3892, metadata !DIExpression()), !dbg !4134
  call void @llvm.dbg.value(metadata i32 %260, metadata !3851, metadata !DIExpression()), !dbg !3903
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4137
  %261 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %259, !dbg !4138
  %262 = load i8, i8* %261, align 1, !dbg !4138
  call void @llvm.dbg.value(metadata i8 %262, metadata !3894, metadata !DIExpression()), !dbg !4139
  store i8 %262, i8* %10, align 1, !dbg !4140
  %263 = zext i8 %262 to i32, !dbg !4141
  %264 = getelementptr inbounds i32, i32* %14, i32 %263, !dbg !4141
  %265 = bitcast i32* %264 to i8**, !dbg !4142
  %266 = load i8*, i8** %265, align 4, !dbg !4142
  call void @llvm.dbg.value(metadata i8* %266, metadata !3897, metadata !DIExpression()), !dbg !4139
  br i1 %257, label %270, label %267, !dbg !4143

267:                                              ; preds = %258
  %268 = getelementptr inbounds i16, i16* %5, i32 %259, !dbg !4144
  %269 = load i16, i16* %268, align 2, !dbg !4144
  br label %270, !dbg !4143

270:                                              ; preds = %258, %267
  %271 = phi i16 [ %269, %267 ], [ 0, %258 ], !dbg !4143
  call void @llvm.dbg.value(metadata i32 undef, metadata !3898, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4139
  call void @llvm.dbg.value(metadata i8* %10, metadata !3894, metadata !DIExpression(DW_OP_deref)), !dbg !4139
  %272 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #24, !dbg !4145
  call void @llvm.dbg.value(metadata i32 %272, metadata !3881, metadata !DIExpression()), !dbg !3903
  %273 = icmp slt i32 %272, 0, !dbg !4146
  br i1 %273, label %277, label %274, !dbg !4148

274:                                              ; preds = %270
  call void @llvm.dbg.value(metadata i16 %271, metadata !3898, metadata !DIExpression()), !dbg !4139
  call void @llvm.dbg.value(metadata !DIArgList(i32 %260, i32 %272), metadata !3851, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3903
  %275 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %266, i16 noundef zeroext %271) #25, !dbg !4149
  call void @llvm.dbg.value(metadata i32 %275, metadata !3881, metadata !DIExpression()), !dbg !3903
  %276 = icmp slt i32 %275, 0, !dbg !4150
  br i1 %276, label %277, label %279, !dbg !4152

277:                                              ; preds = %274, %270
  %278 = phi i32 [ %275, %274 ], [ %272, %270 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !3851, metadata !DIExpression()), !dbg !3903
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4153
  call void @llvm.dbg.value(metadata i32 undef, metadata !3851, metadata !DIExpression()), !dbg !3903
  br label %287

279:                                              ; preds = %274
  %280 = add nsw i32 %272, %260, !dbg !4154
  call void @llvm.dbg.value(metadata i32 %280, metadata !3851, metadata !DIExpression()), !dbg !3903
  %281 = add nsw i32 %280, %275, !dbg !4155
  call void @llvm.dbg.value(metadata i32 %281, metadata !3851, metadata !DIExpression()), !dbg !3903
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4153
  %282 = add nuw nsw i32 %259, 1, !dbg !4156
  call void @llvm.dbg.value(metadata i32 %282, metadata !3892, metadata !DIExpression()), !dbg !4134
  %283 = icmp eq i32 %282, %167, !dbg !4135
  br i1 %283, label %284, label %258, !dbg !4136, !llvm.loop !4157

284:                                              ; preds = %279, %252
  %285 = phi i32 [ %254, %252 ], [ %281, %279 ], !dbg !4133
  call void @llvm.dbg.value(metadata i32 %285, metadata !3851, metadata !DIExpression()), !dbg !3903
  %286 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #24, !dbg !4159
  br label %287, !dbg !4160

287:                                              ; preds = %130, %82, %277, %284, %160, %240, %245, %37, %39
  %288 = phi i32 [ %21, %39 ], [ %21, %37 ], [ %285, %284 ], [ %177, %160 ], [ %243, %240 ], [ %250, %245 ], [ %278, %277 ], [ %85, %82 ], [ %132, %130 ], !dbg !3903
  ret i32 %288, !dbg !4161
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !4162 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4166, metadata !DIExpression()), !dbg !4174
  %2 = icmp eq i8* %0, null, !dbg !4175
  br i1 %2, label %3, label %4, !dbg !4178

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 198) #24, !dbg !4179
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 198) #24, !dbg !4179
  unreachable, !dbg !4179

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4167, metadata !DIExpression()), !dbg !4174
  call void @llvm.dbg.value(metadata i8* %0, metadata !4168, metadata !DIExpression()), !dbg !4174
  %5 = load i8, i8* %0, align 1, !dbg !4181
  %6 = zext i8 %5 to i32, !dbg !4181
  %7 = shl nuw nsw i32 %6, 2, !dbg !4182
  call void @llvm.dbg.value(metadata i32 %7, metadata !4169, metadata !DIExpression()), !dbg !4174
  %8 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4183
  %9 = load i8, i8* %8, align 1, !dbg !4183
  %10 = zext i8 %9 to i32, !dbg !4183
  call void @llvm.dbg.value(metadata i32 %10, metadata !4170, metadata !DIExpression()), !dbg !4174
  %11 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4184
  %12 = load i8, i8* %11, align 1, !dbg !4184
  %13 = zext i8 %12 to i32, !dbg !4184
  call void @llvm.dbg.value(metadata i32 %13, metadata !4171, metadata !DIExpression()), !dbg !4174
  %14 = getelementptr inbounds i8, i8* %0, i32 %7, !dbg !4185
  call void @llvm.dbg.value(metadata i8* %14, metadata !4167, metadata !DIExpression()), !dbg !4174
  %15 = getelementptr inbounds i8, i8* %14, i32 %13, !dbg !4186
  call void @llvm.dbg.value(metadata i8* %15, metadata !4167, metadata !DIExpression()), !dbg !4174
  call void @llvm.dbg.value(metadata i32 0, metadata !4172, metadata !DIExpression()), !dbg !4187
  %16 = icmp eq i8 %9, 0, !dbg !4188
  br i1 %16, label %17, label %22, !dbg !4190

17:                                               ; preds = %22, %4
  %18 = phi i8* [ %15, %4 ], [ %28, %22 ], !dbg !4174
  %19 = ptrtoint i8* %18 to i32, !dbg !4191
  %20 = ptrtoint i8* %0 to i32, !dbg !4191
  %21 = sub i32 %19, %20, !dbg !4191
  ret i32 %21, !dbg !4192

22:                                               ; preds = %4, %22
  %23 = phi i32 [ %29, %22 ], [ 0, %4 ]
  %24 = phi i8* [ %28, %22 ], [ %15, %4 ]
  call void @llvm.dbg.value(metadata i32 %23, metadata !4172, metadata !DIExpression()), !dbg !4187
  call void @llvm.dbg.value(metadata i8* %24, metadata !4167, metadata !DIExpression()), !dbg !4174
  %25 = getelementptr inbounds i8, i8* %24, i32 1, !dbg !4193
  call void @llvm.dbg.value(metadata i8* %25, metadata !4167, metadata !DIExpression()), !dbg !4174
  %26 = tail call i32 @strlen(i8* noundef nonnull %25) #24, !dbg !4195
  %27 = add i32 %26, 1, !dbg !4196
  %28 = getelementptr inbounds i8, i8* %25, i32 %27, !dbg !4197
  call void @llvm.dbg.value(metadata i8* %28, metadata !4167, metadata !DIExpression()), !dbg !4174
  %29 = add nuw nsw i32 %23, 1, !dbg !4198
  call void @llvm.dbg.value(metadata i32 %29, metadata !4172, metadata !DIExpression()), !dbg !4187
  %30 = icmp eq i32 %29, %10, !dbg !4188
  br i1 %30, label %17, label %22, !dbg !4190, !llvm.loop !4199
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !4201 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !4205, metadata !DIExpression()), !dbg !4209
  call void @llvm.dbg.value(metadata i8* %1, metadata !4206, metadata !DIExpression()), !dbg !4209
  call void @llvm.dbg.value(metadata i8* %2, metadata !4207, metadata !DIExpression()), !dbg !4209
  call void @llvm.dbg.value(metadata i16 %3, metadata !4208, metadata !DIExpression()), !dbg !4209
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !4210
  br i1 %5, label %6, label %9, !dbg !4212

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #24, !dbg !4213
  %8 = add i32 %7, 1, !dbg !4215
  br label %20, !dbg !4216

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !4217
  br i1 %10, label %13, label %11, !dbg !4218

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !4218
  br label %16, !dbg !4218

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #24, !dbg !4219
  %15 = add i32 %14, 1, !dbg !4220
  br label %16, !dbg !4218

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !4218
  %18 = and i32 %17, 65535, !dbg !4221
  call void @llvm.dbg.value(metadata i32 %17, metadata !4208, metadata !DIExpression()), !dbg !4209
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #24, !dbg !4222
  br label %20, !dbg !4223

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !4209
  ret i32 %21, !dbg !4224
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !4225 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4227, metadata !DIExpression()), !dbg !4228
  ret i32 0, !dbg !4229
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #9 !dbg !4230 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !4234, metadata !DIExpression()), !dbg !4235
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !4236
  ret void, !dbg !4237
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #10 !dbg !4238 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !4241
  ret i8* %1, !dbg !4242
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !4243 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4254, metadata !DIExpression()), !dbg !4265
  call void @llvm.dbg.value(metadata i8* %0, metadata !4253, metadata !DIExpression()), !dbg !4265
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #25, !dbg !4266
  ret void, !dbg !4268
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !4269 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4273, metadata !DIExpression()), !dbg !4275
  call void @llvm.dbg.value(metadata i8* %1, metadata !4274, metadata !DIExpression()), !dbg !4275
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4276
  %4 = tail call i32 %3(i32 noundef %0) #24, !dbg !4276
  ret i32 %4, !dbg !4277
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !4278 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4285, metadata !DIExpression()), !dbg !4286
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4282, metadata !DIExpression()), !dbg !4286
  call void @llvm.dbg.value(metadata i8* %1, metadata !4283, metadata !DIExpression()), !dbg !4286
  call void @llvm.dbg.value(metadata i8* %2, metadata !4284, metadata !DIExpression()), !dbg !4286
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #24, !dbg !4287
  ret void, !dbg !4288
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !4289 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4293, metadata !DIExpression()), !dbg !4296
  call void @llvm.dbg.value(metadata i32 %1, metadata !4294, metadata !DIExpression()), !dbg !4296
  call void @llvm.dbg.value(metadata i32 0, metadata !4295, metadata !DIExpression()), !dbg !4296
  %3 = icmp eq i32 %1, 0, !dbg !4297
  br i1 %3, label %13, label %4, !dbg !4300

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !4295, metadata !DIExpression()), !dbg !4296
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4301
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !4303
  %8 = load i8, i8* %7, align 1, !dbg !4303
  %9 = zext i8 %8 to i32, !dbg !4303
  %10 = tail call i32 %6(i32 noundef %9) #24, !dbg !4301
  %11 = add nuw i32 %5, 1, !dbg !4304
  call void @llvm.dbg.value(metadata i32 %11, metadata !4295, metadata !DIExpression()), !dbg !4296
  %12 = icmp eq i32 %11, %1, !dbg !4297
  br i1 %12, label %13, label %4, !dbg !4300, !llvm.loop !4305

13:                                               ; preds = %4, %2
  ret void, !dbg !4307
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !4308 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4312, metadata !DIExpression()), !dbg !4314
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !4315
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4315
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !4313, metadata !DIExpression()), !dbg !4316
  call void @llvm.va_start(i8* nonnull %3), !dbg !4317
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !4318
  %5 = load i32, i32* %4, align 4, !dbg !4318
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !4318
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !4318
  call void @llvm.va_end(i8* nonnull %3), !dbg !4319
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4320
  ret void, !dbg !4320
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !4321 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4325, metadata !DIExpression()), !dbg !4330
  call void @llvm.dbg.value(metadata i32 %1, metadata !4326, metadata !DIExpression()), !dbg !4330
  call void @llvm.dbg.value(metadata i8* %2, metadata !4327, metadata !DIExpression()), !dbg !4330
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !4331
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4331
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !4328, metadata !DIExpression()), !dbg !4332
  call void @llvm.va_start(i8* nonnull %5), !dbg !4333
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !4334
  %7 = load i32, i32* %6, align 4, !dbg !4334
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !4334
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #25, !dbg !4334
  call void @llvm.dbg.value(metadata i32 %9, metadata !4329, metadata !DIExpression()), !dbg !4330
  call void @llvm.va_end(i8* nonnull %5), !dbg !4335
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4336
  ret i32 %9, !dbg !4337
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !4338 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !4345, metadata !DIExpression()), !dbg !4352
  call void @llvm.dbg.value(metadata i8* %0, metadata !4342, metadata !DIExpression()), !dbg !4352
  call void @llvm.dbg.value(metadata i32 %1, metadata !4343, metadata !DIExpression()), !dbg !4352
  call void @llvm.dbg.value(metadata i8* %2, metadata !4344, metadata !DIExpression()), !dbg !4352
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !4353
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #23, !dbg !4353
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !4346, metadata !DIExpression()), !dbg !4354
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !4355
  store i8* %0, i8** %7, align 4, !dbg !4355
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !4355
  store i32 %1, i32* %8, align 4, !dbg !4355
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !4355
  store i32 0, i32* %9, align 4, !dbg !4355
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #25, !dbg !4356
  %10 = load i32, i32* %9, align 4, !dbg !4357
  %11 = load i32, i32* %8, align 4, !dbg !4359
  %12 = icmp slt i32 %10, %11, !dbg !4360
  br i1 %12, label %13, label %15, !dbg !4361

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !4362
  store i8 0, i8* %14, align 1, !dbg !4364
  br label %15, !dbg !4365

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #23, !dbg !4366
  ret i32 %10, !dbg !4367
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #11 !dbg !4368 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4373, metadata !DIExpression()), !dbg !4375
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !4374, metadata !DIExpression()), !dbg !4375
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !4376
  %4 = load i8*, i8** %3, align 4, !dbg !4376
  %5 = icmp eq i8* %4, null, !dbg !4378
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !4379
  br i1 %5, label %12, label %8, !dbg !4380

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !4381
  %10 = load i32, i32* %9, align 4, !dbg !4381
  %11 = icmp slt i32 %7, %10, !dbg !4382
  br i1 %11, label %15, label %12, !dbg !4383

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !4384
  %14 = add nsw i32 %7, 1, !dbg !4386
  store i32 %14, i32* %13, align 4, !dbg !4386
  br label %25, !dbg !4387

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !4388
  %17 = icmp eq i32 %7, %16, !dbg !4390
  br i1 %17, label %18, label %21, !dbg !4391

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !4392
  store i32 %19, i32* %6, align 4, !dbg !4392
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4394
  store i8 0, i8* %20, align 1, !dbg !4395
  br label %25, !dbg !4396

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !4397
  %23 = add nsw i32 %7, 1, !dbg !4399
  store i32 %23, i32* %6, align 4, !dbg !4399
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4400
  store i8 %22, i8* %24, align 1, !dbg !4401
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !4402
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #12 !dbg !4403 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !4408, metadata !DIExpression()), !dbg !4412
  call void @llvm.dbg.value(metadata i8* %1, metadata !4409, metadata !DIExpression()), !dbg !4412
  call void @llvm.dbg.value(metadata i8* %2, metadata !4410, metadata !DIExpression()), !dbg !4412
  call void @llvm.dbg.value(metadata i8* %3, metadata !4411, metadata !DIExpression()), !dbg !4412
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #24, !dbg !4413
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #26, !dbg !4414
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #25, !dbg !4415
  unreachable, !dbg !4416
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #13 !dbg !4417 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #26, !dbg !4524
  ret %struct.k_thread* %1, !dbg !4525
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !4526 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !4530, metadata !DIExpression()), !dbg !4531
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4532, !srcloc !4534
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #24, !dbg !4535
  ret void, !dbg !4536
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #13 !dbg !4537 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4538, !srcloc !4540
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #24, !dbg !4541
  ret %struct.k_thread* %1, !dbg !4542
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4543 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4556, metadata !DIExpression()), !dbg !4682
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4553, metadata !DIExpression()), !dbg !4682
  call void @llvm.dbg.value(metadata i8* %1, metadata !4554, metadata !DIExpression()), !dbg !4682
  call void @llvm.dbg.value(metadata i8* %2, metadata !4555, metadata !DIExpression()), !dbg !4682
  call void @llvm.dbg.value(metadata i32 %4, metadata !4557, metadata !DIExpression()), !dbg !4682
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4683
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #23, !dbg !4683
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4558, metadata !DIExpression()), !dbg !4684
  call void @llvm.dbg.value(metadata i32 0, metadata !4562, metadata !DIExpression()), !dbg !4682
  call void @llvm.dbg.value(metadata i1 undef, metadata !4564, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4682
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4685

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4685

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4686
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4556, metadata !DIExpression()), !dbg !4682
  call void @llvm.dbg.value(metadata i8* %30, metadata !4555, metadata !DIExpression()), !dbg !4682
  call void @llvm.dbg.value(metadata i32 %29, metadata !4562, metadata !DIExpression()), !dbg !4682
  %31 = load i8, i8* %30, align 1, !dbg !4687
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4685

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4687
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4688
  call void @llvm.dbg.value(metadata i8* %34, metadata !4555, metadata !DIExpression()), !dbg !4682
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #24, !dbg !4688
  call void @llvm.dbg.value(metadata i32 %35, metadata !4566, metadata !DIExpression()), !dbg !4689
  %36 = icmp slt i32 %35, 0, !dbg !4690
  %37 = add i32 %29, 1, !dbg !4688
  call void @llvm.dbg.value(metadata i32 undef, metadata !4562, metadata !DIExpression()), !dbg !4682
  br i1 %36, label %365, label %28, !llvm.loop !4692

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4694
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4571, metadata !DIExpression()), !dbg !4695
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4695
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4614, metadata !DIExpression()), !dbg !4696
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4617, metadata !DIExpression()), !dbg !4696
  call void @llvm.dbg.value(metadata i8* %30, metadata !4620, metadata !DIExpression()), !dbg !4696
  call void @llvm.dbg.value(metadata i32 -1, metadata !4621, metadata !DIExpression()), !dbg !4696
  call void @llvm.dbg.value(metadata i32 -1, metadata !4622, metadata !DIExpression()), !dbg !4696
  call void @llvm.dbg.value(metadata i8* null, metadata !4623, metadata !DIExpression()), !dbg !4696
  call void @llvm.dbg.value(metadata i8* %14, metadata !4624, metadata !DIExpression()), !dbg !4696
  call void @llvm.dbg.value(metadata i8 0, metadata !4625, metadata !DIExpression()), !dbg !4696
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #25, !dbg !4697
  call void @llvm.dbg.value(metadata i8* %39, metadata !4555, metadata !DIExpression()), !dbg !4682
  %40 = load i24, i24* %15, align 8, !dbg !4698
  %41 = and i24 %40, 256, !dbg !4698
  %42 = icmp eq i24 %41, 0, !dbg !4698
  br i1 %42, label %51, label %43, !dbg !4700

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4701
  call void @llvm.dbg.value(metadata i8* %44, metadata !4556, metadata !DIExpression()), !dbg !4682
  %45 = bitcast i8* %27 to i32*, !dbg !4701
  %46 = load i32, i32* %45, align 4, !dbg !4701
  call void @llvm.dbg.value(metadata i32 %46, metadata !4621, metadata !DIExpression()), !dbg !4696
  %47 = icmp slt i32 %46, 0, !dbg !4703
  br i1 %47, label %48, label %56, !dbg !4705

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4706
  store i24 %49, i24* %15, align 8, !dbg !4706
  %50 = sub nsw i32 0, %46, !dbg !4708
  call void @llvm.dbg.value(metadata i32 %50, metadata !4621, metadata !DIExpression()), !dbg !4696
  br label %56, !dbg !4709

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4710
  %53 = icmp eq i24 %52, 0, !dbg !4710
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4712
  br label %56, !dbg !4712

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4713
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4696
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4556, metadata !DIExpression()), !dbg !4682
  call void @llvm.dbg.value(metadata i32 %58, metadata !4621, metadata !DIExpression()), !dbg !4696
  %60 = and i24 %57, 1024, !dbg !4713
  %61 = icmp eq i24 %60, 0, !dbg !4713
  br i1 %61, label %69, label %62, !dbg !4714

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4715
  call void @llvm.dbg.value(metadata i8* %63, metadata !4556, metadata !DIExpression()), !dbg !4682
  %64 = bitcast i8* %59 to i32*, !dbg !4715
  %65 = load i32, i32* %64, align 4, !dbg !4715
  call void @llvm.dbg.value(metadata i32 %65, metadata !4626, metadata !DIExpression()), !dbg !4716
  %66 = icmp slt i32 %65, 0, !dbg !4717
  br i1 %66, label %67, label %74, !dbg !4719

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4720
  store i24 %68, i24* %15, align 8, !dbg !4720
  br label %74, !dbg !4722

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4723
  %71 = icmp eq i24 %70, 0, !dbg !4723
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4725
  br label %74, !dbg !4725

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4726
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4696
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4696
  call void @llvm.dbg.value(metadata i8* %77, metadata !4556, metadata !DIExpression()), !dbg !4682
  call void @llvm.dbg.value(metadata i32 %76, metadata !4622, metadata !DIExpression()), !dbg !4696
  store i32 0, i32* %16, align 4, !dbg !4727
  store i32 0, i32* %17, align 8, !dbg !4728
  %78 = lshr i24 %75, 16, !dbg !4726
  call void @llvm.dbg.value(metadata i24 %78, metadata !4629, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4696
  %79 = lshr i24 %75, 11, !dbg !4729
  %80 = and i24 %79, 15, !dbg !4729
  %81 = zext i24 %80 to i32, !dbg !4729
  call void @llvm.dbg.value(metadata i32 %81, metadata !4630, metadata !DIExpression()), !dbg !4696
  %82 = trunc i24 %78 to i3, !dbg !4730
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4730

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4731

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4734
  call void @llvm.dbg.value(metadata i8* %85, metadata !4556, metadata !DIExpression()), !dbg !4682
  %86 = bitcast i8* %77 to i32*, !dbg !4734
  %87 = load i32, i32* %86, align 4, !dbg !4734
  %88 = sext i32 %87 to i64, !dbg !4734
  store i64 %88, i64* %20, align 8, !dbg !4736
  br label %115, !dbg !4737

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4738
  call void @llvm.dbg.value(metadata i8* %90, metadata !4556, metadata !DIExpression()), !dbg !4682
  %91 = bitcast i8* %77 to i32*, !dbg !4738
  %92 = load i32, i32* %91, align 4, !dbg !4738
  %93 = sext i32 %92 to i64, !dbg !4738
  store i64 %93, i64* %20, align 8, !dbg !4741
  br label %115, !dbg !4742

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4743
  %96 = add i32 %95, 7, !dbg !4743
  %97 = and i32 %96, -8, !dbg !4743
  %98 = inttoptr i32 %97 to i8*, !dbg !4743
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4743
  call void @llvm.dbg.value(metadata i8* %99, metadata !4556, metadata !DIExpression()), !dbg !4682
  %100 = inttoptr i32 %97 to i64*, !dbg !4743
  %101 = load i64, i64* %100, align 8, !dbg !4743
  store i64 %101, i64* %20, align 8, !dbg !4744
  br label %115, !dbg !4745

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4746
  %104 = add i32 %103, 7, !dbg !4746
  %105 = and i32 %104, -8, !dbg !4746
  %106 = inttoptr i32 %105 to i8*, !dbg !4746
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4746
  call void @llvm.dbg.value(metadata i8* %107, metadata !4556, metadata !DIExpression()), !dbg !4682
  %108 = inttoptr i32 %105 to i64*, !dbg !4746
  %109 = load i64, i64* %108, align 8, !dbg !4746
  store i64 %109, i64* %20, align 8, !dbg !4747
  br label %115, !dbg !4748

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4749
  call void @llvm.dbg.value(metadata i8* %111, metadata !4556, metadata !DIExpression()), !dbg !4682
  %112 = bitcast i8* %77 to i32*, !dbg !4749
  %113 = load i32, i32* %112, align 4, !dbg !4749
  %114 = sext i32 %113 to i64, !dbg !4750
  store i64 %114, i64* %20, align 8, !dbg !4751
  br label %115, !dbg !4752

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !4753
  call void @llvm.dbg.value(metadata i8* %117, metadata !4556, metadata !DIExpression()), !dbg !4682
  %118 = trunc i24 %79 to i4, !dbg !4754
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !4754

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !4755
  %121 = ashr exact i64 %120, 56, !dbg !4755
  store i64 %121, i64* %20, align 8, !dbg !4758
  br label %177, !dbg !4759

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !4760
  %124 = ashr exact i64 %123, 48, !dbg !4760
  store i64 %124, i64* %20, align 8, !dbg !4763
  br label %177, !dbg !4764

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !4765

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4768
  call void @llvm.dbg.value(metadata i8* %127, metadata !4556, metadata !DIExpression()), !dbg !4682
  %128 = bitcast i8* %77 to i32*, !dbg !4768
  %129 = load i32, i32* %128, align 4, !dbg !4768
  %130 = zext i32 %129 to i64, !dbg !4768
  store i64 %130, i64* %20, align 8, !dbg !4770
  br label %157, !dbg !4771

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4772
  call void @llvm.dbg.value(metadata i8* %132, metadata !4556, metadata !DIExpression()), !dbg !4682
  call void @llvm.dbg.value(metadata i8* %132, metadata !4556, metadata !DIExpression()), !dbg !4682
  %133 = bitcast i8* %77 to i32*, !dbg !4772
  %134 = load i32, i32* %133, align 4, !dbg !4772
  %135 = zext i32 %134 to i64, !dbg !4772
  store i64 %135, i64* %20, align 8, !dbg !4772
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !4774
  %138 = add i32 %137, 7, !dbg !4774
  %139 = and i32 %138, -8, !dbg !4774
  %140 = inttoptr i32 %139 to i8*, !dbg !4774
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !4774
  call void @llvm.dbg.value(metadata i8* %141, metadata !4556, metadata !DIExpression()), !dbg !4682
  %142 = inttoptr i32 %139 to i64*, !dbg !4774
  %143 = load i64, i64* %142, align 8, !dbg !4774
  store i64 %143, i64* %20, align 8, !dbg !4775
  br label %157, !dbg !4776

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !4777
  %146 = add i32 %145, 7, !dbg !4777
  %147 = and i32 %146, -8, !dbg !4777
  %148 = inttoptr i32 %147 to i8*, !dbg !4777
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !4777
  call void @llvm.dbg.value(metadata i8* %149, metadata !4556, metadata !DIExpression()), !dbg !4682
  %150 = inttoptr i32 %147 to i64*, !dbg !4777
  %151 = load i64, i64* %150, align 8, !dbg !4777
  store i64 %151, i64* %20, align 8, !dbg !4778
  br label %157, !dbg !4779

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4780
  call void @llvm.dbg.value(metadata i8* %153, metadata !4556, metadata !DIExpression()), !dbg !4682
  %154 = bitcast i8* %77 to i32*, !dbg !4780
  %155 = load i32, i32* %154, align 4, !dbg !4780
  %156 = zext i32 %155 to i64, !dbg !4781
  store i64 %156, i64* %20, align 8, !dbg !4782
  br label %157, !dbg !4783

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !4784
  call void @llvm.dbg.value(metadata i8* %159, metadata !4556, metadata !DIExpression()), !dbg !4682
  %160 = trunc i24 %79 to i4, !dbg !4785
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !4785

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !4786
  store i64 %162, i64* %20, align 8, !dbg !4789
  br label %177, !dbg !4790

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !4791
  store i64 %164, i64* %20, align 8, !dbg !4794
  br label %177, !dbg !4795

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !4796
  %167 = add i32 %166, 7, !dbg !4796
  %168 = and i32 %167, -8, !dbg !4796
  %169 = inttoptr i32 %168 to i8*, !dbg !4796
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !4796
  call void @llvm.dbg.value(metadata i8* %170, metadata !4556, metadata !DIExpression()), !dbg !4682
  call void @llvm.dbg.value(metadata i8* %170, metadata !4556, metadata !DIExpression()), !dbg !4682
  %171 = inttoptr i32 %168 to double*, !dbg !4796
  %172 = load double, double* %171, align 8, !dbg !4796
  store double %172, double* %19, align 8, !dbg !4796
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4800
  call void @llvm.dbg.value(metadata i8* %174, metadata !4556, metadata !DIExpression()), !dbg !4682
  %175 = bitcast i8* %77 to i8**, !dbg !4800
  %176 = load i8*, i8** %175, align 4, !dbg !4800
  store i8* %176, i8** %18, align 8, !dbg !4803
  br label %177, !dbg !4804

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4696
  call void @llvm.dbg.value(metadata i8* %178, metadata !4556, metadata !DIExpression()), !dbg !4682
  %179 = and i24 %75, 3, !dbg !4805
  %180 = icmp eq i24 %179, 0, !dbg !4805
  br i1 %180, label %185, label %181, !dbg !4805

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #25, !dbg !4806
  call void @llvm.dbg.value(metadata i32 %182, metadata !4631, metadata !DIExpression()), !dbg !4807
  %183 = icmp slt i32 %182, 0, !dbg !4808
  %184 = add i32 %182, %29, !dbg !4806
  call void @llvm.dbg.value(metadata i32 undef, metadata !4562, metadata !DIExpression()), !dbg !4682
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !4810
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !4811

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #24, !dbg !4812
  call void @llvm.dbg.value(metadata i32 %188, metadata !4635, metadata !DIExpression()), !dbg !4813
  %189 = icmp slt i32 %188, 0, !dbg !4814
  %190 = add i32 %29, 1, !dbg !4812
  call void @llvm.dbg.value(metadata i32 undef, metadata !4562, metadata !DIExpression()), !dbg !4682
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !4816
  call void @llvm.dbg.value(metadata i8* %192, metadata !4623, metadata !DIExpression()), !dbg !4696
  %193 = icmp sgt i32 %76, -1, !dbg !4817
  br i1 %193, label %194, label %196, !dbg !4819

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #24, !dbg !4820
  call void @llvm.dbg.value(metadata i32 %195, metadata !4638, metadata !DIExpression()), !dbg !4822
  br label %241, !dbg !4823

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #24, !dbg !4824
  call void @llvm.dbg.value(metadata i32 %197, metadata !4638, metadata !DIExpression()), !dbg !4822
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4623, metadata !DIExpression()), !dbg !4696
  %199 = load i64, i64* %20, align 8, !dbg !4826
  %200 = trunc i64 %199 to i8, !dbg !4827
  store i8 %200, i8* %10, align 1, !dbg !4828
  call void @llvm.dbg.value(metadata i8* %23, metadata !4624, metadata !DIExpression()), !dbg !4696
  br label %245, !dbg !4829

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !4830
  %203 = icmp eq i24 %202, 0, !dbg !4830
  %204 = trunc i24 %75 to i8, !dbg !4832
  %205 = shl i8 %204, 1, !dbg !4832
  %206 = and i8 %205, 32, !dbg !4832
  %207 = select i1 %203, i8 %206, i8 43, !dbg !4832
  call void @llvm.dbg.value(metadata i8 %207, metadata !4625, metadata !DIExpression()), !dbg !4696
  %208 = load i64, i64* %20, align 8, !dbg !4833
  call void @llvm.dbg.value(metadata i64 %208, metadata !4563, metadata !DIExpression()), !dbg !4682
  %209 = icmp slt i64 %208, 0, !dbg !4834
  br i1 %209, label %210, label %212, !dbg !4836

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4625, metadata !DIExpression()), !dbg !4696
  %211 = sub nsw i64 0, %208, !dbg !4837
  store i64 %211, i64* %20, align 8, !dbg !4839
  br label %212, !dbg !4840

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4696
  call void @llvm.dbg.value(metadata i8 %213, metadata !4625, metadata !DIExpression()), !dbg !4696
  %214 = load i64, i64* %20, align 8, !dbg !4841
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #25, !dbg !4842
  call void @llvm.dbg.value(metadata i8* %215, metadata !4623, metadata !DIExpression()), !dbg !4696
  br label %216, !dbg !4843

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !4844
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !4845
  call void @llvm.dbg.value(metadata i8* %218, metadata !4623, metadata !DIExpression()), !dbg !4696
  call void @llvm.dbg.value(metadata i8 %217, metadata !4625, metadata !DIExpression()), !dbg !4696
  call void @llvm.dbg.label(metadata !4681), !dbg !4846
  %219 = icmp sgt i32 %76, -1, !dbg !4847
  br i1 %219, label %222, label %220, !dbg !4848

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !4849
  br label %245, !dbg !4848

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !4851
  %224 = sub i32 %22, %223, !dbg !4851
  call void @llvm.dbg.value(metadata i32 %224, metadata !4640, metadata !DIExpression()), !dbg !4852
  %225 = load i24, i24* %15, align 8, !dbg !4853
  %226 = and i24 %225, -65, !dbg !4853
  store i24 %226, i24* %15, align 8, !dbg !4853
  %227 = icmp ugt i32 %76, %224, !dbg !4854
  br i1 %227, label %228, label %245, !dbg !4856

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !4857
  store i32 %229, i32* %16, align 4, !dbg !4859
  br label %245, !dbg !4860

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !4861
  %232 = icmp eq i8* %231, null, !dbg !4863
  br i1 %232, label %245, label %233, !dbg !4864

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !4865
  %235 = zext i32 %234 to i64, !dbg !4865
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #25, !dbg !4867
  call void @llvm.dbg.value(metadata i8* %236, metadata !4623, metadata !DIExpression()), !dbg !4696
  %237 = load i24, i24* %15, align 8, !dbg !4868
  %238 = or i24 %237, 1048576, !dbg !4868
  store i24 %238, i24* %15, align 8, !dbg !4868
  store i8 120, i8* %21, align 1, !dbg !4869
  br label %216, !dbg !4870

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !4871
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #25, !dbg !4874
  br label %363, !dbg !4875

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !4876
  call void @llvm.dbg.value(metadata i32 %242, metadata !4638, metadata !DIExpression()), !dbg !4822
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !4877
  call void @llvm.dbg.value(metadata i32 -1, metadata !4622, metadata !DIExpression()), !dbg !4696
  call void @llvm.dbg.value(metadata i32 %29, metadata !4562, metadata !DIExpression()), !dbg !4682
  call void @llvm.dbg.value(metadata i8* %192, metadata !4623, metadata !DIExpression()), !dbg !4696
  call void @llvm.dbg.value(metadata i8* %243, metadata !4624, metadata !DIExpression()), !dbg !4696
  call void @llvm.dbg.value(metadata i8 0, metadata !4625, metadata !DIExpression()), !dbg !4696
  %244 = icmp eq i8* %192, null, !dbg !4878
  br i1 %244, label %363, label %245, !dbg !4880, !llvm.loop !4692

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !4849
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4643, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4696
  call void @llvm.dbg.value(metadata i32 0, metadata !4644, metadata !DIExpression()), !dbg !4696
  %250 = zext i8 %249 to i32, !dbg !4881
  %251 = icmp eq i8 %249, 0, !dbg !4883
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4643, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4696
  call void @llvm.dbg.value(metadata i32 undef, metadata !4643, metadata !DIExpression()), !dbg !4696
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4643, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4696
  call void @llvm.dbg.value(metadata i32 undef, metadata !4643, metadata !DIExpression()), !dbg !4696
  %252 = icmp sgt i32 %58, 0, !dbg !4884
  br i1 %252, label %253, label %302, !dbg !4885

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !4849
  %255 = icmp eq i24 %254, 0, !dbg !4849
  %256 = ptrtoint i8* %248 to i32, !dbg !4886
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4643, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4696
  %257 = ptrtoint i8* %247 to i32, !dbg !4886
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4643, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4696
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4643, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4696
  %258 = xor i1 %251, true, !dbg !4887
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4643, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4696
  %259 = sext i1 %258 to i32, !dbg !4887
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4643, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4696
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4643, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4696
  %260 = lshr i24 %246, 19, !dbg !4888
  %261 = and i24 %260, 1, !dbg !4888
  %262 = select i1 %255, i24 %261, i24 2, !dbg !4888
  %263 = zext i24 %262 to i32, !dbg !4888
  %264 = add i32 %257, %259, !dbg !4888
  %265 = add i32 %256, %263, !dbg !4888
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4643, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4696
  %266 = and i24 %246, 4194304, !dbg !4889
  %267 = icmp eq i24 %266, 0, !dbg !4889
  %268 = load i32, i32* %16, align 4, !dbg !4891
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4643, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4696
  call void @llvm.dbg.value(metadata i32 undef, metadata !4643, metadata !DIExpression()), !dbg !4696
  %269 = load i32, i32* %17, align 8, !dbg !4892
  %270 = select i1 %267, i32 0, i32 %269, !dbg !4892
  call void @llvm.dbg.value(metadata i32 undef, metadata !4643, metadata !DIExpression()), !dbg !4696
  %271 = add i32 %264, %58, !dbg !4892
  %272 = add i32 %265, %268, !dbg !4892
  %273 = add i32 %272, %270, !dbg !4893
  %274 = sub i32 %271, %273, !dbg !4893
  call void @llvm.dbg.value(metadata i32 %274, metadata !4621, metadata !DIExpression()), !dbg !4696
  %275 = and i24 %246, 4, !dbg !4894
  %276 = icmp eq i24 %275, 0, !dbg !4894
  br i1 %276, label %277, label %302, !dbg !4895

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4645, metadata !DIExpression()), !dbg !4896
  %278 = and i24 %246, 64, !dbg !4897
  %279 = icmp eq i24 %278, 0, !dbg !4897
  %280 = select i1 %279, i1 true, i1 %251, !dbg !4898
  %281 = select i1 %279, i8 %249, i8 0, !dbg !4898
  %282 = select i1 %279, i32 32, i32 48, !dbg !4898
  br i1 %280, label %287, label %283, !dbg !4898

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #24, !dbg !4899
  call void @llvm.dbg.value(metadata i32 %284, metadata !4650, metadata !DIExpression()), !dbg !4900
  %285 = icmp slt i32 %284, 0, !dbg !4901
  %286 = add i32 %29, 1, !dbg !4899
  call void @llvm.dbg.value(metadata i32 undef, metadata !4562, metadata !DIExpression()), !dbg !4682
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4696
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4686
  call void @llvm.dbg.value(metadata i32 %290, metadata !4562, metadata !DIExpression()), !dbg !4682
  call void @llvm.dbg.value(metadata i8 undef, metadata !4645, metadata !DIExpression()), !dbg !4896
  call void @llvm.dbg.value(metadata i8 %288, metadata !4625, metadata !DIExpression()), !dbg !4696
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !4903
  %292 = add i32 %291, -1, !dbg !4903
  br label %293, !dbg !4903

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !4904
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4686
  call void @llvm.dbg.value(metadata i32 %295, metadata !4562, metadata !DIExpression()), !dbg !4682
  call void @llvm.dbg.value(metadata i32 %294, metadata !4621, metadata !DIExpression()), !dbg !4696
  call void @llvm.dbg.value(metadata i32 %294, metadata !4621, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4696
  %296 = icmp sgt i32 %294, 0, !dbg !4905
  br i1 %296, label %297, label %302, !dbg !4903

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !4906
  call void @llvm.dbg.value(metadata i32 %298, metadata !4621, metadata !DIExpression()), !dbg !4696
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #24, !dbg !4907
  call void @llvm.dbg.value(metadata i32 %299, metadata !4656, metadata !DIExpression()), !dbg !4908
  %300 = icmp slt i32 %299, 0, !dbg !4909
  %301 = add i32 %295, 1, !dbg !4907
  call void @llvm.dbg.value(metadata i32 undef, metadata !4562, metadata !DIExpression()), !dbg !4682
  br i1 %300, label %361, label %293, !llvm.loop !4911

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4696
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4696
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4686
  call void @llvm.dbg.value(metadata i32 %305, metadata !4562, metadata !DIExpression()), !dbg !4682
  call void @llvm.dbg.value(metadata i32 %304, metadata !4621, metadata !DIExpression()), !dbg !4696
  call void @llvm.dbg.value(metadata i8 %303, metadata !4625, metadata !DIExpression()), !dbg !4696
  %306 = icmp eq i8 %303, 0, !dbg !4913
  br i1 %306, label %312, label %307, !dbg !4914

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !4915
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #24, !dbg !4916
  call void @llvm.dbg.value(metadata i32 %309, metadata !4659, metadata !DIExpression()), !dbg !4917
  %310 = icmp slt i32 %309, 0, !dbg !4918
  %311 = add i32 %305, 1, !dbg !4916
  call void @llvm.dbg.value(metadata i32 undef, metadata !4562, metadata !DIExpression()), !dbg !4682
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4686
  call void @llvm.dbg.value(metadata i32 %313, metadata !4562, metadata !DIExpression()), !dbg !4682
  %314 = lshr i24 %246, 20, !dbg !4920
  %315 = lshr i24 %246, 19, !dbg !4921
  %316 = or i24 %314, %315, !dbg !4922
  %317 = and i24 %316, 1, !dbg !4922
  %318 = icmp eq i24 %317, 0, !dbg !4922
  br i1 %318, label %323, label %319, !dbg !4923

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #24, !dbg !4924
  call void @llvm.dbg.value(metadata i32 %320, metadata !4663, metadata !DIExpression()), !dbg !4925
  %321 = icmp slt i32 %320, 0, !dbg !4926
  %322 = add i32 %313, 1, !dbg !4924
  call void @llvm.dbg.value(metadata i32 undef, metadata !4562, metadata !DIExpression()), !dbg !4682
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4686
  call void @llvm.dbg.value(metadata i32 %324, metadata !4562, metadata !DIExpression()), !dbg !4682
  %325 = and i24 %246, 1048576, !dbg !4928
  %326 = icmp eq i24 %325, 0, !dbg !4928
  br i1 %326, label %333, label %327, !dbg !4929

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !4930
  %329 = zext i8 %328 to i32, !dbg !4930
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #24, !dbg !4930
  call void @llvm.dbg.value(metadata i32 %330, metadata !4669, metadata !DIExpression()), !dbg !4931
  %331 = icmp slt i32 %330, 0, !dbg !4932
  %332 = add i32 %324, 1, !dbg !4930
  call void @llvm.dbg.value(metadata i32 undef, metadata !4562, metadata !DIExpression()), !dbg !4682
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4686
  call void @llvm.dbg.value(metadata i32 %334, metadata !4562, metadata !DIExpression()), !dbg !4682
  %335 = load i32, i32* %16, align 4, !dbg !4934
  call void @llvm.dbg.value(metadata i32 %335, metadata !4644, metadata !DIExpression()), !dbg !4696
  br label %336, !dbg !4935

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !4936
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4686
  call void @llvm.dbg.value(metadata i32 %338, metadata !4562, metadata !DIExpression()), !dbg !4682
  call void @llvm.dbg.value(metadata i32 %337, metadata !4644, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4696
  %339 = icmp sgt i32 %337, 0, !dbg !4937
  br i1 %339, label %340, label %345, !dbg !4935

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !4938
  call void @llvm.dbg.value(metadata i32 %341, metadata !4644, metadata !DIExpression()), !dbg !4696
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #24, !dbg !4939
  call void @llvm.dbg.value(metadata i32 %342, metadata !4673, metadata !DIExpression()), !dbg !4940
  %343 = icmp slt i32 %342, 0, !dbg !4941
  %344 = add i32 %338, 1, !dbg !4939
  call void @llvm.dbg.value(metadata i32 undef, metadata !4562, metadata !DIExpression()), !dbg !4682
  br i1 %343, label %361, label %336, !llvm.loop !4943

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #25, !dbg !4945
  call void @llvm.dbg.value(metadata i32 %346, metadata !4676, metadata !DIExpression()), !dbg !4946
  %347 = icmp slt i32 %346, 0, !dbg !4947
  call void @llvm.dbg.value(metadata i32 undef, metadata !4562, metadata !DIExpression()), !dbg !4682
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !4945
  call void @llvm.dbg.value(metadata i32 %349, metadata !4562, metadata !DIExpression()), !dbg !4682
  call void @llvm.dbg.value(metadata i32 %304, metadata !4621, metadata !DIExpression()), !dbg !4696
  %350 = icmp sgt i32 %304, 0, !dbg !4949
  br i1 %350, label %351, label %363, !dbg !4950

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !4950
  %353 = add i32 %352, %338, !dbg !4950
  br label %354, !dbg !4950

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4562, metadata !DIExpression()), !dbg !4682
  call void @llvm.dbg.value(metadata i32 %355, metadata !4621, metadata !DIExpression()), !dbg !4696
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #24, !dbg !4951
  call void @llvm.dbg.value(metadata i32 %356, metadata !4678, metadata !DIExpression()), !dbg !4952
  %357 = icmp slt i32 %356, 0, !dbg !4953
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !4955
  call void @llvm.dbg.value(metadata i32 undef, metadata !4562, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4682
  call void @llvm.dbg.value(metadata i32 %359, metadata !4621, metadata !DIExpression()), !dbg !4696
  %360 = icmp sgt i32 %355, 1, !dbg !4949
  br i1 %360, label %354, label %363, !dbg !4950, !llvm.loop !4956

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4562, metadata !DIExpression()), !dbg !4682
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4693
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4686
  call void @llvm.dbg.value(metadata i32 %364, metadata !4562, metadata !DIExpression()), !dbg !4682
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4693
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4682
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #23, !dbg !4958
  ret i32 %366, !dbg !4958
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !4959 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4963, metadata !DIExpression()), !dbg !4965
  call void @llvm.dbg.value(metadata i8* %1, metadata !4964, metadata !DIExpression()), !dbg !4965
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !4966
  store i24 0, i24* %3, align 4, !dbg !4966
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !4966
  store i8 0, i8* %4, align 1, !dbg !4966
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !4966
  store i32 0, i32* %5, align 4, !dbg !4966
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !4966
  store i32 0, i32* %6, align 4, !dbg !4966
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4967
  call void @llvm.dbg.value(metadata i8* %7, metadata !4964, metadata !DIExpression()), !dbg !4965
  %8 = load i8, i8* %7, align 1, !dbg !4968
  %9 = icmp eq i8 %8, 37, !dbg !4970
  br i1 %9, label %10, label %12, !dbg !4971

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4972
  call void @llvm.dbg.value(metadata i8* %11, metadata !4964, metadata !DIExpression()), !dbg !4965
  store i8 37, i8* %4, align 1, !dbg !4974
  br label %18, !dbg !4975

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #25, !dbg !4976
  call void @llvm.dbg.value(metadata i8* %13, metadata !4964, metadata !DIExpression()), !dbg !4965
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #25, !dbg !4977
  call void @llvm.dbg.value(metadata i8* %14, metadata !4964, metadata !DIExpression()), !dbg !4965
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #25, !dbg !4978
  call void @llvm.dbg.value(metadata i8* %15, metadata !4964, metadata !DIExpression()), !dbg !4965
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #25, !dbg !4979
  call void @llvm.dbg.value(metadata i8* %16, metadata !4964, metadata !DIExpression()), !dbg !4965
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #25, !dbg !4980
  call void @llvm.dbg.value(metadata i8* %17, metadata !4964, metadata !DIExpression()), !dbg !4965
  br label %18, !dbg !4981

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !4965
  ret i8* %19, !dbg !4982
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !4983 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4987, metadata !DIExpression()), !dbg !4994
  call void @llvm.dbg.value(metadata i8* %1, metadata !4988, metadata !DIExpression()), !dbg !4994
  call void @llvm.dbg.value(metadata i8* %2, metadata !4989, metadata !DIExpression()), !dbg !4994
  call void @llvm.dbg.value(metadata i8* %3, metadata !4990, metadata !DIExpression()), !dbg !4994
  call void @llvm.dbg.value(metadata i32 0, metadata !4991, metadata !DIExpression()), !dbg !4994
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !4995

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !4996
  call void @llvm.dbg.value(metadata i32 %9, metadata !4991, metadata !DIExpression()), !dbg !4994
  call void @llvm.dbg.value(metadata i8* %8, metadata !4989, metadata !DIExpression()), !dbg !4994
  %10 = icmp ult i8* %8, %3, !dbg !4997
  br i1 %10, label %11, label %13, !dbg !4998

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !4999
  br label %17, !dbg !4998

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !5000

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !5001
  %16 = icmp eq i8 %15, 0, !dbg !5000
  br i1 %16, label %24, label %17, !dbg !4995

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !4999
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5002
  call void @llvm.dbg.value(metadata i8* %19, metadata !4989, metadata !DIExpression()), !dbg !4994
  %20 = zext i8 %18 to i32, !dbg !5003
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #24, !dbg !5004
  call void @llvm.dbg.value(metadata i32 %21, metadata !4992, metadata !DIExpression()), !dbg !5005
  %22 = icmp slt i32 %21, 0, !dbg !5006
  %23 = add i32 %9, 1, !dbg !5008
  call void @llvm.dbg.value(metadata i32 undef, metadata !4991, metadata !DIExpression()), !dbg !4994
  br i1 %22, label %24, label %7, !llvm.loop !5009

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !4994
  ret i32 %25, !dbg !5011
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #14 !dbg !5012 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !5016, metadata !DIExpression()), !dbg !5026
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !5017, metadata !DIExpression()), !dbg !5026
  call void @llvm.dbg.value(metadata i8* %2, metadata !5018, metadata !DIExpression()), !dbg !5026
  call void @llvm.dbg.value(metadata i8* %3, metadata !5019, metadata !DIExpression()), !dbg !5026
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !5027
  %6 = load i8, i8* %5, align 1, !dbg !5027
  %7 = zext i8 %6 to i32, !dbg !5028
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #25, !dbg !5029
  %9 = icmp eq i32 %8, 0, !dbg !5029
  call void @llvm.dbg.value(metadata i1 %9, metadata !5020, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5026
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #25, !dbg !5030
  call void @llvm.dbg.value(metadata i32 %10, metadata !5021, metadata !DIExpression()), !dbg !5026
  %11 = ptrtoint i8* %3 to i32, !dbg !5031
  %12 = ptrtoint i8* %2 to i32, !dbg !5031
  %13 = sub i32 %11, %12, !dbg !5031
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !5032
  call void @llvm.dbg.value(metadata i8* %14, metadata !5023, metadata !DIExpression()), !dbg !5026
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !5033

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !5026
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !5016, metadata !DIExpression()), !dbg !5026
  call void @llvm.dbg.value(metadata i8* %18, metadata !5023, metadata !DIExpression()), !dbg !5026
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !5034
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !5035
  call void @llvm.dbg.value(metadata i32 %25, metadata !5024, metadata !DIExpression()), !dbg !5036
  %26 = icmp ult i32 %25, 10, !dbg !5037
  %27 = select i1 %26, i32 48, i32 %16, !dbg !5038
  %28 = add i32 %27, %25, !dbg !5036
  %29 = trunc i32 %28 to i8, !dbg !5038
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !5039
  call void @llvm.dbg.value(metadata i8* %30, metadata !5023, metadata !DIExpression()), !dbg !5026
  store i8 %29, i8* %30, align 1, !dbg !5040
  call void @llvm.dbg.value(metadata i64 %22, metadata !5016, metadata !DIExpression()), !dbg !5026
  %31 = icmp uge i64 %19, %15, !dbg !5041
  %32 = icmp ugt i8* %30, %2, !dbg !5042
  %33 = and i1 %31, %32, !dbg !5042
  br i1 %33, label %17, label %34, !dbg !5043, !llvm.loop !5044

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !5046
  %36 = load i24, i24* %35, align 4, !dbg !5046
  %37 = and i24 %36, 32, !dbg !5046
  %38 = icmp eq i24 %37, 0, !dbg !5046
  br i1 %38, label %44, label %39, !dbg !5048

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !5049

40:                                               ; preds = %39
  br label %41, !dbg !5051

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !5055
  store i24 %43, i24* %35, align 4, !dbg !5055
  br label %44, !dbg !5056

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !5056
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #11 !dbg !5057 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5063, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i8* %1, metadata !5064, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i32 %2, metadata !5065, metadata !DIExpression()), !dbg !5066
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5067
  %5 = load i24, i24* %4, align 4, !dbg !5067
  %6 = lshr i24 %5, 11, !dbg !5067
  %7 = and i24 %6, 15, !dbg !5067
  %8 = zext i24 %7 to i32, !dbg !5067
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !5068

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !5069
  store i32 %2, i32* %10, align 4, !dbg !5071
  br label %28, !dbg !5072

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !5073
  store i8 %12, i8* %1, align 1, !dbg !5074
  br label %28, !dbg !5075

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !5076
  %15 = bitcast i8* %1 to i16*, !dbg !5077
  store i16 %14, i16* %15, align 2, !dbg !5078
  br label %28, !dbg !5079

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !5080
  store i32 %2, i32* %17, align 4, !dbg !5081
  br label %28, !dbg !5082

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !5083
  %20 = bitcast i8* %1 to i64*, !dbg !5084
  store i64 %19, i64* %20, align 8, !dbg !5085
  br label %28, !dbg !5086

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !5087
  %23 = bitcast i8* %1 to i64*, !dbg !5088
  store i64 %22, i64* %23, align 8, !dbg !5089
  br label %28, !dbg !5090

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !5091
  store i32 %2, i32* %25, align 4, !dbg !5092
  br label %28, !dbg !5093

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !5094
  store i32 %2, i32* %27, align 4, !dbg !5095
  br label %28, !dbg !5096

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !5097
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #6 !dbg !5098 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5101, metadata !DIExpression()), !dbg !5102
  %2 = add i32 %0, -65, !dbg !5103
  %3 = icmp ult i32 %2, 26, !dbg !5104
  %4 = zext i1 %3 to i32, !dbg !5104
  ret i32 %4, !dbg !5105
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #6 !dbg !5106 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5110, metadata !DIExpression()), !dbg !5111
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !5112

2:                                                ; preds = %1
  br label %4, !dbg !5113

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5115

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5116
  ret i32 %5, !dbg !5117
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #14 !dbg !5118 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5120, metadata !DIExpression()), !dbg !5123
  call void @llvm.dbg.value(metadata i8* %1, metadata !5121, metadata !DIExpression()), !dbg !5123
  call void @llvm.dbg.value(metadata i8 1, metadata !5122, metadata !DIExpression()), !dbg !5123
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5124

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5122, metadata !DIExpression()), !dbg !5123
  call void @llvm.dbg.value(metadata i8* %5, metadata !5121, metadata !DIExpression()), !dbg !5123
  %6 = load i8, i8* %5, align 1, !dbg !5125
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5127

7:                                                ; preds = %4
  br label %11, !dbg !5128

8:                                                ; preds = %4
  br label %11, !dbg !5130

9:                                                ; preds = %4
  br label %11, !dbg !5131

10:                                               ; preds = %4
  br label %11, !dbg !5132

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5133
  %14 = or i24 %13, %12, !dbg !5133
  store i24 %14, i24* %3, align 4, !dbg !5133
  call void @llvm.dbg.value(metadata i8 poison, metadata !5122, metadata !DIExpression()), !dbg !5123
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5121, metadata !DIExpression()), !dbg !5123
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5122, metadata !DIExpression()), !dbg !5123
  call void @llvm.dbg.value(metadata i8* %15, metadata !5121, metadata !DIExpression()), !dbg !5123
  %17 = load i24, i24* %3, align 4, !dbg !5134
  %18 = and i24 %17, 68, !dbg !5136
  %19 = icmp eq i24 %18, 68, !dbg !5136
  br i1 %19, label %20, label %22, !dbg !5136

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5137
  store i24 %21, i24* %3, align 4, !dbg !5137
  br label %22, !dbg !5139

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5140
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5141 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5143, metadata !DIExpression()), !dbg !5147
  call void @llvm.dbg.value(metadata i8* %1, metadata !5144, metadata !DIExpression()), !dbg !5147
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5148
  %5 = load i24, i24* %4, align 4, !dbg !5149
  %6 = or i24 %5, 128, !dbg !5149
  store i24 %6, i24* %4, align 4, !dbg !5149
  call void @llvm.dbg.value(metadata i8* %1, metadata !5144, metadata !DIExpression()), !dbg !5147
  %7 = load i8, i8* %1, align 1, !dbg !5150
  %8 = icmp eq i8 %7, 42, !dbg !5152
  br i1 %8, label %9, label %12, !dbg !5153

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5154
  store i24 %10, i24* %4, align 4, !dbg !5154
  call void @llvm.dbg.value(metadata i8* %1, metadata !5144, metadata !DIExpression()), !dbg !5147
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5156
  call void @llvm.dbg.value(metadata i8* %11, metadata !5144, metadata !DIExpression()), !dbg !5147
  store i8* %11, i8** %3, align 4, !dbg !5156
  br label %29, !dbg !5157

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5145, metadata !DIExpression()), !dbg !5147
  call void @llvm.dbg.value(metadata i8** %3, metadata !5144, metadata !DIExpression(DW_OP_deref)), !dbg !5147
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #25, !dbg !5158
  call void @llvm.dbg.value(metadata i32 %13, metadata !5146, metadata !DIExpression()), !dbg !5147
  %14 = load i8*, i8** %3, align 4, !dbg !5159
  call void @llvm.dbg.value(metadata i8* %14, metadata !5144, metadata !DIExpression()), !dbg !5147
  %15 = icmp eq i8* %14, %1, !dbg !5161
  br i1 %15, label %29, label %16, !dbg !5162

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5163
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5165
  store i32 %13, i32* %18, align 4, !dbg !5166
  %19 = lshr i32 %13, 31, !dbg !5167
  %20 = lshr i24 %17, 1, !dbg !5168
  %21 = and i24 %20, 1, !dbg !5168
  %22 = zext i24 %21 to i32, !dbg !5168
  %23 = or i32 %19, %22, !dbg !5168
  %24 = trunc i32 %23 to i24, !dbg !5168
  %25 = shl nuw nsw i24 %24, 1, !dbg !5168
  %26 = and i24 %17, -131, !dbg !5168
  %27 = or i24 %26, 128, !dbg !5168
  %28 = or i24 %25, %27, !dbg !5168
  store i24 %28, i24* %4, align 4, !dbg !5168
  br label %29, !dbg !5169

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5147
  ret i8* %30, !dbg !5170
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5171 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5173, metadata !DIExpression()), !dbg !5176
  call void @llvm.dbg.value(metadata i8* %1, metadata !5174, metadata !DIExpression()), !dbg !5176
  %4 = load i8, i8* %1, align 1, !dbg !5177
  %5 = icmp eq i8 %4, 46, !dbg !5178
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5179
  %7 = load i24, i24* %6, align 4, !dbg !5180
  %8 = select i1 %5, i24 512, i24 0, !dbg !5180
  %9 = and i24 %7, -513, !dbg !5180
  %10 = or i24 %9, %8, !dbg !5180
  store i24 %10, i24* %6, align 4, !dbg !5180
  br i1 %5, label %11, label %32, !dbg !5181

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5174, metadata !DIExpression()), !dbg !5176
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5182
  call void @llvm.dbg.value(metadata i8* %12, metadata !5174, metadata !DIExpression()), !dbg !5176
  store i8* %12, i8** %3, align 4, !dbg !5182
  %13 = load i8, i8* %12, align 1, !dbg !5183
  %14 = icmp eq i8 %13, 42, !dbg !5185
  br i1 %14, label %15, label %18, !dbg !5186

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5187
  store i24 %16, i24* %6, align 4, !dbg !5187
  call void @llvm.dbg.value(metadata i8* %12, metadata !5174, metadata !DIExpression()), !dbg !5176
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5189
  call void @llvm.dbg.value(metadata i8* %17, metadata !5174, metadata !DIExpression()), !dbg !5176
  store i8* %17, i8** %3, align 4, !dbg !5189
  br label %32, !dbg !5190

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5174, metadata !DIExpression(DW_OP_deref)), !dbg !5176
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #25, !dbg !5191
  call void @llvm.dbg.value(metadata i32 %19, metadata !5175, metadata !DIExpression()), !dbg !5176
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5192
  store i32 %19, i32* %20, align 4, !dbg !5193
  %21 = lshr i32 %19, 31, !dbg !5194
  %22 = load i24, i24* %6, align 4, !dbg !5195
  %23 = lshr i24 %22, 1, !dbg !5195
  %24 = and i24 %23, 1, !dbg !5195
  %25 = zext i24 %24 to i32, !dbg !5195
  %26 = or i32 %21, %25, !dbg !5195
  %27 = trunc i32 %26 to i24, !dbg !5195
  %28 = shl nuw nsw i24 %27, 1, !dbg !5195
  %29 = and i24 %22, -3, !dbg !5195
  %30 = or i24 %28, %29, !dbg !5195
  store i24 %30, i24* %6, align 4, !dbg !5195
  %31 = load i8*, i8** %3, align 4, !dbg !5196
  call void @llvm.dbg.value(metadata i8* %31, metadata !5174, metadata !DIExpression()), !dbg !5176
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5176
  ret i8* %33, !dbg !5197
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #11 !dbg !5198 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5200, metadata !DIExpression()), !dbg !5202
  call void @llvm.dbg.value(metadata i8* %1, metadata !5201, metadata !DIExpression()), !dbg !5202
  %3 = load i8, i8* %1, align 1, !dbg !5203
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5204

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5205
  call void @llvm.dbg.value(metadata i8* %5, metadata !5201, metadata !DIExpression()), !dbg !5202
  %6 = load i8, i8* %5, align 1, !dbg !5208
  %7 = icmp eq i8 %6, 104, !dbg !5209
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5210
  %9 = load i24, i24* %8, align 4, !dbg !5210
  %10 = and i24 %9, -30721, !dbg !5210
  br i1 %7, label %11, label %14, !dbg !5211

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5212
  store i24 %12, i24* %8, align 4, !dbg !5212
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5214
  call void @llvm.dbg.value(metadata i8* %13, metadata !5201, metadata !DIExpression()), !dbg !5202
  br label %56, !dbg !5215

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5216
  store i24 %15, i24* %8, align 4, !dbg !5216
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5218
  call void @llvm.dbg.value(metadata i8* %17, metadata !5201, metadata !DIExpression()), !dbg !5202
  %18 = load i8, i8* %17, align 1, !dbg !5220
  %19 = icmp eq i8 %18, 108, !dbg !5221
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5222
  %21 = load i24, i24* %20, align 4, !dbg !5222
  %22 = and i24 %21, -30721, !dbg !5222
  br i1 %19, label %23, label %26, !dbg !5223

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5224
  store i24 %24, i24* %20, align 4, !dbg !5224
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5226
  call void @llvm.dbg.value(metadata i8* %25, metadata !5201, metadata !DIExpression()), !dbg !5202
  br label %56, !dbg !5227

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5228
  store i24 %27, i24* %20, align 4, !dbg !5228
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5230
  %30 = load i24, i24* %29, align 4, !dbg !5231
  %31 = and i24 %30, -30721, !dbg !5231
  %32 = or i24 %31, 10240, !dbg !5231
  store i24 %32, i24* %29, align 4, !dbg !5231
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5232
  call void @llvm.dbg.value(metadata i8* %33, metadata !5201, metadata !DIExpression()), !dbg !5202
  br label %56, !dbg !5233

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5234
  %36 = load i24, i24* %35, align 4, !dbg !5235
  %37 = and i24 %36, -30721, !dbg !5235
  %38 = or i24 %37, 12288, !dbg !5235
  store i24 %38, i24* %35, align 4, !dbg !5235
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5236
  call void @llvm.dbg.value(metadata i8* %39, metadata !5201, metadata !DIExpression()), !dbg !5202
  br label %56, !dbg !5237

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5238
  %42 = load i24, i24* %41, align 4, !dbg !5239
  %43 = and i24 %42, -30721, !dbg !5239
  %44 = or i24 %43, 14336, !dbg !5239
  store i24 %44, i24* %41, align 4, !dbg !5239
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5240
  call void @llvm.dbg.value(metadata i8* %45, metadata !5201, metadata !DIExpression()), !dbg !5202
  br label %56, !dbg !5241

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5242
  %48 = load i24, i24* %47, align 4, !dbg !5243
  %49 = and i24 %48, -30723, !dbg !5243
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5244
  call void @llvm.dbg.value(metadata i8* %50, metadata !5201, metadata !DIExpression()), !dbg !5202
  %51 = or i24 %49, 16386, !dbg !5245
  store i24 %51, i24* %47, align 4, !dbg !5245
  br label %56, !dbg !5246

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5247
  %54 = load i24, i24* %53, align 4, !dbg !5248
  %55 = and i24 %54, -30721, !dbg !5248
  store i24 %55, i24* %53, align 4, !dbg !5248
  br label %56, !dbg !5249

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5201, metadata !DIExpression()), !dbg !5202
  ret i8* %57, !dbg !5250
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #11 !dbg !5251 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5253, metadata !DIExpression()), !dbg !5258
  call void @llvm.dbg.value(metadata i8* %1, metadata !5254, metadata !DIExpression()), !dbg !5258
  call void @llvm.dbg.value(metadata i8 0, metadata !5255, metadata !DIExpression()), !dbg !5258
  call void @llvm.dbg.value(metadata i8* %1, metadata !5254, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5258
  %3 = load i8, i8* %1, align 1, !dbg !5259
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5260
  store i8 %3, i8* %4, align 1, !dbg !5261
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5262

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5263

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5264
  %9 = load i24, i24* %8, align 4, !dbg !5264
  %10 = and i24 %9, -458753, !dbg !5264
  %11 = or i24 %10, %7, !dbg !5264
  call void @llvm.dbg.label(metadata !5256), !dbg !5265
  %12 = and i24 %9, 30720, !dbg !5266
  %13 = icmp eq i24 %12, 16384, !dbg !5266
  %14 = zext i1 %13 to i24, !dbg !5268
  %15 = or i24 %11, %14, !dbg !5268
  %16 = icmp eq i8 %3, 99, !dbg !5269
  br i1 %16, label %17, label %43, !dbg !5271

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5272
  %19 = icmp ne i24 %18, 0, !dbg !5272
  call void @llvm.dbg.value(metadata i1 %19, metadata !5255, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5258
  br label %43, !dbg !5274

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5275
  %22 = load i24, i24* %21, align 4, !dbg !5276
  %23 = and i24 %22, -458753, !dbg !5276
  %24 = or i24 %23, 262144, !dbg !5276
  call void @llvm.dbg.value(metadata i8 1, metadata !5255, metadata !DIExpression()), !dbg !5258
  br label %43, !dbg !5277

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5280
  %27 = load i24, i24* %26, align 4, !dbg !5281
  %28 = and i24 %27, -458753, !dbg !5281
  %29 = or i24 %28, 196608, !dbg !5281
  %30 = and i24 %27, 30720, !dbg !5282
  %31 = icmp eq i24 %30, 16384, !dbg !5282
  br label %43, !dbg !5284

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5285
  %34 = load i24, i24* %33, align 4, !dbg !5286
  %35 = and i24 %34, -458753, !dbg !5286
  %36 = or i24 %35, 196608, !dbg !5286
  %37 = and i24 %34, 30720, !dbg !5287
  %38 = icmp ne i24 %37, 0, !dbg !5287
  br label %43, !dbg !5289

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5290
  %41 = load i24, i24* %40, align 4, !dbg !5291
  %42 = or i24 %41, 1, !dbg !5291
  br label %43, !dbg !5292

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5293
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5294
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5295
  call void @llvm.dbg.value(metadata i8* %48, metadata !5254, metadata !DIExpression()), !dbg !5258
  call void @llvm.dbg.value(metadata i8 poison, metadata !5255, metadata !DIExpression()), !dbg !5258
  %49 = lshr i24 %44, 1, !dbg !5293
  %50 = and i24 %49, 1, !dbg !5293
  %51 = zext i24 %50 to i32, !dbg !5293
  %52 = or i32 %51, %47, !dbg !5293
  %53 = trunc i32 %52 to i24, !dbg !5293
  %54 = shl nuw nsw i24 %53, 1, !dbg !5293
  %55 = and i24 %44, -3, !dbg !5293
  %56 = or i24 %54, %55, !dbg !5293
  store i24 %56, i24* %46, align 4, !dbg !5293
  ret i8* %48, !dbg !5296
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #14 !dbg !5297 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5301, metadata !DIExpression()), !dbg !5304
  %2 = load i8*, i8** %0, align 4, !dbg !5305
  call void @llvm.dbg.value(metadata i8* %2, metadata !5302, metadata !DIExpression()), !dbg !5304
  call void @llvm.dbg.value(metadata i32 0, metadata !5303, metadata !DIExpression()), !dbg !5304
  %3 = load i8, i8* %2, align 1, !dbg !5306
  %4 = zext i8 %3 to i32, !dbg !5307
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #25, !dbg !5308
  %6 = icmp eq i32 %5, 0, !dbg !5309
  br i1 %6, label %19, label %7, !dbg !5309

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5303, metadata !DIExpression()), !dbg !5304
  call void @llvm.dbg.value(metadata i8* %10, metadata !5302, metadata !DIExpression()), !dbg !5304
  %11 = mul i32 %9, 10, !dbg !5310
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5312
  call void @llvm.dbg.value(metadata i8* %12, metadata !5302, metadata !DIExpression()), !dbg !5304
  %13 = add i32 %11, -48, !dbg !5313
  %14 = add i32 %13, %8, !dbg !5314
  call void @llvm.dbg.value(metadata i32 %14, metadata !5303, metadata !DIExpression()), !dbg !5304
  %15 = load i8, i8* %12, align 1, !dbg !5306
  %16 = zext i8 %15 to i32, !dbg !5307
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #25, !dbg !5308
  %18 = icmp eq i32 %17, 0, !dbg !5309
  br i1 %18, label %19, label %7, !dbg !5309, !llvm.loop !5315

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5304
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5304
  store i8* %20, i8** %0, align 4, !dbg !5317
  ret i32 %21, !dbg !5318
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #6 !dbg !5319 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5321, metadata !DIExpression()), !dbg !5322
  %2 = add i32 %0, -48, !dbg !5323
  %3 = icmp ult i32 %2, 10, !dbg !5324
  %4 = zext i1 %3 to i32, !dbg !5324
  ret i32 %4, !dbg !5325
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @assert_post_action(i8* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !5326 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5331, metadata !DIExpression()), !dbg !5333
  call void @llvm.dbg.value(metadata i32 %1, metadata !5332, metadata !DIExpression()), !dbg !5333
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #23, !dbg !5334, !srcloc !5336
  ret void, !dbg !5337
}

; Function Attrs: noinline nounwind optsize
define dso_local void @assert_print(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5338 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5340, metadata !DIExpression()), !dbg !5348
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !5349
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5349
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !5341, metadata !DIExpression()), !dbg !5350
  call void @llvm.va_start(i8* nonnull %3), !dbg !5351
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !5352
  %5 = load i32, i32* %4, align 4, !dbg !5352
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5352
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #24, !dbg !5352
  call void @llvm.va_end(i8* nonnull %3), !dbg !5353
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5354
  ret void, !dbg !5354
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5355 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #23, !dbg !5357, !srcloc !5358
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #23, !dbg !5359, !srcloc !5360
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #23, !dbg !5361, !srcloc !5362
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #23, !dbg !5363, !srcloc !5364
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #23, !dbg !5365, !srcloc !5366
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,85\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #23, !dbg !5367, !srcloc !5368
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #23, !dbg !5369, !srcloc !5370
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #23, !dbg !5371, !srcloc !5372
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,512\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #23, !dbg !5373, !srcloc !5374
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #23, !dbg !5375, !srcloc !5376
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #23, !dbg !5377, !srcloc !5378
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #23, !dbg !5379, !srcloc !5380
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #23, !dbg !5381, !srcloc !5382
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #23, !dbg !5383, !srcloc !5384
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #23, !dbg !5385, !srcloc !5386
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #23, !dbg !5387, !srcloc !5388
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #23, !dbg !5389, !srcloc !5390
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #23, !dbg !5391, !srcloc !5392
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #23, !dbg !5393, !srcloc !5394
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #23, !dbg !5395, !srcloc !5396
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #23, !dbg !5397, !srcloc !5398
  tail call void asm sideeffect ".globl\09CONFIG_TEST_EXTRA_STACK_SIZE\0A\09.equ\09CONFIG_TEST_EXTRA_STACK_SIZE,0\0A\09.type\09CONFIG_TEST_EXTRA_STACK_SIZE,%object", ""() #23, !dbg !5399, !srcloc !5400
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #23, !dbg !5401, !srcloc !5402
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #23, !dbg !5403, !srcloc !5404
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #23, !dbg !5405, !srcloc !5406
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #23, !dbg !5407, !srcloc !5408
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #23, !dbg !5409, !srcloc !5410
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #23, !dbg !5411, !srcloc !5412
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #23, !dbg !5413, !srcloc !5414
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #23, !dbg !5415, !srcloc !5416
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #23, !dbg !5417, !srcloc !5418
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_PARTITIONS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_PARTITIONS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_PARTITIONS_ENABLED,%object", ""() #23, !dbg !5419, !srcloc !5420
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #23, !dbg !5421, !srcloc !5422
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #23, !dbg !5423, !srcloc !5424
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED\0A\09.equ\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED,%object", ""() #23, !dbg !5425, !srcloc !5426
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #23, !dbg !5427, !srcloc !5428
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #23, !dbg !5429, !srcloc !5430
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #23, !dbg !5431, !srcloc !5432
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !5433, !srcloc !5434
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #23, !dbg !5435, !srcloc !5436
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #23, !dbg !5437, !srcloc !5438
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #23, !dbg !5439, !srcloc !5440
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #23, !dbg !5441, !srcloc !5442
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,%object", ""() #23, !dbg !5443, !srcloc !5444
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #23, !dbg !5445, !srcloc !5446
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #23, !dbg !5447, !srcloc !5448
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #23, !dbg !5449, !srcloc !5450
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #23, !dbg !5451, !srcloc !5452
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #23, !dbg !5453, !srcloc !5454
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #23, !dbg !5455, !srcloc !5456
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !5457, !srcloc !5458
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #23, !dbg !5459, !srcloc !5460
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #23, !dbg !5461, !srcloc !5462
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ZEPHYR_BT_HCI_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ZEPHYR_BT_HCI_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ZEPHYR_BT_HCI_SPI_ENABLED,%object", ""() #23, !dbg !5463, !srcloc !5464
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #23, !dbg !5465, !srcloc !5466
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #23, !dbg !5467, !srcloc !5468
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #23, !dbg !5469, !srcloc !5470
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #23, !dbg !5471, !srcloc !5472
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #23, !dbg !5473, !srcloc !5474
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #23, !dbg !5475, !srcloc !5476
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #23, !dbg !5477, !srcloc !5478
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #23, !dbg !5479, !srcloc !5480
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #23, !dbg !5481, !srcloc !5482
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #23, !dbg !5483, !srcloc !5484
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #23, !dbg !5485, !srcloc !5486
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #23, !dbg !5487, !srcloc !5488
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #23, !dbg !5489, !srcloc !5490
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #23, !dbg !5491, !srcloc !5492
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #23, !dbg !5493, !srcloc !5494
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #23, !dbg !5495, !srcloc !5496
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #23, !dbg !5497, !srcloc !5498
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #23, !dbg !5499, !srcloc !5500
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #23, !dbg !5501, !srcloc !5502
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #23, !dbg !5503, !srcloc !5504
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #23, !dbg !5505, !srcloc !5506
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #23, !dbg !5507, !srcloc !5508
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #23, !dbg !5509, !srcloc !5510
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #23, !dbg !5511, !srcloc !5512
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #23, !dbg !5513, !srcloc !5514
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #23, !dbg !5515, !srcloc !5516
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #23, !dbg !5517, !srcloc !5518
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #23, !dbg !5519, !srcloc !5520
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #23, !dbg !5521, !srcloc !5522
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #23, !dbg !5523, !srcloc !5524
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #23, !dbg !5525, !srcloc !5526
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #23, !dbg !5527, !srcloc !5528
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #23, !dbg !5529, !srcloc !5530
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #23, !dbg !5531, !srcloc !5532
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #23, !dbg !5533, !srcloc !5534
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_CARBON\0A\09.equ\09CONFIG_BOARD_96B_CARBON,1\0A\09.type\09CONFIG_BOARD_96B_CARBON,%object", ""() #23, !dbg !5535, !srcloc !5536
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #23, !dbg !5537, !srcloc !5538
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #23, !dbg !5539, !srcloc !5540
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #23, !dbg !5541, !srcloc !5542
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #23, !dbg !5543, !srcloc !5544
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #23, !dbg !5545, !srcloc !5546
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F401XE\0A\09.equ\09CONFIG_SOC_STM32F401XE,1\0A\09.type\09CONFIG_SOC_STM32F401XE,%object", ""() #23, !dbg !5547, !srcloc !5548
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5549, !srcloc !5550
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #23, !dbg !5551, !srcloc !5552
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #23, !dbg !5553, !srcloc !5554
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #23, !dbg !5555, !srcloc !5556
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #23, !dbg !5557, !srcloc !5558
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #23, !dbg !5559, !srcloc !5560
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #23, !dbg !5561, !srcloc !5562
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #23, !dbg !5563, !srcloc !5564
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #23, !dbg !5565, !srcloc !5566
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #23, !dbg !5567, !srcloc !5568
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #23, !dbg !5569, !srcloc !5570
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #23, !dbg !5571, !srcloc !5572
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #23, !dbg !5573, !srcloc !5574
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #23, !dbg !5575, !srcloc !5576
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #23, !dbg !5577, !srcloc !5578
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #23, !dbg !5579, !srcloc !5580
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #23, !dbg !5581, !srcloc !5582
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #23, !dbg !5583, !srcloc !5584
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #23, !dbg !5585, !srcloc !5586
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #23, !dbg !5587, !srcloc !5588
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #23, !dbg !5589, !srcloc !5590
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #23, !dbg !5591, !srcloc !5592
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #23, !dbg !5593, !srcloc !5594
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #23, !dbg !5595, !srcloc !5596
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #23, !dbg !5597, !srcloc !5598
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #23, !dbg !5599, !srcloc !5600
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #23, !dbg !5601, !srcloc !5602
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #23, !dbg !5603, !srcloc !5604
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #23, !dbg !5605, !srcloc !5606
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #23, !dbg !5607, !srcloc !5608
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #23, !dbg !5609, !srcloc !5610
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #23, !dbg !5611, !srcloc !5612
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #23, !dbg !5613, !srcloc !5614
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,96\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #23, !dbg !5615, !srcloc !5616
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #23, !dbg !5617, !srcloc !5618
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #23, !dbg !5619, !srcloc !5620
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #23, !dbg !5621, !srcloc !5622
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #23, !dbg !5623, !srcloc !5624
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #23, !dbg !5625, !srcloc !5626
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #23, !dbg !5627, !srcloc !5628
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #23, !dbg !5629, !srcloc !5630
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #23, !dbg !5631, !srcloc !5632
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #23, !dbg !5633, !srcloc !5634
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #23, !dbg !5635, !srcloc !5636
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #23, !dbg !5637, !srcloc !5638
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #23, !dbg !5639, !srcloc !5640
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #23, !dbg !5641, !srcloc !5642
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #23, !dbg !5643, !srcloc !5644
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #23, !dbg !5645, !srcloc !5646
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #23, !dbg !5647, !srcloc !5648
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #23, !dbg !5649, !srcloc !5650
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #23, !dbg !5651, !srcloc !5652
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #23, !dbg !5653, !srcloc !5654
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #23, !dbg !5655, !srcloc !5656
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #23, !dbg !5657, !srcloc !5658
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #23, !dbg !5659, !srcloc !5660
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5661, !srcloc !5662
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #23, !dbg !5663, !srcloc !5664
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #23, !dbg !5665, !srcloc !5666
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #23, !dbg !5667, !srcloc !5668
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #23, !dbg !5669, !srcloc !5670
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #23, !dbg !5671, !srcloc !5672
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #23, !dbg !5673, !srcloc !5674
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL_INF\0A\09.equ\09CONFIG_MPU_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_MPU_LOG_LEVEL_INF,%object", ""() #23, !dbg !5675, !srcloc !5676
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL\0A\09.equ\09CONFIG_MPU_LOG_LEVEL,3\0A\09.type\09CONFIG_MPU_LOG_LEVEL,%object", ""() #23, !dbg !5677, !srcloc !5678
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #23, !dbg !5679, !srcloc !5680
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #23, !dbg !5681, !srcloc !5682
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #23, !dbg !5683, !srcloc !5684
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5685, !srcloc !5686
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #23, !dbg !5687, !srcloc !5688
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #23, !dbg !5689, !srcloc !5690
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #23, !dbg !5691, !srcloc !5692
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #23, !dbg !5693, !srcloc !5694
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,11\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #23, !dbg !5695, !srcloc !5696
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #23, !dbg !5697, !srcloc !5698
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #23, !dbg !5699, !srcloc !5700
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #23, !dbg !5701, !srcloc !5702
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #23, !dbg !5703, !srcloc !5704
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #23, !dbg !5705, !srcloc !5706
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #23, !dbg !5707, !srcloc !5708
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #23, !dbg !5709, !srcloc !5710
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #23, !dbg !5711, !srcloc !5712
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #23, !dbg !5713, !srcloc !5714
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #23, !dbg !5715, !srcloc !5716
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #23, !dbg !5717, !srcloc !5718
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #23, !dbg !5719, !srcloc !5720
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_NAME\0A\09.equ\09CONFIG_THREAD_NAME,1\0A\09.type\09CONFIG_THREAD_NAME,%object", ""() #23, !dbg !5721, !srcloc !5722
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_MAX_NAME_LEN\0A\09.equ\09CONFIG_THREAD_MAX_NAME_LEN,32\0A\09.type\09CONFIG_THREAD_MAX_NAME_LEN,%object", ""() #23, !dbg !5723, !srcloc !5724
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #23, !dbg !5725, !srcloc !5726
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #23, !dbg !5727, !srcloc !5728
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #23, !dbg !5729, !srcloc !5730
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #23, !dbg !5731, !srcloc !5732
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #23, !dbg !5733, !srcloc !5734
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #23, !dbg !5735, !srcloc !5736
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #23, !dbg !5737, !srcloc !5738
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #23, !dbg !5739, !srcloc !5740
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #23, !dbg !5741, !srcloc !5742
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #23, !dbg !5743, !srcloc !5744
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #23, !dbg !5745, !srcloc !5746
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #23, !dbg !5747, !srcloc !5748
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #23, !dbg !5749, !srcloc !5750
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #23, !dbg !5751, !srcloc !5752
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #23, !dbg !5753, !srcloc !5754
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #23, !dbg !5755, !srcloc !5756
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #23, !dbg !5757, !srcloc !5758
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #23, !dbg !5759, !srcloc !5760
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #23, !dbg !5761, !srcloc !5762
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #23, !dbg !5763, !srcloc !5764
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5765, !srcloc !5766
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #23, !dbg !5767, !srcloc !5768
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #23, !dbg !5769, !srcloc !5770
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #23, !dbg !5771, !srcloc !5772
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #23, !dbg !5773, !srcloc !5774
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #23, !dbg !5775, !srcloc !5776
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #23, !dbg !5777, !srcloc !5778
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #23, !dbg !5779, !srcloc !5780
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #23, !dbg !5781, !srcloc !5782
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #23, !dbg !5783, !srcloc !5784
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #23, !dbg !5785, !srcloc !5786
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #23, !dbg !5787, !srcloc !5788
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #23, !dbg !5789, !srcloc !5790
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #23, !dbg !5791, !srcloc !5792
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #23, !dbg !5793, !srcloc !5794
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #23, !dbg !5795, !srcloc !5796
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #23, !dbg !5797, !srcloc !5798
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5799, !srcloc !5800
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #23, !dbg !5801, !srcloc !5802
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #23, !dbg !5803, !srcloc !5804
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #23, !dbg !5805, !srcloc !5806
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #23, !dbg !5807, !srcloc !5808
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #23, !dbg !5809, !srcloc !5810
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #23, !dbg !5811, !srcloc !5812
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #23, !dbg !5813, !srcloc !5814
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #23, !dbg !5815, !srcloc !5816
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #23, !dbg !5817, !srcloc !5818
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #23, !dbg !5819, !srcloc !5820
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #23, !dbg !5821, !srcloc !5822
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #23, !dbg !5823, !srcloc !5824
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #23, !dbg !5825, !srcloc !5826
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #23, !dbg !5827, !srcloc !5828
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #23, !dbg !5829, !srcloc !5830
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #23, !dbg !5831, !srcloc !5832
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #23, !dbg !5833, !srcloc !5834
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #23, !dbg !5835, !srcloc !5836
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #23, !dbg !5837, !srcloc !5838
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #23, !dbg !5839, !srcloc !5840
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #23, !dbg !5841, !srcloc !5842
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #23, !dbg !5843, !srcloc !5844
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5845, !srcloc !5846
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #23, !dbg !5847, !srcloc !5848
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,16000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #23, !dbg !5849, !srcloc !5850
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #23, !dbg !5851, !srcloc !5852
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #23, !dbg !5853, !srcloc !5854
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5855, !srcloc !5856
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #23, !dbg !5857, !srcloc !5858
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #23, !dbg !5859, !srcloc !5860
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #23, !dbg !5861, !srcloc !5862
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5863, !srcloc !5864
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #23, !dbg !5865, !srcloc !5866
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #23, !dbg !5867, !srcloc !5868
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #23, !dbg !5869, !srcloc !5870
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #23, !dbg !5871, !srcloc !5872
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #23, !dbg !5873, !srcloc !5874
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #23, !dbg !5875, !srcloc !5876
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #23, !dbg !5877, !srcloc !5878
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #23, !dbg !5879, !srcloc !5880
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #23, !dbg !5881, !srcloc !5882
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #23, !dbg !5883, !srcloc !5884
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #23, !dbg !5885, !srcloc !5886
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #23, !dbg !5887, !srcloc !5888
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #23, !dbg !5889, !srcloc !5890
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #23, !dbg !5891, !srcloc !5892
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #23, !dbg !5893, !srcloc !5894
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #23, !dbg !5895, !srcloc !5896
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #23, !dbg !5897, !srcloc !5898
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #23, !dbg !5899, !srcloc !5900
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #23, !dbg !5901, !srcloc !5902
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #23, !dbg !5903, !srcloc !5904
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #23, !dbg !5905, !srcloc !5906
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #23, !dbg !5907, !srcloc !5908
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #23, !dbg !5909, !srcloc !5910
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #23, !dbg !5911, !srcloc !5912
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #23, !dbg !5913, !srcloc !5914
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #23, !dbg !5915, !srcloc !5916
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT\0A\09.equ\09CONFIG_ASSERT,1\0A\09.type\09CONFIG_ASSERT,%object", ""() #23, !dbg !5917, !srcloc !5918
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_LEVEL\0A\09.equ\09CONFIG_ASSERT_LEVEL,2\0A\09.type\09CONFIG_ASSERT_LEVEL,%object", ""() #23, !dbg !5919, !srcloc !5920
  tail call void asm sideeffect ".globl\09CONFIG_SPIN_VALIDATE\0A\09.equ\09CONFIG_SPIN_VALIDATE,1\0A\09.type\09CONFIG_SPIN_VALIDATE,%object", ""() #23, !dbg !5921, !srcloc !5922
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #23, !dbg !5923, !srcloc !5924
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #23, !dbg !5925, !srcloc !5926
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #23, !dbg !5927, !srcloc !5928
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_MINIMAL\0A\09.equ\09CONFIG_LOG_DEFAULT_MINIMAL,1\0A\09.type\09CONFIG_LOG_DEFAULT_MINIMAL,%object", ""() #23, !dbg !5929, !srcloc !5930
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,3\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #23, !dbg !5931, !srcloc !5932
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #23, !dbg !5933, !srcloc !5934
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #23, !dbg !5935, !srcloc !5936
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #23, !dbg !5937, !srcloc !5938
  tail call void asm sideeffect ".globl\09CONFIG_TEST\0A\09.equ\09CONFIG_TEST,1\0A\09.type\09CONFIG_TEST,%object", ""() #23, !dbg !5939, !srcloc !5940
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #23, !dbg !5941, !srcloc !5942
  tail call void asm sideeffect ".globl\09CONFIG_TEST_LOGGING_DEFAULTS\0A\09.equ\09CONFIG_TEST_LOGGING_DEFAULTS,1\0A\09.type\09CONFIG_TEST_LOGGING_DEFAULTS,%object", ""() #23, !dbg !5943, !srcloc !5944
  tail call void asm sideeffect ".globl\09CONFIG_TEST_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_TEST_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_TEST_HW_STACK_PROTECTION,%object", ""() #23, !dbg !5945, !srcloc !5946
  tail call void asm sideeffect ".globl\09CONFIG_TEST_ARM_CORTEX_M\0A\09.equ\09CONFIG_TEST_ARM_CORTEX_M,1\0A\09.type\09CONFIG_TEST_ARM_CORTEX_M,%object", ""() #23, !dbg !5947, !srcloc !5948
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #23, !dbg !5949, !srcloc !5950
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5951, !srcloc !5952
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #23, !dbg !5953, !srcloc !5954
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !5955, !srcloc !5956
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !5957, !srcloc !5958
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #23, !dbg !5959, !srcloc !5960
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #23, !dbg !5961, !srcloc !5962
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #23, !dbg !5963, !srcloc !5964
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #23, !dbg !5965, !srcloc !5966
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #23, !dbg !5967, !srcloc !5968
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #23, !dbg !5969, !srcloc !5970
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #23, !dbg !5971, !srcloc !5972
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #23, !dbg !5973, !srcloc !5974
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #23, !dbg !5975, !srcloc !5976
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #23, !dbg !5977, !srcloc !5978
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #23, !dbg !5979, !srcloc !5980
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #23, !dbg !5981, !srcloc !5982
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #23, !dbg !5983, !srcloc !5984
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #23, !dbg !5985, !srcloc !5986
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #23, !dbg !5987, !srcloc !5988
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #23, !dbg !5989, !srcloc !5990
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #23, !dbg !5991, !srcloc !5992
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #23, !dbg !5993, !srcloc !5994
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #23, !dbg !5995, !srcloc !5996
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #23, !dbg !5997, !srcloc !5998
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #23, !dbg !5999, !srcloc !6000
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #23, !dbg !6001, !srcloc !6002
  ret void, !dbg !6003
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !6004 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6006, metadata !DIExpression()), !dbg !6008
  tail call fastcc void @LL_FLASH_EnableInstCache() #25, !dbg !6009
  tail call fastcc void @LL_FLASH_EnableDataCache() #25, !dbg !6010
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !6011, !srcloc !6020
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !6011
  call void @llvm.dbg.value(metadata i32 %3, metadata !6017, metadata !DIExpression()) #23, !dbg !6021
  call void @llvm.dbg.value(metadata i32 undef, metadata !6018, metadata !DIExpression()) #23, !dbg !6021
  call void @llvm.dbg.value(metadata i32 %3, metadata !6007, metadata !DIExpression()), !dbg !6008
  call void @llvm.dbg.value(metadata i32 %3, metadata !6022, metadata !DIExpression()) #23, !dbg !6027
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !6029, !srcloc !6030
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !6031
  ret i32 0, !dbg !6032
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #15 !dbg !6033 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6035
  %2 = or i32 %1, 512, !dbg !6035
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6035
  ret void, !dbg !6036
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #15 !dbg !6037 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6038
  %2 = or i32 %1, 1024, !dbg !6038
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6038
  ret void, !dbg !6039
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #6 !dbg !6040 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6042, metadata !DIExpression()), !dbg !6043
  ret i32 0, !dbg !6044
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !6045 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6048, metadata !DIExpression()), !dbg !6056
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !6057
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !6057
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !6049, metadata !DIExpression()), !dbg !6058
  call void @llvm.va_start(i8* nonnull %3), !dbg !6059
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !6060
  %5 = load i32, i32* %4, align 4, !dbg !6060
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !6060
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #24, !dbg !6060
  call void @llvm.va_end(i8* nonnull %3), !dbg !6061
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !6062
  ret void, !dbg !6062
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !6063 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !6068, metadata !DIExpression()), !dbg !6069
  call void @llvm.dbg.value(metadata i8* %0, metadata !6067, metadata !DIExpression()), !dbg !6069
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #24, !dbg !6070
  ret void, !dbg !6071
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6072 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6076, metadata !DIExpression()), !dbg !6080
  call void @llvm.dbg.value(metadata i8* %1, metadata !6077, metadata !DIExpression()), !dbg !6080
  call void @llvm.dbg.value(metadata i32 %2, metadata !6078, metadata !DIExpression()), !dbg !6080
  call void @llvm.dbg.value(metadata i8* %1, metadata !6079, metadata !DIExpression()), !dbg !6080
  %4 = icmp eq i32 %2, 0, !dbg !6081
  br i1 %4, label %14, label %5, !dbg !6082

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) #25, !dbg !6080
  %7 = zext i8 %6 to i32
  br label %8, !dbg !6082

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !6079, metadata !DIExpression()), !dbg !6080
  call void @llvm.dbg.value(metadata i32 %10, metadata !6078, metadata !DIExpression()), !dbg !6080
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i32 0, i32 0), i32 noundef %7) #24, !dbg !6083
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #25, !dbg !6085
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !6086
  call void @llvm.dbg.value(metadata i32 %11, metadata !6078, metadata !DIExpression()), !dbg !6080
  call void @llvm.dbg.value(metadata i8* %12, metadata !6079, metadata !DIExpression()), !dbg !6080
  br i1 %13, label %14, label %8, !dbg !6086, !llvm.loop !6087

14:                                               ; preds = %8, %3
  ret void, !dbg !6089
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #6 !dbg !6090 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6095, metadata !DIExpression()), !dbg !6096
  %2 = add i32 %0, -1, !dbg !6097
  %3 = icmp ult i32 %2, 4, !dbg !6097
  %4 = shl i32 %2, 3, !dbg !6097
  %5 = lshr i32 1145657157, %4, !dbg !6097
  %6 = trunc i32 %5 to i8, !dbg !6097
  %7 = select i1 %3, i8 %6, i8 63, !dbg !6097
  ret i8 %7, !dbg !6098
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !6099 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6103, metadata !DIExpression()), !dbg !6114
  call void @llvm.dbg.value(metadata i32 %1, metadata !6104, metadata !DIExpression()), !dbg !6114
  call void @llvm.dbg.value(metadata i32 0, metadata !6105, metadata !DIExpression()), !dbg !6115
  br label %4, !dbg !6116

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.23, i32 0, i32 0)) #24, !dbg !6117
  call void @llvm.dbg.value(metadata i32 0, metadata !6107, metadata !DIExpression()), !dbg !6118
  br label %16, !dbg !6119

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !6105, metadata !DIExpression()), !dbg !6115
  %6 = icmp ult i32 %5, %1, !dbg !6120
  br i1 %6, label %7, label %11, !dbg !6124

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !6125
  %9 = load i8, i8* %8, align 1, !dbg !6125
  %10 = zext i8 %9 to i32, !dbg !6127
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.24, i32 0, i32 0), i32 noundef %10) #24, !dbg !6128
  br label %12, !dbg !6129

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.25, i32 0, i32 0)) #24, !dbg !6130
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !6132
  call void @llvm.dbg.value(metadata i32 %13, metadata !6105, metadata !DIExpression()), !dbg !6115
  %14 = icmp eq i32 %13, 8, !dbg !6133
  br i1 %14, label %3, label %4, !dbg !6116, !llvm.loop !6134

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.26, i32 0, i32 0)) #24, !dbg !6136
  ret void, !dbg !6137

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !6107, metadata !DIExpression()), !dbg !6118
  %18 = icmp ult i32 %17, %1, !dbg !6138
  br i1 %18, label %19, label %26, !dbg !6139

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !6140
  %21 = load i8, i8* %20, align 1, !dbg !6140
  call void @llvm.dbg.value(metadata i8 %21, metadata !6109, metadata !DIExpression()), !dbg !6141
  %22 = zext i8 %21 to i32, !dbg !6142
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #25, !dbg !6143
  %24 = icmp eq i32 %23, 0, !dbg !6144
  %25 = select i1 %24, i32 46, i32 %22, !dbg !6143
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.27, i32 0, i32 0), i32 noundef %25) #24, !dbg !6145
  br label %27, !dbg !6146

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.28, i32 0, i32 0)) #24, !dbg !6147
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !6149
  call void @llvm.dbg.value(metadata i32 %28, metadata !6107, metadata !DIExpression()), !dbg !6118
  %29 = icmp eq i32 %28, 8, !dbg !6150
  br i1 %29, label %15, label %16, !dbg !6119, !llvm.loop !6151
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #6 !dbg !6153 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6155, metadata !DIExpression()), !dbg !6156
  %2 = add i32 %0, -32, !dbg !6157
  %3 = icmp ult i32 %2, 95, !dbg !6157
  %4 = zext i1 %3 to i32, !dbg !6157
  ret i32 %4, !dbg !6158
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !6159 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6208, metadata !DIExpression()), !dbg !6210
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !6209, metadata !DIExpression()), !dbg !6210
  %3 = icmp eq %struct.__esf* %1, null, !dbg !6211
  br i1 %3, label %5, label %4, !dbg !6213

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #25, !dbg !6214
  br label %5, !dbg !6216

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #24, !dbg !6217
  ret void, !dbg !6218
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6219 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6223, metadata !DIExpression()), !dbg !6224
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6225
  %3 = load i32, i32* %2, align 4, !dbg !6225
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !6225
  %5 = load i32, i32* %4, align 4, !dbg !6225
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !6225
  %7 = load i32, i32* %6, align 4, !dbg !6225
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.29, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #24, !dbg !6225
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !6230
  %9 = load i32, i32* %8, align 4, !dbg !6230
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !6230
  %11 = load i32, i32* %10, align 4, !dbg !6230
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !6230
  %13 = load i32, i32* %12, align 4, !dbg !6230
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.30, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #24, !dbg !6230
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !6235
  %15 = load i32, i32* %14, align 4, !dbg !6235
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.31, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #24, !dbg !6235
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !6240
  %17 = load i32, i32* %16, align 4, !dbg !6240
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #24, !dbg !6240
  ret void, !dbg !6245
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !6246 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6263, metadata !DIExpression()), !dbg !6266
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !6264, metadata !DIExpression()), !dbg !6266
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6267
  %4 = load i32, i32* %3, align 4, !dbg !6267
  call void @llvm.dbg.value(metadata i32 %4, metadata !6265, metadata !DIExpression()), !dbg !6266
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #25, !dbg !6268
  ret void, !dbg !6269
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #12 !dbg !6270 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6274, metadata !DIExpression()), !dbg !6277
  call void @llvm.dbg.value(metadata i8* %0, metadata !6275, metadata !DIExpression()), !dbg !6277
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !6278
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #23, !dbg !6278
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !6276, metadata !DIExpression()), !dbg !6279
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !6279
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !6280
  %5 = bitcast i8* %4 to i32*, !dbg !6280
  %6 = load i32, i32* %5, align 4, !dbg !6280
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !6281
  store i32 %6, i32* %7, align 4, !dbg !6282
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #25, !dbg !6283
  unreachable, !dbg !6284
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6285 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6288, metadata !DIExpression()), !dbg !6289
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #25, !dbg !6290
  ret void, !dbg !6291
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6292 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6296, metadata !DIExpression()), !dbg !6297
  %2 = icmp sgt i32 %0, -1, !dbg !6298
  br i1 %2, label %3, label %8, !dbg !6300

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6301, !srcloc !6303
  %4 = and i32 %0, 31, !dbg !6304
  %5 = shl nuw i32 1, %4, !dbg !6305
  %6 = lshr i32 %0, 5, !dbg !6306
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !6307
  store volatile i32 %5, i32* %7, align 4, !dbg !6308
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6309, !srcloc !6310
  br label %8, !dbg !6311

8:                                                ; preds = %3, %1
  ret void, !dbg !6312
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !6313 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6315, metadata !DIExpression()), !dbg !6316
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #25, !dbg !6317
  ret void, !dbg !6318
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6319 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6321, metadata !DIExpression()), !dbg !6322
  %2 = icmp sgt i32 %0, -1, !dbg !6323
  br i1 %2, label %3, label %8, !dbg !6325

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6326
  %5 = shl nuw i32 1, %4, !dbg !6328
  %6 = lshr i32 %0, 5, !dbg !6329
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !6330
  store volatile i32 %5, i32* %7, align 4, !dbg !6331
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6332, !srcloc !6336
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6337, !srcloc !6340
  br label %8, !dbg !6341

8:                                                ; preds = %3, %1
  ret void, !dbg !6342
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #5 !dbg !6343 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6347, metadata !DIExpression()), !dbg !6348
  %2 = lshr i32 %0, 5, !dbg !6349
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !6350
  %4 = load volatile i32, i32* %3, align 4, !dbg !6350
  %5 = and i32 %0, 31, !dbg !6351
  %6 = shl nuw i32 1, %5, !dbg !6351
  %7 = and i32 %4, %6, !dbg !6352
  ret i32 %7, !dbg !6353
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6354 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6358, metadata !DIExpression()), !dbg !6361
  call void @llvm.dbg.value(metadata i32 %1, metadata !6359, metadata !DIExpression()), !dbg !6361
  call void @llvm.dbg.value(metadata i32 %2, metadata !6360, metadata !DIExpression()), !dbg !6361
  %4 = add i32 %1, 1, !dbg !6362
  call void @llvm.dbg.value(metadata i32 %4, metadata !6359, metadata !DIExpression()), !dbg !6361
  %5 = icmp ult i32 %4, 16, !dbg !6365
  br i1 %5, label %7, label %6, !dbg !6368

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.33, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.34, i32 0, i32 0), i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.35, i32 0, i32 0), i32 noundef 94) #24, !dbg !6369
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3.36, i32 0, i32 0), i32 noundef %1, i32 noundef %0, i32 noundef 15) #24, !dbg !6369
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.35, i32 0, i32 0), i32 noundef 94) #24, !dbg !6369
  unreachable, !dbg !6369

7:                                                ; preds = %3
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #25, !dbg !6371
  ret void, !dbg !6372
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !6373 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6377, metadata !DIExpression()), !dbg !6379
  call void @llvm.dbg.value(metadata i32 %1, metadata !6378, metadata !DIExpression()), !dbg !6379
  %3 = trunc i32 %1 to i8, !dbg !6380
  %4 = shl i8 %3, 4, !dbg !6380
  %5 = and i32 %0, 15, !dbg !6382
  %6 = add nsw i32 %5, -4, !dbg !6382
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6382
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6382
  %9 = icmp slt i32 %0, 0, !dbg !6382
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6382
  store volatile i8 %4, i8* %10, align 1, !dbg !6380
  ret void, !dbg !6383
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !6384 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6386, metadata !DIExpression()), !dbg !6387
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #24, !dbg !6388
  ret void, !dbg !6389
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6390 {
  tail call void @z_SysNmiOnReset() #24, !dbg !6392
  tail call void @z_arm_int_exit() #24, !dbg !6393
  ret void, !dbg !6394
}

; Function Attrs: optsize
declare !dbg !6395 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6396 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #12 !dbg !6398 {
  tail call fastcc void @relocate_vector_table() #25, !dbg !6400
  tail call fastcc void @z_arm_floating_point_init() #25, !dbg !6401
  tail call void @z_bss_zero() #24, !dbg !6402
  tail call void @z_data_copy() #24, !dbg !6403
  tail call void @z_arm_interrupt_init() #24, !dbg !6404
  tail call void @z_cstart() #27, !dbg !6405
  unreachable, !dbg !6405
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6406 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6407
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6408, !srcloc !6411
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6412, !srcloc !6415
  ret void, !dbg !6416
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !6417 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6418
  %2 = and i32 %1, -15728641, !dbg !6418
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6418
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #23, !dbg !6419, !srcloc !6424
  call void @llvm.dbg.value(metadata i32 %3, metadata !6422, metadata !DIExpression()) #23, !dbg !6425
  %4 = and i32 %3, -5, !dbg !6426
  call void @llvm.dbg.value(metadata i32 %4, metadata !6427, metadata !DIExpression()) #23, !dbg !6432
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #23, !dbg !6434, !srcloc !6435
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6436, !srcloc !6415
  ret void, !dbg !6438
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6439 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6442, metadata !DIExpression()), !dbg !6443
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6444
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 8, i32 0, !dbg !6445
  store i32 %0, i32* %3, align 4, !dbg !6446
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6447
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 8, i32 1, !dbg !6448
  store i32 %4, i32* %5, align 4, !dbg !6449
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6450
  %7 = or i32 %6, 268435456, !dbg !6450
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6450
  call void @llvm.dbg.value(metadata i32 0, metadata !6451, metadata !DIExpression()) #23, !dbg !6454
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !6456, !srcloc !6457
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6458
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 8, i32 1, !dbg !6459
  %10 = load i32, i32* %9, align 4, !dbg !6459
  ret i32 %10, !dbg !6460
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #9 !dbg !6461 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6574, metadata !DIExpression()), !dbg !6582
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !6575, metadata !DIExpression()), !dbg !6582
  call void @llvm.dbg.value(metadata i8* %2, metadata !6576, metadata !DIExpression()), !dbg !6582
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !6577, metadata !DIExpression()), !dbg !6582
  call void @llvm.dbg.value(metadata i8* %4, metadata !6578, metadata !DIExpression()), !dbg !6582
  call void @llvm.dbg.value(metadata i8* %5, metadata !6579, metadata !DIExpression()), !dbg !6582
  call void @llvm.dbg.value(metadata i8* %6, metadata !6580, metadata !DIExpression()), !dbg !6582
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !6583
  call void @llvm.dbg.value(metadata i8* %8, metadata !6581, metadata !DIExpression()), !dbg !6582
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !6584
  %10 = bitcast i8* %9 to i32*, !dbg !6584
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !6585
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !6586
  %12 = bitcast i8* %8 to i32*, !dbg !6587
  store i32 %11, i32* %12, align 4, !dbg !6588
  %13 = ptrtoint i8* %4 to i32, !dbg !6589
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !6590
  %15 = bitcast i8* %14 to i32*, !dbg !6590
  store i32 %13, i32* %15, align 4, !dbg !6591
  %16 = ptrtoint i8* %5 to i32, !dbg !6592
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !6593
  %18 = bitcast i8* %17 to i32*, !dbg !6593
  store i32 %16, i32* %18, align 4, !dbg !6594
  %19 = ptrtoint i8* %6 to i32, !dbg !6595
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !6596
  %21 = bitcast i8* %20 to i32*, !dbg !6596
  store i32 %19, i32* %21, align 4, !dbg !6597
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !6598
  %23 = bitcast i8* %22 to i32*, !dbg !6598
  store i32 16777216, i32* %23, align 4, !dbg !6599
  %24 = ptrtoint i8* %8 to i32, !dbg !6600
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !6601
  store i32 %24, i32* %25, align 8, !dbg !6602
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 8, i32 0, !dbg !6603
  store i32 0, i32* %26, align 4, !dbg !6604
  ret void, !dbg !6605
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !6606 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6611, metadata !DIExpression()), !dbg !6617
  call void @llvm.dbg.value(metadata i32 %1, metadata !6612, metadata !DIExpression()), !dbg !6617
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6618
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !6613, metadata !DIExpression()), !dbg !6617
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !6619
  br i1 %4, label %19, label %5, !dbg !6621

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !6616, metadata !DIExpression()), !dbg !6617
  %6 = icmp eq i32 %0, -22, !dbg !6622
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 6, i32 0, !dbg !6622
  %8 = load i32, i32* %7, align 4, !dbg !6622
  br i1 %6, label %16, label %9, !dbg !6624

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !6622
  %11 = icmp ule i32 %10, %0, !dbg !6622
  %12 = icmp ugt i32 %8, %0, !dbg !6622
  %13 = and i1 %12, %11, !dbg !6622
  %14 = icmp ugt i32 %8, %1, !dbg !6622
  %15 = and i1 %14, %13, !dbg !6622
  br i1 %15, label %18, label %19, !dbg !6622

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !6622
  br i1 %17, label %18, label %19, !dbg !6624

18:                                               ; preds = %9, %16
  br label %19, !dbg !6625

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !6617
  ret i32 %20, !dbg !6627
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #12 !dbg !6628 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6632, metadata !DIExpression()), !dbg !6635
  call void @llvm.dbg.value(metadata i8* %1, metadata !6633, metadata !DIExpression()), !dbg !6635
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !6634, metadata !DIExpression()), !dbg !6635
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6636
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #24, !dbg !6637
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #23, !dbg !6638, !srcloc !6639
  unreachable, !dbg !6640
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !6641 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6659, metadata !DIExpression()), !dbg !6669
  call void @llvm.dbg.value(metadata i32 %1, metadata !6660, metadata !DIExpression()), !dbg !6669
  call void @llvm.dbg.value(metadata i32 %2, metadata !6661, metadata !DIExpression()), !dbg !6669
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !6662, metadata !DIExpression()), !dbg !6669
  call void @llvm.dbg.value(metadata i32 0, metadata !6663, metadata !DIExpression()), !dbg !6669
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6670
  call void @llvm.dbg.value(metadata i32 %8, metadata !6664, metadata !DIExpression(DW_OP_constu, 511, DW_OP_and, DW_OP_stack_value)), !dbg !6669
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6671
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6671
  %9 = bitcast %struct.__esf* %7 to i8*, !dbg !6672
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #23, !dbg !6672
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !6668, metadata !DIExpression()), !dbg !6673
  call void @llvm.dbg.value(metadata i32 0, metadata !6674, metadata !DIExpression()) #23, !dbg !6677
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !6679, !srcloc !6680
  call void @llvm.dbg.value(metadata i8* %6, metadata !6666, metadata !DIExpression(DW_OP_deref)), !dbg !6669
  %10 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #25, !dbg !6681
  call void @llvm.dbg.value(metadata %struct.__esf* %10, metadata !6667, metadata !DIExpression()), !dbg !6669
  %11 = icmp eq %struct.__esf* %10, null, !dbg !6682
  br i1 %11, label %12, label %13, !dbg !6685

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1.40, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 1057) #24, !dbg !6686
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3.42, i32 0, i32 0)) #24, !dbg !6686
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 1057) #24, !dbg !6686
  unreachable, !dbg !6686

13:                                               ; preds = %4
  %14 = and i32 %8, 511, !dbg !6688
  call void @llvm.dbg.value(metadata i32 %14, metadata !6664, metadata !DIExpression()), !dbg !6669
  call void @llvm.dbg.value(metadata i8* %5, metadata !6665, metadata !DIExpression(DW_OP_deref)), !dbg !6669
  %15 = call fastcc i32 @fault_handle(%struct.__esf* noundef nonnull %10, i32 noundef %14, i8* noundef nonnull %5) #25, !dbg !6689
  call void @llvm.dbg.value(metadata i32 %15, metadata !6663, metadata !DIExpression()), !dbg !6669
  %16 = load i8, i8* %5, align 1, !dbg !6690, !range !6692
  call void @llvm.dbg.value(metadata i8 %16, metadata !6665, metadata !DIExpression()), !dbg !6669
  %17 = icmp eq i8 %16, 0, !dbg !6690
  br i1 %17, label %18, label %35, !dbg !6693

18:                                               ; preds = %13
  %19 = bitcast %struct.__esf* %10 to i8*, !dbg !6694
  %20 = call i8* @memcpy(i8* noundef nonnull %9, i8* noundef nonnull %19, i32 noundef 32) #24, !dbg !6695
  %21 = load i8, i8* %6, align 1, !dbg !6696, !range !6692
  call void @llvm.dbg.value(metadata i8 %21, metadata !6666, metadata !DIExpression()), !dbg !6669
  %22 = icmp eq i8 %21, 0, !dbg !6696
  %23 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !6698
  %24 = load i32, i32* %23, align 4, !dbg !6698
  br i1 %22, label %30, label %25, !dbg !6699

25:                                               ; preds = %18
  %26 = and i32 %24, 511, !dbg !6700
  %27 = icmp eq i32 %26, 0, !dbg !6703
  br i1 %27, label %28, label %34, !dbg !6704

28:                                               ; preds = %25
  %29 = or i32 %24, 511, !dbg !6705
  br label %32, !dbg !6707

30:                                               ; preds = %18
  %31 = and i32 %24, -512, !dbg !6708
  br label %32

32:                                               ; preds = %30, %28
  %33 = phi i32 [ %29, %28 ], [ %31, %30 ]
  store i32 %33, i32* %23, align 4, !dbg !6698
  br label %34, !dbg !6710

34:                                               ; preds = %32, %25
  call void @z_arm_fatal_error(i32 noundef %15, %struct.__esf* noundef nonnull %7) #24, !dbg !6710
  br label %35, !dbg !6711

35:                                               ; preds = %13, %34
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #23, !dbg !6711
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6711
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6711
  ret void, !dbg !6711
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !6712 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6717, metadata !DIExpression()), !dbg !6723
  call void @llvm.dbg.value(metadata i32 %1, metadata !6718, metadata !DIExpression()), !dbg !6723
  call void @llvm.dbg.value(metadata i32 %2, metadata !6719, metadata !DIExpression()), !dbg !6723
  call void @llvm.dbg.value(metadata i8* %3, metadata !6720, metadata !DIExpression()), !dbg !6723
  call void @llvm.dbg.value(metadata i8 0, metadata !6721, metadata !DIExpression()), !dbg !6723
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !6722, metadata !DIExpression()), !dbg !6723
  store i8 0, i8* %3, align 1, !dbg !6724
  %5 = icmp ugt i32 %2, -16777217, !dbg !6725
  br i1 %5, label %6, label %17, !dbg !6727

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !6728
  %8 = icmp eq i32 %7, 8, !dbg !6728
  br i1 %8, label %9, label %10, !dbg !6728

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.4.55, i32 0, i32 0), i32 noundef 69) #24, !dbg !6730
  br label %17, !dbg !6736

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !6737
  %12 = icmp eq i32 %11, 0, !dbg !6737
  br i1 %12, label %13, label %14, !dbg !6738

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !6722, metadata !DIExpression()), !dbg !6723
  store i8 1, i8* %3, align 1, !dbg !6741
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !6723
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !6722, metadata !DIExpression()), !dbg !6723
  br label %17, !dbg !6744

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !6723
  ret %struct.__esf* %18, !dbg !6745
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !6746 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6750, metadata !DIExpression()), !dbg !6754
  call void @llvm.dbg.value(metadata i32 %1, metadata !6751, metadata !DIExpression()), !dbg !6754
  call void @llvm.dbg.value(metadata i8* %2, metadata !6752, metadata !DIExpression()), !dbg !6754
  call void @llvm.dbg.value(metadata i32 0, metadata !6753, metadata !DIExpression()), !dbg !6754
  store i8 0, i8* %2, align 1, !dbg !6755
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !6756

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #25, !dbg !6757
  call void @llvm.dbg.value(metadata i32 %5, metadata !6753, metadata !DIExpression()), !dbg !6754
  br label %12, !dbg !6759

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #25, !dbg !6760
  call void @llvm.dbg.value(metadata i32 %7, metadata !6753, metadata !DIExpression()), !dbg !6754
  br label %12, !dbg !6761

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #25, !dbg !6762
  call void @llvm.dbg.value(metadata i32 0, metadata !6753, metadata !DIExpression()), !dbg !6754
  br label %12, !dbg !6763

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #25, !dbg !6764
  call void @llvm.dbg.value(metadata i32 0, metadata !6753, metadata !DIExpression()), !dbg !6754
  br label %12, !dbg !6765

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #25, !dbg !6766
  br label %12, !dbg !6767

11:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #25, !dbg !6768
  br label %12, !dbg !6769

12:                                               ; preds = %4, %6, %8, %9, %10, %11
  %13 = phi i32 [ 0, %11 ], [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ %7, %6 ], [ %5, %4 ], !dbg !6754
  call void @llvm.dbg.value(metadata i32 %13, metadata !6753, metadata !DIExpression()), !dbg !6754
  ret i32 %13, !dbg !6770
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6771 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6775, metadata !DIExpression()), !dbg !6778
  call void @llvm.dbg.value(metadata i8* %1, metadata !6776, metadata !DIExpression()), !dbg !6778
  call void @llvm.dbg.value(metadata i32 0, metadata !6777, metadata !DIExpression()), !dbg !6778
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.47, i32 0, i32 0), i32 noundef 69) #24, !dbg !6779
  store i8 0, i8* %1, align 1, !dbg !6784
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6785
  %4 = and i32 %3, 2, !dbg !6787
  %5 = icmp eq i32 %4, 0, !dbg !6788
  br i1 %5, label %7, label %6, !dbg !6789

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.48, i32 0, i32 0), i32 noundef 69) #24, !dbg !6790
  br label %38, !dbg !6796

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6797
  %9 = icmp sgt i32 %8, -1, !dbg !6799
  br i1 %9, label %11, label %10, !dbg !6800

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.49, i32 0, i32 0), i32 noundef 69) #24, !dbg !6801
  br label %38, !dbg !6807

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6808
  %13 = and i32 %12, 1073741824, !dbg !6810
  %14 = icmp eq i32 %13, 0, !dbg !6811
  br i1 %14, label %37, label %15, !dbg !6812

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.50, i32 0, i32 0), i32 noundef 69) #24, !dbg !6813
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #25, !dbg !6819
  br i1 %16, label %17, label %21, !dbg !6821

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6822
  %19 = load i32, i32* %18, align 4, !dbg !6822
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9.51, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #24, !dbg !6822
  %20 = load i32, i32* %18, align 4, !dbg !6828
  call void @llvm.dbg.value(metadata i32 %20, metadata !6777, metadata !DIExpression()), !dbg !6778
  br label %38, !dbg !6829

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6830
  %23 = and i32 %22, 255, !dbg !6832
  %24 = icmp eq i32 %23, 0, !dbg !6833
  br i1 %24, label %27, label %25, !dbg !6834

25:                                               ; preds = %21
  %26 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #25, !dbg !6835
  call void @llvm.dbg.value(metadata i32 %26, metadata !6777, metadata !DIExpression()), !dbg !6778
  br label %38, !dbg !6837

27:                                               ; preds = %21
  %28 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6838
  %29 = and i32 %28, 65280, !dbg !6840
  %30 = icmp eq i32 %29, 0, !dbg !6841
  br i1 %30, label %32, label %31, !dbg !6842

31:                                               ; preds = %27
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #25, !dbg !6843
  call void @llvm.dbg.value(metadata i32 0, metadata !6777, metadata !DIExpression()), !dbg !6778
  br label %38, !dbg !6845

32:                                               ; preds = %27
  %33 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6846
  %34 = icmp ult i32 %33, 65536, !dbg !6848
  br i1 %34, label %36, label %35, !dbg !6849

35:                                               ; preds = %32
  tail call fastcc void @usage_fault() #25, !dbg !6850
  call void @llvm.dbg.value(metadata i32 0, metadata !6777, metadata !DIExpression()), !dbg !6778
  br label %38

36:                                               ; preds = %32
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.52, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 755) #24, !dbg !6852
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11.53, i32 0, i32 0)) #24, !dbg !6852
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 755) #24, !dbg !6852
  unreachable, !dbg !6852

37:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.52, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 760) #24, !dbg !6857
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.12.54, i32 0, i32 0)) #24, !dbg !6857
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 760) #24, !dbg !6857
  unreachable, !dbg !6857

38:                                               ; preds = %10, %17, %31, %35, %25, %6
  %39 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ %26, %25 ], [ 0, %31 ], [ 0, %35 ], !dbg !6778
  call void @llvm.dbg.value(metadata i32 %39, metadata !6777, metadata !DIExpression()), !dbg !6778
  ret i32 %39, !dbg !6862
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !6863 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6865, metadata !DIExpression()), !dbg !6878
  call void @llvm.dbg.value(metadata i32 %1, metadata !6866, metadata !DIExpression()), !dbg !6878
  call void @llvm.dbg.value(metadata i8* %2, metadata !6867, metadata !DIExpression()), !dbg !6878
  call void @llvm.dbg.value(metadata i32 0, metadata !6868, metadata !DIExpression()), !dbg !6878
  call void @llvm.dbg.value(metadata i32 -22, metadata !6869, metadata !DIExpression()), !dbg !6878
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13.46, i32 0, i32 0), i32 noundef 69) #24, !dbg !6879
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6884
  %5 = and i32 %4, 16, !dbg !6886
  %6 = icmp eq i32 %5, 0, !dbg !6887
  br i1 %6, label %8, label %7, !dbg !6888

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.14, i32 0, i32 0), i32 noundef 69) #24, !dbg !6889
  br label %8, !dbg !6895

8:                                                ; preds = %7, %3
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6896
  %10 = and i32 %9, 8, !dbg !6898
  %11 = icmp eq i32 %10, 0, !dbg !6899
  br i1 %11, label %13, label %12, !dbg !6900

12:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #24, !dbg !6901
  br label %13, !dbg !6907

13:                                               ; preds = %12, %8
  %14 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6908
  %15 = and i32 %14, 2, !dbg !6909
  %16 = icmp eq i32 %15, 0, !dbg !6910
  br i1 %16, label %27, label %17, !dbg !6911

17:                                               ; preds = %13
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16, i32 0, i32 0), i32 noundef 69) #24, !dbg !6912
  %18 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !6917
  call void @llvm.dbg.value(metadata i32 %18, metadata !6870, metadata !DIExpression()), !dbg !6918
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6919
  %20 = and i32 %19, 128, !dbg !6921
  %21 = icmp eq i32 %20, 0, !dbg !6922
  br i1 %21, label %27, label %22, !dbg !6923

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %18, metadata !6869, metadata !DIExpression()), !dbg !6878
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i32 0, i32 0), i32 noundef 69, i32 noundef %18) #24, !dbg !6924
  %23 = icmp eq i32 %1, 0, !dbg !6930
  br i1 %23, label %27, label %24, !dbg !6932

24:                                               ; preds = %22
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6933
  %26 = and i32 %25, -129, !dbg !6933
  store volatile i32 %26, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6933
  br label %27, !dbg !6935

27:                                               ; preds = %17, %24, %22, %13
  %28 = phi i32 [ -22, %13 ], [ %18, %24 ], [ %18, %22 ], [ -22, %17 ], !dbg !6878
  call void @llvm.dbg.value(metadata i32 %28, metadata !6869, metadata !DIExpression()), !dbg !6878
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6936
  %30 = and i32 %29, 1, !dbg !6938
  %31 = icmp eq i32 %30, 0, !dbg !6939
  br i1 %31, label %33, label %32, !dbg !6940

32:                                               ; preds = %27
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.18, i32 0, i32 0), i32 noundef 69) #24, !dbg !6941
  br label %33, !dbg !6947

33:                                               ; preds = %32, %27
  %34 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6948
  %35 = and i32 %34, 32, !dbg !6950
  %36 = icmp eq i32 %35, 0, !dbg !6951
  br i1 %36, label %38, label %37, !dbg !6952

37:                                               ; preds = %33
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), i32 noundef 69) #24, !dbg !6953
  br label %38, !dbg !6959

38:                                               ; preds = %37, %33
  %39 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6960
  %40 = and i32 %39, 16, !dbg !6961
  %41 = icmp eq i32 %40, 0, !dbg !6961
  br i1 %41, label %42, label %46, !dbg !6962

42:                                               ; preds = %38
  %43 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6963
  %44 = and i32 %43, 2, !dbg !6964
  %45 = icmp eq i32 %44, 0, !dbg !6964
  br i1 %45, label %60, label %46, !dbg !6965

46:                                               ; preds = %42, %38
  %47 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6966
  %48 = and i32 %47, 2048, !dbg !6967
  %49 = icmp eq i32 %48, 0, !dbg !6967
  br i1 %49, label %60, label %50, !dbg !6968

50:                                               ; preds = %46
  %51 = ptrtoint %struct.__esf* %0 to i32, !dbg !6969
  %52 = tail call i32 @z_check_thread_stack_fail(i32 noundef %28, i32 noundef %51) #24, !dbg !6970
  call void @llvm.dbg.value(metadata i32 %52, metadata !6873, metadata !DIExpression()), !dbg !6971
  %53 = icmp eq i32 %52, 0, !dbg !6972
  br i1 %53, label %55, label %54, !dbg !6974

54:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %52, metadata !6975, metadata !DIExpression()) #23, !dbg !6978
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %52) #23, !dbg !6981, !srcloc !6982
  call void @llvm.dbg.value(metadata i32 2, metadata !6868, metadata !DIExpression()), !dbg !6878
  br label %60, !dbg !6983

55:                                               ; preds = %50
  %56 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6984
  %57 = and i32 %56, 16, !dbg !6984
  %58 = icmp eq i32 %57, 0, !dbg !6984
  br i1 %58, label %60, label %59, !dbg !6988

59:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([74 x i8], [74 x i8]* @.str.20, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 343) #24, !dbg !6989
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.21, i32 0, i32 0)) #24, !dbg !6989
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 343) #24, !dbg !6989
  unreachable, !dbg !6989

60:                                               ; preds = %54, %55, %46, %42
  %61 = phi i32 [ 0, %46 ], [ 0, %42 ], [ 2, %54 ], [ 0, %55 ], !dbg !6878
  call void @llvm.dbg.value(metadata i32 %61, metadata !6868, metadata !DIExpression()), !dbg !6878
  %62 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6991
  %63 = and i32 %62, 32, !dbg !6993
  %64 = icmp eq i32 %63, 0, !dbg !6994
  br i1 %64, label %68, label %65, !dbg !6995

65:                                               ; preds = %60
  %66 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6996
  %67 = and i32 %66, -8193, !dbg !6996
  store volatile i32 %67, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6996
  br label %68, !dbg !6998

68:                                               ; preds = %65, %60
  %69 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6999
  %70 = or i32 %69, 255, !dbg !6999
  store volatile i32 %70, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6999
  store i8 0, i8* %2, align 1, !dbg !7000
  ret i32 %61, !dbg !7001
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !7002 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7006, metadata !DIExpression()), !dbg !7013
  call void @llvm.dbg.value(metadata i32 %0, metadata !7007, metadata !DIExpression()), !dbg !7013
  call void @llvm.dbg.value(metadata i8* %1, metadata !7008, metadata !DIExpression()), !dbg !7013
  call void @llvm.dbg.value(metadata i32 0, metadata !7009, metadata !DIExpression()), !dbg !7013
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22.45, i32 0, i32 0), i32 noundef 69) #24, !dbg !7014
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7019
  %4 = and i32 %3, 4096, !dbg !7021
  %5 = icmp eq i32 %4, 0, !dbg !7021
  br i1 %5, label %7, label %6, !dbg !7022

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.23, i32 0, i32 0), i32 noundef 69) #24, !dbg !7023
  br label %7, !dbg !7029

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7030
  %9 = and i32 %8, 2048, !dbg !7032
  %10 = icmp eq i32 %9, 0, !dbg !7032
  br i1 %10, label %12, label %11, !dbg !7033

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #24, !dbg !7034
  br label %12, !dbg !7040

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7041
  %14 = and i32 %13, 512, !dbg !7042
  %15 = icmp eq i32 %14, 0, !dbg !7042
  br i1 %15, label %26, label %16, !dbg !7043

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i32 0, i32 0), i32 noundef 69) #24, !dbg !7044
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !7049
  call void @llvm.dbg.value(metadata i32 %17, metadata !7010, metadata !DIExpression()), !dbg !7050
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7051
  %19 = and i32 %18, 32768, !dbg !7053
  %20 = icmp eq i32 %19, 0, !dbg !7054
  br i1 %20, label %26, label %21, !dbg !7055

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.25, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #24, !dbg !7056
  %22 = icmp eq i32 %0, 0, !dbg !7062
  br i1 %22, label %26, label %23, !dbg !7064

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7065
  %25 = and i32 %24, -32769, !dbg !7065
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7065
  br label %26, !dbg !7067

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7068
  %28 = and i32 %27, 1024, !dbg !7070
  %29 = icmp eq i32 %28, 0, !dbg !7070
  br i1 %29, label %31, label %30, !dbg !7071

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.26, i32 0, i32 0), i32 noundef 69) #24, !dbg !7072
  br label %31, !dbg !7078

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7079
  %33 = and i32 %32, 256, !dbg !7081
  %34 = icmp eq i32 %33, 0, !dbg !7082
  br i1 %34, label %35, label %39, !dbg !7083

35:                                               ; preds = %31
  %36 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7084
  %37 = and i32 %36, 8192, !dbg !7086
  %38 = icmp eq i32 %37, 0, !dbg !7086
  br i1 %38, label %41, label %39, !dbg !7087

39:                                               ; preds = %35, %31
  %40 = phi i8* [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.27, i32 0, i32 0), %31 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), %35 ]
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef %40, i32 noundef 69) #24, !dbg !7088
  br label %41, !dbg !7089

41:                                               ; preds = %39, %35
  %42 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7089
  %43 = or i32 %42, 65280, !dbg !7089
  store volatile i32 %43, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7089
  store i8 0, i8* %1, align 1, !dbg !7090
  ret void, !dbg !7091
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !7092 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7098, metadata !DIExpression()), !dbg !7100
  call void @llvm.dbg.value(metadata i32 0, metadata !7099, metadata !DIExpression()), !dbg !7100
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i32 0, i32 0), i32 noundef 69) #24, !dbg !7101
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7106
  %2 = and i32 %1, 33554432, !dbg !7108
  %3 = icmp eq i32 %2, 0, !dbg !7109
  br i1 %3, label %5, label %4, !dbg !7110

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.29.43, i32 0, i32 0), i32 noundef 69) #24, !dbg !7111
  br label %5, !dbg !7117

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7118
  %7 = and i32 %6, 16777216, !dbg !7120
  %8 = icmp eq i32 %7, 0, !dbg !7121
  br i1 %8, label %10, label %9, !dbg !7122

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.30, i32 0, i32 0), i32 noundef 69) #24, !dbg !7123
  br label %10, !dbg !7129

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7130
  %12 = and i32 %11, 524288, !dbg !7132
  %13 = icmp eq i32 %12, 0, !dbg !7133
  br i1 %13, label %15, label %14, !dbg !7134

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.31, i32 0, i32 0), i32 noundef 69) #24, !dbg !7135
  br label %15, !dbg !7141

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7142
  %17 = and i32 %16, 262144, !dbg !7144
  %18 = icmp eq i32 %17, 0, !dbg !7145
  br i1 %18, label %20, label %19, !dbg !7146

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.32, i32 0, i32 0), i32 noundef 69) #24, !dbg !7147
  br label %20, !dbg !7153

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7154
  %22 = and i32 %21, 131072, !dbg !7156
  %23 = icmp eq i32 %22, 0, !dbg !7157
  br i1 %23, label %25, label %24, !dbg !7158

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.33.44, i32 0, i32 0), i32 noundef 69) #24, !dbg !7159
  br label %25, !dbg !7165

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7166
  %27 = and i32 %26, 65536, !dbg !7168
  %28 = icmp eq i32 %27, 0, !dbg !7169
  br i1 %28, label %30, label %29, !dbg !7170

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.34, i32 0, i32 0), i32 noundef 69) #24, !dbg !7171
  br label %30, !dbg !7177

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7178
  %32 = or i32 %31, -65536, !dbg !7178
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7178
  ret void, !dbg !7179
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !7180 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7184, metadata !DIExpression()), !dbg !7186
  call void @llvm.dbg.value(metadata i8* %0, metadata !7185, metadata !DIExpression()), !dbg !7186
  store i8 0, i8* %0, align 1, !dbg !7187
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.35, i32 0, i32 0), i32 noundef 69) #24, !dbg !7188
  ret void, !dbg !7193
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !7194 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7198, metadata !DIExpression()), !dbg !7200
  call void @llvm.dbg.value(metadata i32 %0, metadata !7199, metadata !DIExpression()), !dbg !7200
  %2 = icmp slt i32 %0, 16, !dbg !7201
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.38, i32 0, i32 0), !dbg !7201
  %4 = add nsw i32 %0, -16, !dbg !7201
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.36, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #24, !dbg !7201
  ret void, !dbg !7206
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7207 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7211, metadata !DIExpression()), !dbg !7214
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7215
  %3 = load i32, i32* %2, align 4, !dbg !7215
  %4 = inttoptr i32 %3 to i16*, !dbg !7216
  call void @llvm.dbg.value(metadata i16* %4, metadata !7212, metadata !DIExpression()), !dbg !7214
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7217
  %6 = or i32 %5, 256, !dbg !7217
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7217
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7218, !srcloc !7221
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7222, !srcloc !7225
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !7226
  %8 = load i16, i16* %7, align 2, !dbg !7227
  call void @llvm.dbg.value(metadata i16 %8, metadata !7213, metadata !DIExpression()), !dbg !7214
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7228
  %10 = and i32 %9, -257, !dbg !7228
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7228
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7229, !srcloc !7221
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7231, !srcloc !7225
  %11 = icmp eq i16 %8, -8446, !dbg !7233
  ret i1 %11, !dbg !7235
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #15 !dbg !7236 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7237
  %2 = or i32 %1, 16, !dbg !7237
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7237
  ret void, !dbg !7238
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #15 !dbg !7239 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7242, metadata !DIExpression()), !dbg !7243
  br label %1, !dbg !7244

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7242, metadata !DIExpression()), !dbg !7243
  tail call fastcc void @__NVIC_SetPriority.58(i32 noundef %2) #25, !dbg !7246
  %3 = add nuw nsw i32 %2, 1, !dbg !7249
  call void @llvm.dbg.value(metadata i32 %3, metadata !7242, metadata !DIExpression()), !dbg !7243
  %4 = icmp eq i32 %3, 85, !dbg !7250
  br i1 %4, label %5, label %1, !dbg !7244, !llvm.loop !7251

5:                                                ; preds = %1
  ret void, !dbg !7253
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.58(i32 noundef %0) unnamed_addr #15 !dbg !7254 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7256, metadata !DIExpression()), !dbg !7258
  call void @llvm.dbg.value(metadata i32 1, metadata !7257, metadata !DIExpression()), !dbg !7258
  %2 = and i32 %0, 15, !dbg !7259
  %3 = add nsw i32 %2, -4, !dbg !7259
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !7259
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7259
  %6 = icmp slt i32 %0, 0, !dbg !7259
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !7259
  store volatile i8 16, i8* %7, align 1, !dbg !7260
  ret void, !dbg !7262
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !7263 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7372, metadata !DIExpression()), !dbg !7373
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7374
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !7376
  br i1 %3, label %4, label %12, !dbg !7377

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !7378, !srcloc !7390
  call void @llvm.dbg.value(metadata i32 %5, metadata !7381, metadata !DIExpression()) #23, !dbg !7391
  %6 = icmp eq i32 %5, 0, !dbg !7392
  br i1 %6, label %12, label %7, !dbg !7393

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7394
  %9 = or i32 %8, 268435456, !dbg !7394
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7394
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7396
  %11 = and i32 %10, -32769, !dbg !7396
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7396
  br label %12, !dbg !7397

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #24, !dbg !7398
  ret void, !dbg !7399
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !7400 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #24, !dbg !7401
  ret void, !dbg !7402
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !391 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !499, metadata !DIExpression()), !dbg !7403
  call void @llvm.dbg.value(metadata i8 0, metadata !500, metadata !DIExpression()), !dbg !7403
  call void @llvm.dbg.value(metadata i32 64, metadata !502, metadata !DIExpression()), !dbg !7403
  call void @llvm.dbg.value(metadata i32 undef, metadata !501, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7403
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !7404
  %3 = load i32, i32* %2, align 4, !dbg !7404
  call void @llvm.dbg.value(metadata i32 %3, metadata !501, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7403
  %4 = add i32 %3, -64, !dbg !7406
  call void @llvm.dbg.value(metadata i32 %4, metadata !501, metadata !DIExpression()), !dbg !7403
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !7407
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !7408
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !7409
  call void @llvm.dbg.value(metadata i8 1, metadata !500, metadata !DIExpression()), !dbg !7403
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #24, !dbg !7410
  ret void, !dbg !7411
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !7412 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7413
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7414, !srcloc !7417
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7418, !srcloc !7421
  ret void, !dbg !7422
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !7423 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #23, !dbg !7424, !srcloc !7427
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7428
  ret void, !dbg !7429
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !7430 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7445, metadata !DIExpression()), !dbg !7449
  call void @llvm.dbg.value(metadata i8 %1, metadata !7446, metadata !DIExpression()), !dbg !7449
  call void @llvm.dbg.value(metadata i32 %2, metadata !7447, metadata !DIExpression()), !dbg !7449
  call void @llvm.dbg.value(metadata i32 %3, metadata !7448, metadata !DIExpression()), !dbg !7449
  %5 = tail call fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #25, !dbg !7450
  %6 = icmp eq i32 %5, -22, !dbg !7452
  br i1 %6, label %7, label %9, !dbg !7453

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.68, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 283) #24, !dbg !7454
  %8 = zext i8 %1 to i32, !dbg !7454
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3.70, i32 0, i32 0), i32 noundef %8) #24, !dbg !7454
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 283) #24, !dbg !7454
  unreachable, !dbg !7454

9:                                                ; preds = %4
  ret void, !dbg !7459
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !7460 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7465, metadata !DIExpression()), !dbg !7470
  call void @llvm.dbg.value(metadata i8 %1, metadata !7466, metadata !DIExpression()), !dbg !7470
  call void @llvm.dbg.value(metadata i32 undef, metadata !7467, metadata !DIExpression()), !dbg !7470
  call void @llvm.dbg.value(metadata i32 undef, metadata !7468, metadata !DIExpression()), !dbg !7470
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7471
  call void @llvm.dbg.value(metadata i8 %3, metadata !7469, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7470
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #25, !dbg !7472
  call void @llvm.dbg.value(metadata i32 %4, metadata !7469, metadata !DIExpression()), !dbg !7470
  %5 = trunc i32 %4 to i8, !dbg !7473
  store i8 %5, i8* @static_regions_num, align 1, !dbg !7474
  ret i32 %4, !dbg !7475
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #1 !dbg !7476 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7480, metadata !DIExpression()), !dbg !7486
  call void @llvm.dbg.value(metadata i8 %1, metadata !7481, metadata !DIExpression()), !dbg !7486
  call void @llvm.dbg.value(metadata i8 %2, metadata !7482, metadata !DIExpression()), !dbg !7486
  call void @llvm.dbg.value(metadata i1 %3, metadata !7483, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7486
  %5 = zext i8 %2 to i32, !dbg !7487
  call void @llvm.dbg.value(metadata i32 %5, metadata !7485, metadata !DIExpression()), !dbg !7486
  call void @llvm.dbg.value(metadata i32 0, metadata !7484, metadata !DIExpression()), !dbg !7486
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !7485, metadata !DIExpression()), !dbg !7486
  call void @llvm.dbg.value(metadata i32 0, metadata !7484, metadata !DIExpression()), !dbg !7486
  %7 = icmp eq i8 %1, 0, !dbg !7488
  br i1 %7, label %30, label %8, !dbg !7491

8:                                                ; preds = %4, %26
  %9 = phi i32 [ %27, %26 ], [ %5, %4 ]
  %10 = phi i32 [ %28, %26 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7485, metadata !DIExpression()), !dbg !7486
  call void @llvm.dbg.value(metadata i32 %10, metadata !7484, metadata !DIExpression()), !dbg !7486
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !7492
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !7495
  %13 = load i32, i32* %12, align 4, !dbg !7495
  %14 = icmp eq i32 %13, 0, !dbg !7496
  br i1 %14, label %26, label %15, !dbg !7497

15:                                               ; preds = %8
  br i1 %3, label %16, label %20, !dbg !7498

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #25, !dbg !7500
  %18 = icmp eq i32 %17, 0, !dbg !7500
  br i1 %18, label %19, label %20, !dbg !7501

19:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8.71, i32 0, i32 0), i32 noundef 69, i32 noundef %10) #24, !dbg !7502
  br label %30, !dbg !7508

20:                                               ; preds = %16, %15
  %21 = trunc i32 %9 to i8, !dbg !7509
  %22 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %21, %struct.z_arm_mpu_partition* noundef nonnull %11) #25, !dbg !7510
  call void @llvm.dbg.value(metadata i32 %22, metadata !7485, metadata !DIExpression()), !dbg !7486
  %23 = icmp eq i32 %22, -22, !dbg !7511
  br i1 %23, label %30, label %24, !dbg !7513

24:                                               ; preds = %20
  %25 = add nsw i32 %22, 1, !dbg !7514
  call void @llvm.dbg.value(metadata i32 %25, metadata !7485, metadata !DIExpression()), !dbg !7486
  br label %26, !dbg !7515

26:                                               ; preds = %8, %24
  %27 = phi i32 [ %9, %8 ], [ %25, %24 ], !dbg !7486
  call void @llvm.dbg.value(metadata i32 %27, metadata !7485, metadata !DIExpression()), !dbg !7486
  %28 = add nuw nsw i32 %10, 1, !dbg !7516
  call void @llvm.dbg.value(metadata i32 %28, metadata !7484, metadata !DIExpression()), !dbg !7486
  %29 = icmp eq i32 %28, %6, !dbg !7488
  br i1 %29, label %30, label %8, !dbg !7491, !llvm.loop !7517

30:                                               ; preds = %20, %26, %4, %19
  %31 = phi i32 [ -22, %19 ], [ %5, %4 ], [ -22, %20 ], [ %27, %26 ], !dbg !7486
  ret i32 %31, !dbg !7519
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #16 !dbg !7520 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7524, metadata !DIExpression()), !dbg !7526
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !7527
  %3 = load i32, i32* %2, align 4, !dbg !7527
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !7528, !range !7529
  %5 = icmp ult i32 %4, 2, !dbg !7528
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !7530
  br i1 %7, label %8, label %15, !dbg !7530

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !7531
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !7532
  %11 = load i32, i32* %10, align 4, !dbg !7532
  %12 = and i32 %11, %9, !dbg !7533
  %13 = icmp eq i32 %12, 0, !dbg !7534
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !7525, metadata !DIExpression()), !dbg !7526
  ret i32 %16, !dbg !7535
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7536 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !7540, metadata !DIExpression()), !dbg !7543
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !7541, metadata !DIExpression()), !dbg !7543
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !7544
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #23, !dbg !7544
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !7542, metadata !DIExpression()), !dbg !7545
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !7546
  %6 = load i32, i32* %5, align 4, !dbg !7546
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !7547
  store i32 %6, i32* %7, align 4, !dbg !7548
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !7549
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !7550
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !7551
  %11 = load i32, i32* %10, align 4, !dbg !7551
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* noundef nonnull %8, %struct.k_spinlock* noundef nonnull %9, i32 noundef %11) #25, !dbg !7552
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #25, !dbg !7553
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #23, !dbg !7554
  ret i32 %12, !dbg !7555
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* nocapture noundef writeonly %0, %struct.k_spinlock* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #17 !dbg !7556 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !7563, metadata !DIExpression()), !dbg !7567
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !7564, metadata !DIExpression()), !dbg !7567
  call void @llvm.dbg.value(metadata i32 undef, metadata !7565, metadata !DIExpression()), !dbg !7567
  call void @llvm.dbg.value(metadata i32 %2, metadata !7566, metadata !DIExpression()), !dbg !7567
  %4 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %1, i32 0, i32 0, !dbg !7568
  %5 = load i32, i32* %4, align 4, !dbg !7568
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #25, !dbg !7569
  %7 = or i32 %6, %5, !dbg !7570
  %8 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !7571
  store i32 %7, i32* %8, align 4, !dbg !7572
  ret void, !dbg !7573
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7574 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7578, metadata !DIExpression()), !dbg !7580
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7579, metadata !DIExpression()), !dbg !7580
  %3 = zext i8 %0 to i32, !dbg !7581
  %4 = icmp ugt i8 %0, 7, !dbg !7583
  br i1 %4, label %5, label %6, !dbg !7584

5:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.9.72, i32 0, i32 0), i32 noundef 69, i32 noundef %3) #24, !dbg !7585
  br label %7, !dbg !7591

6:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #25, !dbg !7592
  br label %7, !dbg !7593

7:                                                ; preds = %6, %5
  %8 = phi i32 [ -22, %5 ], [ %3, %6 ], !dbg !7580
  ret i32 %8, !dbg !7594
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !7595 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7599, metadata !DIExpression()), !dbg !7601
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7600, metadata !DIExpression()), !dbg !7601
  tail call fastcc void @set_region_number(i32 noundef %0) #25, !dbg !7602
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !7603
  %4 = load i32, i32* %3, align 4, !dbg !7603
  %5 = and i32 %4, -32, !dbg !7604
  %6 = or i32 %5, %0, !dbg !7605
  %7 = or i32 %6, 16, !dbg !7605
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7606
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !7607
  %9 = load i32, i32* %8, align 4, !dbg !7607
  %10 = or i32 %9, 1, !dbg !7608
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7609
  ret void, !dbg !7610
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #15 !dbg !7611 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7614, metadata !DIExpression()), !dbg !7615
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7616
  ret void, !dbg !7617
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #13 !dbg !7618 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7622, metadata !DIExpression()), !dbg !7623
  %2 = icmp ult i32 %0, 33, !dbg !7624
  br i1 %2, label %11, label %3, !dbg !7626

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !7627
  br i1 %4, label %11, label %5, !dbg !7629

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !7630
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !7631, !range !7529
  %8 = mul nsw i32 %7, -2, !dbg !7632
  %9 = add nsw i32 %8, 62, !dbg !7632
  %10 = and i32 %9, 62, !dbg !7633
  br label %11, !dbg !7634

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !7623
  ret i32 %12, !dbg !7635
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !7636 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7640, metadata !DIExpression()), !dbg !7642
  call void @llvm.dbg.value(metadata i8 %1, metadata !7641, metadata !DIExpression()), !dbg !7642
  %3 = tail call fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #25, !dbg !7643
  %4 = icmp eq i32 %3, -22, !dbg !7645
  br i1 %4, label %5, label %7, !dbg !7646

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.68, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 314) #24, !dbg !7647
  %6 = zext i8 %1 to i32, !dbg !7647
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4.75, i32 0, i32 0), i32 noundef %6) #24, !dbg !7647
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 314) #24, !dbg !7647
  unreachable, !dbg !7647

7:                                                ; preds = %2
  ret void, !dbg !7652
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !7653 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7657, metadata !DIExpression()), !dbg !7664
  call void @llvm.dbg.value(metadata i8 %1, metadata !7658, metadata !DIExpression()), !dbg !7664
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7665
  call void @llvm.dbg.value(metadata i8 %3, metadata !7659, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7664
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #25, !dbg !7666
  call void @llvm.dbg.value(metadata i32 %4, metadata !7659, metadata !DIExpression()), !dbg !7664
  %5 = icmp ne i32 %4, -22, !dbg !7667
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !7668
  call void @llvm.dbg.value(metadata i32 %4, metadata !7660, metadata !DIExpression()), !dbg !7669
  br i1 %7, label %8, label %12, !dbg !7668

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7660, metadata !DIExpression()), !dbg !7669
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #25, !dbg !7670
  %10 = add i32 %9, 1, !dbg !7673
  call void @llvm.dbg.value(metadata i32 %10, metadata !7660, metadata !DIExpression()), !dbg !7669
  %11 = icmp eq i32 %10, 8, !dbg !7674
  br i1 %11, label %12, label %8, !dbg !7675, !llvm.loop !7676

12:                                               ; preds = %8, %2
  ret i32 %4, !dbg !7678
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #15 !dbg !7679 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7682, metadata !DIExpression()), !dbg !7683
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7684
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7685
  ret void, !dbg !7686
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !7687 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !7692
  %2 = icmp ugt i32 %1, 8, !dbg !7694
  br i1 %2, label %3, label %4, !dbg !7695

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.68, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 341) #24, !dbg !7696
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5.76, i32 0, i32 0), i32 noundef %1, i32 noundef 8) #24, !dbg !7696
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 341) #24, !dbg !7696
  unreachable, !dbg !7696

4:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #25, !dbg !7701
  call void @llvm.dbg.value(metadata i32 0, metadata !7691, metadata !DIExpression()), !dbg !7702
  %5 = icmp eq i32 %1, 0, !dbg !7703
  br i1 %5, label %13, label %6, !dbg !7706

6:                                                ; preds = %4
  %7 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %8, !dbg !7706

8:                                                ; preds = %6, %8
  %9 = phi i32 [ 0, %6 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7691, metadata !DIExpression()), !dbg !7702
  %10 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %7, i32 %9, !dbg !7707
  tail call fastcc void @region_init(i32 noundef %9, %struct.arm_mpu_region* noundef %10) #25, !dbg !7709
  %11 = add nuw i32 %9, 1, !dbg !7710
  call void @llvm.dbg.value(metadata i32 %11, metadata !7691, metadata !DIExpression()), !dbg !7702
  %12 = icmp eq i32 %11, %1, !dbg !7703
  br i1 %12, label %13, label %8, !dbg !7706, !llvm.loop !7711

13:                                               ; preds = %8, %4
  %14 = trunc i32 %1 to i8, !dbg !7713
  store i8 %14, i8* @static_regions_num, align 1, !dbg !7714
  tail call void @arm_core_mpu_enable() #25, !dbg !7715
  %15 = load volatile i32, i32* inttoptr (i32 -536810096 to i32*), align 16, !dbg !7716
  %16 = and i32 %15, 65280, !dbg !7716
  %17 = icmp eq i32 %16, 2048, !dbg !7716
  br i1 %17, label %19, label %18, !dbg !7719

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.6.77, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 435) #24, !dbg !7720
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.78, i32 0, i32 0)) #24, !dbg !7720
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 435) #24, !dbg !7720
  unreachable, !dbg !7720

19:                                               ; preds = %13
  ret i32 0, !dbg !7722
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !7723 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7730, metadata !DIExpression()), !dbg !7733
  call void @llvm.dbg.value(metadata i8* %1, metadata !7731, metadata !DIExpression()), !dbg !7733
  call void @llvm.dbg.value(metadata i8* %0, metadata !7732, metadata !DIExpression()), !dbg !7733
  %3 = load i8, i8* %1, align 1, !dbg !7734
  %4 = icmp eq i8 %3, 0, !dbg !7735
  br i1 %4, label %13, label %5, !dbg !7736

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !7730, metadata !DIExpression()), !dbg !7733
  call void @llvm.dbg.value(metadata i8* %8, metadata !7731, metadata !DIExpression()), !dbg !7733
  store i8 %6, i8* %7, align 1, !dbg !7737
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7739
  call void @llvm.dbg.value(metadata i8* %9, metadata !7730, metadata !DIExpression()), !dbg !7733
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7740
  call void @llvm.dbg.value(metadata i8* %10, metadata !7731, metadata !DIExpression()), !dbg !7733
  %11 = load i8, i8* %10, align 1, !dbg !7734
  %12 = icmp eq i8 %11, 0, !dbg !7735
  br i1 %12, label %13, label %5, !dbg !7736, !llvm.loop !7741

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !7743
  ret i8* %0, !dbg !7744
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7745 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7749, metadata !DIExpression()), !dbg !7753
  call void @llvm.dbg.value(metadata i8* %1, metadata !7750, metadata !DIExpression()), !dbg !7753
  call void @llvm.dbg.value(metadata i32 %2, metadata !7751, metadata !DIExpression()), !dbg !7753
  call void @llvm.dbg.value(metadata i8* %0, metadata !7752, metadata !DIExpression()), !dbg !7753
  %4 = icmp eq i32 %2, 0, !dbg !7754
  br i1 %4, label %22, label %5, !dbg !7755

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7749, metadata !DIExpression()), !dbg !7753
  call void @llvm.dbg.value(metadata i32 %7, metadata !7751, metadata !DIExpression()), !dbg !7753
  call void @llvm.dbg.value(metadata i8* %8, metadata !7750, metadata !DIExpression()), !dbg !7753
  %9 = load i8, i8* %8, align 1, !dbg !7756
  %10 = icmp eq i8 %9, 0, !dbg !7757
  br i1 %10, label %16, label %11, !dbg !7758

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !7759
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7761
  call void @llvm.dbg.value(metadata i8* %12, metadata !7750, metadata !DIExpression()), !dbg !7753
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7762
  call void @llvm.dbg.value(metadata i8* %13, metadata !7749, metadata !DIExpression()), !dbg !7753
  %14 = add i32 %7, -1, !dbg !7763
  call void @llvm.dbg.value(metadata i32 %14, metadata !7751, metadata !DIExpression()), !dbg !7753
  %15 = icmp eq i32 %14, 0, !dbg !7754
  br i1 %15, label %22, label %5, !dbg !7755, !llvm.loop !7764

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !7749, metadata !DIExpression()), !dbg !7753
  call void @llvm.dbg.value(metadata i32 %18, metadata !7751, metadata !DIExpression()), !dbg !7753
  store i8 0, i8* %17, align 1, !dbg !7766
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7768
  call void @llvm.dbg.value(metadata i8* %19, metadata !7749, metadata !DIExpression()), !dbg !7753
  %20 = add i32 %18, -1, !dbg !7769
  call void @llvm.dbg.value(metadata i32 %20, metadata !7751, metadata !DIExpression()), !dbg !7753
  %21 = icmp eq i32 %20, 0, !dbg !7770
  br i1 %21, label %22, label %16, !dbg !7771, !llvm.loop !7772

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !7774
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !7775 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7779, metadata !DIExpression()), !dbg !7782
  call void @llvm.dbg.value(metadata i32 %1, metadata !7780, metadata !DIExpression()), !dbg !7782
  call void @llvm.dbg.value(metadata i32 %1, metadata !7781, metadata !DIExpression()), !dbg !7782
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7783

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !7779, metadata !DIExpression()), !dbg !7782
  %6 = load i8, i8* %5, align 1, !dbg !7784
  %7 = icmp eq i8 %6, %3, !dbg !7785
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !7786
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7787
  call void @llvm.dbg.value(metadata i8* %10, metadata !7779, metadata !DIExpression()), !dbg !7782
  br i1 %9, label %11, label %4, !dbg !7786, !llvm.loop !7789

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !7791
  ret i8* %12, !dbg !7792
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !7793 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7795, metadata !DIExpression()), !dbg !7798
  call void @llvm.dbg.value(metadata i32 %1, metadata !7796, metadata !DIExpression()), !dbg !7798
  call void @llvm.dbg.value(metadata i8* null, metadata !7797, metadata !DIExpression()), !dbg !7798
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7799

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !7798
  call void @llvm.dbg.value(metadata i8* %6, metadata !7797, metadata !DIExpression()), !dbg !7798
  call void @llvm.dbg.value(metadata i8* %5, metadata !7795, metadata !DIExpression()), !dbg !7798
  %7 = load i8, i8* %5, align 1, !dbg !7800
  %8 = icmp eq i8 %7, %3, !dbg !7803
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !7804
  call void @llvm.dbg.value(metadata i8* %9, metadata !7797, metadata !DIExpression()), !dbg !7798
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7805
  call void @llvm.dbg.value(metadata i8* %10, metadata !7795, metadata !DIExpression()), !dbg !7798
  %11 = icmp eq i8 %7, 0, !dbg !7806
  br i1 %11, label %12, label %4, !dbg !7806, !llvm.loop !7807

12:                                               ; preds = %4
  ret i8* %9, !dbg !7809
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !7810 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7814, metadata !DIExpression()), !dbg !7816
  call void @llvm.dbg.value(metadata i32 0, metadata !7815, metadata !DIExpression()), !dbg !7816
  %2 = load i8, i8* %0, align 1, !dbg !7817
  %3 = icmp eq i8 %2, 0, !dbg !7818
  br i1 %3, label %11, label %4, !dbg !7819

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7815, metadata !DIExpression()), !dbg !7816
  call void @llvm.dbg.value(metadata i8* %6, metadata !7814, metadata !DIExpression()), !dbg !7816
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7820
  call void @llvm.dbg.value(metadata i8* %7, metadata !7814, metadata !DIExpression()), !dbg !7816
  %8 = add i32 %5, 1, !dbg !7822
  call void @llvm.dbg.value(metadata i32 %8, metadata !7815, metadata !DIExpression()), !dbg !7816
  %9 = load i8, i8* %7, align 1, !dbg !7817
  %10 = icmp eq i8 %9, 0, !dbg !7818
  br i1 %10, label %11, label %4, !dbg !7819, !llvm.loop !7823

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !7816
  ret i32 %12, !dbg !7825
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !7826 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7830, metadata !DIExpression()), !dbg !7833
  call void @llvm.dbg.value(metadata i32 %1, metadata !7831, metadata !DIExpression()), !dbg !7833
  call void @llvm.dbg.value(metadata i32 0, metadata !7832, metadata !DIExpression()), !dbg !7833
  %3 = load i8, i8* %0, align 1, !dbg !7834
  %4 = icmp ne i8 %3, 0, !dbg !7835
  %5 = icmp ne i32 %1, 0, !dbg !7836
  %6 = and i1 %4, %5, !dbg !7836
  br i1 %6, label %7, label %16, !dbg !7837

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7832, metadata !DIExpression()), !dbg !7833
  call void @llvm.dbg.value(metadata i8* %9, metadata !7830, metadata !DIExpression()), !dbg !7833
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7838
  call void @llvm.dbg.value(metadata i8* %10, metadata !7830, metadata !DIExpression()), !dbg !7833
  %11 = add nuw i32 %8, 1, !dbg !7840
  call void @llvm.dbg.value(metadata i32 %11, metadata !7832, metadata !DIExpression()), !dbg !7833
  %12 = load i8, i8* %10, align 1, !dbg !7834
  %13 = icmp ne i8 %12, 0, !dbg !7835
  %14 = icmp ult i32 %11, %1, !dbg !7836
  %15 = select i1 %13, i1 %14, i1 false, !dbg !7836
  br i1 %15, label %7, label %16, !dbg !7837, !llvm.loop !7841

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !7833
  ret i32 %17, !dbg !7843
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !7844 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7848, metadata !DIExpression()), !dbg !7850
  call void @llvm.dbg.value(metadata i8* %1, metadata !7849, metadata !DIExpression()), !dbg !7850
  %3 = load i8, i8* %0, align 1, !dbg !7851
  %4 = load i8, i8* %1, align 1, !dbg !7852
  %5 = icmp ne i8 %3, %4, !dbg !7853
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !7854
  br i1 %7, label %18, label %8, !dbg !7854

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7849, metadata !DIExpression()), !dbg !7850
  call void @llvm.dbg.value(metadata i8* %10, metadata !7848, metadata !DIExpression()), !dbg !7850
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7855
  call void @llvm.dbg.value(metadata i8* %11, metadata !7848, metadata !DIExpression()), !dbg !7850
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7857
  call void @llvm.dbg.value(metadata i8* %12, metadata !7849, metadata !DIExpression()), !dbg !7850
  %13 = load i8, i8* %11, align 1, !dbg !7851
  %14 = load i8, i8* %12, align 1, !dbg !7852
  %15 = icmp ne i8 %13, %14, !dbg !7853
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !7854
  br i1 %17, label %18, label %8, !dbg !7854, !llvm.loop !7858

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !7851
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !7852
  %21 = zext i8 %19 to i32, !dbg !7861
  %22 = zext i8 %20 to i32, !dbg !7862
  %23 = sub nsw i32 %21, %22, !dbg !7863
  ret i32 %23, !dbg !7864
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #8 !dbg !7865 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7869, metadata !DIExpression()), !dbg !7872
  call void @llvm.dbg.value(metadata i8* %1, metadata !7870, metadata !DIExpression()), !dbg !7872
  call void @llvm.dbg.value(metadata i32 %2, metadata !7871, metadata !DIExpression()), !dbg !7872
  %4 = icmp eq i32 %2, 0, !dbg !7873
  br i1 %4, label %23, label %5, !dbg !7873

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !7871, metadata !DIExpression()), !dbg !7872
  call void @llvm.dbg.value(metadata i8* %7, metadata !7870, metadata !DIExpression()), !dbg !7872
  call void @llvm.dbg.value(metadata i8* %8, metadata !7869, metadata !DIExpression()), !dbg !7872
  %9 = load i8, i8* %8, align 1, !dbg !7874
  %10 = load i8, i8* %7, align 1, !dbg !7875
  %11 = icmp ne i8 %9, %10, !dbg !7876
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !7877
  br i1 %13, label %19, label %14, !dbg !7877

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7878
  call void @llvm.dbg.value(metadata i8* %15, metadata !7869, metadata !DIExpression()), !dbg !7872
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7880
  call void @llvm.dbg.value(metadata i8* %16, metadata !7870, metadata !DIExpression()), !dbg !7872
  %17 = add i32 %6, -1, !dbg !7881
  call void @llvm.dbg.value(metadata i32 %17, metadata !7871, metadata !DIExpression()), !dbg !7872
  %18 = icmp eq i32 %17, 0, !dbg !7873
  br i1 %18, label %23, label %5, !dbg !7873, !llvm.loop !7882

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !7885
  %21 = zext i8 %10 to i32, !dbg !7886
  %22 = sub nsw i32 %20, %21, !dbg !7887
  br label %23, !dbg !7888

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !7888
  ret i32 %24, !dbg !7889
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #14 !dbg !7890 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7894, metadata !DIExpression()), !dbg !7899
  call void @llvm.dbg.value(metadata i8* %1, metadata !7895, metadata !DIExpression()), !dbg !7899
  call void @llvm.dbg.value(metadata i8** %2, metadata !7896, metadata !DIExpression()), !dbg !7899
  %4 = icmp eq i8* %0, null, !dbg !7900
  br i1 %4, label %5, label %7, !dbg !7900

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !7901
  br label %7, !dbg !7900

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !7900
  call void @llvm.dbg.value(metadata i8* %8, metadata !7897, metadata !DIExpression()), !dbg !7899
  %9 = load i8, i8* %8, align 1, !dbg !7902
  %10 = icmp eq i8 %9, 0, !dbg !7902
  br i1 %10, label %33, label %11, !dbg !7903

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7897, metadata !DIExpression()), !dbg !7899
  %14 = zext i8 %12 to i32, !dbg !7902
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #25, !dbg !7904
  %16 = icmp eq i8* %15, null, !dbg !7903
  br i1 %16, label %21, label %17, !dbg !7905

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7906
  call void @llvm.dbg.value(metadata i8* %18, metadata !7897, metadata !DIExpression()), !dbg !7899
  %19 = load i8, i8* %18, align 1, !dbg !7902
  %20 = icmp eq i8 %19, 0, !dbg !7902
  br i1 %20, label %33, label %11, !dbg !7903, !llvm.loop !7908

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !7898, metadata !DIExpression()), !dbg !7899
  %24 = zext i8 %22 to i32, !dbg !7910
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #25, !dbg !7911
  %26 = icmp eq i8* %25, null, !dbg !7912
  br i1 %26, label %27, label %31, !dbg !7913

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7914
  call void @llvm.dbg.value(metadata i8* %28, metadata !7898, metadata !DIExpression()), !dbg !7899
  %29 = load i8, i8* %28, align 1, !dbg !7910
  %30 = icmp eq i8 %29, 0, !dbg !7910
  br i1 %30, label %33, label %21, !dbg !7916, !llvm.loop !7917

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !7919
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7922
  br label %33, !dbg !7923

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !7899
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !7899
  store i8* %34, i8** %2, align 4, !dbg !7899
  ret i8* %35, !dbg !7924
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !7925 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7927, metadata !DIExpression()), !dbg !7929
  call void @llvm.dbg.value(metadata i8* %1, metadata !7928, metadata !DIExpression()), !dbg !7929
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !7930
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7931
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #25, !dbg !7932
  ret i8* %0, !dbg !7933
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7934 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7936, metadata !DIExpression()), !dbg !7941
  call void @llvm.dbg.value(metadata i8* %1, metadata !7937, metadata !DIExpression()), !dbg !7941
  call void @llvm.dbg.value(metadata i32 %2, metadata !7938, metadata !DIExpression()), !dbg !7941
  call void @llvm.dbg.value(metadata i8* %0, metadata !7939, metadata !DIExpression()), !dbg !7941
  %4 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !7942
  call void @llvm.dbg.value(metadata i32 %4, metadata !7940, metadata !DIExpression()), !dbg !7941
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !7943
  call void @llvm.dbg.value(metadata i8* %5, metadata !7936, metadata !DIExpression()), !dbg !7941
  call void @llvm.dbg.value(metadata i8* %1, metadata !7937, metadata !DIExpression()), !dbg !7941
  call void @llvm.dbg.value(metadata i32 %2, metadata !7938, metadata !DIExpression()), !dbg !7941
  call void @llvm.dbg.value(metadata i32 %2, metadata !7938, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7941
  %6 = icmp eq i32 %2, 0, !dbg !7944
  br i1 %6, label %18, label %7, !dbg !7945

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !7946
  call void @llvm.dbg.value(metadata i8* %9, metadata !7936, metadata !DIExpression()), !dbg !7941
  call void @llvm.dbg.value(metadata i8* %10, metadata !7937, metadata !DIExpression()), !dbg !7941
  %12 = load i8, i8* %10, align 1, !dbg !7947
  %13 = icmp eq i8 %12, 0, !dbg !7948
  br i1 %13, label %18, label %14, !dbg !7949

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7950
  call void @llvm.dbg.value(metadata i8* %15, metadata !7937, metadata !DIExpression()), !dbg !7941
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7952
  call void @llvm.dbg.value(metadata i8* %16, metadata !7936, metadata !DIExpression()), !dbg !7941
  store i8 %12, i8* %9, align 1, !dbg !7953
  call void @llvm.dbg.value(metadata i32 %11, metadata !7938, metadata !DIExpression()), !dbg !7941
  call void @llvm.dbg.value(metadata i32 %11, metadata !7938, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7941
  %17 = icmp eq i32 %11, 0, !dbg !7944
  br i1 %17, label %18, label %7, !dbg !7945, !llvm.loop !7954

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !7941
  store i8 0, i8* %19, align 1, !dbg !7956
  ret i8* %0, !dbg !7957
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #8 !dbg !7958 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7962, metadata !DIExpression()), !dbg !7967
  call void @llvm.dbg.value(metadata i8* %1, metadata !7963, metadata !DIExpression()), !dbg !7967
  call void @llvm.dbg.value(metadata i32 %2, metadata !7964, metadata !DIExpression()), !dbg !7967
  call void @llvm.dbg.value(metadata i8* %0, metadata !7965, metadata !DIExpression()), !dbg !7967
  call void @llvm.dbg.value(metadata i8* %1, metadata !7966, metadata !DIExpression()), !dbg !7967
  %4 = icmp eq i32 %2, 0, !dbg !7968
  br i1 %4, label %31, label %5, !dbg !7970

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7966, metadata !DIExpression()), !dbg !7967
  call void @llvm.dbg.value(metadata i8* %0, metadata !7965, metadata !DIExpression()), !dbg !7967
  call void @llvm.dbg.value(metadata i32 %2, metadata !7964, metadata !DIExpression()), !dbg !7967
  %6 = add i32 %2, -1, !dbg !7971
  call void @llvm.dbg.value(metadata i32 %6, metadata !7964, metadata !DIExpression()), !dbg !7967
  %7 = icmp eq i32 %6, 0, !dbg !7972
  br i1 %7, label %23, label %8, !dbg !7973

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !7974
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !7974
  br label %11, !dbg !7974

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7966, metadata !DIExpression()), !dbg !7967
  call void @llvm.dbg.value(metadata i8* %14, metadata !7965, metadata !DIExpression()), !dbg !7967
  %15 = load i8, i8* %14, align 1, !dbg !7975
  %16 = load i8, i8* %13, align 1, !dbg !7976
  %17 = icmp eq i8 %15, %16, !dbg !7977
  br i1 %17, label %18, label %23, !dbg !7974

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !7978
  call void @llvm.dbg.value(metadata i8* %19, metadata !7965, metadata !DIExpression()), !dbg !7967
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7980
  call void @llvm.dbg.value(metadata i8* %20, metadata !7966, metadata !DIExpression()), !dbg !7967
  call void @llvm.dbg.value(metadata i32 %12, metadata !7964, metadata !DIExpression()), !dbg !7967
  %21 = add i32 %12, -1, !dbg !7971
  call void @llvm.dbg.value(metadata i32 %21, metadata !7964, metadata !DIExpression()), !dbg !7967
  %22 = icmp eq i32 %21, 0, !dbg !7972
  br i1 %22, label %23, label %11, !dbg !7973, !llvm.loop !7981

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !7967
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !7967
  %26 = load i8, i8* %24, align 1, !dbg !7983
  %27 = zext i8 %26 to i32, !dbg !7983
  %28 = load i8, i8* %25, align 1, !dbg !7984
  %29 = zext i8 %28 to i32, !dbg !7984
  %30 = sub nsw i32 %27, %29, !dbg !7985
  br label %31, !dbg !7986

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !7967
  ret i32 %32, !dbg !7987
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7988 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7992, metadata !DIExpression()), !dbg !7997
  call void @llvm.dbg.value(metadata i8* %1, metadata !7993, metadata !DIExpression()), !dbg !7997
  call void @llvm.dbg.value(metadata i32 %2, metadata !7994, metadata !DIExpression()), !dbg !7997
  call void @llvm.dbg.value(metadata i8* %0, metadata !7995, metadata !DIExpression()), !dbg !7997
  call void @llvm.dbg.value(metadata i8* %1, metadata !7996, metadata !DIExpression()), !dbg !7997
  %4 = ptrtoint i8* %0 to i32, !dbg !7998
  %5 = ptrtoint i8* %1 to i32, !dbg !7998
  %6 = sub i32 %4, %5, !dbg !7998
  %7 = icmp ult i32 %6, %2, !dbg !8000
  br i1 %7, label %10, label %8, !dbg !8001

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7996, metadata !DIExpression()), !dbg !7997
  call void @llvm.dbg.value(metadata i8* %0, metadata !7995, metadata !DIExpression()), !dbg !7997
  call void @llvm.dbg.value(metadata i32 %2, metadata !7994, metadata !DIExpression()), !dbg !7997
  %9 = icmp eq i32 %2, 0, !dbg !8002
  br i1 %9, label %26, label %17, !dbg !8004

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !7994, metadata !DIExpression()), !dbg !7997
  %12 = add i32 %11, -1, !dbg !8005
  call void @llvm.dbg.value(metadata i32 %12, metadata !7994, metadata !DIExpression()), !dbg !7997
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !8008
  %14 = load i8, i8* %13, align 1, !dbg !8008
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !8009
  store i8 %14, i8* %15, align 1, !dbg !8010
  %16 = icmp eq i32 %12, 0, !dbg !8011
  br i1 %16, label %26, label %10, !dbg !8012, !llvm.loop !8013

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !7996, metadata !DIExpression()), !dbg !7997
  call void @llvm.dbg.value(metadata i8* %19, metadata !7995, metadata !DIExpression()), !dbg !7997
  call void @llvm.dbg.value(metadata i32 %20, metadata !7994, metadata !DIExpression()), !dbg !7997
  %21 = load i8, i8* %18, align 1, !dbg !8015
  store i8 %21, i8* %19, align 1, !dbg !8017
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !8018
  call void @llvm.dbg.value(metadata i8* %22, metadata !7995, metadata !DIExpression()), !dbg !7997
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !8019
  call void @llvm.dbg.value(metadata i8* %23, metadata !7996, metadata !DIExpression()), !dbg !7997
  %24 = add i32 %20, -1, !dbg !8020
  call void @llvm.dbg.value(metadata i32 %24, metadata !7994, metadata !DIExpression()), !dbg !7997
  %25 = icmp eq i32 %24, 0, !dbg !8002
  br i1 %25, label %26, label %17, !dbg !8004, !llvm.loop !8021

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !8023
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !8024 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8030, metadata !DIExpression()), !dbg !8035
  call void @llvm.dbg.value(metadata i8* %1, metadata !8031, metadata !DIExpression()), !dbg !8035
  call void @llvm.dbg.value(metadata i32 %2, metadata !8032, metadata !DIExpression()), !dbg !8035
  call void @llvm.dbg.value(metadata i8* %0, metadata !8033, metadata !DIExpression()), !dbg !8035
  call void @llvm.dbg.value(metadata i8* %1, metadata !8034, metadata !DIExpression()), !dbg !8035
  %4 = icmp eq i32 %2, 0, !dbg !8036
  br i1 %4, label %14, label %5, !dbg !8037

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8034, metadata !DIExpression()), !dbg !8035
  call void @llvm.dbg.value(metadata i8* %7, metadata !8033, metadata !DIExpression()), !dbg !8035
  call void @llvm.dbg.value(metadata i32 %8, metadata !8032, metadata !DIExpression()), !dbg !8035
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8038
  call void @llvm.dbg.value(metadata i8* %9, metadata !8034, metadata !DIExpression()), !dbg !8035
  %10 = load i8, i8* %6, align 1, !dbg !8040
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8041
  call void @llvm.dbg.value(metadata i8* %11, metadata !8033, metadata !DIExpression()), !dbg !8035
  store i8 %10, i8* %7, align 1, !dbg !8042
  %12 = add i32 %8, -1, !dbg !8043
  call void @llvm.dbg.value(metadata i32 %12, metadata !8032, metadata !DIExpression()), !dbg !8035
  %13 = icmp eq i32 %12, 0, !dbg !8036
  br i1 %13, label %14, label %5, !dbg !8037, !llvm.loop !8044

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !8046
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #18 !dbg !8047 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8051, metadata !DIExpression()), !dbg !8056
  call void @llvm.dbg.value(metadata i32 %1, metadata !8052, metadata !DIExpression()), !dbg !8056
  call void @llvm.dbg.value(metadata i32 %2, metadata !8053, metadata !DIExpression()), !dbg !8056
  call void @llvm.dbg.value(metadata i8* %0, metadata !8054, metadata !DIExpression()), !dbg !8056
  %4 = trunc i32 %1 to i8, !dbg !8057
  call void @llvm.dbg.value(metadata i8 %4, metadata !8055, metadata !DIExpression()), !dbg !8056
  call void @llvm.dbg.value(metadata i32 %2, metadata !8053, metadata !DIExpression()), !dbg !8056
  call void @llvm.dbg.value(metadata i8* %0, metadata !8054, metadata !DIExpression()), !dbg !8056
  %5 = icmp eq i32 %2, 0, !dbg !8058
  br i1 %5, label %12, label %6, !dbg !8059

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !8053, metadata !DIExpression()), !dbg !8056
  call void @llvm.dbg.value(metadata i8* %8, metadata !8054, metadata !DIExpression()), !dbg !8056
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8060
  call void @llvm.dbg.value(metadata i8* %9, metadata !8054, metadata !DIExpression()), !dbg !8056
  store i8 %4, i8* %8, align 1, !dbg !8062
  %10 = add i32 %7, -1, !dbg !8063
  call void @llvm.dbg.value(metadata i32 %10, metadata !8053, metadata !DIExpression()), !dbg !8056
  %11 = icmp eq i32 %10, 0, !dbg !8058
  br i1 %11, label %12, label %6, !dbg !8059, !llvm.loop !8064

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !8066
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #8 !dbg !8067 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8071, metadata !DIExpression()), !dbg !8077
  call void @llvm.dbg.value(metadata i32 %1, metadata !8072, metadata !DIExpression()), !dbg !8077
  call void @llvm.dbg.value(metadata i32 %2, metadata !8073, metadata !DIExpression()), !dbg !8077
  %4 = icmp eq i32 %2, 0, !dbg !8078
  br i1 %4, label %17, label %5, !dbg !8079

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !8080

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !8081
  call void @llvm.dbg.value(metadata i8* %9, metadata !8074, metadata !DIExpression()), !dbg !8081
  call void @llvm.dbg.value(metadata i32 %8, metadata !8073, metadata !DIExpression()), !dbg !8077
  call void @llvm.dbg.value(metadata i8* %9, metadata !8074, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8081
  %10 = load i8, i8* %9, align 1, !dbg !8082
  %11 = icmp eq i8 %10, %6, !dbg !8085
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !8086
  call void @llvm.dbg.value(metadata i8* %12, metadata !8074, metadata !DIExpression()), !dbg !8081
  call void @llvm.dbg.value(metadata i32 %13, metadata !8073, metadata !DIExpression()), !dbg !8077
  br i1 %15, label %16, label %7, !dbg !8086, !llvm.loop !8087

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !8089

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !8077
  ret i8* %19, !dbg !8090
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #9 !dbg !8091 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !8093, metadata !DIExpression()), !dbg !8094
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !8095
  ret void, !dbg !8096
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #6 !dbg !8097 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8099, metadata !DIExpression()), !dbg !8100
  ret i32 -1, !dbg !8101
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8102 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8106, metadata !DIExpression()), !dbg !8108
  call void @llvm.dbg.value(metadata i32* %1, metadata !8107, metadata !DIExpression()), !dbg !8108
  %3 = ptrtoint i32* %1 to i32, !dbg !8109
  %4 = and i32 %3, -2, !dbg !8109
  %5 = icmp eq i32 %4, 2, !dbg !8109
  br i1 %5, label %6, label %9, !dbg !8109

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8110
  %8 = tail call i32 %7(i32 noundef %0) #24, !dbg !8110
  br label %9, !dbg !8111

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !8111
  ret i32 %10, !dbg !8112
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8113 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8115, metadata !DIExpression()), !dbg !8117
  call void @llvm.dbg.value(metadata i32* %1, metadata !8116, metadata !DIExpression()), !dbg !8117
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #25, !dbg !8118
  ret i32 %3, !dbg !8119
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !8120 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8123, metadata !DIExpression()), !dbg !8125
  call void @llvm.dbg.value(metadata i32* %1, metadata !8124, metadata !DIExpression()), !dbg !8125
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8126, !srcloc !8128
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #25, !dbg !8129
  ret i32 %3, !dbg !8130
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !8131 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8136, metadata !DIExpression()), !dbg !8140
  call void @llvm.dbg.value(metadata i32* %1, metadata !8137, metadata !DIExpression()), !dbg !8140
  %3 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !8141
  call void @llvm.dbg.value(metadata i32 %3, metadata !8138, metadata !DIExpression()), !dbg !8140
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #25, !dbg !8142
  call void @llvm.dbg.value(metadata i32 %4, metadata !8139, metadata !DIExpression()), !dbg !8140
  %5 = icmp ne i32 %3, %4, !dbg !8143
  %6 = sext i1 %5 to i32, !dbg !8144
  ret i32 %6, !dbg !8145
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !8146 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8150, metadata !DIExpression()), !dbg !8154
  call void @llvm.dbg.value(metadata i32 %1, metadata !8151, metadata !DIExpression()), !dbg !8154
  call void @llvm.dbg.value(metadata i32 %2, metadata !8152, metadata !DIExpression()), !dbg !8154
  call void @llvm.dbg.value(metadata i32* %3, metadata !8153, metadata !DIExpression()), !dbg !8154
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #25, !dbg !8155
  ret i32 %5, !dbg !8156
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !8157 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8159, metadata !DIExpression()), !dbg !8163
  call void @llvm.dbg.value(metadata i32 %1, metadata !8160, metadata !DIExpression()), !dbg !8163
  call void @llvm.dbg.value(metadata i32 %2, metadata !8161, metadata !DIExpression()), !dbg !8163
  call void @llvm.dbg.value(metadata i32* %3, metadata !8162, metadata !DIExpression()), !dbg !8163
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8164, !srcloc !8166
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #25, !dbg !8167
  ret i32 %5, !dbg !8168
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !8169 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8171, metadata !DIExpression()), !dbg !8179
  call void @llvm.dbg.value(metadata i32 %1, metadata !8172, metadata !DIExpression()), !dbg !8179
  call void @llvm.dbg.value(metadata i32 %2, metadata !8173, metadata !DIExpression()), !dbg !8179
  call void @llvm.dbg.value(metadata i32* %3, metadata !8174, metadata !DIExpression()), !dbg !8179
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !8180
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !8182
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !8182
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !8182
  br i1 %11, label %33, label %12, !dbg !8182

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !8179
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !8179
  call void @llvm.dbg.value(metadata i8* %14, metadata !8177, metadata !DIExpression()), !dbg !8179
  call void @llvm.dbg.value(metadata i32 %13, metadata !8175, metadata !DIExpression()), !dbg !8179
  call void @llvm.dbg.value(metadata i32 %1, metadata !8176, metadata !DIExpression()), !dbg !8179
  br label %15, !dbg !8183

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !8185
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !8179
  call void @llvm.dbg.value(metadata i8* %17, metadata !8177, metadata !DIExpression()), !dbg !8179
  call void @llvm.dbg.value(metadata i32 %16, metadata !8176, metadata !DIExpression()), !dbg !8179
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8186
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8189
  call void @llvm.dbg.value(metadata i8* %19, metadata !8177, metadata !DIExpression()), !dbg !8179
  %20 = load i8, i8* %17, align 1, !dbg !8190
  %21 = zext i8 %20 to i32, !dbg !8191
  %22 = tail call i32 %18(i32 noundef %21) #24, !dbg !8186
  %23 = icmp eq i32 %22, -1, !dbg !8192
  br i1 %23, label %30, label %24, !dbg !8193

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !8194
  call void @llvm.dbg.value(metadata i32 %25, metadata !8176, metadata !DIExpression()), !dbg !8179
  %26 = icmp eq i32 %25, 0, !dbg !8195
  br i1 %26, label %27, label %15, !dbg !8196, !llvm.loop !8197

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !8199
  call void @llvm.dbg.value(metadata i32 %28, metadata !8175, metadata !DIExpression()), !dbg !8179
  %29 = icmp eq i32 %28, 0, !dbg !8200
  br i1 %29, label %30, label %12, !dbg !8201, !llvm.loop !8202

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !8179
  call void @llvm.dbg.value(metadata i32 %31, metadata !8175, metadata !DIExpression()), !dbg !8179
  call void @llvm.dbg.label(metadata !8178), !dbg !8205
  %32 = sub i32 %2, %31, !dbg !8206
  br label %33, !dbg !8207

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !8179
  ret i32 %34, !dbg !8208
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !8209 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8213, metadata !DIExpression()), !dbg !8214
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #25, !dbg !8215
  %3 = icmp eq i32 %2, -1, !dbg !8217
  br i1 %3, label %8, label %4, !dbg !8218

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #25, !dbg !8219
  %6 = icmp eq i32 %5, -1, !dbg !8220
  %7 = sext i1 %6 to i32, !dbg !8219
  br label %8, !dbg !8221

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !8214
  ret i32 %9, !dbg !8222
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintf(i8* noalias noundef %0, i32 noundef %1, i8* noalias noundef %2, ...) local_unnamed_addr #1 !dbg !8223 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca %struct.emitter, align 4
  %6 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !8228, metadata !DIExpression()), !dbg !8245
  call void @llvm.dbg.value(metadata i32 %1, metadata !8229, metadata !DIExpression()), !dbg !8245
  call void @llvm.dbg.value(metadata i8* %2, metadata !8230, metadata !DIExpression()), !dbg !8245
  %7 = bitcast %struct.__va_list* %4 to i8*, !dbg !8246
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #23, !dbg !8246
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !8231, metadata !DIExpression()), !dbg !8247
  %8 = bitcast %struct.emitter* %5 to i8*, !dbg !8248
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #23, !dbg !8248
  call void @llvm.dbg.declare(metadata %struct.emitter* %5, metadata !8238, metadata !DIExpression()), !dbg !8249
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !8250
  %9 = icmp eq i32 %1, 0, !dbg !8251
  %10 = select i1 %9, i8* %6, i8* %0, !dbg !8253
  call void @llvm.dbg.value(metadata i8* %10, metadata !8228, metadata !DIExpression()), !dbg !8245
  %11 = getelementptr inbounds %struct.emitter, %struct.emitter* %5, i32 0, i32 0, !dbg !8254
  store i8* %10, i8** %11, align 4, !dbg !8255
  %12 = getelementptr inbounds %struct.emitter, %struct.emitter* %5, i32 0, i32 1, !dbg !8256
  store i32 %1, i32* %12, align 4, !dbg !8257
  call void @llvm.va_start(i8* nonnull %7), !dbg !8258
  %13 = bitcast %struct.__va_list* %4 to i32*, !dbg !8259
  %14 = load i32, i32* %13, align 4, !dbg !8259
  %15 = insertvalue [1 x i32] poison, i32 %14, 0, !dbg !8259
  %16 = call fastcc i32 @cbvprintf.85(i8* noundef nonnull %8, i8* noundef %2, [1 x i32] %15) #25, !dbg !8259
  call void @llvm.dbg.value(metadata i32 %16, metadata !8243, metadata !DIExpression()), !dbg !8245
  call void @llvm.va_end(i8* nonnull %7), !dbg !8260
  %17 = load i8*, i8** %11, align 4, !dbg !8261
  store i8 0, i8* %17, align 1, !dbg !8262
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !8263
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #23, !dbg !8263
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #23, !dbg !8263
  ret i32 %16, !dbg !8264
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbvprintf.85(i8* noundef %0, i8* noundef %1, [1 x i32] %2) unnamed_addr #1 !dbg !8265 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !8272, metadata !DIExpression()), !dbg !8273
  call void @llvm.dbg.value(metadata i32 (...)* bitcast (i32 (i32, %struct.emitter*)* @sprintf_out to i32 (...)*), metadata !8269, metadata !DIExpression()), !dbg !8273
  call void @llvm.dbg.value(metadata i8* %0, metadata !8270, metadata !DIExpression()), !dbg !8273
  call void @llvm.dbg.value(metadata i8* %1, metadata !8271, metadata !DIExpression()), !dbg !8273
  %4 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef bitcast (i32 (i32, %struct.emitter*)* @sprintf_out to i32 (...)*), i8* noundef %0, i8* noundef %1, [1 x i32] %2, i32 noundef 0) #24, !dbg !8274
  ret i32 %4, !dbg !8275
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @sprintf_out(i32 noundef %0, %struct.emitter* nocapture noundef %1) #11 !dbg !8276 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8281, metadata !DIExpression()), !dbg !8283
  call void @llvm.dbg.value(metadata %struct.emitter* %1, metadata !8282, metadata !DIExpression()), !dbg !8283
  %3 = getelementptr inbounds %struct.emitter, %struct.emitter* %1, i32 0, i32 1, !dbg !8284
  %4 = load i32, i32* %3, align 4, !dbg !8284
  %5 = icmp sgt i32 %4, 1, !dbg !8286
  br i1 %5, label %6, label %14, !dbg !8287

6:                                                ; preds = %2
  %7 = trunc i32 %0 to i8, !dbg !8288
  %8 = getelementptr inbounds %struct.emitter, %struct.emitter* %1, i32 0, i32 0, !dbg !8290
  %9 = load i8*, i8** %8, align 4, !dbg !8290
  store i8 %7, i8* %9, align 1, !dbg !8291
  %10 = load i8*, i8** %8, align 4, !dbg !8292
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8292
  store i8* %11, i8** %8, align 4, !dbg !8292
  %12 = load i32, i32* %3, align 4, !dbg !8293
  %13 = add nsw i32 %12, -1, !dbg !8293
  store i32 %13, i32* %3, align 4, !dbg !8293
  br label %14, !dbg !8294

14:                                               ; preds = %6, %2
  ret i32 0, !dbg !8295
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sprintf(i8* noalias noundef %0, i8* noalias noundef %1, ...) local_unnamed_addr #1 !dbg !8296 {
  %3 = alloca %struct.__va_list, align 4
  %4 = alloca %struct.emitter, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !8300, metadata !DIExpression()), !dbg !8305
  call void @llvm.dbg.value(metadata i8* %1, metadata !8301, metadata !DIExpression()), !dbg !8305
  %5 = bitcast %struct.__va_list* %3 to i8*, !dbg !8306
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !8306
  call void @llvm.dbg.declare(metadata %struct.__va_list* %3, metadata !8302, metadata !DIExpression()), !dbg !8307
  %6 = bitcast %struct.emitter* %4 to i8*, !dbg !8308
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #23, !dbg !8308
  call void @llvm.dbg.declare(metadata %struct.emitter* %4, metadata !8303, metadata !DIExpression()), !dbg !8309
  %7 = getelementptr inbounds %struct.emitter, %struct.emitter* %4, i32 0, i32 0, !dbg !8310
  store i8* %0, i8** %7, align 4, !dbg !8311
  %8 = getelementptr inbounds %struct.emitter, %struct.emitter* %4, i32 0, i32 1, !dbg !8312
  store i32 2147483647, i32* %8, align 4, !dbg !8313
  call void @llvm.va_start(i8* nonnull %5), !dbg !8314
  %9 = bitcast %struct.__va_list* %3 to i32*, !dbg !8315
  %10 = load i32, i32* %9, align 4, !dbg !8315
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !8315
  %12 = call fastcc i32 @cbvprintf.85(i8* noundef nonnull %6, i8* noundef %1, [1 x i32] %11) #25, !dbg !8315
  call void @llvm.dbg.value(metadata i32 %12, metadata !8304, metadata !DIExpression()), !dbg !8305
  call void @llvm.va_end(i8* nonnull %5), !dbg !8316
  %13 = load i8*, i8** %7, align 4, !dbg !8317
  store i8 0, i8* %13, align 1, !dbg !8318
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #23, !dbg !8319
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !8319
  ret i32 %12, !dbg !8320
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintf(i8* noalias noundef %0, i32 noundef %1, i8* noalias noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !8321 {
  %5 = alloca %struct.emitter, align 4
  %6 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !8328, metadata !DIExpression()), !dbg !8332
  call void @llvm.dbg.value(metadata i8* %0, metadata !8325, metadata !DIExpression()), !dbg !8332
  call void @llvm.dbg.value(metadata i32 %1, metadata !8326, metadata !DIExpression()), !dbg !8332
  call void @llvm.dbg.value(metadata i8* %2, metadata !8327, metadata !DIExpression()), !dbg !8332
  %7 = bitcast %struct.emitter* %5 to i8*, !dbg !8333
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #23, !dbg !8333
  call void @llvm.dbg.declare(metadata %struct.emitter* %5, metadata !8329, metadata !DIExpression()), !dbg !8334
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !8335
  %8 = icmp eq i32 %1, 0, !dbg !8336
  %9 = select i1 %8, i8* %6, i8* %0, !dbg !8338
  call void @llvm.dbg.value(metadata i8* %9, metadata !8325, metadata !DIExpression()), !dbg !8332
  %10 = getelementptr inbounds %struct.emitter, %struct.emitter* %5, i32 0, i32 0, !dbg !8339
  store i8* %9, i8** %10, align 4, !dbg !8340
  %11 = getelementptr inbounds %struct.emitter, %struct.emitter* %5, i32 0, i32 1, !dbg !8341
  store i32 %1, i32* %11, align 4, !dbg !8342
  %12 = call fastcc i32 @cbvprintf.85(i8* noundef nonnull %7, i8* noundef %2, [1 x i32] %3) #25, !dbg !8343
  call void @llvm.dbg.value(metadata i32 %12, metadata !8330, metadata !DIExpression()), !dbg !8332
  %13 = load i8*, i8** %10, align 4, !dbg !8344
  store i8 0, i8* %13, align 1, !dbg !8345
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !8346
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #23, !dbg !8346
  ret i32 %12, !dbg !8347
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsprintf(i8* noalias noundef %0, i8* noalias noundef %1, [1 x i32] %2) local_unnamed_addr #1 !dbg !8348 {
  %4 = alloca %struct.emitter, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !8354, metadata !DIExpression()), !dbg !8357
  call void @llvm.dbg.value(metadata i8* %0, metadata !8352, metadata !DIExpression()), !dbg !8357
  call void @llvm.dbg.value(metadata i8* %1, metadata !8353, metadata !DIExpression()), !dbg !8357
  %5 = bitcast %struct.emitter* %4 to i8*, !dbg !8358
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #23, !dbg !8358
  call void @llvm.dbg.declare(metadata %struct.emitter* %4, metadata !8355, metadata !DIExpression()), !dbg !8359
  %6 = getelementptr inbounds %struct.emitter, %struct.emitter* %4, i32 0, i32 0, !dbg !8360
  store i8* %0, i8** %6, align 4, !dbg !8361
  %7 = getelementptr inbounds %struct.emitter, %struct.emitter* %4, i32 0, i32 1, !dbg !8362
  store i32 2147483647, i32* %7, align 4, !dbg !8363
  %8 = call fastcc i32 @cbvprintf.85(i8* noundef nonnull %5, i8* noundef %1, [1 x i32] %2) #25, !dbg !8364
  call void @llvm.dbg.value(metadata i32 %8, metadata !8356, metadata !DIExpression()), !dbg !8357
  %9 = load i8*, i8** %6, align 4, !dbg !8365
  store i8 0, i8* %9, align 1, !dbg !8366
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #23, !dbg !8367
  ret i32 %8, !dbg !8368
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !8369 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8371, metadata !DIExpression()), !dbg !8372
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #25, !dbg !8373
  ret void, !dbg !8374
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !8375 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8379, metadata !DIExpression()), !dbg !8385
  call void @llvm.dbg.value(metadata i32 %1, metadata !8380, metadata !DIExpression()), !dbg !8385
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !8381, metadata !DIExpression()), !dbg !8385
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !8386
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !8386
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !8386
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !8382, metadata !DIExpression()), !dbg !8385
  call void @llvm.dbg.value(metadata i32 %0, metadata !8384, metadata !DIExpression()), !dbg !8385
  %7 = icmp slt i32 %0, %1, !dbg !8387
  br i1 %7, label %8, label %22, !dbg !8390

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8384, metadata !DIExpression()), !dbg !8385
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #25, !dbg !8391
  %11 = icmp eq i32 %10, 0, !dbg !8391
  br i1 %11, label %19, label %12, !dbg !8394

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #25, !dbg !8395
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !8397
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !8397
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !8399
  br i1 %15, label %19, label %16, !dbg !8400

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !8401
  %18 = load i8*, i8** %17, align 4, !dbg !8401
  tail call void %14(i32 noundef %9, i8* noundef %18) #24, !dbg !8402
  br label %19, !dbg !8403

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !8404
  call void @llvm.dbg.value(metadata i32 %20, metadata !8384, metadata !DIExpression()), !dbg !8385
  %21 = icmp eq i32 %20, %1, !dbg !8387
  br i1 %21, label %22, label %8, !dbg !8390, !llvm.loop !8405

22:                                               ; preds = %19, %3
  ret void, !dbg !8407
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #5 !dbg !8408 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8410, metadata !DIExpression()), !dbg !8411
  %2 = shl nuw i32 1, %0, !dbg !8412
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #25, !dbg !8415
  ret i32 %3, !dbg !8416
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #15 !dbg !8417 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8421, metadata !DIExpression()), !dbg !8422
  %2 = shl nuw i32 1, %0, !dbg !8423
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #25, !dbg !8426
  ret void, !dbg !8427
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8428 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8431, metadata !DIExpression()), !dbg !8432
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !8433
  ret void, !dbg !8434
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #5 !dbg !8435 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8437, metadata !DIExpression()), !dbg !8438
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !8439
  %3 = and i32 %2, %0, !dbg !8439
  %4 = icmp eq i32 %3, %0, !dbg !8440
  %5 = zext i1 %4 to i32, !dbg !8440
  ret i32 %5, !dbg !8441
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !8442 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8444, metadata !DIExpression()), !dbg !8445
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #25, !dbg !8446
  ret void, !dbg !8447
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !8448 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8450, metadata !DIExpression()), !dbg !8451
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #25, !dbg !8452
  ret void, !dbg !8453
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !8454 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8456, metadata !DIExpression()), !dbg !8457
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #25, !dbg !8458
  ret void, !dbg !8459
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !8460 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8462, metadata !DIExpression()), !dbg !8463
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #25, !dbg !8464
  ret void, !dbg !8465
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !8466 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8468, metadata !DIExpression()), !dbg !8469
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #25, !dbg !8470
  ret void, !dbg !8471
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !8472 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8474, metadata !DIExpression()), !dbg !8475
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #25, !dbg !8476
  ret void, !dbg !8477
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !8478 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8480, metadata !DIExpression()), !dbg !8481
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #25, !dbg !8482
  ret void, !dbg !8483
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !8484 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8486, metadata !DIExpression()), !dbg !8487
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #25, !dbg !8488
  ret void, !dbg !8489
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !8490 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8492, metadata !DIExpression()), !dbg !8493
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #25, !dbg !8494
  ret void, !dbg !8495
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !8496 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8498, metadata !DIExpression()), !dbg !8499
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #25, !dbg !8500
  ret void, !dbg !8501
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8502 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8504, metadata !DIExpression()), !dbg !8505
  tail call fastcc void @__stm32_exti_connect_irqs() #25, !dbg !8506
  ret i32 0, !dbg !8507
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !734 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !738, metadata !DIExpression()), !dbg !8508
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #24, !dbg !8509
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #24, !dbg !8511
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #24, !dbg !8513
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #24, !dbg !8515
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #24, !dbg !8517
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #24, !dbg !8519
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #24, !dbg !8521
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #24, !dbg !8523
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #24, !dbg !8525
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #24, !dbg !8527
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #24, !dbg !8529
  ret void, !dbg !8531
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !8532 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8534, metadata !DIExpression()), !dbg !8536
  call void @llvm.dbg.value(metadata i32 0, metadata !8535, metadata !DIExpression()), !dbg !8536
  call void @llvm.dbg.value(metadata i32 undef, metadata !8535, metadata !DIExpression()), !dbg !8536
  %2 = lshr i32 6684671, %0, !dbg !8537
  %3 = and i32 %2, 1, !dbg !8537
  %4 = or i32 %3, %0, !dbg !8539
  %5 = icmp eq i32 %4, 0, !dbg !8539
  br i1 %5, label %6, label %7, !dbg !8539

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.94, i32 0, i32 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.95, i32 0, i32 0), i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.96, i32 0, i32 0), i32 noundef 123) #24, !dbg !8540
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.96, i32 0, i32 0), i32 noundef 123) #24, !dbg !8540
  unreachable, !dbg !8540

7:                                                ; preds = %1
  %8 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !8545
  %9 = load i32, i32* %8, align 4, !dbg !8545
  call void @llvm.dbg.value(metadata i32 %9, metadata !8535, metadata !DIExpression()), !dbg !8536
  %10 = shl nuw i32 1, %0, !dbg !8546
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %10) #25, !dbg !8547
  tail call void @arch_irq_enable(i32 noundef %9) #24, !dbg !8548
  ret void, !dbg !8549
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8550 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8552, metadata !DIExpression()), !dbg !8553
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8554
  %3 = or i32 %2, %0, !dbg !8554
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8554
  ret void, !dbg !8555
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #15 !dbg !8556 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8558, metadata !DIExpression()), !dbg !8559
  %2 = icmp slt i32 %0, 32, !dbg !8560
  br i1 %2, label %3, label %5, !dbg !8562

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !8563
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #25, !dbg !8565
  br label %5, !dbg !8566

5:                                                ; preds = %1, %3
  ret void, !dbg !8567
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8568 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8570, metadata !DIExpression()), !dbg !8571
  %2 = xor i32 %0, -1, !dbg !8572
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8572
  %4 = and i32 %3, %2, !dbg !8572
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8572
  ret void, !dbg !8573
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #15 !dbg !8574 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8578, metadata !DIExpression()), !dbg !8580
  call void @llvm.dbg.value(metadata i32 %1, metadata !8579, metadata !DIExpression()), !dbg !8580
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !8581

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !8582
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #25, !dbg !8584
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #25, !dbg !8585
  br label %11, !dbg !8586

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !8587
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #25, !dbg !8588
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #25, !dbg !8589
  br label %11, !dbg !8590

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !8591
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #25, !dbg !8592
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #25, !dbg !8593
  br label %11, !dbg !8594

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !8595
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #25, !dbg !8596
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #25, !dbg !8597
  br label %11, !dbg !8598

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !8599
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8600 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8602, metadata !DIExpression()), !dbg !8603
  %2 = xor i32 %0, -1, !dbg !8604
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8604
  %4 = and i32 %3, %2, !dbg !8604
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8604
  ret void, !dbg !8605
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8606 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8608, metadata !DIExpression()), !dbg !8609
  %2 = xor i32 %0, -1, !dbg !8610
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8610
  %4 = and i32 %3, %2, !dbg !8610
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8610
  ret void, !dbg !8611
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8612 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8614, metadata !DIExpression()), !dbg !8615
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8616
  %3 = or i32 %2, %0, !dbg !8616
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8616
  ret void, !dbg !8617
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8618 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8620, metadata !DIExpression()), !dbg !8621
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8622
  %3 = or i32 %2, %0, !dbg !8622
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8622
  ret void, !dbg !8623
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #11 !dbg !8624 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8628, metadata !DIExpression()), !dbg !8634
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !8629, metadata !DIExpression()), !dbg !8634
  call void @llvm.dbg.value(metadata i8* %2, metadata !8630, metadata !DIExpression()), !dbg !8634
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_39, metadata !8631, metadata !DIExpression()), !dbg !8634
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8633, metadata !DIExpression()), !dbg !8634
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8635
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !8635
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !8637
  br i1 %6, label %7, label %9, !dbg !8638

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !8639
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8640
  store i8* %2, i8** %8, align 4, !dbg !8641
  br label %9, !dbg !8642

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !8634
  ret i32 %10, !dbg !8643
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #9 !dbg !8644 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8646, metadata !DIExpression()), !dbg !8649
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_39, metadata !8647, metadata !DIExpression()), !dbg !8649
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8648, metadata !DIExpression()), !dbg !8649
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8650
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !8651
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8652
  store i8* null, i8** %3, align 4, !dbg !8653
  ret void, !dbg !8654
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !8655 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8657, metadata !DIExpression()), !dbg !8662
  call void @llvm.dbg.value(metadata i8* %1, metadata !8658, metadata !DIExpression()), !dbg !8662
  call void @llvm.dbg.value(metadata i8* %1, metadata !8659, metadata !DIExpression()), !dbg !8662
  %3 = bitcast i8* %1 to i32*, !dbg !8663
  %4 = load i32, i32* %3, align 4, !dbg !8663
  %5 = add i32 %4, -169, !dbg !8663
  %6 = icmp ult i32 %5, -121, !dbg !8663
  br i1 %6, label %15, label %7, !dbg !8665

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8666
  %9 = inttoptr i32 %8 to i32*, !dbg !8667
  call void @llvm.dbg.value(metadata i32* %9, metadata !8660, metadata !DIExpression()), !dbg !8662
  %10 = load volatile i32, i32* %9, align 4, !dbg !8668
  call void @llvm.dbg.value(metadata i32 %10, metadata !8661, metadata !DIExpression()), !dbg !8662
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8669
  %12 = bitcast i8* %11 to i32*, !dbg !8669
  %13 = load i32, i32* %12, align 4, !dbg !8669
  %14 = or i32 %13, %10, !dbg !8670
  call void @llvm.dbg.value(metadata i32 %14, metadata !8661, metadata !DIExpression()), !dbg !8662
  store volatile i32 %14, i32* %9, align 4, !dbg !8671
  br label %15, !dbg !8672

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8662
  ret i32 %16, !dbg !8673
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !8674 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8676, metadata !DIExpression()), !dbg !8681
  call void @llvm.dbg.value(metadata i8* %1, metadata !8677, metadata !DIExpression()), !dbg !8681
  call void @llvm.dbg.value(metadata i8* %1, metadata !8678, metadata !DIExpression()), !dbg !8681
  %3 = bitcast i8* %1 to i32*, !dbg !8682
  %4 = load i32, i32* %3, align 4, !dbg !8682
  %5 = add i32 %4, -169, !dbg !8682
  %6 = icmp ult i32 %5, -121, !dbg !8682
  br i1 %6, label %16, label %7, !dbg !8684

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8685
  %9 = inttoptr i32 %8 to i32*, !dbg !8686
  call void @llvm.dbg.value(metadata i32* %9, metadata !8679, metadata !DIExpression()), !dbg !8681
  %10 = load volatile i32, i32* %9, align 4, !dbg !8687
  call void @llvm.dbg.value(metadata i32 %10, metadata !8680, metadata !DIExpression()), !dbg !8681
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8688
  %12 = bitcast i8* %11 to i32*, !dbg !8688
  %13 = load i32, i32* %12, align 4, !dbg !8688
  %14 = xor i32 %13, -1, !dbg !8689
  %15 = and i32 %10, %14, !dbg !8690
  call void @llvm.dbg.value(metadata i32 %15, metadata !8680, metadata !DIExpression()), !dbg !8681
  store volatile i32 %15, i32* %9, align 4, !dbg !8691
  br label %16, !dbg !8692

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8681
  ret i32 %17, !dbg !8693
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !8694 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8696, metadata !DIExpression()), !dbg !8704
  call void @llvm.dbg.value(metadata i8* %1, metadata !8697, metadata !DIExpression()), !dbg !8704
  call void @llvm.dbg.value(metadata i32* %2, metadata !8698, metadata !DIExpression()), !dbg !8704
  call void @llvm.dbg.value(metadata i8* %1, metadata !8699, metadata !DIExpression()), !dbg !8704
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !8705
  call void @llvm.dbg.value(metadata i32 %4, metadata !8700, metadata !DIExpression()), !dbg !8704
  call void @llvm.dbg.value(metadata i32 undef, metadata !8701, metadata !DIExpression()), !dbg !8704
  call void @llvm.dbg.value(metadata i32 undef, metadata !8702, metadata !DIExpression()), !dbg !8704
  call void @llvm.dbg.value(metadata i32 %4, metadata !8703, metadata !DIExpression()), !dbg !8704
  %5 = bitcast i8* %1 to i32*, !dbg !8706
  %6 = load i32, i32* %5, align 4, !dbg !8706
  switch i32 %6, label %21 [
    i32 48, label %19
    i32 52, label %19
    i32 56, label %19
    i32 64, label %7
    i32 68, label %9
    i32 168, label %19
    i32 6, label %19
    i32 1, label %11
    i32 2, label %14
    i32 4, label %17
    i32 5, label %18
  ], !dbg !8707

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #25, !dbg !8708
  call void @llvm.dbg.value(metadata i32 %8, metadata !8701, metadata !DIExpression()), !dbg !8704
  br label %19, !dbg !8709

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 1) #25, !dbg !8711
  call void @llvm.dbg.value(metadata i32 %10, metadata !8702, metadata !DIExpression()), !dbg !8704
  br label %19, !dbg !8712

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #24, !dbg !8713
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12, i32 noundef 4) #25, !dbg !8714
  br label %19, !dbg !8715

14:                                               ; preds = %3
  %15 = tail call i32 @get_pllsrc_frequency() #24, !dbg !8716
  %16 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %15, i32 noundef 7) #25, !dbg !8717
  br label %19, !dbg !8718

17:                                               ; preds = %3
  br label %19, !dbg !8719

18:                                               ; preds = %3
  br label %19, !dbg !8720

19:                                               ; preds = %3, %3, %3, %3, %3, %18, %17, %14, %11, %9, %7
  %20 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ %16, %14 ], [ 0, %17 ], [ 32000, %18 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %20, i32* %2, align 4, !dbg !8721
  br label %21, !dbg !8722

21:                                               ; preds = %19, %3
  %22 = phi i32 [ -134, %3 ], [ 0, %19 ], !dbg !8704
  ret i32 %22, !dbg !8722
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #15 !dbg !8723 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8725, metadata !DIExpression()), !dbg !8733
  call void @llvm.dbg.value(metadata i8* %1, metadata !8726, metadata !DIExpression()), !dbg !8733
  call void @llvm.dbg.value(metadata i8* %2, metadata !8727, metadata !DIExpression()), !dbg !8733
  call void @llvm.dbg.value(metadata i8* %1, metadata !8728, metadata !DIExpression()), !dbg !8733
  %4 = bitcast i8* %1 to i32*, !dbg !8734
  %5 = load i32, i32* %4, align 4, !dbg !8734
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #25, !dbg !8735
  call void @llvm.dbg.value(metadata i32 %6, metadata !8732, metadata !DIExpression()), !dbg !8733
  %7 = icmp slt i32 %6, 0, !dbg !8736
  br i1 %7, label %22, label %8, !dbg !8738

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8728, metadata !DIExpression()), !dbg !8733
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8739
  %10 = bitcast i8* %9 to i32*, !dbg !8739
  %11 = load i32, i32* %10, align 4, !dbg !8739
  %12 = lshr i32 %11, 16, !dbg !8739
  %13 = and i32 %12, 7, !dbg !8739
  %14 = lshr i32 %11, 8, !dbg !8740
  %15 = and i32 %14, 31, !dbg !8740
  %16 = shl i32 %13, %15, !dbg !8741
  call void @llvm.dbg.value(metadata i32 %16, metadata !8731, metadata !DIExpression()), !dbg !8733
  %17 = and i32 %11, 255, !dbg !8742
  %18 = or i32 %17, 1073887232, !dbg !8743
  %19 = inttoptr i32 %18 to i32*, !dbg !8744
  call void @llvm.dbg.value(metadata i32* %19, metadata !8729, metadata !DIExpression()), !dbg !8733
  %20 = load volatile i32, i32* %19, align 4, !dbg !8745
  call void @llvm.dbg.value(metadata i32 %20, metadata !8730, metadata !DIExpression()), !dbg !8733
  %21 = or i32 %16, %20, !dbg !8746
  call void @llvm.dbg.value(metadata i32 %21, metadata !8730, metadata !DIExpression()), !dbg !8733
  store volatile i32 %21, i32* %19, align 4, !dbg !8747
  br label %22, !dbg !8748

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !8733
  ret i32 %23, !dbg !8749
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #6 !dbg !8750 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8754, metadata !DIExpression()), !dbg !8756
  call void @llvm.dbg.value(metadata i32 0, metadata !8755, metadata !DIExpression()), !dbg !8756
  %2 = add i32 %0, -1, !dbg !8757
  %3 = icmp ult i32 %2, 6, !dbg !8757
  br i1 %3, label %4, label %7, !dbg !8757

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !8757
  %6 = load i32, i32* %5, align 4, !dbg !8757
  call void @llvm.dbg.value(metadata i32 %6, metadata !8755, metadata !DIExpression()), !dbg !8756
  br label %7, !dbg !8758

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !8756
  ret i32 %8, !dbg !8759
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #6 !dbg !8760 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8764, metadata !DIExpression()), !dbg !8766
  call void @llvm.dbg.value(metadata i32 %1, metadata !8765, metadata !DIExpression()), !dbg !8766
  %3 = udiv i32 %0, %1, !dbg !8767
  ret i32 %3, !dbg !8768
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #6 !dbg !8769 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8773, metadata !DIExpression()), !dbg !8777
  call void @llvm.dbg.value(metadata i32 16, metadata !8774, metadata !DIExpression()), !dbg !8777
  call void @llvm.dbg.value(metadata i32 336, metadata !8775, metadata !DIExpression()), !dbg !8777
  call void @llvm.dbg.value(metadata i32 %1, metadata !8776, metadata !DIExpression()), !dbg !8777
  %3 = mul i32 %0, 336, !dbg !8778
  %4 = shl nsw i32 %1, 4, !dbg !8779
  %5 = udiv i32 %3, %4, !dbg !8780
  ret i32 %5, !dbg !8781
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !8782 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !8784, metadata !DIExpression()), !dbg !8787
  tail call void @config_enable_default_clocks() #24, !dbg !8788
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #24, !dbg !8789
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #25, !dbg !8789
  %4 = lshr i32 %3, 4, !dbg !8789
  %5 = and i32 %4, 15, !dbg !8789
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !8789
  %7 = load i8, i8* %6, align 1, !dbg !8789
  %8 = zext i8 %7 to i32, !dbg !8789
  %9 = lshr i32 %2, %8, !dbg !8789
  call void @llvm.dbg.value(metadata i32 %9, metadata !8785, metadata !DIExpression()), !dbg !8787
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !8786, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !8787
  %10 = icmp ult i32 %9, 84000000, !dbg !8790
  br i1 %10, label %11, label %13, !dbg !8792

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #24, !dbg !8793
  br label %13, !dbg !8795

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #25, !dbg !8796
  tail call fastcc void @set_up_plls() #25, !dbg !8797
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #25, !dbg !8798
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #25, !dbg !8801
  br label %14, !dbg !8802

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #25, !dbg !8803
  %16 = icmp eq i32 %15, 8, !dbg !8804
  br i1 %16, label %17, label %14, !dbg !8802, !llvm.loop !8805

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !8807
  br i1 %18, label %19, label %21, !dbg !8809

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #24, !dbg !8810
  br label %21, !dbg !8812

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !8813
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #25, !dbg !8814
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #25, !dbg !8815
  ret i32 0, !dbg !8816
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #5 !dbg !8817 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8819
  %2 = and i32 %1, 240, !dbg !8819
  ret i32 %2, !dbg !8820
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #15 !dbg !8821 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #25, !dbg !8822
  tail call fastcc void @LL_RCC_HSE_Enable() #25, !dbg !8827
  br label %1, !dbg !8828

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #25, !dbg !8829
  %3 = icmp eq i32 %2, 1, !dbg !8830
  br i1 %3, label %4, label %1, !dbg !8828, !llvm.loop !8831

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #25, !dbg !8833
  br label %5, !dbg !8836

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #25, !dbg !8837
  %7 = icmp eq i32 %6, 1, !dbg !8838
  br i1 %7, label %8, label %5, !dbg !8836, !llvm.loop !8839

8:                                                ; preds = %5
  ret void, !dbg !8841
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !8842 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #25, !dbg !8843
  %2 = icmp eq i32 %1, 8, !dbg !8845
  br i1 %2, label %3, label %4, !dbg !8846

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #25, !dbg !8847
  tail call fastcc void @stm32_clock_switch_to_hsi() #25, !dbg !8849
  br label %4, !dbg !8850

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #25, !dbg !8851
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8852
  %6 = and i32 %5, -196609, !dbg !8852
  %7 = or i32 %6, 65536, !dbg !8852
  store volatile i32 %7, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8852
  %8 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8853
  %9 = and i32 %8, -251658241, !dbg !8853
  %10 = or i32 %9, 117440512, !dbg !8853
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8853
  tail call void @config_pll_sysclock() #24, !dbg !8854
  tail call fastcc void @LL_RCC_PLL_Enable() #25, !dbg !8855
  br label %11, !dbg !8856

11:                                               ; preds = %11, %4
  %12 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #25, !dbg !8857
  %13 = icmp eq i32 %12, 1, !dbg !8858
  br i1 %13, label %14, label %11, !dbg !8856, !llvm.loop !8859

14:                                               ; preds = %11
  ret void, !dbg !8861
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #15 !dbg !8862 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8864, metadata !DIExpression()), !dbg !8865
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8866
  %2 = and i32 %1, -241, !dbg !8866
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8866
  ret void, !dbg !8867
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #15 !dbg !8868 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8870, metadata !DIExpression()), !dbg !8871
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8872
  %3 = and i32 %2, -4, !dbg !8872
  %4 = or i32 %3, %0, !dbg !8872
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8872
  ret void, !dbg !8873
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #5 !dbg !8874 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8875
  %2 = and i32 %1, 12, !dbg !8875
  ret i32 %2, !dbg !8876
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #15 !dbg !8877 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !8879, metadata !DIExpression()), !dbg !8880
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8881
  %2 = and i32 %1, -7169, !dbg !8881
  %3 = or i32 %2, 4096, !dbg !8881
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8881
  ret void, !dbg !8882
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #15 !dbg !8883 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8885, metadata !DIExpression()), !dbg !8886
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8887
  %2 = and i32 %1, -57345, !dbg !8887
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8887
  ret void, !dbg !8888
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #15 !dbg !8889 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #25, !dbg !8890
  %2 = icmp eq i32 %1, 1, !dbg !8892
  br i1 %2, label %7, label %3, !dbg !8893

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #25, !dbg !8894
  br label %4, !dbg !8896

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #25, !dbg !8897
  %6 = icmp eq i32 %5, 1, !dbg !8898
  br i1 %6, label %7, label %4, !dbg !8896, !llvm.loop !8899

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #25, !dbg !8901
  br label %8, !dbg !8902

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #25, !dbg !8903
  %10 = icmp eq i32 %9, 0, !dbg !8904
  br i1 %10, label %11, label %8, !dbg !8902, !llvm.loop !8905

11:                                               ; preds = %8
  ret void, !dbg !8907
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #15 !dbg !8908 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8909
  %2 = and i32 %1, -16777217, !dbg !8909
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8909
  ret void, !dbg !8910
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #15 !dbg !8911 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8912
  %2 = or i32 %1, 16777216, !dbg !8912
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8912
  ret void, !dbg !8913
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #5 !dbg !8914 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8915
  %2 = lshr i32 %1, 25, !dbg !8916
  %3 = and i32 %2, 1, !dbg !8916
  ret i32 %3, !dbg !8917
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #5 !dbg !8918 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8919
  %2 = lshr i32 %1, 1, !dbg !8920
  %3 = and i32 %2, 1, !dbg !8920
  ret i32 %3, !dbg !8921
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #15 !dbg !8922 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8923
  %2 = or i32 %1, 1, !dbg !8923
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8923
  ret void, !dbg !8924
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #15 !dbg !8925 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8926
  %2 = and i32 %1, -262145, !dbg !8926
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8926
  ret void, !dbg !8927
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #15 !dbg !8928 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8929
  %2 = or i32 %1, 65536, !dbg !8929
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8929
  ret void, !dbg !8930
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #5 !dbg !8931 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8932
  %2 = lshr i32 %1, 17, !dbg !8933
  %3 = and i32 %2, 1, !dbg !8933
  ret i32 %3, !dbg !8934
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #15 !dbg !8935 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8936
  %2 = or i32 %1, 1, !dbg !8936
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8936
  ret void, !dbg !8937
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #5 !dbg !8938 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8939
  %2 = lshr i32 %1, 1, !dbg !8940
  %3 = and i32 %2, 1, !dbg !8940
  ret i32 %3, !dbg !8941
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #6 !dbg !8942 {
  ret i32 16000000, !dbg !8944
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #15 !dbg !8948 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #25, !dbg !8949
  ret void, !dbg !8950
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #15 !dbg !8951 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !8955, metadata !DIExpression()), !dbg !8959
  call void @llvm.dbg.value(metadata i32 16, metadata !8956, metadata !DIExpression()), !dbg !8959
  call void @llvm.dbg.value(metadata i32 336, metadata !8957, metadata !DIExpression()), !dbg !8959
  call void @llvm.dbg.value(metadata i32 65536, metadata !8958, metadata !DIExpression()), !dbg !8959
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8960
  %2 = and i32 %1, -4227072, !dbg !8960
  %3 = or i32 %2, 4215824, !dbg !8960
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8960
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8961
  %5 = and i32 %4, -196609, !dbg !8961
  %6 = or i32 %5, 65536, !dbg !8961
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8961
  ret void, !dbg !8962
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #19 !dbg !8963 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #25, !dbg !8964
  ret void, !dbg !8965
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #19 !dbg !8966 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !8969, metadata !DIExpression()), !dbg !8971
  %2 = bitcast i32* %1 to i8*, !dbg !8972
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !8972
  call void @llvm.dbg.declare(metadata i32* %1, metadata !8970, metadata !DIExpression()), !dbg !8973
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8974
  %4 = or i32 %3, 268435456, !dbg !8974
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8974
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8975
  %6 = and i32 %5, 268435456, !dbg !8975
  store volatile i32 %6, i32* %1, align 4, !dbg !8976
  %7 = load volatile i32, i32* %1, align 4, !dbg !8977
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !8978
  ret void, !dbg !8978
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8979 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8981, metadata !DIExpression()), !dbg !8982
  %2 = tail call fastcc zeroext i1 @device_is_ready() #25, !dbg !8983
  br i1 %2, label %3, label %4, !dbg !8985

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #25, !dbg !8986
  br label %4, !dbg !8987

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !8982
  ret i32 %5, !dbg !8988
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !8989 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !8994, metadata !DIExpression()), !dbg !8995
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8996, !srcloc !8998
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #25, !dbg !8999
  ret i1 %1, !dbg !9000
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !9001 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #24, !dbg !9002
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #24, !dbg !9003
  ret void, !dbg !9004
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !9005 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9007, metadata !DIExpression()), !dbg !9008
  %2 = icmp eq i32 %0, 10, !dbg !9009
  br i1 %2, label %3, label %4, !dbg !9011

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #25, !dbg !9012
  br label %4, !dbg !9014

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !9015
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #25, !dbg !9016
  ret i32 %0, !dbg !9017
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9018 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !9021, metadata !DIExpression()), !dbg !9023
  call void @llvm.dbg.value(metadata i8 %0, metadata !9022, metadata !DIExpression()), !dbg !9023
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9024, !srcloc !9026
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #25, !dbg !9027
  ret void, !dbg !9028
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9029 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !9031, metadata !DIExpression()), !dbg !9034
  call void @llvm.dbg.value(metadata i8 %0, metadata !9032, metadata !DIExpression()), !dbg !9034
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_47, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9035
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !9033, metadata !DIExpression()), !dbg !9034
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !9036
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !9036
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_47, i8 noundef zeroext %0) #24, !dbg !9037
  ret void, !dbg !9038
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !9039 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !9041, metadata !DIExpression()), !dbg !9042
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_47) #24, !dbg !9043
  ret i1 %1, !dbg !9044
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #6 !dbg !9045 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !9094, metadata !DIExpression()), !dbg !9097
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !9095, metadata !DIExpression()), !dbg !9097
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !9096, metadata !DIExpression()), !dbg !9097
  ret void, !dbg !9098
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !9099 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9101, metadata !DIExpression()), !dbg !9106
  call void @llvm.dbg.value(metadata i8 %1, metadata !9102, metadata !DIExpression()), !dbg !9106
  call void @llvm.dbg.value(metadata i32 %2, metadata !9103, metadata !DIExpression()), !dbg !9106
  %5 = bitcast i32* %4 to i8*, !dbg !9107
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9107
  call void @llvm.dbg.value(metadata i32* %4, metadata !9105, metadata !DIExpression(DW_OP_deref)), !dbg !9106
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #25, !dbg !9108
  call void @llvm.dbg.value(metadata i32 %6, metadata !9104, metadata !DIExpression()), !dbg !9106
  %7 = icmp eq i32 %6, 0, !dbg !9109
  br i1 %7, label %8, label %31, !dbg !9111

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !9104, metadata !DIExpression()), !dbg !9106
  %9 = and i32 %2, 131072, !dbg !9112
  %10 = icmp eq i32 %9, 0, !dbg !9114
  br i1 %10, label %28, label %11, !dbg !9115

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !9116
  %13 = icmp eq i32 %12, 0, !dbg !9119
  br i1 %13, label %18, label %14, !dbg !9120

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !9121
  %16 = shl nuw i32 1, %15, !dbg !9121
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #25, !dbg !9123
  br label %25, !dbg !9124

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !9125
  %20 = icmp eq i32 %19, 0, !dbg !9127
  %21 = zext i8 %1 to i32, !dbg !9106
  br i1 %20, label %25, label %22, !dbg !9128

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !9129
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #25, !dbg !9131
  br label %25, !dbg !9132

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !9133
  %27 = load i32, i32* %4, align 4, !dbg !9134
  call void @llvm.dbg.value(metadata i32 %30, metadata !9105, metadata !DIExpression()), !dbg !9106
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #25, !dbg !9135
  br label %31, !dbg !9136

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !9133
  %30 = load i32, i32* %4, align 4, !dbg !9134
  call void @llvm.dbg.value(metadata i32 %30, metadata !9105, metadata !DIExpression()), !dbg !9106
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #25, !dbg !9135
  call void @llvm.dbg.value(metadata i32 0, metadata !9104, metadata !DIExpression()), !dbg !9106
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9137
  ret i32 %6, !dbg !9137
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #5 !dbg !9138 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9142, metadata !DIExpression()), !dbg !9147
  call void @llvm.dbg.value(metadata i32* %1, metadata !9143, metadata !DIExpression()), !dbg !9147
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9148
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9148
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9148
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9144, metadata !DIExpression()), !dbg !9147
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9149
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9149
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9149
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9146, metadata !DIExpression()), !dbg !9147
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #25, !dbg !9150
  store i32 %9, i32* %1, align 4, !dbg !9151
  ret i32 0, !dbg !9152
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #15 !dbg !9153 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9155, metadata !DIExpression()), !dbg !9161
  call void @llvm.dbg.value(metadata i32 %1, metadata !9156, metadata !DIExpression()), !dbg !9161
  call void @llvm.dbg.value(metadata i32 %2, metadata !9157, metadata !DIExpression()), !dbg !9161
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9162
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !9162
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !9162
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !9158, metadata !DIExpression()), !dbg !9161
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !9163
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !9163
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !9163
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !9159, metadata !DIExpression()), !dbg !9161
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #25, !dbg !9164
  call void @llvm.dbg.value(metadata i32 %10, metadata !9160, metadata !DIExpression()), !dbg !9161
  %11 = xor i32 %1, -1, !dbg !9165
  %12 = and i32 %10, %11, !dbg !9166
  %13 = and i32 %2, %1, !dbg !9167
  %14 = or i32 %12, %13, !dbg !9168
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #25, !dbg !9169
  ret i32 0, !dbg !9170
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !9171 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9173, metadata !DIExpression()), !dbg !9177
  call void @llvm.dbg.value(metadata i32 %1, metadata !9174, metadata !DIExpression()), !dbg !9177
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9178
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9178
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9178
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9175, metadata !DIExpression()), !dbg !9177
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9179
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9179
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9179
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9176, metadata !DIExpression()), !dbg !9177
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !9180
  store volatile i32 %1, i32* %9, align 4, !dbg !9180
  ret i32 0, !dbg !9181
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !9182 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9184, metadata !DIExpression()), !dbg !9188
  call void @llvm.dbg.value(metadata i32 %1, metadata !9185, metadata !DIExpression()), !dbg !9188
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9189
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9189
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9189
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9186, metadata !DIExpression()), !dbg !9188
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9190
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9190
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9190
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9187, metadata !DIExpression()), !dbg !9188
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #25, !dbg !9191
  ret i32 0, !dbg !9192
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !9193 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9195, metadata !DIExpression()), !dbg !9199
  call void @llvm.dbg.value(metadata i32 %1, metadata !9196, metadata !DIExpression()), !dbg !9199
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9200
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9200
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9200
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9197, metadata !DIExpression()), !dbg !9199
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9201
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9201
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9201
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9198, metadata !DIExpression()), !dbg !9199
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !9202
  %10 = load volatile i32, i32* %9, align 4, !dbg !9202
  %11 = xor i32 %10, %1, !dbg !9202
  store volatile i32 %11, i32* %9, align 4, !dbg !9202
  ret i32 0, !dbg !9203
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !9204 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9206, metadata !DIExpression()), !dbg !9216
  call void @llvm.dbg.value(metadata i8 %1, metadata !9207, metadata !DIExpression()), !dbg !9216
  call void @llvm.dbg.value(metadata i32 %2, metadata !9208, metadata !DIExpression()), !dbg !9216
  call void @llvm.dbg.value(metadata i32 %3, metadata !9209, metadata !DIExpression()), !dbg !9216
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9217
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9217
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9217
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9210, metadata !DIExpression()), !dbg !9216
  call void @llvm.dbg.value(metadata i8* undef, metadata !9211, metadata !DIExpression()), !dbg !9216
  call void @llvm.dbg.value(metadata i32 0, metadata !9213, metadata !DIExpression()), !dbg !9216
  call void @llvm.dbg.value(metadata i32 0, metadata !9214, metadata !DIExpression()), !dbg !9216
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !9218

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !9219
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #25, !dbg !9223
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9224
  %12 = load i32, i32* %11, align 4, !dbg !9224
  %13 = icmp eq i32 %10, %12, !dbg !9225
  br i1 %13, label %14, label %29, !dbg !9226

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #24, !dbg !9227
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #24, !dbg !9229
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #24, !dbg !9230
  br label %29, !dbg !9231

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9232
  %17 = load i8*, i8** %16, align 4, !dbg !9232
  call void @llvm.dbg.value(metadata i8* %17, metadata !9211, metadata !DIExpression()), !dbg !9216
  %18 = zext i8 %1 to i32, !dbg !9233
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #24, !dbg !9235
  %20 = icmp eq i32 %19, 0, !dbg !9236
  br i1 %20, label %21, label %29, !dbg !9237

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9238
  %23 = load i32, i32* %22, align 4, !dbg !9238
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #25, !dbg !9239
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !9240

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !9213, metadata !DIExpression()), !dbg !9216
  br label %27, !dbg !9241

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !9213, metadata !DIExpression()), !dbg !9216
  br label %27, !dbg !9243

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !9213, metadata !DIExpression()), !dbg !9216
  br label %27, !dbg !9244

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !9216
  call void @llvm.dbg.value(metadata i32 %28, metadata !9213, metadata !DIExpression()), !dbg !9216
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #24, !dbg !9245
  tail call void @stm32_exti_enable(i32 noundef %18) #24, !dbg !9246
  br label %29, !dbg !9246

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !9216
  call void @llvm.dbg.value(metadata i32 %30, metadata !9214, metadata !DIExpression()), !dbg !9216
  call void @llvm.dbg.label(metadata !9215), !dbg !9247
  ret i32 %30, !dbg !9248
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #1 !dbg !9249 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9251, metadata !DIExpression()), !dbg !9255
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9252, metadata !DIExpression()), !dbg !9255
  call void @llvm.dbg.value(metadata i1 %2, metadata !9253, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9255
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9256
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !9256
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !9256
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !9254, metadata !DIExpression()), !dbg !9255
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !9257
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #25, !dbg !9258
  ret i32 %8, !dbg !9259
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #1 !dbg !9260 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9266, metadata !DIExpression()), !dbg !9269
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9267, metadata !DIExpression()), !dbg !9269
  call void @llvm.dbg.value(metadata i1 %2, metadata !9268, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9269
  %4 = icmp eq %struct.gpio_callback* %1, null, !dbg !9270
  br i1 %4, label %5, label %6, !dbg !9273

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.107, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.34.108, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.109, i32 0, i32 0), i32 noundef 42) #24, !dbg !9274
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35.110, i32 0, i32 0)) #24, !dbg !9274
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.109, i32 0, i32 0), i32 noundef 42) #24, !dbg !9274
  unreachable, !dbg !9274

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 1, !dbg !9276
  %8 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %7, align 4, !dbg !9276
  %9 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %8, null, !dbg !9276
  br i1 %9, label %10, label %11, !dbg !9279

10:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.107, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.36.111, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.109, i32 0, i32 0), i32 noundef 43) #24, !dbg !9280
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33.112, i32 0, i32 0)) #24, !dbg !9280
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.109, i32 0, i32 0), i32 noundef 43) #24, !dbg !9280
  unreachable, !dbg !9280

11:                                               ; preds = %6
  %12 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #25, !dbg !9282
  br i1 %12, label %18, label %13, !dbg !9284

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9285
  %15 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef nonnull %14) #25, !dbg !9288
  %16 = or i1 %15, %2, !dbg !9289
  %17 = select i1 %16, i32 0, i32 -22, !dbg !9289
  br i1 %2, label %19, label %21, !dbg !9289

18:                                               ; preds = %11
  br i1 %2, label %19, label %21, !dbg !9290

19:                                               ; preds = %18, %13
  %20 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9291
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef nonnull %20) #25, !dbg !9294
  br label %21, !dbg !9295

21:                                               ; preds = %13, %19, %18
  %22 = phi i32 [ %17, %13 ], [ -22, %18 ], [ 0, %19 ], !dbg !9269
  ret i32 %22, !dbg !9296
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !9297 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9301, metadata !DIExpression()), !dbg !9302
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !9303
  %3 = icmp eq %struct._snode* %2, null, !dbg !9303
  ret i1 %3, !dbg !9303
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #14 !dbg !9304 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9308, metadata !DIExpression()), !dbg !9312
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9309, metadata !DIExpression()), !dbg !9312
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9310, metadata !DIExpression()), !dbg !9312
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !9313
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9311, metadata !DIExpression()), !dbg !9312
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9310, metadata !DIExpression()), !dbg !9312
  %4 = icmp eq %struct._snode* %3, null, !dbg !9315
  br i1 %4, label %15, label %5, !dbg !9313

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9311, metadata !DIExpression()), !dbg !9312
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9310, metadata !DIExpression()), !dbg !9312
  %6 = icmp eq %struct._snode* %3, %1, !dbg !9317
  br i1 %6, label %9, label %11, !dbg !9320

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9311, metadata !DIExpression()), !dbg !9312
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9310, metadata !DIExpression()), !dbg !9312
  %8 = icmp eq %struct._snode* %13, %1, !dbg !9317
  br i1 %8, label %9, label %11, !dbg !9320, !llvm.loop !9321

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #25, !dbg !9322
  br label %15, !dbg !9322

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9311, metadata !DIExpression()), !dbg !9312
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9310, metadata !DIExpression()), !dbg !9312
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #25, !dbg !9315
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9311, metadata !DIExpression()), !dbg !9312
  %14 = icmp eq %struct._snode* %13, null, !dbg !9315
  br i1 %14, label %15, label %7, !dbg !9313, !llvm.loop !9321

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !9324
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #11 !dbg !9325 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9329, metadata !DIExpression()), !dbg !9331
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9330, metadata !DIExpression()), !dbg !9331
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !9332
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #25, !dbg !9332
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #25, !dbg !9332
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #25, !dbg !9333
  %5 = icmp eq %struct._snode* %4, null, !dbg !9333
  br i1 %5, label %6, label %8, !dbg !9332

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !9335
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #25, !dbg !9335
  br label %8, !dbg !9335

8:                                                ; preds = %6, %2
  ret void, !dbg !9332
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !9337 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9341, metadata !DIExpression()), !dbg !9342
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9343
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9343
  ret %struct._snode* %3, !dbg !9344
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !9345 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9349, metadata !DIExpression()), !dbg !9351
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9350, metadata !DIExpression()), !dbg !9351
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9352
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9353
  ret void, !dbg !9354
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !9355 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9357, metadata !DIExpression()), !dbg !9359
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9358, metadata !DIExpression()), !dbg !9359
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9360
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9361
  ret void, !dbg !9362
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !9363 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9365, metadata !DIExpression()), !dbg !9366
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9367
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9367
  ret %struct._snode* %3, !dbg !9368
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !9369 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9371, metadata !DIExpression()), !dbg !9373
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9372, metadata !DIExpression()), !dbg !9373
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9374
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9375
  ret void, !dbg !9376
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #11 !dbg !9377 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9381, metadata !DIExpression()), !dbg !9384
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9382, metadata !DIExpression()), !dbg !9384
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !9383, metadata !DIExpression()), !dbg !9384
  %4 = icmp eq %struct._snode* %1, null, !dbg !9385
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #25, !dbg !9387
  br i1 %4, label %6, label %11, !dbg !9388

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #25, !dbg !9389
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #25, !dbg !9391
  %8 = icmp eq %struct._snode* %7, %2, !dbg !9391
  br i1 %8, label %9, label %15, !dbg !9389

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !9393
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #25, !dbg !9393
  br label %15, !dbg !9393

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #25, !dbg !9395
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #25, !dbg !9397
  %13 = icmp eq %struct._snode* %12, %2, !dbg !9397
  br i1 %13, label %14, label %15, !dbg !9395

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #25, !dbg !9399
  br label %15, !dbg !9399

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #25, !dbg !9388
  ret void, !dbg !9388
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #10 !dbg !9401 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9405, metadata !DIExpression()), !dbg !9406
  %2 = icmp eq %struct._snode* %0, null, !dbg !9407
  br i1 %2, label %5, label %3, !dbg !9407

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #25, !dbg !9407
  br label %5, !dbg !9407

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !9407
  ret %struct._snode* %6, !dbg !9407
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !9408 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9410, metadata !DIExpression()), !dbg !9411
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #25, !dbg !9412
  ret %struct._snode* %2, !dbg !9412
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !9413 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9415, metadata !DIExpression()), !dbg !9416
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9417
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9417
  ret %struct._snode* %3, !dbg !9418
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !9419 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9421, metadata !DIExpression()), !dbg !9424
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #25, !dbg !9425, !range !9426
  call void @llvm.dbg.value(metadata i32 %2, metadata !9422, metadata !DIExpression()), !dbg !9424
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #25, !dbg !9427
  call void @llvm.dbg.value(metadata i32 %3, metadata !9423, metadata !DIExpression()), !dbg !9424
  ret i32 %3, !dbg !9428
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !9429 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9431, metadata !DIExpression()), !dbg !9434
  call void @llvm.dbg.value(metadata i8* %1, metadata !9432, metadata !DIExpression()), !dbg !9434
  call void @llvm.dbg.value(metadata i8* %1, metadata !9433, metadata !DIExpression()), !dbg !9434
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !9435
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !9435
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9436
  %6 = bitcast i8* %5 to %struct.device**, !dbg !9436
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !9436
  %8 = shl nuw i32 1, %0, !dbg !9437
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #25, !dbg !9438
  ret void, !dbg !9439
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9440 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !9444, metadata !DIExpression()), !dbg !9450
  call void @llvm.dbg.value(metadata i32 %1, metadata !9445, metadata !DIExpression()), !dbg !9450
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9446, metadata !DIExpression()), !dbg !9450
  %4 = bitcast i64* %3 to i8*, !dbg !9451
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #23, !dbg !9451
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !9448, metadata !DIExpression()), !dbg !9450
  store i64 70368744177732, i64* %3, align 8, !dbg !9452
  call void @llvm.dbg.value(metadata i64* %3, metadata !9448, metadata !DIExpression(DW_OP_deref)), !dbg !9450
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #25, !dbg !9453
  call void @llvm.dbg.value(metadata i32 %5, metadata !9449, metadata !DIExpression()), !dbg !9450
  %6 = icmp eq i32 %5, 0, !dbg !9454
  br i1 %6, label %7, label %8, !dbg !9456

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #25, !dbg !9457
  br label %8, !dbg !9458

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #23, !dbg !9459
  ret void, !dbg !9459
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !9460 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9462, metadata !DIExpression()), !dbg !9465
  call void @llvm.dbg.value(metadata i8* %0, metadata !9463, metadata !DIExpression()), !dbg !9465
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_9, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !9466
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !9464, metadata !DIExpression()), !dbg !9465
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !9467
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !9467
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_9, i8* noundef %0) #24, !dbg !9468
  ret i32 %5, !dbg !9469
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9470 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9472, metadata !DIExpression()), !dbg !9475
  call void @llvm.dbg.value(metadata i32 %1, metadata !9473, metadata !DIExpression()), !dbg !9475
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #25, !dbg !9476
  call void @llvm.dbg.value(metadata i32 %3, metadata !9474, metadata !DIExpression()), !dbg !9475
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #25, !dbg !9477
  ret void, !dbg !9478
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #6 !dbg !9479 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9483, metadata !DIExpression()), !dbg !9484
  %2 = sdiv i32 %0, 4, !dbg !9485
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !9486
  %6 = add nsw i32 %5, 16, !dbg !9487
  %7 = shl i32 15, %6, !dbg !9488
  %8 = or i32 %7, %2, !dbg !9489
  ret i32 %8, !dbg !9490
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9491 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9495, metadata !DIExpression()), !dbg !9497
  call void @llvm.dbg.value(metadata i32 %1, metadata !9496, metadata !DIExpression()), !dbg !9497
  %3 = and i32 %1, 255, !dbg !9498
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !9498
  %5 = load volatile i32, i32* %4, align 4, !dbg !9498
  %6 = lshr i32 %1, 16, !dbg !9498
  %7 = xor i32 %6, -1, !dbg !9498
  %8 = and i32 %5, %7, !dbg !9498
  call void @llvm.dbg.value(metadata i32 %6, metadata !9499, metadata !DIExpression()) #23, !dbg !9503
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !9505, !srcloc !9506
  call void @llvm.dbg.value(metadata i32 %9, metadata !9502, metadata !DIExpression()) #23, !dbg !9503
  call void @llvm.dbg.value(metadata i32 %9, metadata !9507, metadata !DIExpression()) #23, !dbg !9512
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #23, !dbg !9514, !range !7529
  %11 = shl i32 %0, %10, !dbg !9498
  %12 = or i32 %11, %8, !dbg !9498
  store volatile i32 %12, i32* %4, align 4, !dbg !9498
  ret void, !dbg !9515
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9516 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9520, metadata !DIExpression()), !dbg !9525
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !9521, metadata !DIExpression()), !dbg !9525
  call void @llvm.dbg.value(metadata i32 %2, metadata !9522, metadata !DIExpression()), !dbg !9525
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !9526
  %5 = icmp eq %struct._snode* %4, null, !dbg !9526
  br i1 %5, label %24, label %6, !dbg !9526

6:                                                ; preds = %3, %22
  %7 = phi %struct._snode* [ %8, %22 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #25, !dbg !9528
  %9 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9524, metadata !DIExpression()), !dbg !9525
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %9, metadata !9523, metadata !DIExpression()), !dbg !9525
  %10 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !9529
  %11 = bitcast %struct._snode* %10 to i32*, !dbg !9529
  %12 = load i32, i32* %11, align 4, !dbg !9529
  %13 = and i32 %12, %2, !dbg !9533
  %14 = icmp eq i32 %13, 0, !dbg !9533
  br i1 %14, label %22, label %15, !dbg !9534

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !9535
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !9535
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !9535
  %19 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %18, null, !dbg !9535
  br i1 %19, label %20, label %21, !dbg !9539

20:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.107, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31.113, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.109, i32 0, i32 0), i32 noundef 77) #24, !dbg !9540
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33.112, i32 0, i32 0)) #24, !dbg !9540
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.109, i32 0, i32 0), i32 noundef 77) #24, !dbg !9540
  unreachable, !dbg !9540

21:                                               ; preds = %15
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %9, i32 noundef %13) #24, !dbg !9542
  br label %22, !dbg !9543

22:                                               ; preds = %6, %21
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9523, metadata !DIExpression()), !dbg !9525
  %23 = icmp eq %struct._snode* %8, null, !dbg !9544
  br i1 %23, label %24, label %6, !dbg !9544

24:                                               ; preds = %22, %3
  ret void, !dbg !9545
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !9546 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9548, metadata !DIExpression()), !dbg !9549
  %2 = and i32 %0, 255, !dbg !9550
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !9550
  %4 = load volatile i32, i32* %3, align 4, !dbg !9550
  %5 = lshr i32 %0, 16, !dbg !9550
  %6 = and i32 %4, %5, !dbg !9550
  call void @llvm.dbg.value(metadata i32 %5, metadata !9499, metadata !DIExpression()) #23, !dbg !9551
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #28, !dbg !9553, !srcloc !9506
  call void @llvm.dbg.value(metadata i32 %7, metadata !9502, metadata !DIExpression()) #23, !dbg !9551
  call void @llvm.dbg.value(metadata i32 %7, metadata !9507, metadata !DIExpression()) #23, !dbg !9554
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !9556, !range !7529
  %9 = lshr i32 %6, %8, !dbg !9557
  ret i32 %9, !dbg !9558
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9559 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9564, metadata !DIExpression()), !dbg !9566
  call void @llvm.dbg.value(metadata i32 %1, metadata !9565, metadata !DIExpression()), !dbg !9566
  %3 = shl i32 %1, 16, !dbg !9567
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !9567
  store volatile i32 %3, i32* %4, align 4, !dbg !9567
  ret void, !dbg !9568
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #5 !dbg !9569 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9573, metadata !DIExpression()), !dbg !9574
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9575
  %3 = load volatile i32, i32* %2, align 4, !dbg !9575
  ret i32 %3, !dbg !9576
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9577 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9579, metadata !DIExpression()), !dbg !9581
  call void @llvm.dbg.value(metadata i32 %1, metadata !9580, metadata !DIExpression()), !dbg !9581
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9582
  store volatile i32 %1, i32* %3, align 4, !dbg !9582
  ret void, !dbg !9583
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #5 !dbg !9584 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9586, metadata !DIExpression()), !dbg !9587
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !9588
  %3 = load volatile i32, i32* %2, align 4, !dbg !9588
  ret i32 %3, !dbg !9589
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #11 !dbg !9590 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9594, metadata !DIExpression()), !dbg !9596
  call void @llvm.dbg.value(metadata i32* %1, metadata !9595, metadata !DIExpression()), !dbg !9596
  %3 = and i32 %0, 131072, !dbg !9597
  %4 = icmp eq i32 %3, 0, !dbg !9599
  br i1 %4, label %22, label %5, !dbg !9600

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !9601
  %6 = and i32 %0, 2, !dbg !9603
  %7 = icmp eq i32 %6, 0, !dbg !9605
  br i1 %7, label %11, label %8, !dbg !9606

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !9607
  %10 = icmp eq i32 %9, 0, !dbg !9607
  br i1 %10, label %33, label %11, !dbg !9610

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !9611
  store i32 %12, i32* %1, align 4, !dbg !9611
  %13 = and i32 %0, 16, !dbg !9612
  %14 = icmp eq i32 %13, 0, !dbg !9614
  br i1 %14, label %17, label %15, !dbg !9615

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !9616
  br label %31, !dbg !9618

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !9619
  %19 = icmp eq i32 %18, 0, !dbg !9621
  br i1 %19, label %33, label %20, !dbg !9622

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !9623
  br label %31, !dbg !9625

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !9626
  %24 = icmp eq i32 %23, 0, !dbg !9628
  br i1 %24, label %31, label %25, !dbg !9629

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !9630
  %27 = icmp eq i32 %26, 0, !dbg !9633
  br i1 %27, label %28, label %31, !dbg !9634

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !9635
  br label %33, !dbg !9636

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !9596
  ret i32 %34, !dbg !9636
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !9637 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9641, metadata !DIExpression()), !dbg !9652
  call void @llvm.dbg.value(metadata i32 %1, metadata !9642, metadata !DIExpression()), !dbg !9652
  call void @llvm.dbg.value(metadata i32 %2, metadata !9643, metadata !DIExpression()), !dbg !9652
  call void @llvm.dbg.value(metadata i32 %3, metadata !9644, metadata !DIExpression()), !dbg !9652
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9653
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9653
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9653
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9645, metadata !DIExpression()), !dbg !9652
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !9654
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !9654
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !9654
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !9646, metadata !DIExpression()), !dbg !9652
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #25, !dbg !9655
  call void @llvm.dbg.value(metadata i32 %11, metadata !9647, metadata !DIExpression()), !dbg !9652
  %12 = and i32 %2, 48, !dbg !9656
  call void @llvm.dbg.value(metadata i32 %12, metadata !9648, metadata !DIExpression()), !dbg !9652
  call void @llvm.dbg.value(metadata i32 %2, metadata !9649, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !9652
  call void @llvm.dbg.value(metadata i32 %2, metadata !9650, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !9652
  call void @llvm.dbg.value(metadata i32 %2, metadata !9651, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !9652
  %13 = lshr i32 %2, 6, !dbg !9657
  %14 = and i32 %13, 1, !dbg !9657
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #25, !dbg !9658
  %15 = lshr i32 %2, 7, !dbg !9659
  %16 = and i32 %15, 3, !dbg !9659
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #25, !dbg !9660
  %17 = lshr i32 %2, 9, !dbg !9661
  %18 = and i32 %17, 3, !dbg !9661
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #25, !dbg !9662
  %19 = icmp eq i32 %12, 32, !dbg !9663
  br i1 %19, label %20, label %24, !dbg !9665

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !9666
  br i1 %21, label %22, label %23, !dbg !9669

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #25, !dbg !9670
  br label %24, !dbg !9672

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #25, !dbg !9673
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !9675
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #25, !dbg !9676
  ret void, !dbg !9677
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #6 !dbg !9678 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9680, metadata !DIExpression()), !dbg !9682
  %2 = shl nuw i32 1, %0, !dbg !9683
  call void @llvm.dbg.value(metadata i32 %2, metadata !9681, metadata !DIExpression()), !dbg !9682
  ret i32 %2, !dbg !9684
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !9685 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9689, metadata !DIExpression()), !dbg !9692
  call void @llvm.dbg.value(metadata i32 %1, metadata !9690, metadata !DIExpression()), !dbg !9692
  call void @llvm.dbg.value(metadata i32 %2, metadata !9691, metadata !DIExpression()), !dbg !9692
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !9693
  %5 = load volatile i32, i32* %4, align 4, !dbg !9693
  %6 = xor i32 %1, -1, !dbg !9693
  %7 = and i32 %5, %6, !dbg !9693
  %8 = mul i32 %2, %1, !dbg !9693
  %9 = or i32 %7, %8, !dbg !9693
  store volatile i32 %9, i32* %4, align 4, !dbg !9693
  ret void, !dbg !9694
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9695 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9697, metadata !DIExpression()), !dbg !9700
  call void @llvm.dbg.value(metadata i32 %1, metadata !9698, metadata !DIExpression()), !dbg !9700
  call void @llvm.dbg.value(metadata i32 %2, metadata !9699, metadata !DIExpression()), !dbg !9700
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !9701
  %5 = load volatile i32, i32* %4, align 4, !dbg !9701
  call void @llvm.dbg.value(metadata i32 %1, metadata !9499, metadata !DIExpression()) #23, !dbg !9702
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9704, !srcloc !9506
  call void @llvm.dbg.value(metadata i32 %6, metadata !9502, metadata !DIExpression()) #23, !dbg !9702
  call void @llvm.dbg.value(metadata i32 %6, metadata !9507, metadata !DIExpression()) #23, !dbg !9705
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9707, !range !7529
  %8 = shl nuw nsw i32 %7, 1, !dbg !9701
  %9 = shl i32 3, %8, !dbg !9701
  %10 = xor i32 %9, -1, !dbg !9701
  %11 = and i32 %5, %10, !dbg !9701
  call void @llvm.dbg.value(metadata i32 %1, metadata !9499, metadata !DIExpression()) #23, !dbg !9708
  call void @llvm.dbg.value(metadata i32 %6, metadata !9502, metadata !DIExpression()) #23, !dbg !9708
  call void @llvm.dbg.value(metadata i32 %6, metadata !9507, metadata !DIExpression()) #23, !dbg !9710
  %12 = shl i32 %2, %8, !dbg !9701
  %13 = or i32 %11, %12, !dbg !9701
  store volatile i32 %13, i32* %4, align 4, !dbg !9701
  ret void, !dbg !9712
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9713 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9715, metadata !DIExpression()), !dbg !9718
  call void @llvm.dbg.value(metadata i32 %1, metadata !9716, metadata !DIExpression()), !dbg !9718
  call void @llvm.dbg.value(metadata i32 %2, metadata !9717, metadata !DIExpression()), !dbg !9718
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !9719
  %5 = load volatile i32, i32* %4, align 4, !dbg !9719
  call void @llvm.dbg.value(metadata i32 %1, metadata !9499, metadata !DIExpression()) #23, !dbg !9720
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9722, !srcloc !9506
  call void @llvm.dbg.value(metadata i32 %6, metadata !9502, metadata !DIExpression()) #23, !dbg !9720
  call void @llvm.dbg.value(metadata i32 %6, metadata !9507, metadata !DIExpression()) #23, !dbg !9723
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9725, !range !7529
  %8 = shl nuw nsw i32 %7, 1, !dbg !9719
  %9 = shl i32 3, %8, !dbg !9719
  %10 = xor i32 %9, -1, !dbg !9719
  %11 = and i32 %5, %10, !dbg !9719
  call void @llvm.dbg.value(metadata i32 %1, metadata !9499, metadata !DIExpression()) #23, !dbg !9726
  call void @llvm.dbg.value(metadata i32 %6, metadata !9502, metadata !DIExpression()) #23, !dbg !9726
  call void @llvm.dbg.value(metadata i32 %6, metadata !9507, metadata !DIExpression()) #23, !dbg !9728
  %12 = shl i32 %2, %8, !dbg !9719
  %13 = or i32 %11, %12, !dbg !9719
  store volatile i32 %13, i32* %4, align 4, !dbg !9719
  ret void, !dbg !9730
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9731 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9733, metadata !DIExpression()), !dbg !9736
  call void @llvm.dbg.value(metadata i32 %1, metadata !9734, metadata !DIExpression()), !dbg !9736
  call void @llvm.dbg.value(metadata i32 %2, metadata !9735, metadata !DIExpression()), !dbg !9736
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !9737
  %5 = load volatile i32, i32* %4, align 4, !dbg !9737
  call void @llvm.dbg.value(metadata i32 %1, metadata !9499, metadata !DIExpression()) #23, !dbg !9738
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9740, !srcloc !9506
  call void @llvm.dbg.value(metadata i32 %6, metadata !9502, metadata !DIExpression()) #23, !dbg !9738
  call void @llvm.dbg.value(metadata i32 %6, metadata !9507, metadata !DIExpression()) #23, !dbg !9741
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9743, !range !7529
  %8 = shl nuw nsw i32 %7, 2, !dbg !9737
  %9 = shl i32 15, %8, !dbg !9737
  %10 = xor i32 %9, -1, !dbg !9737
  %11 = and i32 %5, %10, !dbg !9737
  call void @llvm.dbg.value(metadata i32 %1, metadata !9499, metadata !DIExpression()) #23, !dbg !9744
  call void @llvm.dbg.value(metadata i32 %6, metadata !9502, metadata !DIExpression()) #23, !dbg !9744
  call void @llvm.dbg.value(metadata i32 %6, metadata !9507, metadata !DIExpression()) #23, !dbg !9746
  %12 = shl i32 %2, %8, !dbg !9737
  %13 = or i32 %11, %12, !dbg !9737
  store volatile i32 %13, i32* %4, align 4, !dbg !9737
  ret void, !dbg !9748
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9749 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9751, metadata !DIExpression()), !dbg !9754
  call void @llvm.dbg.value(metadata i32 %1, metadata !9752, metadata !DIExpression()), !dbg !9754
  call void @llvm.dbg.value(metadata i32 %2, metadata !9753, metadata !DIExpression()), !dbg !9754
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !9755
  %5 = load volatile i32, i32* %4, align 4, !dbg !9755
  %6 = lshr i32 %1, 8, !dbg !9755
  call void @llvm.dbg.value(metadata i32 %6, metadata !9499, metadata !DIExpression()) #23, !dbg !9756
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !9758, !srcloc !9506
  call void @llvm.dbg.value(metadata i32 %7, metadata !9502, metadata !DIExpression()) #23, !dbg !9756
  call void @llvm.dbg.value(metadata i32 %7, metadata !9507, metadata !DIExpression()) #23, !dbg !9759
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !9761, !range !7529
  %9 = shl nuw nsw i32 %8, 2, !dbg !9755
  %10 = shl i32 15, %9, !dbg !9755
  %11 = xor i32 %10, -1, !dbg !9755
  %12 = and i32 %5, %11, !dbg !9755
  call void @llvm.dbg.value(metadata i32 %6, metadata !9499, metadata !DIExpression()) #23, !dbg !9762
  call void @llvm.dbg.value(metadata i32 %7, metadata !9502, metadata !DIExpression()) #23, !dbg !9762
  call void @llvm.dbg.value(metadata i32 %7, metadata !9507, metadata !DIExpression()) #23, !dbg !9764
  %13 = shl i32 %2, %9, !dbg !9755
  %14 = or i32 %12, %13, !dbg !9755
  store volatile i32 %14, i32* %4, align 4, !dbg !9755
  ret void, !dbg !9766
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9767 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9769, metadata !DIExpression()), !dbg !9772
  call void @llvm.dbg.value(metadata i32 %1, metadata !9770, metadata !DIExpression()), !dbg !9772
  call void @llvm.dbg.value(metadata i32 %2, metadata !9771, metadata !DIExpression()), !dbg !9772
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !9773
  %5 = load volatile i32, i32* %4, align 4, !dbg !9773
  call void @llvm.dbg.value(metadata i32 %1, metadata !9499, metadata !DIExpression()) #23, !dbg !9774
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9776, !srcloc !9506
  call void @llvm.dbg.value(metadata i32 %6, metadata !9502, metadata !DIExpression()) #23, !dbg !9774
  call void @llvm.dbg.value(metadata i32 %6, metadata !9507, metadata !DIExpression()) #23, !dbg !9777
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9779, !range !7529
  %8 = shl nuw nsw i32 %7, 1, !dbg !9773
  %9 = shl i32 3, %8, !dbg !9773
  %10 = xor i32 %9, -1, !dbg !9773
  %11 = and i32 %5, %10, !dbg !9773
  call void @llvm.dbg.value(metadata i32 %1, metadata !9499, metadata !DIExpression()) #23, !dbg !9780
  call void @llvm.dbg.value(metadata i32 %6, metadata !9502, metadata !DIExpression()) #23, !dbg !9780
  call void @llvm.dbg.value(metadata i32 %6, metadata !9507, metadata !DIExpression()) #23, !dbg !9782
  %12 = shl i32 %2, %8, !dbg !9773
  %13 = or i32 %11, %12, !dbg !9773
  store volatile i32 %13, i32* %4, align 4, !dbg !9773
  ret void, !dbg !9784
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !9785 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9787, metadata !DIExpression()), !dbg !9790
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9791
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !9791
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !9791
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !9788, metadata !DIExpression()), !dbg !9790
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !9792
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !9793
  %6 = tail call fastcc zeroext i1 @device_is_ready.122() #25, !dbg !9794
  br i1 %6, label %7, label %11, !dbg !9796

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #25, !dbg !9797
  call void @llvm.dbg.value(metadata i32 %8, metadata !9789, metadata !DIExpression()), !dbg !9790
  %9 = icmp slt i32 %8, 0, !dbg !9798
  %10 = select i1 %9, i32 %8, i32 0, !dbg !9800
  br label %11, !dbg !9800

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !9790
  ret i32 %12, !dbg !9801
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.122() unnamed_addr #1 !dbg !9802 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9806, metadata !DIExpression()), !dbg !9807
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9808, !srcloc !9810
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.123() #25, !dbg !9811
  ret i1 %1, !dbg !9812
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef readonly %0) unnamed_addr #1 !dbg !9813 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9817, metadata !DIExpression()), !dbg !9822
  call void @llvm.dbg.value(metadata i8 1, metadata !9818, metadata !DIExpression()), !dbg !9822
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9823
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !9823
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !9823
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !9819, metadata !DIExpression()), !dbg !9822
  call void @llvm.dbg.value(metadata i32 0, metadata !9820, metadata !DIExpression()), !dbg !9822
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9821, metadata !DIExpression()), !dbg !9822
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !9824
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !9827
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #25, !dbg !9828
  call void @llvm.dbg.value(metadata i32 %7, metadata !9820, metadata !DIExpression()), !dbg !9822
  ret i32 %7, !dbg !9829
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.123() unnamed_addr #1 !dbg !9830 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9832, metadata !DIExpression()), !dbg !9833
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_9) #24, !dbg !9834
  ret i1 %1, !dbg !9835
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !9836 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9840, metadata !DIExpression()), !dbg !9848
  call void @llvm.dbg.value(metadata i32 %1, metadata !9841, metadata !DIExpression()), !dbg !9848
  call void @llvm.dbg.value(metadata i32 %2, metadata !9842, metadata !DIExpression()), !dbg !9848
  call void @llvm.dbg.value(metadata i32 %3, metadata !9843, metadata !DIExpression()), !dbg !9848
  call void @llvm.dbg.value(metadata i32 0, metadata !9844, metadata !DIExpression()), !dbg !9848
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #25, !dbg !9849
  %5 = icmp eq i32 %3, 17, !dbg !9850
  br i1 %5, label %6, label %14, !dbg !9851

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !9852
  call void @llvm.dbg.value(metadata i32 %7, metadata !9845, metadata !DIExpression()), !dbg !9853
  %8 = icmp eq i32 %7, 0, !dbg !9854
  %9 = shl nuw i32 1, %1, !dbg !9856
  br i1 %8, label %12, label %10, !dbg !9857

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #25, !dbg !9858
  br label %14, !dbg !9860

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #25, !dbg !9861
  br label %14, !dbg !9864

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !9865
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #19 !dbg !9866 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9868, metadata !DIExpression()), !dbg !9872
  call void @llvm.dbg.value(metadata i8* %1, metadata !9869, metadata !DIExpression()), !dbg !9872
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9873
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9873
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9873
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9870, metadata !DIExpression()), !dbg !9872
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9874
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9874
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #25, !dbg !9876
  %9 = icmp eq i32 %8, 0, !dbg !9876
  br i1 %9, label %12, label %10, !dbg !9877

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9878
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #25, !dbg !9880
  br label %12, !dbg !9881

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9882
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #25, !dbg !9884
  %15 = icmp eq i32 %14, 0, !dbg !9884
  br i1 %15, label %19, label %16, !dbg !9885

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9886
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #25, !dbg !9887
  store i8 %18, i8* %1, align 1, !dbg !9888
  br label %19, !dbg !9889

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !9872
  ret i32 %20, !dbg !9890
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !9891 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9893, metadata !DIExpression()), !dbg !9897
  call void @llvm.dbg.value(metadata i8 %1, metadata !9894, metadata !DIExpression()), !dbg !9897
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9898
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9898
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9898
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9895, metadata !DIExpression()), !dbg !9897
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !9899

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9900
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #25, !dbg !9903
  %10 = icmp eq i32 %9, 0, !dbg !9903
  br i1 %10, label %18, label %11, !dbg !9904

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9905, !srcloc !9912
  call void @llvm.dbg.value(metadata i32 undef, metadata !9908, metadata !DIExpression()) #23, !dbg !9913
  call void @llvm.dbg.value(metadata i32 undef, metadata !9909, metadata !DIExpression()) #23, !dbg !9913
  call void @llvm.dbg.value(metadata i32 undef, metadata !9896, metadata !DIExpression()), !dbg !9897
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9914
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #25, !dbg !9916
  %15 = icmp eq i32 %14, 0, !dbg !9916
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !9905
  br i1 %15, label %17, label %19, !dbg !9917

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !9908, metadata !DIExpression()) #23, !dbg !9913
  call void @llvm.dbg.value(metadata i32 %16, metadata !9896, metadata !DIExpression()), !dbg !9897
  call void @llvm.dbg.value(metadata i32 undef, metadata !9918, metadata !DIExpression()) #23, !dbg !9921
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !9923, !srcloc !9924
  br label %18, !dbg !9925

18:                                               ; preds = %17, %7
  br label %7, !dbg !9900, !llvm.loop !9926

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !9905
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9928
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #25, !dbg !9929
  call void @llvm.dbg.value(metadata i32 %20, metadata !9918, metadata !DIExpression()) #23, !dbg !9930
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !9932, !srcloc !9924
  ret void, !dbg !9933
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #19 !dbg !9934 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9936, metadata !DIExpression()), !dbg !9939
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9940
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9940
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9940
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9937, metadata !DIExpression()), !dbg !9939
  call void @llvm.dbg.value(metadata i32 0, metadata !9938, metadata !DIExpression()), !dbg !9939
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9941
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9941
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #25, !dbg !9943
  %8 = icmp ne i32 %7, 0, !dbg !9943
  %9 = zext i1 %8 to i32, !dbg !9944
  call void @llvm.dbg.value(metadata i32 %9, metadata !9938, metadata !DIExpression()), !dbg !9939
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9945
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #25, !dbg !9947
  %12 = icmp eq i32 %11, 0, !dbg !9947
  %13 = or i32 %9, 2, !dbg !9948
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !9948
  call void @llvm.dbg.value(metadata i32 %14, metadata !9938, metadata !DIExpression()), !dbg !9939
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9949
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #25, !dbg !9951
  %17 = icmp eq i32 %16, 0, !dbg !9951
  %18 = or i32 %14, 4, !dbg !9952
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !9952
  call void @llvm.dbg.value(metadata i32 %19, metadata !9938, metadata !DIExpression()), !dbg !9939
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9953
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #25, !dbg !9955
  %22 = icmp eq i32 %21, 0, !dbg !9955
  %23 = or i32 %19, 8, !dbg !9956
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !9956
  call void @llvm.dbg.value(metadata i32 %24, metadata !9938, metadata !DIExpression()), !dbg !9939
  %25 = and i32 %24, 8, !dbg !9957
  %26 = icmp eq i32 %25, 0, !dbg !9957
  br i1 %26, label %29, label %27, !dbg !9959

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9960
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #25, !dbg !9962
  br label %29, !dbg !9963

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !9964
  %31 = icmp eq i32 %30, 0, !dbg !9964
  br i1 %31, label %34, label %32, !dbg !9966

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9967
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #25, !dbg !9969
  br label %34, !dbg !9970

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !9971
  %36 = icmp eq i32 %35, 0, !dbg !9971
  br i1 %36, label %39, label %37, !dbg !9973

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9974
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #25, !dbg !9976
  br label %39, !dbg !9977

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !9978
  %41 = icmp eq i32 %40, 0, !dbg !9978
  br i1 %41, label %44, label %42, !dbg !9980

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9981
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #25, !dbg !9983
  br label %44, !dbg !9984

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9985
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #25, !dbg !9986
  ret i32 %24, !dbg !9987
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !9988 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9990, metadata !DIExpression()), !dbg !9999
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9991, metadata !DIExpression()), !dbg !9999
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10000
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10000
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10000
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9992, metadata !DIExpression()), !dbg !9999
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10001
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !10001
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !10001
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !9993, metadata !DIExpression()), !dbg !9999
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !10002
  %10 = load i8, i8* %9, align 4, !dbg !10002
  %11 = zext i8 %10 to i32, !dbg !10003
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #25, !dbg !10004
  call void @llvm.dbg.value(metadata i32 %12, metadata !9995, metadata !DIExpression()), !dbg !9999
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !10005
  %14 = load i8, i8* %13, align 1, !dbg !10005
  %15 = zext i8 %14 to i32, !dbg !10006
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #25, !dbg !10007
  call void @llvm.dbg.value(metadata i32 %16, metadata !9996, metadata !DIExpression()), !dbg !9999
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !10008
  %18 = load i8, i8* %17, align 2, !dbg !10008
  %19 = zext i8 %18 to i32, !dbg !10009
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #25, !dbg !10010
  call void @llvm.dbg.value(metadata i32 %20, metadata !9997, metadata !DIExpression()), !dbg !9999
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !10011
  %22 = load i8, i8* %21, align 1, !dbg !10011
  %23 = zext i8 %22 to i32, !dbg !10012
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #25, !dbg !10013
  call void @llvm.dbg.value(metadata i32 %24, metadata !9998, metadata !DIExpression()), !dbg !9999
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !10014

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !10016
  br i1 %26, label %69, label %27, !dbg !10018

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !10019

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !10020
  br i1 %29, label %65, label %30, !dbg !10020

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !10022
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !9999
  br i1 %31, label %38, label %34, !dbg !10024

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !10025
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073812480, label %36
  ], !dbg !10025

36:                                               ; preds = %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !10028
  br i1 %37, label %38, label %69, !dbg !10029

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10030
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #25, !dbg !10031
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #25, !dbg !10032
  %41 = icmp eq i32 %12, %40, !dbg !10034
  br i1 %41, label %43, label %42, !dbg !10035

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #25, !dbg !10036
  br label %43, !dbg !10038

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #25, !dbg !10039
  %45 = icmp eq i32 %16, %44, !dbg !10041
  br i1 %45, label %47, label %46, !dbg !10042

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #25, !dbg !10043
  br label %47, !dbg !10045

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #25, !dbg !10046
  %49 = icmp eq i32 %20, %48, !dbg !10048
  br i1 %49, label %51, label %50, !dbg !10049

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #25, !dbg !10050
  br label %51, !dbg !10052

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #25, !dbg !10053
  %53 = icmp eq i32 %24, %52, !dbg !10055
  br i1 %53, label %55, label %54, !dbg !10056

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #25, !dbg !10057
  br label %55, !dbg !10059

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !10060
  %57 = load i32, i32* %56, align 4, !dbg !10060
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !10062
  %59 = load i32, i32* %58, align 4, !dbg !10062
  %60 = icmp eq i32 %57, %59, !dbg !10063
  br i1 %60, label %63, label %61, !dbg !10064

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #25, !dbg !10065
  %62 = load i32, i32* %56, align 4, !dbg !10067
  store i32 %62, i32* %58, align 4, !dbg !10068
  br label %63, !dbg !10069

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !10070
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #25, !dbg !10071
  br label %69, !dbg !10072

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !10020
  %67 = and i8 %66, 1, !dbg !10020
  %68 = icmp eq i8 %67, 0, !dbg !10020
  br i1 %68, label %30, label %69, !dbg !10020

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !9999
  ret i32 %70, !dbg !10073
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #20 !dbg !10074 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10076, metadata !DIExpression()), !dbg !10079
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !10077, metadata !DIExpression()), !dbg !10079
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10080
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !10080
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !10080
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !10078, metadata !DIExpression()), !dbg !10079
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !10081
  %7 = load i32, i32* %6, align 4, !dbg !10081
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !10082
  store i32 %7, i32* %8, align 4, !dbg !10083
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #25, !dbg !10084, !range !10085
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #25, !dbg !10086
  %11 = trunc i32 %10 to i8, !dbg !10086
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !10087
  store i8 %11, i8* %12, align 4, !dbg !10088
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #25, !dbg !10089, !range !10090
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #25, !dbg !10091
  %15 = trunc i32 %14 to i8, !dbg !10091
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !10092
  store i8 %15, i8* %16, align 1, !dbg !10093
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #25, !dbg !10094
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #25, !dbg !10095, !range !10085
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #25, !dbg !10096
  %20 = trunc i32 %19 to i8, !dbg !10096
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !10097
  store i8 %20, i8* %21, align 2, !dbg !10098
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #25, !dbg !10099, !range !10100
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #25, !dbg !10101
  %24 = trunc i32 %23 to i8, !dbg !10101
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !10102
  store i8 %24, i8* %25, align 1, !dbg !10103
  ret i32 0, !dbg !10104
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #5 !dbg !10105 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10109, metadata !DIExpression()), !dbg !10111
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10112
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10112
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10112
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10110, metadata !DIExpression()), !dbg !10111
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10113
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10113
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #25, !dbg !10114
  ret i32 %7, !dbg !10115
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #6 !dbg !10116 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10120, metadata !DIExpression()), !dbg !10121
  %2 = icmp eq i32 %0, 1024, !dbg !10122
  %3 = select i1 %2, i32 2, i32 0, !dbg !10122
  %4 = icmp eq i32 %0, 1536, !dbg !10122
  %5 = select i1 %4, i32 1, i32 %3, !dbg !10122
  ret i32 %5, !dbg !10123
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #5 !dbg !10124 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10126, metadata !DIExpression()), !dbg !10128
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10129
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10129
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10129
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10127, metadata !DIExpression()), !dbg !10128
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10130
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10130
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #25, !dbg !10131
  ret i32 %7, !dbg !10132
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #13 !dbg !10133 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10137, metadata !DIExpression()), !dbg !10138
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !10139
  %3 = icmp ult i32 %2, 4, !dbg !10139
  br i1 %3, label %4, label %7, !dbg !10139

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !10139
  %6 = load i32, i32* %5, align 4, !dbg !10139
  br label %7, !dbg !10139

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !10140
  ret i32 %8, !dbg !10142
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #5 !dbg !10143 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10145, metadata !DIExpression()), !dbg !10147
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10148
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10148
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10148
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10146, metadata !DIExpression()), !dbg !10147
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10149
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10149
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #25, !dbg !10150
  ret i32 %7, !dbg !10151
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #6 !dbg !10152 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10156, metadata !DIExpression()), !dbg !10158
  call void @llvm.dbg.value(metadata i32 %1, metadata !10157, metadata !DIExpression()), !dbg !10158
  %3 = icmp eq i32 %0, 4096, !dbg !10159
  %4 = icmp eq i32 %1, 0, !dbg !10159
  %5 = select i1 %4, i32 4, i32 3, !dbg !10159
  %6 = select i1 %4, i32 3, i32 2, !dbg !10159
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !10159
  ret i32 %7, !dbg !10160
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #5 !dbg !10161 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10163, metadata !DIExpression()), !dbg !10165
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10166
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10166
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10166
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10164, metadata !DIExpression()), !dbg !10165
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10167
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10167
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #25, !dbg !10168
  ret i32 %7, !dbg !10169
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #6 !dbg !10170 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10174, metadata !DIExpression()), !dbg !10175
  %2 = icmp eq i32 %0, 768, !dbg !10176
  %3 = zext i1 %2 to i32, !dbg !10175
  ret i32 %3, !dbg !10178
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !10179 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10184, metadata !DIExpression()), !dbg !10185
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10186
  %3 = load volatile i32, i32* %2, align 4, !dbg !10186
  %4 = and i32 %3, 768, !dbg !10186
  ret i32 %4, !dbg !10187
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !10188 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10190, metadata !DIExpression()), !dbg !10191
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10192
  %3 = load volatile i32, i32* %2, align 4, !dbg !10192
  %4 = and i32 %3, 4096, !dbg !10192
  ret i32 %4, !dbg !10193
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !10194 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10196, metadata !DIExpression()), !dbg !10197
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10198
  %3 = load volatile i32, i32* %2, align 4, !dbg !10198
  %4 = and i32 %3, 12288, !dbg !10198
  ret i32 %4, !dbg !10199
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !10200 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10202, metadata !DIExpression()), !dbg !10203
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10204
  %3 = load volatile i32, i32* %2, align 4, !dbg !10204
  %4 = and i32 %3, 1536, !dbg !10204
  ret i32 %4, !dbg !10205
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #6 !dbg !10206 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10210, metadata !DIExpression()), !dbg !10211
  %2 = icmp eq i32 %0, 2, !dbg !10212
  %3 = select i1 %2, i32 1024, i32 0, !dbg !10212
  %4 = icmp eq i32 %0, 1, !dbg !10212
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !10212
  ret i32 %5, !dbg !10213
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #6 !dbg !10214 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10218, metadata !DIExpression()), !dbg !10219
  %2 = icmp ult i32 %0, 3, !dbg !10220
  br i1 %2, label %3, label %6, !dbg !10220

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !10220
  %5 = load i32, i32* %4, align 4, !dbg !10220
  br label %6, !dbg !10220

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !10221
  ret i32 %7, !dbg !10223
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #6 !dbg !10224 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10228, metadata !DIExpression()), !dbg !10230
  call void @llvm.dbg.value(metadata i32 %1, metadata !10229, metadata !DIExpression()), !dbg !10230
  %3 = icmp eq i32 %0, 4, !dbg !10231
  %4 = icmp eq i32 %1, 0, !dbg !10231
  %5 = select i1 %4, i32 0, i32 4096, !dbg !10231
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !10231
  ret i32 %6, !dbg !10232
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #6 !dbg !10233 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10237, metadata !DIExpression()), !dbg !10238
  %2 = icmp eq i32 %0, 1, !dbg !10239
  %3 = select i1 %2, i32 768, i32 0, !dbg !10238
  ret i32 %3, !dbg !10241
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10242 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10246, metadata !DIExpression()), !dbg !10247
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10248
  %3 = load volatile i32, i32* %2, align 4, !dbg !10248
  %4 = and i32 %3, -8193, !dbg !10248
  store volatile i32 %4, i32* %2, align 4, !dbg !10248
  ret void, !dbg !10249
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !10250 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10254, metadata !DIExpression()), !dbg !10257
  call void @llvm.dbg.value(metadata i32 %1, metadata !10255, metadata !DIExpression()), !dbg !10257
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10258
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10258
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10258
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10256, metadata !DIExpression()), !dbg !10257
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10259
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10259
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #25, !dbg !10260
  ret void, !dbg !10261
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !10262 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10264, metadata !DIExpression()), !dbg !10267
  call void @llvm.dbg.value(metadata i32 %1, metadata !10265, metadata !DIExpression()), !dbg !10267
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10268
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10268
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10268
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10266, metadata !DIExpression()), !dbg !10267
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10269
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10269
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #25, !dbg !10270
  ret void, !dbg !10271
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !10272 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10274, metadata !DIExpression()), !dbg !10277
  call void @llvm.dbg.value(metadata i32 %1, metadata !10275, metadata !DIExpression()), !dbg !10277
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10278
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10278
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10278
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10276, metadata !DIExpression()), !dbg !10277
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10279
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10279
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #25, !dbg !10280
  ret void, !dbg !10281
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !10282 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10284, metadata !DIExpression()), !dbg !10287
  call void @llvm.dbg.value(metadata i32 %1, metadata !10285, metadata !DIExpression()), !dbg !10287
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10288
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10288
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10288
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10286, metadata !DIExpression()), !dbg !10287
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10289
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10289
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #25, !dbg !10290
  ret void, !dbg !10291
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !10292 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10294, metadata !DIExpression()), !dbg !10299
  call void @llvm.dbg.value(metadata i32 %1, metadata !10295, metadata !DIExpression()), !dbg !10299
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10300
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !10300
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !10300
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !10296, metadata !DIExpression()), !dbg !10299
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10301
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !10301
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !10301
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !10297, metadata !DIExpression()), !dbg !10299
  %10 = bitcast i32* %3 to i8*, !dbg !10302
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #23, !dbg !10302
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !10303
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !10303
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !10307
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !10307
  %15 = load i8*, i8** %14, align 4, !dbg !10307
  call void @llvm.dbg.value(metadata i32* %3, metadata !10298, metadata !DIExpression(DW_OP_deref)), !dbg !10299
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #25, !dbg !10308
  %17 = icmp slt i32 %16, 0, !dbg !10309
  br i1 %17, label %18, label %21, !dbg !10310

18:                                               ; preds = %2
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char.128(i32 noundef 1) #25, !dbg !10311
  %20 = zext i8 %19 to i32, !dbg !10311
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.4.129, i32 0, i32 0), i32 noundef %20) #24, !dbg !10311
  br label %31, !dbg !10317

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !10318
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !10318
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %23) #25, !dbg !10319
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !10320
  %25 = load i32, i32* %3, align 4, !dbg !10321
  call void @llvm.dbg.value(metadata i32 %25, metadata !10298, metadata !DIExpression()), !dbg !10299
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %24, i32 noundef %25, i32 noundef %1) #25, !dbg !10322
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !10323
  %27 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %26, i32 0, i32 2, !dbg !10323
  %28 = load volatile i32, i32* %27, align 4, !dbg !10323
  %29 = icmp ugt i32 %28, 16, !dbg !10323
  br i1 %29, label %31, label %30, !dbg !10326

30:                                               ; preds = %21
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5.130, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6.131, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.7.132, i32 0, i32 0), i32 noundef 190) #24, !dbg !10327
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.8.133, i32 0, i32 0)) #24, !dbg !10327
  call void @assert_post_action(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.7.132, i32 0, i32 0), i32 noundef 190) #24, !dbg !10327
  unreachable, !dbg !10327

31:                                               ; preds = %21, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #23, !dbg !10329
  ret void, !dbg !10329
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10330 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10332, metadata !DIExpression()), !dbg !10333
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10334
  %3 = load volatile i32, i32* %2, align 4, !dbg !10334
  %4 = or i32 %3, 8192, !dbg !10334
  store volatile i32 %4, i32* %2, align 4, !dbg !10334
  ret void, !dbg !10335
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !10336 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10338, metadata !DIExpression()), !dbg !10342
  call void @llvm.dbg.value(metadata i8* %1, metadata !10339, metadata !DIExpression()), !dbg !10342
  call void @llvm.dbg.value(metadata i32* %2, metadata !10340, metadata !DIExpression()), !dbg !10342
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10343
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !10343
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !10343
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !10341, metadata !DIExpression()), !dbg !10342
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !10344
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !10344
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !10346
  br i1 %9, label %12, label %10, !dbg !10347

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #24, !dbg !10348
  br label %12, !dbg !10349

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !10342
  ret i32 %13, !dbg !10350
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.128(i32 noundef %0) unnamed_addr #6 !dbg !10351 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10353, metadata !DIExpression()), !dbg !10354
  %2 = icmp eq i32 %0, 2, !dbg !10355
  %3 = select i1 %2, i8 87, i8 63, !dbg !10355
  %4 = icmp eq i32 %0, 1, !dbg !10355
  %5 = select i1 %4, i8 69, i8 %3, !dbg !10355
  ret i8 %5, !dbg !10356
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10357 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10361, metadata !DIExpression()), !dbg !10363
  call void @llvm.dbg.value(metadata i32 0, metadata !10362, metadata !DIExpression()), !dbg !10363
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10364
  %3 = load volatile i32, i32* %2, align 4, !dbg !10364
  %4 = and i32 %3, -32769, !dbg !10364
  store volatile i32 %4, i32* %2, align 4, !dbg !10364
  ret void, !dbg !10365
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !10366 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10370, metadata !DIExpression()), !dbg !10374
  call void @llvm.dbg.value(metadata i32 %1, metadata !10371, metadata !DIExpression()), !dbg !10374
  call void @llvm.dbg.value(metadata i32 0, metadata !10372, metadata !DIExpression()), !dbg !10374
  call void @llvm.dbg.value(metadata i32 %2, metadata !10373, metadata !DIExpression()), !dbg !10374
  %4 = zext i32 %1 to i64, !dbg !10375
  %5 = mul nuw nsw i64 %4, 25, !dbg !10375
  %6 = zext i32 %2 to i64, !dbg !10375
  %7 = shl nuw nsw i64 %6, 2, !dbg !10375
  %8 = udiv i64 %5, %7, !dbg !10375
  %9 = trunc i64 %8 to i32, !dbg !10375
  %10 = udiv i32 %9, 100, !dbg !10375
  %11 = shl nuw nsw i32 %10, 4, !dbg !10375
  %12 = mul i32 %10, -100, !dbg !10375
  %13 = add i32 %12, %9, !dbg !10375
  %14 = shl i32 %13, 4, !dbg !10375
  %15 = add i32 %14, 50, !dbg !10375
  %16 = udiv i32 %15, 100, !dbg !10375
  %17 = and i32 %16, 240, !dbg !10375
  %18 = add nuw nsw i32 %17, %11, !dbg !10375
  %19 = and i32 %16, 15, !dbg !10375
  %20 = and i32 %18, 65520, !dbg !10378
  %21 = or i32 %20, %19, !dbg !10378
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !10379
  store volatile i32 %21, i32* %22, align 4, !dbg !10380
  ret void, !dbg !10381
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10382 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10384, metadata !DIExpression()), !dbg !10386
  call void @llvm.dbg.value(metadata i32 %1, metadata !10385, metadata !DIExpression()), !dbg !10386
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10387
  %4 = load volatile i32, i32* %3, align 4, !dbg !10387
  %5 = and i32 %4, -769, !dbg !10387
  %6 = or i32 %5, %1, !dbg !10387
  store volatile i32 %6, i32* %3, align 4, !dbg !10387
  ret void, !dbg !10388
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10389 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10391, metadata !DIExpression()), !dbg !10393
  call void @llvm.dbg.value(metadata i32 %1, metadata !10392, metadata !DIExpression()), !dbg !10393
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10394
  %4 = load volatile i32, i32* %3, align 4, !dbg !10394
  %5 = and i32 %4, -4097, !dbg !10394
  %6 = or i32 %5, %1, !dbg !10394
  store volatile i32 %6, i32* %3, align 4, !dbg !10394
  ret void, !dbg !10395
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10396 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10398, metadata !DIExpression()), !dbg !10400
  call void @llvm.dbg.value(metadata i32 %1, metadata !10399, metadata !DIExpression()), !dbg !10400
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10401
  %4 = load volatile i32, i32* %3, align 4, !dbg !10401
  %5 = and i32 %4, -12289, !dbg !10401
  %6 = or i32 %5, %1, !dbg !10401
  store volatile i32 %6, i32* %3, align 4, !dbg !10401
  ret void, !dbg !10402
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10403 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10405, metadata !DIExpression()), !dbg !10407
  call void @llvm.dbg.value(metadata i32 %1, metadata !10406, metadata !DIExpression()), !dbg !10407
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10408
  %4 = load volatile i32, i32* %3, align 4, !dbg !10408
  %5 = and i32 %4, -1537, !dbg !10408
  %6 = or i32 %5, %1, !dbg !10408
  store volatile i32 %6, i32* %3, align 4, !dbg !10408
  ret void, !dbg !10409
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !10410 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10412, metadata !DIExpression()), !dbg !10413
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10414
  %3 = load volatile i32, i32* %2, align 4, !dbg !10414
  %4 = lshr i32 %3, 3, !dbg !10415
  %5 = and i32 %4, 1, !dbg !10415
  ret i32 %5, !dbg !10416
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !10417 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10419, metadata !DIExpression()), !dbg !10420
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10421
  %3 = load volatile i32, i32* %2, align 4, !dbg !10421
  %4 = and i32 %3, 1, !dbg !10421
  ret i32 %4, !dbg !10422
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !10423 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10425, metadata !DIExpression()), !dbg !10426
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10427
  %3 = load volatile i32, i32* %2, align 4, !dbg !10427
  %4 = lshr i32 %3, 1, !dbg !10428
  %5 = and i32 %4, 1, !dbg !10428
  ret i32 %5, !dbg !10429
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !10430 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10432, metadata !DIExpression()), !dbg !10433
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10434
  %3 = load volatile i32, i32* %2, align 4, !dbg !10434
  %4 = lshr i32 %3, 8, !dbg !10435
  %5 = and i32 %4, 1, !dbg !10435
  ret i32 %5, !dbg !10436
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10437 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10439, metadata !DIExpression()), !dbg !10440
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10441
  store volatile i32 -257, i32* %2, align 4, !dbg !10441
  ret void, !dbg !10442
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !10443 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10445, metadata !DIExpression()), !dbg !10447
  %3 = bitcast i32* %2 to i8*, !dbg !10448
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10448
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10446, metadata !DIExpression()), !dbg !10449
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10450
  %5 = load volatile i32, i32* %4, align 4, !dbg !10450
  store volatile i32 %5, i32* %2, align 4, !dbg !10451
  %6 = load volatile i32, i32* %2, align 4, !dbg !10452
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10453
  %8 = load volatile i32, i32* %7, align 4, !dbg !10453
  store volatile i32 %8, i32* %2, align 4, !dbg !10454
  %9 = load volatile i32, i32* %2, align 4, !dbg !10455
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10456
  ret void, !dbg !10456
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !10457 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10459, metadata !DIExpression()), !dbg !10461
  %3 = bitcast i32* %2 to i8*, !dbg !10462
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10462
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10460, metadata !DIExpression()), !dbg !10463
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10464
  %5 = load volatile i32, i32* %4, align 4, !dbg !10464
  store volatile i32 %5, i32* %2, align 4, !dbg !10465
  %6 = load volatile i32, i32* %2, align 4, !dbg !10466
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10467
  %8 = load volatile i32, i32* %7, align 4, !dbg !10467
  store volatile i32 %8, i32* %2, align 4, !dbg !10468
  %9 = load volatile i32, i32* %2, align 4, !dbg !10469
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10470
  ret void, !dbg !10470
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !10471 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10473, metadata !DIExpression()), !dbg !10475
  %3 = bitcast i32* %2 to i8*, !dbg !10476
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10476
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10474, metadata !DIExpression()), !dbg !10477
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10478
  %5 = load volatile i32, i32* %4, align 4, !dbg !10478
  store volatile i32 %5, i32* %2, align 4, !dbg !10479
  %6 = load volatile i32, i32* %2, align 4, !dbg !10480
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10481
  %8 = load volatile i32, i32* %7, align 4, !dbg !10481
  store volatile i32 %8, i32* %2, align 4, !dbg !10482
  %9 = load volatile i32, i32* %2, align 4, !dbg !10483
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10484
  ret void, !dbg !10484
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !10485 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10487, metadata !DIExpression()), !dbg !10489
  %3 = bitcast i32* %2 to i8*, !dbg !10490
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10490
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10488, metadata !DIExpression()), !dbg !10491
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10492
  %5 = load volatile i32, i32* %4, align 4, !dbg !10492
  store volatile i32 %5, i32* %2, align 4, !dbg !10493
  %6 = load volatile i32, i32* %2, align 4, !dbg !10494
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10495
  %8 = load volatile i32, i32* %7, align 4, !dbg !10495
  store volatile i32 %8, i32* %2, align 4, !dbg !10496
  %9 = load volatile i32, i32* %2, align 4, !dbg !10497
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10498
  ret void, !dbg !10498
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !10499 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10501, metadata !DIExpression()), !dbg !10502
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10503
  %3 = load volatile i32, i32* %2, align 4, !dbg !10503
  %4 = lshr i32 %3, 7, !dbg !10504
  %5 = and i32 %4, 1, !dbg !10504
  ret i32 %5, !dbg !10505
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !10506 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10510, metadata !DIExpression()), !dbg !10512
  call void @llvm.dbg.value(metadata i8 %1, metadata !10511, metadata !DIExpression()), !dbg !10512
  %3 = zext i8 %1 to i32, !dbg !10513
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10514
  store volatile i32 %3, i32* %4, align 4, !dbg !10515
  ret void, !dbg !10516
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !10517 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10519, metadata !DIExpression()), !dbg !10520
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10521
  %3 = load volatile i32, i32* %2, align 4, !dbg !10521
  %4 = lshr i32 %3, 5, !dbg !10522
  %5 = and i32 %4, 1, !dbg !10522
  ret i32 %5, !dbg !10523
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !10524 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10528, metadata !DIExpression()), !dbg !10529
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10530
  %3 = load volatile i32, i32* %2, align 4, !dbg !10530
  %4 = trunc i32 %3 to i8, !dbg !10531
  ret i8 %4, !dbg !10532
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !10533 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10535, metadata !DIExpression()), !dbg !10541
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10542
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10542
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10542
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10536, metadata !DIExpression()), !dbg !10541
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10543
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !10543
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !10543
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !10537, metadata !DIExpression()), !dbg !10541
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #25, !dbg !10544
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !10545
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !10545
  %10 = tail call fastcc zeroext i1 @device_is_ready.137(%struct.device* noundef %9) #25, !dbg !10547
  br i1 %10, label %14, label %11, !dbg !10548

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.128(i32 noundef 1) #25, !dbg !10549
  %13 = zext i8 %12 to i32, !dbg !10549
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.9.138, i32 0, i32 0), i32 noundef %13) #24, !dbg !10549
  br label %62, !dbg !10555

14:                                               ; preds = %1
  %15 = load %struct.device*, %struct.device** %8, align 4, !dbg !10556
  %16 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !10557
  %17 = bitcast %struct._thread_arch** %16 to i8**, !dbg !10557
  %18 = load i8*, i8** %17, align 4, !dbg !10557
  %19 = tail call fastcc i32 @clock_control_on.139(%struct.device* noundef %15, i8* noundef %18) #25, !dbg !10558
  call void @llvm.dbg.value(metadata i32 %19, metadata !10540, metadata !DIExpression()), !dbg !10541
  %20 = icmp eq i32 %19, 0, !dbg !10559
  br i1 %20, label %24, label %21, !dbg !10561

21:                                               ; preds = %14
  %22 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.128(i32 noundef 1) #25, !dbg !10562
  %23 = zext i8 %22 to i32, !dbg !10562
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.10.140, i32 0, i32 0), i32 noundef %23) #24, !dbg !10562
  br label %62, !dbg !10568

24:                                               ; preds = %14
  %25 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !10569
  %26 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %25, align 4, !dbg !10569
  %27 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %26) #25, !dbg !10570
  call void @llvm.dbg.value(metadata i32 %27, metadata !10540, metadata !DIExpression()), !dbg !10541
  %28 = icmp slt i32 %27, 0, !dbg !10571
  br i1 %28, label %62, label %29, !dbg !10573

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10574
  %31 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10574
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %31) #25, !dbg !10575
  %32 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10576
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %32) #25, !dbg !10577
  %33 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !10578
  %34 = load i32, i32* %33, align 4, !dbg !10578
  %35 = icmp ult i32 %34, 3, !dbg !10580
  br i1 %35, label %39, label %36, !dbg !10580

36:                                               ; preds = %29
  %37 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.128(i32 noundef 2) #25, !dbg !10581
  %38 = zext i8 %37 to i32, !dbg !10581
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.11.141, i32 0, i32 0), i32 noundef %38, i32 noundef %34) #24, !dbg !10581
  call void @llvm.dbg.value(metadata i32 0, metadata !10538, metadata !DIExpression()), !dbg !10541
  call void @llvm.dbg.value(metadata i32 0, metadata !10539, metadata !DIExpression()), !dbg !10541
  br label %44

39:                                               ; preds = %29
  %40 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init, i32 0, i32 %34, !dbg !10580
  %41 = load i32, i32* %40, align 4, !dbg !10580
  %42 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init.12, i32 0, i32 %34, !dbg !10580
  %43 = load i32, i32* %42, align 4, !dbg !10580
  br label %44, !dbg !10580

44:                                               ; preds = %39, %36
  %45 = phi i32 [ 0, %36 ], [ %41, %39 ], !dbg !10590
  %46 = phi i32 [ 0, %36 ], [ %43, %39 ], !dbg !10590
  call void @llvm.dbg.value(metadata i32 %46, metadata !10539, metadata !DIExpression()), !dbg !10541
  call void @llvm.dbg.value(metadata i32 %45, metadata !10538, metadata !DIExpression()), !dbg !10541
  %47 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10591
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %47, i32 noundef %46, i32 noundef %45) #25, !dbg !10592
  %48 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !10593
  %49 = load i8, i8* %48, align 4, !dbg !10593, !range !6692
  %50 = icmp eq i8 %49, 0, !dbg !10593
  br i1 %50, label %52, label %51, !dbg !10595

51:                                               ; preds = %44
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #25, !dbg !10596
  br label %52, !dbg !10598

52:                                               ; preds = %51, %44
  %53 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !10599
  %54 = load i32, i32* %53, align 4, !dbg !10599
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %54) #25, !dbg !10600
  %55 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !10601
  %56 = load i8, i8* %55, align 4, !dbg !10601, !range !6692
  %57 = icmp eq i8 %56, 0, !dbg !10601
  br i1 %57, label %60, label %58, !dbg !10603

58:                                               ; preds = %52
  %59 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10604
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %59) #25, !dbg !10606
  br label %60, !dbg !10607

60:                                               ; preds = %58, %52
  %61 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10608
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %61) #25, !dbg !10609
  br label %62, !dbg !10610

62:                                               ; preds = %24, %60, %21, %11
  %63 = phi i32 [ %19, %21 ], [ 0, %60 ], [ -19, %11 ], [ %27, %24 ], !dbg !10541
  ret i32 %63, !dbg !10611
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #11 !dbg !10612 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10616, metadata !DIExpression()), !dbg !10620
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10621
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !10621
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !10621
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !10617, metadata !DIExpression()), !dbg !10620
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10618, metadata !DIExpression()), !dbg !10620
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !10622
  store %struct.device* @__device_dts_ord_9, %struct.device** %5, align 4, !dbg !10623
  ret void, !dbg !10624
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.137(%struct.device* noundef %0) unnamed_addr #1 !dbg !10625 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10629, metadata !DIExpression()), !dbg !10630
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10631, !srcloc !10633
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.142(%struct.device* noundef %0) #25, !dbg !10634
  ret i1 %2, !dbg !10635
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.139(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !10636 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10638, metadata !DIExpression()), !dbg !10641
  call void @llvm.dbg.value(metadata i8* %1, metadata !10639, metadata !DIExpression()), !dbg !10641
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10642
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !10642
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !10642
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !10640, metadata !DIExpression()), !dbg !10641
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !10643
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !10643
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #24, !dbg !10644
  ret i32 %8, !dbg !10645
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !10646 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10650, metadata !DIExpression()), !dbg !10654
  call void @llvm.dbg.value(metadata i8 0, metadata !10651, metadata !DIExpression()), !dbg !10654
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !10655
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !10655
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10653, metadata !DIExpression(DW_OP_deref)), !dbg !10654
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #24, !dbg !10656
  call void @llvm.dbg.value(metadata i32 %4, metadata !10652, metadata !DIExpression()), !dbg !10654
  %5 = icmp slt i32 %4, 0, !dbg !10657
  br i1 %5, label %9, label %6, !dbg !10659

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !10660
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !10653, metadata !DIExpression()), !dbg !10654
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #25, !dbg !10661
  br label %9, !dbg !10662

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !10654
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !10663
  ret i32 %10, !dbg !10663
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10664 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10666, metadata !DIExpression()), !dbg !10670
  call void @llvm.dbg.value(metadata i32 12, metadata !10667, metadata !DIExpression()), !dbg !10670
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10671

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10672, metadata !DIExpression()) #23, !dbg !10678
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #23, !dbg !10681, !srcloc !10682
  call void @llvm.dbg.value(metadata i32 %4, metadata !10677, metadata !DIExpression()) #23, !dbg !10678
  %5 = or i32 %4, 12, !dbg !10683
  call void @llvm.dbg.value(metadata i32 %5, metadata !10668, metadata !DIExpression()), !dbg !10684
  call void @llvm.dbg.value(metadata i32 %5, metadata !10685, metadata !DIExpression()) #23, !dbg !10692
  call void @llvm.dbg.value(metadata i32* %2, metadata !10690, metadata !DIExpression()) #23, !dbg !10692
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #23, !dbg !10694, !srcloc !10695
  call void @llvm.dbg.value(metadata i32 %6, metadata !10691, metadata !DIExpression()) #23, !dbg !10692
  %7 = icmp eq i32 %6, 0, !dbg !10671
  br i1 %7, label %8, label %3, !dbg !10683, !llvm.loop !10696

8:                                                ; preds = %3
  ret void, !dbg !10697
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !10698 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10700, metadata !DIExpression()), !dbg !10704
  call void @llvm.dbg.value(metadata i32 %1, metadata !10701, metadata !DIExpression()), !dbg !10704
  call void @llvm.dbg.value(metadata i32 %2, metadata !10702, metadata !DIExpression()), !dbg !10704
  call void @llvm.dbg.value(metadata i32 0, metadata !10703, metadata !DIExpression()), !dbg !10704
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10705
  %5 = load volatile i32, i32* %4, align 4, !dbg !10705
  %6 = and i32 %5, -5633, !dbg !10705
  %7 = or i32 %2, %1, !dbg !10705
  %8 = or i32 %7, %6, !dbg !10705
  store volatile i32 %8, i32* %4, align 4, !dbg !10705
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10706
  %10 = load volatile i32, i32* %9, align 4, !dbg !10706
  %11 = and i32 %10, -12289, !dbg !10706
  store volatile i32 %11, i32* %9, align 4, !dbg !10706
  ret void, !dbg !10707
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10708 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10710, metadata !DIExpression()), !dbg !10711
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10712
  %3 = load volatile i32, i32* %2, align 4, !dbg !10712
  %4 = or i32 %3, 8, !dbg !10712
  store volatile i32 %4, i32* %2, align 4, !dbg !10712
  ret void, !dbg !10713
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !10714 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !10718, metadata !DIExpression()), !dbg !10721
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !10719, metadata !DIExpression()), !dbg !10721
  call void @llvm.dbg.value(metadata i32 0, metadata !10720, metadata !DIExpression()), !dbg !10721
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !10722
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !10722
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !10723
  %5 = load i8, i8* %4, align 4, !dbg !10723
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #24, !dbg !10724
  ret i32 %6, !dbg !10725
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.142(%struct.device* noundef %0) unnamed_addr #1 !dbg !10726 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10728, metadata !DIExpression()), !dbg !10729
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #24, !dbg !10730
  ret i1 %2, !dbg !10731
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #15 !dbg !10732 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10734, metadata !DIExpression()), !dbg !10735
  tail call fastcc void @__NVIC_SetPriority.144() #25, !dbg !10736
  store i32 8399, i32* @last_load, align 4, !dbg !10737
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10738
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10739
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10740
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10741
  %3 = or i32 %2, 7, !dbg !10741
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10741
  ret i32 0, !dbg !10742
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.144() unnamed_addr #15 !dbg !10743 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !10745, metadata !DIExpression()), !dbg !10747
  call void @llvm.dbg.value(metadata i32 1, metadata !10746, metadata !DIExpression()), !dbg !10747
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !10748
  ret void, !dbg !10751
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !10752 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10754, metadata !DIExpression()), !dbg !10756
  %2 = tail call fastcc i32 @elapsed() #25, !dbg !10757
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10758
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10759
  %5 = add i32 %4, %3, !dbg !10759
  store i32 %5, i32* @cycle_count, align 4, !dbg !10759
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10760
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !10761
  %7 = sub i32 %5, %6, !dbg !10764
  %8 = udiv i32 %7, 8400, !dbg !10765
  call void @llvm.dbg.value(metadata i32 %8, metadata !10755, metadata !DIExpression()), !dbg !10756
  %9 = mul nuw i32 %8, 8400, !dbg !10766
  %10 = add i32 %9, %6, !dbg !10767
  store i32 %10, i32* @announced_cycles, align 4, !dbg !10767
  tail call void @sys_clock_announce(i32 noundef %8) #24, !dbg !10768
  tail call void @z_arm_int_exit() #24, !dbg !10769
  ret void, !dbg !10770
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #15 !dbg !10771 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10776
  call void @llvm.dbg.value(metadata i32 %1, metadata !10773, metadata !DIExpression()), !dbg !10777
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10778
  call void @llvm.dbg.value(metadata i32 %2, metadata !10774, metadata !DIExpression()), !dbg !10777
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10779
  call void @llvm.dbg.value(metadata i32 %3, metadata !10775, metadata !DIExpression()), !dbg !10777
  %4 = and i32 %2, 65536, !dbg !10780
  %5 = icmp ne i32 %4, 0, !dbg !10780
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !10782
  %8 = load i32, i32* @last_load, align 4, !dbg !10777
  br i1 %7, label %9, label %13, !dbg !10782

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10783
  %11 = add i32 %10, %8, !dbg !10783
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !10783
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10785
  br label %13, !dbg !10786

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !10787
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10788
  %16 = add i32 %14, %15, !dbg !10789
  ret i32 %16, !dbg !10790
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !10791 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10795, metadata !DIExpression()), !dbg !10808
  call void @llvm.dbg.value(metadata i1 %1, metadata !10796, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10808
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !10809
  br i1 %4, label %5, label %8, !dbg !10809

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10811
  %7 = and i32 %6, -2, !dbg !10811
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10811
  store i32 -16777216, i32* @last_load, align 4, !dbg !10813
  br label %60, !dbg !10814

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !10815
  call void @llvm.dbg.value(metadata i32 %9, metadata !10800, metadata !DIExpression()), !dbg !10808
  br i1 %3, label %18, label %10, !dbg !10816

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !10816
  call void @llvm.dbg.value(metadata i32 undef, metadata !10795, metadata !DIExpression()), !dbg !10808
  %12 = icmp slt i32 %11, 1, !dbg !10817
  br i1 %12, label %18, label %13, !dbg !10817

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !10817
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !10817
  %16 = mul nuw nsw i32 %15, 8400, !dbg !10817
  %17 = add nuw nsw i32 %16, 8399, !dbg !10817
  br label %18, !dbg !10817

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !10795, metadata !DIExpression()), !dbg !10808
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10818, metadata !DIExpression()) #23, !dbg !10825
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10827, !srcloc !10833
  call void @llvm.dbg.value(metadata i32 undef, metadata !10830, metadata !DIExpression()) #23, !dbg !10834
  call void @llvm.dbg.value(metadata i32 undef, metadata !10831, metadata !DIExpression()) #23, !dbg !10834
  call void @llvm.dbg.value(metadata i32 undef, metadata !10824, metadata !DIExpression()) #23, !dbg !10825
  %21 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10835
  br i1 %21, label %23, label %22, !dbg !10838

22:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.145, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.146, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.147, i32 0, i32 0), i32 noundef 148) #24, !dbg !10839
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.148, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10839
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.147, i32 0, i32 0), i32 noundef 148) #24, !dbg !10839
  unreachable, !dbg !10839

23:                                               ; preds = %18
  %24 = extractvalue { i32, i32 } %20, 0, !dbg !10827
  call void @llvm.dbg.value(metadata i32 %24, metadata !10830, metadata !DIExpression()) #23, !dbg !10834
  call void @llvm.dbg.value(metadata i32 %24, metadata !10824, metadata !DIExpression()) #23, !dbg !10825
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10841
  call void @llvm.dbg.value(metadata i32 %24, metadata !10801, metadata !DIExpression()), !dbg !10808
  %25 = tail call fastcc i32 @elapsed() #25, !dbg !10842
  call void @llvm.dbg.value(metadata i32 %25, metadata !10806, metadata !DIExpression()), !dbg !10808
  %26 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10843
  call void @llvm.dbg.value(metadata i32 %26, metadata !10798, metadata !DIExpression()), !dbg !10808
  %27 = load i32, i32* @cycle_count, align 4, !dbg !10844
  %28 = add i32 %27, %25, !dbg !10844
  store i32 %28, i32* @cycle_count, align 4, !dbg !10844
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10845
  %29 = load i32, i32* @announced_cycles, align 4, !dbg !10846
  %30 = sub i32 %28, %29, !dbg !10847
  call void @llvm.dbg.value(metadata i32 %30, metadata !10807, metadata !DIExpression()), !dbg !10808
  %31 = icmp slt i32 %30, 0, !dbg !10848
  br i1 %31, label %41, label %32, !dbg !10850

32:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 undef, metadata !10797, metadata !DIExpression()), !dbg !10808
  call void @llvm.dbg.value(metadata i32 undef, metadata !10797, metadata !DIExpression()), !dbg !10808
  %33 = add nuw i32 %19, %30, !dbg !10851
  %34 = urem i32 %33, 8400, !dbg !10853
  call void @llvm.dbg.value(metadata !DIArgList(i32 %33, i32 %34), metadata !10797, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10808
  %35 = sub nuw nsw i32 %19, %34, !dbg !10854
  call void @llvm.dbg.value(metadata i32 %35, metadata !10797, metadata !DIExpression()), !dbg !10808
  %36 = icmp ugt i32 %35, 1024, !dbg !10855
  br i1 %36, label %37, label %39, !dbg !10855

37:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i32 %35, metadata !10797, metadata !DIExpression()), !dbg !10808
  %38 = icmp ugt i32 %35, 16766400, !dbg !10856
  br i1 %38, label %41, label %39, !dbg !10858

39:                                               ; preds = %32, %37
  %40 = phi i32 [ %35, %37 ], [ 1024, %32 ]
  br label %41

41:                                               ; preds = %37, %23, %39
  %42 = phi i32 [ %40, %39 ], [ 1024, %23 ], [ 16766400, %37 ]
  store i32 %42, i32* @last_load, align 4, !dbg !10859
  %43 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10860
  call void @llvm.dbg.value(metadata i32 %43, metadata !10799, metadata !DIExpression()), !dbg !10808
  %44 = add nsw i32 %42, -1, !dbg !10861
  store volatile i32 %44, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10862
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10863
  %45 = icmp ult i32 %26, %43, !dbg !10864
  br i1 %45, label %46, label %51, !dbg !10866

46:                                               ; preds = %41
  %47 = load i32, i32* @cycle_count, align 4, !dbg !10867
  %48 = add i32 %26, %9, !dbg !10869
  %49 = sub i32 %48, %43, !dbg !10870
  %50 = add i32 %49, %47, !dbg !10867
  br label %55, !dbg !10871

51:                                               ; preds = %41
  %52 = sub i32 %26, %43, !dbg !10872
  %53 = load i32, i32* @cycle_count, align 4, !dbg !10874
  %54 = add i32 %52, %53, !dbg !10874
  br label %55

55:                                               ; preds = %51, %46
  %56 = phi i32 [ %54, %51 ], [ %50, %46 ], !dbg !10875
  store i32 %56, i32* @cycle_count, align 4, !dbg !10875
  call void @llvm.dbg.value(metadata i32 undef, metadata !10876, metadata !DIExpression()) #23, !dbg !10882
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10881, metadata !DIExpression()) #23, !dbg !10882
  %57 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10884
  br i1 %57, label %59, label %58, !dbg !10887

58:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.145, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.149, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.147, i32 0, i32 0), i32 noundef 194) #24, !dbg !10888
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.150, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10888
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.147, i32 0, i32 0), i32 noundef 194) #24, !dbg !10888
  unreachable, !dbg !10888

59:                                               ; preds = %55
  call void @llvm.dbg.value(metadata i32 %24, metadata !10876, metadata !DIExpression()) #23, !dbg !10882
  call void @llvm.dbg.value(metadata i32 %24, metadata !10890, metadata !DIExpression()) #23, !dbg !10893
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !10895, !srcloc !10896
  br label %60

60:                                               ; preds = %59, %5
  ret void, !dbg !10897
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !10898 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10818, metadata !DIExpression()) #23, !dbg !10902
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10904, !srcloc !10833
  call void @llvm.dbg.value(metadata i32 undef, metadata !10830, metadata !DIExpression()) #23, !dbg !10906
  call void @llvm.dbg.value(metadata i32 undef, metadata !10831, metadata !DIExpression()) #23, !dbg !10906
  call void @llvm.dbg.value(metadata i32 undef, metadata !10824, metadata !DIExpression()) #23, !dbg !10902
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10907
  br i1 %2, label %4, label %3, !dbg !10908

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.145, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.146, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.147, i32 0, i32 0), i32 noundef 148) #24, !dbg !10909
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.148, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10909
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.147, i32 0, i32 0), i32 noundef 148) #24, !dbg !10909
  unreachable, !dbg !10909

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !10830, metadata !DIExpression()) #23, !dbg !10906
  call void @llvm.dbg.value(metadata i32 undef, metadata !10824, metadata !DIExpression()) #23, !dbg !10902
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10910
  call void @llvm.dbg.value(metadata i32 undef, metadata !10900, metadata !DIExpression()), !dbg !10911
  %5 = tail call fastcc i32 @elapsed() #25, !dbg !10912
  %6 = load i32, i32* @cycle_count, align 4, !dbg !10913
  %7 = load i32, i32* @announced_cycles, align 4, !dbg !10914
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %7, i32 %6), metadata !10901, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10911
  call void @llvm.dbg.value(metadata i32 undef, metadata !10876, metadata !DIExpression()) #23, !dbg !10915
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10881, metadata !DIExpression()) #23, !dbg !10915
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10917
  br i1 %8, label %10, label %9, !dbg !10918

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.145, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.149, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.147, i32 0, i32 0), i32 noundef 194) #24, !dbg !10919
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.150, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10919
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.147, i32 0, i32 0), i32 noundef 194) #24, !dbg !10919
  unreachable, !dbg !10919

10:                                               ; preds = %4
  %11 = add i32 %6, %5, !dbg !10920
  call void @llvm.dbg.value(metadata !DIArgList(i32 %11, i32 %7), metadata !10901, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10911
  %12 = sub i32 %11, %7, !dbg !10921
  call void @llvm.dbg.value(metadata i32 %12, metadata !10901, metadata !DIExpression()), !dbg !10911
  %13 = extractvalue { i32, i32 } %1, 0, !dbg !10904
  call void @llvm.dbg.value(metadata i32 %13, metadata !10830, metadata !DIExpression()) #23, !dbg !10906
  call void @llvm.dbg.value(metadata i32 %13, metadata !10824, metadata !DIExpression()) #23, !dbg !10902
  call void @llvm.dbg.value(metadata i32 %13, metadata !10900, metadata !DIExpression()), !dbg !10911
  call void @llvm.dbg.value(metadata i32 undef, metadata !10876, metadata !DIExpression()) #23, !dbg !10915
  call void @llvm.dbg.value(metadata i32 undef, metadata !10890, metadata !DIExpression()) #23, !dbg !10922
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #23, !dbg !10924, !srcloc !10896
  %14 = udiv i32 %12, 8400, !dbg !10925
  ret i32 %14, !dbg !10926
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !10927 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10818, metadata !DIExpression()) #23, !dbg !10931
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10933, !srcloc !10833
  call void @llvm.dbg.value(metadata i32 undef, metadata !10830, metadata !DIExpression()) #23, !dbg !10935
  call void @llvm.dbg.value(metadata i32 undef, metadata !10831, metadata !DIExpression()) #23, !dbg !10935
  call void @llvm.dbg.value(metadata i32 undef, metadata !10824, metadata !DIExpression()) #23, !dbg !10931
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10936
  br i1 %2, label %4, label %3, !dbg !10937

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.145, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.146, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.147, i32 0, i32 0), i32 noundef 148) #24, !dbg !10938
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.148, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10938
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.147, i32 0, i32 0), i32 noundef 148) #24, !dbg !10938
  unreachable, !dbg !10938

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !10830, metadata !DIExpression()) #23, !dbg !10935
  call void @llvm.dbg.value(metadata i32 undef, metadata !10824, metadata !DIExpression()) #23, !dbg !10931
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10939
  call void @llvm.dbg.value(metadata i32 undef, metadata !10929, metadata !DIExpression()), !dbg !10940
  %5 = tail call fastcc i32 @elapsed() #25, !dbg !10941
  %6 = load i32, i32* @cycle_count, align 4, !dbg !10942
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %6), metadata !10930, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !10940
  call void @llvm.dbg.value(metadata i32 undef, metadata !10876, metadata !DIExpression()) #23, !dbg !10943
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10881, metadata !DIExpression()) #23, !dbg !10943
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10945
  br i1 %7, label %9, label %8, !dbg !10946

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.145, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.149, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.147, i32 0, i32 0), i32 noundef 194) #24, !dbg !10947
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.150, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10947
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.147, i32 0, i32 0), i32 noundef 194) #24, !dbg !10947
  unreachable, !dbg !10947

9:                                                ; preds = %4
  %10 = add i32 %6, %5, !dbg !10948
  call void @llvm.dbg.value(metadata i32 %10, metadata !10930, metadata !DIExpression()), !dbg !10940
  %11 = extractvalue { i32, i32 } %1, 0, !dbg !10933
  call void @llvm.dbg.value(metadata i32 %11, metadata !10830, metadata !DIExpression()) #23, !dbg !10935
  call void @llvm.dbg.value(metadata i32 %11, metadata !10824, metadata !DIExpression()) #23, !dbg !10931
  call void @llvm.dbg.value(metadata i32 %11, metadata !10929, metadata !DIExpression()), !dbg !10940
  call void @llvm.dbg.value(metadata i32 undef, metadata !10876, metadata !DIExpression()) #23, !dbg !10943
  call void @llvm.dbg.value(metadata i32 undef, metadata !10890, metadata !DIExpression()) #23, !dbg !10949
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !10951, !srcloc !10896
  ret i32 %10, !dbg !10952
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #15 !dbg !10953 {
  %1 = load i32, i32* @last_load, align 4, !dbg !10954
  %2 = icmp eq i32 %1, -16777216, !dbg !10956
  br i1 %2, label %3, label %6, !dbg !10957

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10958
  %5 = or i32 %4, 1, !dbg !10958
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10958
  br label %6, !dbg !10960

6:                                                ; preds = %3, %0
  ret void, !dbg !10961
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #15 !dbg !10962 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10963
  %2 = and i32 %1, -2, !dbg !10963
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10963
  ret void, !dbg !10964
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #14 !dbg !10965 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10991, metadata !DIExpression()), !dbg !10994
  call void @llvm.dbg.value(metadata i8 %1, metadata !10992, metadata !DIExpression()), !dbg !10994
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10993, metadata !DIExpression()), !dbg !10994
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !10995
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10995
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !10994
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10996
  %8 = load i8, i8* %6, align 4, !dbg !10997
  %9 = zext i8 %8 to i32, !dbg !10998
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !10998
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !10999
  br i1 %11, label %18, label %24, !dbg !11000

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !10994
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10996
  %14 = load i8, i8* %6, align 4, !dbg !10997
  %15 = zext i8 %14 to i32, !dbg !10998
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !10998
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !10999
  br i1 %17, label %18, label %24, !dbg !11000, !llvm.loop !11001

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !11003
  %21 = load i8, i8* %20, align 1, !dbg !11003
  %22 = icmp eq i8 %21, %1, !dbg !11006
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !11007
  br i1 %22, label %24, label %12, !dbg !11008

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !10994
  ret i32 %25, !dbg !11009
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11010 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !11021, metadata !DIExpression()), !dbg !11037
  call void @llvm.dbg.value(metadata i8 %1, metadata !11022, metadata !DIExpression()), !dbg !11037
  call void @llvm.dbg.value(metadata i32 %2, metadata !11023, metadata !DIExpression()), !dbg !11037
  call void @llvm.dbg.value(metadata i32 0, metadata !11026, metadata !DIExpression()), !dbg !11037
  call void @llvm.dbg.value(metadata i32 0, metadata !11027, metadata !DIExpression()), !dbg !11037
  call void @llvm.dbg.value(metadata i8 0, metadata !11028, metadata !DIExpression()), !dbg !11038
  %4 = icmp eq i8 %1, 0, !dbg !11039
  br i1 %4, label %35, label %5, !dbg !11040

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !11039
  br label %9, !dbg !11040

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !11028, metadata !DIExpression()), !dbg !11038
  call void @llvm.dbg.value(metadata i32 %29, metadata !11026, metadata !DIExpression()), !dbg !11037
  %8 = icmp eq i32 %34, %6, !dbg !11039
  br i1 %8, label %35, label %9, !dbg !11040, !llvm.loop !11041

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11028, metadata !DIExpression()), !dbg !11038
  call void @llvm.dbg.value(metadata i32 %11, metadata !11026, metadata !DIExpression()), !dbg !11037
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !11043
  %13 = load i32, i32* %12, align 4, !dbg !11043
  call void @llvm.dbg.value(metadata i32 %13, metadata !11025, metadata !DIExpression()), !dbg !11037
  %14 = and i32 %13, 31, !dbg !11044
  %15 = icmp ult i32 %14, 16, !dbg !11045
  br i1 %15, label %16, label %20, !dbg !11046

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !11047
  %18 = load i32, i32* %17, align 4, !dbg !11047
  %19 = or i32 %18, 32, !dbg !11049
  call void @llvm.dbg.value(metadata i32 %19, metadata !11026, metadata !DIExpression()), !dbg !11037
  br label %28, !dbg !11050

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !11051

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !11052
  %23 = load i32, i32* %22, align 4, !dbg !11052
  call void @llvm.dbg.value(metadata i32 %23, metadata !11030, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !11053
  %24 = lshr i32 %23, 7, !dbg !11054
  %25 = and i32 %24, 16, !dbg !11054
  %26 = or i32 %25, %23, !dbg !11054
  call void @llvm.dbg.value(metadata i32 %26, metadata !11026, metadata !DIExpression()), !dbg !11037
  br label %28, !dbg !11055

27:                                               ; preds = %20
  br label %28

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ %11, %27 ], [ 48, %20 ], !dbg !11037
  call void @llvm.dbg.value(metadata i32 %29, metadata !11026, metadata !DIExpression()), !dbg !11037
  %30 = lshr i32 %13, 5, !dbg !11056
  %31 = and i32 %30, 255, !dbg !11056
  call void @llvm.dbg.value(metadata i32 %31, metadata !11024, metadata !DIExpression()), !dbg !11037
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #25, !dbg !11057
  call void @llvm.dbg.value(metadata i32 %32, metadata !11027, metadata !DIExpression()), !dbg !11037
  %33 = icmp slt i32 %32, 0, !dbg !11058
  %34 = add nuw nsw i32 %10, 1, !dbg !11060
  call void @llvm.dbg.value(metadata i32 %34, metadata !11028, metadata !DIExpression()), !dbg !11038
  br i1 %33, label %35, label %7, !dbg !11061

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !11062
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11063 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11067, metadata !DIExpression()), !dbg !11071
  call void @llvm.dbg.value(metadata i32 %1, metadata !11068, metadata !DIExpression()), !dbg !11071
  call void @llvm.dbg.value(metadata i32 %2, metadata !11069, metadata !DIExpression()), !dbg !11071
  %4 = icmp ugt i32 %0, 175, !dbg !11072
  br i1 %4, label %16, label %5, !dbg !11074

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !11075
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !11076
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !11076
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !11070, metadata !DIExpression()), !dbg !11071
  %9 = add nsw i32 %6, -8, !dbg !11077
  %10 = icmp ult i32 %9, 3, !dbg !11077
  br i1 %10, label %16, label %11, !dbg !11079

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.157(%struct.device* noundef %8) #25, !dbg !11080
  br i1 %12, label %13, label %16, !dbg !11081

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !11082
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #24, !dbg !11083
  br label %16, !dbg !11084

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !11071
  ret i32 %17, !dbg !11085
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.157(%struct.device* noundef %0) unnamed_addr #1 !dbg !11086 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11090, metadata !DIExpression()), !dbg !11091
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11092, !srcloc !11094
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.158(%struct.device* noundef %0) #25, !dbg !11095
  ret i1 %2, !dbg !11096
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.158(%struct.device* noundef %0) unnamed_addr #1 !dbg !11097 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11099, metadata !DIExpression()), !dbg !11100
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #24, !dbg !11101
  ret i1 %2, !dbg !11102
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #6 !dbg !11103 {
  ret void, !dbg !11104
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #5 !dbg !11105 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11107, metadata !DIExpression()), !dbg !11112
  call void @llvm.dbg.value(metadata i32 0, metadata !11108, metadata !DIExpression()), !dbg !11112
  call void @llvm.dbg.value(metadata i32 2, metadata !11109, metadata !DIExpression()), !dbg !11112
  call void @llvm.dbg.value(metadata i32 0, metadata !11110, metadata !DIExpression()), !dbg !11112
  call void @llvm.dbg.value(metadata i32 2, metadata !11111, metadata !DIExpression()), !dbg !11112
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11113
  %2 = and i32 %1, 12, !dbg !11114
  call void @llvm.dbg.value(metadata i32 %2, metadata !11107, metadata !DIExpression()), !dbg !11112
  %3 = icmp eq i32 %2, 8, !dbg !11115
  br i1 %3, label %4, label %18, !dbg !11115

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11116
  call void @llvm.dbg.value(metadata i32 %5, metadata !11110, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !11112
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11118
  %7 = and i32 %6, 63, !dbg !11119
  call void @llvm.dbg.value(metadata i32 %7, metadata !11111, metadata !DIExpression()), !dbg !11112
  %8 = udiv i32 16000000, %7, !dbg !11120
  %9 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11120
  %10 = lshr i32 %9, 6, !dbg !11120
  %11 = and i32 %10, 511, !dbg !11120
  %12 = mul i32 %11, %8, !dbg !11120
  call void @llvm.dbg.value(metadata i32 %12, metadata !11108, metadata !DIExpression()), !dbg !11112
  call void @llvm.dbg.value(metadata i32 %12, metadata !11108, metadata !DIExpression()), !dbg !11112
  call void @llvm.dbg.value(metadata i32 %12, metadata !11108, metadata !DIExpression()), !dbg !11112
  %13 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11122
  %14 = lshr i32 %13, 15, !dbg !11123
  %15 = and i32 %14, 6, !dbg !11123
  %16 = add nuw nsw i32 %15, 2, !dbg !11123
  call void @llvm.dbg.value(metadata i32 %16, metadata !11109, metadata !DIExpression()), !dbg !11112
  %17 = udiv i32 %12, %16, !dbg !11124
  br label %18, !dbg !11125

18:                                               ; preds = %0, %4
  %19 = phi i32 [ %17, %4 ], [ 16000000, %0 ]
  store i32 %19, i32* @SystemCoreClock, align 4, !dbg !11126
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11127
  %21 = lshr i32 %20, 4, !dbg !11128
  %22 = and i32 %21, 15, !dbg !11128
  %23 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %22, !dbg !11129
  %24 = load i8, i8* %23, align 1, !dbg !11129
  %25 = zext i8 %24 to i32, !dbg !11129
  call void @llvm.dbg.value(metadata i32 %25, metadata !11107, metadata !DIExpression()), !dbg !11112
  %26 = lshr i32 %19, %25, !dbg !11130
  store i32 %26, i32* @SystemCoreClock, align 4, !dbg !11130
  ret void, !dbg !11131
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !11132 {
  ret i32 0, !dbg !11137
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !11138 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11164, metadata !DIExpression()), !dbg !11175
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !11176
  br i1 %3, label %311, label %4, !dbg !11178

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11179
  %6 = load i32, i32* %5, align 4, !dbg !11179
  %7 = and i32 %6, 1, !dbg !11181
  %8 = icmp eq i32 %7, 0, !dbg !11182
  br i1 %8, label %66, label %9, !dbg !11183

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11184
  %11 = and i32 %10, 12, !dbg !11184
  %12 = icmp eq i32 %11, 4, !dbg !11187
  br i1 %12, label %21, label %13, !dbg !11188

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11189
  %15 = and i32 %14, 12, !dbg !11189
  %16 = icmp eq i32 %15, 8, !dbg !11190
  br i1 %16, label %17, label %29, !dbg !11191

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11192
  %19 = and i32 %18, 4194304, !dbg !11193
  %20 = icmp eq i32 %19, 0, !dbg !11194
  br i1 %20, label %29, label %21, !dbg !11195

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11196
  %23 = and i32 %22, 131072, !dbg !11196
  %24 = icmp eq i32 %23, 0, !dbg !11196
  br i1 %24, label %66, label %25, !dbg !11199

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11200
  %27 = load i32, i32* %26, align 4, !dbg !11200
  %28 = icmp eq i32 %27, 0, !dbg !11201
  br i1 %28, label %311, label %66, !dbg !11202

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11203
  %31 = load i32, i32* %30, align 4, !dbg !11203
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !11207

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11208
  %34 = or i32 %33, 65536, !dbg !11208
  br label %45, !dbg !11208

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11210
  %37 = or i32 %36, 262144, !dbg !11210
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11210
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11210
  %39 = or i32 %38, 65536, !dbg !11210
  br label %45, !dbg !11210

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11213
  %42 = and i32 %41, -65537, !dbg !11213
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11213
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11213
  %44 = and i32 %43, -262145, !dbg !11213
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11215
  %47 = load i32, i32* %30, align 4, !dbg !11216
  %48 = icmp eq i32 %47, 0, !dbg !11218
  %49 = tail call i32 @HAL_GetTick() #24, !dbg !11219
  call void @llvm.dbg.value(metadata i32 %49, metadata !11165, metadata !DIExpression()), !dbg !11175
  call void @llvm.dbg.value(metadata i32 %49, metadata !11165, metadata !DIExpression()), !dbg !11175
  br i1 %48, label %58, label %50, !dbg !11220

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11221
  %52 = and i32 %51, 131072, !dbg !11223
  %53 = icmp eq i32 %52, 0, !dbg !11223
  br i1 %53, label %54, label %66, !dbg !11224

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #24, !dbg !11225
  %56 = sub i32 %55, %49, !dbg !11228
  %57 = icmp ugt i32 %56, 100, !dbg !11229
  br i1 %57, label %311, label %50, !dbg !11230, !llvm.loop !11231

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11233
  %60 = and i32 %59, 131072, !dbg !11233
  %61 = icmp eq i32 %60, 0, !dbg !11233
  br i1 %61, label %66, label %62, !dbg !11235

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #24, !dbg !11236
  %64 = sub i32 %63, %49, !dbg !11239
  %65 = icmp ugt i32 %64, 100, !dbg !11240
  br i1 %65, label %311, label %58, !dbg !11241, !llvm.loop !11242

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !11244
  %68 = and i32 %67, 2, !dbg !11246
  %69 = icmp eq i32 %68, 0, !dbg !11247
  br i1 %69, label %121, label %70, !dbg !11248

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11249
  %72 = and i32 %71, 12, !dbg !11249
  %73 = icmp eq i32 %72, 0, !dbg !11252
  br i1 %73, label %82, label %74, !dbg !11253

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11254
  %76 = and i32 %75, 12, !dbg !11254
  %77 = icmp eq i32 %76, 8, !dbg !11255
  br i1 %77, label %78, label %90, !dbg !11256

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11257
  %80 = and i32 %79, 4194304, !dbg !11258
  %81 = icmp eq i32 %80, 0, !dbg !11259
  br i1 %81, label %82, label %90, !dbg !11260

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11261
  %84 = and i32 %83, 2, !dbg !11261
  %85 = icmp eq i32 %84, 0, !dbg !11261
  br i1 %85, label %114, label %86, !dbg !11264

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11265
  %88 = load i32, i32* %87, align 4, !dbg !11265
  %89 = icmp eq i32 %88, 1, !dbg !11266
  br i1 %89, label %114, label %311, !dbg !11267

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11268
  %92 = load i32, i32* %91, align 4, !dbg !11268
  %93 = icmp eq i32 %92, 0, !dbg !11271
  br i1 %93, label %104, label %94, !dbg !11272

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !11273
  %95 = tail call i32 @HAL_GetTick() #24, !dbg !11275
  call void @llvm.dbg.value(metadata i32 %95, metadata !11165, metadata !DIExpression()), !dbg !11175
  br label %96, !dbg !11276

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11277
  %98 = and i32 %97, 2, !dbg !11278
  %99 = icmp eq i32 %98, 0, !dbg !11278
  br i1 %99, label %100, label %114, !dbg !11276

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #24, !dbg !11279
  %102 = sub i32 %101, %95, !dbg !11282
  %103 = icmp ugt i32 %102, 2, !dbg !11283
  br i1 %103, label %311, label %96, !dbg !11284, !llvm.loop !11285

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !11287
  %105 = tail call i32 @HAL_GetTick() #24, !dbg !11289
  call void @llvm.dbg.value(metadata i32 %105, metadata !11165, metadata !DIExpression()), !dbg !11175
  br label %106, !dbg !11290

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11291
  %108 = and i32 %107, 2, !dbg !11291
  %109 = icmp eq i32 %108, 0, !dbg !11291
  br i1 %109, label %121, label %110, !dbg !11290

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #24, !dbg !11292
  %112 = sub i32 %111, %105, !dbg !11295
  %113 = icmp ugt i32 %112, 2, !dbg !11296
  br i1 %113, label %311, label %106, !dbg !11297, !llvm.loop !11298

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11300
  %116 = and i32 %115, -249, !dbg !11300
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !11300
  %118 = load i32, i32* %117, align 4, !dbg !11300
  %119 = shl i32 %118, 3, !dbg !11300
  %120 = or i32 %119, %116, !dbg !11300
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11300
  br label %121, !dbg !11301

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !11301
  %123 = and i32 %122, 8, !dbg !11303
  %124 = icmp eq i32 %123, 0, !dbg !11304
  br i1 %124, label %149, label %125, !dbg !11305

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !11306
  %127 = load i32, i32* %126, align 4, !dbg !11306
  %128 = icmp eq i32 %127, 0, !dbg !11309
  br i1 %128, label %139, label %129, !dbg !11310

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !11311
  %130 = tail call i32 @HAL_GetTick() #24, !dbg !11313
  call void @llvm.dbg.value(metadata i32 %130, metadata !11165, metadata !DIExpression()), !dbg !11175
  br label %131, !dbg !11314

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11315
  %133 = and i32 %132, 2, !dbg !11316
  %134 = icmp eq i32 %133, 0, !dbg !11316
  br i1 %134, label %135, label %149, !dbg !11314

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #24, !dbg !11317
  %137 = sub i32 %136, %130, !dbg !11320
  %138 = icmp ugt i32 %137, 2, !dbg !11321
  br i1 %138, label %311, label %131, !dbg !11322, !llvm.loop !11323

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !11325
  %140 = tail call i32 @HAL_GetTick() #24, !dbg !11327
  call void @llvm.dbg.value(metadata i32 %140, metadata !11165, metadata !DIExpression()), !dbg !11175
  br label %141, !dbg !11328

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11329
  %143 = and i32 %142, 2, !dbg !11329
  %144 = icmp eq i32 %143, 0, !dbg !11329
  br i1 %144, label %149, label %145, !dbg !11328

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #24, !dbg !11330
  %147 = sub i32 %146, %140, !dbg !11333
  %148 = icmp ugt i32 %147, 2, !dbg !11334
  br i1 %148, label %311, label %141, !dbg !11335, !llvm.loop !11336

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !11338
  %151 = and i32 %150, 4, !dbg !11339
  %152 = icmp eq i32 %151, 0, !dbg !11340
  br i1 %152, label %221, label %153, !dbg !11341

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !11167, metadata !DIExpression()), !dbg !11342
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11343
  %155 = and i32 %154, 268435456, !dbg !11343
  %156 = icmp eq i32 %155, 0, !dbg !11343
  br i1 %156, label %157, label %164, !dbg !11344

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !11345
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !11345
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11171, metadata !DIExpression()), !dbg !11345
  store volatile i32 0, i32* %2, align 4, !dbg !11345
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11345
  %160 = or i32 %159, 268435456, !dbg !11345
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11345
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11345
  %162 = and i32 %161, 268435456, !dbg !11345
  store volatile i32 %162, i32* %2, align 4, !dbg !11345
  %163 = load volatile i32, i32* %2, align 4, !dbg !11345
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !11346
  call void @llvm.dbg.value(metadata i32 1, metadata !11167, metadata !DIExpression()), !dbg !11342
  br label %164, !dbg !11347

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !11167, metadata !DIExpression()), !dbg !11342
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11348
  %166 = and i32 %165, 256, !dbg !11348
  %167 = icmp eq i32 %166, 0, !dbg !11348
  br i1 %167, label %168, label %180, !dbg !11350

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11351
  %170 = or i32 %169, 256, !dbg !11351
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11351
  %171 = tail call i32 @HAL_GetTick() #24, !dbg !11353
  call void @llvm.dbg.value(metadata i32 %171, metadata !11165, metadata !DIExpression()), !dbg !11175
  br label %172, !dbg !11354

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11355
  %174 = and i32 %173, 256, !dbg !11355
  %175 = icmp eq i32 %174, 0, !dbg !11355
  br i1 %175, label %176, label %180, !dbg !11354

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #24, !dbg !11356
  %178 = sub i32 %177, %171, !dbg !11359
  %179 = icmp ugt i32 %178, 2, !dbg !11360
  br i1 %179, label %311, label %172, !dbg !11361, !llvm.loop !11362

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11364
  %182 = load i32, i32* %181, align 4, !dbg !11364
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !11367

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11368
  %185 = or i32 %184, 1, !dbg !11368
  br label %196, !dbg !11368

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11370
  %188 = or i32 %187, 4, !dbg !11370
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11370
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11370
  %190 = or i32 %189, 1, !dbg !11370
  br label %196, !dbg !11370

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11373
  %193 = and i32 %192, -2, !dbg !11373
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11373
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11373
  %195 = and i32 %194, -5, !dbg !11373
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11375
  %198 = load i32, i32* %181, align 4, !dbg !11376
  %199 = icmp eq i32 %198, 0, !dbg !11378
  %200 = tail call i32 @HAL_GetTick() #24, !dbg !11379
  call void @llvm.dbg.value(metadata i32 %200, metadata !11165, metadata !DIExpression()), !dbg !11175
  call void @llvm.dbg.value(metadata i32 %200, metadata !11165, metadata !DIExpression()), !dbg !11175
  br i1 %199, label %209, label %201, !dbg !11380

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11381
  %203 = and i32 %202, 2, !dbg !11383
  %204 = icmp eq i32 %203, 0, !dbg !11383
  br i1 %204, label %205, label %217, !dbg !11384

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #24, !dbg !11385
  %207 = sub i32 %206, %200, !dbg !11388
  %208 = icmp ugt i32 %207, 5000, !dbg !11389
  br i1 %208, label %311, label %201, !dbg !11390, !llvm.loop !11391

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11393
  %211 = and i32 %210, 2, !dbg !11393
  %212 = icmp eq i32 %211, 0, !dbg !11393
  br i1 %212, label %217, label %213, !dbg !11395

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #24, !dbg !11396
  %215 = sub i32 %214, %200, !dbg !11399
  %216 = icmp ugt i32 %215, 5000, !dbg !11400
  br i1 %216, label %311, label %209, !dbg !11401, !llvm.loop !11402

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !11404

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11405
  %220 = and i32 %219, -268435457, !dbg !11405
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11405
  br label %221, !dbg !11408

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !11409
  %223 = load i32, i32* %222, align 4, !dbg !11409
  %224 = icmp eq i32 %223, 0, !dbg !11411
  br i1 %224, label %310, label %225, !dbg !11412

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11413
  %227 = and i32 %226, 12, !dbg !11413
  %228 = icmp eq i32 %227, 8, !dbg !11416
  br i1 %228, label %277, label %229, !dbg !11417

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !11418
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !11421
  %231 = tail call i32 @HAL_GetTick() #24, !dbg !11421
  call void @llvm.dbg.value(metadata i32 %231, metadata !11165, metadata !DIExpression()), !dbg !11175
  call void @llvm.dbg.value(metadata i32 %231, metadata !11165, metadata !DIExpression()), !dbg !11175
  br i1 %230, label %232, label %269, !dbg !11422

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11423
  %234 = and i32 %233, 33554432, !dbg !11423
  %235 = icmp eq i32 %234, 0, !dbg !11423
  br i1 %235, label %240, label %236, !dbg !11425

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #24, !dbg !11426
  %238 = sub i32 %237, %231, !dbg !11429
  %239 = icmp ugt i32 %238, 2, !dbg !11430
  br i1 %239, label %311, label %232, !dbg !11431, !llvm.loop !11432

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11434
  %242 = load i32, i32* %241, align 4, !dbg !11434
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11434
  %244 = load i32, i32* %243, align 4, !dbg !11434
  %245 = or i32 %244, %242, !dbg !11434
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11434
  %247 = load i32, i32* %246, align 4, !dbg !11434
  %248 = shl i32 %247, 6, !dbg !11434
  %249 = or i32 %245, %248, !dbg !11434
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11434
  %251 = load i32, i32* %250, align 4, !dbg !11434
  %252 = shl i32 %251, 15, !dbg !11434
  %253 = add i32 %252, -65536, !dbg !11434
  %254 = and i32 %253, -65536, !dbg !11434
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11434
  %256 = load i32, i32* %255, align 4, !dbg !11434
  %257 = shl i32 %256, 24, !dbg !11434
  %258 = or i32 %249, %257, !dbg !11434
  %259 = or i32 %258, %254, !dbg !11434
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11434
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !11435
  %260 = tail call i32 @HAL_GetTick() #24, !dbg !11436
  call void @llvm.dbg.value(metadata i32 %260, metadata !11165, metadata !DIExpression()), !dbg !11175
  br label %261, !dbg !11437

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11438
  %263 = and i32 %262, 33554432, !dbg !11439
  %264 = icmp eq i32 %263, 0, !dbg !11439
  br i1 %264, label %265, label %310, !dbg !11437

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #24, !dbg !11440
  %267 = sub i32 %266, %260, !dbg !11443
  %268 = icmp ugt i32 %267, 2, !dbg !11444
  br i1 %268, label %311, label %261, !dbg !11445, !llvm.loop !11446

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11448
  %271 = and i32 %270, 33554432, !dbg !11448
  %272 = icmp eq i32 %271, 0, !dbg !11448
  br i1 %272, label %310, label %273, !dbg !11450

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #24, !dbg !11451
  %275 = sub i32 %274, %231, !dbg !11454
  %276 = icmp ugt i32 %275, 2, !dbg !11455
  br i1 %276, label %311, label %269, !dbg !11456, !llvm.loop !11457

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !11459
  br i1 %278, label %311, label %279, !dbg !11462

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11463
  call void @llvm.dbg.value(metadata i32 %280, metadata !11166, metadata !DIExpression()), !dbg !11175
  %281 = and i32 %280, 4194304, !dbg !11465
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11467
  %283 = load i32, i32* %282, align 4, !dbg !11467
  %284 = icmp eq i32 %281, %283, !dbg !11468
  br i1 %284, label %285, label %311, !dbg !11469

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !11470
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11471
  %288 = load i32, i32* %287, align 4, !dbg !11471
  %289 = icmp eq i32 %286, %288, !dbg !11472
  br i1 %289, label %290, label %311, !dbg !11473

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !11474
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11475
  %293 = load i32, i32* %292, align 4, !dbg !11475
  %294 = shl i32 %293, 6, !dbg !11476
  %295 = icmp eq i32 %291, %294, !dbg !11477
  br i1 %295, label %296, label %311, !dbg !11478

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !11479
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11480
  %299 = load i32, i32* %298, align 4, !dbg !11480
  %300 = shl i32 %299, 15, !dbg !11481
  %301 = add i32 %300, -65536, !dbg !11481
  %302 = and i32 %301, -65536, !dbg !11481
  %303 = icmp eq i32 %297, %302, !dbg !11482
  br i1 %303, label %304, label %311, !dbg !11483

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !11484
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11485
  %307 = load i32, i32* %306, align 4, !dbg !11485
  %308 = shl i32 %307, 24, !dbg !11486
  %309 = icmp eq i32 %305, %308, !dbg !11487
  br i1 %309, label %310, label %311, !dbg !11488

310:                                              ; preds = %269, %261, %304, %221
  br label %311, !dbg !11489

311:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %277, %86, %25, %1, %310
  %312 = phi i32 [ 0, %310 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !11175
  ret i32 %312, !dbg !11490
}

; Function Attrs: optsize
declare !dbg !11491 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !11493 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !11506, metadata !DIExpression()), !dbg !11509
  call void @llvm.dbg.value(metadata i32 %1, metadata !11507, metadata !DIExpression()), !dbg !11509
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !11510
  br i1 %3, label %115, label %4, !dbg !11512

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11513
  %6 = and i32 %5, 7, !dbg !11513
  %7 = icmp ult i32 %6, %1, !dbg !11515
  br i1 %7, label %8, label %13, !dbg !11516

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !11517
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !11517
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11519
  %11 = and i32 %10, 7, !dbg !11519
  %12 = icmp eq i32 %11, %1, !dbg !11521
  br i1 %12, label %13, label %115, !dbg !11522

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !11523
  %15 = load i32, i32* %14, align 4, !dbg !11523
  %16 = and i32 %15, 2, !dbg !11525
  %17 = icmp eq i32 %16, 0, !dbg !11526
  br i1 %17, label %39, label %18, !dbg !11527

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !11528
  %20 = icmp eq i32 %19, 0, !dbg !11531
  br i1 %20, label %25, label %21, !dbg !11532

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11533
  %23 = or i32 %22, 7168, !dbg !11533
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11533
  %24 = load i32, i32* %14, align 4, !dbg !11535
  br label %25, !dbg !11537

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !11535
  %27 = and i32 %26, 8, !dbg !11538
  %28 = icmp eq i32 %27, 0, !dbg !11539
  br i1 %28, label %32, label %29, !dbg !11540

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11541
  %31 = or i32 %30, 57344, !dbg !11541
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11541
  br label %32, !dbg !11543

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11544
  %34 = and i32 %33, -241, !dbg !11544
  %35 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !11544
  %36 = load i32, i32* %35, align 4, !dbg !11544
  %37 = or i32 %34, %36, !dbg !11544
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11544
  %38 = load i32, i32* %14, align 4, !dbg !11545
  br label %39, !dbg !11547

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !11545
  %41 = and i32 %40, 1, !dbg !11548
  %42 = icmp eq i32 %41, 0, !dbg !11549
  br i1 %42, label %73, label %43, !dbg !11550

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !11551
  %45 = load i32, i32* %44, align 4, !dbg !11551
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !11554

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11555
  %48 = and i32 %47, 131072, !dbg !11558
  %49 = icmp eq i32 %48, 0, !dbg !11558
  br i1 %49, label %115, label %58, !dbg !11559

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11560
  %52 = and i32 %51, 33554432, !dbg !11564
  %53 = icmp eq i32 %52, 0, !dbg !11564
  br i1 %53, label %115, label %58, !dbg !11565

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11566
  %56 = and i32 %55, 2, !dbg !11569
  %57 = icmp eq i32 %56, 0, !dbg !11569
  br i1 %57, label %115, label %58, !dbg !11570

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11571
  %60 = and i32 %59, -4, !dbg !11571
  %61 = or i32 %60, %45, !dbg !11571
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11571
  %62 = tail call i32 @HAL_GetTick() #24, !dbg !11572
  call void @llvm.dbg.value(metadata i32 %62, metadata !11508, metadata !DIExpression()), !dbg !11509
  br label %63, !dbg !11573

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11574
  %65 = and i32 %64, 12, !dbg !11574
  %66 = load i32, i32* %44, align 4, !dbg !11575
  %67 = shl i32 %66, 2, !dbg !11576
  %68 = icmp eq i32 %65, %67, !dbg !11577
  br i1 %68, label %73, label %69, !dbg !11573

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #24, !dbg !11578
  %71 = sub i32 %70, %62, !dbg !11581
  %72 = icmp ugt i32 %71, 5000, !dbg !11582
  br i1 %72, label %115, label %63, !dbg !11583, !llvm.loop !11584

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11586
  %75 = and i32 %74, 7, !dbg !11586
  %76 = icmp ugt i32 %75, %1, !dbg !11588
  br i1 %76, label %77, label %82, !dbg !11589

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !11590
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !11590
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11592
  %80 = and i32 %79, 7, !dbg !11592
  %81 = icmp eq i32 %80, %1, !dbg !11594
  br i1 %81, label %82, label %115, !dbg !11595

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !11596
  %84 = and i32 %83, 4, !dbg !11598
  %85 = icmp eq i32 %84, 0, !dbg !11599
  br i1 %85, label %93, label %86, !dbg !11600

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11601
  %88 = and i32 %87, -7169, !dbg !11601
  %89 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !11601
  %90 = load i32, i32* %89, align 4, !dbg !11601
  %91 = or i32 %88, %90, !dbg !11601
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11601
  %92 = load i32, i32* %14, align 4, !dbg !11603
  br label %93, !dbg !11605

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !11603
  %95 = and i32 %94, 8, !dbg !11606
  %96 = icmp eq i32 %95, 0, !dbg !11607
  br i1 %96, label %104, label %97, !dbg !11608

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11609
  %99 = and i32 %98, -57345, !dbg !11609
  %100 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !11609
  %101 = load i32, i32* %100, align 4, !dbg !11609
  %102 = shl i32 %101, 3, !dbg !11609
  %103 = or i32 %102, %99, !dbg !11609
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11609
  br label %104, !dbg !11611

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #25, !dbg !11612
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11613
  %107 = lshr i32 %106, 4, !dbg !11614
  %108 = and i32 %107, 15, !dbg !11614
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !11615
  %110 = load i8, i8* %109, align 1, !dbg !11615
  %111 = zext i8 %110 to i32, !dbg !11615
  %112 = lshr i32 %105, %111, !dbg !11616
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !11617
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !11618
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #24, !dbg !11619
  br label %115, !dbg !11620

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !11509
  ret i32 %116, !dbg !11621
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !11622 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11624, metadata !DIExpression()), !dbg !11628
  call void @llvm.dbg.value(metadata i32 0, metadata !11625, metadata !DIExpression()), !dbg !11628
  call void @llvm.dbg.value(metadata i32 0, metadata !11626, metadata !DIExpression()), !dbg !11628
  call void @llvm.dbg.value(metadata i32 0, metadata !11627, metadata !DIExpression()), !dbg !11628
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11629
  %2 = and i32 %1, 12, !dbg !11630
  %3 = icmp eq i32 %2, 8, !dbg !11631
  br i1 %3, label %4, label %21, !dbg !11631

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11632
  %6 = and i32 %5, 63, !dbg !11635
  call void @llvm.dbg.value(metadata i32 %6, metadata !11624, metadata !DIExpression()), !dbg !11628
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11636
  %8 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11638
  %9 = lshr i32 %8, 6, !dbg !11638
  %10 = and i32 %9, 511, !dbg !11638
  %11 = zext i32 %10 to i64, !dbg !11638
  %12 = mul nuw nsw i64 %11, 16000000, !dbg !11638
  %13 = zext i32 %6 to i64, !dbg !11638
  %14 = udiv i64 %12, %13, !dbg !11638
  %15 = trunc i64 %14 to i32, !dbg !11638
  call void @llvm.dbg.value(metadata i32 %15, metadata !11625, metadata !DIExpression()), !dbg !11628
  call void @llvm.dbg.value(metadata i32 %15, metadata !11625, metadata !DIExpression()), !dbg !11628
  call void @llvm.dbg.value(metadata i32 %15, metadata !11625, metadata !DIExpression()), !dbg !11628
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11639
  %17 = lshr i32 %16, 15, !dbg !11640
  %18 = and i32 %17, 6, !dbg !11640
  %19 = add nuw nsw i32 %18, 2, !dbg !11640
  call void @llvm.dbg.value(metadata i32 %19, metadata !11626, metadata !DIExpression()), !dbg !11628
  %20 = udiv i32 %15, %19, !dbg !11641
  call void @llvm.dbg.value(metadata i32 %20, metadata !11627, metadata !DIExpression()), !dbg !11628
  br label %21, !dbg !11642

21:                                               ; preds = %0, %4
  %22 = phi i32 [ %20, %4 ], [ 16000000, %0 ], !dbg !11643
  call void @llvm.dbg.value(metadata i32 %22, metadata !11627, metadata !DIExpression()), !dbg !11628
  ret i32 %22, !dbg !11644
}

; Function Attrs: optsize
declare !dbg !11645 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11648 {
  %4 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11652, metadata !DIExpression()), !dbg !11672
  call void @llvm.dbg.value(metadata i32 %1, metadata !11653, metadata !DIExpression()), !dbg !11672
  call void @llvm.dbg.value(metadata i32 %2, metadata !11654, metadata !DIExpression()), !dbg !11672
  %7 = bitcast %struct.RCC_ClkInitTypeDef* %4 to i8*, !dbg !11673
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #23, !dbg !11673
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %4, metadata !11655, metadata !DIExpression()), !dbg !11674
  %8 = icmp eq i32 %0, 0, !dbg !11675
  br i1 %8, label %9, label %23, !dbg !11676

9:                                                ; preds = %3
  %10 = bitcast i32* %5 to i8*, !dbg !11677
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10), !dbg !11677
  call void @llvm.dbg.declare(metadata i32* %5, metadata !11665, metadata !DIExpression()), !dbg !11677
  store volatile i32 0, i32* %5, align 4, !dbg !11677
  %11 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11677
  %12 = or i32 %11, 1, !dbg !11677
  store volatile i32 %12, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11677
  %13 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11677
  %14 = and i32 %13, 1, !dbg !11677
  store volatile i32 %14, i32* %5, align 4, !dbg !11677
  %15 = load volatile i32, i32* %5, align 4, !dbg !11677
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10), !dbg !11678
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !11679
  store i32 256, i32* %16, align 4, !dbg !11680
  %17 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !11681
  store i32 2, i32* %17, align 4, !dbg !11682
  %18 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !11683
  store i32 3, i32* %18, align 4, !dbg !11684
  %19 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !11685
  store i32 0, i32* %19, align 4, !dbg !11686
  %20 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !11687
  store i32 0, i32* %20, align 4, !dbg !11688
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #24, !dbg !11689
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11690
  %22 = and i32 %21, -123731969, !dbg !11690
  br label %38, !dbg !11691

23:                                               ; preds = %3
  %24 = bitcast i32* %6 to i8*, !dbg !11692
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24), !dbg !11692
  call void @llvm.dbg.declare(metadata i32* %6, metadata !11669, metadata !DIExpression()), !dbg !11692
  store volatile i32 0, i32* %6, align 4, !dbg !11692
  %25 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11692
  %26 = or i32 %25, 4, !dbg !11692
  store volatile i32 %26, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11692
  %27 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11692
  %28 = and i32 %27, 4, !dbg !11692
  store volatile i32 %28, i32* %6, align 4, !dbg !11692
  %29 = load volatile i32, i32* %6, align 4, !dbg !11692
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24), !dbg !11693
  %30 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !11694
  store i32 512, i32* %30, align 4, !dbg !11695
  %31 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !11696
  store i32 2, i32* %31, align 4, !dbg !11697
  %32 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !11698
  store i32 3, i32* %32, align 4, !dbg !11699
  %33 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !11700
  store i32 0, i32* %33, align 4, !dbg !11701
  %34 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !11702
  store i32 0, i32* %34, align 4, !dbg !11703
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073874944 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #24, !dbg !11704
  %35 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11705
  %36 = and i32 %35, 134217727, !dbg !11705
  %37 = shl i32 %2, 3, !dbg !11705
  br label %38

38:                                               ; preds = %23, %9
  %39 = phi i32 [ %37, %23 ], [ %2, %9 ]
  %40 = phi i32 [ %36, %23 ], [ %22, %9 ]
  %41 = or i32 %39, %1, !dbg !11706
  %42 = or i32 %41, %40, !dbg !11706
  store volatile i32 %42, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11706
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #23, !dbg !11707
  ret void, !dbg !11707
}

; Function Attrs: optsize
declare !dbg !11708 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.RCC_ClkInitTypeDef* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #15 !dbg !11712 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !11713
  ret void, !dbg !11714
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #15 !dbg !11715 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !11716
  ret void, !dbg !11717
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #10 !dbg !11718 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !11719
  ret i32 %1, !dbg !11720
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #5 !dbg !11721 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #25, !dbg !11722
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11723
  %3 = lshr i32 %2, 10, !dbg !11724
  %4 = and i32 %3, 7, !dbg !11724
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11725
  %6 = load i8, i8* %5, align 1, !dbg !11725
  %7 = zext i8 %6 to i32, !dbg !11725
  %8 = lshr i32 %1, %7, !dbg !11726
  ret i32 %8, !dbg !11727
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #5 !dbg !11728 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #25, !dbg !11729
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11730
  %3 = lshr i32 %2, 13, !dbg !11731
  %4 = and i32 %3, 7, !dbg !11731
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11732
  %6 = load i8, i8* %5, align 1, !dbg !11732
  %7 = zext i8 %6 to i32, !dbg !11732
  %8 = lshr i32 %1, %7, !dbg !11733
  ret i32 %8, !dbg !11734
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !11735 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11739, metadata !DIExpression()), !dbg !11740
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11741
  store i32 15, i32* %2, align 4, !dbg !11742
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11743
  %4 = and i32 %3, 262144, !dbg !11745
  %5 = icmp eq i32 %4, 0, !dbg !11746
  br i1 %5, label %8, label %6, !dbg !11747

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11748
  store i32 327680, i32* %7, align 4, !dbg !11750
  br label %15, !dbg !11751

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11752
  %10 = and i32 %9, 65536, !dbg !11754
  %11 = icmp eq i32 %10, 0, !dbg !11755
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11756
  br i1 %11, label %14, label %13, !dbg !11757

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !11758
  br label %15, !dbg !11760

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !11761
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11763
  %17 = and i32 %16, 1, !dbg !11765
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11766
  store i32 %17, i32* %18, align 4, !dbg !11768
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11769
  %20 = lshr i32 %19, 3, !dbg !11770
  %21 = and i32 %20, 31, !dbg !11770
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !11771
  store i32 %21, i32* %22, align 4, !dbg !11772
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11773
  %24 = and i32 %23, 4, !dbg !11775
  %25 = icmp eq i32 %24, 0, !dbg !11776
  br i1 %25, label %28, label %26, !dbg !11777

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11778
  store i32 5, i32* %27, align 4, !dbg !11780
  br label %35, !dbg !11781

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11782
  %30 = and i32 %29, 1, !dbg !11784
  %31 = icmp eq i32 %30, 0, !dbg !11785
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11786
  br i1 %31, label %34, label %33, !dbg !11787

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !11788
  br label %35, !dbg !11790

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !11791
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11793
  %37 = and i32 %36, 1, !dbg !11795
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !11796
  store i32 %37, i32* %38, align 4, !dbg !11798
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11799
  %40 = and i32 %39, 16777216, !dbg !11801
  %41 = icmp eq i32 %40, 0, !dbg !11802
  %42 = select i1 %41, i32 1, i32 2, !dbg !11803
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !11804
  store i32 %42, i32* %43, align 4, !dbg !11806
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11807
  %45 = and i32 %44, 4194304, !dbg !11808
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11809
  store i32 %45, i32* %46, align 4, !dbg !11810
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11811
  %48 = and i32 %47, 63, !dbg !11812
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11813
  store i32 %48, i32* %49, align 4, !dbg !11814
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11815
  %51 = lshr i32 %50, 6, !dbg !11816
  %52 = and i32 %51, 511, !dbg !11816
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11817
  store i32 %52, i32* %53, align 4, !dbg !11818
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11819
  %55 = shl i32 %54, 1, !dbg !11820
  %56 = and i32 %55, 393216, !dbg !11820
  %57 = add nuw nsw i32 %56, 131072, !dbg !11820
  %58 = lshr exact i32 %57, 16, !dbg !11821
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11822
  store i32 %58, i32* %59, align 4, !dbg !11823
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11824
  %61 = lshr i32 %60, 24, !dbg !11825
  %62 = and i32 %61, 15, !dbg !11825
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11826
  store i32 %62, i32* %63, align 4, !dbg !11827
  ret void, !dbg !11828
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #5 !dbg !11829 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !11833, metadata !DIExpression()), !dbg !11835
  call void @llvm.dbg.value(metadata i32* %1, metadata !11834, metadata !DIExpression()), !dbg !11835
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !11836
  store i32 15, i32* %3, align 4, !dbg !11837
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11838
  %5 = and i32 %4, 3, !dbg !11839
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !11840
  store i32 %5, i32* %6, align 4, !dbg !11841
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11842
  %8 = and i32 %7, 240, !dbg !11843
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !11844
  store i32 %8, i32* %9, align 4, !dbg !11845
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11846
  %11 = and i32 %10, 7168, !dbg !11847
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !11848
  store i32 %11, i32* %12, align 4, !dbg !11849
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11850
  %14 = lshr i32 %13, 3, !dbg !11851
  %15 = and i32 %14, 7168, !dbg !11851
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !11852
  store i32 %15, i32* %16, align 4, !dbg !11853
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11854
  %18 = and i32 %17, 7, !dbg !11855
  store i32 %18, i32* %1, align 4, !dbg !11856
  ret void, !dbg !11857
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !11858 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11859
  %2 = and i32 %1, 128, !dbg !11859
  %3 = icmp eq i32 %2, 0, !dbg !11859
  br i1 %3, label %5, label %4, !dbg !11861

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #25, !dbg !11862
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !11864
  br label %5, !dbg !11865

5:                                                ; preds = %4, %0
  ret void, !dbg !11866
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !11867 {
  ret void, !dbg !11868
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #15 !dbg !11869 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11872, metadata !DIExpression()), !dbg !11873
  tail call fastcc void @LL_InitTick(i32 noundef %0) #25, !dbg !11874
  ret void, !dbg !11875
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #15 !dbg !11876 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11879, metadata !DIExpression()), !dbg !11881
  call void @llvm.dbg.value(metadata i32 1000, metadata !11880, metadata !DIExpression()), !dbg !11881
  %2 = udiv i32 %0, 1000, !dbg !11882
  %3 = add nsw i32 %2, -1, !dbg !11883
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11884
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11885
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11886
  ret void, !dbg !11887
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #19 !dbg !11888 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11890, metadata !DIExpression()), !dbg !11892
  %3 = bitcast i32* %2 to i8*, !dbg !11893
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11893
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11891, metadata !DIExpression()), !dbg !11894
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11895
  store volatile i32 %4, i32* %2, align 4, !dbg !11894
  %5 = load volatile i32, i32* %2, align 4, !dbg !11896
  %6 = icmp eq i32 %0, -1, !dbg !11897
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !11890, metadata !DIExpression()), !dbg !11892
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !11892
  call void @llvm.dbg.value(metadata i32 %8, metadata !11890, metadata !DIExpression()), !dbg !11892
  br label %9, !dbg !11899

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11890, metadata !DIExpression()), !dbg !11892
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11900
  call void @llvm.dbg.value(metadata i32 undef, metadata !11890, metadata !DIExpression()), !dbg !11892
  %12 = shl i32 %11, 15, !dbg !11892
  %13 = ashr i32 %12, 31, !dbg !11892
  %14 = add i32 %13, %10, !dbg !11892
  call void @llvm.dbg.value(metadata i32 %14, metadata !11890, metadata !DIExpression()), !dbg !11892
  %15 = icmp eq i32 %14, 0, !dbg !11899
  br i1 %15, label %16, label %9, !dbg !11899

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11903
  ret void, !dbg !11903
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #9 !dbg !11904 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11906, metadata !DIExpression()), !dbg !11907
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !11908
  ret void, !dbg !11909
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #15 !dbg !11910 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11915, metadata !DIExpression()), !dbg !11920
  call void @llvm.dbg.value(metadata i32 0, metadata !11918, metadata !DIExpression()), !dbg !11920
  call void @llvm.dbg.value(metadata i32 0, metadata !11919, metadata !DIExpression()), !dbg !11920
  %2 = icmp eq i32 %0, 0, !dbg !11921
  br i1 %2, label %35, label %3, !dbg !11923

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #25, !dbg !11924
  %5 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #25, !dbg !11927
  %6 = icmp eq i32 %5, 32768, !dbg !11929
  br i1 %6, label %7, label %12, !dbg !11930

7:                                                ; preds = %3
  %8 = icmp ugt i32 %0, 60000000, !dbg !11931
  br i1 %8, label %12, label %9, !dbg !11934

9:                                                ; preds = %7
  %10 = icmp ugt i32 %0, 30000000, !dbg !11935
  %11 = zext i1 %10 to i32, !dbg !11938
  call void @llvm.dbg.value(metadata i32 %11, metadata !11918, metadata !DIExpression()), !dbg !11920
  br label %12, !dbg !11938

12:                                               ; preds = %7, %9, %3
  %13 = phi i32 [ %11, %9 ], [ 0, %3 ], [ 2, %7 ], !dbg !11920
  call void @llvm.dbg.value(metadata i32 %13, metadata !11918, metadata !DIExpression()), !dbg !11920
  %14 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #25, !dbg !11939
  %15 = icmp eq i32 %14, 16384, !dbg !11941
  br i1 %15, label %16, label %24, !dbg !11942

16:                                               ; preds = %12
  %17 = icmp ugt i32 %0, 60000000, !dbg !11943
  %18 = icmp eq i32 %13, 0
  %19 = and i1 %17, %18, !dbg !11946
  br i1 %19, label %24, label %20, !dbg !11946

20:                                               ; preds = %16
  %21 = icmp ugt i32 %0, 30000000, !dbg !11947
  %22 = and i1 %21, %18, !dbg !11950
  %23 = select i1 %22, i32 1, i32 %13, !dbg !11950
  call void @llvm.dbg.value(metadata i32 %23, metadata !11918, metadata !DIExpression()), !dbg !11920
  br label %24, !dbg !11950

24:                                               ; preds = %16, %20, %12
  %25 = phi i32 [ %23, %20 ], [ %13, %12 ], [ 2, %16 ], !dbg !11951
  call void @llvm.dbg.value(metadata i32 %25, metadata !11918, metadata !DIExpression()), !dbg !11920
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %25) #25, !dbg !11952
  call void @llvm.dbg.value(metadata i32 2, metadata !11916, metadata !DIExpression()), !dbg !11920
  br label %26, !dbg !11953

26:                                               ; preds = %26, %24
  %27 = phi i32 [ 2, %24 ], [ %29, %26 ], !dbg !11951
  call void @llvm.dbg.value(metadata i32 %27, metadata !11916, metadata !DIExpression()), !dbg !11920
  %28 = tail call fastcc i32 @LL_FLASH_GetLatency() #25, !dbg !11954
  call void @llvm.dbg.value(metadata i32 %28, metadata !11917, metadata !DIExpression()), !dbg !11920
  %29 = add nsw i32 %27, -1, !dbg !11956
  call void @llvm.dbg.value(metadata i32 %29, metadata !11916, metadata !DIExpression()), !dbg !11920
  %30 = icmp ne i32 %28, %25, !dbg !11957
  %31 = icmp ne i32 %29, 0, !dbg !11958
  %32 = select i1 %30, i1 %31, i1 false, !dbg !11958
  br i1 %32, label %26, label %33, !dbg !11959, !llvm.loop !11960

33:                                               ; preds = %26
  %34 = zext i1 %30 to i32
  br label %35

35:                                               ; preds = %33, %1
  %36 = phi i32 [ 1, %1 ], [ %34, %33 ], !dbg !11962
  call void @llvm.dbg.value(metadata i32 %36, metadata !11919, metadata !DIExpression()), !dbg !11920
  ret i32 %36, !dbg !11963
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #5 !dbg !11964 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11966
  %2 = and i32 %1, 49152, !dbg !11966
  ret i32 %2, !dbg !11967
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #15 !dbg !11968 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11970, metadata !DIExpression()), !dbg !11971
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11972
  %3 = and i32 %2, -8, !dbg !11972
  %4 = or i32 %3, %0, !dbg !11972
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11972
  ret void, !dbg !11973
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #5 !dbg !11974 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11975
  %2 = and i32 %1, 7, !dbg !11975
  ret i32 %2, !dbg !11976
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !11977 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !11995, metadata !DIExpression()), !dbg !11999
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !11996, metadata !DIExpression()), !dbg !11999
  call void @llvm.dbg.value(metadata i32 0, metadata !11997, metadata !DIExpression()), !dbg !11999
  call void @llvm.dbg.value(metadata i32 0, metadata !11998, metadata !DIExpression()), !dbg !11999
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #25, !dbg !12000
  %4 = icmp eq i32 %3, 0, !dbg !12002
  br i1 %4, label %5, label %21, !dbg !12003

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #25, !dbg !12004
  call void @llvm.dbg.value(metadata i32 %6, metadata !11998, metadata !DIExpression()), !dbg !11999
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.167() #25, !dbg !12006
  %8 = icmp eq i32 %7, 1, !dbg !12008
  br i1 %8, label %13, label %9, !dbg !12009

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.168() #25, !dbg !12010
  br label %10, !dbg !12012

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.167() #25, !dbg !12013
  %12 = icmp eq i32 %11, 1, !dbg !12014
  br i1 %12, label %13, label %10, !dbg !12012, !llvm.loop !12015

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !12017
  %15 = load i32, i32* %14, align 4, !dbg !12017
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !12018
  %17 = load i32, i32* %16, align 4, !dbg !12018
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !12019
  %19 = load i32, i32* %18, align 4, !dbg !12019
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.169(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #25, !dbg !12020
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #25, !dbg !12021
  call void @llvm.dbg.value(metadata i32 %20, metadata !11997, metadata !DIExpression()), !dbg !11999
  br label %21, !dbg !12022

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !12023
  call void @llvm.dbg.value(metadata i32 %22, metadata !11997, metadata !DIExpression()), !dbg !11999
  ret i32 %22, !dbg !12024
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #5 !dbg !12025 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12029, metadata !DIExpression()), !dbg !12030
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.171() #25, !dbg !12031
  %2 = icmp ne i32 %1, 0, !dbg !12033
  call void @llvm.dbg.value(metadata i1 %2, metadata !12029, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12030
  %3 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #25, !dbg !12034
  %4 = icmp ne i32 %3, 0, !dbg !12036
  %5 = select i1 %4, i1 true, i1 %2, !dbg !12037
  %6 = zext i1 %5 to i32, !dbg !12037
  call void @llvm.dbg.value(metadata i32 %6, metadata !12029, metadata !DIExpression()), !dbg !12030
  ret i32 %6, !dbg !12038
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #10 !dbg !12039 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12043, metadata !DIExpression()), !dbg !12046
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12044, metadata !DIExpression()), !dbg !12046
  call void @llvm.dbg.value(metadata i32 0, metadata !12045, metadata !DIExpression()), !dbg !12046
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !12047
  %4 = load i32, i32* %3, align 4, !dbg !12047
  %5 = and i32 %4, 63, !dbg !12048
  %6 = udiv i32 %0, %5, !dbg !12049
  call void @llvm.dbg.value(metadata i32 %6, metadata !12045, metadata !DIExpression()), !dbg !12046
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !12050
  %8 = load i32, i32* %7, align 4, !dbg !12050
  %9 = and i32 %8, 511, !dbg !12051
  %10 = mul i32 %9, %6, !dbg !12052
  call void @llvm.dbg.value(metadata i32 %10, metadata !12045, metadata !DIExpression()), !dbg !12046
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !12053
  %12 = load i32, i32* %11, align 4, !dbg !12053
  %13 = lshr i32 %12, 15, !dbg !12054
  %14 = and i32 %13, 131070, !dbg !12054
  %15 = add nuw nsw i32 %14, 2, !dbg !12054
  %16 = udiv i32 %10, %15, !dbg !12055
  call void @llvm.dbg.value(metadata i32 %16, metadata !12045, metadata !DIExpression()), !dbg !12046
  ret i32 %16, !dbg !12056
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.167() unnamed_addr #5 !dbg !12057 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12058
  %2 = lshr i32 %1, 1, !dbg !12059
  %3 = and i32 %2, 1, !dbg !12059
  ret i32 %3, !dbg !12060
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.168() unnamed_addr #15 !dbg !12061 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12062
  %2 = or i32 %1, 1, !dbg !12062
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12062
  ret void, !dbg !12063
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.169(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #15 !dbg !12064 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12066, metadata !DIExpression()), !dbg !12070
  call void @llvm.dbg.value(metadata i32 %1, metadata !12067, metadata !DIExpression()), !dbg !12070
  call void @llvm.dbg.value(metadata i32 %2, metadata !12068, metadata !DIExpression()), !dbg !12070
  call void @llvm.dbg.value(metadata i32 %3, metadata !12069, metadata !DIExpression()), !dbg !12070
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12071
  %6 = and i32 %5, -4227072, !dbg !12071
  %7 = or i32 %1, %0, !dbg !12071
  %8 = shl i32 %2, 6, !dbg !12071
  %9 = or i32 %7, %8, !dbg !12071
  %10 = or i32 %9, %6, !dbg !12071
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12071
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12072
  %12 = and i32 %11, -196609, !dbg !12072
  %13 = or i32 %12, %3, !dbg !12072
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12072
  ret void, !dbg !12073
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #15 !dbg !12074 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12078, metadata !DIExpression()), !dbg !12082
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12079, metadata !DIExpression()), !dbg !12082
  call void @llvm.dbg.value(metadata i32 0, metadata !12080, metadata !DIExpression()), !dbg !12082
  call void @llvm.dbg.value(metadata i32 0, metadata !12081, metadata !DIExpression()), !dbg !12082
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !12083
  %4 = load i32, i32* %3, align 4, !dbg !12083
  %5 = lshr i32 %4, 4, !dbg !12083
  %6 = and i32 %5, 15, !dbg !12083
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !12083
  %8 = load i8, i8* %7, align 1, !dbg !12083
  %9 = zext i8 %8 to i32, !dbg !12083
  %10 = lshr i32 %0, %9, !dbg !12083
  call void @llvm.dbg.value(metadata i32 %10, metadata !12081, metadata !DIExpression()), !dbg !12082
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !12084
  %12 = icmp ult i32 %11, %10, !dbg !12086
  br i1 %12, label %13, label %16, !dbg !12087

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #25, !dbg !12088
  call void @llvm.dbg.value(metadata i32 %14, metadata !12080, metadata !DIExpression()), !dbg !12082
  %15 = icmp eq i32 %14, 0, !dbg !12090
  br i1 %15, label %16, label %30, !dbg !12092

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.170() #25, !dbg !12093
  br label %17, !dbg !12095

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.171() #25, !dbg !12096
  %19 = icmp eq i32 %18, 1, !dbg !12097
  br i1 %19, label %20, label %17, !dbg !12095, !llvm.loop !12098

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !12100
  tail call fastcc void @LL_RCC_SetAHBPrescaler.172(i32 noundef %21) #25, !dbg !12101
  tail call fastcc void @LL_RCC_SetSysClkSource.173() #25, !dbg !12102
  br label %22, !dbg !12103

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.174() #25, !dbg !12104
  %24 = icmp eq i32 %23, 8, !dbg !12105
  br i1 %24, label %25, label %22, !dbg !12103, !llvm.loop !12106

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !12108
  %27 = load i32, i32* %26, align 4, !dbg !12108
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.175(i32 noundef %27) #25, !dbg !12109
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !12110
  %29 = load i32, i32* %28, align 4, !dbg !12110
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.176(i32 noundef %29) #25, !dbg !12111
  br label %30, !dbg !12112

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !12113
  %33 = icmp ugt i32 %32, %10, !dbg !12115
  br i1 %33, label %34, label %36, !dbg !12116

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #25, !dbg !12117
  call void @llvm.dbg.value(metadata i32 %35, metadata !12080, metadata !DIExpression()), !dbg !12082
  br label %36, !dbg !12119

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !12082
  call void @llvm.dbg.value(metadata i32 %37, metadata !12080, metadata !DIExpression()), !dbg !12082
  %38 = icmp eq i32 %37, 0, !dbg !12120
  br i1 %38, label %39, label %40, !dbg !12122

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #25, !dbg !12123
  br label %40, !dbg !12125

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !12126
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.170() unnamed_addr #15 !dbg !12127 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12128
  %2 = or i32 %1, 16777216, !dbg !12128
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12128
  ret void, !dbg !12129
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.171() unnamed_addr #5 !dbg !12130 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12131
  %2 = lshr i32 %1, 25, !dbg !12132
  %3 = and i32 %2, 1, !dbg !12132
  ret i32 %3, !dbg !12133
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.172(i32 noundef %0) unnamed_addr #15 !dbg !12134 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12136, metadata !DIExpression()), !dbg !12137
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12138
  %3 = and i32 %2, -241, !dbg !12138
  %4 = or i32 %3, %0, !dbg !12138
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12138
  ret void, !dbg !12139
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.173() unnamed_addr #15 !dbg !12140 {
  call void @llvm.dbg.value(metadata i32 2, metadata !12142, metadata !DIExpression()), !dbg !12143
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12144
  %2 = and i32 %1, -4, !dbg !12144
  %3 = or i32 %2, 2, !dbg !12144
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12144
  ret void, !dbg !12145
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.174() unnamed_addr #5 !dbg !12146 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12147
  %2 = and i32 %1, 12, !dbg !12147
  ret i32 %2, !dbg !12148
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.175(i32 noundef %0) unnamed_addr #15 !dbg !12149 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12151, metadata !DIExpression()), !dbg !12152
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12153
  %3 = and i32 %2, -7169, !dbg !12153
  %4 = or i32 %3, %0, !dbg !12153
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12153
  ret void, !dbg !12154
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.176(i32 noundef %0) unnamed_addr #15 !dbg !12155 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12157, metadata !DIExpression()), !dbg !12158
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12159
  %3 = and i32 %2, -57345, !dbg !12159
  %4 = or i32 %3, %0, !dbg !12159
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12159
  ret void, !dbg !12160
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #5 !dbg !12161 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12162
  %2 = lshr i32 %1, 27, !dbg !12163
  %3 = and i32 %2, 1, !dbg !12163
  ret i32 %3, !dbg !12164
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #15 !dbg !12165 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12169, metadata !DIExpression()), !dbg !12175
  call void @llvm.dbg.value(metadata i32 %1, metadata !12170, metadata !DIExpression()), !dbg !12175
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !12171, metadata !DIExpression()), !dbg !12175
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !12172, metadata !DIExpression()), !dbg !12175
  call void @llvm.dbg.value(metadata i32 0, metadata !12173, metadata !DIExpression()), !dbg !12175
  call void @llvm.dbg.value(metadata i32 0, metadata !12174, metadata !DIExpression()), !dbg !12175
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #25, !dbg !12176
  %6 = icmp eq i32 %5, 0, !dbg !12178
  br i1 %6, label %7, label %27, !dbg !12179

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #25, !dbg !12180
  call void @llvm.dbg.value(metadata i32 %8, metadata !12174, metadata !DIExpression()), !dbg !12175
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.177() #25, !dbg !12182
  %10 = icmp eq i32 %9, 1, !dbg !12184
  br i1 %10, label %19, label %11, !dbg !12185

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !12186
  br i1 %12, label %13, label %14, !dbg !12189

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #25, !dbg !12190
  br label %15, !dbg !12192

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.178() #25, !dbg !12193
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.179() #25, !dbg !12195
  br label %16, !dbg !12196

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.177() #25, !dbg !12197
  %18 = icmp eq i32 %17, 1, !dbg !12198
  br i1 %18, label %19, label %16, !dbg !12196, !llvm.loop !12199

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !12201
  %21 = load i32, i32* %20, align 4, !dbg !12201
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !12202
  %23 = load i32, i32* %22, align 4, !dbg !12202
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !12203
  %25 = load i32, i32* %24, align 4, !dbg !12203
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.169(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #25, !dbg !12204
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #25, !dbg !12205
  call void @llvm.dbg.value(metadata i32 %26, metadata !12173, metadata !DIExpression()), !dbg !12175
  br label %27, !dbg !12206

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !12207
  call void @llvm.dbg.value(metadata i32 %28, metadata !12173, metadata !DIExpression()), !dbg !12175
  ret i32 %28, !dbg !12208
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.177() unnamed_addr #5 !dbg !12209 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12210
  %2 = lshr i32 %1, 17, !dbg !12211
  %3 = and i32 %2, 1, !dbg !12211
  ret i32 %3, !dbg !12212
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #15 !dbg !12213 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12214
  %2 = or i32 %1, 262144, !dbg !12214
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12214
  ret void, !dbg !12215
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.178() unnamed_addr #15 !dbg !12216 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12217
  %2 = and i32 %1, -262145, !dbg !12217
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12217
  ret void, !dbg !12218
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.179() unnamed_addr #15 !dbg !12219 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12220
  %2 = or i32 %1, 65536, !dbg !12220
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12220
  ret void, !dbg !12221
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #21 !dbg !12222 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12225, metadata !DIExpression()), !dbg !12241
  call void @llvm.dbg.value(metadata i32 undef, metadata !12225, metadata !DIExpression()), !dbg !12241
  call void @llvm.dbg.value(metadata i32 undef, metadata !12225, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !12241
  ret void, !dbg !12242
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !12243 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12247, metadata !DIExpression()), !dbg !12249
  %2 = icmp eq i8* %0, null, !dbg !12250
  br i1 %2, label %29, label %3, !dbg !12252

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !12253
  %5 = icmp eq i8 %4, 0, !dbg !12254
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !12255
  br i1 %6, label %29, label %8, !dbg !12255

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12248, metadata !DIExpression()), !dbg !12249
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !12256

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !12248, metadata !DIExpression()), !dbg !12249
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #25, !dbg !12258
  br i1 %10, label %11, label %15, !dbg !12263

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !12264
  %13 = load i8*, i8** %12, align 4, !dbg !12264
  %14 = icmp eq i8* %13, %0, !dbg !12265
  br i1 %14, label %29, label %15, !dbg !12266

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !12267
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !12248, metadata !DIExpression()), !dbg !12249
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !12268
  br i1 %17, label %7, label %8, !dbg !12269, !llvm.loop !12270

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !12248, metadata !DIExpression()), !dbg !12249
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #25, !dbg !12272
  br i1 %20, label %21, label %26, !dbg !12276

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !12277
  %23 = load i8*, i8** %22, align 4, !dbg !12277
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #24, !dbg !12278
  %25 = icmp eq i32 %24, 0, !dbg !12279
  br i1 %25, label %29, label %26, !dbg !12280

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !12281
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !12248, metadata !DIExpression()), !dbg !12249
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !12282
  br i1 %28, label %29, label %18, !dbg !12256, !llvm.loop !12283

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !12249
  ret %struct.device* %30, !dbg !12285
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #10 !dbg !12286 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12290, metadata !DIExpression()), !dbg !12291
  %2 = icmp eq %struct.device* %0, null, !dbg !12292
  br i1 %2, label %14, label %3, !dbg !12294

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !12295
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !12295
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !12296
  %7 = load i8, i8* %6, align 1, !dbg !12296
  %8 = and i8 %7, 1, !dbg !12296
  %9 = icmp eq i8 %8, 0, !dbg !12296
  br i1 %9, label %14, label %10, !dbg !12297

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !12298
  %12 = load i8, i8* %11, align 1, !dbg !12298
  %13 = icmp eq i8 %12, 0, !dbg !12299
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !12291
  ret i1 %15, !dbg !12300
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #9 !dbg !12301 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !12306, metadata !DIExpression()), !dbg !12307
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !12308
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !12309
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !12310 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12318, metadata !DIExpression()), !dbg !12323
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !12319, metadata !DIExpression()), !dbg !12323
  call void @llvm.dbg.value(metadata i8* %2, metadata !12320, metadata !DIExpression()), !dbg !12323
  %5 = bitcast i32* %4 to i8*, !dbg !12324
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12324
  call void @llvm.dbg.value(metadata i32 0, metadata !12321, metadata !DIExpression()), !dbg !12323
  store i32 0, i32* %4, align 4, !dbg !12325
  call void @llvm.dbg.value(metadata i32* %4, metadata !12321, metadata !DIExpression(DW_OP_deref)), !dbg !12323
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #25, !dbg !12326
  call void @llvm.dbg.value(metadata i16* %6, metadata !12322, metadata !DIExpression()), !dbg !12323
  %7 = load i32, i32* %4, align 4, !dbg !12327
  call void @llvm.dbg.value(metadata i32 %7, metadata !12321, metadata !DIExpression()), !dbg !12323
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #25, !dbg !12328
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12329
  ret i32 %8, !dbg !12330
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !12331 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12335, metadata !DIExpression()), !dbg !12341
  call void @llvm.dbg.value(metadata i32* %1, metadata !12336, metadata !DIExpression()), !dbg !12341
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !12342
  %4 = load i16*, i16** %3, align 4, !dbg !12342
  call void @llvm.dbg.value(metadata i16* %4, metadata !12337, metadata !DIExpression()), !dbg !12341
  %5 = icmp eq i16* %4, null, !dbg !12343
  br i1 %5, label %14, label %6, !dbg !12344

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !12345
  call void @llvm.dbg.value(metadata i32 %7, metadata !12338, metadata !DIExpression()), !dbg !12345
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !12346
  %9 = load i16, i16* %8, align 2, !dbg !12346
  %10 = add i16 %9, -32767, !dbg !12347
  %11 = icmp ult i16 %10, 2, !dbg !12347
  %12 = add i32 %7, 1, !dbg !12348
  call void @llvm.dbg.value(metadata i32 %12, metadata !12338, metadata !DIExpression()), !dbg !12345
  br i1 %11, label %13, label %6, !dbg !12347, !llvm.loop !12350

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !12353
  br label %14, !dbg !12354

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !12355
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !12356 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !12360, metadata !DIExpression()), !dbg !12371
  call void @llvm.dbg.value(metadata i32 %1, metadata !12361, metadata !DIExpression()), !dbg !12371
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !12362, metadata !DIExpression()), !dbg !12371
  call void @llvm.dbg.value(metadata i8* %3, metadata !12363, metadata !DIExpression()), !dbg !12371
  call void @llvm.dbg.value(metadata i32 0, metadata !12364, metadata !DIExpression()), !dbg !12372
  %5 = icmp eq i32 %1, 0, !dbg !12373
  br i1 %5, label %16, label %8, !dbg !12374

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !12364, metadata !DIExpression()), !dbg !12372
  %7 = icmp eq i32 %15, %1, !dbg !12373
  br i1 %7, label %16, label %8, !dbg !12374, !llvm.loop !12375

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !12364, metadata !DIExpression()), !dbg !12372
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !12377
  %11 = load i16, i16* %10, align 2, !dbg !12377
  call void @llvm.dbg.value(metadata i16 %11, metadata !12366, metadata !DIExpression()), !dbg !12378
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #25, !dbg !12379
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !12369, metadata !DIExpression()), !dbg !12378
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #24, !dbg !12380
  call void @llvm.dbg.value(metadata i32 %13, metadata !12370, metadata !DIExpression()), !dbg !12378
  %14 = icmp slt i32 %13, 0, !dbg !12381
  %15 = add nuw i32 %9, 1, !dbg !12383
  call void @llvm.dbg.value(metadata i32 %15, metadata !12364, metadata !DIExpression()), !dbg !12372
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !12384
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #6 !dbg !12385 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !12389, metadata !DIExpression()), !dbg !12392
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !12390, metadata !DIExpression()), !dbg !12392
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !12391, metadata !DIExpression()), !dbg !12392
  %2 = sext i16 %0 to i32, !dbg !12393
  %3 = icmp slt i16 %0, 1, !dbg !12395
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !12396
  %6 = add nsw i32 %2, -1, !dbg !12396
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !12396
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !12396
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !12390, metadata !DIExpression()), !dbg !12392
  ret %struct.device* %8, !dbg !12397
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !12398 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12400, metadata !DIExpression()), !dbg !12405
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !12401, metadata !DIExpression()), !dbg !12405
  call void @llvm.dbg.value(metadata i8* %2, metadata !12402, metadata !DIExpression()), !dbg !12405
  %5 = bitcast i32* %4 to i8*, !dbg !12406
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12406
  call void @llvm.dbg.value(metadata i32 0, metadata !12403, metadata !DIExpression()), !dbg !12405
  store i32 0, i32* %4, align 4, !dbg !12407
  call void @llvm.dbg.value(metadata i32* %4, metadata !12403, metadata !DIExpression(DW_OP_deref)), !dbg !12405
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #25, !dbg !12408
  call void @llvm.dbg.value(metadata i16* %6, metadata !12404, metadata !DIExpression()), !dbg !12405
  %7 = load i32, i32* %4, align 4, !dbg !12409
  call void @llvm.dbg.value(metadata i32 %7, metadata !12403, metadata !DIExpression()), !dbg !12405
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #25, !dbg !12410
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12411
  ret i32 %8, !dbg !12412
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !12413 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12415, metadata !DIExpression()), !dbg !12420
  call void @llvm.dbg.value(metadata i32* %1, metadata !12416, metadata !DIExpression()), !dbg !12420
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !12421
  %4 = load i16*, i16** %3, align 4, !dbg !12421
  call void @llvm.dbg.value(metadata i16* %4, metadata !12417, metadata !DIExpression()), !dbg !12420
  call void @llvm.dbg.value(metadata i32 0, metadata !12418, metadata !DIExpression()), !dbg !12420
  call void @llvm.dbg.value(metadata i32 0, metadata !12419, metadata !DIExpression()), !dbg !12420
  %5 = icmp eq i16* %4, null, !dbg !12422
  br i1 %5, label %22, label %6, !dbg !12424

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !12418, metadata !DIExpression()), !dbg !12420
  call void @llvm.dbg.value(metadata i16* %8, metadata !12417, metadata !DIExpression()), !dbg !12420
  %9 = load i16, i16* %8, align 2, !dbg !12425
  %10 = icmp eq i16 %9, -32768, !dbg !12429
  call void @llvm.dbg.value(metadata i32 undef, metadata !12418, metadata !DIExpression()), !dbg !12420
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !12430
  call void @llvm.dbg.value(metadata i16* %11, metadata !12417, metadata !DIExpression()), !dbg !12420
  %12 = zext i1 %10 to i32, !dbg !12431
  %13 = add i32 %7, %12, !dbg !12431
  call void @llvm.dbg.value(metadata i32 %13, metadata !12418, metadata !DIExpression()), !dbg !12420
  %14 = icmp eq i32 %13, 2, !dbg !12432
  br i1 %14, label %15, label %6, !dbg !12433

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !12420
  call void @llvm.dbg.value(metadata i32 %16, metadata !12419, metadata !DIExpression()), !dbg !12420
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !12434
  %18 = load i16, i16* %17, align 2, !dbg !12434
  %19 = icmp eq i16 %18, 32767, !dbg !12435
  %20 = add i32 %16, 1, !dbg !12436
  call void @llvm.dbg.value(metadata i32 %20, metadata !12419, metadata !DIExpression()), !dbg !12420
  br i1 %19, label %21, label %15, !dbg !12438, !llvm.loop !12439

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !12441
  br label %22, !dbg !12442

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !12443
  call void @llvm.dbg.value(metadata i16* %23, metadata !12417, metadata !DIExpression()), !dbg !12420
  ret i16* %23, !dbg !12444
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #10 !dbg !12445 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12448
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 5, !dbg !12449
  ret i32* %2, !dbg !12450
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #6 !dbg !12451 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !12602, metadata !DIExpression()), !dbg !12605
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !12603, metadata !DIExpression()), !dbg !12605
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12604, metadata !DIExpression()), !dbg !12605
  ret void, !dbg !12606
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #6 !dbg !12607 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12611, metadata !DIExpression()), !dbg !12613
  call void @llvm.dbg.value(metadata i32 %1, metadata !12612, metadata !DIExpression()), !dbg !12613
  ret void, !dbg !12614
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #6 !dbg !12615 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12619, metadata !DIExpression()), !dbg !12621
  call void @llvm.dbg.value(metadata i32 %1, metadata !12620, metadata !DIExpression()), !dbg !12621
  ret void, !dbg !12622
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #6 !dbg !12623 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12627, metadata !DIExpression()), !dbg !12629
  call void @llvm.dbg.value(metadata i8* %1, metadata !12628, metadata !DIExpression()), !dbg !12629
  ret i32 -134, !dbg !12630
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #6 !dbg !12631 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12635, metadata !DIExpression()), !dbg !12637
  call void @llvm.dbg.value(metadata i8* %1, metadata !12636, metadata !DIExpression()), !dbg !12637
  ret i32 -134, !dbg !12638
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #12 !dbg !12639 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12642, metadata !DIExpression()), !dbg !12643
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12644, !srcloc !12650
  call void @llvm.dbg.value(metadata i32 undef, metadata !12647, metadata !DIExpression()) #23, !dbg !12651
  call void @llvm.dbg.value(metadata i32 undef, metadata !12648, metadata !DIExpression()) #23, !dbg !12651
  br label %3, !dbg !12652

3:                                                ; preds = %3, %1
  br label %3, !dbg !12653, !llvm.loop !12656
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12659 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12663, metadata !DIExpression()), !dbg !12665
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12664, metadata !DIExpression()), !dbg !12665
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.184, i32 0, i32 0), i32 noundef 69) #24, !dbg !12666
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !12671
  unreachable, !dbg !12671
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #12 !dbg !12672 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12674, metadata !DIExpression()), !dbg !12675
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !12676
  unreachable, !dbg !12676
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12677 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12679, metadata !DIExpression()), !dbg !12683
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12680, metadata !DIExpression()), !dbg !12683
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12684, !srcloc !12650
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !12684
  call void @llvm.dbg.value(metadata i32 %4, metadata !12647, metadata !DIExpression()) #23, !dbg !12686
  call void @llvm.dbg.value(metadata i32 undef, metadata !12648, metadata !DIExpression()) #23, !dbg !12686
  call void @llvm.dbg.value(metadata i32 %4, metadata !12681, metadata !DIExpression()), !dbg !12683
  %5 = tail call fastcc %struct.k_thread* @k_current_get.187() #26, !dbg !12687
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !12682, metadata !DIExpression()), !dbg !12683
  %6 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #25, !dbg !12688
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.188, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %6, i32 noundef 0) #24, !dbg !12688
  %7 = icmp eq %struct.__esf* %1, null, !dbg !12693
  br i1 %7, label %20, label %8, !dbg !12695

8:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12696, metadata !DIExpression()), !dbg !12701
  %9 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !12703
  %10 = load i32, i32* %9, align 4, !dbg !12703
  %11 = and i32 %10, 511, !dbg !12704
  %12 = icmp eq i32 %11, 0, !dbg !12705
  br i1 %12, label %14, label %13, !dbg !12706

13:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.189, i32 0, i32 0), i32 noundef 69) #24, !dbg !12707
  br label %14, !dbg !12713

14:                                               ; preds = %8, %13
  %15 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %5) #25, !dbg !12714
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.190, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %5, i8* noundef %15) #24, !dbg !12714
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #25, !dbg !12719
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12696, metadata !DIExpression()), !dbg !12720
  %16 = load i32, i32* %9, align 4, !dbg !12725
  %17 = and i32 %16, 511, !dbg !12726
  %18 = icmp eq i32 %17, 0, !dbg !12727
  br i1 %18, label %22, label %19, !dbg !12728

19:                                               ; preds = %14
  call void @llvm.dbg.value(metadata i32 %4, metadata !12729, metadata !DIExpression()) #23, !dbg !12732
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !12735, !srcloc !12736
  br label %25, !dbg !12737

20:                                               ; preds = %2
  %21 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %5) #25, !dbg !12714
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.190, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %5, i8* noundef %21) #24, !dbg !12714
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #25, !dbg !12719
  br label %22, !dbg !12738

22:                                               ; preds = %20, %14
  %23 = icmp eq i32 %0, 1, !dbg !12739
  call void @llvm.dbg.value(metadata i32 %4, metadata !12729, metadata !DIExpression()) #23, !dbg !12742
  call void @llvm.dbg.value(metadata i32 %4, metadata !12729, metadata !DIExpression()) #23, !dbg !12745
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !12683
  br i1 %23, label %25, label %24, !dbg !12747

24:                                               ; preds = %22
  tail call fastcc void @k_thread_abort.191(%struct.k_thread* noundef %5) #25, !dbg !12748
  br label %25, !dbg !12751

25:                                               ; preds = %22, %24, %19
  ret void, !dbg !12751
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.187() unnamed_addr #13 !dbg !12752 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.199() #26, !dbg !12756
  ret %struct.k_thread* %1, !dbg !12757
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #6 !dbg !12758 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12762, metadata !DIExpression()), !dbg !12763
  %2 = icmp ult i32 %0, 5, !dbg !12764
  br i1 %2, label %3, label %6, !dbg !12764

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !12764
  %5 = load i8*, i8** %4, align 4, !dbg !12764
  br label %6, !dbg !12764

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9.193, i32 0, i32 0), %1 ], !dbg !12765
  ret i8* %7, !dbg !12767
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12768 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12772, metadata !DIExpression()), !dbg !12774
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !12775
  br i1 %2, label %9, label %3, !dbg !12776

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #24, !dbg !12777
  call void @llvm.dbg.value(metadata i8* %4, metadata !12773, metadata !DIExpression()), !dbg !12774
  %5 = icmp eq i8* %4, null, !dbg !12778
  br i1 %5, label %9, label %6, !dbg !12780

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !12781
  %8 = icmp eq i8 %7, 0, !dbg !12782
  br i1 %8, label %9, label %10, !dbg !12783

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.192, i32 0, i32 0), metadata !12773, metadata !DIExpression()), !dbg !12774
  br label %10, !dbg !12784

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.192, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !12774
  call void @llvm.dbg.value(metadata i8* %11, metadata !12773, metadata !DIExpression()), !dbg !12774
  ret i8* %11, !dbg !12786
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.191(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12787 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12791, metadata !DIExpression()), !dbg !12792
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !12793, !srcloc !12795
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #24, !dbg !12796
  ret void, !dbg !12797
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.199() unnamed_addr #13 !dbg !12798 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !12799, !srcloc !12801
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #24, !dbg !12802
  ret %struct.k_thread* %1, !dbg !12803
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12804 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12808, metadata !DIExpression()), !dbg !12811
  call void @llvm.dbg.value(metadata i32 %1, metadata !12809, metadata !DIExpression()), !dbg !12811
  call void @llvm.dbg.value(metadata i32 %2, metadata !12810, metadata !DIExpression()), !dbg !12811
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #24, !dbg !12812
  ret void, !dbg !12813
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12814 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12818, metadata !DIExpression()), !dbg !12821
  call void @llvm.dbg.value(metadata i8* %1, metadata !12819, metadata !DIExpression()), !dbg !12821
  call void @llvm.dbg.value(metadata i32 %2, metadata !12820, metadata !DIExpression()), !dbg !12821
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #24, !dbg !12822
  ret void, !dbg !12823
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !12824 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #25, !dbg !12825
  ret void, !dbg !12826
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !12827 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12829, metadata !DIExpression()), !dbg !12830
  tail call fastcc void @init_idle_thread(i32 noundef %0) #25, !dbg !12831
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12832
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !12833
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !12834
  %4 = trunc i32 %0 to i8, !dbg !12835
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !12836
  store i8 %4, i8* %5, align 4, !dbg !12837
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !12838
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #25, !dbg !12839
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !12840
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !12841
  store i8* %8, i8** %9, align 4, !dbg !12842
  ret void, !dbg !12843
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !12844 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12846, metadata !DIExpression()), !dbg !12852
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12853
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12847, metadata !DIExpression()), !dbg !12852
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !12854
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !12848, metadata !DIExpression()), !dbg !12852
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.206, i32 0, i32 0), metadata !12851, metadata !DIExpression()), !dbg !12852
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !12855
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !12856
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.206, i32 0, i32 0)) #24, !dbg !12857
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #25, !dbg !12858
  ret void, !dbg !12859
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #6 !dbg !12860 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !12864, metadata !DIExpression()), !dbg !12865
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !12866
  ret i8* %2, !dbg !12867
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !12868 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12873, metadata !DIExpression()), !dbg !12874
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12875
  %3 = load i8, i8* %2, align 1, !dbg !12876
  %4 = and i8 %3, -5, !dbg !12876
  store i8 %4, i8* %2, align 1, !dbg !12876
  ret void, !dbg !12877
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #12 !dbg !12878 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #25, !dbg !12881
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #24, !dbg !12882
  %3 = ptrtoint i8* %2 to i32, !dbg !12891
  %4 = add i32 %3, 2048, !dbg !12892
  call void @llvm.dbg.value(metadata i32 %4, metadata !12886, metadata !DIExpression()) #23, !dbg !12893
  call void @llvm.dbg.value(metadata i32 %4, metadata !12894, metadata !DIExpression()) #23, !dbg !12897
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #23, !dbg !12899, !srcloc !12900
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12901
  %6 = or i32 %5, 512, !dbg !12901
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12901
  tail call fastcc void @__NVIC_SetPriority.209(i32 noundef -2, i32 noundef 255) #24, !dbg !12902
  tail call fastcc void @__NVIC_SetPriority.209(i32 noundef -5, i32 noundef 0) #24, !dbg !12905
  tail call fastcc void @__NVIC_SetPriority.209(i32 noundef -12, i32 noundef 0) #24, !dbg !12906
  tail call fastcc void @__NVIC_SetPriority.209(i32 noundef -11, i32 noundef 0) #24, !dbg !12907
  tail call fastcc void @__NVIC_SetPriority.209(i32 noundef -10, i32 noundef 0) #24, !dbg !12908
  tail call fastcc void @__NVIC_SetPriority.209(i32 noundef -4, i32 noundef 0) #24, !dbg !12909
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12910
  %8 = or i32 %7, 458752, !dbg !12910
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12910
  tail call void @z_arm_fault_init() #24, !dbg !12911
  tail call void @z_arm_cpu_idle_init() #24, !dbg !12912
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !12913
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !12916
  %9 = tail call i32 @z_arm_mpu_init() #24, !dbg !12917
  tail call void @z_arm_configure_static_mpu_regions() #24, !dbg !12918
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !12919
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %10) #23, !dbg !12919
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !12880, metadata !DIExpression()), !dbg !12920
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #25, !dbg !12921
  call void @z_device_state_init() #24, !dbg !12922
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #25, !dbg !12923
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #25, !dbg !12924
  %11 = call fastcc i8* @prepare_multithreading() #25, !dbg !12925
  call fastcc void @switch_to_main_thread(i8* noundef %11) #29, !dbg !12926
  unreachable, !dbg !12926
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2081 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2085, metadata !DIExpression()), !dbg !12927
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !12928
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !12928
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2086, metadata !DIExpression()), !dbg !12927
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2086, metadata !DIExpression()), !dbg !12927
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !12929
  br i1 %7, label %8, label %35, !dbg !12930

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2086, metadata !DIExpression()), !dbg !12927
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !12931
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !12931
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2096, metadata !DIExpression()), !dbg !12932
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !12933
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !12933
  %14 = tail call i32 %13(%struct.device* noundef %11) #24, !dbg !12934
  call void @llvm.dbg.value(metadata i32 %14, metadata !2100, metadata !DIExpression()), !dbg !12932
  %15 = icmp eq %struct.device* %11, null, !dbg !12935
  br i1 %15, label %32, label %16, !dbg !12937

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !12938
  br i1 %17, label %26, label %18, !dbg !12941

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !12942
  call void @llvm.dbg.value(metadata i32 %19, metadata !2100, metadata !DIExpression()), !dbg !12932
  %20 = icmp ult i32 %19, 255, !dbg !12944
  %21 = select i1 %20, i32 %19, i32 255, !dbg !12944
  call void @llvm.dbg.value(metadata i32 %21, metadata !2100, metadata !DIExpression()), !dbg !12932
  %22 = trunc i32 %21 to i8, !dbg !12945
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12946
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !12946
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !12947
  store i8 %22, i8* %25, align 1, !dbg !12948
  br label %26, !dbg !12949

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12950
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !12950
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !12951
  %30 = load i8, i8* %29, align 1, !dbg !12952
  %31 = or i8 %30, 1, !dbg !12952
  store i8 %31, i8* %29, align 1, !dbg !12952
  br label %32, !dbg !12953

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !12954
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2086, metadata !DIExpression()), !dbg !12927
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !12929
  br i1 %34, label %8, label %35, !dbg !12930, !llvm.loop !12955

35:                                               ; preds = %32, %1
  ret void, !dbg !12957
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.209(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !12958 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12960, metadata !DIExpression()), !dbg !12962
  call void @llvm.dbg.value(metadata i32 %1, metadata !12961, metadata !DIExpression()), !dbg !12962
  %3 = trunc i32 %1 to i8, !dbg !12963
  %4 = shl i8 %3, 4, !dbg !12963
  %5 = and i32 %0, 15, !dbg !12966
  %6 = add nsw i32 %5, -4, !dbg !12967
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !12968
  store volatile i8 %4, i8* %7, align 1, !dbg !12969
  ret void, !dbg !12970
}

; Function Attrs: optsize
declare !dbg !12971 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #9 !dbg !12972 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12975, metadata !DIExpression()), !dbg !12976
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12977
  store i8 1, i8* %2, align 1, !dbg !12978
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !12979
  store i8 1, i8* %3, align 4, !dbg !12980
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !12981
  store i32 0, i32* %4, align 4, !dbg !12982
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 1, !dbg !12983
  store i32 0, i32* %5, align 4, !dbg !12984
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, !dbg !12985
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !12986
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12987
  ret void, !dbg !12988
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !12989 {
  tail call void @z_sched_init() #24, !dbg !12994
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12995
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 11, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.210, i32 0, i32 0)) #24, !dbg !12996
  call void @llvm.dbg.value(metadata i8* %1, metadata !12993, metadata !DIExpression()), !dbg !12997
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !12998
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #24, !dbg !12999
  tail call void @z_init_cpu(i32 noundef 0) #25, !dbg !13000
  ret i8* %1, !dbg !13001
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #12 !dbg !13002 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13006, metadata !DIExpression()), !dbg !13007
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #24, !dbg !13008
  unreachable, !dbg !13009
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !13010 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13012, metadata !DIExpression()), !dbg !13015
  call void @llvm.dbg.value(metadata i8* %1, metadata !13013, metadata !DIExpression()), !dbg !13015
  call void @llvm.dbg.value(metadata i8* %2, metadata !13014, metadata !DIExpression()), !dbg !13015
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !13016
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #25, !dbg !13017
  tail call void @boot_banner() #24, !dbg !13018
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #25, !dbg !13019
  tail call void @z_init_static_threads() #24, !dbg !13020
  tail call void @main() #24, !dbg !13021
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13022
  %5 = and i8 %4, -2, !dbg !13022
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13022
  ret void, !dbg !13023
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #6 !dbg !13024 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13034, metadata !DIExpression()), !dbg !13036
  call void @llvm.dbg.value(metadata i8* %1, metadata !13035, metadata !DIExpression()), !dbg !13036
  ret void, !dbg !13037
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #6 !dbg !13038 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13040, metadata !DIExpression()), !dbg !13042
  call void @llvm.dbg.value(metadata i8* %1, metadata !13041, metadata !DIExpression()), !dbg !13042
  ret void, !dbg !13043
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !13044 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13045, !srcloc !13052
  call void @llvm.dbg.value(metadata i32 %1, metadata !13048, metadata !DIExpression()) #23, !dbg !13053
  %2 = icmp ne i32 %1, 0, !dbg !13054
  ret i1 %2, !dbg !13055
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #11 !dbg !13056 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13057
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13058
  %3 = load i8, i8* %2, align 4, !dbg !13059
  %4 = or i8 %3, 1, !dbg !13059
  store i8 %4, i8* %2, align 4, !dbg !13059
  ret void, !dbg !13060
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #11 !dbg !13061 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13062
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13063
  %3 = load i8, i8* %2, align 4, !dbg !13064
  %4 = and i8 %3, -2, !dbg !13064
  store i8 %4, i8* %2, align 4, !dbg !13064
  ret void, !dbg !13065
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #10 !dbg !13066 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13067
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13068
  %3 = load i8, i8* %2, align 4, !dbg !13068
  %4 = and i8 %3, 1, !dbg !13069
  %5 = icmp ne i8 %4, 0, !dbg !13070
  ret i1 %5, !dbg !13071
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !13072 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13076, metadata !DIExpression()), !dbg !13078
  call void @llvm.dbg.value(metadata i8* %1, metadata !13077, metadata !DIExpression()), !dbg !13078
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !13079
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %0, !dbg !13081
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13076, metadata !DIExpression()), !dbg !13078
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 4, i32 0, !dbg !13082
  %7 = tail call i8* @strncpy(i8* noundef nonnull %6, i8* noundef %1, i32 noundef 31) #24, !dbg !13083
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 4, i32 31, !dbg !13084
  store i8 0, i8* %8, align 1, !dbg !13085
  ret i32 0, !dbg !13086
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local nonnull i8* @k_thread_name_get(%struct.k_thread* noundef readnone %0) local_unnamed_addr #6 !dbg !13087 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13091, metadata !DIExpression()), !dbg !13092
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13093
  ret i8* %2, !dbg !13094
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13095 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13099, metadata !DIExpression()), !dbg !13102
  call void @llvm.dbg.value(metadata i8* %1, metadata !13100, metadata !DIExpression()), !dbg !13102
  call void @llvm.dbg.value(metadata i32 %2, metadata !13101, metadata !DIExpression()), !dbg !13102
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13103
  %5 = tail call i8* @strncpy(i8* noundef %1, i8* noundef nonnull %4, i32 noundef %2) #24, !dbg !13104
  ret i32 0, !dbg !13105
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2109 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2226, metadata !DIExpression()), !dbg !13106
  call void @llvm.dbg.value(metadata i8* %1, metadata !2227, metadata !DIExpression()), !dbg !13106
  call void @llvm.dbg.value(metadata i32 %2, metadata !2228, metadata !DIExpression()), !dbg !13106
  call void @llvm.dbg.value(metadata i32 0, metadata !2229, metadata !DIExpression()), !dbg !13106
  call void @llvm.dbg.value(metadata i8 undef, metadata !2231, metadata !DIExpression()), !dbg !13106
  %4 = icmp eq i8* %1, null, !dbg !13107
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !13109
  br i1 %6, label %46, label %7, !dbg !13109

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13110
  %9 = load i8, i8* %8, align 1, !dbg !13110
  call void @llvm.dbg.value(metadata i8 %9, metadata !2231, metadata !DIExpression()), !dbg !13106
  %10 = add i32 %2, -1, !dbg !13111
  call void @llvm.dbg.value(metadata i32 %10, metadata !2228, metadata !DIExpression()), !dbg !13106
  call void @llvm.dbg.value(metadata i8 0, metadata !2232, metadata !DIExpression()), !dbg !13112
  call void @llvm.dbg.value(metadata i8 %9, metadata !2231, metadata !DIExpression()), !dbg !13106
  call void @llvm.dbg.value(metadata i32 0, metadata !2229, metadata !DIExpression()), !dbg !13106
  %11 = icmp eq i8 %9, 0, !dbg !13113
  br i1 %11, label %12, label %15, !dbg !13115

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !13116
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !13117
  store i8 0, i8* %14, align 1, !dbg !13118
  br label %46, !dbg !13119

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2232, metadata !DIExpression()), !dbg !13112
  call void @llvm.dbg.value(metadata i8 %17, metadata !2231, metadata !DIExpression()), !dbg !13106
  call void @llvm.dbg.value(metadata i32 %18, metadata !2229, metadata !DIExpression()), !dbg !13106
  %19 = zext i8 %17 to i32, !dbg !13120
  %20 = zext i8 %16 to i32, !dbg !13121
  %21 = shl nuw i32 1, %20, !dbg !13121
  call void @llvm.dbg.value(metadata i32 %21, metadata !2230, metadata !DIExpression()), !dbg !13106
  %22 = and i32 %21, %19, !dbg !13123
  %23 = icmp eq i32 %22, 0, !dbg !13125
  br i1 %23, label %42, label %24, !dbg !13126

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !13127
  %26 = sub i32 %10, %18, !dbg !13128
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !13129
  %28 = load i8*, i8** %27, align 4, !dbg !13129
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !13130
  %30 = load i32, i32* %29, align 4, !dbg !13130
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #25, !dbg !13131
  %32 = add i32 %31, %18, !dbg !13132
  call void @llvm.dbg.value(metadata i32 %32, metadata !2229, metadata !DIExpression()), !dbg !13106
  %33 = trunc i32 %21 to i8, !dbg !13133
  %34 = xor i8 %33, -1, !dbg !13133
  %35 = and i8 %17, %34, !dbg !13133
  call void @llvm.dbg.value(metadata i8 %35, metadata !2231, metadata !DIExpression()), !dbg !13106
  %36 = icmp eq i8 %35, 0, !dbg !13134
  br i1 %36, label %12, label %37, !dbg !13136

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !13137
  %39 = sub i32 %10, %32, !dbg !13139
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.213, i32 0, i32 0), i32 noundef 1) #25, !dbg !13140
  %41 = add i32 %40, %32, !dbg !13141
  call void @llvm.dbg.value(metadata i32 %41, metadata !2229, metadata !DIExpression()), !dbg !13106
  br label %42, !dbg !13142

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !13106
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !13106
  call void @llvm.dbg.value(metadata i8 %44, metadata !2231, metadata !DIExpression()), !dbg !13106
  call void @llvm.dbg.value(metadata i32 %43, metadata !2229, metadata !DIExpression()), !dbg !13106
  %45 = add i8 %16, 1, !dbg !13143
  call void @llvm.dbg.value(metadata i8 %45, metadata !2232, metadata !DIExpression()), !dbg !13112
  br label %15, !dbg !13115

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.214, i32 0, i32 0), %3 ], !dbg !13106
  ret i8* %47, !dbg !13144
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !13145 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13149, metadata !DIExpression()), !dbg !13154
  call void @llvm.dbg.value(metadata i32 %1, metadata !13150, metadata !DIExpression()), !dbg !13154
  call void @llvm.dbg.value(metadata i8* %2, metadata !13151, metadata !DIExpression()), !dbg !13154
  call void @llvm.dbg.value(metadata i32 %3, metadata !13152, metadata !DIExpression()), !dbg !13154
  %5 = icmp ult i32 %1, %3, !dbg !13155
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !13155
  call void @llvm.dbg.value(metadata i32 %6, metadata !13153, metadata !DIExpression()), !dbg !13154
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #24, !dbg !13156
  ret i32 %6, !dbg !13157
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13158 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13162, metadata !DIExpression()), !dbg !13163
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #24, !dbg !13164
  ret void, !dbg !13165
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef %9) local_unnamed_addr #1 !dbg !13166 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13175, metadata !DIExpression()), !dbg !13186
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13176, metadata !DIExpression()), !dbg !13186
  call void @llvm.dbg.value(metadata i32 %2, metadata !13177, metadata !DIExpression()), !dbg !13186
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13178, metadata !DIExpression()), !dbg !13186
  call void @llvm.dbg.value(metadata i8* %4, metadata !13179, metadata !DIExpression()), !dbg !13186
  call void @llvm.dbg.value(metadata i8* %5, metadata !13180, metadata !DIExpression()), !dbg !13186
  call void @llvm.dbg.value(metadata i8* %6, metadata !13181, metadata !DIExpression()), !dbg !13186
  call void @llvm.dbg.value(metadata i32 %7, metadata !13182, metadata !DIExpression()), !dbg !13186
  call void @llvm.dbg.value(metadata i32 %8, metadata !13183, metadata !DIExpression()), !dbg !13186
  call void @llvm.dbg.value(metadata i8* %9, metadata !13184, metadata !DIExpression()), !dbg !13186
  %11 = icmp eq i32 %7, 15, !dbg !13187
  br i1 %11, label %12, label %15, !dbg !13187

12:                                               ; preds = %10
  %13 = bitcast void (i8*, i8*, i8*)* %3 to i8*, !dbg !13187
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef %13) #25, !dbg !13187
  br i1 %14, label %19, label %18, !dbg !13187

15:                                               ; preds = %10
  %16 = add i32 %7, 16, !dbg !13187
  %17 = icmp ult i32 %16, 31, !dbg !13187
  br i1 %17, label %19, label %18, !dbg !13187

18:                                               ; preds = %12, %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.224, i32 0, i32 0), i8* noundef getelementptr inbounds ([128 x i8], [128 x i8]* @.str.10.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.226, i32 0, i32 0), i32 noundef 536) #24, !dbg !13191
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.12.227, i32 0, i32 0), i32 noundef %7, i32 noundef 14, i32 noundef -16) #24, !dbg !13191
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.226, i32 0, i32 0), i32 noundef 536) #24, !dbg !13191
  unreachable, !dbg !13191

19:                                               ; preds = %15, %12
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !13193
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %20) #25, !dbg !13194
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !13195
  tail call void @z_init_thread_base(%struct._thread_base* noundef %21, i32 noundef %7, i32 noundef 4, i32 noundef %8) #25, !dbg !13196
  %22 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #25, !dbg !13197
  call void @llvm.dbg.value(metadata i8* %22, metadata !13185, metadata !DIExpression()), !dbg !13186
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %22, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #24, !dbg !13198
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !13199
  store i8* null, i8** %23, align 4, !dbg !13200
  %24 = icmp eq i8* %9, null, !dbg !13201
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13203
  br i1 %24, label %29, label %26, !dbg !13204

26:                                               ; preds = %19
  %27 = tail call i8* @strncpy(i8* noundef nonnull %25, i8* noundef nonnull %9, i32 noundef 31) #24, !dbg !13205
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 31, !dbg !13207
  store i8 0, i8* %28, align 1, !dbg !13208
  br label %30, !dbg !13209

29:                                               ; preds = %19
  store i8 0, i8* %25, align 8, !dbg !13210
  br label %30

30:                                               ; preds = %29, %26
  %31 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13212
  %32 = icmp eq %struct.k_thread* %31, null, !dbg !13212
  br i1 %32, label %36, label %33, !dbg !13214

33:                                               ; preds = %30
  %34 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %31, i32 0, i32 7, !dbg !13215
  %35 = load %struct.k_heap*, %struct.k_heap** %34, align 8, !dbg !13215
  br label %36, !dbg !13216

36:                                               ; preds = %30, %33
  %37 = phi %struct.k_heap* [ %35, %33 ], [ null, %30 ], !dbg !13186
  %38 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, !dbg !13217
  store %struct.k_heap* %37, %struct.k_heap** %38, align 8, !dbg !13219
  ret i8* %22, !dbg !13220
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef readnone %0) unnamed_addr #6 !dbg !13221 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13225, metadata !DIExpression()), !dbg !13226
  %2 = icmp eq i8* %0, bitcast (void (i8*, i8*, i8*)* @idle to i8*), !dbg !13227
  ret i1 %2, !dbg !13228
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #9 !dbg !13229 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13234, metadata !DIExpression()), !dbg !13235
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !13236
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #25, !dbg !13237
  ret void, !dbg !13238
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #9 !dbg !13239 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !13244, metadata !DIExpression()), !dbg !13248
  call void @llvm.dbg.value(metadata i32 %1, metadata !13245, metadata !DIExpression()), !dbg !13248
  call void @llvm.dbg.value(metadata i32 %2, metadata !13246, metadata !DIExpression()), !dbg !13248
  call void @llvm.dbg.value(metadata i32 %3, metadata !13247, metadata !DIExpression()), !dbg !13248
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !13249
  store %union.anon* null, %union.anon** %5, align 8, !dbg !13250
  %6 = trunc i32 %3 to i8, !dbg !13251
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !13252
  store i8 %6, i8* %7, align 4, !dbg !13253
  %8 = trunc i32 %2 to i8, !dbg !13254
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !13255
  store i8 %8, i8* %9, align 1, !dbg !13256
  %10 = trunc i32 %1 to i8, !dbg !13257
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !13258
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !13258
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !13258
  store i8 %10, i8* %13, align 2, !dbg !13259
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !13260
  store i8 0, i8* %14, align 1, !dbg !13261
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #25, !dbg !13262
  ret void, !dbg !13263
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !13264 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13268, metadata !DIExpression()), !dbg !13276
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13269, metadata !DIExpression()), !dbg !13276
  call void @llvm.dbg.value(metadata i32 %2, metadata !13270, metadata !DIExpression()), !dbg !13276
  call void @llvm.dbg.value(metadata i32 0, metadata !13275, metadata !DIExpression()), !dbg !13276
  %4 = add i32 %2, 7, !dbg !13277
  %5 = and i32 %4, -8, !dbg !13277
  %6 = add i32 %5, 64, !dbg !13277
  call void @llvm.dbg.value(metadata i32 %6, metadata !13271, metadata !DIExpression()), !dbg !13276
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.228(%struct.z_thread_stack_element* noundef %1) #25, !dbg !13279
  call void @llvm.dbg.value(metadata i8* %7, metadata !13274, metadata !DIExpression()), !dbg !13276
  call void @llvm.dbg.value(metadata i32 %5, metadata !13272, metadata !DIExpression()), !dbg !13276
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !13280
  call void @llvm.dbg.value(metadata i8* %8, metadata !13273, metadata !DIExpression()), !dbg !13276
  call void @llvm.dbg.value(metadata i32 0, metadata !13275, metadata !DIExpression()), !dbg !13276
  %9 = ptrtoint i8* %7 to i32, !dbg !13281
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !13282
  store i32 %9, i32* %10, align 4, !dbg !13283
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 1, !dbg !13284
  store i32 %5, i32* %11, align 4, !dbg !13285
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 2, !dbg !13286
  store i32 0, i32* %12, align 4, !dbg !13287
  call void @llvm.dbg.value(metadata i8* %8, metadata !13273, metadata !DIExpression()), !dbg !13276
  ret i8* %8, !dbg !13288
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.228(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #6 !dbg !13289 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !13293, metadata !DIExpression()), !dbg !13294
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !13295
  ret i8* %2, !dbg !13296
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !13297 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !13302, metadata !DIExpression()), !dbg !13303
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !13304
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !13305
  ret void, !dbg !13306
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !13307 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13309, metadata !DIExpression()), !dbg !13310
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13311
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #25, !dbg !13312
  ret void, !dbg !13313
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !13314 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13318, metadata !DIExpression()), !dbg !13319
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13320
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !13321
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13322
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !13323
  ret void, !dbg !13324
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !13325 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13330, metadata !DIExpression()), !dbg !13331
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13332
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13333
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13334
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13335
  ret void, !dbg !13336
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !13337 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13354, metadata !DIExpression()), !dbg !13355
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13345, metadata !DIExpression()), !dbg !13355
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13346, metadata !DIExpression()), !dbg !13355
  call void @llvm.dbg.value(metadata i32 %2, metadata !13347, metadata !DIExpression()), !dbg !13355
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13348, metadata !DIExpression()), !dbg !13355
  call void @llvm.dbg.value(metadata i8* %4, metadata !13349, metadata !DIExpression()), !dbg !13355
  call void @llvm.dbg.value(metadata i8* %5, metadata !13350, metadata !DIExpression()), !dbg !13355
  call void @llvm.dbg.value(metadata i8* %6, metadata !13351, metadata !DIExpression()), !dbg !13355
  call void @llvm.dbg.value(metadata i32 %7, metadata !13352, metadata !DIExpression()), !dbg !13355
  call void @llvm.dbg.value(metadata i32 %8, metadata !13353, metadata !DIExpression()), !dbg !13355
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13356, !srcloc !13052
  call void @llvm.dbg.value(metadata i32 %11, metadata !13048, metadata !DIExpression()) #23, !dbg !13361
  %12 = icmp eq i32 %11, 0, !dbg !13362
  br i1 %12, label %14, label %13, !dbg !13363

13:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.224, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.226, i32 0, i32 0), i32 noundef 647) #24, !dbg !13364
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14.232, i32 0, i32 0)) #24, !dbg !13364
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.226, i32 0, i32 0), i32 noundef 647) #24, !dbg !13364
  unreachable, !dbg !13364

14:                                               ; preds = %10
  %15 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %15, metadata !13354, metadata !DIExpression()), !dbg !13355
  %16 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef null) #25, !dbg !13366
  %17 = icmp eq i64 %15, -1, !dbg !13367
  br i1 %17, label %19, label %18, !dbg !13369

18:                                               ; preds = %14
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #25, !dbg !13370
  br label %19, !dbg !13372

19:                                               ; preds = %18, %14
  ret %struct.k_thread* %0, !dbg !13373
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13374 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !13379, metadata !DIExpression()), !dbg !13380
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13378, metadata !DIExpression()), !dbg !13380
  %4 = icmp eq i64 %3, 0, !dbg !13381
  br i1 %4, label %5, label %6, !dbg !13383

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #25, !dbg !13384
  br label %7, !dbg !13386

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #25, !dbg !13387
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !13389
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13390 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13394, metadata !DIExpression()), !dbg !13395
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13396, !srcloc !13398
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #25, !dbg !13399
  ret void, !dbg !13400
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13401 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13404, metadata !DIExpression()), !dbg !13405
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13403, metadata !DIExpression()), !dbg !13405
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13406
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #24, !dbg !13407
  ret void, !dbg !13408
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !13409 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !13411, metadata !DIExpression()), !dbg !13431
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %1, label %2, !dbg !13432

1:                                                ; preds = %6, %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.224, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.226, i32 0, i32 0), i32 noundef 750) #24, !dbg !13436
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.236, i32 0, i32 0)) #24, !dbg !13436
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.226, i32 0, i32 0), i32 noundef 750) #24, !dbg !13436
  unreachable, !dbg !13436

2:                                                ; preds = %0, %6
  %3 = phi %struct._static_thread_data* [ %31, %6 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !13411, metadata !DIExpression()), !dbg !13431
  %4 = icmp ult %struct._static_thread_data* %3, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13439
  br i1 %4, label %6, label %5, !dbg !13440

5:                                                ; preds = %2
  tail call void @k_sched_lock() #24, !dbg !13441
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !13429, metadata !DIExpression()), !dbg !13442
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %33, label %34, !dbg !13443

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !13447
  %8 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !13447
  %9 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !13449
  %10 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %9, align 4, !dbg !13449
  %11 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !13450
  %12 = load i32, i32* %11, align 4, !dbg !13450
  %13 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !13451
  %14 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %13, align 4, !dbg !13451
  %15 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !13452
  %16 = load i8*, i8** %15, align 4, !dbg !13452
  %17 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !13453
  %18 = load i8*, i8** %17, align 4, !dbg !13453
  %19 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !13454
  %20 = load i8*, i8** %19, align 4, !dbg !13454
  %21 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !13455
  %22 = load i32, i32* %21, align 4, !dbg !13455
  %23 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !13456
  %24 = load i32, i32* %23, align 4, !dbg !13456
  %25 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 11, !dbg !13457
  %26 = load i8*, i8** %25, align 4, !dbg !13457
  %27 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %8, %struct.z_thread_stack_element* noundef %10, i32 noundef %12, void (i8*, i8*, i8*)* noundef %14, i8* noundef %16, i8* noundef %18, i8* noundef %20, i32 noundef %22, i32 noundef %24, i8* noundef %26) #25, !dbg !13458
  %28 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !13459
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 2, !dbg !13460
  %30 = bitcast i8** %29 to %struct._static_thread_data**, !dbg !13461
  store %struct._static_thread_data* %3, %struct._static_thread_data** %30, align 4, !dbg !13461
  %31 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !13462
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !13411, metadata !DIExpression()), !dbg !13431
  %32 = icmp ugt %struct._static_thread_data* %31, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13463
  br i1 %32, label %1, label %2, !dbg !13432, !llvm.loop !13464

33:                                               ; preds = %50, %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.224, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.226, i32 0, i32 0), i32 noundef 781) #24, !dbg !13466
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.236, i32 0, i32 0)) #24, !dbg !13466
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.226, i32 0, i32 0), i32 noundef 781) #24, !dbg !13466
  unreachable, !dbg !13466

34:                                               ; preds = %5, %50
  %35 = phi %struct._static_thread_data* [ %51, %50 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %5 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %35, metadata !13429, metadata !DIExpression()), !dbg !13442
  %36 = icmp ult %struct._static_thread_data* %35, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13469
  br i1 %36, label %38, label %37, !dbg !13470

37:                                               ; preds = %34
  tail call void @k_sched_unlock() #24, !dbg !13471
  ret void, !dbg !13472

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 9, !dbg !13473
  %40 = load i32, i32* %39, align 4, !dbg !13473
  %41 = icmp eq i32 %40, -1, !dbg !13476
  br i1 %41, label %50, label %42, !dbg !13477

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 0, !dbg !13478
  %44 = load %struct.k_thread*, %struct.k_thread** %43, align 4, !dbg !13478
  %45 = icmp sgt i32 %40, 0, !dbg !13480
  %46 = select i1 %45, i32 %40, i32 0, !dbg !13480
  %47 = zext i32 %46 to i64, !dbg !13480
  %48 = tail call fastcc i64 @k_ms_to_ticks_ceil64.237(i64 noundef %47) #25, !dbg !13480
  %49 = insertvalue [1 x i64] poison, i64 %48, 0, !dbg !13481
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %44, [1 x i64] %49) #25, !dbg !13481
  br label %50, !dbg !13482

50:                                               ; preds = %38, %42
  %51 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 1, !dbg !13483
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %51, metadata !13429, metadata !DIExpression()), !dbg !13442
  %52 = icmp ugt %struct._static_thread_data* %51, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13484
  br i1 %52, label %33, label %34, !dbg !13443, !llvm.loop !13485
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64.237(i64 noundef %0) unnamed_addr #6 !dbg !13487 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13489, metadata !DIExpression()), !dbg !13490
  call void @llvm.dbg.value(metadata i64 %0, metadata !13491, metadata !DIExpression()), !dbg !13506
  call void @llvm.dbg.value(metadata i32 1000, metadata !13494, metadata !DIExpression()), !dbg !13506
  call void @llvm.dbg.value(metadata i32 10000, metadata !13495, metadata !DIExpression()), !dbg !13506
  call void @llvm.dbg.value(metadata i8 1, metadata !13496, metadata !DIExpression()), !dbg !13506
  call void @llvm.dbg.value(metadata i8 0, metadata !13497, metadata !DIExpression()), !dbg !13506
  call void @llvm.dbg.value(metadata i8 1, metadata !13498, metadata !DIExpression()), !dbg !13506
  call void @llvm.dbg.value(metadata i8 0, metadata !13499, metadata !DIExpression()), !dbg !13506
  call void @llvm.dbg.value(metadata i8 1, metadata !13500, metadata !DIExpression()), !dbg !13506
  call void @llvm.dbg.value(metadata i8 0, metadata !13501, metadata !DIExpression()), !dbg !13506
  call void @llvm.dbg.value(metadata i64 0, metadata !13502, metadata !DIExpression()), !dbg !13506
  call void @llvm.dbg.value(metadata i64 0, metadata !13502, metadata !DIExpression()), !dbg !13506
  %2 = mul i64 %0, 10, !dbg !13508
  ret i64 %2, !dbg !13514
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #12 !dbg !13515 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !13517, metadata !DIExpression()), !dbg !13521
  call void @llvm.dbg.value(metadata i8* %1, metadata !13518, metadata !DIExpression()), !dbg !13521
  call void @llvm.dbg.value(metadata i8* %2, metadata !13519, metadata !DIExpression()), !dbg !13521
  call void @llvm.dbg.value(metadata i8* %3, metadata !13520, metadata !DIExpression()), !dbg !13521
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13522
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !13523
  %7 = load i8, i8* %6, align 4, !dbg !13524
  %8 = or i8 %7, 4, !dbg !13524
  store i8 %8, i8* %6, align 4, !dbg !13524
  tail call void @z_thread_essential_clear() #25, !dbg !13525
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !13526
  unreachable, !dbg !13526
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !13527 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13532, metadata !DIExpression()), !dbg !13534
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !13535
  %3 = load i32, i32* %2, align 4, !dbg !13535
  call void @llvm.dbg.value(metadata i32 %3, metadata !13533, metadata !DIExpression()), !dbg !13534
  %4 = icmp eq i32 %3, 0, !dbg !13536
  br i1 %4, label %10, label %5, !dbg !13538

5:                                                ; preds = %1
  %6 = and i32 %3, 3, !dbg !13539
  %7 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !13542
  %8 = zext i8 %7 to i32, !dbg !13543
  %9 = icmp eq i32 %6, %8, !dbg !13544
  br i1 %9, label %11, label %10, !dbg !13545

10:                                               ; preds = %5, %1
  br label %11, !dbg !13546

11:                                               ; preds = %5, %10
  %12 = phi i1 [ true, %10 ], [ false, %5 ], !dbg !13534
  ret i1 %12, !dbg !13547
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* nocapture noundef %0) local_unnamed_addr #11 !dbg !13548 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13550, metadata !DIExpression()), !dbg !13551
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !13552
  %3 = load i32, i32* %2, align 4, !dbg !13552
  %4 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !13554
  %5 = zext i8 %4 to i32, !dbg !13555
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13556
  %7 = ptrtoint %struct.k_thread* %6 to i32, !dbg !13557
  %8 = or i32 %7, %5, !dbg !13558
  %9 = icmp eq i32 %3, %8, !dbg !13559
  br i1 %9, label %10, label %11, !dbg !13560

10:                                               ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !13561
  br label %11, !dbg !13562

11:                                               ; preds = %1, %10
  ret i1 %9, !dbg !13563
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_spin_lock_set_owner(%struct.k_spinlock* nocapture noundef writeonly %0) local_unnamed_addr #11 !dbg !13564 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13568, metadata !DIExpression()), !dbg !13569
  %2 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !13570
  %3 = zext i8 %2 to i32, !dbg !13571
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13572
  %5 = ptrtoint %struct.k_thread* %4 to i32, !dbg !13573
  %6 = or i32 %5, %3, !dbg !13574
  %7 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !13575
  store i32 %6, i32* %7, align 4, !dbg !13576
  ret void, !dbg !13577
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #6 !dbg !13578 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13582, metadata !DIExpression()), !dbg !13583
  ret i32 -134, !dbg !13584
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #6 !dbg !13585 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13589, metadata !DIExpression()), !dbg !13591
  call void @llvm.dbg.value(metadata i32 %1, metadata !13590, metadata !DIExpression()), !dbg !13591
  ret i32 -134, !dbg !13592
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct._cpu_arch* noundef readnone %1) local_unnamed_addr #6 !dbg !13593 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13600, metadata !DIExpression()), !dbg !13602
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %1, metadata !13601, metadata !DIExpression()), !dbg !13602
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !13603
  %4 = icmp eq %struct._cpu_arch* %1, null
  %5 = or i1 %3, %4, !dbg !13605
  %6 = select i1 %5, i32 -22, i32 0, !dbg !13602
  ret i32 %6, !dbg !13606
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct._cpu_arch* noundef readnone %0) local_unnamed_addr #6 !dbg !13607 {
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %0, metadata !13611, metadata !DIExpression()), !dbg !13612
  %2 = icmp eq %struct._cpu_arch* %0, null, !dbg !13613
  %3 = select i1 %2, i32 -22, i32 0, !dbg !13612
  ret i32 %3, !dbg !13615
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !13616 {
  tail call void @sys_clock_idle_exit() #24, !dbg !13618
  ret void, !dbg !13619
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #12 !dbg !13620 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13622, metadata !DIExpression()), !dbg !13625
  call void @llvm.dbg.value(metadata i8* %1, metadata !13623, metadata !DIExpression()), !dbg !13625
  call void @llvm.dbg.value(metadata i8* %2, metadata !13624, metadata !DIExpression()), !dbg !13625
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13626
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !13626
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !13626
  %7 = load i8, i8* %6, align 2, !dbg !13626
  %8 = icmp sgt i8 %7, -1, !dbg !13626
  br i1 %8, label %10, label %9, !dbg !13629

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.248, i32 0, i32 0), i32 noundef 39) #24, !dbg !13630
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.248, i32 0, i32 0), i32 noundef 39) #24, !dbg !13630
  unreachable, !dbg !13630

10:                                               ; preds = %3, %10
  %11 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13632, !srcloc !13639
  call void @llvm.dbg.value(metadata i32 undef, metadata !13635, metadata !DIExpression()) #23, !dbg !13640
  call void @llvm.dbg.value(metadata i32 undef, metadata !13636, metadata !DIExpression()) #23, !dbg !13640
  tail call fastcc void @k_cpu_idle() #25, !dbg !13641
  br label %10, !dbg !13642, !llvm.loop !13643
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !13645 {
  tail call void @arch_cpu_idle() #24, !dbg !13646
  ret void, !dbg !13647
}

; Function Attrs: optsize
declare !dbg !13648 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #10 !dbg !13649 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13653, metadata !DIExpression()), !dbg !13657
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13654, metadata !DIExpression()), !dbg !13657
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !13658
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !13658
  %5 = load i8, i8* %4, align 2, !dbg !13658
  call void @llvm.dbg.value(metadata i8 %5, metadata !13655, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !13657
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !13659
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !13659
  %8 = load i8, i8* %7, align 2, !dbg !13659
  call void @llvm.dbg.value(metadata i8 %8, metadata !13656, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !13657
  %9 = icmp eq i8 %8, %5, !dbg !13660
  %10 = sext i8 %5 to i32, !dbg !13662
  %11 = sext i8 %8 to i32, !dbg !13662
  %12 = sub nsw i32 %11, %10, !dbg !13662
  %13 = select i1 %9, i32 0, i32 %12, !dbg !13662
  ret i32 %13, !dbg !13663
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !13664 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13668, metadata !DIExpression()), !dbg !13669
  %2 = tail call fastcc i32 @slice_time() #25, !dbg !13670
  %3 = icmp eq i32 %2, 0, !dbg !13672
  br i1 %3, label %8, label %4, !dbg !13673

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #24, !dbg !13674
  %6 = add i32 %5, %2, !dbg !13676
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13677
  %7 = tail call fastcc i32 @slice_time() #25, !dbg !13678
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #24, !dbg !13679
  br label %8, !dbg !13680

8:                                                ; preds = %4, %1
  ret void, !dbg !13681
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #10 !dbg !13682 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13686, metadata !DIExpression()), !dbg !13688
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !13689
  call void @llvm.dbg.value(metadata i32 %1, metadata !13687, metadata !DIExpression()), !dbg !13688
  ret i32 %1, !dbg !13690
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13691 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13695, metadata !DIExpression()), !dbg !13704
  call void @llvm.dbg.value(metadata i32 %1, metadata !13696, metadata !DIExpression()), !dbg !13704
  call void @llvm.dbg.value(metadata i32 0, metadata !13697, metadata !DIExpression()), !dbg !13705
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13706, metadata !DIExpression()) #23, !dbg !13713
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13715, !srcloc !13721
  call void @llvm.dbg.value(metadata i32 undef, metadata !13718, metadata !DIExpression()) #23, !dbg !13722
  call void @llvm.dbg.value(metadata i32 undef, metadata !13719, metadata !DIExpression()) #23, !dbg !13722
  call void @llvm.dbg.value(metadata i32 undef, metadata !13712, metadata !DIExpression()) #23, !dbg !13713
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !13723
  br i1 %4, label %6, label %5, !dbg !13726

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 148) #24, !dbg !13727
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !13727
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 148) #24, !dbg !13727
  unreachable, !dbg !13727

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !13718, metadata !DIExpression()) #23, !dbg !13722
  call void @llvm.dbg.value(metadata i32 undef, metadata !13712, metadata !DIExpression()) #23, !dbg !13713
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !13729
  call void @llvm.dbg.value(metadata i32 undef, metadata !13703, metadata !DIExpression()), !dbg !13705
  call void @llvm.dbg.value(metadata i32 undef, metadata !13697, metadata !DIExpression()), !dbg !13705
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13730
  %7 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #25, !dbg !13733
  %8 = icmp sgt i32 %0, 0, !dbg !13734
  %9 = icmp sgt i32 %7, 2, !dbg !13736
  %10 = select i1 %9, i32 %7, i32 2, !dbg !13736
  %11 = select i1 %8, i32 %10, i32 %7, !dbg !13736
  store i32 %11, i32* @slice_ticks, align 4, !dbg !13737
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !13738
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !13739
  call void @llvm.dbg.value(metadata i32 undef, metadata !13740, metadata !DIExpression()) #23, !dbg !13746
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13745, metadata !DIExpression()) #23, !dbg !13746
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !13748
  br i1 %12, label %14, label %13, !dbg !13751

13:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.253, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 194) #24, !dbg !13752
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.254, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !13752
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 194) #24, !dbg !13752
  unreachable, !dbg !13752

14:                                               ; preds = %6
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !13715
  call void @llvm.dbg.value(metadata i32 %15, metadata !13718, metadata !DIExpression()) #23, !dbg !13722
  call void @llvm.dbg.value(metadata i32 %15, metadata !13712, metadata !DIExpression()) #23, !dbg !13713
  call void @llvm.dbg.value(metadata i32 %15, metadata !13703, metadata !DIExpression()), !dbg !13705
  call void @llvm.dbg.value(metadata i32 undef, metadata !13740, metadata !DIExpression()) #23, !dbg !13746
  call void @llvm.dbg.value(metadata i32 undef, metadata !13754, metadata !DIExpression()) #23, !dbg !13757
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !13759, !srcloc !13760
  call void @llvm.dbg.value(metadata i32 1, metadata !13697, metadata !DIExpression()), !dbg !13705
  call void @llvm.dbg.value(metadata i32 undef, metadata !13697, metadata !DIExpression()), !dbg !13705
  ret void, !dbg !13761
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #6 !dbg !13762 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13764, metadata !DIExpression()), !dbg !13765
  call void @llvm.dbg.value(metadata i32 %0, metadata !13766, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13781
  call void @llvm.dbg.value(metadata i32 1000, metadata !13769, metadata !DIExpression()), !dbg !13781
  call void @llvm.dbg.value(metadata i32 10000, metadata !13770, metadata !DIExpression()), !dbg !13781
  call void @llvm.dbg.value(metadata i8 1, metadata !13771, metadata !DIExpression()), !dbg !13781
  call void @llvm.dbg.value(metadata i1 true, metadata !13772, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13781
  call void @llvm.dbg.value(metadata i1 true, metadata !13773, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13781
  call void @llvm.dbg.value(metadata i8 0, metadata !13774, metadata !DIExpression()), !dbg !13781
  call void @llvm.dbg.value(metadata i1 true, metadata !13775, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13781
  call void @llvm.dbg.value(metadata i1 false, metadata !13776, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13781
  call void @llvm.dbg.value(metadata i64 0, metadata !13777, metadata !DIExpression()), !dbg !13781
  call void @llvm.dbg.value(metadata i64 0, metadata !13777, metadata !DIExpression()), !dbg !13781
  %2 = mul i32 %0, 10, !dbg !13783
  ret i32 %2, !dbg !13789
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !13790 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13792, metadata !DIExpression()), !dbg !13794
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13706, metadata !DIExpression()) #23, !dbg !13795
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13797, !srcloc !13721
  call void @llvm.dbg.value(metadata i32 undef, metadata !13718, metadata !DIExpression()) #23, !dbg !13799
  call void @llvm.dbg.value(metadata i32 undef, metadata !13719, metadata !DIExpression()) #23, !dbg !13799
  call void @llvm.dbg.value(metadata i32 undef, metadata !13712, metadata !DIExpression()) #23, !dbg !13795
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !13800
  br i1 %3, label %5, label %4, !dbg !13801

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 148) #24, !dbg !13802
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !13802
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 148) #24, !dbg !13802
  unreachable, !dbg !13802

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !13797
  call void @llvm.dbg.value(metadata i32 %6, metadata !13718, metadata !DIExpression()) #23, !dbg !13799
  call void @llvm.dbg.value(metadata i32 %6, metadata !13712, metadata !DIExpression()) #23, !dbg !13795
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !13803
  call void @llvm.dbg.value(metadata i32 %6, metadata !13793, metadata !DIExpression()), !dbg !13794
  %7 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !13804
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13806
  %9 = icmp eq %struct.k_thread* %7, %8, !dbg !13807
  br i1 %9, label %10, label %14, !dbg !13808

10:                                               ; preds = %5
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !13809
  call void @llvm.dbg.value(metadata i32 undef, metadata !13740, metadata !DIExpression()) #23, !dbg !13811
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13745, metadata !DIExpression()) #23, !dbg !13811
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !13813
  br i1 %11, label %13, label %12, !dbg !13814

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.253, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 194) #24, !dbg !13815
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.254, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !13815
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 194) #24, !dbg !13815
  unreachable, !dbg !13815

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %6, metadata !13740, metadata !DIExpression()) #23, !dbg !13811
  call void @llvm.dbg.value(metadata i32 %6, metadata !13754, metadata !DIExpression()) #23, !dbg !13816
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !13818, !srcloc !13760
  br label %33, !dbg !13819

14:                                               ; preds = %5
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !13820
  %15 = tail call fastcc i32 @slice_time() #25, !dbg !13821
  %16 = icmp eq i32 %15, 0, !dbg !13821
  br i1 %16, label %27, label %17, !dbg !13823

17:                                               ; preds = %14
  %18 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %8) #25, !dbg !13824
  br i1 %18, label %19, label %27, !dbg !13825

19:                                               ; preds = %17
  %20 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13826
  %21 = icmp sgt i32 %20, %0, !dbg !13829
  br i1 %21, label %25, label %22, !dbg !13830

22:                                               ; preds = %19
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !13831
  %24 = tail call fastcc i32 @slice_expired_locked([1 x i32] %23) #25, !dbg !13831
  call void @llvm.dbg.value(metadata i32 %24, metadata !13793, metadata !DIExpression()), !dbg !13794
  br label %28, !dbg !13833

25:                                               ; preds = %19
  %26 = sub nsw i32 %20, %0, !dbg !13834
  store i32 %26, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13834
  br label %28

27:                                               ; preds = %17, %14
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13836
  br label %28

28:                                               ; preds = %22, %25, %27
  %29 = phi i32 [ %24, %22 ], [ %6, %25 ], [ %6, %27 ], !dbg !13794
  call void @llvm.dbg.value(metadata i32 %29, metadata !13793, metadata !DIExpression()), !dbg !13794
  call void @llvm.dbg.value(metadata i32 undef, metadata !13740, metadata !DIExpression()) #23, !dbg !13838
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13745, metadata !DIExpression()) #23, !dbg !13838
  %30 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !13840
  br i1 %30, label %32, label %31, !dbg !13841

31:                                               ; preds = %28
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.253, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 194) #24, !dbg !13842
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.254, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !13842
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 194) #24, !dbg !13842
  unreachable, !dbg !13842

32:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %29, metadata !13740, metadata !DIExpression()) #23, !dbg !13838
  call void @llvm.dbg.value(metadata i32 %29, metadata !13754, metadata !DIExpression()) #23, !dbg !13843
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %29) #23, !dbg !13845, !srcloc !13760
  br label %33, !dbg !13846

33:                                               ; preds = %32, %13
  ret void, !dbg !13846
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #10 !dbg !13847 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13851, metadata !DIExpression()), !dbg !13853
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #25, !dbg !13854
  %3 = icmp eq i32 %2, 0, !dbg !13854
  br i1 %3, label %16, label %4, !dbg !13855

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #25, !dbg !13856
  br i1 %5, label %16, label %6, !dbg !13857

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !13858
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !13858
  %9 = load i8, i8* %8, align 2, !dbg !13858
  %10 = sext i8 %9 to i32, !dbg !13859
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !13860
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #25, !dbg !13861
  br i1 %12, label %16, label %13, !dbg !13862

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #25, !dbg !13863
  %15 = xor i1 %14, true, !dbg !13864
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !13853
  call void @llvm.dbg.value(metadata i1 %17, metadata !13852, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13853
  ret i1 %17, !dbg !13865
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !13866 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13870, metadata !DIExpression()), !dbg !13872
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13873
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13871, metadata !DIExpression()), !dbg !13872
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #25, !dbg !13874
  br i1 %3, label %5, label %4, !dbg !13876

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #25, !dbg !13877
  br label %5, !dbg !13879

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !13870, metadata !DIExpression()), !dbg !13872
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !13880
  ret i32 %6, !dbg !13881
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !13882 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13884, metadata !DIExpression()), !dbg !13886
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13887
  %3 = load i8, i8* %2, align 1, !dbg !13887
  call void @llvm.dbg.value(metadata i8 %3, metadata !13885, metadata !DIExpression()), !dbg !13886
  %4 = and i8 %3, 31, !dbg !13888
  %5 = icmp ne i8 %4, 0, !dbg !13889
  ret i1 %5, !dbg !13890
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13891 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13893, metadata !DIExpression()), !dbg !13894
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !13895
  br i1 %2, label %3, label %7, !dbg !13897

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13898, metadata !DIExpression()) #23, !dbg !13901
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13904
  %5 = load i8, i8* %4, align 1, !dbg !13905
  %6 = and i8 %5, 127, !dbg !13905
  store i8 %6, i8* %4, align 1, !dbg !13905
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13906, metadata !DIExpression()) #23, !dbg !13909
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !13913
  br label %7, !dbg !13914

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13915, metadata !DIExpression()) #23, !dbg !13918
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13920
  %9 = load i8, i8* %8, align 1, !dbg !13921
  %10 = or i8 %9, -128, !dbg !13921
  store i8 %10, i8* %8, align 1, !dbg !13921
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13922, metadata !DIExpression()) #23, !dbg !13925
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13929, metadata !DIExpression()) #23, !dbg !13937
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13935, metadata !DIExpression()) #23, !dbg !13937
  %11 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #24, !dbg !13939
  br i1 %11, label %12, label %13, !dbg !13942

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.255, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.256, i32 0, i32 0), i32 noundef 186) #24, !dbg !13943
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.256, i32 0, i32 0), i32 noundef 186) #24, !dbg !13943
  unreachable, !dbg !13943

13:                                               ; preds = %7
  %14 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !13945
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !13936, metadata !DIExpression()) #23, !dbg !13937
  %15 = icmp eq %struct._dnode* %14, null, !dbg !13947
  br i1 %15, label %26, label %16, !dbg !13945

16:                                               ; preds = %13, %23
  %17 = phi %struct._dnode* [ %24, %23 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !13936, metadata !DIExpression()) #23, !dbg !13937
  %18 = bitcast %struct._dnode* %17 to %struct.k_thread*, !dbg !13949
  call void @llvm.dbg.value(metadata %struct.k_thread* %18, metadata !13936, metadata !DIExpression()) #23, !dbg !13937
  %19 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %18) #24, !dbg !13950
  %20 = icmp sgt i32 %19, 0, !dbg !13953
  br i1 %20, label %21, label %23, !dbg !13954

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13955
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %17, %struct._dnode* noundef %22) #24, !dbg !13957
  br label %28, !dbg !13958

23:                                               ; preds = %16
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %17) #24, !dbg !13947
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !13936, metadata !DIExpression()) #23, !dbg !13937
  %25 = icmp eq %struct._dnode* %24, null, !dbg !13947
  br i1 %25, label %26, label %16, !dbg !13945, !llvm.loop !13959

26:                                               ; preds = %23, %13
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13961
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %27) #24, !dbg !13962
  br label %28, !dbg !13963

28:                                               ; preds = %21, %26
  %29 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13964
  %30 = icmp eq %struct.k_thread* %29, %0, !dbg !13965
  %31 = zext i1 %30 to i32, !dbg !13965
  tail call fastcc void @update_cache(i32 noundef %31) #25, !dbg !13966
  ret void, !dbg !13967
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !13968 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13970, metadata !DIExpression()), !dbg !13971
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0, i32 noundef 128) #25, !dbg !13972
  ret i1 %2, !dbg !13973
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !13974 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !13976, metadata !DIExpression()), !dbg !13978
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13977, metadata !DIExpression()), !dbg !13978
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #25, !dbg !13979
  br i1 %3, label %4, label %5, !dbg !13982

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.255, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.256, i32 0, i32 0), i32 noundef 1139) #24, !dbg !13983
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.256, i32 0, i32 0), i32 noundef 1139) #24, !dbg !13983
  unreachable, !dbg !13983

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !13985
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %6) #25, !dbg !13986
  ret void, !dbg !13987
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #6 !dbg !13988 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13990, metadata !DIExpression()), !dbg !13991
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !13992
  ret i1 %2, !dbg !13993
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #10 !dbg !13994 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13998, metadata !DIExpression()), !dbg !13999
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #25, !dbg !14000
  br i1 %2, label %6, label %3, !dbg !14000

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14001
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14001
  br label %6, !dbg !14000

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !14000
  ret %struct._dnode* %7, !dbg !14002
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !14003 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14007, metadata !DIExpression()), !dbg !14011
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14008, metadata !DIExpression()), !dbg !14011
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14012
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14012
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14009, metadata !DIExpression()), !dbg !14011
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14013
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !14014
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14015
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !14016
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14017
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14018
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14019
  ret void, !dbg !14020
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #10 !dbg !14021 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14025, metadata !DIExpression()), !dbg !14027
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14026, metadata !DIExpression()), !dbg !14027
  %3 = icmp eq %struct._dnode* %1, null, !dbg !14028
  br i1 %3, label %6, label %4, !dbg !14029

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #25, !dbg !14030
  br label %6, !dbg !14029

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !14029
  ret %struct._dnode* %7, !dbg !14031
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !14032 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14036, metadata !DIExpression()), !dbg !14039
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14037, metadata !DIExpression()), !dbg !14039
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14040
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14040
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14038, metadata !DIExpression()), !dbg !14039
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14041
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !14042
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14043
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !14044
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14045
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14046
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14047
  ret void, !dbg !14048
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !14049 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14051, metadata !DIExpression()), !dbg !14053
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !14054
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14061, metadata !DIExpression()) #23, !dbg !14063
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14064
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !14065
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !14065
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14052, metadata !DIExpression()), !dbg !14053
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14066, metadata !DIExpression()) #23, !dbg !14072
  call void @llvm.dbg.value(metadata i32 %0, metadata !14071, metadata !DIExpression()) #23, !dbg !14072
  %6 = icmp eq i32 %0, 0, !dbg !14075
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14077
  br i1 %6, label %8, label %18, !dbg !14078

8:                                                ; preds = %1
  %9 = icmp eq %struct.k_thread* %7, null, !dbg !14079
  br i1 %9, label %10, label %11, !dbg !14082

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19.257, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.256, i32 0, i32 0), i32 noundef 137) #24, !dbg !14083
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.258, i32 0, i32 0)) #24, !dbg !14083
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.256, i32 0, i32 0), i32 noundef 137) #24, !dbg !14083
  unreachable, !dbg !14083

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef nonnull %7) #24, !dbg !14085
  br i1 %12, label %18, label %13, !dbg !14087

13:                                               ; preds = %11
  %14 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #24, !dbg !14088
  br i1 %14, label %18, label %15, !dbg !14090

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef nonnull %7) #24, !dbg !14091
  %17 = icmp eq i32 %16, 0, !dbg !14091
  br i1 %17, label %21, label %18, !dbg !14093

18:                                               ; preds = %1, %13, %11, %15
  %19 = icmp eq %struct.k_thread* %5, %7, !dbg !14094
  br i1 %19, label %21, label %20, !dbg !14097

20:                                               ; preds = %18
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !14098
  br label %21, !dbg !14100

21:                                               ; preds = %15, %18, %20
  %22 = phi %struct.k_thread* [ %5, %20 ], [ %5, %18 ], [ %7, %15 ], !dbg !14077
  store %struct.k_thread* %22, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14077
  ret void, !dbg !14101
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #10 !dbg !14102 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14106, metadata !DIExpression()), !dbg !14109
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14107, metadata !DIExpression()), !dbg !14109
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #25, !dbg !14110
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !14108, metadata !DIExpression()), !dbg !14109
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14107, metadata !DIExpression()), !dbg !14109
  ret %struct.k_thread* %3, !dbg !14111
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14112 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14114, metadata !DIExpression()), !dbg !14115
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14116
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !14117
  %4 = xor i1 %3, true, !dbg !14118
  ret i1 %4, !dbg !14119
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14120 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14122, metadata !DIExpression()), !dbg !14123
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !14124
  %3 = load i16, i16* %2, align 2, !dbg !14124
  %4 = icmp ult i16 %3, 128, !dbg !14125
  %5 = zext i1 %4 to i32, !dbg !14125
  ret i32 %5, !dbg !14126
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14127 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14133, metadata !DIExpression()), !dbg !14134
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14135
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #25, !dbg !14136
  %4 = xor i1 %3, true, !dbg !14137
  ret i1 %4, !dbg !14138
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14139 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14145, metadata !DIExpression()), !dbg !14146
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14147
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14147
  %4 = icmp ne %struct._dnode* %3, null, !dbg !14148
  ret i1 %4, !dbg !14149
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #10 !dbg !14150 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14152, metadata !DIExpression()), !dbg !14154
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14153, metadata !DIExpression()), !dbg !14154
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14155
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14155
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !14156
  br i1 %5, label %9, label %6, !dbg !14157

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14158
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !14158
  br label %9, !dbg !14157

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !14157
  ret %struct._dnode* %10, !dbg !14159
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !14160 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14164, metadata !DIExpression()), !dbg !14165
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14166
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14166
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !14167
  ret i1 %4, !dbg !14168
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #11 !dbg !14169 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14173, metadata !DIExpression()), !dbg !14176
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14177
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14177
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14174, metadata !DIExpression()), !dbg !14176
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14178
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14178
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !14175, metadata !DIExpression()), !dbg !14176
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !14179
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !14180
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !14181
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !14182
  tail call fastcc void @sys_dnode_init.259(%struct._dnode* noundef %0) #25, !dbg !14183
  ret void, !dbg !14184
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.259(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !14185 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14187, metadata !DIExpression()), !dbg !14188
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14189
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14190
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14191
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14192
  ret void, !dbg !14193
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #10 !dbg !14194 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14198, metadata !DIExpression()), !dbg !14200
  call void @llvm.dbg.value(metadata i32 %1, metadata !14199, metadata !DIExpression()), !dbg !14200
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14201
  %4 = load i8, i8* %3, align 1, !dbg !14201
  %5 = zext i8 %4 to i32, !dbg !14202
  %6 = and i32 %5, %1, !dbg !14203
  %7 = icmp ne i32 %6, 0, !dbg !14204
  ret i1 %7, !dbg !14205
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #6 !dbg !14206 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14210, metadata !DIExpression()), !dbg !14212
  call void @llvm.dbg.value(metadata i32 %1, metadata !14211, metadata !DIExpression()), !dbg !14212
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #25, !dbg !14213
  ret i1 %3, !dbg !14214
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #6 !dbg !14215 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14217, metadata !DIExpression()), !dbg !14219
  call void @llvm.dbg.value(metadata i32 %1, metadata !14218, metadata !DIExpression()), !dbg !14219
  %3 = icmp slt i32 %0, %1, !dbg !14220
  ret i1 %3, !dbg !14221
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14222 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14224, metadata !DIExpression()), !dbg !14228
  call void @llvm.dbg.value(metadata i32 0, metadata !14225, metadata !DIExpression()), !dbg !14229
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13706, metadata !DIExpression()) #23, !dbg !14230
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14232, !srcloc !13721
  call void @llvm.dbg.value(metadata i32 undef, metadata !13718, metadata !DIExpression()) #23, !dbg !14234
  call void @llvm.dbg.value(metadata i32 undef, metadata !13719, metadata !DIExpression()) #23, !dbg !14234
  call void @llvm.dbg.value(metadata i32 undef, metadata !13712, metadata !DIExpression()) #23, !dbg !14230
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14235
  br i1 %3, label %5, label %4, !dbg !14236

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 148) #24, !dbg !14237
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14237
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 148) #24, !dbg !14237
  unreachable, !dbg !14237

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13718, metadata !DIExpression()) #23, !dbg !14234
  call void @llvm.dbg.value(metadata i32 undef, metadata !13712, metadata !DIExpression()) #23, !dbg !14230
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14238
  call void @llvm.dbg.value(metadata i32 undef, metadata !14227, metadata !DIExpression()), !dbg !14229
  call void @llvm.dbg.value(metadata i32 undef, metadata !14225, metadata !DIExpression()), !dbg !14229
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #25, !dbg !14239
  call void @llvm.dbg.value(metadata i32 undef, metadata !13740, metadata !DIExpression()) #23, !dbg !14244
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13745, metadata !DIExpression()) #23, !dbg !14244
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14246
  br i1 %6, label %8, label %7, !dbg !14247

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.253, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 194) #24, !dbg !14248
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.254, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14248
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 194) #24, !dbg !14248
  unreachable, !dbg !14248

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14232
  call void @llvm.dbg.value(metadata i32 %9, metadata !13718, metadata !DIExpression()) #23, !dbg !14234
  call void @llvm.dbg.value(metadata i32 %9, metadata !13712, metadata !DIExpression()) #23, !dbg !14230
  call void @llvm.dbg.value(metadata i32 %9, metadata !14227, metadata !DIExpression()), !dbg !14229
  call void @llvm.dbg.value(metadata i32 undef, metadata !13740, metadata !DIExpression()) #23, !dbg !14244
  call void @llvm.dbg.value(metadata i32 undef, metadata !13754, metadata !DIExpression()) #23, !dbg !14249
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !14251, !srcloc !13760
  call void @llvm.dbg.value(metadata i32 1, metadata !14225, metadata !DIExpression()), !dbg !14229
  call void @llvm.dbg.value(metadata i32 undef, metadata !14225, metadata !DIExpression()), !dbg !14229
  ret void, !dbg !14252
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14253 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14255, metadata !DIExpression()), !dbg !14256
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !14257
  br i1 %2, label %27, label %3, !dbg !14259

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #25, !dbg !14260
  br i1 %4, label %5, label %27, !dbg !14261

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13915, metadata !DIExpression()) #23, !dbg !14262
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14265
  %7 = load i8, i8* %6, align 1, !dbg !14266
  %8 = or i8 %7, -128, !dbg !14266
  store i8 %8, i8* %6, align 1, !dbg !14266
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13922, metadata !DIExpression()) #23, !dbg !14267
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13929, metadata !DIExpression()) #23, !dbg !14269
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13935, metadata !DIExpression()) #23, !dbg !14269
  %9 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #24, !dbg !14271
  br i1 %9, label %10, label %11, !dbg !14272

10:                                               ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.255, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.256, i32 0, i32 0), i32 noundef 186) #24, !dbg !14273
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.256, i32 0, i32 0), i32 noundef 186) #24, !dbg !14273
  unreachable, !dbg !14273

11:                                               ; preds = %5
  %12 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !14274
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !13936, metadata !DIExpression()) #23, !dbg !14269
  %13 = icmp eq %struct._dnode* %12, null, !dbg !14275
  br i1 %13, label %24, label %14, !dbg !14274

14:                                               ; preds = %11, %21
  %15 = phi %struct._dnode* [ %22, %21 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !13936, metadata !DIExpression()) #23, !dbg !14269
  %16 = bitcast %struct._dnode* %15 to %struct.k_thread*, !dbg !14276
  call void @llvm.dbg.value(metadata %struct.k_thread* %16, metadata !13936, metadata !DIExpression()) #23, !dbg !14269
  %17 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %16) #24, !dbg !14277
  %18 = icmp sgt i32 %17, 0, !dbg !14278
  br i1 %18, label %19, label %21, !dbg !14279

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14280
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %15, %struct._dnode* noundef %20) #24, !dbg !14281
  br label %26, !dbg !14282

21:                                               ; preds = %14
  %22 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %15) #24, !dbg !14275
  call void @llvm.dbg.value(metadata %struct._dnode* %22, metadata !13936, metadata !DIExpression()) #23, !dbg !14269
  %23 = icmp eq %struct._dnode* %22, null, !dbg !14275
  br i1 %23, label %24, label %14, !dbg !14274, !llvm.loop !14283

24:                                               ; preds = %21, %11
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14285
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %25) #24, !dbg !14286
  br label %26, !dbg !14287

26:                                               ; preds = %19, %24
  tail call fastcc void @update_cache(i32 noundef 0) #25, !dbg !14288
  br label %27, !dbg !14289

27:                                               ; preds = %26, %3, %1
  ret void, !dbg !14290
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14291 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14293, metadata !DIExpression()), !dbg !14294
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #25, !dbg !14295
  br i1 %2, label %6, label %3, !dbg !14296

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #25, !dbg !14297
  %5 = xor i1 %4, true, !dbg !14296
  br label %6, !dbg !14296

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !14298
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14299 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14301, metadata !DIExpression()), !dbg !14305
  call void @llvm.dbg.value(metadata i32 0, metadata !14302, metadata !DIExpression()), !dbg !14306
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13706, metadata !DIExpression()) #23, !dbg !14307
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14309, !srcloc !13721
  call void @llvm.dbg.value(metadata i32 undef, metadata !13718, metadata !DIExpression()) #23, !dbg !14311
  call void @llvm.dbg.value(metadata i32 undef, metadata !13719, metadata !DIExpression()) #23, !dbg !14311
  call void @llvm.dbg.value(metadata i32 undef, metadata !13712, metadata !DIExpression()) #23, !dbg !14307
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14312
  br i1 %3, label %5, label %4, !dbg !14313

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 148) #24, !dbg !14314
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14314
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 148) #24, !dbg !14314
  unreachable, !dbg !14314

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13718, metadata !DIExpression()) #23, !dbg !14311
  call void @llvm.dbg.value(metadata i32 undef, metadata !13712, metadata !DIExpression()) #23, !dbg !14307
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14315
  call void @llvm.dbg.value(metadata i32 undef, metadata !14304, metadata !DIExpression()), !dbg !14306
  call void @llvm.dbg.value(metadata i32 undef, metadata !14302, metadata !DIExpression()), !dbg !14306
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #25, !dbg !14316
  call void @llvm.dbg.value(metadata i32 undef, metadata !13740, metadata !DIExpression()) #23, !dbg !14319
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13745, metadata !DIExpression()) #23, !dbg !14319
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14321
  br i1 %6, label %8, label %7, !dbg !14322

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.253, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 194) #24, !dbg !14323
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.254, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14323
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 194) #24, !dbg !14323
  unreachable, !dbg !14323

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14309
  call void @llvm.dbg.value(metadata i32 %9, metadata !13718, metadata !DIExpression()) #23, !dbg !14311
  call void @llvm.dbg.value(metadata i32 %9, metadata !13712, metadata !DIExpression()) #23, !dbg !14307
  call void @llvm.dbg.value(metadata i32 %9, metadata !14304, metadata !DIExpression()), !dbg !14306
  call void @llvm.dbg.value(metadata i32 undef, metadata !13740, metadata !DIExpression()) #23, !dbg !14319
  call void @llvm.dbg.value(metadata i32 undef, metadata !13754, metadata !DIExpression()) #23, !dbg !14324
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !14326, !srcloc !13760
  call void @llvm.dbg.value(metadata i32 1, metadata !14302, metadata !DIExpression()), !dbg !14306
  call void @llvm.dbg.value(metadata i32 undef, metadata !14302, metadata !DIExpression()), !dbg !14306
  ret void, !dbg !14327
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14328 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14330, metadata !DIExpression()), !dbg !14332
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13706, metadata !DIExpression()) #23, !dbg !14333
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14335, !srcloc !13721
  call void @llvm.dbg.value(metadata i32 undef, metadata !13718, metadata !DIExpression()) #23, !dbg !14337
  call void @llvm.dbg.value(metadata i32 undef, metadata !13719, metadata !DIExpression()) #23, !dbg !14337
  call void @llvm.dbg.value(metadata i32 undef, metadata !13712, metadata !DIExpression()) #23, !dbg !14333
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14338
  br i1 %3, label %5, label %4, !dbg !14339

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 148) #24, !dbg !14340
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14340
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 148) #24, !dbg !14340
  unreachable, !dbg !14340

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14335
  call void @llvm.dbg.value(metadata i32 %6, metadata !13718, metadata !DIExpression()) #23, !dbg !14337
  call void @llvm.dbg.value(metadata i32 %6, metadata !13712, metadata !DIExpression()) #23, !dbg !14333
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14341
  call void @llvm.dbg.value(metadata i32 %6, metadata !14331, metadata !DIExpression()), !dbg !14332
  %7 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #25, !dbg !14342
  br i1 %7, label %8, label %12, !dbg !14344

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !13740, metadata !DIExpression()) #23, !dbg !14345
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13745, metadata !DIExpression()) #23, !dbg !14345
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14348
  br i1 %9, label %11, label %10, !dbg !14349

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.253, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 194) #24, !dbg !14350
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.254, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14350
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 194) #24, !dbg !14350
  unreachable, !dbg !14350

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !13740, metadata !DIExpression()) #23, !dbg !14345
  call void @llvm.dbg.value(metadata i32 %6, metadata !13754, metadata !DIExpression()) #23, !dbg !14351
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !14353, !srcloc !13760
  br label %14, !dbg !14354

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_started.264(%struct.k_thread* noundef %0) #25, !dbg !14355
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #25, !dbg !14356
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14357
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #25, !dbg !14357
  br label %14, !dbg !14358

14:                                               ; preds = %12, %11
  ret void, !dbg !14358
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14359 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14361, metadata !DIExpression()), !dbg !14362
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14363
  %3 = load i8, i8* %2, align 1, !dbg !14363
  %4 = and i8 %3, 4, !dbg !14364
  %5 = icmp eq i8 %4, 0, !dbg !14365
  ret i1 %5, !dbg !14366
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.264(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !14367 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14369, metadata !DIExpression()), !dbg !14370
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14371
  %3 = load i8, i8* %2, align 1, !dbg !14372
  %4 = and i8 %3, -5, !dbg !14372
  store i8 %4, i8* %2, align 1, !dbg !14372
  ret void, !dbg !14373
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !14374 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !14377, metadata !DIExpression()), !dbg !14378
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14376, metadata !DIExpression()), !dbg !14378
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #25, !dbg !14379
  br i1 %4, label %5, label %12, !dbg !14381

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #25, !dbg !14382
  br i1 %6, label %7, label %12, !dbg !14383

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14384, metadata !DIExpression()) #23, !dbg !14390
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14389, metadata !DIExpression()) #23, !dbg !14390
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14393, metadata !DIExpression()) #23, !dbg !14398
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #24, !dbg !14400
  br i1 %8, label %10, label %9, !dbg !14403

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.253, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 225) #24, !dbg !14404
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.254, i32 0, i32 0), %struct.k_spinlock* noundef %0) #24, !dbg !14404
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 225) #24, !dbg !14404
  unreachable, !dbg !14404

10:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 %3, metadata !14384, metadata !DIExpression()) #23, !dbg !14390
  %11 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #24, !dbg !14406
  br label %16, !dbg !14407

12:                                               ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !13740, metadata !DIExpression()) #23, !dbg !14408
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13745, metadata !DIExpression()) #23, !dbg !14408
  %13 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #24, !dbg !14411
  br i1 %13, label %15, label %14, !dbg !14412

14:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.253, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 194) #24, !dbg !14413
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.254, i32 0, i32 0), %struct.k_spinlock* noundef %0) #24, !dbg !14413
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 194) #24, !dbg !14413
  unreachable, !dbg !14413

15:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 %3, metadata !13740, metadata !DIExpression()) #23, !dbg !14408
  call void @llvm.dbg.value(metadata i32 %3, metadata !13754, metadata !DIExpression()) #23, !dbg !14414
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !14416, !srcloc !13760
  br label %16

16:                                               ; preds = %15, %10
  ret void, !dbg !14417
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !14418 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14422, metadata !DIExpression()), !dbg !14423
  call void @llvm.dbg.value(metadata i32 %0, metadata !14424, metadata !DIExpression()), !dbg !14429
  %2 = icmp eq i32 %0, 0, !dbg !14431
  br i1 %2, label %3, label %6, !dbg !14432

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !14433, !srcloc !14440
  call void @llvm.dbg.value(metadata i32 %4, metadata !14436, metadata !DIExpression()) #23, !dbg !14441
  %5 = icmp eq i32 %4, 0, !dbg !14442
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !14423
  ret i1 %7, !dbg !14443
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #10 !dbg !14444 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14447
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14446, metadata !DIExpression()), !dbg !14448
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14449
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !14450
  ret i1 %3, !dbg !14451
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !14452 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14454, metadata !DIExpression()), !dbg !14456
  %2 = tail call i32 @arch_swap(i32 noundef %0) #24, !dbg !14457
  call void @llvm.dbg.value(metadata i32 %2, metadata !14455, metadata !DIExpression()), !dbg !14456
  ret i32 %2, !dbg !14458
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14459 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14461, metadata !DIExpression()), !dbg !14465
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #25, !dbg !14466
  call void @llvm.dbg.value(metadata i32 0, metadata !14462, metadata !DIExpression()), !dbg !14467
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13706, metadata !DIExpression()) #23, !dbg !14468
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14470, !srcloc !13721
  call void @llvm.dbg.value(metadata i32 undef, metadata !13718, metadata !DIExpression()) #23, !dbg !14472
  call void @llvm.dbg.value(metadata i32 undef, metadata !13719, metadata !DIExpression()) #23, !dbg !14472
  call void @llvm.dbg.value(metadata i32 undef, metadata !13712, metadata !DIExpression()) #23, !dbg !14468
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14473
  br i1 %4, label %6, label %5, !dbg !14474

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 148) #24, !dbg !14475
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14475
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 148) #24, !dbg !14475
  unreachable, !dbg !14475

6:                                                ; preds = %1
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !14470
  call void @llvm.dbg.value(metadata i32 %7, metadata !13718, metadata !DIExpression()) #23, !dbg !14472
  call void @llvm.dbg.value(metadata i32 %7, metadata !13712, metadata !DIExpression()) #23, !dbg !14468
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14476
  call void @llvm.dbg.value(metadata i32 %7, metadata !14464, metadata !DIExpression()), !dbg !14467
  call void @llvm.dbg.value(metadata i32 undef, metadata !14462, metadata !DIExpression()), !dbg !14467
  %8 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !14477
  br i1 %8, label %9, label %13, !dbg !14481

9:                                                ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13898, metadata !DIExpression()) #23, !dbg !14482
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14485
  %11 = load i8, i8* %10, align 1, !dbg !14486
  %12 = and i8 %11, 127, !dbg !14486
  store i8 %12, i8* %10, align 1, !dbg !14486
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13906, metadata !DIExpression()) #23, !dbg !14487
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !14489
  br label %13, !dbg !14490

13:                                               ; preds = %9, %6
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #25, !dbg !14491
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14492
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !14493
  %16 = zext i1 %15 to i32, !dbg !14493
  tail call fastcc void @update_cache(i32 noundef %16) #25, !dbg !14494
  call void @llvm.dbg.value(metadata i32 undef, metadata !13740, metadata !DIExpression()) #23, !dbg !14495
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13745, metadata !DIExpression()) #23, !dbg !14495
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14497
  br i1 %17, label %19, label %18, !dbg !14498

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.253, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 194) #24, !dbg !14499
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.254, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14499
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 194) #24, !dbg !14499
  unreachable, !dbg !14499

19:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %7, metadata !13740, metadata !DIExpression()) #23, !dbg !14495
  call void @llvm.dbg.value(metadata i32 %7, metadata !13754, metadata !DIExpression()) #23, !dbg !14500
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !14502, !srcloc !13760
  call void @llvm.dbg.value(metadata i32 1, metadata !14462, metadata !DIExpression()), !dbg !14467
  call void @llvm.dbg.value(metadata i32 undef, metadata !14462, metadata !DIExpression()), !dbg !14467
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14503
  %21 = icmp eq %struct.k_thread* %20, %0, !dbg !14505
  br i1 %21, label %22, label %23, !dbg !14506

22:                                               ; preds = %19
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !14507
  br label %23, !dbg !14509

23:                                               ; preds = %22, %19
  ret void, !dbg !14510
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14511 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14513, metadata !DIExpression()), !dbg !14514
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14515
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !14516
  ret i32 %3, !dbg !14517
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !14518 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14520, metadata !DIExpression()), !dbg !14521
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14522
  %3 = load i8, i8* %2, align 1, !dbg !14523
  %4 = or i8 %3, 16, !dbg !14523
  store i8 %4, i8* %2, align 1, !dbg !14523
  ret void, !dbg !14524
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !14525 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14526, !srcloc !13721
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14526
  call void @llvm.dbg.value(metadata i32 %2, metadata !13718, metadata !DIExpression()) #23, !dbg !14528
  call void @llvm.dbg.value(metadata i32 undef, metadata !13719, metadata !DIExpression()) #23, !dbg !14528
  tail call void @z_reschedule_irqlock(i32 noundef %2) #25, !dbg !14529
  ret void, !dbg !14530
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !14531 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14533, metadata !DIExpression()), !dbg !14534
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #25, !dbg !14535
  br i1 %2, label %3, label %5, !dbg !14537

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #25, !dbg !14538
  br label %6, !dbg !14540

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !13754, metadata !DIExpression()) #23, !dbg !14541
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #23, !dbg !14544, !srcloc !13760
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !14545
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14546 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14548, metadata !DIExpression()), !dbg !14550
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13706, metadata !DIExpression()) #23, !dbg !14551
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14553, !srcloc !13721
  call void @llvm.dbg.value(metadata i32 undef, metadata !13718, metadata !DIExpression()) #23, !dbg !14555
  call void @llvm.dbg.value(metadata i32 undef, metadata !13719, metadata !DIExpression()) #23, !dbg !14555
  call void @llvm.dbg.value(metadata i32 undef, metadata !13712, metadata !DIExpression()) #23, !dbg !14551
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14556
  br i1 %3, label %5, label %4, !dbg !14557

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 148) #24, !dbg !14558
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14558
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 148) #24, !dbg !14558
  unreachable, !dbg !14558

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14553
  call void @llvm.dbg.value(metadata i32 %6, metadata !13718, metadata !DIExpression()) #23, !dbg !14555
  call void @llvm.dbg.value(metadata i32 %6, metadata !13712, metadata !DIExpression()) #23, !dbg !14551
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14559
  call void @llvm.dbg.value(metadata i32 %6, metadata !14549, metadata !DIExpression()), !dbg !14550
  %7 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #25, !dbg !14560
  br i1 %7, label %12, label %8, !dbg !14562

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !13740, metadata !DIExpression()) #23, !dbg !14563
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13745, metadata !DIExpression()) #23, !dbg !14563
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14566
  br i1 %9, label %11, label %10, !dbg !14567

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.253, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 194) #24, !dbg !14568
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.254, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14568
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 194) #24, !dbg !14568
  unreachable, !dbg !14568

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !13740, metadata !DIExpression()) #23, !dbg !14563
  call void @llvm.dbg.value(metadata i32 %6, metadata !13754, metadata !DIExpression()) #23, !dbg !14569
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !14571, !srcloc !13760
  br label %14, !dbg !14572

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #25, !dbg !14573
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #25, !dbg !14574
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14575
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #25, !dbg !14575
  br label %14, !dbg !14576

14:                                               ; preds = %12, %11
  ret void, !dbg !14576
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14577 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14579, metadata !DIExpression()), !dbg !14580
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14581
  %3 = load i8, i8* %2, align 1, !dbg !14581
  %4 = and i8 %3, 16, !dbg !14582
  %5 = icmp ne i8 %4, 0, !dbg !14583
  ret i1 %5, !dbg !14584
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !14585 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14587, metadata !DIExpression()), !dbg !14588
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14589
  %3 = load i8, i8* %2, align 1, !dbg !14590
  %4 = and i8 %3, -17, !dbg !14590
  store i8 %4, i8* %2, align 1, !dbg !14590
  ret void, !dbg !14591
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14592 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14602, metadata !DIExpression()), !dbg !14606
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14600, metadata !DIExpression()), !dbg !14606
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !14601, metadata !DIExpression()), !dbg !14606
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14607
  %5 = icmp eq %struct.k_thread* %4, %0, !dbg !14607
  br i1 %5, label %9, label %6, !dbg !14607

6:                                                ; preds = %3
  %7 = tail call fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* noundef %0) #25, !dbg !14607
  br i1 %7, label %9, label %8, !dbg !14610

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.256, i32 0, i32 0), i32 noundef 773) #24, !dbg !14611
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.256, i32 0, i32 0), i32 noundef 773) #24, !dbg !14611
  unreachable, !dbg !14611

9:                                                ; preds = %3, %6
  call void @llvm.dbg.value(metadata i32 0, metadata !14603, metadata !DIExpression()), !dbg !14613
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13706, metadata !DIExpression()) #23, !dbg !14614
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14616, !srcloc !13721
  call void @llvm.dbg.value(metadata i32 undef, metadata !13718, metadata !DIExpression()) #23, !dbg !14618
  call void @llvm.dbg.value(metadata i32 undef, metadata !13719, metadata !DIExpression()) #23, !dbg !14618
  call void @llvm.dbg.value(metadata i32 undef, metadata !13712, metadata !DIExpression()) #23, !dbg !14614
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14619
  br i1 %11, label %13, label %12, !dbg !14620

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 148) #24, !dbg !14621
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14621
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 148) #24, !dbg !14621
  unreachable, !dbg !14621

13:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !13718, metadata !DIExpression()) #23, !dbg !14618
  call void @llvm.dbg.value(metadata i32 undef, metadata !13712, metadata !DIExpression()) #23, !dbg !14614
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14622
  call void @llvm.dbg.value(metadata i32 undef, metadata !14605, metadata !DIExpression()), !dbg !14613
  call void @llvm.dbg.value(metadata i32 undef, metadata !14603, metadata !DIExpression()), !dbg !14613
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #25, !dbg !14623
  call void @llvm.dbg.value(metadata i32 undef, metadata !13740, metadata !DIExpression()) #23, !dbg !14626
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13745, metadata !DIExpression()) #23, !dbg !14626
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14628
  br i1 %14, label %16, label %15, !dbg !14629

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.253, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 194) #24, !dbg !14630
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.254, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14630
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 194) #24, !dbg !14630
  unreachable, !dbg !14630

16:                                               ; preds = %13
  %17 = extractvalue { i32, i32 } %10, 0, !dbg !14616
  call void @llvm.dbg.value(metadata i32 %17, metadata !13718, metadata !DIExpression()) #23, !dbg !14618
  call void @llvm.dbg.value(metadata i32 %17, metadata !13712, metadata !DIExpression()) #23, !dbg !14614
  call void @llvm.dbg.value(metadata i32 %17, metadata !14605, metadata !DIExpression()), !dbg !14613
  call void @llvm.dbg.value(metadata i32 undef, metadata !13740, metadata !DIExpression()) #23, !dbg !14626
  call void @llvm.dbg.value(metadata i32 undef, metadata !13754, metadata !DIExpression()) #23, !dbg !14631
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %17) #23, !dbg !14633, !srcloc !13760
  call void @llvm.dbg.value(metadata i32 1, metadata !14603, metadata !DIExpression()), !dbg !14613
  call void @llvm.dbg.value(metadata i32 undef, metadata !14603, metadata !DIExpression()), !dbg !14613
  ret void, !dbg !14634
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14635 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14637, metadata !DIExpression()), !dbg !14638
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14639
  %3 = load i8, i8* %2, align 1, !dbg !14639
  %4 = and i8 %3, 1, !dbg !14640
  %5 = icmp ne i8 %4, 0, !dbg !14641
  ret i1 %5, !dbg !14642
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !14643 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14647, metadata !DIExpression()), !dbg !14648
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14645, metadata !DIExpression()), !dbg !14648
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !14646, metadata !DIExpression()), !dbg !14648
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #25, !dbg !14649
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #25, !dbg !14650
  ret void, !dbg !14651
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !14652 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14656, metadata !DIExpression()), !dbg !14658
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !14657, metadata !DIExpression()), !dbg !14658
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #25, !dbg !14659
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #25, !dbg !14660
  %3 = icmp eq %union.anon* %1, null, !dbg !14661
  br i1 %3, label %24, label %4, !dbg !14663

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14664
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !14666
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !14667
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !13929, metadata !DIExpression()) #23, !dbg !14668
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13935, metadata !DIExpression()) #23, !dbg !14668
  %7 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #24, !dbg !14670
  br i1 %7, label %8, label %9, !dbg !14671

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.255, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.256, i32 0, i32 0), i32 noundef 186) #24, !dbg !14672
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.256, i32 0, i32 0), i32 noundef 186) #24, !dbg !14672
  unreachable, !dbg !14672

9:                                                ; preds = %4
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #24, !dbg !14673
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !13936, metadata !DIExpression()) #23, !dbg !14668
  %11 = icmp eq %struct._dnode* %10, null, !dbg !14674
  br i1 %11, label %22, label %12, !dbg !14673

12:                                               ; preds = %9, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !13936, metadata !DIExpression()) #23, !dbg !14668
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !14675
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !13936, metadata !DIExpression()) #23, !dbg !14668
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %14) #24, !dbg !14676
  %16 = icmp sgt i32 %15, 0, !dbg !14677
  br i1 %16, label %17, label %19, !dbg !14678

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14679
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #24, !dbg !14680
  br label %24, !dbg !14681

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %13) #24, !dbg !14674
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !13936, metadata !DIExpression()) #23, !dbg !14668
  %21 = icmp eq %struct._dnode* %20, null, !dbg !14674
  br i1 %21, label %22, label %12, !dbg !14673, !llvm.loop !14682

22:                                               ; preds = %19, %9
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14684
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %23) #24, !dbg !14685
  br label %24, !dbg !14686

24:                                               ; preds = %22, %17, %2
  ret void, !dbg !14687
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14688 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !14693, metadata !DIExpression()), !dbg !14694
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14692, metadata !DIExpression()), !dbg !14694
  %4 = icmp eq i64 %3, -1, !dbg !14695
  br i1 %4, label %6, label %5, !dbg !14697

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.266(%struct.k_thread* noundef %0, [1 x i64] %1) #25, !dbg !14698
  br label %6, !dbg !14700

6:                                                ; preds = %5, %2
  ret void, !dbg !14701
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.266(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14702 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14705, metadata !DIExpression()), !dbg !14706
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14704, metadata !DIExpression()), !dbg !14706
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14707
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #24, !dbg !14708
  ret void, !dbg !14709
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !14710 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14712, metadata !DIExpression()), !dbg !14720
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !14721
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !14721
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14713, metadata !DIExpression()), !dbg !14720
  call void @llvm.dbg.value(metadata i32 0, metadata !14714, metadata !DIExpression()), !dbg !14722
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13706, metadata !DIExpression()) #23, !dbg !14723
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14725, !srcloc !13721
  call void @llvm.dbg.value(metadata i32 undef, metadata !13718, metadata !DIExpression()) #23, !dbg !14727
  call void @llvm.dbg.value(metadata i32 undef, metadata !13719, metadata !DIExpression()) #23, !dbg !14727
  call void @llvm.dbg.value(metadata i32 undef, metadata !13712, metadata !DIExpression()) #23, !dbg !14723
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14728
  br i1 %5, label %7, label %6, !dbg !14729

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 148) #24, !dbg !14730
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14730
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 148) #24, !dbg !14730
  unreachable, !dbg !14730

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13718, metadata !DIExpression()) #23, !dbg !14727
  call void @llvm.dbg.value(metadata i32 undef, metadata !13712, metadata !DIExpression()) #23, !dbg !14723
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14731
  call void @llvm.dbg.value(metadata i32 undef, metadata !14716, metadata !DIExpression()), !dbg !14722
  call void @llvm.dbg.value(metadata i32 undef, metadata !14714, metadata !DIExpression()), !dbg !14722
  %8 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !14732
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %8, i32 0, i32 3, !dbg !14733
  %10 = load i8, i8* %9, align 1, !dbg !14733
  %11 = and i8 %10, 40, !dbg !14734
  %12 = icmp eq i8 %11, 0, !dbg !14734
  call void @llvm.dbg.value(metadata i1 %12, metadata !14717, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14735
  br i1 %12, label %13, label %20, !dbg !14736

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !14737
  %15 = bitcast void (%struct._timeout*)** %14 to %union.anon**, !dbg !14737
  %16 = load %union.anon*, %union.anon** %15, align 8, !dbg !14737
  %17 = icmp eq %union.anon* %16, null, !dbg !14741
  br i1 %17, label %19, label %18, !dbg !14742

18:                                               ; preds = %13
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #25, !dbg !14743
  br label %19, !dbg !14745

19:                                               ; preds = %18, %13
  tail call fastcc void @z_mark_thread_as_started.264(%struct.k_thread* noundef nonnull %3) #25, !dbg !14746
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #25, !dbg !14747
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #25, !dbg !14748
  br label %20, !dbg !14749

20:                                               ; preds = %19, %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !13740, metadata !DIExpression()) #23, !dbg !14750
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13745, metadata !DIExpression()) #23, !dbg !14750
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14752
  br i1 %21, label %23, label %22, !dbg !14753

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.253, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 194) #24, !dbg !14754
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.254, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14754
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 194) #24, !dbg !14754
  unreachable, !dbg !14754

23:                                               ; preds = %20
  %24 = extractvalue { i32, i32 } %4, 0, !dbg !14725
  call void @llvm.dbg.value(metadata i32 %24, metadata !13718, metadata !DIExpression()) #23, !dbg !14727
  call void @llvm.dbg.value(metadata i32 %24, metadata !13712, metadata !DIExpression()) #23, !dbg !14723
  call void @llvm.dbg.value(metadata i32 %24, metadata !14716, metadata !DIExpression()), !dbg !14722
  call void @llvm.dbg.value(metadata i32 undef, metadata !13740, metadata !DIExpression()) #23, !dbg !14750
  call void @llvm.dbg.value(metadata i32 undef, metadata !13754, metadata !DIExpression()) #23, !dbg !14755
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !14757, !srcloc !13760
  call void @llvm.dbg.value(metadata i32 1, metadata !14714, metadata !DIExpression()), !dbg !14722
  call void @llvm.dbg.value(metadata i32 undef, metadata !14714, metadata !DIExpression()), !dbg !14722
  ret void, !dbg !14758
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14759 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14761, metadata !DIExpression()), !dbg !14762
  %2 = tail call fastcc %union.anon* @pended_on_thread(%struct.k_thread* noundef %0) #25, !dbg !14763
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !14764
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #25, !dbg !14765
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14766
  store %union.anon* null, %union.anon** %3, align 8, !dbg !14767
  ret void, !dbg !14768
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %union.anon* @pended_on_thread(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #1 !dbg !14769 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14773, metadata !DIExpression()), !dbg !14774
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14775
  %3 = load %union.anon*, %union.anon** %2, align 8, !dbg !14775
  %4 = icmp eq %union.anon* %3, null, !dbg !14775
  br i1 %4, label %5, label %6, !dbg !14778

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.256, i32 0, i32 0), i32 noundef 726) #24, !dbg !14779
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.256, i32 0, i32 0), i32 noundef 726) #24, !dbg !14779
  unreachable, !dbg !14779

6:                                                ; preds = %1
  ret %union.anon* %3, !dbg !14781
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !14782 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14784, metadata !DIExpression()), !dbg !14785
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14786
  %3 = load i8, i8* %2, align 1, !dbg !14787
  %4 = and i8 %3, -3, !dbg !14787
  store i8 %4, i8* %2, align 1, !dbg !14787
  ret void, !dbg !14788
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14789 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14791, metadata !DIExpression()), !dbg !14792
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !14793
  br i1 %2, label %3, label %7, !dbg !14795

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13898, metadata !DIExpression()) #23, !dbg !14796
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14799
  %5 = load i8, i8* %4, align 1, !dbg !14800
  %6 = and i8 %5, 127, !dbg !14800
  store i8 %6, i8* %4, align 1, !dbg !14800
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13906, metadata !DIExpression()) #23, !dbg !14801
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !14803
  br label %7, !dbg !14804

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14805
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !14806
  %10 = zext i1 %9 to i32, !dbg !14806
  tail call fastcc void @update_cache(i32 noundef %10) #25, !dbg !14807
  ret void, !dbg !14808
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !14809 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14811, metadata !DIExpression()), !dbg !14812
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14813
  %3 = load i8, i8* %2, align 1, !dbg !14814
  %4 = or i8 %3, 2, !dbg !14814
  store i8 %4, i8* %2, align 1, !dbg !14814
  ret void, !dbg !14815
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* noundef %0) local_unnamed_addr #22 !dbg !14816 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14818, metadata !DIExpression()), !dbg !14822
  call void @llvm.dbg.value(metadata i32 0, metadata !14819, metadata !DIExpression()), !dbg !14823
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13706, metadata !DIExpression()) #23, !dbg !14824
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14826, !srcloc !13721
  call void @llvm.dbg.value(metadata i32 undef, metadata !13718, metadata !DIExpression()) #23, !dbg !14828
  call void @llvm.dbg.value(metadata i32 undef, metadata !13719, metadata !DIExpression()) #23, !dbg !14828
  call void @llvm.dbg.value(metadata i32 undef, metadata !13712, metadata !DIExpression()) #23, !dbg !14824
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14829
  br i1 %3, label %5, label %4, !dbg !14830

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 148) #24, !dbg !14831
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14831
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 148) #24, !dbg !14831
  unreachable, !dbg !14831

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13718, metadata !DIExpression()) #23, !dbg !14828
  call void @llvm.dbg.value(metadata i32 undef, metadata !13712, metadata !DIExpression()) #23, !dbg !14824
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14832
  call void @llvm.dbg.value(metadata i32 undef, metadata !14821, metadata !DIExpression()), !dbg !14823
  call void @llvm.dbg.value(metadata i32 undef, metadata !14819, metadata !DIExpression()), !dbg !14823
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !14833
  call void @llvm.dbg.value(metadata i32 undef, metadata !13740, metadata !DIExpression()) #23, !dbg !14836
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13745, metadata !DIExpression()) #23, !dbg !14836
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14838
  br i1 %6, label %8, label %7, !dbg !14839

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.253, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 194) #24, !dbg !14840
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.254, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14840
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 194) #24, !dbg !14840
  unreachable, !dbg !14840

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14826
  call void @llvm.dbg.value(metadata i32 %9, metadata !13718, metadata !DIExpression()) #23, !dbg !14828
  call void @llvm.dbg.value(metadata i32 %9, metadata !13712, metadata !DIExpression()) #23, !dbg !14824
  call void @llvm.dbg.value(metadata i32 %9, metadata !14821, metadata !DIExpression()), !dbg !14823
  call void @llvm.dbg.value(metadata i32 undef, metadata !13740, metadata !DIExpression()) #23, !dbg !14836
  call void @llvm.dbg.value(metadata i32 undef, metadata !13754, metadata !DIExpression()) #23, !dbg !14841
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !14843, !srcloc !13760
  call void @llvm.dbg.value(metadata i32 1, metadata !14819, metadata !DIExpression()), !dbg !14823
  call void @llvm.dbg.value(metadata i32 undef, metadata !14819, metadata !DIExpression()), !dbg !14823
  ret void, !dbg !14844
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14845 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14851, metadata !DIExpression()), !dbg !14856
  call void @llvm.dbg.value(metadata i32 %0, metadata !14849, metadata !DIExpression()), !dbg !14856
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !14850, metadata !DIExpression()), !dbg !14856
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14857
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #25, !dbg !14858
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14859
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !14860
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #25, !dbg !14861
  call void @llvm.dbg.value(metadata i32 %6, metadata !14852, metadata !DIExpression()), !dbg !14856
  call void @llvm.dbg.value(metadata i32 0, metadata !14853, metadata !DIExpression()), !dbg !14862
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13706, metadata !DIExpression()) #23, !dbg !14863
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14865, !srcloc !13721
  call void @llvm.dbg.value(metadata i32 undef, metadata !13718, metadata !DIExpression()) #23, !dbg !14867
  call void @llvm.dbg.value(metadata i32 undef, metadata !13719, metadata !DIExpression()) #23, !dbg !14867
  call void @llvm.dbg.value(metadata i32 undef, metadata !13712, metadata !DIExpression()) #23, !dbg !14863
  %8 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14868
  br i1 %8, label %10, label %9, !dbg !14869

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 148) #24, !dbg !14870
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14870
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 148) #24, !dbg !14870
  unreachable, !dbg !14870

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !13718, metadata !DIExpression()) #23, !dbg !14867
  call void @llvm.dbg.value(metadata i32 undef, metadata !13712, metadata !DIExpression()) #23, !dbg !14863
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14871
  call void @llvm.dbg.value(metadata i32 undef, metadata !14855, metadata !DIExpression()), !dbg !14862
  call void @llvm.dbg.value(metadata i32 undef, metadata !14853, metadata !DIExpression()), !dbg !14862
  %11 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !14872
  %12 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14876
  %13 = icmp eq %struct.k_thread* %11, %12, !dbg !14877
  br i1 %13, label %14, label %15, !dbg !14878

14:                                               ; preds = %10
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !14879
  br label %15, !dbg !14881

15:                                               ; preds = %10, %14
  call void @llvm.dbg.value(metadata i32 undef, metadata !13740, metadata !DIExpression()) #23, !dbg !14882
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13745, metadata !DIExpression()) #23, !dbg !14882
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14884
  br i1 %16, label %18, label %17, !dbg !14885

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.253, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 194) #24, !dbg !14886
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.254, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14886
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 194) #24, !dbg !14886
  unreachable, !dbg !14886

18:                                               ; preds = %15
  %19 = extractvalue { i32, i32 } %7, 0, !dbg !14865
  call void @llvm.dbg.value(metadata i32 %19, metadata !13718, metadata !DIExpression()) #23, !dbg !14867
  call void @llvm.dbg.value(metadata i32 %19, metadata !13712, metadata !DIExpression()) #23, !dbg !14863
  call void @llvm.dbg.value(metadata i32 %19, metadata !14855, metadata !DIExpression()), !dbg !14862
  call void @llvm.dbg.value(metadata i32 undef, metadata !13740, metadata !DIExpression()) #23, !dbg !14882
  call void @llvm.dbg.value(metadata i32 undef, metadata !13754, metadata !DIExpression()) #23, !dbg !14887
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %19) #23, !dbg !14889, !srcloc !13760
  call void @llvm.dbg.value(metadata i32 1, metadata !14853, metadata !DIExpression()), !dbg !14862
  call void @llvm.dbg.value(metadata i32 undef, metadata !14853, metadata !DIExpression()), !dbg !14862
  ret i32 %6, !dbg !14890
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !14891 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14896, metadata !DIExpression()), !dbg !14899
  call void @llvm.dbg.value(metadata i64 undef, metadata !14898, metadata !DIExpression()), !dbg !14899
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14895, metadata !DIExpression()), !dbg !14899
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !14897, metadata !DIExpression()), !dbg !14899
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14900
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !14901
  %6 = icmp eq %struct.k_spinlock* %0, @sched_spinlock, !dbg !14902
  br i1 %6, label %7, label %8, !dbg !14905

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.256, i32 0, i32 0), i32 noundef 846) #24, !dbg !14906
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.256, i32 0, i32 0), i32 noundef 846) #24, !dbg !14906
  unreachable, !dbg !14906

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13706, metadata !DIExpression()) #23, !dbg !14908
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14910, !srcloc !13721
  call void @llvm.dbg.value(metadata i32 undef, metadata !13718, metadata !DIExpression()) #23, !dbg !14912
  call void @llvm.dbg.value(metadata i32 undef, metadata !13719, metadata !DIExpression()) #23, !dbg !14912
  call void @llvm.dbg.value(metadata i32 undef, metadata !13712, metadata !DIExpression()) #23, !dbg !14908
  %10 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14913
  br i1 %10, label %12, label %11, !dbg !14914

11:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 148) #24, !dbg !14915
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14915
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 148) #24, !dbg !14915
  unreachable, !dbg !14915

12:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 undef, metadata !13718, metadata !DIExpression()) #23, !dbg !14912
  call void @llvm.dbg.value(metadata i32 undef, metadata !13712, metadata !DIExpression()) #23, !dbg !14908
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14916
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14917
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %13, %union.anon* noundef %2, [1 x i64] %3) #25, !dbg !14918
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14393, metadata !DIExpression()) #23, !dbg !14919
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #24, !dbg !14921
  br i1 %14, label %16, label %15, !dbg !14922

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.253, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 225) #24, !dbg !14923
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.254, i32 0, i32 0), %struct.k_spinlock* noundef %0) #24, !dbg !14923
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 225) #24, !dbg !14923
  unreachable, !dbg !14923

16:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 undef, metadata !14384, metadata !DIExpression()) #23, !dbg !14924
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14389, metadata !DIExpression()) #23, !dbg !14924
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14393, metadata !DIExpression()) #23, !dbg !14926
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14928
  br i1 %17, label %19, label %18, !dbg !14929

18:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.253, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 225) #24, !dbg !14930
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.254, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14930
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 225) #24, !dbg !14930
  unreachable, !dbg !14930

19:                                               ; preds = %16
  %20 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %20, metadata !14384, metadata !DIExpression()) #23, !dbg !14924
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %20) #24, !dbg !14931
  ret i32 %21, !dbg !14932
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !14933 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14937, metadata !DIExpression()), !dbg !14942
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14938, metadata !DIExpression()), !dbg !14942
  call void @llvm.dbg.value(metadata i32 0, metadata !14939, metadata !DIExpression()), !dbg !14943
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13706, metadata !DIExpression()) #23, !dbg !14944
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14946, !srcloc !13721
  call void @llvm.dbg.value(metadata i32 undef, metadata !13718, metadata !DIExpression()) #23, !dbg !14948
  call void @llvm.dbg.value(metadata i32 undef, metadata !13719, metadata !DIExpression()) #23, !dbg !14948
  call void @llvm.dbg.value(metadata i32 undef, metadata !13712, metadata !DIExpression()) #23, !dbg !14944
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14949
  br i1 %3, label %5, label %4, !dbg !14950

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 148) #24, !dbg !14951
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14951
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 148) #24, !dbg !14951
  unreachable, !dbg !14951

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13718, metadata !DIExpression()) #23, !dbg !14948
  call void @llvm.dbg.value(metadata i32 undef, metadata !13712, metadata !DIExpression()) #23, !dbg !14944
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14952
  call void @llvm.dbg.value(metadata i32 undef, metadata !14941, metadata !DIExpression()), !dbg !14943
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14938, metadata !DIExpression()), !dbg !14942
  call void @llvm.dbg.value(metadata i32 undef, metadata !14939, metadata !DIExpression()), !dbg !14943
  %6 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #25, !dbg !14953
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !14938, metadata !DIExpression()), !dbg !14942
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !14956
  br i1 %8, label %10, label %9, !dbg !14958

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #25, !dbg !14959
  br label %10, !dbg !14961

10:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !13740, metadata !DIExpression()) #23, !dbg !14962
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13745, metadata !DIExpression()) #23, !dbg !14962
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14964
  br i1 %11, label %13, label %12, !dbg !14965

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.253, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 194) #24, !dbg !14966
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.254, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14966
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 194) #24, !dbg !14966
  unreachable, !dbg !14966

13:                                               ; preds = %10
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !14946
  call void @llvm.dbg.value(metadata i32 %14, metadata !13718, metadata !DIExpression()) #23, !dbg !14948
  call void @llvm.dbg.value(metadata i32 %14, metadata !13712, metadata !DIExpression()) #23, !dbg !14944
  call void @llvm.dbg.value(metadata i32 %14, metadata !14941, metadata !DIExpression()), !dbg !14943
  call void @llvm.dbg.value(metadata i32 undef, metadata !13740, metadata !DIExpression()) #23, !dbg !14962
  call void @llvm.dbg.value(metadata i32 undef, metadata !13754, metadata !DIExpression()) #23, !dbg !14967
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !14969, !srcloc !13760
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !14938, metadata !DIExpression()), !dbg !14942
  call void @llvm.dbg.value(metadata i32 undef, metadata !14939, metadata !DIExpression()), !dbg !14943
  ret %struct.k_thread* %7, !dbg !14970
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !14971 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14973, metadata !DIExpression()), !dbg !14978
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14974, metadata !DIExpression()), !dbg !14978
  call void @llvm.dbg.value(metadata i32 0, metadata !14975, metadata !DIExpression()), !dbg !14979
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13706, metadata !DIExpression()) #23, !dbg !14980
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14982, !srcloc !13721
  call void @llvm.dbg.value(metadata i32 undef, metadata !13718, metadata !DIExpression()) #23, !dbg !14984
  call void @llvm.dbg.value(metadata i32 undef, metadata !13719, metadata !DIExpression()) #23, !dbg !14984
  call void @llvm.dbg.value(metadata i32 undef, metadata !13712, metadata !DIExpression()) #23, !dbg !14980
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14985
  br i1 %3, label %5, label %4, !dbg !14986

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 148) #24, !dbg !14987
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14987
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 148) #24, !dbg !14987
  unreachable, !dbg !14987

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13718, metadata !DIExpression()) #23, !dbg !14984
  call void @llvm.dbg.value(metadata i32 undef, metadata !13712, metadata !DIExpression()) #23, !dbg !14980
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14988
  call void @llvm.dbg.value(metadata i32 undef, metadata !14977, metadata !DIExpression()), !dbg !14979
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14974, metadata !DIExpression()), !dbg !14978
  call void @llvm.dbg.value(metadata i32 undef, metadata !14975, metadata !DIExpression()), !dbg !14979
  %6 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #25, !dbg !14989
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !14974, metadata !DIExpression()), !dbg !14978
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !14992
  br i1 %8, label %11, label %9, !dbg !14994

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #25, !dbg !14995
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %7) #25, !dbg !14997
  br label %11, !dbg !14998

11:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !13740, metadata !DIExpression()) #23, !dbg !14999
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13745, metadata !DIExpression()) #23, !dbg !14999
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15001
  br i1 %12, label %14, label %13, !dbg !15002

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.253, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 194) #24, !dbg !15003
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.254, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15003
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 194) #24, !dbg !15003
  unreachable, !dbg !15003

14:                                               ; preds = %11
  %15 = extractvalue { i32, i32 } %2, 0, !dbg !14982
  call void @llvm.dbg.value(metadata i32 %15, metadata !13718, metadata !DIExpression()) #23, !dbg !14984
  call void @llvm.dbg.value(metadata i32 %15, metadata !13712, metadata !DIExpression()) #23, !dbg !14980
  call void @llvm.dbg.value(metadata i32 %15, metadata !14977, metadata !DIExpression()), !dbg !14979
  call void @llvm.dbg.value(metadata i32 undef, metadata !13740, metadata !DIExpression()) #23, !dbg !14999
  call void @llvm.dbg.value(metadata i32 undef, metadata !13754, metadata !DIExpression()) #23, !dbg !15004
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !15006, !srcloc !13760
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !14974, metadata !DIExpression()), !dbg !14978
  call void @llvm.dbg.value(metadata i32 undef, metadata !14975, metadata !DIExpression()), !dbg !14979
  ret %struct.k_thread* %7, !dbg !15007
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15008 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15010, metadata !DIExpression()), !dbg !15011
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14818, metadata !DIExpression()) #23, !dbg !15012
  call void @llvm.dbg.value(metadata i32 0, metadata !14819, metadata !DIExpression()) #23, !dbg !15014
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13706, metadata !DIExpression()) #23, !dbg !15015
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15017, !srcloc !13721
  call void @llvm.dbg.value(metadata i32 undef, metadata !13718, metadata !DIExpression()) #23, !dbg !15019
  call void @llvm.dbg.value(metadata i32 undef, metadata !13719, metadata !DIExpression()) #23, !dbg !15019
  call void @llvm.dbg.value(metadata i32 undef, metadata !13712, metadata !DIExpression()) #23, !dbg !15015
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15020
  br i1 %3, label %5, label %4, !dbg !15021

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 148) #24, !dbg !15022
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15022
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 148) #24, !dbg !15022
  unreachable, !dbg !15022

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13718, metadata !DIExpression()) #23, !dbg !15019
  call void @llvm.dbg.value(metadata i32 undef, metadata !13712, metadata !DIExpression()) #23, !dbg !15015
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15023
  call void @llvm.dbg.value(metadata i32 undef, metadata !14821, metadata !DIExpression()) #23, !dbg !15014
  call void @llvm.dbg.value(metadata i32 undef, metadata !14819, metadata !DIExpression()) #23, !dbg !15014
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #24, !dbg !15024
  call void @llvm.dbg.value(metadata i32 undef, metadata !13740, metadata !DIExpression()) #23, !dbg !15025
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13745, metadata !DIExpression()) #23, !dbg !15025
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15027
  br i1 %6, label %8, label %7, !dbg !15028

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.253, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 194) #24, !dbg !15029
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.254, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15029
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 194) #24, !dbg !15029
  unreachable, !dbg !15029

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15017
  call void @llvm.dbg.value(metadata i32 %9, metadata !13718, metadata !DIExpression()) #23, !dbg !15019
  call void @llvm.dbg.value(metadata i32 %9, metadata !13712, metadata !DIExpression()) #23, !dbg !15015
  call void @llvm.dbg.value(metadata i32 %9, metadata !14821, metadata !DIExpression()) #23, !dbg !15014
  call void @llvm.dbg.value(metadata i32 undef, metadata !13740, metadata !DIExpression()) #23, !dbg !15025
  call void @llvm.dbg.value(metadata i32 undef, metadata !13754, metadata !DIExpression()) #23, !dbg !15030
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15032, !srcloc !13760
  call void @llvm.dbg.value(metadata i32 1, metadata !14819, metadata !DIExpression()) #23, !dbg !15014
  call void @llvm.dbg.value(metadata i32 undef, metadata !14819, metadata !DIExpression()) #23, !dbg !15014
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #25, !dbg !15033
  ret void, !dbg !15034
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15035 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15037, metadata !DIExpression()), !dbg !15043
  call void @llvm.dbg.value(metadata i32 %1, metadata !15038, metadata !DIExpression()), !dbg !15043
  call void @llvm.dbg.value(metadata i8 0, metadata !15039, metadata !DIExpression()), !dbg !15043
  call void @llvm.dbg.value(metadata i32 0, metadata !15040, metadata !DIExpression()), !dbg !15044
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13706, metadata !DIExpression()) #23, !dbg !15045
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15047, !srcloc !13721
  call void @llvm.dbg.value(metadata i32 undef, metadata !13718, metadata !DIExpression()) #23, !dbg !15049
  call void @llvm.dbg.value(metadata i32 undef, metadata !13719, metadata !DIExpression()) #23, !dbg !15049
  call void @llvm.dbg.value(metadata i32 undef, metadata !13712, metadata !DIExpression()) #23, !dbg !15045
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15050
  br i1 %4, label %6, label %5, !dbg !15051

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 148) #24, !dbg !15052
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15052
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 148) #24, !dbg !15052
  unreachable, !dbg !15052

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !13718, metadata !DIExpression()) #23, !dbg !15049
  call void @llvm.dbg.value(metadata i32 undef, metadata !13712, metadata !DIExpression()) #23, !dbg !15045
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15053
  call void @llvm.dbg.value(metadata i32 undef, metadata !15042, metadata !DIExpression()), !dbg !15044
  call void @llvm.dbg.value(metadata i8 poison, metadata !15039, metadata !DIExpression()), !dbg !15043
  call void @llvm.dbg.value(metadata i32 undef, metadata !15040, metadata !DIExpression()), !dbg !15044
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %9 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #25, !dbg !15054
  call void @llvm.dbg.value(metadata i1 %9, metadata !15039, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15043
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %11 = bitcast %union.anon.2* %10 to i8*
  %12 = trunc i32 %1 to i8
  br i1 %9, label %13, label %34, !dbg !15057

13:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13898, metadata !DIExpression()) #23, !dbg !15058
  %14 = load i8, i8* %7, align 1, !dbg !15064
  %15 = and i8 %14, 127, !dbg !15064
  store i8 %15, i8* %7, align 1, !dbg !15064
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13906, metadata !DIExpression()) #23, !dbg !15065
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !15067
  store i8 %12, i8* %11, align 2, !dbg !15068
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13915, metadata !DIExpression()) #23, !dbg !15069
  %16 = load i8, i8* %7, align 1, !dbg !15071
  %17 = or i8 %16, -128, !dbg !15071
  store i8 %17, i8* %7, align 1, !dbg !15071
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13922, metadata !DIExpression()) #23, !dbg !15072
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13929, metadata !DIExpression()) #23, !dbg !15074
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13935, metadata !DIExpression()) #23, !dbg !15074
  %18 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #24, !dbg !15076
  br i1 %18, label %19, label %20, !dbg !15077

19:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.255, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.256, i32 0, i32 0), i32 noundef 186) #24, !dbg !15078
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.256, i32 0, i32 0), i32 noundef 186) #24, !dbg !15078
  unreachable, !dbg !15078

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !15079
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !13936, metadata !DIExpression()) #23, !dbg !15074
  %22 = icmp eq %struct._dnode* %21, null, !dbg !15080
  br i1 %22, label %32, label %23, !dbg !15079

23:                                               ; preds = %20, %29
  %24 = phi %struct._dnode* [ %30, %29 ], [ %21, %20 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !13936, metadata !DIExpression()) #23, !dbg !15074
  %25 = bitcast %struct._dnode* %24 to %struct.k_thread*, !dbg !15081
  call void @llvm.dbg.value(metadata %struct.k_thread* %25, metadata !13936, metadata !DIExpression()) #23, !dbg !15074
  %26 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %25) #24, !dbg !15082
  %27 = icmp sgt i32 %26, 0, !dbg !15083
  br i1 %27, label %28, label %29, !dbg !15084

28:                                               ; preds = %23
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %24, %struct._dnode* noundef %8) #24, !dbg !15085
  br label %33, !dbg !15086

29:                                               ; preds = %23
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %24) #24, !dbg !15080
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !13936, metadata !DIExpression()) #23, !dbg !15074
  %31 = icmp eq %struct._dnode* %30, null, !dbg !15080
  br i1 %31, label %32, label %23, !dbg !15079, !llvm.loop !15087

32:                                               ; preds = %29, %20
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %8) #24, !dbg !15089
  br label %33, !dbg !15090

33:                                               ; preds = %28, %32
  tail call fastcc void @update_cache(i32 noundef 1) #25, !dbg !15091
  br label %35, !dbg !15092

34:                                               ; preds = %6
  store i8 %12, i8* %11, align 2, !dbg !15093
  br label %35

35:                                               ; preds = %33, %34
  call void @llvm.dbg.value(metadata i32 undef, metadata !13740, metadata !DIExpression()) #23, !dbg !15095
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13745, metadata !DIExpression()) #23, !dbg !15095
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15097
  br i1 %36, label %38, label %37, !dbg !15098

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.253, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 194) #24, !dbg !15099
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.254, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15099
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 194) #24, !dbg !15099
  unreachable, !dbg !15099

38:                                               ; preds = %35
  %39 = extractvalue { i32, i32 } %3, 0, !dbg !15047
  call void @llvm.dbg.value(metadata i32 %39, metadata !13718, metadata !DIExpression()) #23, !dbg !15049
  call void @llvm.dbg.value(metadata i32 %39, metadata !13712, metadata !DIExpression()) #23, !dbg !15045
  call void @llvm.dbg.value(metadata i32 %39, metadata !15042, metadata !DIExpression()), !dbg !15044
  call void @llvm.dbg.value(metadata i32 undef, metadata !13740, metadata !DIExpression()) #23, !dbg !15095
  call void @llvm.dbg.value(metadata i32 undef, metadata !13754, metadata !DIExpression()) #23, !dbg !15100
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %39) #23, !dbg !15102, !srcloc !13760
  call void @llvm.dbg.value(metadata i8 poison, metadata !15039, metadata !DIExpression()), !dbg !15043
  call void @llvm.dbg.value(metadata i32 undef, metadata !15040, metadata !DIExpression()), !dbg !15044
  ret i1 %9, !dbg !15103
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15104 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15108, metadata !DIExpression()), !dbg !15111
  call void @llvm.dbg.value(metadata i32 %1, metadata !15109, metadata !DIExpression()), !dbg !15111
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #25, !dbg !15112
  call void @llvm.dbg.value(metadata i1 %3, metadata !15110, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15111
  br i1 %3, label %4, label %12, !dbg !15113

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15115
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15116
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15116
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15116
  %9 = load i8, i8* %8, align 1, !dbg !15116
  %10 = icmp eq i8 %9, 0, !dbg !15117
  br i1 %10, label %11, label %12, !dbg !15118

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !15119
  br label %12, !dbg !15121

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !15122
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !15123 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15125, metadata !DIExpression()), !dbg !15128
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13706, metadata !DIExpression()) #23, !dbg !15129
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15131, !srcloc !13721
  call void @llvm.dbg.value(metadata i32 undef, metadata !13718, metadata !DIExpression()) #23, !dbg !15133
  call void @llvm.dbg.value(metadata i32 undef, metadata !13719, metadata !DIExpression()) #23, !dbg !15133
  call void @llvm.dbg.value(metadata i32 undef, metadata !13712, metadata !DIExpression()) #23, !dbg !15129
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15134
  br i1 %2, label %4, label %3, !dbg !15135

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 148) #24, !dbg !15136
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15136
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 148) #24, !dbg !15136
  unreachable, !dbg !15136

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !13718, metadata !DIExpression()) #23, !dbg !15133
  call void @llvm.dbg.value(metadata i32 undef, metadata !13712, metadata !DIExpression()) #23, !dbg !15129
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15137
  call void @llvm.dbg.value(metadata i32 undef, metadata !15127, metadata !DIExpression()), !dbg !15128
  call void @llvm.dbg.value(metadata i32 undef, metadata !15125, metadata !DIExpression()), !dbg !15128
  tail call fastcc void @z_sched_lock() #25, !dbg !15138
  call void @llvm.dbg.value(metadata i32 undef, metadata !13740, metadata !DIExpression()) #23, !dbg !15141
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13745, metadata !DIExpression()) #23, !dbg !15141
  %5 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15143
  br i1 %5, label %7, label %6, !dbg !15144

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.253, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 194) #24, !dbg !15145
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.254, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15145
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 194) #24, !dbg !15145
  unreachable, !dbg !15145

7:                                                ; preds = %4
  %8 = extractvalue { i32, i32 } %1, 0, !dbg !15131
  call void @llvm.dbg.value(metadata i32 %8, metadata !13718, metadata !DIExpression()) #23, !dbg !15133
  call void @llvm.dbg.value(metadata i32 %8, metadata !13712, metadata !DIExpression()) #23, !dbg !15129
  call void @llvm.dbg.value(metadata i32 %8, metadata !15127, metadata !DIExpression()), !dbg !15128
  call void @llvm.dbg.value(metadata i32 undef, metadata !13740, metadata !DIExpression()) #23, !dbg !15141
  call void @llvm.dbg.value(metadata i32 undef, metadata !13754, metadata !DIExpression()) #23, !dbg !15146
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !15148, !srcloc !13760
  call void @llvm.dbg.value(metadata i32 1, metadata !15125, metadata !DIExpression()), !dbg !15128
  call void @llvm.dbg.value(metadata i32 undef, metadata !15125, metadata !DIExpression()), !dbg !15128
  ret void, !dbg !15149
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !15150 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15151, !srcloc !14440
  call void @llvm.dbg.value(metadata i32 %1, metadata !14436, metadata !DIExpression()) #23, !dbg !15156
  %2 = icmp eq i32 %1, 0, !dbg !15157
  br i1 %2, label %4, label %3, !dbg !15158

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.274, i32 0, i32 0), i32 noundef 253) #24, !dbg !15159
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.258, i32 0, i32 0)) #24, !dbg !15159
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.274, i32 0, i32 0), i32 noundef 253) #24, !dbg !15159
  unreachable, !dbg !15159

4:                                                ; preds = %0
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15161
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15161
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15161
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15161
  %9 = load i8, i8* %8, align 1, !dbg !15161
  %10 = icmp eq i8 %9, 1, !dbg !15161
  br i1 %10, label %11, label %12, !dbg !15164

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.22.275, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.274, i32 0, i32 0), i32 noundef 254) #24, !dbg !15165
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.258, i32 0, i32 0)) #24, !dbg !15165
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.274, i32 0, i32 0), i32 noundef 254) #24, !dbg !15165
  unreachable, !dbg !15165

12:                                               ; preds = %4
  %13 = add i8 %9, -1, !dbg !15167
  store i8 %13, i8* %8, align 1, !dbg !15167
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15168, !srcloc !15170
  ret void, !dbg !15171
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !15172 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15174, metadata !DIExpression()), !dbg !15177
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13706, metadata !DIExpression()) #23, !dbg !15178
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15180, !srcloc !13721
  call void @llvm.dbg.value(metadata i32 undef, metadata !13718, metadata !DIExpression()) #23, !dbg !15182
  call void @llvm.dbg.value(metadata i32 undef, metadata !13719, metadata !DIExpression()) #23, !dbg !15182
  call void @llvm.dbg.value(metadata i32 undef, metadata !13712, metadata !DIExpression()) #23, !dbg !15178
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15183
  br i1 %2, label %4, label %3, !dbg !15184

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 148) #24, !dbg !15185
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15185
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 148) #24, !dbg !15185
  unreachable, !dbg !15185

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !13718, metadata !DIExpression()) #23, !dbg !15182
  call void @llvm.dbg.value(metadata i32 undef, metadata !13712, metadata !DIExpression()) #23, !dbg !15178
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15186
  call void @llvm.dbg.value(metadata i32 undef, metadata !15176, metadata !DIExpression()), !dbg !15177
  call void @llvm.dbg.value(metadata i32 undef, metadata !15174, metadata !DIExpression()), !dbg !15177
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15187
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15187
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15187
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15187
  %9 = load i8, i8* %8, align 1, !dbg !15187
  %10 = icmp eq i8 %9, 0, !dbg !15187
  br i1 %10, label %11, label %12, !dbg !15192

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.278, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.256, i32 0, i32 0), i32 noundef 999) #24, !dbg !15193
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.258, i32 0, i32 0)) #24, !dbg !15193
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.256, i32 0, i32 0), i32 noundef 999) #24, !dbg !15193
  unreachable, !dbg !15193

12:                                               ; preds = %4
  %13 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15195, !srcloc !14440
  call void @llvm.dbg.value(metadata i32 %13, metadata !14436, metadata !DIExpression()) #23, !dbg !15200
  %14 = icmp eq i32 %13, 0, !dbg !15201
  br i1 %14, label %16, label %15, !dbg !15202

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.256, i32 0, i32 0), i32 noundef 1000) #24, !dbg !15203
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.258, i32 0, i32 0)) #24, !dbg !15203
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.256, i32 0, i32 0), i32 noundef 1000) #24, !dbg !15203
  unreachable, !dbg !15203

16:                                               ; preds = %12
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15205
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %17, i32 0, i32 0, i32 4, !dbg !15206
  %19 = bitcast %union.anon.2* %18 to %struct.device_state*, !dbg !15206
  %20 = getelementptr inbounds %struct.device_state, %struct.device_state* %19, i32 0, i32 1, !dbg !15206
  %21 = load i8, i8* %20, align 1, !dbg !15207
  %22 = add i8 %21, 1, !dbg !15207
  store i8 %22, i8* %20, align 1, !dbg !15207
  tail call fastcc void @update_cache(i32 noundef 0) #25, !dbg !15208
  call void @llvm.dbg.value(metadata i32 undef, metadata !13740, metadata !DIExpression()) #23, !dbg !15209
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13745, metadata !DIExpression()) #23, !dbg !15209
  %23 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15211
  br i1 %23, label %25, label %24, !dbg !15212

24:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.253, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 194) #24, !dbg !15213
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.254, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15213
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 194) #24, !dbg !15213
  unreachable, !dbg !15213

25:                                               ; preds = %16
  %26 = extractvalue { i32, i32 } %1, 0, !dbg !15180
  call void @llvm.dbg.value(metadata i32 %26, metadata !13718, metadata !DIExpression()) #23, !dbg !15182
  call void @llvm.dbg.value(metadata i32 %26, metadata !13712, metadata !DIExpression()) #23, !dbg !15178
  call void @llvm.dbg.value(metadata i32 %26, metadata !15176, metadata !DIExpression()), !dbg !15177
  call void @llvm.dbg.value(metadata i32 undef, metadata !13740, metadata !DIExpression()) #23, !dbg !15209
  call void @llvm.dbg.value(metadata i32 undef, metadata !13754, metadata !DIExpression()) #23, !dbg !15214
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %26) #23, !dbg !15216, !srcloc !13760
  call void @llvm.dbg.value(metadata i32 1, metadata !15174, metadata !DIExpression()), !dbg !15177
  call void @llvm.dbg.value(metadata i32 undef, metadata !15174, metadata !DIExpression()), !dbg !15177
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !15217
  ret void, !dbg !15218
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #10 !dbg !15219 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15220
  ret %struct.k_thread* %1, !dbg !15221
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #10 !dbg !15222 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !15226, metadata !DIExpression()), !dbg !15231
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !15227, metadata !DIExpression()), !dbg !15231
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !15232
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15228, metadata !DIExpression()), !dbg !15231
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !15233
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15229, metadata !DIExpression()), !dbg !15231
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #25, !dbg !15234
  call void @llvm.dbg.value(metadata i32 %5, metadata !15230, metadata !DIExpression()), !dbg !15231
  %6 = icmp sgt i32 %5, 0, !dbg !15235
  br i1 %6, label %17, label %7, !dbg !15237

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !15238
  br i1 %8, label %17, label %9, !dbg !15240

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !15241
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !15241
  %12 = load i32, i32* %11, align 8, !dbg !15241
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !15243
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !15243
  %15 = load i32, i32* %14, align 8, !dbg !15243
  %16 = icmp ult i32 %12, %15, !dbg !15244
  br label %17, !dbg !15245

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !15246
  ret i1 %18, !dbg !15247
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !15248 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15265, metadata !DIExpression()), !dbg !15280
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15266, metadata !DIExpression()), !dbg !15280
  %4 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #25, !dbg !15281
  br i1 %4, label %5, label %6, !dbg !15284

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.255, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.256, i32 0, i32 0), i32 noundef 1179) #24, !dbg !15285
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.256, i32 0, i32 0), i32 noundef 1179) #24, !dbg !15285
  unreachable, !dbg !15285

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !15287
  %8 = load i32, i32* %7, align 4, !dbg !15288
  %9 = add nsw i32 %8, 1, !dbg !15288
  store i32 %9, i32* %7, align 4, !dbg !15288
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !15289
  store i32 %8, i32* %10, align 8, !dbg !15290
  %11 = load i32, i32* %7, align 4, !dbg !15291
  %12 = icmp eq i32 %11, 0, !dbg !15292
  br i1 %12, label %13, label %35, !dbg !15293

13:                                               ; preds = %6
  %14 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !15294
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %14) #23, !dbg !15294
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !15268, metadata !DIExpression()), !dbg !15294
  %15 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15294
  %16 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !15294
  %17 = load i32, i32* %16, align 4, !dbg !15294
  %18 = shl i32 %17, 2, !dbg !15294
  %19 = alloca i8, i32 %18, align 8, !dbg !15294
  %20 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !15294
  store i8* %19, i8** %20, align 4, !dbg !15294
  %21 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !15294
  %22 = alloca i8, i32 %17, align 8, !dbg !15294
  store i8* %22, i8** %21, align 4, !dbg !15294
  %23 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !15294
  store i32 -1, i32* %23, align 4, !dbg !15294
  %24 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #24, !dbg !15295
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !15277, metadata !DIExpression()), !dbg !15296
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !15267, metadata !DIExpression()), !dbg !15280
  %25 = icmp eq %struct.rbnode* %24, null, !dbg !15297
  br i1 %25, label %26, label %27, !dbg !15294

26:                                               ; preds = %27, %13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %14) #23, !dbg !15297
  br label %35, !dbg !15298

27:                                               ; preds = %13, %27
  %28 = phi %struct.rbnode* [ %33, %27 ], [ %24, %13 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %28, metadata !15267, metadata !DIExpression()), !dbg !15280
  %29 = load i32, i32* %7, align 4, !dbg !15299
  %30 = add nsw i32 %29, 1, !dbg !15299
  store i32 %30, i32* %7, align 4, !dbg !15299
  %31 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %28, i32 2, !dbg !15301
  %32 = bitcast %struct.rbnode* %31 to i32*, !dbg !15301
  store i32 %29, i32* %32, align 8, !dbg !15302
  %33 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #24, !dbg !15295
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !15277, metadata !DIExpression()), !dbg !15296
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !15267, metadata !DIExpression()), !dbg !15280
  %34 = icmp eq %struct.rbnode* %33, null, !dbg !15297
  br i1 %34, label %26, label %27, !dbg !15294, !llvm.loop !15303

35:                                               ; preds = %26, %6
  %36 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15305
  %37 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !15306
  call void @rb_insert(%struct.rbtree* noundef %36, %struct.rbnode* noundef %37) #24, !dbg !15307
  ret void, !dbg !15308
}

; Function Attrs: optsize
declare !dbg !15309 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !15314 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !15317 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15319, metadata !DIExpression()), !dbg !15321
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15320, metadata !DIExpression()), !dbg !15321
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #25, !dbg !15322
  br i1 %3, label %4, label %5, !dbg !15325

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.255, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.256, i32 0, i32 0), i32 noundef 1200) #24, !dbg !15326
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.256, i32 0, i32 0), i32 noundef 1200) #24, !dbg !15326
  unreachable, !dbg !15326

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15328
  %7 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !15329
  tail call void @rb_remove(%struct.rbtree* noundef %6, %struct.rbnode* noundef %7) #24, !dbg !15330
  %8 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !15331
  %9 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !15331
  %10 = icmp eq %struct.rbnode* %9, null, !dbg !15333
  br i1 %10, label %11, label %13, !dbg !15334

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !15335
  store i32 0, i32* %12, align 4, !dbg !15337
  br label %13, !dbg !15338

13:                                               ; preds = %11, %5
  ret void, !dbg !15339
}

; Function Attrs: optsize
declare !dbg !15340 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !15341 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15345, metadata !DIExpression()), !dbg !15348
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15346, metadata !DIExpression()), !dbg !15348
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15349
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #25, !dbg !15350
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !15347, metadata !DIExpression()), !dbg !15348
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15346, metadata !DIExpression()), !dbg !15348
  ret %struct.k_thread* %4, !dbg !15351
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !15352 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !15356, metadata !DIExpression()), !dbg !15357
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #24, !dbg !15358
  ret %struct.rbnode* %2, !dbg !15359
}

; Function Attrs: optsize
declare !dbg !15360 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #16 !dbg !15363 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !15373, metadata !DIExpression()), !dbg !15377
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !15378
  %3 = load i32, i32* %2, align 4, !dbg !15378
  %4 = icmp eq i32 %3, 0, !dbg !15380
  br i1 %4, label %10, label %5, !dbg !15381

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15374, metadata !DIExpression()), !dbg !15377
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !15382, !range !7529
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !15383
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !15375, metadata !DIExpression()), !dbg !15377
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #25, !dbg !15384
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !15376, metadata !DIExpression()), !dbg !15377
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15374, metadata !DIExpression()), !dbg !15377
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !15377
  ret %struct.k_thread* %11, !dbg !15385
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15386 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15390, metadata !DIExpression()), !dbg !15393
  call void @llvm.dbg.value(metadata i32 0, metadata !15391, metadata !DIExpression()), !dbg !15393
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !15394
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15392, metadata !DIExpression()), !dbg !15393
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15395
  br i1 %3, label %8, label %4, !dbg !15396

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #25, !dbg !15397
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #25, !dbg !15399
  call void @llvm.dbg.value(metadata i32 1, metadata !15391, metadata !DIExpression()), !dbg !15393
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !15394
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15392, metadata !DIExpression()), !dbg !15393
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !15395
  br i1 %7, label %8, label %4, !dbg !15396, !llvm.loop !15400

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !15393
  ret i32 %9, !dbg !15402
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #10 !dbg !15403 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15405, metadata !DIExpression()), !dbg !15406
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !15407
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #25, !dbg !15408
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !15409
  ret %struct.k_thread* %4, !dbg !15410
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #9 !dbg !15411 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !15420, metadata !DIExpression()), !dbg !15421
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !15422
  tail call fastcc void @sys_dlist_init.279(%struct._dnode* noundef nonnull %2) #25, !dbg !15423
  ret void, !dbg !15424
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.279(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !15425 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15429, metadata !DIExpression()), !dbg !15430
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15431
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15432
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15433
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15434
  ret void, !dbg !15435
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !15436 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #25, !dbg !15437
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #25, !dbg !15438
  ret void, !dbg !15439
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !15440 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15445, metadata !DIExpression()), !dbg !15446
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15447
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !15447
  %4 = load i8, i8* %3, align 2, !dbg !15447
  %5 = sext i8 %4 to i32, !dbg !15448
  ret i32 %5, !dbg !15449
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15450 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15454, metadata !DIExpression()), !dbg !15457
  call void @llvm.dbg.value(metadata i32 %1, metadata !15455, metadata !DIExpression()), !dbg !15457
  %3 = add i32 %1, 16, !dbg !15458
  %4 = icmp ult i32 %3, 31, !dbg !15458
  br i1 %4, label %6, label %5, !dbg !15458

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([134 x i8], [134 x i8]* @.str.8.282, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.256, i32 0, i32 0), i32 noundef 1331) #24, !dbg !15462
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9.283, i32 0, i32 0), i32 noundef %1, i32 noundef 14, i32 noundef -16) #24, !dbg !15462
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.256, i32 0, i32 0), i32 noundef 1331) #24, !dbg !15462
  unreachable, !dbg !15462

6:                                                ; preds = %2
  %7 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15464, !srcloc !14440
  call void @llvm.dbg.value(metadata i32 %7, metadata !14436, metadata !DIExpression()) #23, !dbg !15469
  %8 = icmp eq i32 %7, 0, !dbg !15470
  br i1 %8, label %10, label %9, !dbg !15471

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.256, i32 0, i32 0), i32 noundef 1332) #24, !dbg !15472
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.258, i32 0, i32 0)) #24, !dbg !15472
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.256, i32 0, i32 0), i32 noundef 1332) #24, !dbg !15472
  unreachable, !dbg !15472

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15456, metadata !DIExpression()), !dbg !15457
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #25, !dbg !15474
  ret void, !dbg !15475
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !15476 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #25, !dbg !15477
  br i1 %1, label %8, label %2, !dbg !15478

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #24, !dbg !15479
  br i1 %3, label %8, label %4, !dbg !15480

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15481
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #25, !dbg !15482
  %7 = xor i1 %6, true, !dbg !15480
  br label %8, !dbg !15480

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !15483
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #10 !dbg !15484 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !15485, !range !6692
  %2 = icmp eq i8 %1, 0, !dbg !15485
  ret i1 %2, !dbg !15486
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !15487 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15490, !srcloc !14440
  call void @llvm.dbg.value(metadata i32 %1, metadata !14436, metadata !DIExpression()) #23, !dbg !15495
  %2 = icmp eq i32 %1, 0, !dbg !15496
  br i1 %2, label %4, label %3, !dbg !15497

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.256, i32 0, i32 0), i32 noundef 1392) #24, !dbg !15498
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.258, i32 0, i32 0)) #24, !dbg !15498
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.256, i32 0, i32 0), i32 noundef 1392) #24, !dbg !15498
  unreachable, !dbg !15498

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13706, metadata !DIExpression()) #23, !dbg !15500
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15502, !srcloc !13721
  call void @llvm.dbg.value(metadata i32 undef, metadata !13718, metadata !DIExpression()) #23, !dbg !15504
  call void @llvm.dbg.value(metadata i32 undef, metadata !13719, metadata !DIExpression()) #23, !dbg !15504
  call void @llvm.dbg.value(metadata i32 undef, metadata !13712, metadata !DIExpression()) #23, !dbg !15500
  %6 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15505
  br i1 %6, label %8, label %7, !dbg !15506

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 148) #24, !dbg !15507
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15507
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 148) #24, !dbg !15507
  unreachable, !dbg !15507

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !13718, metadata !DIExpression()) #23, !dbg !15504
  call void @llvm.dbg.value(metadata i32 undef, metadata !13712, metadata !DIExpression()) #23, !dbg !15500
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15508
  call void @llvm.dbg.value(metadata i32 undef, metadata !15489, metadata !DIExpression()), !dbg !15509
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15510
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !13898, metadata !DIExpression()) #23, !dbg !15513
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 3, !dbg !15515
  %11 = load i8, i8* %10, align 1, !dbg !15516
  %12 = and i8 %11, 127, !dbg !15516
  store i8 %12, i8* %10, align 1, !dbg !15516
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !13906, metadata !DIExpression()) #23, !dbg !15517
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %9) #24, !dbg !15519
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15520
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !13915, metadata !DIExpression()) #23, !dbg !15521
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 3, !dbg !15523
  %15 = load i8, i8* %14, align 1, !dbg !15524
  %16 = or i8 %15, -128, !dbg !15524
  store i8 %16, i8* %14, align 1, !dbg !15524
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !13922, metadata !DIExpression()) #23, !dbg !15525
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13929, metadata !DIExpression()) #23, !dbg !15527
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !13935, metadata !DIExpression()) #23, !dbg !15527
  %17 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %13) #24, !dbg !15529
  br i1 %17, label %18, label %19, !dbg !15530

18:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.255, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.256, i32 0, i32 0), i32 noundef 186) #24, !dbg !15531
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.256, i32 0, i32 0), i32 noundef 186) #24, !dbg !15531
  unreachable, !dbg !15531

19:                                               ; preds = %8
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !15532
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !13936, metadata !DIExpression()) #23, !dbg !15527
  %21 = icmp eq %struct._dnode* %20, null, !dbg !15533
  br i1 %21, label %32, label %22, !dbg !15532

22:                                               ; preds = %19, %29
  %23 = phi %struct._dnode* [ %30, %29 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %23, metadata !13936, metadata !DIExpression()) #23, !dbg !15527
  %24 = bitcast %struct._dnode* %23 to %struct.k_thread*, !dbg !15534
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !13936, metadata !DIExpression()) #23, !dbg !15527
  %25 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %13, %struct.k_thread* noundef nonnull %24) #24, !dbg !15535
  %26 = icmp sgt i32 %25, 0, !dbg !15536
  br i1 %26, label %27, label %29, !dbg !15537

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !15538
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %23, %struct._dnode* noundef %28) #24, !dbg !15539
  br label %34, !dbg !15540

29:                                               ; preds = %22
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %23) #24, !dbg !15533
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !13936, metadata !DIExpression()) #23, !dbg !15527
  %31 = icmp eq %struct._dnode* %30, null, !dbg !15533
  br i1 %31, label %32, label %22, !dbg !15532, !llvm.loop !15541

32:                                               ; preds = %29, %19
  %33 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !15543
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %33) #24, !dbg !15544
  br label %34, !dbg !15545

34:                                               ; preds = %27, %32
  tail call fastcc void @update_cache(i32 noundef 1) #25, !dbg !15546
  call void @llvm.dbg.value(metadata i32 undef, metadata !14384, metadata !DIExpression()) #23, !dbg !15547
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14389, metadata !DIExpression()) #23, !dbg !15547
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14393, metadata !DIExpression()) #23, !dbg !15549
  %35 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15551
  br i1 %35, label %37, label %36, !dbg !15552

36:                                               ; preds = %34
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.253, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 225) #24, !dbg !15553
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.254, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15553
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 225) #24, !dbg !15553
  unreachable, !dbg !15553

37:                                               ; preds = %34
  %38 = extractvalue { i32, i32 } %5, 0, !dbg !15502
  call void @llvm.dbg.value(metadata i32 %38, metadata !13718, metadata !DIExpression()) #23, !dbg !15504
  call void @llvm.dbg.value(metadata i32 %38, metadata !13712, metadata !DIExpression()) #23, !dbg !15500
  call void @llvm.dbg.value(metadata i32 %38, metadata !15489, metadata !DIExpression()), !dbg !15509
  call void @llvm.dbg.value(metadata i32 undef, metadata !14384, metadata !DIExpression()) #23, !dbg !15547
  %39 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %38) #24, !dbg !15554
  ret void, !dbg !15555
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !15556 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !15560, metadata !DIExpression()), !dbg !15563
  %3 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15564, !srcloc !14440
  call void @llvm.dbg.value(metadata i32 %3, metadata !14436, metadata !DIExpression()) #23, !dbg !15569
  %4 = icmp eq i32 %3, 0, !dbg !15570
  br i1 %4, label %6, label %5, !dbg !15571

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.256, i32 0, i32 0), i32 noundef 1463) #24, !dbg !15572
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.258, i32 0, i32 0)) #24, !dbg !15572
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.256, i32 0, i32 0), i32 noundef 1463) #24, !dbg !15572
  unreachable, !dbg !15572

6:                                                ; preds = %1
  %7 = icmp eq i64 %2, -1, !dbg !15574
  br i1 %7, label %8, label %10, !dbg !15576

8:                                                ; preds = %6
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15577
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %9) #25, !dbg !15579
  br label %15, !dbg !15580

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i64 %2, metadata !15561, metadata !DIExpression()), !dbg !15563
  %11 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #25, !dbg !15581
  %12 = sext i32 %11 to i64, !dbg !15581
  call void @llvm.dbg.value(metadata i64 %12, metadata !15561, metadata !DIExpression()), !dbg !15563
  %13 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %12) #25, !dbg !15582
  %14 = trunc i64 %13 to i32, !dbg !15582
  call void @llvm.dbg.value(metadata i32 %14, metadata !15562, metadata !DIExpression()), !dbg !15563
  br label %15

15:                                               ; preds = %10, %8
  %16 = phi i32 [ -1, %8 ], [ %14, %10 ], !dbg !15563
  ret i32 %16, !dbg !15583
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15584 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15588, metadata !DIExpression()), !dbg !15589
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15590, !srcloc !15592
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #25, !dbg !15593
  ret void, !dbg !15594
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !15595 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15599, metadata !DIExpression()), !dbg !15603
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15604, !srcloc !14440
  call void @llvm.dbg.value(metadata i32 %2, metadata !14436, metadata !DIExpression()) #23, !dbg !15609
  %3 = icmp eq i32 %2, 0, !dbg !15610
  br i1 %3, label %5, label %4, !dbg !15611

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.256, i32 0, i32 0), i32 noundef 1420) #24, !dbg !15612
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.258, i32 0, i32 0)) #24, !dbg !15612
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.256, i32 0, i32 0), i32 noundef 1420) #24, !dbg !15612
  unreachable, !dbg !15612

5:                                                ; preds = %1
  %6 = icmp eq i64 %0, 0, !dbg !15614
  br i1 %6, label %7, label %8, !dbg !15616

7:                                                ; preds = %5
  tail call fastcc void @k_yield() #25, !dbg !15617
  br label %43, !dbg !15619

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i64 %0, metadata !15601, metadata !DIExpression()), !dbg !15603
  %9 = icmp sgt i64 %0, -3, !dbg !15620
  br i1 %9, label %10, label %14, !dbg !15622

10:                                               ; preds = %8
  %11 = tail call i32 @sys_clock_tick_get_32() #24, !dbg !15623
  %12 = trunc i64 %0 to i32, !dbg !15625
  %13 = add i32 %11, %12, !dbg !15625
  call void @llvm.dbg.value(metadata i32 %13, metadata !15600, metadata !DIExpression()), !dbg !15603
  br label %17, !dbg !15626

14:                                               ; preds = %8
  %15 = trunc i64 %0 to i32, !dbg !15627
  %16 = sub i32 -2, %15, !dbg !15627
  call void @llvm.dbg.value(metadata i32 %16, metadata !15600, metadata !DIExpression()), !dbg !15603
  br label %17

17:                                               ; preds = %14, %10
  %18 = phi i32 [ %13, %10 ], [ %16, %14 ], !dbg !15629
  call void @llvm.dbg.value(metadata i32 %18, metadata !15600, metadata !DIExpression()), !dbg !15603
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13706, metadata !DIExpression()) #23, !dbg !15630
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15632, !srcloc !13721
  call void @llvm.dbg.value(metadata i32 undef, metadata !13718, metadata !DIExpression()) #23, !dbg !15634
  call void @llvm.dbg.value(metadata i32 undef, metadata !13719, metadata !DIExpression()) #23, !dbg !15634
  call void @llvm.dbg.value(metadata i32 undef, metadata !13712, metadata !DIExpression()) #23, !dbg !15630
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15635
  br i1 %20, label %22, label %21, !dbg !15636

21:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 148) #24, !dbg !15637
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15637
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 148) #24, !dbg !15637
  unreachable, !dbg !15637

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !13718, metadata !DIExpression()) #23, !dbg !15634
  call void @llvm.dbg.value(metadata i32 undef, metadata !13712, metadata !DIExpression()) #23, !dbg !15630
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15638
  call void @llvm.dbg.value(metadata i32 undef, metadata !15602, metadata !DIExpression()), !dbg !15603
  %23 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15639
  store %struct.k_thread* %23, %struct.k_thread** @pending_current, align 4, !dbg !15640
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %23) #25, !dbg !15641
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15642
  %25 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !15643
  tail call fastcc void @z_add_thread_timeout.266(%struct.k_thread* noundef %24, [1 x i64] %25) #25, !dbg !15643
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15644
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %26) #25, !dbg !15645
  call void @llvm.dbg.value(metadata i32 undef, metadata !14384, metadata !DIExpression()) #23, !dbg !15646
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14389, metadata !DIExpression()) #23, !dbg !15646
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14393, metadata !DIExpression()) #23, !dbg !15648
  %27 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15650
  br i1 %27, label %29, label %28, !dbg !15651

28:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.253, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 225) #24, !dbg !15652
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.254, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15652
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 225) #24, !dbg !15652
  unreachable, !dbg !15652

29:                                               ; preds = %22
  %30 = extractvalue { i32, i32 } %19, 0, !dbg !15632
  call void @llvm.dbg.value(metadata i32 %30, metadata !13718, metadata !DIExpression()) #23, !dbg !15634
  call void @llvm.dbg.value(metadata i32 %30, metadata !13712, metadata !DIExpression()) #23, !dbg !15630
  call void @llvm.dbg.value(metadata i32 %30, metadata !15602, metadata !DIExpression()), !dbg !15603
  call void @llvm.dbg.value(metadata i32 undef, metadata !14384, metadata !DIExpression()) #23, !dbg !15646
  %31 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %30) #24, !dbg !15653
  %32 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15654
  %33 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %32, i32 noundef 16) #25, !dbg !15654
  br i1 %33, label %34, label %35, !dbg !15657

34:                                               ; preds = %29
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.23.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.256, i32 0, i32 0), i32 noundef 1448) #24, !dbg !15658
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.258, i32 0, i32 0)) #24, !dbg !15658
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.256, i32 0, i32 0), i32 noundef 1448) #24, !dbg !15658
  unreachable, !dbg !15658

35:                                               ; preds = %29
  %36 = zext i32 %18 to i64, !dbg !15660
  %37 = tail call i32 @sys_clock_tick_get_32() #24, !dbg !15661
  %38 = zext i32 %37 to i64, !dbg !15661
  %39 = sub nsw i64 %36, %38, !dbg !15662
  call void @llvm.dbg.value(metadata i64 %39, metadata !15599, metadata !DIExpression()), !dbg !15603
  %40 = icmp sgt i64 %39, 0, !dbg !15663
  %41 = select i1 %40, i64 %39, i64 0, !dbg !15663
  %42 = trunc i64 %41 to i32, !dbg !15663
  br label %43

43:                                               ; preds = %35, %7
  %44 = phi i32 [ 0, %7 ], [ %42, %35 ], !dbg !15603
  ret i32 %44, !dbg !15664
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #6 !dbg !15665 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15667, metadata !DIExpression()), !dbg !15668
  call void @llvm.dbg.value(metadata i64 %0, metadata !13766, metadata !DIExpression()), !dbg !15669
  call void @llvm.dbg.value(metadata i32 10000, metadata !13769, metadata !DIExpression()), !dbg !15669
  call void @llvm.dbg.value(metadata i32 1000, metadata !13770, metadata !DIExpression()), !dbg !15669
  call void @llvm.dbg.value(metadata i8 1, metadata !13771, metadata !DIExpression()), !dbg !15669
  call void @llvm.dbg.value(metadata i1 false, metadata !13772, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15669
  call void @llvm.dbg.value(metadata i1 false, metadata !13773, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15669
  call void @llvm.dbg.value(metadata i8 0, metadata !13774, metadata !DIExpression()), !dbg !15669
  call void @llvm.dbg.value(metadata i1 false, metadata !13775, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15669
  call void @llvm.dbg.value(metadata i1 true, metadata !13776, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15669
  call void @llvm.dbg.value(metadata i64 0, metadata !13777, metadata !DIExpression()), !dbg !15669
  call void @llvm.dbg.value(metadata i64 0, metadata !13777, metadata !DIExpression()), !dbg !15669
  call void @llvm.dbg.value(metadata i64 %0, metadata !13766, metadata !DIExpression()), !dbg !15669
  %2 = udiv i64 %0, 10, !dbg !15671
  ret i64 %2, !dbg !15675
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !15676 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15677, !srcloc !15679
  tail call void @z_impl_k_yield() #25, !dbg !15680
  ret void, !dbg !15681
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !15682 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15686, metadata !DIExpression()), !dbg !15688
  %2 = sext i32 %0 to i64, !dbg !15689
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #25, !dbg !15690
  call void @llvm.dbg.value(metadata i64 %3, metadata !15687, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15688
  %4 = shl i64 %3, 32, !dbg !15691
  %5 = ashr exact i64 %4, 32, !dbg !15691
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #25, !dbg !15692
  call void @llvm.dbg.value(metadata i32 %6, metadata !15687, metadata !DIExpression()), !dbg !15688
  %7 = sext i32 %6 to i64, !dbg !15693
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #25, !dbg !15694
  %9 = trunc i64 %8 to i32, !dbg !15694
  ret i32 %9, !dbg !15695
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #6 !dbg !15696 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15698, metadata !DIExpression()), !dbg !15699
  call void @llvm.dbg.value(metadata i64 %0, metadata !13766, metadata !DIExpression()), !dbg !15700
  call void @llvm.dbg.value(metadata i32 1000000, metadata !13769, metadata !DIExpression()), !dbg !15700
  call void @llvm.dbg.value(metadata i32 10000, metadata !13770, metadata !DIExpression()), !dbg !15700
  call void @llvm.dbg.value(metadata i8 1, metadata !13771, metadata !DIExpression()), !dbg !15700
  call void @llvm.dbg.value(metadata i1 false, metadata !13772, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15700
  call void @llvm.dbg.value(metadata i1 true, metadata !13773, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15700
  call void @llvm.dbg.value(metadata i8 0, metadata !13774, metadata !DIExpression()), !dbg !15700
  call void @llvm.dbg.value(metadata i1 false, metadata !13775, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15700
  call void @llvm.dbg.value(metadata i1 true, metadata !13776, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15700
  call void @llvm.dbg.value(metadata i64 0, metadata !13777, metadata !DIExpression()), !dbg !15700
  call void @llvm.dbg.value(metadata i64 0, metadata !13777, metadata !DIExpression()), !dbg !15700
  %2 = add i64 %0, 99, !dbg !15702
  call void @llvm.dbg.value(metadata i64 %2, metadata !13766, metadata !DIExpression()), !dbg !15700
  %3 = udiv i64 %2, 100, !dbg !15703
  ret i64 %3, !dbg !15704
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #6 !dbg !15705 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15707, metadata !DIExpression()), !dbg !15708
  call void @llvm.dbg.value(metadata i64 %0, metadata !13766, metadata !DIExpression()), !dbg !15709
  call void @llvm.dbg.value(metadata i32 10000, metadata !13769, metadata !DIExpression()), !dbg !15709
  call void @llvm.dbg.value(metadata i32 1000000, metadata !13770, metadata !DIExpression()), !dbg !15709
  call void @llvm.dbg.value(metadata i8 1, metadata !13771, metadata !DIExpression()), !dbg !15709
  call void @llvm.dbg.value(metadata i1 false, metadata !13772, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15709
  call void @llvm.dbg.value(metadata i1 false, metadata !13773, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15709
  call void @llvm.dbg.value(metadata i8 0, metadata !13774, metadata !DIExpression()), !dbg !15709
  call void @llvm.dbg.value(metadata i1 true, metadata !13775, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15709
  call void @llvm.dbg.value(metadata i1 false, metadata !13776, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15709
  call void @llvm.dbg.value(metadata i64 0, metadata !13777, metadata !DIExpression()), !dbg !15709
  call void @llvm.dbg.value(metadata i64 0, metadata !13777, metadata !DIExpression()), !dbg !15709
  %2 = mul i64 %0, 100, !dbg !15711
  ret i64 %2, !dbg !15713
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15714 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15716, metadata !DIExpression()), !dbg !15717
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #25, !dbg !15718
  br i1 %2, label %14, label %3, !dbg !15720

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #25, !dbg !15721
  %5 = icmp slt i32 %4, 0, !dbg !15723
  br i1 %5, label %6, label %10, !dbg !15724

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15725
  %8 = load i8, i8* %7, align 1, !dbg !15725
  %9 = icmp eq i8 %8, 16, !dbg !15728
  br i1 %9, label %10, label %14, !dbg !15729

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #25, !dbg !15730
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #25, !dbg !15731
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15732, !srcloc !14440
  call void @llvm.dbg.value(metadata i32 %11, metadata !14436, metadata !DIExpression()) #23, !dbg !15736
  %12 = icmp eq i32 %11, 0, !dbg !15737
  br i1 %12, label %13, label %14, !dbg !15738

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !15739
  br label %14, !dbg !15741

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !15742
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15743 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15745, metadata !DIExpression()), !dbg !15746
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15747
  %3 = load i8, i8* %2, align 1, !dbg !15747
  %4 = and i8 %3, 2, !dbg !15748
  %5 = icmp ne i8 %4, 0, !dbg !15749
  ret i1 %5, !dbg !15750
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #10 !dbg !15751 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15756
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15755, metadata !DIExpression()), !dbg !15757
  ret %struct.k_thread* %1, !dbg !15758
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !15759 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15760, !srcloc !14440
  call void @llvm.dbg.value(metadata i32 %1, metadata !14436, metadata !DIExpression()) #23, !dbg !15763
  %2 = icmp eq i32 %1, 0, !dbg !15764
  br i1 %2, label %3, label %8, !dbg !15765

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15766
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #25, !dbg !15767
  %6 = icmp ne i32 %5, 0, !dbg !15765
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !15768
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15769 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15771, metadata !DIExpression()), !dbg !15773
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13706, metadata !DIExpression()) #23, !dbg !15774
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15776, !srcloc !13721
  call void @llvm.dbg.value(metadata i32 undef, metadata !13718, metadata !DIExpression()) #23, !dbg !15778
  call void @llvm.dbg.value(metadata i32 undef, metadata !13719, metadata !DIExpression()) #23, !dbg !15778
  call void @llvm.dbg.value(metadata i32 undef, metadata !13712, metadata !DIExpression()) #23, !dbg !15774
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15779
  br i1 %3, label %5, label %4, !dbg !15780

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 148) #24, !dbg !15781
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15781
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 148) #24, !dbg !15781
  unreachable, !dbg !15781

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !15776
  call void @llvm.dbg.value(metadata i32 %6, metadata !13718, metadata !DIExpression()) #23, !dbg !15778
  call void @llvm.dbg.value(metadata i32 %6, metadata !13712, metadata !DIExpression()) #23, !dbg !15774
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15782
  call void @llvm.dbg.value(metadata i32 %6, metadata !15772, metadata !DIExpression()), !dbg !15773
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !15783
  %8 = load i8, i8* %7, align 4, !dbg !15783
  %9 = and i8 %8, 1, !dbg !15785
  %10 = icmp eq i8 %9, 0, !dbg !15786
  br i1 %10, label %15, label %11, !dbg !15787

11:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !13740, metadata !DIExpression()) #23, !dbg !15788
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13745, metadata !DIExpression()) #23, !dbg !15788
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15791
  br i1 %12, label %14, label %13, !dbg !15792

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.253, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 194) #24, !dbg !15793
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.254, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15793
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 194) #24, !dbg !15793
  unreachable, !dbg !15793

14:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %6, metadata !13740, metadata !DIExpression()) #23, !dbg !15788
  call void @llvm.dbg.value(metadata i32 %6, metadata !13754, metadata !DIExpression()) #23, !dbg !15794
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !15796, !srcloc !13760
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.256, i32 0, i32 0), i32 noundef 1731) #24, !dbg !15797
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11.292, i32 0, i32 0), %struct.k_thread* noundef nonnull %0) #24, !dbg !15797
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.256, i32 0, i32 0), i32 noundef 1731) #24, !dbg !15797
  unreachable, !dbg !15797

15:                                               ; preds = %5
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15801
  %17 = load i8, i8* %16, align 1, !dbg !15801
  %18 = and i8 %17, 8, !dbg !15803
  %19 = icmp eq i8 %18, 0, !dbg !15804
  br i1 %19, label %24, label %20, !dbg !15805

20:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 undef, metadata !13740, metadata !DIExpression()) #23, !dbg !15806
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13745, metadata !DIExpression()) #23, !dbg !15806
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15809
  br i1 %21, label %23, label %22, !dbg !15810

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.253, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 194) #24, !dbg !15811
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.254, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15811
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 194) #24, !dbg !15811
  unreachable, !dbg !15811

23:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i32 %6, metadata !13740, metadata !DIExpression()) #23, !dbg !15806
  call void @llvm.dbg.value(metadata i32 %6, metadata !13754, metadata !DIExpression()) #23, !dbg !15812
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !15814, !srcloc !13760
  br label %39, !dbg !15815

24:                                               ; preds = %15
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #25, !dbg !15816
  %25 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15817
  %26 = icmp eq %struct.k_thread* %25, %0, !dbg !15819
  br i1 %26, label %27, label %35, !dbg !15820

27:                                               ; preds = %24
  %28 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15821, !srcloc !14440
  call void @llvm.dbg.value(metadata i32 %28, metadata !14436, metadata !DIExpression()) #23, !dbg !15824
  %29 = icmp eq i32 %28, 0, !dbg !15825
  br i1 %29, label %30, label %35, !dbg !15826

30:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 undef, metadata !14384, metadata !DIExpression()) #23, !dbg !15827
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14389, metadata !DIExpression()) #23, !dbg !15827
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14393, metadata !DIExpression()) #23, !dbg !15830
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15832
  br i1 %31, label %33, label %32, !dbg !15833

32:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.253, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 225) #24, !dbg !15834
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.254, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15834
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 225) #24, !dbg !15834
  unreachable, !dbg !15834

33:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %6, metadata !14384, metadata !DIExpression()) #23, !dbg !15827
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %6) #24, !dbg !15835
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.256, i32 0, i32 0), i32 noundef 1778) #24, !dbg !15836
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12.293, i32 0, i32 0)) #24, !dbg !15836
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.256, i32 0, i32 0), i32 noundef 1778) #24, !dbg !15836
  unreachable, !dbg !15836

35:                                               ; preds = %27, %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !13740, metadata !DIExpression()) #23, !dbg !15840
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13745, metadata !DIExpression()) #23, !dbg !15840
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15842
  br i1 %36, label %38, label %37, !dbg !15843

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.253, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 194) #24, !dbg !15844
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.254, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15844
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 194) #24, !dbg !15844
  unreachable, !dbg !15844

38:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %6, metadata !13740, metadata !DIExpression()) #23, !dbg !15840
  call void @llvm.dbg.value(metadata i32 %6, metadata !13754, metadata !DIExpression()) #23, !dbg !15845
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !15847, !srcloc !13760
  br label %39, !dbg !15848

39:                                               ; preds = %38, %23
  ret void, !dbg !15848
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15849 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15851, metadata !DIExpression()), !dbg !15852
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15853
  %3 = load i8, i8* %2, align 1, !dbg !15853
  %4 = and i8 %3, 8, !dbg !15855
  %5 = icmp eq i8 %4, 0, !dbg !15856
  br i1 %5, label %6, label %20, !dbg !15857

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !15858
  %8 = or i8 %7, 8, !dbg !15858
  store i8 %8, i8* %2, align 1, !dbg !15858
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #25, !dbg !15860
  br i1 %9, label %10, label %12, !dbg !15862

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13898, metadata !DIExpression()) #23, !dbg !15863
  %11 = and i8 %8, 95, !dbg !15866
  store i8 %11, i8* %2, align 1, !dbg !15866
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13906, metadata !DIExpression()) #23, !dbg !15867
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #24, !dbg !15869
  br label %12, !dbg !15870

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15871
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !15871
  %15 = icmp eq %union.anon* %14, null, !dbg !15873
  br i1 %15, label %17, label %16, !dbg !15874

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #25, !dbg !15875
  br label %17, !dbg !15877

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #25, !dbg !15878
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !15879
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #25, !dbg !15880
  tail call fastcc void @update_cache(i32 noundef 1) #25, !dbg !15881
  br label %20, !dbg !15882

20:                                               ; preds = %17, %1
  ret void, !dbg !15883
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !15884 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15888, metadata !DIExpression()), !dbg !15890
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !15891
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15889, metadata !DIExpression()), !dbg !15890
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15892
  br i1 %3, label %10, label %4, !dbg !15893

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #25, !dbg !15894
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #25, !dbg !15896
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15897, metadata !DIExpression()), !dbg !15903
  call void @llvm.dbg.value(metadata i32 0, metadata !15902, metadata !DIExpression()), !dbg !15903
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 8, i32 1, !dbg !15905
  store i32 0, i32* %7, align 4, !dbg !15906
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #25, !dbg !15907
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !15891
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !15889, metadata !DIExpression()), !dbg !15890
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !15892
  br i1 %9, label %10, label %4, !dbg !15893, !llvm.loop !15908

10:                                               ; preds = %4, %1
  ret void, !dbg !15910
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !15911 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15916, metadata !DIExpression()), !dbg !15919
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15915, metadata !DIExpression()), !dbg !15919
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13706, metadata !DIExpression()) #23, !dbg !15920
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15922, !srcloc !13721
  call void @llvm.dbg.value(metadata i32 undef, metadata !13718, metadata !DIExpression()) #23, !dbg !15924
  call void @llvm.dbg.value(metadata i32 undef, metadata !13719, metadata !DIExpression()) #23, !dbg !15924
  call void @llvm.dbg.value(metadata i32 undef, metadata !13712, metadata !DIExpression()) #23, !dbg !15920
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15925
  br i1 %4, label %6, label %5, !dbg !15926

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 148) #24, !dbg !15927
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15927
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 148) #24, !dbg !15927
  unreachable, !dbg !15927

6:                                                ; preds = %2
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !15922
  call void @llvm.dbg.value(metadata i32 %7, metadata !13718, metadata !DIExpression()) #23, !dbg !15924
  call void @llvm.dbg.value(metadata i32 %7, metadata !13712, metadata !DIExpression()) #23, !dbg !15920
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15928
  call void @llvm.dbg.value(metadata i32 %7, metadata !15917, metadata !DIExpression()), !dbg !15919
  call void @llvm.dbg.value(metadata i32 0, metadata !15918, metadata !DIExpression()), !dbg !15919
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15929
  %9 = load i8, i8* %8, align 1, !dbg !15929
  %10 = and i8 %9, 8, !dbg !15931
  %11 = icmp eq i8 %10, 0, !dbg !15932
  br i1 %11, label %12, label %35, !dbg !15933

12:                                               ; preds = %6
  %13 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %13, metadata !15916, metadata !DIExpression()), !dbg !15919
  %14 = icmp eq i64 %13, 0, !dbg !15934
  br i1 %14, label %35, label %15, !dbg !15936

15:                                               ; preds = %12
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15937
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !15939
  br i1 %17, label %35, label %18, !dbg !15940

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15941
  %20 = load %union.anon*, %union.anon** %19, align 8, !dbg !15941
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %16, i32 0, i32 3, !dbg !15942
  %22 = icmp eq %union.anon* %20, %21, !dbg !15943
  br i1 %22, label %35, label %23, !dbg !15944

23:                                               ; preds = %18
  %24 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15945, !srcloc !14440
  call void @llvm.dbg.value(metadata i32 %24, metadata !14436, metadata !DIExpression()) #23, !dbg !15951
  %25 = icmp eq i32 %24, 0, !dbg !15952
  br i1 %25, label %27, label %26, !dbg !15953

26:                                               ; preds = %23
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.256, i32 0, i32 0), i32 noundef 1809) #24, !dbg !15954
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13.294, i32 0, i32 0)) #24, !dbg !15954
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.256, i32 0, i32 0), i32 noundef 1809) #24, !dbg !15954
  unreachable, !dbg !15954

27:                                               ; preds = %23
  %28 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15956
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !15957
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %28, %union.anon* noundef nonnull %29) #25, !dbg !15958
  %30 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15959
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %30, [1 x i64] %1) #25, !dbg !15960
  call void @llvm.dbg.value(metadata i32 undef, metadata !14384, metadata !DIExpression()) #23, !dbg !15961
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14389, metadata !DIExpression()) #23, !dbg !15961
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14393, metadata !DIExpression()) #23, !dbg !15963
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15965
  br i1 %31, label %33, label %32, !dbg !15966

32:                                               ; preds = %27
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.253, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 225) #24, !dbg !15967
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.254, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15967
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 225) #24, !dbg !15967
  unreachable, !dbg !15967

33:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %7, metadata !14384, metadata !DIExpression()) #23, !dbg !15961
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %7) #24, !dbg !15968
  call void @llvm.dbg.value(metadata i32 %34, metadata !15918, metadata !DIExpression()), !dbg !15919
  br label %40, !dbg !15969

35:                                               ; preds = %15, %18, %12, %6
  %36 = phi i32 [ 0, %6 ], [ -16, %12 ], [ -45, %18 ], [ -45, %15 ], !dbg !15970
  call void @llvm.dbg.value(metadata i32 %36, metadata !15918, metadata !DIExpression()), !dbg !15919
  call void @llvm.dbg.value(metadata i32 undef, metadata !13740, metadata !DIExpression()) #23, !dbg !15971
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13745, metadata !DIExpression()) #23, !dbg !15971
  %37 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15973
  br i1 %37, label %39, label %38, !dbg !15974

38:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.253, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 194) #24, !dbg !15975
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.254, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15975
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 194) #24, !dbg !15975
  unreachable, !dbg !15975

39:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %7, metadata !13740, metadata !DIExpression()) #23, !dbg !15971
  call void @llvm.dbg.value(metadata i32 %7, metadata !13754, metadata !DIExpression()) #23, !dbg !15976
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !15978, !srcloc !13760
  br label %40, !dbg !15979

40:                                               ; preds = %39, %33
  %41 = phi i32 [ %36, %39 ], [ %34, %33 ], !dbg !15919
  ret i32 %41, !dbg !15980
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !15981 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15985, metadata !DIExpression()), !dbg !15993
  call void @llvm.dbg.value(metadata i32 %1, metadata !15986, metadata !DIExpression()), !dbg !15993
  call void @llvm.dbg.value(metadata i8* %2, metadata !15987, metadata !DIExpression()), !dbg !15993
  call void @llvm.dbg.value(metadata i8 0, metadata !15989, metadata !DIExpression()), !dbg !15993
  call void @llvm.dbg.value(metadata i32 0, metadata !15990, metadata !DIExpression()), !dbg !15994
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13706, metadata !DIExpression()) #23, !dbg !15995
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15997, !srcloc !13721
  call void @llvm.dbg.value(metadata i32 undef, metadata !13718, metadata !DIExpression()) #23, !dbg !15999
  call void @llvm.dbg.value(metadata i32 undef, metadata !13719, metadata !DIExpression()) #23, !dbg !15999
  call void @llvm.dbg.value(metadata i32 undef, metadata !13712, metadata !DIExpression()) #23, !dbg !15995
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16000
  br i1 %5, label %7, label %6, !dbg !16001

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 148) #24, !dbg !16002
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16002
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 148) #24, !dbg !16002
  unreachable, !dbg !16002

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !13718, metadata !DIExpression()) #23, !dbg !15999
  call void @llvm.dbg.value(metadata i32 undef, metadata !13712, metadata !DIExpression()) #23, !dbg !15995
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16003
  call void @llvm.dbg.value(metadata i32 undef, metadata !15992, metadata !DIExpression()), !dbg !15994
  call void @llvm.dbg.value(metadata i8 poison, metadata !15989, metadata !DIExpression()), !dbg !15993
  call void @llvm.dbg.value(metadata i32 undef, metadata !15990, metadata !DIExpression()), !dbg !15994
  %8 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %9 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %8) #25, !dbg !16004
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15988, metadata !DIExpression()), !dbg !15993
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !16007
  br i1 %10, label %15, label %11, !dbg !16009

11:                                               ; preds = %7
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16010, metadata !DIExpression()), !dbg !16018
  call void @llvm.dbg.value(metadata i32 %1, metadata !16016, metadata !DIExpression()), !dbg !16018
  call void @llvm.dbg.value(metadata i8* %2, metadata !16017, metadata !DIExpression()), !dbg !16018
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15897, metadata !DIExpression()), !dbg !16021
  call void @llvm.dbg.value(metadata i32 %1, metadata !15902, metadata !DIExpression()), !dbg !16021
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 8, i32 1, !dbg !16023
  store i32 %1, i32* %12, align 4, !dbg !16024
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16025
  store i8* %2, i8** %13, align 4, !dbg !16026
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %9) #25, !dbg !16027
  %14 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %9) #25, !dbg !16028
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %9) #25, !dbg !16029
  call void @llvm.dbg.value(metadata i8 1, metadata !15989, metadata !DIExpression()), !dbg !15993
  br label %15, !dbg !16030

15:                                               ; preds = %7, %11
  call void @llvm.dbg.value(metadata i8 poison, metadata !15989, metadata !DIExpression()), !dbg !15993
  call void @llvm.dbg.value(metadata i32 undef, metadata !13740, metadata !DIExpression()) #23, !dbg !16031
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13745, metadata !DIExpression()) #23, !dbg !16031
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16033
  br i1 %16, label %18, label %17, !dbg !16034

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.253, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 194) #24, !dbg !16035
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.254, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16035
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.251, i32 0, i32 0), i32 noundef 194) #24, !dbg !16035
  unreachable, !dbg !16035

18:                                               ; preds = %15
  %19 = xor i1 %10, true, !dbg !15993
  %20 = extractvalue { i32, i32 } %4, 0, !dbg !15997
  call void @llvm.dbg.value(metadata i32 %20, metadata !13718, metadata !DIExpression()) #23, !dbg !15999
  call void @llvm.dbg.value(metadata i32 %20, metadata !13712, metadata !DIExpression()) #23, !dbg !15995
  call void @llvm.dbg.value(metadata i32 %20, metadata !15992, metadata !DIExpression()), !dbg !15994
  call void @llvm.dbg.value(metadata i32 undef, metadata !13740, metadata !DIExpression()) #23, !dbg !16031
  call void @llvm.dbg.value(metadata i32 undef, metadata !13754, metadata !DIExpression()) #23, !dbg !16036
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !16038, !srcloc !13760
  call void @llvm.dbg.value(metadata i8 poison, metadata !15989, metadata !DIExpression()), !dbg !15993
  call void @llvm.dbg.value(metadata i32 undef, metadata !15990, metadata !DIExpression()), !dbg !15994
  ret i1 %19, !dbg !16039
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !16040 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16046, metadata !DIExpression()), !dbg !16051
  call void @llvm.dbg.value(metadata i64 undef, metadata !16048, metadata !DIExpression()), !dbg !16051
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16045, metadata !DIExpression()), !dbg !16051
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !16047, metadata !DIExpression()), !dbg !16051
  call void @llvm.dbg.value(metadata i8** %4, metadata !16049, metadata !DIExpression()), !dbg !16051
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #25, !dbg !16052
  call void @llvm.dbg.value(metadata i32 %6, metadata !16050, metadata !DIExpression()), !dbg !16051
  %7 = icmp eq i8** %4, null, !dbg !16053
  br i1 %7, label %12, label %8, !dbg !16055

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16056
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16058
  %11 = load i8*, i8** %10, align 4, !dbg !16058
  store i8* %11, i8** %4, align 4, !dbg !16059
  br label %12, !dbg !16060

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !16061
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !16062 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #24, !dbg !16064
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #24, !dbg !16065
  ret void, !dbg !16066
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16067 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !16077, metadata !DIExpression()), !dbg !16094
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16075, metadata !DIExpression()), !dbg !16094
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !16076, metadata !DIExpression()), !dbg !16094
  %5 = icmp eq i64 %4, -1, !dbg !16095
  br i1 %5, label %63, label %6, !dbg !16097

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16098
  %8 = tail call fastcc zeroext i1 @sys_dnode_is_linked.299(%struct._dnode* noundef %7) #25, !dbg !16098
  br i1 %8, label %9, label %10, !dbg !16101

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.301, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.302, i32 0, i32 0), i32 noundef 99) #24, !dbg !16102
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.303, i32 0, i32 0)) #24, !dbg !16102
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.302, i32 0, i32 0), i32 noundef 99) #24, !dbg !16102
  unreachable, !dbg !16102

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !16104
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %11, align 8, !dbg !16105
  call void @llvm.dbg.value(metadata i32 0, metadata !16078, metadata !DIExpression()), !dbg !16106
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16107, metadata !DIExpression()) #23, !dbg !16114
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16116, !srcloc !16122
  call void @llvm.dbg.value(metadata i32 undef, metadata !16119, metadata !DIExpression()) #23, !dbg !16123
  call void @llvm.dbg.value(metadata i32 undef, metadata !16120, metadata !DIExpression()) #23, !dbg !16123
  call void @llvm.dbg.value(metadata i32 undef, metadata !16113, metadata !DIExpression()) #23, !dbg !16114
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16124
  br i1 %13, label %15, label %14, !dbg !16127

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.305, i32 0, i32 0), i32 noundef 148) #24, !dbg !16128
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.306, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16128
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.305, i32 0, i32 0), i32 noundef 148) #24, !dbg !16128
  unreachable, !dbg !16128

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !16116
  call void @llvm.dbg.value(metadata i32 %16, metadata !16119, metadata !DIExpression()) #23, !dbg !16123
  call void @llvm.dbg.value(metadata i32 %16, metadata !16113, metadata !DIExpression()) #23, !dbg !16114
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16130
  call void @llvm.dbg.value(metadata i32 %16, metadata !16084, metadata !DIExpression()), !dbg !16106
  call void @llvm.dbg.value(metadata i32 undef, metadata !16078, metadata !DIExpression()), !dbg !16106
  %17 = icmp slt i64 %4, -1, !dbg !16131
  br i1 %17, label %18, label %24, !dbg !16132

18:                                               ; preds = %15
  %19 = load i64, i64* @curr_tick, align 8, !dbg !16133
  %20 = add i64 %4, %19, !dbg !16134
  %21 = sub i64 -2, %20, !dbg !16134
  call void @llvm.dbg.value(metadata i64 %21, metadata !16088, metadata !DIExpression()), !dbg !16135
  %22 = icmp sgt i64 %21, 1, !dbg !16136
  %23 = select i1 %22, i64 %21, i64 1, !dbg !16136
  br label %29, !dbg !16137

24:                                               ; preds = %15
  %25 = add nuw nsw i64 %4, 1, !dbg !16138
  %26 = tail call fastcc i32 @elapsed.307() #25, !dbg !16140
  %27 = sext i32 %26 to i64, !dbg !16140
  %28 = add nsw i64 %25, %27, !dbg !16141
  br label %29

29:                                               ; preds = %24, %18
  %30 = phi i64 [ %23, %18 ], [ %28, %24 ], !dbg !16142
  %31 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16143
  store i64 %30, i64* %31, align 8, !dbg !16144
  %32 = tail call fastcc %struct._timeout* @first() #25, !dbg !16145
  call void @llvm.dbg.value(metadata %struct._timeout* %32, metadata !16085, metadata !DIExpression()), !dbg !16147
  %33 = icmp eq %struct._timeout* %32, null, !dbg !16148
  br i1 %33, label %48, label %34, !dbg !16148

34:                                               ; preds = %29, %44
  %35 = phi i64 [ %45, %44 ], [ %30, %29 ], !dbg !16149
  %36 = phi %struct._timeout* [ %46, %44 ], [ %32, %29 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %36, metadata !16085, metadata !DIExpression()), !dbg !16147
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !16153
  %38 = load i64, i64* %37, align 8, !dbg !16153
  %39 = icmp slt i64 %35, %38, !dbg !16154
  br i1 %39, label %40, label %44, !dbg !16155

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !16153
  %42 = sub nsw i64 %38, %35, !dbg !16156
  store i64 %42, i64* %41, align 8, !dbg !16156
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 0, !dbg !16158
  tail call fastcc void @sys_dlist_insert.308(%struct._dnode* noundef nonnull %43, %struct._dnode* noundef nonnull %7) #25, !dbg !16159
  br label %49, !dbg !16160

44:                                               ; preds = %34
  %45 = sub nsw i64 %35, %38, !dbg !16161
  store i64 %45, i64* %31, align 8, !dbg !16161
  %46 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %36) #25, !dbg !16162
  call void @llvm.dbg.value(metadata %struct._timeout* %46, metadata !16085, metadata !DIExpression()), !dbg !16147
  %47 = icmp eq %struct._timeout* %46, null, !dbg !16148
  br i1 %47, label %48, label %34, !dbg !16148, !llvm.loop !16163

48:                                               ; preds = %44, %29
  tail call fastcc void @sys_dlist_append.309(%struct._dnode* noundef nonnull %7) #25, !dbg !16165
  br label %49, !dbg !16168

49:                                               ; preds = %40, %48
  %50 = tail call fastcc %struct._timeout* @first() #25, !dbg !16169
  %51 = icmp eq %struct._timeout* %50, %0, !dbg !16170
  br i1 %51, label %52, label %59, !dbg !16171

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @next_timeout() #25, !dbg !16172
  call void @llvm.dbg.value(metadata i32 %53, metadata !16091, metadata !DIExpression()), !dbg !16173
  %54 = icmp ne i32 %53, 0, !dbg !16174
  %55 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %56 = icmp eq i32 %55, %53
  %57 = select i1 %54, i1 %56, i1 false, !dbg !16176
  br i1 %57, label %59, label %58, !dbg !16176

58:                                               ; preds = %52
  tail call void @sys_clock_set_timeout(i32 noundef %53, i1 noundef zeroext false) #24, !dbg !16177
  br label %59, !dbg !16179

59:                                               ; preds = %58, %52, %49
  call void @llvm.dbg.value(metadata i32 undef, metadata !16180, metadata !DIExpression()) #23, !dbg !16186
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16185, metadata !DIExpression()) #23, !dbg !16186
  %60 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16188
  br i1 %60, label %62, label %61, !dbg !16191

61:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.310, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.305, i32 0, i32 0), i32 noundef 194) #24, !dbg !16192
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.311, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16192
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.305, i32 0, i32 0), i32 noundef 194) #24, !dbg !16192
  unreachable, !dbg !16192

62:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !16180, metadata !DIExpression()) #23, !dbg !16186
  call void @llvm.dbg.value(metadata i32 %16, metadata !16194, metadata !DIExpression()) #23, !dbg !16197
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !16199, !srcloc !16200
  call void @llvm.dbg.value(metadata i32 undef, metadata !16078, metadata !DIExpression()), !dbg !16106
  br label %63

63:                                               ; preds = %3, %62
  ret void, !dbg !16201
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.299(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16202 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16208, metadata !DIExpression()), !dbg !16209
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16210
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16210
  %4 = icmp ne %struct._dnode* %3, null, !dbg !16211
  ret i1 %4, !dbg !16212
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.307() unnamed_addr #1 !dbg !16213 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !16216
  %2 = icmp eq i32 %1, 0, !dbg !16217
  br i1 %2, label %3, label %5, !dbg !16216

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #24, !dbg !16218
  br label %5, !dbg !16216

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !16216
  ret i32 %6, !dbg !16219
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #10 !dbg !16220 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.314() #25, !dbg !16226
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16224, metadata !DIExpression()), !dbg !16227
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !16228
  ret %struct._timeout* %2, !dbg !16229
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.308(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !16230 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16234, metadata !DIExpression()), !dbg !16238
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16235, metadata !DIExpression()), !dbg !16238
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16239
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16239
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16236, metadata !DIExpression()), !dbg !16238
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16240
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !16241
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16242
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !16243
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16244
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16245
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16246
  ret void, !dbg !16247
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #10 !dbg !16248 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16252, metadata !DIExpression()), !dbg !16254
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16255
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.312(%struct._dnode* noundef %2) #25, !dbg !16256
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16253, metadata !DIExpression()), !dbg !16254
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !16257
  ret %struct._timeout* %4, !dbg !16258
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.309(%struct._dnode* noundef %0) unnamed_addr #11 !dbg !16259 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16264, metadata !DIExpression()), !dbg !16267
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16265, metadata !DIExpression()), !dbg !16267
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16268
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !16266, metadata !DIExpression()), !dbg !16267
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16269
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !16270
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16271
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !16272
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !16273
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !16274
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16275
  ret void, !dbg !16276
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !16277 {
  %1 = tail call fastcc %struct._timeout* @first() #25, !dbg !16282
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !16279, metadata !DIExpression()), !dbg !16283
  %2 = tail call fastcc i32 @elapsed.307() #25, !dbg !16284
  call void @llvm.dbg.value(metadata i32 %2, metadata !16280, metadata !DIExpression()), !dbg !16283
  %3 = icmp eq %struct._timeout* %1, null, !dbg !16285
  br i1 %3, label %14, label %4, !dbg !16287

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !16288
  %6 = load i64, i64* %5, align 8, !dbg !16288
  %7 = sext i32 %2 to i64, !dbg !16289
  %8 = sub nsw i64 %6, %7, !dbg !16290
  %9 = icmp sgt i64 %8, 2147483647, !dbg !16291
  br i1 %9, label %14, label %10, !dbg !16292

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !16293
  %12 = select i1 %11, i64 %8, i64 0, !dbg !16293
  %13 = trunc i64 %12 to i32, !dbg !16293
  call void @llvm.dbg.value(metadata i32 %13, metadata !16281, metadata !DIExpression()), !dbg !16283
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !16295
  call void @llvm.dbg.value(metadata i32 %15, metadata !16281, metadata !DIExpression()), !dbg !16283
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16296
  %17 = icmp ne i32 %16, 0, !dbg !16298
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !16299
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !16299
  call void @llvm.dbg.value(metadata i32 %20, metadata !16281, metadata !DIExpression()), !dbg !16283
  ret i32 %20, !dbg !16300
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.312(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !16301 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16305, metadata !DIExpression()), !dbg !16307
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16306, metadata !DIExpression()), !dbg !16307
  %2 = icmp eq %struct._dnode* %0, null, !dbg !16308
  br i1 %2, label %5, label %3, !dbg !16309

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.313(%struct._dnode* noundef nonnull %0) #25, !dbg !16310
  br label %5, !dbg !16309

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !16309
  ret %struct._dnode* %6, !dbg !16311
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.313(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !16312 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16314, metadata !DIExpression()), !dbg !16316
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16315, metadata !DIExpression()), !dbg !16316
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16317
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !16318
  br i1 %3, label %7, label %4, !dbg !16319

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16320
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !16320
  br label %7, !dbg !16319

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !16319
  ret %struct._dnode* %8, !dbg !16321
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.314() unnamed_addr #10 !dbg !16322 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16326, metadata !DIExpression()), !dbg !16327
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.315() #25, !dbg !16328
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !16328
  ret %struct._dnode* %3, !dbg !16329
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.315() unnamed_addr #10 !dbg !16330 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16334, metadata !DIExpression()), !dbg !16335
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !16336
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !16337
  ret i1 %2, !dbg !16338
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16339 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16343, metadata !DIExpression()), !dbg !16348
  call void @llvm.dbg.value(metadata i32 -22, metadata !16344, metadata !DIExpression()), !dbg !16348
  call void @llvm.dbg.value(metadata i32 0, metadata !16345, metadata !DIExpression()), !dbg !16349
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16107, metadata !DIExpression()) #23, !dbg !16350
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16352, !srcloc !16122
  call void @llvm.dbg.value(metadata i32 undef, metadata !16119, metadata !DIExpression()) #23, !dbg !16354
  call void @llvm.dbg.value(metadata i32 undef, metadata !16120, metadata !DIExpression()) #23, !dbg !16354
  call void @llvm.dbg.value(metadata i32 undef, metadata !16113, metadata !DIExpression()) #23, !dbg !16350
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16355
  br i1 %3, label %5, label %4, !dbg !16356

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.305, i32 0, i32 0), i32 noundef 148) #24, !dbg !16357
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.306, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16357
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.305, i32 0, i32 0), i32 noundef 148) #24, !dbg !16357
  unreachable, !dbg !16357

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16119, metadata !DIExpression()) #23, !dbg !16354
  call void @llvm.dbg.value(metadata i32 undef, metadata !16113, metadata !DIExpression()) #23, !dbg !16350
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16358
  call void @llvm.dbg.value(metadata i32 undef, metadata !16347, metadata !DIExpression()), !dbg !16349
  call void @llvm.dbg.value(metadata i32 -22, metadata !16344, metadata !DIExpression()), !dbg !16348
  call void @llvm.dbg.value(metadata i32 undef, metadata !16345, metadata !DIExpression()), !dbg !16349
  %6 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !16344, metadata !DIExpression()), !dbg !16348
  %7 = tail call fastcc zeroext i1 @sys_dnode_is_linked.299(%struct._dnode* noundef %6) #25, !dbg !16359
  br i1 %7, label %8, label %9, !dbg !16363

8:                                                ; preds = %5
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #25, !dbg !16364
  call void @llvm.dbg.value(metadata i32 0, metadata !16344, metadata !DIExpression()), !dbg !16348
  br label %9, !dbg !16366

9:                                                ; preds = %5, %8
  %10 = phi i32 [ 0, %8 ], [ -22, %5 ], !dbg !16348
  call void @llvm.dbg.value(metadata i32 %10, metadata !16344, metadata !DIExpression()), !dbg !16348
  call void @llvm.dbg.value(metadata i32 undef, metadata !16180, metadata !DIExpression()) #23, !dbg !16367
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16185, metadata !DIExpression()) #23, !dbg !16367
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16369
  br i1 %11, label %13, label %12, !dbg !16370

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.310, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.305, i32 0, i32 0), i32 noundef 194) #24, !dbg !16371
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.311, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16371
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.305, i32 0, i32 0), i32 noundef 194) #24, !dbg !16371
  unreachable, !dbg !16371

13:                                               ; preds = %9
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !16352
  call void @llvm.dbg.value(metadata i32 %14, metadata !16119, metadata !DIExpression()) #23, !dbg !16354
  call void @llvm.dbg.value(metadata i32 %14, metadata !16113, metadata !DIExpression()) #23, !dbg !16350
  call void @llvm.dbg.value(metadata i32 %14, metadata !16347, metadata !DIExpression()), !dbg !16349
  call void @llvm.dbg.value(metadata i32 undef, metadata !16180, metadata !DIExpression()) #23, !dbg !16367
  call void @llvm.dbg.value(metadata i32 undef, metadata !16194, metadata !DIExpression()) #23, !dbg !16372
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !16374, !srcloc !16200
  call void @llvm.dbg.value(metadata i32 %10, metadata !16344, metadata !DIExpression()), !dbg !16348
  call void @llvm.dbg.value(metadata i32 undef, metadata !16345, metadata !DIExpression()), !dbg !16349
  ret i32 %10, !dbg !16375
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #11 !dbg !16376 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16378, metadata !DIExpression()), !dbg !16379
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #25, !dbg !16380
  %3 = icmp eq %struct._timeout* %2, null, !dbg !16382
  br i1 %3, label %10, label %4, !dbg !16383

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16384
  %6 = load i64, i64* %5, align 8, !dbg !16384
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !16386
  %8 = load i64, i64* %7, align 8, !dbg !16387
  %9 = add nsw i64 %8, %6, !dbg !16387
  store i64 %9, i64* %7, align 8, !dbg !16387
  br label %10, !dbg !16388

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16389
  tail call fastcc void @sys_dlist_remove.318(%struct._dnode* noundef %11) #25, !dbg !16390
  ret void, !dbg !16391
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.318(%struct._dnode* nocapture noundef %0) unnamed_addr #11 !dbg !16392 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16396, metadata !DIExpression()), !dbg !16399
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16400
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16400
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16397, metadata !DIExpression()), !dbg !16399
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16401
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !16401
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !16398, metadata !DIExpression()), !dbg !16399
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !16402
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !16403
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !16404
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !16405
  tail call fastcc void @sys_dnode_init.319(%struct._dnode* noundef %0) #25, !dbg !16406
  ret void, !dbg !16407
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.319(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !16408 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16410, metadata !DIExpression()), !dbg !16411
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16412
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !16413
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16414
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !16415
  ret void, !dbg !16416
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16417 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16423, metadata !DIExpression()), !dbg !16428
  call void @llvm.dbg.value(metadata i64 0, metadata !16424, metadata !DIExpression()), !dbg !16428
  call void @llvm.dbg.value(metadata i32 0, metadata !16425, metadata !DIExpression()), !dbg !16429
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16107, metadata !DIExpression()) #23, !dbg !16430
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16432, !srcloc !16122
  call void @llvm.dbg.value(metadata i32 undef, metadata !16119, metadata !DIExpression()) #23, !dbg !16434
  call void @llvm.dbg.value(metadata i32 undef, metadata !16120, metadata !DIExpression()) #23, !dbg !16434
  call void @llvm.dbg.value(metadata i32 undef, metadata !16113, metadata !DIExpression()) #23, !dbg !16430
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16435
  br i1 %3, label %5, label %4, !dbg !16436

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.305, i32 0, i32 0), i32 noundef 148) #24, !dbg !16437
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.306, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16437
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.305, i32 0, i32 0), i32 noundef 148) #24, !dbg !16437
  unreachable, !dbg !16437

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16119, metadata !DIExpression()) #23, !dbg !16434
  call void @llvm.dbg.value(metadata i32 undef, metadata !16113, metadata !DIExpression()) #23, !dbg !16430
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16438
  call void @llvm.dbg.value(metadata i32 undef, metadata !16427, metadata !DIExpression()), !dbg !16429
  call void @llvm.dbg.value(metadata i64 0, metadata !16424, metadata !DIExpression()), !dbg !16428
  call void @llvm.dbg.value(metadata i32 undef, metadata !16425, metadata !DIExpression()), !dbg !16429
  %6 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #25, !dbg !16439
  call void @llvm.dbg.value(metadata i64 %6, metadata !16424, metadata !DIExpression()), !dbg !16428
  call void @llvm.dbg.value(metadata i32 undef, metadata !16180, metadata !DIExpression()) #23, !dbg !16442
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16185, metadata !DIExpression()) #23, !dbg !16442
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16444
  br i1 %7, label %9, label %8, !dbg !16445

8:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.310, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.305, i32 0, i32 0), i32 noundef 194) #24, !dbg !16446
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.311, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16446
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.305, i32 0, i32 0), i32 noundef 194) #24, !dbg !16446
  unreachable, !dbg !16446

9:                                                ; preds = %5
  %10 = extractvalue { i32, i32 } %2, 0, !dbg !16432
  call void @llvm.dbg.value(metadata i32 %10, metadata !16119, metadata !DIExpression()) #23, !dbg !16434
  call void @llvm.dbg.value(metadata i32 %10, metadata !16113, metadata !DIExpression()) #23, !dbg !16430
  call void @llvm.dbg.value(metadata i32 %10, metadata !16427, metadata !DIExpression()), !dbg !16429
  call void @llvm.dbg.value(metadata i32 undef, metadata !16180, metadata !DIExpression()) #23, !dbg !16442
  call void @llvm.dbg.value(metadata i32 undef, metadata !16194, metadata !DIExpression()) #23, !dbg !16447
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !16449, !srcloc !16200
  call void @llvm.dbg.value(metadata i64 %6, metadata !16424, metadata !DIExpression()), !dbg !16428
  call void @llvm.dbg.value(metadata i32 undef, metadata !16425, metadata !DIExpression()), !dbg !16429
  ret i64 %6, !dbg !16450
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !16451 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16453, metadata !DIExpression()), !dbg !16457
  call void @llvm.dbg.value(metadata i64 0, metadata !16454, metadata !DIExpression()), !dbg !16457
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.320(%struct._timeout* noundef %0) #25, !dbg !16458
  br i1 %2, label %21, label %3, !dbg !16460

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #25, !dbg !16461
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !16455, metadata !DIExpression()), !dbg !16462
  call void @llvm.dbg.value(metadata i64 0, metadata !16454, metadata !DIExpression()), !dbg !16457
  %5 = icmp eq %struct._timeout* %4, null, !dbg !16463
  br i1 %5, label %16, label %6, !dbg !16465

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !16455, metadata !DIExpression()), !dbg !16462
  call void @llvm.dbg.value(metadata i64 %8, metadata !16454, metadata !DIExpression()), !dbg !16457
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !16466
  %10 = load i64, i64* %9, align 8, !dbg !16466
  %11 = add nsw i64 %10, %8, !dbg !16468
  call void @llvm.dbg.value(metadata i64 %11, metadata !16454, metadata !DIExpression()), !dbg !16457
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !16469
  br i1 %12, label %16, label %13, !dbg !16471

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #25, !dbg !16472
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !16455, metadata !DIExpression()), !dbg !16462
  call void @llvm.dbg.value(metadata i64 %11, metadata !16454, metadata !DIExpression()), !dbg !16457
  %15 = icmp eq %struct._timeout* %14, null, !dbg !16463
  br i1 %15, label %16, label %6, !dbg !16465, !llvm.loop !16473

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !16457
  call void @llvm.dbg.value(metadata i64 %17, metadata !16454, metadata !DIExpression()), !dbg !16457
  %18 = tail call fastcc i32 @elapsed.307() #25, !dbg !16475
  %19 = sext i32 %18 to i64, !dbg !16475
  %20 = sub nsw i64 %17, %19, !dbg !16476
  br label %21, !dbg !16477

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !16457
  ret i64 %22, !dbg !16478
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.320(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16479 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16483, metadata !DIExpression()), !dbg !16484
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16485
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.299(%struct._dnode* noundef %2) #25, !dbg !16486
  %4 = xor i1 %3, true, !dbg !16487
  ret i1 %4, !dbg !16488
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16489 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16491, metadata !DIExpression()), !dbg !16496
  call void @llvm.dbg.value(metadata i64 0, metadata !16492, metadata !DIExpression()), !dbg !16496
  call void @llvm.dbg.value(metadata i32 0, metadata !16493, metadata !DIExpression()), !dbg !16497
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16107, metadata !DIExpression()) #23, !dbg !16498
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16500, !srcloc !16122
  call void @llvm.dbg.value(metadata i32 undef, metadata !16119, metadata !DIExpression()) #23, !dbg !16502
  call void @llvm.dbg.value(metadata i32 undef, metadata !16120, metadata !DIExpression()) #23, !dbg !16502
  call void @llvm.dbg.value(metadata i32 undef, metadata !16113, metadata !DIExpression()) #23, !dbg !16498
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16503
  br i1 %3, label %5, label %4, !dbg !16504

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.305, i32 0, i32 0), i32 noundef 148) #24, !dbg !16505
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.306, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16505
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.305, i32 0, i32 0), i32 noundef 148) #24, !dbg !16505
  unreachable, !dbg !16505

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16119, metadata !DIExpression()) #23, !dbg !16502
  call void @llvm.dbg.value(metadata i32 undef, metadata !16113, metadata !DIExpression()) #23, !dbg !16498
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16506
  call void @llvm.dbg.value(metadata i32 undef, metadata !16495, metadata !DIExpression()), !dbg !16497
  call void @llvm.dbg.value(metadata i64 0, metadata !16492, metadata !DIExpression()), !dbg !16496
  call void @llvm.dbg.value(metadata i32 undef, metadata !16493, metadata !DIExpression()), !dbg !16497
  %6 = load i64, i64* @curr_tick, align 8, !dbg !16507
  %7 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #25, !dbg !16510
  call void @llvm.dbg.value(metadata !DIArgList(i64 %6, i64 %7), metadata !16492, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !16496
  call void @llvm.dbg.value(metadata i32 undef, metadata !16180, metadata !DIExpression()) #23, !dbg !16511
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16185, metadata !DIExpression()) #23, !dbg !16511
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16513
  br i1 %8, label %10, label %9, !dbg !16514

9:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.310, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.305, i32 0, i32 0), i32 noundef 194) #24, !dbg !16515
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.311, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16515
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.305, i32 0, i32 0), i32 noundef 194) #24, !dbg !16515
  unreachable, !dbg !16515

10:                                               ; preds = %5
  %11 = extractvalue { i32, i32 } %2, 0, !dbg !16500
  call void @llvm.dbg.value(metadata i32 %11, metadata !16119, metadata !DIExpression()) #23, !dbg !16502
  call void @llvm.dbg.value(metadata i32 %11, metadata !16113, metadata !DIExpression()) #23, !dbg !16498
  call void @llvm.dbg.value(metadata i32 %11, metadata !16495, metadata !DIExpression()), !dbg !16497
  call void @llvm.dbg.value(metadata !DIArgList(i64 %7, i64 %6), metadata !16492, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !16496
  call void @llvm.dbg.value(metadata i32 undef, metadata !16180, metadata !DIExpression()) #23, !dbg !16511
  call void @llvm.dbg.value(metadata i32 undef, metadata !16194, metadata !DIExpression()) #23, !dbg !16516
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !16518, !srcloc !16200
  call void @llvm.dbg.value(metadata i32 undef, metadata !16493, metadata !DIExpression()), !dbg !16497
  %12 = add i64 %7, %6, !dbg !16519
  ret i64 %12, !dbg !16520
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !16521 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !16523, metadata !DIExpression()), !dbg !16527
  call void @llvm.dbg.value(metadata i32 0, metadata !16524, metadata !DIExpression()), !dbg !16528
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16107, metadata !DIExpression()) #23, !dbg !16529
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16531, !srcloc !16122
  call void @llvm.dbg.value(metadata i32 undef, metadata !16119, metadata !DIExpression()) #23, !dbg !16533
  call void @llvm.dbg.value(metadata i32 undef, metadata !16120, metadata !DIExpression()) #23, !dbg !16533
  call void @llvm.dbg.value(metadata i32 undef, metadata !16113, metadata !DIExpression()) #23, !dbg !16529
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16534
  br i1 %2, label %4, label %3, !dbg !16535

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.305, i32 0, i32 0), i32 noundef 148) #24, !dbg !16536
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.306, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16536
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.305, i32 0, i32 0), i32 noundef 148) #24, !dbg !16536
  unreachable, !dbg !16536

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !16119, metadata !DIExpression()) #23, !dbg !16533
  call void @llvm.dbg.value(metadata i32 undef, metadata !16113, metadata !DIExpression()) #23, !dbg !16529
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16537
  call void @llvm.dbg.value(metadata i32 undef, metadata !16526, metadata !DIExpression()), !dbg !16528
  call void @llvm.dbg.value(metadata i32 -1, metadata !16523, metadata !DIExpression()), !dbg !16527
  call void @llvm.dbg.value(metadata i32 undef, metadata !16524, metadata !DIExpression()), !dbg !16528
  %5 = tail call fastcc i32 @next_timeout() #25, !dbg !16538
  call void @llvm.dbg.value(metadata i32 %5, metadata !16523, metadata !DIExpression()), !dbg !16527
  call void @llvm.dbg.value(metadata i32 undef, metadata !16180, metadata !DIExpression()) #23, !dbg !16541
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16185, metadata !DIExpression()) #23, !dbg !16541
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16543
  br i1 %6, label %8, label %7, !dbg !16544

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.310, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.305, i32 0, i32 0), i32 noundef 194) #24, !dbg !16545
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.311, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16545
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.305, i32 0, i32 0), i32 noundef 194) #24, !dbg !16545
  unreachable, !dbg !16545

8:                                                ; preds = %4
  %9 = extractvalue { i32, i32 } %1, 0, !dbg !16531
  call void @llvm.dbg.value(metadata i32 %9, metadata !16119, metadata !DIExpression()) #23, !dbg !16533
  call void @llvm.dbg.value(metadata i32 %9, metadata !16113, metadata !DIExpression()) #23, !dbg !16529
  call void @llvm.dbg.value(metadata i32 %9, metadata !16526, metadata !DIExpression()), !dbg !16528
  call void @llvm.dbg.value(metadata i32 undef, metadata !16180, metadata !DIExpression()) #23, !dbg !16541
  call void @llvm.dbg.value(metadata i32 undef, metadata !16194, metadata !DIExpression()) #23, !dbg !16546
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !16548, !srcloc !16200
  call void @llvm.dbg.value(metadata i32 %5, metadata !16523, metadata !DIExpression()), !dbg !16527
  call void @llvm.dbg.value(metadata i32 undef, metadata !16524, metadata !DIExpression()), !dbg !16528
  ret i32 %5, !dbg !16549
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !16550 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16552, metadata !DIExpression()), !dbg !16562
  call void @llvm.dbg.value(metadata i1 %1, metadata !16553, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16562
  call void @llvm.dbg.value(metadata i32 0, metadata !16554, metadata !DIExpression()), !dbg !16563
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16107, metadata !DIExpression()) #23, !dbg !16564
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16566, !srcloc !16122
  call void @llvm.dbg.value(metadata i32 undef, metadata !16119, metadata !DIExpression()) #23, !dbg !16568
  call void @llvm.dbg.value(metadata i32 undef, metadata !16120, metadata !DIExpression()) #23, !dbg !16568
  call void @llvm.dbg.value(metadata i32 undef, metadata !16113, metadata !DIExpression()) #23, !dbg !16564
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16569
  br i1 %4, label %6, label %5, !dbg !16570

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.305, i32 0, i32 0), i32 noundef 148) #24, !dbg !16571
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.306, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16571
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.305, i32 0, i32 0), i32 noundef 148) #24, !dbg !16571
  unreachable, !dbg !16571

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !16119, metadata !DIExpression()) #23, !dbg !16568
  call void @llvm.dbg.value(metadata i32 undef, metadata !16113, metadata !DIExpression()) #23, !dbg !16564
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16572
  call void @llvm.dbg.value(metadata i32 undef, metadata !16556, metadata !DIExpression()), !dbg !16563
  call void @llvm.dbg.value(metadata i32 undef, metadata !16554, metadata !DIExpression()), !dbg !16563
  %7 = tail call fastcc i32 @next_timeout() #25, !dbg !16573
  call void @llvm.dbg.value(metadata i32 %7, metadata !16557, metadata !DIExpression()), !dbg !16574
  call void @llvm.dbg.value(metadata i1 undef, metadata !16560, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16574
  %8 = icmp slt i32 %7, 2, !dbg !16575
  call void @llvm.dbg.value(metadata i1 %8, metadata !16561, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16574
  %9 = icmp slt i32 %7, %0
  %10 = or i1 %8, %9, !dbg !16576
  call void @llvm.dbg.value(metadata i1 %9, metadata !16560, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16574
  br i1 %10, label %14, label %11, !dbg !16576

11:                                               ; preds = %6
  %12 = icmp sgt i32 %7, %0, !dbg !16578
  %13 = select i1 %12, i32 %0, i32 %7, !dbg !16578
  tail call void @sys_clock_set_timeout(i32 noundef %13, i1 noundef zeroext %1) #24, !dbg !16580
  br label %14, !dbg !16581

14:                                               ; preds = %11, %6
  call void @llvm.dbg.value(metadata i32 undef, metadata !16180, metadata !DIExpression()) #23, !dbg !16582
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16185, metadata !DIExpression()) #23, !dbg !16582
  %15 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16584
  br i1 %15, label %17, label %16, !dbg !16585

16:                                               ; preds = %14
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.310, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.305, i32 0, i32 0), i32 noundef 194) #24, !dbg !16586
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.311, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16586
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.305, i32 0, i32 0), i32 noundef 194) #24, !dbg !16586
  unreachable, !dbg !16586

17:                                               ; preds = %14
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !16566
  call void @llvm.dbg.value(metadata i32 %18, metadata !16119, metadata !DIExpression()) #23, !dbg !16568
  call void @llvm.dbg.value(metadata i32 %18, metadata !16113, metadata !DIExpression()) #23, !dbg !16564
  call void @llvm.dbg.value(metadata i32 %18, metadata !16556, metadata !DIExpression()), !dbg !16563
  call void @llvm.dbg.value(metadata i32 undef, metadata !16180, metadata !DIExpression()) #23, !dbg !16582
  call void @llvm.dbg.value(metadata i32 undef, metadata !16194, metadata !DIExpression()) #23, !dbg !16587
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !16589, !srcloc !16200
  call void @llvm.dbg.value(metadata i32 1, metadata !16554, metadata !DIExpression()), !dbg !16563
  call void @llvm.dbg.value(metadata i32 undef, metadata !16554, metadata !DIExpression()), !dbg !16563
  ret void, !dbg !16590
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !16591 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16595, metadata !DIExpression()), !dbg !16600
  tail call void @z_time_slice(i32 noundef %0) #24, !dbg !16601
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16107, metadata !DIExpression()) #23, !dbg !16602
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16604, !srcloc !16122
  call void @llvm.dbg.value(metadata i32 undef, metadata !16119, metadata !DIExpression()) #23, !dbg !16606
  call void @llvm.dbg.value(metadata i32 undef, metadata !16120, metadata !DIExpression()) #23, !dbg !16606
  call void @llvm.dbg.value(metadata i32 undef, metadata !16113, metadata !DIExpression()) #23, !dbg !16602
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16607
  br i1 %3, label %5, label %4, !dbg !16608

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.305, i32 0, i32 0), i32 noundef 148) #24, !dbg !16609
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.306, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16609
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.305, i32 0, i32 0), i32 noundef 148) #24, !dbg !16609
  unreachable, !dbg !16609

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16119, metadata !DIExpression()) #23, !dbg !16606
  call void @llvm.dbg.value(metadata i32 undef, metadata !16113, metadata !DIExpression()) #23, !dbg !16602
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16610
  call void @llvm.dbg.value(metadata i32 undef, metadata !16596, metadata !DIExpression()), !dbg !16600
  store i32 %0, i32* @announce_remaining, align 4, !dbg !16600
  call void @llvm.dbg.value(metadata i32 undef, metadata !16596, metadata !DIExpression()), !dbg !16600
  %6 = tail call fastcc %struct._timeout* @first() #25, !dbg !16611
  %7 = icmp eq %struct._timeout* %6, null, !dbg !16612
  br i1 %7, label %37, label %8, !dbg !16613

8:                                                ; preds = %5, %30
  %9 = phi %struct._timeout* [ %33, %30 ], [ %6, %5 ]
  %10 = phi { i32, i32 } [ %27, %30 ], [ %2, %5 ]
  %11 = phi i32 [ %32, %30 ], [ %0, %5 ]
  %12 = extractvalue { i32, i32 } %10, 0, !dbg !16600
  %13 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 2, !dbg !16614
  %14 = load i64, i64* %13, align 8, !dbg !16614
  %15 = sext i32 %11 to i64, !dbg !16615
  %16 = icmp sgt i64 %14, %15, !dbg !16616
  br i1 %16, label %35, label %17, !dbg !16617

17:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct._timeout* %9, metadata !16597, metadata !DIExpression()), !dbg !16618
  %18 = trunc i64 %14 to i32, !dbg !16619
  call void @llvm.dbg.value(metadata i32 %18, metadata !16599, metadata !DIExpression()), !dbg !16618
  %19 = sext i32 %18 to i64, !dbg !16620
  %20 = load i64, i64* @curr_tick, align 8, !dbg !16621
  %21 = add i64 %20, %19, !dbg !16621
  store i64 %21, i64* @curr_tick, align 8, !dbg !16621
  store i64 0, i64* %13, align 8, !dbg !16622
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %9) #25, !dbg !16623
  call void @llvm.dbg.value(metadata i32 undef, metadata !16180, metadata !DIExpression()) #23, !dbg !16624
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16185, metadata !DIExpression()) #23, !dbg !16624
  %22 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16626
  br i1 %22, label %24, label %23, !dbg !16627

23:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.310, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.305, i32 0, i32 0), i32 noundef 194) #24, !dbg !16628
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.311, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16628
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.305, i32 0, i32 0), i32 noundef 194) #24, !dbg !16628
  unreachable, !dbg !16628

24:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %12, metadata !16180, metadata !DIExpression()) #23, !dbg !16624
  call void @llvm.dbg.value(metadata i32 %12, metadata !16194, metadata !DIExpression()) #23, !dbg !16629
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !16631, !srcloc !16200
  %25 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 1, !dbg !16632
  %26 = load void (%struct._timeout*)*, void (%struct._timeout*)** %25, align 8, !dbg !16632
  tail call void %26(%struct._timeout* noundef nonnull %9) #24, !dbg !16633
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16107, metadata !DIExpression()) #23, !dbg !16634
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16636, !srcloc !16122
  call void @llvm.dbg.value(metadata i32 undef, metadata !16119, metadata !DIExpression()) #23, !dbg !16638
  call void @llvm.dbg.value(metadata i32 undef, metadata !16120, metadata !DIExpression()) #23, !dbg !16638
  call void @llvm.dbg.value(metadata i32 undef, metadata !16113, metadata !DIExpression()) #23, !dbg !16634
  %28 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16639
  br i1 %28, label %30, label %29, !dbg !16640

29:                                               ; preds = %24
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.305, i32 0, i32 0), i32 noundef 148) #24, !dbg !16641
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.306, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16641
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.305, i32 0, i32 0), i32 noundef 148) #24, !dbg !16641
  unreachable, !dbg !16641

30:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !16119, metadata !DIExpression()) #23, !dbg !16638
  call void @llvm.dbg.value(metadata i32 undef, metadata !16113, metadata !DIExpression()) #23, !dbg !16634
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16642
  call void @llvm.dbg.value(metadata i32 undef, metadata !16596, metadata !DIExpression()), !dbg !16600
  %31 = load i32, i32* @announce_remaining, align 4, !dbg !16643
  %32 = sub nsw i32 %31, %18, !dbg !16643
  store i32 %32, i32* @announce_remaining, align 4, !dbg !16600
  call void @llvm.dbg.value(metadata i32 undef, metadata !16596, metadata !DIExpression()), !dbg !16600
  %33 = tail call fastcc %struct._timeout* @first() #25, !dbg !16611
  %34 = icmp eq %struct._timeout* %33, null, !dbg !16612
  br i1 %34, label %37, label %8, !dbg !16613, !llvm.loop !16644

35:                                               ; preds = %8
  %36 = sub nsw i64 %14, %15, !dbg !16646
  store i64 %36, i64* %13, align 8, !dbg !16646
  br label %41, !dbg !16649

37:                                               ; preds = %30, %5
  %38 = phi { i32, i32 } [ %2, %5 ], [ %27, %30 ]
  %39 = phi i32 [ %0, %5 ], [ %32, %30 ], !dbg !16600
  %40 = sext i32 %39 to i64, !dbg !16650
  br label %41, !dbg !16650

41:                                               ; preds = %37, %35
  %42 = phi i64 [ %40, %37 ], [ %15, %35 ], !dbg !16650
  %43 = phi { i32, i32 } [ %38, %37 ], [ %10, %35 ]
  %44 = load i64, i64* @curr_tick, align 8, !dbg !16651
  %45 = add i64 %44, %42, !dbg !16651
  store i64 %45, i64* @curr_tick, align 8, !dbg !16651
  store i32 0, i32* @announce_remaining, align 4, !dbg !16652
  %46 = tail call fastcc i32 @next_timeout() #25, !dbg !16653
  tail call void @sys_clock_set_timeout(i32 noundef %46, i1 noundef zeroext false) #24, !dbg !16654
  call void @llvm.dbg.value(metadata i32 undef, metadata !16180, metadata !DIExpression()) #23, !dbg !16655
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16185, metadata !DIExpression()) #23, !dbg !16655
  %47 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16657
  br i1 %47, label %49, label %48, !dbg !16658

48:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.310, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.305, i32 0, i32 0), i32 noundef 194) #24, !dbg !16659
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.311, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16659
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.305, i32 0, i32 0), i32 noundef 194) #24, !dbg !16659
  unreachable, !dbg !16659

49:                                               ; preds = %41
  %50 = extractvalue { i32, i32 } %43, 0, !dbg !16600
  call void @llvm.dbg.value(metadata i32 %50, metadata !16180, metadata !DIExpression()) #23, !dbg !16655
  call void @llvm.dbg.value(metadata i32 %50, metadata !16194, metadata !DIExpression()) #23, !dbg !16660
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %50) #23, !dbg !16662, !srcloc !16200
  ret void, !dbg !16663
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !16664 {
  call void @llvm.dbg.value(metadata i64 0, metadata !16668, metadata !DIExpression()), !dbg !16672
  call void @llvm.dbg.value(metadata i32 0, metadata !16669, metadata !DIExpression()), !dbg !16673
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16107, metadata !DIExpression()) #23, !dbg !16674
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16676, !srcloc !16122
  call void @llvm.dbg.value(metadata i32 undef, metadata !16119, metadata !DIExpression()) #23, !dbg !16678
  call void @llvm.dbg.value(metadata i32 undef, metadata !16120, metadata !DIExpression()) #23, !dbg !16678
  call void @llvm.dbg.value(metadata i32 undef, metadata !16113, metadata !DIExpression()) #23, !dbg !16674
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16679
  br i1 %2, label %4, label %3, !dbg !16680

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.305, i32 0, i32 0), i32 noundef 148) #24, !dbg !16681
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.306, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16681
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.305, i32 0, i32 0), i32 noundef 148) #24, !dbg !16681
  unreachable, !dbg !16681

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !16119, metadata !DIExpression()) #23, !dbg !16678
  call void @llvm.dbg.value(metadata i32 undef, metadata !16113, metadata !DIExpression()) #23, !dbg !16674
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16682
  call void @llvm.dbg.value(metadata i32 undef, metadata !16671, metadata !DIExpression()), !dbg !16673
  call void @llvm.dbg.value(metadata i64 0, metadata !16668, metadata !DIExpression()), !dbg !16672
  call void @llvm.dbg.value(metadata i32 undef, metadata !16669, metadata !DIExpression()), !dbg !16673
  %5 = load i64, i64* @curr_tick, align 8, !dbg !16683
  %6 = tail call fastcc i32 @elapsed.307() #25, !dbg !16686
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !16668, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !16672
  call void @llvm.dbg.value(metadata i32 undef, metadata !16180, metadata !DIExpression()) #23, !dbg !16687
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16185, metadata !DIExpression()) #23, !dbg !16687
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16689
  br i1 %7, label %9, label %8, !dbg !16690

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.310, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.305, i32 0, i32 0), i32 noundef 194) #24, !dbg !16691
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.311, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16691
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.305, i32 0, i32 0), i32 noundef 194) #24, !dbg !16691
  unreachable, !dbg !16691

9:                                                ; preds = %4
  %10 = extractvalue { i32, i32 } %1, 0, !dbg !16676
  call void @llvm.dbg.value(metadata i32 %10, metadata !16119, metadata !DIExpression()) #23, !dbg !16678
  call void @llvm.dbg.value(metadata i32 %10, metadata !16113, metadata !DIExpression()) #23, !dbg !16674
  call void @llvm.dbg.value(metadata i32 %10, metadata !16671, metadata !DIExpression()), !dbg !16673
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !16668, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !16672
  call void @llvm.dbg.value(metadata !DIArgList(i32 %6, i64 %5), metadata !16668, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !16672
  call void @llvm.dbg.value(metadata i32 undef, metadata !16180, metadata !DIExpression()) #23, !dbg !16687
  call void @llvm.dbg.value(metadata i32 undef, metadata !16194, metadata !DIExpression()) #23, !dbg !16692
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !16694, !srcloc !16200
  call void @llvm.dbg.value(metadata i32 undef, metadata !16669, metadata !DIExpression()), !dbg !16673
  %11 = sext i32 %6 to i64, !dbg !16686
  %12 = add i64 %5, %11, !dbg !16695
  ret i64 %12, !dbg !16696
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !16697 {
  %1 = tail call i64 @sys_clock_tick_get() #25, !dbg !16698
  %2 = trunc i64 %1 to i32, !dbg !16699
  ret i32 %2, !dbg !16700
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !16701 {
  %1 = tail call i64 @sys_clock_tick_get() #25, !dbg !16702
  ret i64 %1, !dbg !16703
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !16704 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16706, metadata !DIExpression()), !dbg !16713
  %2 = icmp eq i32 %0, 0, !dbg !16714
  br i1 %2, label %10, label %3, !dbg !16716

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32.327() #25, !dbg !16717
  call void @llvm.dbg.value(metadata i32 %4, metadata !16707, metadata !DIExpression()), !dbg !16713
  %5 = mul i32 %0, 84, !dbg !16718
  call void @llvm.dbg.value(metadata i32 %5, metadata !16708, metadata !DIExpression()), !dbg !16713
  br label %6, !dbg !16719

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32.327() #25, !dbg !16720
  call void @llvm.dbg.value(metadata i32 %7, metadata !16709, metadata !DIExpression()), !dbg !16721
  %8 = sub i32 %7, %4, !dbg !16722
  %9 = icmp ult i32 %8, %5, !dbg !16724
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !16725
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32.327() unnamed_addr #1 !dbg !16726 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32.328() #25, !dbg !16727
  ret i32 %1, !dbg !16728
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32.328() unnamed_addr #1 !dbg !16729 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #24, !dbg !16730
  ret i32 %1, !dbg !16731
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !16732 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !16736, metadata !DIExpression()), !dbg !16738
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !16739

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #25, !dbg !16740
  br label %14, !dbg !16744

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !16737, metadata !DIExpression()), !dbg !16738
  %6 = icmp slt i64 %2, -1, !dbg !16745
  br i1 %6, label %7, label %9, !dbg !16748

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !16749
  br label %14, !dbg !16750

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #25, !dbg !16752
  %11 = icmp ugt i64 %2, 1, !dbg !16753
  %12 = select i1 %11, i64 %2, i64 1, !dbg !16753
  %13 = add nsw i64 %10, %12, !dbg !16754
  br label %14, !dbg !16755

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !16756
  ret i64 %15, !dbg !16757
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !16758 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.331, i32 0, i32 0)) #24, !dbg !16760
  ret void, !dbg !16761
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { argmemonly nofree nosync nounwind willreturn }
attributes #4 = { argmemonly nofree nounwind willreturn writeonly }
attributes #5 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { nofree nosync nounwind willreturn }
attributes #8 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nounwind }
attributes #24 = { nobuiltin nounwind optsize "no-builtins" }
attributes #25 = { nobuiltin optsize "no-builtins" }
attributes #26 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #27 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #28 = { nounwind readnone }
attributes #29 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!771, !2, !2394, !27, !270, !295, !2396, !2398, !2432, !2434, !305, !356, !2436, !2439, !2450, !2496, !2498, !2526, !2554, !2597, !2669, !2714, !385, !528, !2742, !564, !2747, !574, !599, !807, !2750, !945, !1011, !1317, !1581, !2789, !1696, !1786, !2791, !2877, !2942, !1836, !2945, !1843, !2217, !2963, !2237, !2965, !2355, !2968}
!llvm.ident = !{!2970, !2970, !2970, !2970, !2970, !2970, !2970, !2970, !2970, !2970, !2970, !2970, !2970, !2970, !2970, !2970, !2970, !2970, !2970, !2970, !2970, !2970, !2970, !2970, !2970, !2970, !2970, !2970, !2970, !2970, !2970, !2970, !2970, !2970, !2970, !2970, !2970, !2970, !2970, !2970, !2970, !2970, !2970, !2970, !2970, !2970, !2970, !2970, !2970, !2970}
!llvm.module.flags = !{!2971, !2972, !2973, !2974, !2975, !2976, !2977, !2978, !2979}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pi/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pi")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 97, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pi")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 5440, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 85)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 2720, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "tthread", scope: !27, file: !125, line: 29, type: !141, isLocal: true, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !122, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/arch/smp/pi/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pi")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !106, !108, !113, !114, !118, !119, !120}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!103 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !104, line: 22, baseType: !105)
!104 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!105 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!107 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!108 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !109, line: 46, baseType: !110)
!109 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !111, size: 32)
!111 = !DISubroutineType(types: !112)
!112 = !{null, !113, !113, !113}
!113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!114 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !115, line: 46, baseType: !116)
!115 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!116 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !117)
!117 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!118 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!119 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!120 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !121)
!121 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!122 = !{!123, !25, !134, !139}
!123 = !DIGlobalVariableExpression(var: !124, expr: !DIExpression())
!124 = distinct !DIGlobalVariable(name: "tstack", scope: !27, file: !125, line: 28, type: !126, isLocal: true, isDefinition: true, align: 512)
!125 = !DIFile(filename: "zephyr/samples/arch/smp/pi/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!126 = !DICompositeType(tag: DW_TAG_array_type, baseType: !127, size: 573440, elements: !131)
!127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !128, line: 47, size: 8, elements: !129)
!128 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!129 = !{!130}
!130 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !127, file: !128, line: 48, baseType: !107, size: 8)
!131 = !{!132, !133}
!132 = !DISubrange(count: 16)
!133 = !DISubrange(count: 4480)
!134 = !DIGlobalVariableExpression(var: !135, expr: !DIExpression())
!135 = distinct !DIGlobalVariable(name: "buffer", scope: !27, file: !125, line: 30, type: !136, isLocal: true, isDefinition: true)
!136 = !DICompositeType(tag: DW_TAG_array_type, baseType: !107, size: 30848, elements: !137)
!137 = !{!132, !138}
!138 = !DISubrange(count: 241)
!139 = !DIGlobalVariableExpression(var: !140, expr: !DIExpression())
!140 = distinct !DIGlobalVariable(name: "counter", scope: !27, file: !125, line: 31, type: !103, isLocal: true, isDefinition: true)
!141 = !DICompositeType(tag: DW_TAG_array_type, baseType: !142, size: 20480, elements: !267)
!142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !143, line: 245, size: 1280, elements: !144)
!143 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!144 = !{!145, !214, !227, !228, !229, !233, !234, !242, !262}
!145 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !142, file: !143, line: 247, baseType: !146, size: 384)
!146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !143, line: 57, size: 384, elements: !147)
!147 = !{!148, !176, !184, !187, !188, !201, !202, !203}
!148 = !DIDerivedType(tag: DW_TAG_member, scope: !146, file: !143, line: 60, baseType: !149, size: 64)
!149 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !146, file: !143, line: 60, size: 64, elements: !150)
!150 = !{!151, !167}
!151 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !149, file: !143, line: 61, baseType: !152, size: 64)
!152 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !153, line: 49, baseType: !154)
!153 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !153, line: 37, size: 64, elements: !155)
!155 = !{!156, !162}
!156 = !DIDerivedType(tag: DW_TAG_member, scope: !154, file: !153, line: 38, baseType: !157, size: 32)
!157 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !154, file: !153, line: 38, size: 32, elements: !158)
!158 = !{!159, !161}
!159 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !157, file: !153, line: 39, baseType: !160, size: 32)
!160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !154, size: 32)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !157, file: !153, line: 40, baseType: !160, size: 32)
!162 = !DIDerivedType(tag: DW_TAG_member, scope: !154, file: !153, line: 42, baseType: !163, size: 32, offset: 32)
!163 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !154, file: !153, line: 42, size: 32, elements: !164)
!164 = !{!165, !166}
!165 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !163, file: !153, line: 43, baseType: !160, size: 32)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !163, file: !153, line: 44, baseType: !160, size: 32)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !149, file: !143, line: 62, baseType: !168, size: 64)
!168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !169, line: 49, size: 64, elements: !170)
!169 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!170 = !{!171}
!171 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !168, file: !169, line: 50, baseType: !172, size: 64)
!172 = !DICompositeType(tag: DW_TAG_array_type, baseType: !173, size: 64, elements: !174)
!173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !168, size: 32)
!174 = !{!175}
!175 = !DISubrange(count: 2)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !146, file: !143, line: 68, baseType: !177, size: 32, offset: 64)
!177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !178, size: 32)
!178 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !179, line: 233, baseType: !180)
!179 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!180 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !179, line: 231, size: 64, elements: !181)
!181 = !{!182}
!182 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !180, file: !179, line: 232, baseType: !183, size: 64)
!183 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !153, line: 48, baseType: !154)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !146, file: !143, line: 71, baseType: !185, size: 8, offset: 96)
!185 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !186)
!186 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !146, file: !143, line: 74, baseType: !185, size: 8, offset: 104)
!188 = !DIDerivedType(tag: DW_TAG_member, scope: !146, file: !143, line: 90, baseType: !189, size: 16, offset: 112)
!189 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !146, file: !143, line: 90, size: 16, elements: !190)
!190 = !{!191, !198}
!191 = !DIDerivedType(tag: DW_TAG_member, scope: !189, file: !143, line: 91, baseType: !192, size: 16)
!192 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !189, file: !143, line: 91, size: 16, elements: !193)
!193 = !{!194, !197}
!194 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !192, file: !143, line: 96, baseType: !195, size: 8)
!195 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !196)
!196 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !192, file: !143, line: 97, baseType: !185, size: 8, offset: 8)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !189, file: !143, line: 100, baseType: !199, size: 16)
!199 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !200)
!200 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !146, file: !143, line: 107, baseType: !118, size: 32, offset: 128)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !146, file: !143, line: 127, baseType: !113, size: 32, offset: 160)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !146, file: !143, line: 131, baseType: !204, size: 192, offset: 192)
!204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !179, line: 244, size: 192, elements: !205)
!205 = !{!206, !207, !213}
!206 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !204, file: !179, line: 245, baseType: !152, size: 64)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !204, file: !179, line: 246, baseType: !208, size: 32, offset: 64)
!208 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !179, line: 242, baseType: !209)
!209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !210, size: 32)
!210 = !DISubroutineType(types: !211)
!211 = !{null, !212}
!212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !204, size: 32)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !204, file: !179, line: 249, baseType: !116, size: 64, offset: 128)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !142, file: !143, line: 250, baseType: !215, size: 288, offset: 384)
!215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !216, line: 25, size: 288, elements: !217)
!216 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!217 = !{!218, !219, !220, !221, !222, !223, !224, !225, !226}
!218 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !215, file: !216, line: 26, baseType: !118, size: 32)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !215, file: !216, line: 27, baseType: !118, size: 32, offset: 32)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !215, file: !216, line: 28, baseType: !118, size: 32, offset: 64)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !215, file: !216, line: 29, baseType: !118, size: 32, offset: 96)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !215, file: !216, line: 30, baseType: !118, size: 32, offset: 128)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !215, file: !216, line: 31, baseType: !118, size: 32, offset: 160)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !215, file: !216, line: 32, baseType: !118, size: 32, offset: 192)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !215, file: !216, line: 33, baseType: !118, size: 32, offset: 224)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !215, file: !216, line: 34, baseType: !118, size: 32, offset: 256)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !142, file: !143, line: 253, baseType: !113, size: 32, offset: 672)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !142, file: !143, line: 256, baseType: !178, size: 64, offset: 704)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !142, file: !143, line: 279, baseType: !230, size: 256, offset: 768)
!230 = !DICompositeType(tag: DW_TAG_array_type, baseType: !107, size: 256, elements: !231)
!231 = !{!232}
!232 = !DISubrange(count: 32)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !142, file: !143, line: 294, baseType: !119, size: 32, offset: 1024)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !142, file: !143, line: 300, baseType: !235, size: 96, offset: 1056)
!235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !143, line: 149, size: 96, elements: !236)
!236 = !{!237, !238, !241}
!237 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !235, file: !143, line: 153, baseType: !22, size: 32)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !235, file: !143, line: 162, baseType: !239, size: 32, offset: 32)
!239 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !240, line: 214, baseType: !32)
!240 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!241 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !235, file: !143, line: 168, baseType: !239, size: 32, offset: 64)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !142, file: !143, line: 325, baseType: !243, size: 32, offset: 1152)
!243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !244, size: 32)
!244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !245, line: 5073, size: 192, elements: !246)
!245 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!246 = !{!247, !256, !257}
!247 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !244, file: !245, line: 5074, baseType: !248, size: 96)
!248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !249, line: 56, size: 96, elements: !250)
!249 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!250 = !{!251, !254, !255}
!251 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !248, file: !249, line: 57, baseType: !252, size: 32)
!252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !253, size: 32)
!253 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !249, line: 57, flags: DIFlagFwdDecl)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !248, file: !249, line: 58, baseType: !113, size: 32, offset: 32)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !248, file: !249, line: 59, baseType: !239, size: 32, offset: 64)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !244, file: !245, line: 5075, baseType: !178, size: 64, offset: 96)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !244, file: !245, line: 5076, baseType: !258, size: 32, offset: 160)
!258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !260)
!259 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!260 = !{!261}
!261 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !258, file: !259, line: 52, baseType: !22, size: 32)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !142, file: !143, line: 343, baseType: !263, size: 64, offset: 1184)
!263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !216, line: 60, size: 64, elements: !264)
!264 = !{!265, !266}
!265 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !263, file: !216, line: 63, baseType: !118, size: 32)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !263, file: !216, line: 66, baseType: !118, size: 32, offset: 32)
!267 = !{!132}
!268 = !DIGlobalVariableExpression(var: !269, expr: !DIExpression())
!269 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !270, file: !286, line: 18, type: !287, isLocal: false, isDefinition: true)
!270 = distinct !DICompileUnit(language: DW_LANG_C99, file: !271, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !272, globals: !285, splitDebugInlining: false, nameTableKind: None)
!271 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pi")
!272 = !{!22, !113, !24, !273, !275, !277, !239, !119, !280, !281, !282, !283, !106, !284, !199, !278}
!273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !274, size: 32)
!274 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !276, size: 32)
!276 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 32)
!278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !279, size: 32)
!279 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !107)
!280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !119, size: 32)
!281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !105, size: 32)
!282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 32)
!283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 32)
!284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 32)
!285 = !{!268}
!286 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!287 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !288)
!288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !289, line: 16, size: 64, elements: !290)
!289 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!290 = !{!291, !292}
!291 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !288, file: !289, line: 17, baseType: !278, size: 32)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !288, file: !289, line: 18, baseType: !185, size: 8, offset: 32)
!293 = !DIGlobalVariableExpression(var: !294, expr: !DIExpression())
!294 = distinct !DIGlobalVariable(name: "_char_out", scope: !295, file: !299, line: 54, type: !300, isLocal: false, isDefinition: true)
!295 = distinct !DICompileUnit(language: DW_LANG_C99, file: !296, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !297, globals: !298, splitDebugInlining: false, nameTableKind: None)
!296 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pi")
!297 = !{!113, !119}
!298 = !{!293}
!299 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !301, size: 32)
!301 = !DISubroutineType(types: !302)
!302 = !{!119, !119}
!303 = !DIGlobalVariableExpression(var: !304, expr: !DIExpression())
!304 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !305, file: !322, line: 56, type: !323, isLocal: true, isDefinition: true, align: 32)
!305 = distinct !DICompileUnit(language: DW_LANG_C99, file: !306, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !307, globals: !321, splitDebugInlining: false, nameTableKind: None)
!306 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pi")
!307 = !{!308}
!308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !309, size: 32)
!309 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !310, line: 258, baseType: !311)
!310 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f401xe.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!311 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 249, size: 224, elements: !312)
!312 = !{!313, !315, !316, !317, !318, !319, !320}
!313 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !311, file: !310, line: 251, baseType: !314, size: 32)
!314 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !118)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !311, file: !310, line: 252, baseType: !314, size: 32, offset: 32)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !311, file: !310, line: 253, baseType: !314, size: 32, offset: 64)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !311, file: !310, line: 254, baseType: !314, size: 32, offset: 96)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !311, file: !310, line: 255, baseType: !314, size: 32, offset: 128)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !311, file: !310, line: 256, baseType: !314, size: 32, offset: 160)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !311, file: !310, line: 257, baseType: !314, size: 32, offset: 192)
!321 = !{!303}
!322 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!323 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !324)
!324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !325, line: 51, size: 64, elements: !326)
!325 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!326 = !{!327, !353}
!327 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !324, file: !325, line: 60, baseType: !328, size: 32)
!328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !329, size: 32)
!329 = !DISubroutineType(types: !330)
!330 = !{!119, !331}
!331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !332, size: 32)
!332 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !333)
!333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !335)
!334 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!335 = !{!336, !337, !338, !339, !346, !347}
!336 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !333, file: !334, line: 380, baseType: !278, size: 32)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !333, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !333, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !333, file: !334, line: 386, baseType: !340, size: 32, offset: 96)
!340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !341, size: 32)
!341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !342)
!342 = !{!343, !344}
!343 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !341, file: !334, line: 359, baseType: !185, size: 8)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !341, file: !334, line: 364, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!345 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !333, file: !334, line: 388, baseType: !113, size: 32, offset: 128)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !333, file: !334, line: 396, baseType: !348, size: 32, offset: 160)
!348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !349, size: 32)
!349 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !350)
!350 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !334, line: 43, baseType: !351)
!351 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !352)
!352 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !324, file: !325, line: 65, baseType: !331, size: 32, offset: 32)
!354 = !DIGlobalVariableExpression(var: !355, expr: !DIExpression())
!355 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !356, file: !359, line: 71, type: !360, isLocal: true, isDefinition: true, align: 32)
!356 = distinct !DICompileUnit(language: DW_LANG_C99, file: !357, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !358, splitDebugInlining: false, nameTableKind: None)
!357 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pi")
!358 = !{!354}
!359 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!360 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !361)
!361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !325, line: 51, size: 64, elements: !362)
!362 = !{!363, !382}
!363 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !361, file: !325, line: 60, baseType: !364, size: 32)
!364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !365, size: 32)
!365 = !DISubroutineType(types: !366)
!366 = !{!119, !367}
!367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !368, size: 32)
!368 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !369)
!369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !370)
!370 = !{!371, !372, !373, !374, !380, !381}
!371 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !369, file: !334, line: 380, baseType: !278, size: 32)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !369, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !369, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !369, file: !334, line: 386, baseType: !375, size: 32, offset: 96)
!375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !376, size: 32)
!376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !377)
!377 = !{!378, !379}
!378 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !376, file: !334, line: 359, baseType: !185, size: 8)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !376, file: !334, line: 364, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !369, file: !334, line: 388, baseType: !113, size: 32, offset: 128)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !369, file: !334, line: 396, baseType: !348, size: 32, offset: 160)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !361, file: !325, line: 65, baseType: !367, size: 32, offset: 32)
!383 = !DIGlobalVariableExpression(var: !384, expr: !DIExpression())
!384 = distinct !DIGlobalVariable(name: "log_const_mpu", scope: !385, file: !392, line: 17, type: !521, isLocal: false, isDefinition: true)
!385 = distinct !DICompileUnit(language: DW_LANG_C99, file: !386, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !387, globals: !388, splitDebugInlining: false, nameTableKind: None)
!386 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pi")
!387 = !{!239, !119, !118, !113}
!388 = !{!383, !389, !517}
!389 = !DIGlobalVariableExpression(var: !390, expr: !DIExpression())
!390 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !391, file: !392, line: 198, type: !503, isLocal: true, isDefinition: true)
!391 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !392, file: !392, line: 175, type: !393, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !385, retainedNodes: !498)
!392 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!393 = !DISubroutineType(types: !394)
!394 = !{null, !395}
!395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !396, size: 32)
!396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !143, line: 245, size: 1280, elements: !397)
!397 = !{!398, !456, !468, !469, !470, !471, !472, !478, !493}
!398 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !396, file: !143, line: 247, baseType: !399, size: 384)
!399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !143, line: 57, size: 384, elements: !400)
!400 = !{!401, !425, !432, !433, !434, !443, !444, !445}
!401 = !DIDerivedType(tag: DW_TAG_member, scope: !399, file: !143, line: 60, baseType: !402, size: 64)
!402 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !399, file: !143, line: 60, size: 64, elements: !403)
!403 = !{!404, !419}
!404 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !402, file: !143, line: 61, baseType: !405, size: 64)
!405 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !153, line: 49, baseType: !406)
!406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !153, line: 37, size: 64, elements: !407)
!407 = !{!408, !414}
!408 = !DIDerivedType(tag: DW_TAG_member, scope: !406, file: !153, line: 38, baseType: !409, size: 32)
!409 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !406, file: !153, line: 38, size: 32, elements: !410)
!410 = !{!411, !413}
!411 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !409, file: !153, line: 39, baseType: !412, size: 32)
!412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !406, size: 32)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !409, file: !153, line: 40, baseType: !412, size: 32)
!414 = !DIDerivedType(tag: DW_TAG_member, scope: !406, file: !153, line: 42, baseType: !415, size: 32, offset: 32)
!415 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !406, file: !153, line: 42, size: 32, elements: !416)
!416 = !{!417, !418}
!417 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !415, file: !153, line: 43, baseType: !412, size: 32)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !415, file: !153, line: 44, baseType: !412, size: 32)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !402, file: !143, line: 62, baseType: !420, size: 64)
!420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !169, line: 49, size: 64, elements: !421)
!421 = !{!422}
!422 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !420, file: !169, line: 50, baseType: !423, size: 64)
!423 = !DICompositeType(tag: DW_TAG_array_type, baseType: !424, size: 64, elements: !174)
!424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !420, size: 32)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !399, file: !143, line: 68, baseType: !426, size: 32, offset: 64)
!426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !427, size: 32)
!427 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !179, line: 233, baseType: !428)
!428 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !179, line: 231, size: 64, elements: !429)
!429 = !{!430}
!430 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !428, file: !179, line: 232, baseType: !431, size: 64)
!431 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !153, line: 48, baseType: !406)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !399, file: !143, line: 71, baseType: !185, size: 8, offset: 96)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !399, file: !143, line: 74, baseType: !185, size: 8, offset: 104)
!434 = !DIDerivedType(tag: DW_TAG_member, scope: !399, file: !143, line: 90, baseType: !435, size: 16, offset: 112)
!435 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !399, file: !143, line: 90, size: 16, elements: !436)
!436 = !{!437, !442}
!437 = !DIDerivedType(tag: DW_TAG_member, scope: !435, file: !143, line: 91, baseType: !438, size: 16)
!438 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !435, file: !143, line: 91, size: 16, elements: !439)
!439 = !{!440, !441}
!440 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !438, file: !143, line: 96, baseType: !195, size: 8)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !438, file: !143, line: 97, baseType: !185, size: 8, offset: 8)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !435, file: !143, line: 100, baseType: !199, size: 16)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !399, file: !143, line: 107, baseType: !118, size: 32, offset: 128)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !399, file: !143, line: 127, baseType: !113, size: 32, offset: 160)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !399, file: !143, line: 131, baseType: !446, size: 192, offset: 192)
!446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !179, line: 244, size: 192, elements: !447)
!447 = !{!448, !449, !455}
!448 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !446, file: !179, line: 245, baseType: !405, size: 64)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !446, file: !179, line: 246, baseType: !450, size: 32, offset: 64)
!450 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !179, line: 242, baseType: !451)
!451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !452, size: 32)
!452 = !DISubroutineType(types: !453)
!453 = !{null, !454}
!454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !446, size: 32)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !446, file: !179, line: 249, baseType: !116, size: 64, offset: 128)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !396, file: !143, line: 250, baseType: !457, size: 288, offset: 384)
!457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !216, line: 25, size: 288, elements: !458)
!458 = !{!459, !460, !461, !462, !463, !464, !465, !466, !467}
!459 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !457, file: !216, line: 26, baseType: !118, size: 32)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !457, file: !216, line: 27, baseType: !118, size: 32, offset: 32)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !457, file: !216, line: 28, baseType: !118, size: 32, offset: 64)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !457, file: !216, line: 29, baseType: !118, size: 32, offset: 96)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !457, file: !216, line: 30, baseType: !118, size: 32, offset: 128)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !457, file: !216, line: 31, baseType: !118, size: 32, offset: 160)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !457, file: !216, line: 32, baseType: !118, size: 32, offset: 192)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !457, file: !216, line: 33, baseType: !118, size: 32, offset: 224)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !457, file: !216, line: 34, baseType: !118, size: 32, offset: 256)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !396, file: !143, line: 253, baseType: !113, size: 32, offset: 672)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !396, file: !143, line: 256, baseType: !427, size: 64, offset: 704)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !396, file: !143, line: 279, baseType: !230, size: 256, offset: 768)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !396, file: !143, line: 294, baseType: !119, size: 32, offset: 1024)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !396, file: !143, line: 300, baseType: !473, size: 96, offset: 1056)
!473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !143, line: 149, size: 96, elements: !474)
!474 = !{!475, !476, !477}
!475 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !473, file: !143, line: 153, baseType: !22, size: 32)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !473, file: !143, line: 162, baseType: !239, size: 32, offset: 32)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !473, file: !143, line: 168, baseType: !239, size: 32, offset: 64)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !396, file: !143, line: 325, baseType: !479, size: 32, offset: 1152)
!479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !480, size: 32)
!480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !245, line: 5073, size: 192, elements: !481)
!481 = !{!482, !488, !489}
!482 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !480, file: !245, line: 5074, baseType: !483, size: 96)
!483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !249, line: 56, size: 96, elements: !484)
!484 = !{!485, !486, !487}
!485 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !483, file: !249, line: 57, baseType: !252, size: 32)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !483, file: !249, line: 58, baseType: !113, size: 32, offset: 32)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !483, file: !249, line: 59, baseType: !239, size: 32, offset: 64)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !480, file: !245, line: 5075, baseType: !427, size: 64, offset: 96)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !480, file: !245, line: 5076, baseType: !490, size: 32, offset: 160)
!490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !491)
!491 = !{!492}
!492 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !490, file: !259, line: 52, baseType: !22, size: 32)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !396, file: !143, line: 343, baseType: !494, size: 64, offset: 1184)
!494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !216, line: 60, size: 64, elements: !495)
!495 = !{!496, !497}
!496 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !494, file: !216, line: 63, baseType: !118, size: 32)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !494, file: !216, line: 66, baseType: !118, size: 32, offset: 32)
!498 = !{!499, !500, !501, !502}
!499 = !DILocalVariable(name: "thread", arg: 1, scope: !391, file: !392, line: 175, type: !395)
!500 = !DILocalVariable(name: "region_num", scope: !391, file: !392, line: 200, type: !185)
!501 = !DILocalVariable(name: "guard_start", scope: !391, file: !392, line: 265, type: !22)
!502 = !DILocalVariable(name: "guard_size", scope: !391, file: !392, line: 266, type: !239)
!503 = !DICompositeType(tag: DW_TAG_array_type, baseType: !504, size: 96, elements: !515)
!504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !505, line: 52, size: 96, elements: !506)
!505 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!506 = !{!507, !508, !509}
!507 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !504, file: !505, line: 53, baseType: !22, size: 32)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !504, file: !505, line: 54, baseType: !239, size: 32, offset: 32)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !504, file: !505, line: 55, baseType: !510, size: 32, offset: 64)
!510 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !511, line: 151, baseType: !512)
!511 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!512 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !511, line: 149, size: 32, elements: !513)
!513 = !{!514}
!514 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !512, file: !511, line: 150, baseType: !118, size: 32)
!515 = !{!516}
!516 = !DISubrange(count: 1)
!517 = !DIGlobalVariableExpression(var: !518, expr: !DIExpression())
!518 = distinct !DIGlobalVariable(name: "static_regions", scope: !385, file: !392, line: 62, type: !519, isLocal: true, isDefinition: true)
!519 = !DICompositeType(tag: DW_TAG_array_type, baseType: !520, size: 96, elements: !515)
!520 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !504)
!521 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !522)
!522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !289, line: 16, size: 64, elements: !523)
!523 = !{!524, !525}
!524 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !522, file: !289, line: 17, baseType: !278, size: 32)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !522, file: !289, line: 18, baseType: !185, size: 8, offset: 32)
!526 = !DIGlobalVariableExpression(var: !527, expr: !DIExpression())
!527 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !528, file: !561, line: 39, type: !185, isLocal: true, isDefinition: true)
!528 = distinct !DICompileUnit(language: DW_LANG_C99, file: !529, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !530, globals: !560, splitDebugInlining: false, nameTableKind: None)
!529 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pi")
!530 = !{!531, !113, !119, !548, !185}
!531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !532, size: 32)
!532 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !533, line: 1226, baseType: !534)
!533 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!534 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 1213, size: 352, elements: !535)
!535 = !{!536, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547}
!536 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !534, file: !533, line: 1215, baseType: !537, size: 32)
!537 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !314)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !534, file: !533, line: 1216, baseType: !314, size: 32, offset: 32)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !534, file: !533, line: 1217, baseType: !314, size: 32, offset: 64)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !534, file: !533, line: 1218, baseType: !314, size: 32, offset: 96)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !534, file: !533, line: 1219, baseType: !314, size: 32, offset: 128)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !534, file: !533, line: 1220, baseType: !314, size: 32, offset: 160)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !534, file: !533, line: 1221, baseType: !314, size: 32, offset: 192)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !534, file: !533, line: 1222, baseType: !314, size: 32, offset: 224)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !534, file: !533, line: 1223, baseType: !314, size: 32, offset: 256)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !534, file: !533, line: 1224, baseType: !314, size: 32, offset: 288)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !534, file: !533, line: 1225, baseType: !314, size: 32, offset: 320)
!548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !549, size: 32)
!549 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !550)
!550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !551, line: 27, size: 96, elements: !552)
!551 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!552 = !{!553, !554, !555}
!553 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !550, file: !551, line: 29, baseType: !118, size: 32)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !550, file: !551, line: 31, baseType: !278, size: 32, offset: 32)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !550, file: !551, line: 37, baseType: !556, size: 32, offset: 64)
!556 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !511, line: 146, baseType: !557)
!557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !511, line: 141, size: 32, elements: !558)
!558 = !{!559}
!559 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !557, file: !511, line: 143, baseType: !118, size: 32)
!560 = !{!526}
!561 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!562 = !DIGlobalVariableExpression(var: !563, expr: !DIExpression())
!563 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !564, file: !571, line: 21, type: !300, isLocal: true, isDefinition: true)
!564 = distinct !DICompileUnit(language: DW_LANG_C99, file: !565, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !566, globals: !570, splitDebugInlining: false, nameTableKind: None)
!565 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pi")
!566 = !{!567, !119, !113}
!567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !568, size: 32)
!568 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !569, line: 22, baseType: !119)
!569 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!570 = !{!562}
!571 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!572 = !DIGlobalVariableExpression(var: !573, expr: !DIExpression())
!573 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !574, file: !579, line: 13, type: !596, isLocal: true, isDefinition: true)
!574 = distinct !DICompileUnit(language: DW_LANG_C99, file: !575, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !576, splitDebugInlining: false, nameTableKind: None)
!575 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pi")
!576 = !{!577, !572}
!577 = !DIGlobalVariableExpression(var: !578, expr: !DIExpression())
!578 = distinct !DIGlobalVariable(name: "mpu_config", scope: !574, file: !579, line: 37, type: !580, isLocal: false, isDefinition: true)
!579 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!580 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !581)
!581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !551, line: 41, size: 64, elements: !582)
!582 = !{!583, !584}
!583 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !581, file: !551, line: 43, baseType: !118, size: 32)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !581, file: !551, line: 45, baseType: !585, size: 32, offset: 32)
!585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !586, size: 32)
!586 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !587)
!587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !551, line: 27, size: 96, elements: !588)
!588 = !{!589, !590, !591}
!589 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !587, file: !551, line: 29, baseType: !118, size: 32)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !587, file: !551, line: 31, baseType: !278, size: 32, offset: 32)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !587, file: !551, line: 37, baseType: !592, size: 32, offset: 64)
!592 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !511, line: 146, baseType: !593)
!593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !511, line: 141, size: 32, elements: !594)
!594 = !{!595}
!595 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !593, file: !511, line: 143, baseType: !118, size: 32)
!596 = !DICompositeType(tag: DW_TAG_array_type, baseType: !586, size: 192, elements: !174)
!597 = !DIGlobalVariableExpression(var: !598, expr: !DIExpression())
!598 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !599, file: !682, line: 72, type: !766, isLocal: true, isDefinition: true)
!599 = distinct !DICompileUnit(language: DW_LANG_C99, file: !600, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !601, retainedTypes: !668, globals: !679, splitDebugInlining: false, nameTableKind: None)
!600 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pi")
!601 = !{!30, !602}
!602 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !310, line: 65, baseType: !119, size: 32, elements: !603)
!603 = !{!604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667}
!604 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!605 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!606 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!607 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!608 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!609 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!610 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!611 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!612 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!613 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!614 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!615 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!616 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!617 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!618 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!619 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!620 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!621 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!622 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!623 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!624 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!625 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!626 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!627 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!628 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!629 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!630 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!631 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!632 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!633 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!634 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!635 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!636 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!637 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!638 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!639 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!640 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!641 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!642 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!643 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!644 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!645 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!646 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!647 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!648 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!649 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!650 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!651 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!652 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!653 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!654 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!655 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!656 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!657 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!658 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!659 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!660 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!661 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!662 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!663 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!664 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!665 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!666 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!667 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!668 = !{!239, !119, !113, !669}
!669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !670, size: 32)
!670 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !310, line: 243, baseType: !671)
!671 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 235, size: 192, elements: !672)
!672 = !{!673, !674, !675, !676, !677, !678}
!673 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !671, file: !310, line: 237, baseType: !314, size: 32)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !671, file: !310, line: 238, baseType: !314, size: 32, offset: 32)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !671, file: !310, line: 239, baseType: !314, size: 32, offset: 64)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !671, file: !310, line: 240, baseType: !314, size: 32, offset: 96)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !671, file: !310, line: 241, baseType: !314, size: 32, offset: 128)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !671, file: !310, line: 242, baseType: !314, size: 32, offset: 160)
!679 = !{!680, !686, !702, !713, !730, !597, !732, !746, !748, !750, !752, !754, !756, !758, !760, !762, !764}
!680 = !DIGlobalVariableExpression(var: !681, expr: !DIExpression())
!681 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_39", scope: !599, file: !682, line: 424, type: !683, isLocal: false, isDefinition: true, align: 16)
!682 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!683 = !DICompositeType(tag: DW_TAG_array_type, baseType: !349, size: 64, elements: !684)
!684 = !{!685}
!685 = !DISubrange(count: 4)
!686 = !DIGlobalVariableExpression(var: !687, expr: !DIExpression())
!687 = distinct !DIGlobalVariable(name: "__device_dts_ord_39", scope: !599, file: !682, line: 424, type: !688, isLocal: false, isDefinition: true, align: 32)
!688 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !689)
!689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !690)
!690 = !{!691, !692, !693, !694, !700, !701}
!691 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !689, file: !334, line: 380, baseType: !278, size: 32)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !689, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !689, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !689, file: !334, line: 386, baseType: !695, size: 32, offset: 96)
!695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !696, size: 32)
!696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !697)
!697 = !{!698, !699}
!698 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !696, file: !334, line: 359, baseType: !185, size: 8)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !696, file: !334, line: 364, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !689, file: !334, line: 388, baseType: !113, size: 32, offset: 128)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !689, file: !334, line: 396, baseType: !348, size: 32, offset: 160)
!702 = !DIGlobalVariableExpression(var: !703, expr: !DIExpression())
!703 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_39", scope: !599, file: !682, line: 424, type: !704, isLocal: true, isDefinition: true, align: 32)
!704 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !705)
!705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !325, line: 51, size: 64, elements: !706)
!706 = !{!707, !712}
!707 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !705, file: !325, line: 60, baseType: !708, size: 32)
!708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !709, size: 32)
!709 = !DISubroutineType(types: !710)
!710 = !{!119, !711}
!711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !688, size: 32)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !705, file: !325, line: 65, baseType: !711, size: 32, offset: 32)
!713 = !DIGlobalVariableExpression(var: !714, expr: !DIExpression())
!714 = distinct !DIGlobalVariable(name: "exti_data", scope: !599, file: !682, line: 423, type: !715, isLocal: true, isDefinition: true)
!715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !682, line: 107, size: 1472, elements: !716)
!716 = !{!717}
!717 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !715, file: !682, line: 109, baseType: !718, size: 1472)
!718 = !DICompositeType(tag: DW_TAG_array_type, baseType: !719, size: 1472, elements: !728)
!719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !682, line: 101, size: 64, elements: !720)
!720 = !{!721, !727}
!721 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !719, file: !682, line: 102, baseType: !722, size: 32)
!722 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !723, line: 63, baseType: !724)
!723 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !725, size: 32)
!725 = !DISubroutineType(types: !726)
!726 = !{null, !119, !113}
!727 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !719, file: !682, line: 103, baseType: !113, size: 32, offset: 32)
!728 = !{!729}
!729 = !DISubrange(count: 23)
!730 = !DIGlobalVariableExpression(var: !731, expr: !DIExpression())
!731 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_39", scope: !599, file: !682, line: 424, type: !696, isLocal: true, isDefinition: true, align: 8)
!732 = !DIGlobalVariableExpression(var: !733, expr: !DIExpression())
!733 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !734, file: !682, line: 493, type: !739, isLocal: true, isDefinition: true, align: 32)
!734 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !682, file: !682, line: 460, type: !735, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !737)
!735 = !DISubroutineType(types: !736)
!736 = !{null, !711}
!737 = !{!738}
!738 = !DILocalVariable(name: "dev", arg: 1, scope: !734, file: !682, line: 460, type: !711)
!739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !740)
!740 = !{!741, !743, !744, !745}
!741 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !739, file: !10, line: 55, baseType: !742, size: 32)
!742 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !119)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !739, file: !10, line: 57, baseType: !742, size: 32, offset: 32)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !739, file: !10, line: 59, baseType: !113, size: 32, offset: 64)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !739, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!746 = !DIGlobalVariableExpression(var: !747, expr: !DIExpression())
!747 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !734, file: !682, line: 497, type: !739, isLocal: true, isDefinition: true, align: 32)
!748 = !DIGlobalVariableExpression(var: !749, expr: !DIExpression())
!749 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !734, file: !682, line: 507, type: !739, isLocal: true, isDefinition: true, align: 32)
!750 = !DIGlobalVariableExpression(var: !751, expr: !DIExpression())
!751 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !734, file: !682, line: 512, type: !739, isLocal: true, isDefinition: true, align: 32)
!752 = !DIGlobalVariableExpression(var: !753, expr: !DIExpression())
!753 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !734, file: !682, line: 516, type: !739, isLocal: true, isDefinition: true, align: 32)
!754 = !DIGlobalVariableExpression(var: !755, expr: !DIExpression())
!755 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !734, file: !682, line: 523, type: !739, isLocal: true, isDefinition: true, align: 32)
!756 = !DIGlobalVariableExpression(var: !757, expr: !DIExpression())
!757 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !734, file: !682, line: 527, type: !739, isLocal: true, isDefinition: true, align: 32)
!758 = !DIGlobalVariableExpression(var: !759, expr: !DIExpression())
!759 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !734, file: !682, line: 581, type: !739, isLocal: true, isDefinition: true, align: 32)
!760 = !DIGlobalVariableExpression(var: !761, expr: !DIExpression())
!761 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !734, file: !682, line: 586, type: !739, isLocal: true, isDefinition: true, align: 32)
!762 = !DIGlobalVariableExpression(var: !763, expr: !DIExpression())
!763 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !734, file: !682, line: 591, type: !739, isLocal: true, isDefinition: true, align: 32)
!764 = !DIGlobalVariableExpression(var: !765, expr: !DIExpression())
!765 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !734, file: !682, line: 595, type: !739, isLocal: true, isDefinition: true, align: 32)
!766 = !DICompositeType(tag: DW_TAG_array_type, baseType: !767, size: 736, elements: !728)
!767 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !768)
!768 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !310, line: 133, baseType: !602)
!769 = !DIGlobalVariableExpression(var: !770, expr: !DIExpression())
!770 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_39", scope: !771, file: !776, line: 24, type: !802, isLocal: false, isDefinition: true, align: 16)
!771 = distinct !DICompileUnit(language: DW_LANG_C99, file: !772, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !773, splitDebugInlining: false, nameTableKind: None)
!772 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pi/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pi")
!773 = !{!774, !769, !780, !782, !784, !786, !788, !790, !792, !794, !796, !798, !800}
!774 = !DIGlobalVariableExpression(var: !775, expr: !DIExpression())
!775 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !771, file: !776, line: 19, type: !777, isLocal: false, isDefinition: true, align: 16)
!776 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pi")
!777 = !DICompositeType(tag: DW_TAG_array_type, baseType: !349, size: 224, elements: !778)
!778 = !{!779}
!779 = !DISubrange(count: 14)
!780 = !DIGlobalVariableExpression(var: !781, expr: !DIExpression())
!781 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_76", scope: !771, file: !776, line: 31, type: !683, isLocal: false, isDefinition: true, align: 16)
!782 = !DIGlobalVariableExpression(var: !783, expr: !DIExpression())
!783 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_75", scope: !771, file: !776, line: 38, type: !683, isLocal: false, isDefinition: true, align: 16)
!784 = !DIGlobalVariableExpression(var: !785, expr: !DIExpression())
!785 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_74", scope: !771, file: !776, line: 45, type: !683, isLocal: false, isDefinition: true, align: 16)
!786 = !DIGlobalVariableExpression(var: !787, expr: !DIExpression())
!787 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !771, file: !776, line: 52, type: !683, isLocal: false, isDefinition: true, align: 16)
!788 = !DIGlobalVariableExpression(var: !789, expr: !DIExpression())
!789 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_23", scope: !771, file: !776, line: 59, type: !683, isLocal: false, isDefinition: true, align: 16)
!790 = !DIGlobalVariableExpression(var: !791, expr: !DIExpression())
!791 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !771, file: !776, line: 66, type: !683, isLocal: false, isDefinition: true, align: 16)
!792 = !DIGlobalVariableExpression(var: !793, expr: !DIExpression())
!793 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_20", scope: !771, file: !776, line: 73, type: !683, isLocal: false, isDefinition: true, align: 16)
!794 = !DIGlobalVariableExpression(var: !795, expr: !DIExpression())
!795 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_25", scope: !771, file: !776, line: 80, type: !683, isLocal: false, isDefinition: true, align: 16)
!796 = !DIGlobalVariableExpression(var: !797, expr: !DIExpression())
!797 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_50", scope: !771, file: !776, line: 87, type: !683, isLocal: false, isDefinition: true, align: 16)
!798 = !DIGlobalVariableExpression(var: !799, expr: !DIExpression())
!799 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_44", scope: !771, file: !776, line: 94, type: !683, isLocal: false, isDefinition: true, align: 16)
!800 = !DIGlobalVariableExpression(var: !801, expr: !DIExpression())
!801 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_47", scope: !771, file: !776, line: 101, type: !683, isLocal: false, isDefinition: true, align: 16)
!802 = !DICompositeType(tag: DW_TAG_array_type, baseType: !349, size: 48, elements: !803)
!803 = !{!804}
!804 = !DISubrange(count: 3)
!805 = !DIGlobalVariableExpression(var: !806, expr: !DIExpression())
!806 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !807, file: !871, line: 398, type: !904, isLocal: true, isDefinition: true)
!807 = distinct !DICompileUnit(language: DW_LANG_C99, file: !808, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !809, retainedTypes: !822, globals: !868, splitDebugInlining: false, nameTableKind: None)
!808 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pi")
!809 = !{!810, !30, !815}
!810 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !811, line: 197, baseType: !32, size: 32, elements: !812)
!811 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!812 = !{!813, !814}
!813 = !DIEnumerator(name: "SUCCESS", value: 0)
!814 = !DIEnumerator(name: "ERROR", value: 1)
!815 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !816, line: 44, baseType: !32, size: 32, elements: !817)
!816 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!817 = !{!818, !819, !820, !821}
!818 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!819 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!820 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!821 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!822 = !{!113, !119, !118, !823, !861, !867}
!823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !824, size: 32)
!824 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !310, line: 369, baseType: !825)
!825 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 335, size: 1152, elements: !826)
!826 = !{!827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !860}
!827 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !825, file: !310, line: 337, baseType: !314, size: 32)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !825, file: !310, line: 338, baseType: !314, size: 32, offset: 32)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !825, file: !310, line: 339, baseType: !314, size: 32, offset: 64)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !825, file: !310, line: 340, baseType: !314, size: 32, offset: 96)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !825, file: !310, line: 341, baseType: !314, size: 32, offset: 128)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !825, file: !310, line: 342, baseType: !314, size: 32, offset: 160)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !825, file: !310, line: 343, baseType: !314, size: 32, offset: 192)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !825, file: !310, line: 344, baseType: !118, size: 32, offset: 224)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !825, file: !310, line: 345, baseType: !314, size: 32, offset: 256)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !825, file: !310, line: 346, baseType: !314, size: 32, offset: 288)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !825, file: !310, line: 347, baseType: !838, size: 64, offset: 320)
!838 = !DICompositeType(tag: DW_TAG_array_type, baseType: !118, size: 64, elements: !174)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !825, file: !310, line: 348, baseType: !314, size: 32, offset: 384)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !825, file: !310, line: 349, baseType: !314, size: 32, offset: 416)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !825, file: !310, line: 350, baseType: !314, size: 32, offset: 448)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !825, file: !310, line: 351, baseType: !118, size: 32, offset: 480)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !825, file: !310, line: 352, baseType: !314, size: 32, offset: 512)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !825, file: !310, line: 353, baseType: !314, size: 32, offset: 544)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !825, file: !310, line: 354, baseType: !838, size: 64, offset: 576)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !825, file: !310, line: 355, baseType: !314, size: 32, offset: 640)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !825, file: !310, line: 356, baseType: !314, size: 32, offset: 672)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !825, file: !310, line: 357, baseType: !314, size: 32, offset: 704)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !825, file: !310, line: 358, baseType: !118, size: 32, offset: 736)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !825, file: !310, line: 359, baseType: !314, size: 32, offset: 768)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !825, file: !310, line: 360, baseType: !314, size: 32, offset: 800)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !825, file: !310, line: 361, baseType: !838, size: 64, offset: 832)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !825, file: !310, line: 362, baseType: !314, size: 32, offset: 896)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !825, file: !310, line: 363, baseType: !314, size: 32, offset: 928)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !825, file: !310, line: 364, baseType: !838, size: 64, offset: 960)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !825, file: !310, line: 365, baseType: !314, size: 32, offset: 1024)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !825, file: !310, line: 366, baseType: !314, size: 32, offset: 1056)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !825, file: !310, line: 367, baseType: !859, size: 32, offset: 1088)
!859 = !DICompositeType(tag: DW_TAG_array_type, baseType: !118, size: 32, elements: !515)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !825, file: !310, line: 368, baseType: !314, size: 32, offset: 1120)
!861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !862, size: 32)
!862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !863, line: 343, size: 64, elements: !864)
!863 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!864 = !{!865, !866}
!865 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !862, file: !863, line: 344, baseType: !118, size: 32)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !862, file: !863, line: 345, baseType: !118, size: 32, offset: 32)
!867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !118, size: 32)
!868 = !{!869, !875, !891, !902, !805}
!869 = !DIGlobalVariableExpression(var: !870, expr: !DIExpression())
!870 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !807, file: !871, line: 752, type: !872, isLocal: false, isDefinition: true, align: 16)
!871 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!872 = !DICompositeType(tag: DW_TAG_array_type, baseType: !349, size: 640, elements: !873)
!873 = !{!874}
!874 = !DISubrange(count: 40)
!875 = !DIGlobalVariableExpression(var: !876, expr: !DIExpression())
!876 = distinct !DIGlobalVariable(name: "__device_dts_ord_9", scope: !807, file: !871, line: 752, type: !877, isLocal: false, isDefinition: true, align: 32)
!877 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !878)
!878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !879)
!879 = !{!880, !881, !882, !883, !889, !890}
!880 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !878, file: !334, line: 380, baseType: !278, size: 32)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !878, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !878, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !878, file: !334, line: 386, baseType: !884, size: 32, offset: 96)
!884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !885, size: 32)
!885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !886)
!886 = !{!887, !888}
!887 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !885, file: !334, line: 359, baseType: !185, size: 8)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !885, file: !334, line: 364, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !878, file: !334, line: 388, baseType: !113, size: 32, offset: 128)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !878, file: !334, line: 396, baseType: !348, size: 32, offset: 160)
!891 = !DIGlobalVariableExpression(var: !892, expr: !DIExpression())
!892 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_9", scope: !807, file: !871, line: 752, type: !893, isLocal: true, isDefinition: true, align: 32)
!893 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !894)
!894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !325, line: 51, size: 64, elements: !895)
!895 = !{!896, !901}
!896 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !894, file: !325, line: 60, baseType: !897, size: 32)
!897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !898, size: 32)
!898 = !DISubroutineType(types: !899)
!899 = !{!119, !900}
!900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !877, size: 32)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !894, file: !325, line: 65, baseType: !900, size: 32, offset: 32)
!902 = !DIGlobalVariableExpression(var: !903, expr: !DIExpression())
!903 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_9", scope: !807, file: !871, line: 752, type: !885, isLocal: true, isDefinition: true, align: 8)
!904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !816, line: 100, size: 224, elements: !905)
!905 = !{!906, !912, !913, !922, !927, !932, !938}
!906 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !904, file: !816, line: 101, baseType: !907, size: 32)
!907 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !816, line: 76, baseType: !908)
!908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !909, size: 32)
!909 = !DISubroutineType(types: !910)
!910 = !{!119, !900, !911}
!911 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !816, line: 56, baseType: !113)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !904, file: !816, line: 102, baseType: !907, size: 32, offset: 32)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !904, file: !816, line: 103, baseType: !914, size: 32, offset: 64)
!914 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !816, line: 83, baseType: !915)
!915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !916, size: 32)
!916 = !DISubroutineType(types: !917)
!917 = !{!119, !900, !911, !918, !113}
!918 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !816, line: 72, baseType: !919)
!919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !920, size: 32)
!920 = !DISubroutineType(types: !921)
!921 = !{null, !900, !911, !113}
!922 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !904, file: !816, line: 104, baseType: !923, size: 32, offset: 96)
!923 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !816, line: 79, baseType: !924)
!924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !925, size: 32)
!925 = !DISubroutineType(types: !926)
!926 = !{!119, !900, !911, !867}
!927 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !904, file: !816, line: 105, baseType: !928, size: 32, offset: 128)
!928 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !816, line: 88, baseType: !929)
!929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !930, size: 32)
!930 = !DISubroutineType(types: !931)
!931 = !{!815, !900, !911}
!932 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !904, file: !816, line: 106, baseType: !933, size: 32, offset: 160)
!933 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !816, line: 92, baseType: !934)
!934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !935, size: 32)
!935 = !DISubroutineType(types: !936)
!936 = !{!119, !900, !911, !937}
!937 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !816, line: 64, baseType: !113)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !904, file: !816, line: 107, baseType: !939, size: 32, offset: 192)
!939 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !816, line: 96, baseType: !940)
!940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !941, size: 32)
!941 = !DISubroutineType(types: !942)
!942 = !{!119, !900, !911, !113}
!943 = !DIGlobalVariableExpression(var: !944, expr: !DIExpression())
!944 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !945, file: !1002, line: 603, type: !1004, isLocal: true, isDefinition: true, align: 32)
!945 = distinct !DICompileUnit(language: DW_LANG_C99, file: !946, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !947, globals: !999, splitDebugInlining: false, nameTableKind: None)
!946 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pi")
!947 = !{!113, !119, !948}
!948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !949, size: 32)
!949 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !950)
!950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !951, line: 336, size: 160, elements: !952)
!951 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!952 = !{!953, !973, !977, !981, !994}
!953 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !950, file: !951, line: 365, baseType: !954, size: 32)
!954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !955, size: 32)
!955 = !DISubroutineType(types: !956)
!956 = !{!119, !957, !972}
!957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !958, size: 32)
!958 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !959)
!959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !960)
!960 = !{!961, !962, !963, !964, !970, !971}
!961 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !959, file: !334, line: 380, baseType: !278, size: 32)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !959, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !959, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !959, file: !334, line: 386, baseType: !965, size: 32, offset: 96)
!965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !966, size: 32)
!966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !967)
!967 = !{!968, !969}
!968 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !966, file: !334, line: 359, baseType: !185, size: 8)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !966, file: !334, line: 364, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !959, file: !334, line: 388, baseType: !113, size: 32, offset: 128)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !959, file: !334, line: 396, baseType: !348, size: 32, offset: 160)
!972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !186, size: 32)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !950, file: !951, line: 366, baseType: !974, size: 32, offset: 32)
!974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !975, size: 32)
!975 = !DISubroutineType(types: !976)
!976 = !{null, !957, !186}
!977 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !950, file: !951, line: 374, baseType: !978, size: 32, offset: 64)
!978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !979, size: 32)
!979 = !DISubroutineType(types: !980)
!980 = !{!119, !957}
!981 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !950, file: !951, line: 377, baseType: !982, size: 32, offset: 96)
!982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !983, size: 32)
!983 = !DISubroutineType(types: !984)
!984 = !{!119, !957, !985}
!985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !986, size: 32)
!986 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !987)
!987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !951, line: 122, size: 64, elements: !988)
!988 = !{!989, !990, !991, !992, !993}
!989 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !987, file: !951, line: 123, baseType: !118, size: 32)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !987, file: !951, line: 124, baseType: !185, size: 8, offset: 32)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !987, file: !951, line: 125, baseType: !185, size: 8, offset: 40)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !987, file: !951, line: 126, baseType: !185, size: 8, offset: 48)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !987, file: !951, line: 127, baseType: !185, size: 8, offset: 56)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !950, file: !951, line: 379, baseType: !995, size: 32, offset: 128)
!995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !996, size: 32)
!996 = !DISubroutineType(types: !997)
!997 = !{!119, !957, !998}
!998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !987, size: 32)
!999 = !{!943, !1000}
!1000 = !DIGlobalVariableExpression(var: !1001, expr: !DIExpression())
!1001 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !945, file: !1002, line: 38, type: !1003, isLocal: true, isDefinition: true)
!1002 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1003 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !957)
!1004 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1005)
!1005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !325, line: 51, size: 64, elements: !1006)
!1006 = !{!1007, !1008}
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1005, file: !325, line: 60, baseType: !978, size: 32)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1005, file: !325, line: 65, baseType: !957, size: 32, offset: 32)
!1009 = !DIGlobalVariableExpression(var: !1010, expr: !DIExpression())
!1010 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1011, file: !1180, line: 762, type: !1292, isLocal: true, isDefinition: true)
!1011 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1012, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1013, retainedTypes: !1031, globals: !1177, splitDebugInlining: false, nameTableKind: None)
!1012 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pi")
!1013 = !{!30, !1014, !1020, !1025, !815}
!1014 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1015, line: 506, baseType: !32, size: 32, elements: !1016)
!1015 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1016 = !{!1017, !1018, !1019}
!1017 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1018 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1019 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1020 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1015, line: 512, baseType: !32, size: 32, elements: !1021)
!1021 = !{!1022, !1023, !1024}
!1022 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1023 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1024 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1025 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !723, line: 43, baseType: !32, size: 32, elements: !1026)
!1026 = !{!1027, !1028, !1029, !1030}
!1027 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1028 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1029 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1030 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1031 = !{!113, !119, !1032, !1102, !1107, !1067, !1020, !1014, !1112, !1113, !118, !1127, !1082, !106, !1137, !1138}
!1032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1033, size: 32)
!1033 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1034)
!1034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1015, line: 523, size: 288, elements: !1035)
!1035 = !{!1036, !1057, !1063, !1068, !1072, !1073, !1074, !1078, !1098}
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1034, file: !1015, line: 524, baseType: !1037, size: 32)
!1037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1038, size: 32)
!1038 = !DISubroutineType(types: !1039)
!1039 = !{!119, !1040, !1055, !1056}
!1040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1041, size: 32)
!1041 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1042)
!1042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !1043)
!1043 = !{!1044, !1045, !1046, !1047, !1053, !1054}
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1042, file: !334, line: 380, baseType: !278, size: 32)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1042, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1042, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1042, file: !334, line: 386, baseType: !1048, size: 32, offset: 96)
!1048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1049, size: 32)
!1049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !1050)
!1050 = !{!1051, !1052}
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1049, file: !334, line: 359, baseType: !185, size: 8)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1049, file: !334, line: 364, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1042, file: !334, line: 388, baseType: !113, size: 32, offset: 128)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1042, file: !334, line: 396, baseType: !348, size: 32, offset: 160)
!1055 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1015, line: 237, baseType: !185)
!1056 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1015, line: 257, baseType: !118)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1034, file: !1015, line: 530, baseType: !1058, size: 32, offset: 32)
!1058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1059, size: 32)
!1059 = !DISubroutineType(types: !1060)
!1060 = !{!119, !1040, !1061}
!1061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1062, size: 32)
!1062 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1015, line: 229, baseType: !118)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1034, file: !1015, line: 532, baseType: !1064, size: 32, offset: 64)
!1064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1065, size: 32)
!1065 = !DISubroutineType(types: !1066)
!1066 = !{!119, !1040, !1067, !1062}
!1067 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1015, line: 216, baseType: !118)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1034, file: !1015, line: 535, baseType: !1069, size: 32, offset: 96)
!1069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1070, size: 32)
!1070 = !DISubroutineType(types: !1071)
!1071 = !{!119, !1040, !1067}
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1034, file: !1015, line: 537, baseType: !1069, size: 32, offset: 128)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1034, file: !1015, line: 539, baseType: !1069, size: 32, offset: 160)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1034, file: !1015, line: 541, baseType: !1075, size: 32, offset: 192)
!1075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1076, size: 32)
!1076 = !DISubroutineType(types: !1077)
!1077 = !{!119, !1040, !1055, !1014, !1020}
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1034, file: !1015, line: 544, baseType: !1079, size: 32, offset: 224)
!1079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1080, size: 32)
!1080 = !DISubroutineType(types: !1081)
!1081 = !{!119, !1040, !1082, !345}
!1082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1083, size: 32)
!1083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1015, line: 478, size: 96, elements: !1084)
!1084 = !{!1085, !1092, !1097}
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1083, file: !1015, line: 482, baseType: !1086, size: 32)
!1086 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1087, line: 33, baseType: !1088)
!1087 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1087, line: 29, size: 32, elements: !1089)
!1089 = !{!1090}
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1088, file: !1087, line: 30, baseType: !1091, size: 32)
!1091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1088, size: 32)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1083, file: !1015, line: 485, baseType: !1093, size: 32, offset: 32)
!1093 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1015, line: 464, baseType: !1094)
!1094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1095, size: 32)
!1095 = !DISubroutineType(types: !1096)
!1096 = !{null, !1040, !1082, !1067}
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1083, file: !1015, line: 493, baseType: !1067, size: 32, offset: 64)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1034, file: !1015, line: 547, baseType: !1099, size: 32, offset: 256)
!1099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1100, size: 32)
!1100 = !DISubroutineType(types: !1101)
!1101 = !{!118, !1040}
!1102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1103, size: 32)
!1103 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1104)
!1104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1015, line: 428, size: 32, elements: !1105)
!1105 = !{!1106}
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1104, file: !1015, line: 434, baseType: !1067, size: 32)
!1107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1108, size: 32)
!1108 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1109)
!1109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1015, line: 441, size: 32, elements: !1110)
!1110 = !{!1111}
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1109, file: !1015, line: 447, baseType: !1067, size: 32)
!1112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1109, size: 32)
!1113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1114, size: 32)
!1114 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !310, line: 275, baseType: !1115)
!1115 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 264, size: 320, elements: !1116)
!1116 = !{!1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125}
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1115, file: !310, line: 266, baseType: !314, size: 32)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1115, file: !310, line: 267, baseType: !314, size: 32, offset: 32)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1115, file: !310, line: 268, baseType: !314, size: 32, offset: 64)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1115, file: !310, line: 269, baseType: !314, size: 32, offset: 96)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1115, file: !310, line: 270, baseType: !314, size: 32, offset: 128)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1115, file: !310, line: 271, baseType: !314, size: 32, offset: 160)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1115, file: !310, line: 272, baseType: !314, size: 32, offset: 192)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1115, file: !310, line: 273, baseType: !314, size: 32, offset: 224)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1115, file: !310, line: 274, baseType: !1126, size: 64, offset: 256)
!1126 = !DICompositeType(tag: DW_TAG_array_type, baseType: !314, size: 64, elements: !174)
!1127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1128, size: 32)
!1128 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !310, line: 288, baseType: !1129)
!1129 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 281, size: 288, elements: !1130)
!1130 = !{!1131, !1132, !1133, !1135, !1136}
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1129, file: !310, line: 283, baseType: !314, size: 32)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1129, file: !310, line: 284, baseType: !314, size: 32, offset: 32)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1129, file: !310, line: 285, baseType: !1134, size: 128, offset: 64)
!1134 = !DICompositeType(tag: DW_TAG_array_type, baseType: !314, size: 128, elements: !684)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1129, file: !310, line: 286, baseType: !838, size: 64, offset: 192)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1129, file: !310, line: 287, baseType: !314, size: 32, offset: 256)
!1137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !911, size: 32)
!1138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1139, size: 32)
!1139 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1140)
!1140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !816, line: 100, size: 224, elements: !1141)
!1141 = !{!1142, !1147, !1148, !1157, !1162, !1167, !1172}
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1140, file: !816, line: 101, baseType: !1143, size: 32)
!1143 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !816, line: 76, baseType: !1144)
!1144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1145, size: 32)
!1145 = !DISubroutineType(types: !1146)
!1146 = !{!119, !1040, !911}
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1140, file: !816, line: 102, baseType: !1143, size: 32, offset: 32)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1140, file: !816, line: 103, baseType: !1149, size: 32, offset: 64)
!1149 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !816, line: 83, baseType: !1150)
!1150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1151, size: 32)
!1151 = !DISubroutineType(types: !1152)
!1152 = !{!119, !1040, !911, !1153, !113}
!1153 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !816, line: 72, baseType: !1154)
!1154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1155, size: 32)
!1155 = !DISubroutineType(types: !1156)
!1156 = !{null, !1040, !911, !113}
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1140, file: !816, line: 104, baseType: !1158, size: 32, offset: 96)
!1158 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !816, line: 79, baseType: !1159)
!1159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1160, size: 32)
!1160 = !DISubroutineType(types: !1161)
!1161 = !{!119, !1040, !911, !867}
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1140, file: !816, line: 105, baseType: !1163, size: 32, offset: 128)
!1163 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !816, line: 88, baseType: !1164)
!1164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1165, size: 32)
!1165 = !DISubroutineType(types: !1166)
!1166 = !{!815, !1040, !911}
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1140, file: !816, line: 106, baseType: !1168, size: 32, offset: 160)
!1168 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !816, line: 92, baseType: !1169)
!1169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1170, size: 32)
!1170 = !DISubroutineType(types: !1171)
!1171 = !{!119, !1040, !911, !937}
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1140, file: !816, line: 107, baseType: !1173, size: 32, offset: 192)
!1173 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !816, line: 96, baseType: !1174)
!1174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1175, size: 32)
!1175 = !DISubroutineType(types: !1176)
!1176 = !{!119, !1040, !911, !113}
!1177 = !{!1178, !1184, !1186, !1196, !1198, !1200, !1202, !1207, !1209, !1211, !1216, !1218, !1220, !1222, !1224, !1226, !1228, !1230, !1232, !1234, !1236, !1238, !1240, !1242, !1244, !1258, !1260, !1262, !1264, !1266, !1268, !1270, !1272, !1274, !1276, !1278, !1280, !1282, !1284, !1286, !1009, !1288, !1290, !1303, !1305, !1307, !1309, !1311, !1313}
!1178 = !DIGlobalVariableExpression(var: !1179, expr: !DIExpression())
!1179 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_25", scope: !1011, file: !1180, line: 762, type: !1181, isLocal: false, isDefinition: true, align: 16)
!1180 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1181 = !DICompositeType(tag: DW_TAG_array_type, baseType: !349, size: 112, elements: !1182)
!1182 = !{!1183}
!1183 = !DISubrange(count: 7)
!1184 = !DIGlobalVariableExpression(var: !1185, expr: !DIExpression())
!1185 = distinct !DIGlobalVariable(name: "__device_dts_ord_25", scope: !1011, file: !1180, line: 762, type: !1041, isLocal: false, isDefinition: true, align: 32)
!1186 = !DIGlobalVariableExpression(var: !1187, expr: !DIExpression())
!1187 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_25", scope: !1011, file: !1180, line: 762, type: !1188, isLocal: true, isDefinition: true, align: 32)
!1188 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1189)
!1189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !325, line: 51, size: 64, elements: !1190)
!1190 = !{!1191, !1195}
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1189, file: !325, line: 60, baseType: !1192, size: 32)
!1192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1193, size: 32)
!1193 = !DISubroutineType(types: !1194)
!1194 = !{!119, !1040}
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1189, file: !325, line: 65, baseType: !1040, size: 32, offset: 32)
!1196 = !DIGlobalVariableExpression(var: !1197, expr: !DIExpression())
!1197 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_20", scope: !1011, file: !1180, line: 766, type: !1181, isLocal: false, isDefinition: true, align: 16)
!1198 = !DIGlobalVariableExpression(var: !1199, expr: !DIExpression())
!1199 = distinct !DIGlobalVariable(name: "__device_dts_ord_20", scope: !1011, file: !1180, line: 766, type: !1041, isLocal: false, isDefinition: true, align: 32)
!1200 = !DIGlobalVariableExpression(var: !1201, expr: !DIExpression())
!1201 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_20", scope: !1011, file: !1180, line: 766, type: !1188, isLocal: true, isDefinition: true, align: 32)
!1202 = !DIGlobalVariableExpression(var: !1203, expr: !DIExpression())
!1203 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !1011, file: !1180, line: 770, type: !1204, isLocal: false, isDefinition: true, align: 16)
!1204 = !DICompositeType(tag: DW_TAG_array_type, baseType: !349, size: 80, elements: !1205)
!1205 = !{!1206}
!1206 = !DISubrange(count: 5)
!1207 = !DIGlobalVariableExpression(var: !1208, expr: !DIExpression())
!1208 = distinct !DIGlobalVariable(name: "__device_dts_ord_72", scope: !1011, file: !1180, line: 770, type: !1041, isLocal: false, isDefinition: true, align: 32)
!1209 = !DIGlobalVariableExpression(var: !1210, expr: !DIExpression())
!1210 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_72", scope: !1011, file: !1180, line: 770, type: !1188, isLocal: true, isDefinition: true, align: 32)
!1211 = !DIGlobalVariableExpression(var: !1212, expr: !DIExpression())
!1212 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_23", scope: !1011, file: !1180, line: 774, type: !1213, isLocal: false, isDefinition: true, align: 16)
!1213 = !DICompositeType(tag: DW_TAG_array_type, baseType: !349, size: 96, elements: !1214)
!1214 = !{!1215}
!1215 = !DISubrange(count: 6)
!1216 = !DIGlobalVariableExpression(var: !1217, expr: !DIExpression())
!1217 = distinct !DIGlobalVariable(name: "__device_dts_ord_23", scope: !1011, file: !1180, line: 774, type: !1041, isLocal: false, isDefinition: true, align: 32)
!1218 = !DIGlobalVariableExpression(var: !1219, expr: !DIExpression())
!1219 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_23", scope: !1011, file: !1180, line: 774, type: !1188, isLocal: true, isDefinition: true, align: 32)
!1220 = !DIGlobalVariableExpression(var: !1221, expr: !DIExpression())
!1221 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !1011, file: !1180, line: 778, type: !1204, isLocal: false, isDefinition: true, align: 16)
!1222 = !DIGlobalVariableExpression(var: !1223, expr: !DIExpression())
!1223 = distinct !DIGlobalVariable(name: "__device_dts_ord_73", scope: !1011, file: !1180, line: 778, type: !1041, isLocal: false, isDefinition: true, align: 32)
!1224 = !DIGlobalVariableExpression(var: !1225, expr: !DIExpression())
!1225 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_73", scope: !1011, file: !1180, line: 778, type: !1188, isLocal: true, isDefinition: true, align: 32)
!1226 = !DIGlobalVariableExpression(var: !1227, expr: !DIExpression())
!1227 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_74", scope: !1011, file: !1180, line: 782, type: !1204, isLocal: false, isDefinition: true, align: 16)
!1228 = !DIGlobalVariableExpression(var: !1229, expr: !DIExpression())
!1229 = distinct !DIGlobalVariable(name: "__device_dts_ord_74", scope: !1011, file: !1180, line: 782, type: !1041, isLocal: false, isDefinition: true, align: 32)
!1230 = !DIGlobalVariableExpression(var: !1231, expr: !DIExpression())
!1231 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_74", scope: !1011, file: !1180, line: 782, type: !1188, isLocal: true, isDefinition: true, align: 32)
!1232 = !DIGlobalVariableExpression(var: !1233, expr: !DIExpression())
!1233 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_75", scope: !1011, file: !1180, line: 786, type: !1204, isLocal: false, isDefinition: true, align: 16)
!1234 = !DIGlobalVariableExpression(var: !1235, expr: !DIExpression())
!1235 = distinct !DIGlobalVariable(name: "__device_dts_ord_75", scope: !1011, file: !1180, line: 786, type: !1041, isLocal: false, isDefinition: true, align: 32)
!1236 = !DIGlobalVariableExpression(var: !1237, expr: !DIExpression())
!1237 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_75", scope: !1011, file: !1180, line: 786, type: !1188, isLocal: true, isDefinition: true, align: 32)
!1238 = !DIGlobalVariableExpression(var: !1239, expr: !DIExpression())
!1239 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_76", scope: !1011, file: !1180, line: 790, type: !1204, isLocal: false, isDefinition: true, align: 16)
!1240 = !DIGlobalVariableExpression(var: !1241, expr: !DIExpression())
!1241 = distinct !DIGlobalVariable(name: "__device_dts_ord_76", scope: !1011, file: !1180, line: 790, type: !1041, isLocal: false, isDefinition: true, align: 32)
!1242 = !DIGlobalVariableExpression(var: !1243, expr: !DIExpression())
!1243 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_76", scope: !1011, file: !1180, line: 790, type: !1188, isLocal: true, isDefinition: true, align: 32)
!1244 = !DIGlobalVariableExpression(var: !1245, expr: !DIExpression())
!1245 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1011, file: !1180, line: 762, type: !1246, isLocal: true, isDefinition: true)
!1246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1247, line: 237, size: 128, elements: !1248)
!1247 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1248 = !{!1249, !1250, !1251}
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1246, file: !1247, line: 239, baseType: !1109, size: 32)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1246, file: !1247, line: 241, baseType: !1040, size: 32, offset: 32)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1246, file: !1247, line: 243, baseType: !1252, size: 64, offset: 64)
!1252 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1087, line: 40, baseType: !1253)
!1253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1087, line: 35, size: 64, elements: !1254)
!1254 = !{!1255, !1257}
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1253, file: !1087, line: 36, baseType: !1256, size: 32)
!1256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1086, size: 32)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1253, file: !1087, line: 37, baseType: !1256, size: 32, offset: 32)
!1258 = !DIGlobalVariableExpression(var: !1259, expr: !DIExpression())
!1259 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_25", scope: !1011, file: !1180, line: 762, type: !1049, isLocal: true, isDefinition: true, align: 8)
!1260 = !DIGlobalVariableExpression(var: !1261, expr: !DIExpression())
!1261 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1011, file: !1180, line: 766, type: !1246, isLocal: true, isDefinition: true)
!1262 = !DIGlobalVariableExpression(var: !1263, expr: !DIExpression())
!1263 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_20", scope: !1011, file: !1180, line: 766, type: !1049, isLocal: true, isDefinition: true, align: 8)
!1264 = !DIGlobalVariableExpression(var: !1265, expr: !DIExpression())
!1265 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1011, file: !1180, line: 770, type: !1246, isLocal: true, isDefinition: true)
!1266 = !DIGlobalVariableExpression(var: !1267, expr: !DIExpression())
!1267 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_72", scope: !1011, file: !1180, line: 770, type: !1049, isLocal: true, isDefinition: true, align: 8)
!1268 = !DIGlobalVariableExpression(var: !1269, expr: !DIExpression())
!1269 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1011, file: !1180, line: 774, type: !1246, isLocal: true, isDefinition: true)
!1270 = !DIGlobalVariableExpression(var: !1271, expr: !DIExpression())
!1271 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_23", scope: !1011, file: !1180, line: 774, type: !1049, isLocal: true, isDefinition: true, align: 8)
!1272 = !DIGlobalVariableExpression(var: !1273, expr: !DIExpression())
!1273 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1011, file: !1180, line: 778, type: !1246, isLocal: true, isDefinition: true)
!1274 = !DIGlobalVariableExpression(var: !1275, expr: !DIExpression())
!1275 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_73", scope: !1011, file: !1180, line: 778, type: !1049, isLocal: true, isDefinition: true, align: 8)
!1276 = !DIGlobalVariableExpression(var: !1277, expr: !DIExpression())
!1277 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1011, file: !1180, line: 782, type: !1246, isLocal: true, isDefinition: true)
!1278 = !DIGlobalVariableExpression(var: !1279, expr: !DIExpression())
!1279 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_74", scope: !1011, file: !1180, line: 782, type: !1049, isLocal: true, isDefinition: true, align: 8)
!1280 = !DIGlobalVariableExpression(var: !1281, expr: !DIExpression())
!1281 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1011, file: !1180, line: 786, type: !1246, isLocal: true, isDefinition: true)
!1282 = !DIGlobalVariableExpression(var: !1283, expr: !DIExpression())
!1283 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_75", scope: !1011, file: !1180, line: 786, type: !1049, isLocal: true, isDefinition: true, align: 8)
!1284 = !DIGlobalVariableExpression(var: !1285, expr: !DIExpression())
!1285 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1011, file: !1180, line: 790, type: !1246, isLocal: true, isDefinition: true)
!1286 = !DIGlobalVariableExpression(var: !1287, expr: !DIExpression())
!1287 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_76", scope: !1011, file: !1180, line: 790, type: !1049, isLocal: true, isDefinition: true, align: 8)
!1288 = !DIGlobalVariableExpression(var: !1289, expr: !DIExpression())
!1289 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1011, file: !1180, line: 656, type: !1033, isLocal: true, isDefinition: true)
!1290 = !DIGlobalVariableExpression(var: !1291, expr: !DIExpression())
!1291 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1011, file: !1180, line: 766, type: !1292, isLocal: true, isDefinition: true)
!1292 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1293)
!1293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1247, line: 224, size: 160, elements: !1294)
!1294 = !{!1295, !1296, !1297, !1298}
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1293, file: !1247, line: 226, baseType: !1104, size: 32)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1293, file: !1247, line: 228, baseType: !867, size: 32, offset: 32)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1293, file: !1247, line: 230, baseType: !119, size: 32, offset: 64)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1293, file: !1247, line: 231, baseType: !1299, size: 64, offset: 96)
!1299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !863, line: 343, size: 64, elements: !1300)
!1300 = !{!1301, !1302}
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1299, file: !863, line: 344, baseType: !118, size: 32)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1299, file: !863, line: 345, baseType: !118, size: 32, offset: 32)
!1303 = !DIGlobalVariableExpression(var: !1304, expr: !DIExpression())
!1304 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1011, file: !1180, line: 770, type: !1292, isLocal: true, isDefinition: true)
!1305 = !DIGlobalVariableExpression(var: !1306, expr: !DIExpression())
!1306 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1011, file: !1180, line: 774, type: !1292, isLocal: true, isDefinition: true)
!1307 = !DIGlobalVariableExpression(var: !1308, expr: !DIExpression())
!1308 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1011, file: !1180, line: 778, type: !1292, isLocal: true, isDefinition: true)
!1309 = !DIGlobalVariableExpression(var: !1310, expr: !DIExpression())
!1310 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1011, file: !1180, line: 782, type: !1292, isLocal: true, isDefinition: true)
!1311 = !DIGlobalVariableExpression(var: !1312, expr: !DIExpression())
!1312 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1011, file: !1180, line: 786, type: !1292, isLocal: true, isDefinition: true)
!1313 = !DIGlobalVariableExpression(var: !1314, expr: !DIExpression())
!1314 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1011, file: !1180, line: 790, type: !1292, isLocal: true, isDefinition: true)
!1315 = !DIGlobalVariableExpression(var: !1316, expr: !DIExpression())
!1316 = distinct !DIGlobalVariable(name: "log_const_uart_stm32", scope: !1317, file: !1456, line: 44, type: !1574, isLocal: false, isDefinition: true)
!1317 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1318, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1319, retainedTypes: !1352, globals: !1453, splitDebugInlining: false, nameTableKind: None)
!1318 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pi")
!1319 = !{!30, !1320, !1327, !1334, !1341, !1347, !815}
!1320 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !951, line: 47, baseType: !32, size: 32, elements: !1321)
!1321 = !{!1322, !1323, !1324, !1325, !1326}
!1322 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1323 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1324 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1325 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1326 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1327 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !951, line: 75, baseType: !32, size: 32, elements: !1328)
!1328 = !{!1329, !1330, !1331, !1332, !1333}
!1329 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1330 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1331 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1332 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1333 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1334 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !951, line: 92, baseType: !32, size: 32, elements: !1335)
!1335 = !{!1336, !1337, !1338, !1339, !1340}
!1336 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1337 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1338 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1339 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1340 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1341 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !951, line: 84, baseType: !32, size: 32, elements: !1342)
!1342 = !{!1343, !1344, !1345, !1346}
!1343 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1344 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1345 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1346 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1347 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !951, line: 107, baseType: !32, size: 32, elements: !1348)
!1348 = !{!1349, !1350, !1351}
!1349 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1350 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1351 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1352 = !{!113, !119, !1353, !186, !185, !1402, !118, !911, !1413, !199, !120, !1452}
!1353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1354, size: 32)
!1354 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1355)
!1355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !951, line: 336, size: 160, elements: !1356)
!1356 = !{!1357, !1376, !1380, !1384, !1397}
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1355, file: !951, line: 365, baseType: !1358, size: 32)
!1358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1359, size: 32)
!1359 = !DISubroutineType(types: !1360)
!1360 = !{!119, !1361, !972}
!1361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1362, size: 32)
!1362 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1363)
!1363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !1364)
!1364 = !{!1365, !1366, !1367, !1368, !1374, !1375}
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1363, file: !334, line: 380, baseType: !278, size: 32)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1363, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1363, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1363, file: !334, line: 386, baseType: !1369, size: 32, offset: 96)
!1369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1370, size: 32)
!1370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !1371)
!1371 = !{!1372, !1373}
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1370, file: !334, line: 359, baseType: !185, size: 8)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1370, file: !334, line: 364, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1363, file: !334, line: 388, baseType: !113, size: 32, offset: 128)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1363, file: !334, line: 396, baseType: !348, size: 32, offset: 160)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1355, file: !951, line: 366, baseType: !1377, size: 32, offset: 32)
!1377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1378, size: 32)
!1378 = !DISubroutineType(types: !1379)
!1379 = !{null, !1361, !186}
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1355, file: !951, line: 374, baseType: !1381, size: 32, offset: 64)
!1381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1382, size: 32)
!1382 = !DISubroutineType(types: !1383)
!1383 = !{!119, !1361}
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1355, file: !951, line: 377, baseType: !1385, size: 32, offset: 96)
!1385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1386, size: 32)
!1386 = !DISubroutineType(types: !1387)
!1387 = !{!119, !1361, !1388}
!1388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1389, size: 32)
!1389 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1390)
!1390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !951, line: 122, size: 64, elements: !1391)
!1391 = !{!1392, !1393, !1394, !1395, !1396}
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1390, file: !951, line: 123, baseType: !118, size: 32)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1390, file: !951, line: 124, baseType: !185, size: 8, offset: 32)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1390, file: !951, line: 125, baseType: !185, size: 8, offset: 40)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1390, file: !951, line: 126, baseType: !185, size: 8, offset: 48)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1390, file: !951, line: 127, baseType: !185, size: 8, offset: 56)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1355, file: !951, line: 379, baseType: !1398, size: 32, offset: 128)
!1398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1399, size: 32)
!1399 = !DISubroutineType(types: !1400)
!1400 = !{!119, !1361, !1401}
!1401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1390, size: 32)
!1402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1403, size: 32)
!1403 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !310, line: 507, baseType: !1404)
!1404 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 498, size: 224, elements: !1405)
!1405 = !{!1406, !1407, !1408, !1409, !1410, !1411, !1412}
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1404, file: !310, line: 500, baseType: !314, size: 32)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1404, file: !310, line: 501, baseType: !314, size: 32, offset: 32)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1404, file: !310, line: 502, baseType: !314, size: 32, offset: 64)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1404, file: !310, line: 503, baseType: !314, size: 32, offset: 96)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1404, file: !310, line: 504, baseType: !314, size: 32, offset: 128)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1404, file: !310, line: 505, baseType: !314, size: 32, offset: 160)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1404, file: !310, line: 506, baseType: !314, size: 32, offset: 192)
!1413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1414, size: 32)
!1414 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1415)
!1415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !816, line: 100, size: 224, elements: !1416)
!1416 = !{!1417, !1422, !1423, !1432, !1437, !1442, !1447}
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1415, file: !816, line: 101, baseType: !1418, size: 32)
!1418 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !816, line: 76, baseType: !1419)
!1419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1420, size: 32)
!1420 = !DISubroutineType(types: !1421)
!1421 = !{!119, !1361, !911}
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1415, file: !816, line: 102, baseType: !1418, size: 32, offset: 32)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1415, file: !816, line: 103, baseType: !1424, size: 32, offset: 64)
!1424 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !816, line: 83, baseType: !1425)
!1425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1426, size: 32)
!1426 = !DISubroutineType(types: !1427)
!1427 = !{!119, !1361, !911, !1428, !113}
!1428 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !816, line: 72, baseType: !1429)
!1429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1430, size: 32)
!1430 = !DISubroutineType(types: !1431)
!1431 = !{null, !1361, !911, !113}
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1415, file: !816, line: 104, baseType: !1433, size: 32, offset: 96)
!1433 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !816, line: 79, baseType: !1434)
!1434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1435, size: 32)
!1435 = !DISubroutineType(types: !1436)
!1436 = !{!119, !1361, !911, !867}
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1415, file: !816, line: 105, baseType: !1438, size: 32, offset: 128)
!1438 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !816, line: 88, baseType: !1439)
!1439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1440, size: 32)
!1440 = !DISubroutineType(types: !1441)
!1441 = !{!815, !1361, !911}
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1415, file: !816, line: 106, baseType: !1443, size: 32, offset: 160)
!1443 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !816, line: 92, baseType: !1444)
!1444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1445, size: 32)
!1445 = !DISubroutineType(types: !1446)
!1446 = !{!119, !1361, !911, !937}
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1415, file: !816, line: 107, baseType: !1448, size: 32, offset: 192)
!1448 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !816, line: 96, baseType: !1449)
!1449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1450, size: 32)
!1450 = !DISubroutineType(types: !1451)
!1451 = !{!119, !1361, !911, !113}
!1452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !314, size: 32)
!1453 = !{!1315, !1454, !1460, !1462, !1469, !1471, !1473, !1475, !1477, !1479, !1481, !1483, !1485, !1487, !1531, !1534, !1536, !1539, !1542, !1544, !1550, !1552, !1554, !1556, !1558, !1560, !1562, !1564, !1566, !1568, !1570, !1572}
!1454 = !DIGlobalVariableExpression(var: !1455, expr: !DIExpression())
!1455 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_47", scope: !1317, file: !1456, line: 1914, type: !1457, isLocal: false, isDefinition: true, align: 16)
!1456 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1457 = !DICompositeType(tag: DW_TAG_array_type, baseType: !349, size: 128, elements: !1458)
!1458 = !{!1459}
!1459 = !DISubrange(count: 8)
!1460 = !DIGlobalVariableExpression(var: !1461, expr: !DIExpression())
!1461 = distinct !DIGlobalVariable(name: "__device_dts_ord_47", scope: !1317, file: !1456, line: 1914, type: !1362, isLocal: false, isDefinition: true, align: 32)
!1462 = !DIGlobalVariableExpression(var: !1463, expr: !DIExpression())
!1463 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_47", scope: !1317, file: !1456, line: 1914, type: !1464, isLocal: true, isDefinition: true, align: 32)
!1464 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1465)
!1465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !325, line: 51, size: 64, elements: !1466)
!1466 = !{!1467, !1468}
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1465, file: !325, line: 60, baseType: !1381, size: 32)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1465, file: !325, line: 65, baseType: !1361, size: 32, offset: 32)
!1469 = !DIGlobalVariableExpression(var: !1470, expr: !DIExpression())
!1470 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_44", scope: !1317, file: !1456, line: 1914, type: !1457, isLocal: false, isDefinition: true, align: 16)
!1471 = !DIGlobalVariableExpression(var: !1472, expr: !DIExpression())
!1472 = distinct !DIGlobalVariable(name: "__device_dts_ord_44", scope: !1317, file: !1456, line: 1914, type: !1362, isLocal: false, isDefinition: true, align: 32)
!1473 = !DIGlobalVariableExpression(var: !1474, expr: !DIExpression())
!1474 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_44", scope: !1317, file: !1456, line: 1914, type: !1464, isLocal: true, isDefinition: true, align: 32)
!1475 = !DIGlobalVariableExpression(var: !1476, expr: !DIExpression())
!1476 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_50", scope: !1317, file: !1456, line: 1914, type: !1457, isLocal: false, isDefinition: true, align: 16)
!1477 = !DIGlobalVariableExpression(var: !1478, expr: !DIExpression())
!1478 = distinct !DIGlobalVariable(name: "__device_dts_ord_50", scope: !1317, file: !1456, line: 1914, type: !1362, isLocal: false, isDefinition: true, align: 32)
!1479 = !DIGlobalVariableExpression(var: !1480, expr: !DIExpression())
!1480 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_50", scope: !1317, file: !1456, line: 1914, type: !1464, isLocal: true, isDefinition: true, align: 32)
!1481 = !DIGlobalVariableExpression(var: !1482, expr: !DIExpression())
!1482 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_47", scope: !1317, file: !1456, line: 1914, type: !1370, isLocal: true, isDefinition: true, align: 8)
!1483 = !DIGlobalVariableExpression(var: !1484, expr: !DIExpression())
!1484 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_44", scope: !1317, file: !1456, line: 1914, type: !1370, isLocal: true, isDefinition: true, align: 8)
!1485 = !DIGlobalVariableExpression(var: !1486, expr: !DIExpression())
!1486 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_50", scope: !1317, file: !1456, line: 1914, type: !1370, isLocal: true, isDefinition: true, align: 8)
!1487 = !DIGlobalVariableExpression(var: !1488, expr: !DIExpression())
!1488 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1317, file: !1456, line: 1914, type: !1489, isLocal: true, isDefinition: true)
!1489 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1490)
!1490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1491, line: 22, size: 224, elements: !1492)
!1491 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1492 = !{!1493, !1494, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508}
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1490, file: !1491, line: 24, baseType: !1402, size: 32)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1490, file: !1491, line: 26, baseType: !1495, size: 32, offset: 32)
!1495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1496, size: 32)
!1496 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1497)
!1497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !863, line: 343, size: 64, elements: !1498)
!1498 = !{!1499, !1500}
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1497, file: !863, line: 344, baseType: !118, size: 32)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1497, file: !863, line: 345, baseType: !118, size: 32, offset: 32)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1490, file: !1491, line: 28, baseType: !239, size: 32, offset: 64)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1490, file: !1491, line: 30, baseType: !345, size: 8, offset: 96)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1490, file: !1491, line: 32, baseType: !119, size: 32, offset: 128)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1490, file: !1491, line: 34, baseType: !345, size: 8, offset: 160)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1490, file: !1491, line: 36, baseType: !345, size: 8, offset: 168)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1490, file: !1491, line: 38, baseType: !345, size: 8, offset: 176)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1490, file: !1491, line: 40, baseType: !345, size: 8, offset: 184)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1490, file: !1491, line: 41, baseType: !1509, size: 32, offset: 192)
!1509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1510, size: 32)
!1510 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1511)
!1511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1512, line: 60, size: 64, elements: !1513)
!1512 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1513 = !{!1514, !1530}
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1511, file: !1512, line: 69, baseType: !1515, size: 32)
!1515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1516, size: 32)
!1516 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1517)
!1517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1512, line: 50, size: 64, elements: !1518)
!1518 = !{!1519, !1528, !1529}
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1517, file: !1512, line: 52, baseType: !1520, size: 32)
!1520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1521, size: 32)
!1521 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1522)
!1522 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1523, line: 37, baseType: !1524)
!1523 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1523, line: 32, size: 64, elements: !1525)
!1525 = !{!1526, !1527}
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1524, file: !1523, line: 34, baseType: !118, size: 32)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1524, file: !1523, line: 36, baseType: !118, size: 32, offset: 32)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1517, file: !1512, line: 54, baseType: !185, size: 8, offset: 32)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1517, file: !1512, line: 56, baseType: !185, size: 8, offset: 40)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1511, file: !1512, line: 71, baseType: !185, size: 8, offset: 32)
!1531 = !DIGlobalVariableExpression(var: !1532, expr: !DIExpression())
!1532 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1317, file: !1456, line: 1914, type: !1533, isLocal: true, isDefinition: true)
!1533 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1496, size: 64, elements: !515)
!1534 = !DIGlobalVariableExpression(var: !1535, expr: !DIExpression())
!1535 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_47", scope: !1317, file: !1456, line: 1914, type: !1510, isLocal: true, isDefinition: true)
!1536 = !DIGlobalVariableExpression(var: !1537, expr: !DIExpression())
!1537 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_47", scope: !1317, file: !1456, line: 1914, type: !1538, isLocal: true, isDefinition: true)
!1538 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1516, size: 64, elements: !515)
!1539 = !DIGlobalVariableExpression(var: !1540, expr: !DIExpression())
!1540 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_47", scope: !1317, file: !1456, line: 1914, type: !1541, isLocal: true, isDefinition: true)
!1541 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1521, size: 128, elements: !174)
!1542 = !DIGlobalVariableExpression(var: !1543, expr: !DIExpression())
!1543 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1317, file: !1456, line: 1539, type: !1354, isLocal: true, isDefinition: true)
!1544 = !DIGlobalVariableExpression(var: !1545, expr: !DIExpression())
!1545 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1317, file: !1456, line: 1914, type: !1546, isLocal: true, isDefinition: true)
!1546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1491, line: 74, size: 64, elements: !1547)
!1547 = !{!1548, !1549}
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1546, file: !1491, line: 76, baseType: !118, size: 32)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1546, file: !1491, line: 78, baseType: !1361, size: 32, offset: 32)
!1550 = !DIGlobalVariableExpression(var: !1551, expr: !DIExpression())
!1551 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_1", scope: !1317, file: !1456, line: 1914, type: !1489, isLocal: true, isDefinition: true)
!1552 = !DIGlobalVariableExpression(var: !1553, expr: !DIExpression())
!1553 = distinct !DIGlobalVariable(name: "pclken_1", scope: !1317, file: !1456, line: 1914, type: !1533, isLocal: true, isDefinition: true)
!1554 = !DIGlobalVariableExpression(var: !1555, expr: !DIExpression())
!1555 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_44", scope: !1317, file: !1456, line: 1914, type: !1510, isLocal: true, isDefinition: true)
!1556 = !DIGlobalVariableExpression(var: !1557, expr: !DIExpression())
!1557 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_44", scope: !1317, file: !1456, line: 1914, type: !1538, isLocal: true, isDefinition: true)
!1558 = !DIGlobalVariableExpression(var: !1559, expr: !DIExpression())
!1559 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_44", scope: !1317, file: !1456, line: 1914, type: !1541, isLocal: true, isDefinition: true)
!1560 = !DIGlobalVariableExpression(var: !1561, expr: !DIExpression())
!1561 = distinct !DIGlobalVariable(name: "uart_stm32_data_1", scope: !1317, file: !1456, line: 1914, type: !1546, isLocal: true, isDefinition: true)
!1562 = !DIGlobalVariableExpression(var: !1563, expr: !DIExpression())
!1563 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_2", scope: !1317, file: !1456, line: 1914, type: !1489, isLocal: true, isDefinition: true)
!1564 = !DIGlobalVariableExpression(var: !1565, expr: !DIExpression())
!1565 = distinct !DIGlobalVariable(name: "pclken_2", scope: !1317, file: !1456, line: 1914, type: !1533, isLocal: true, isDefinition: true)
!1566 = !DIGlobalVariableExpression(var: !1567, expr: !DIExpression())
!1567 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_50", scope: !1317, file: !1456, line: 1914, type: !1510, isLocal: true, isDefinition: true)
!1568 = !DIGlobalVariableExpression(var: !1569, expr: !DIExpression())
!1569 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_50", scope: !1317, file: !1456, line: 1914, type: !1538, isLocal: true, isDefinition: true)
!1570 = !DIGlobalVariableExpression(var: !1571, expr: !DIExpression())
!1571 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_50", scope: !1317, file: !1456, line: 1914, type: !1541, isLocal: true, isDefinition: true)
!1572 = !DIGlobalVariableExpression(var: !1573, expr: !DIExpression())
!1573 = distinct !DIGlobalVariable(name: "uart_stm32_data_2", scope: !1317, file: !1456, line: 1914, type: !1546, isLocal: true, isDefinition: true)
!1574 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1575)
!1575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !289, line: 16, size: 64, elements: !1576)
!1576 = !{!1577, !1578}
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1575, file: !289, line: 17, baseType: !278, size: 32)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1575, file: !289, line: 18, baseType: !185, size: 8, offset: 32)
!1579 = !DIGlobalVariableExpression(var: !1580, expr: !DIExpression())
!1580 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1581, file: !1659, line: 65, type: !314, isLocal: true, isDefinition: true)
!1581 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1582, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1583, retainedTypes: !1584, globals: !1656, splitDebugInlining: false, nameTableKind: None)
!1582 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pi")
!1583 = !{!602}
!1584 = !{!114, !1585, !742, !185, !118, !1593, !1624}
!1585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1586, size: 32)
!1586 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !533, line: 770, baseType: !1587)
!1587 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 764, size: 128, elements: !1588)
!1588 = !{!1589, !1590, !1591, !1592}
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1587, file: !533, line: 766, baseType: !314, size: 32)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1587, file: !533, line: 767, baseType: !314, size: 32, offset: 32)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1587, file: !533, line: 768, baseType: !314, size: 32, offset: 64)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1587, file: !533, line: 769, baseType: !537, size: 32, offset: 96)
!1593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1594, size: 32)
!1594 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !533, line: 426, baseType: !1595)
!1595 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 411, size: 28704, elements: !1596)
!1596 = !{!1597, !1599, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1614, !1619, !1623}
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1595, file: !533, line: 413, baseType: !1598, size: 256)
!1598 = !DICompositeType(tag: DW_TAG_array_type, baseType: !314, size: 256, elements: !1458)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1595, file: !533, line: 414, baseType: !1600, size: 768, offset: 256)
!1600 = !DICompositeType(tag: DW_TAG_array_type, baseType: !118, size: 768, elements: !1601)
!1601 = !{!1602}
!1602 = !DISubrange(count: 24)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1595, file: !533, line: 415, baseType: !1598, size: 256, offset: 1024)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1595, file: !533, line: 416, baseType: !1600, size: 768, offset: 1280)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1595, file: !533, line: 417, baseType: !1598, size: 256, offset: 2048)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1595, file: !533, line: 418, baseType: !1600, size: 768, offset: 2304)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1595, file: !533, line: 419, baseType: !1598, size: 256, offset: 3072)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1595, file: !533, line: 420, baseType: !1600, size: 768, offset: 3328)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1595, file: !533, line: 421, baseType: !1598, size: 256, offset: 4096)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1595, file: !533, line: 422, baseType: !1611, size: 1792, offset: 4352)
!1611 = !DICompositeType(tag: DW_TAG_array_type, baseType: !118, size: 1792, elements: !1612)
!1612 = !{!1613}
!1613 = !DISubrange(count: 56)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1595, file: !533, line: 423, baseType: !1615, size: 1920, offset: 6144)
!1615 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1616, size: 1920, elements: !1617)
!1616 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !185)
!1617 = !{!1618}
!1618 = !DISubrange(count: 240)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1595, file: !533, line: 424, baseType: !1620, size: 20608, offset: 8064)
!1620 = !DICompositeType(tag: DW_TAG_array_type, baseType: !118, size: 20608, elements: !1621)
!1621 = !{!1622}
!1622 = !DISubrange(count: 644)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1595, file: !533, line: 425, baseType: !314, size: 32, offset: 28672)
!1624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1625, size: 32)
!1625 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !533, line: 468, baseType: !1626)
!1626 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 445, size: 1120, elements: !1627)
!1627 = !{!1628, !1629, !1630, !1631, !1632, !1633, !1634, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1647, !1648, !1649, !1651, !1653, !1655}
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1626, file: !533, line: 447, baseType: !537, size: 32)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1626, file: !533, line: 448, baseType: !314, size: 32, offset: 32)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1626, file: !533, line: 449, baseType: !314, size: 32, offset: 64)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1626, file: !533, line: 450, baseType: !314, size: 32, offset: 96)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1626, file: !533, line: 451, baseType: !314, size: 32, offset: 128)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1626, file: !533, line: 452, baseType: !314, size: 32, offset: 160)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1626, file: !533, line: 453, baseType: !1635, size: 96, offset: 192)
!1635 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1616, size: 96, elements: !1636)
!1636 = !{!1637}
!1637 = !DISubrange(count: 12)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1626, file: !533, line: 454, baseType: !314, size: 32, offset: 288)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1626, file: !533, line: 455, baseType: !314, size: 32, offset: 320)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1626, file: !533, line: 456, baseType: !314, size: 32, offset: 352)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1626, file: !533, line: 457, baseType: !314, size: 32, offset: 384)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1626, file: !533, line: 458, baseType: !314, size: 32, offset: 416)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1626, file: !533, line: 459, baseType: !314, size: 32, offset: 448)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1626, file: !533, line: 460, baseType: !314, size: 32, offset: 480)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1626, file: !533, line: 461, baseType: !1646, size: 64, offset: 512)
!1646 = !DICompositeType(tag: DW_TAG_array_type, baseType: !537, size: 64, elements: !174)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1626, file: !533, line: 462, baseType: !537, size: 32, offset: 576)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1626, file: !533, line: 463, baseType: !537, size: 32, offset: 608)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1626, file: !533, line: 464, baseType: !1650, size: 128, offset: 640)
!1650 = !DICompositeType(tag: DW_TAG_array_type, baseType: !537, size: 128, elements: !684)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1626, file: !533, line: 465, baseType: !1652, size: 160, offset: 768)
!1652 = !DICompositeType(tag: DW_TAG_array_type, baseType: !537, size: 160, elements: !1205)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1626, file: !533, line: 466, baseType: !1654, size: 160, offset: 928)
!1654 = !DICompositeType(tag: DW_TAG_array_type, baseType: !118, size: 160, elements: !1205)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1626, file: !533, line: 467, baseType: !314, size: 32, offset: 1088)
!1656 = !{!1657, !1683, !1688, !1690, !1692, !1579}
!1657 = !DIGlobalVariableExpression(var: !1658, expr: !DIExpression())
!1658 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1581, file: !1659, line: 285, type: !1660, isLocal: true, isDefinition: true, align: 32)
!1659 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1660 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1661)
!1661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !325, line: 51, size: 64, elements: !1662)
!1662 = !{!1663, !1682}
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1661, file: !325, line: 60, baseType: !1664, size: 32)
!1664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1665, size: 32)
!1665 = !DISubroutineType(types: !1666)
!1666 = !{!119, !1667}
!1667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1668, size: 32)
!1668 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1669)
!1669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !1670)
!1670 = !{!1671, !1672, !1673, !1674, !1680, !1681}
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1669, file: !334, line: 380, baseType: !278, size: 32)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1669, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1669, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1669, file: !334, line: 386, baseType: !1675, size: 32, offset: 96)
!1675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1676, size: 32)
!1676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !1677)
!1677 = !{!1678, !1679}
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1676, file: !334, line: 359, baseType: !185, size: 8)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1676, file: !334, line: 364, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1669, file: !334, line: 388, baseType: !113, size: 32, offset: 128)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1669, file: !334, line: 396, baseType: !348, size: 32, offset: 160)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1661, file: !325, line: 65, baseType: !1667, size: 32, offset: 32)
!1683 = !DIGlobalVariableExpression(var: !1684, expr: !DIExpression())
!1684 = distinct !DIGlobalVariable(name: "lock", scope: !1581, file: !1659, line: 34, type: !1685, isLocal: true, isDefinition: true)
!1685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !1686)
!1686 = !{!1687}
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1685, file: !259, line: 52, baseType: !22, size: 32)
!1688 = !DIGlobalVariableExpression(var: !1689, expr: !DIExpression())
!1689 = distinct !DIGlobalVariable(name: "last_load", scope: !1581, file: !1659, line: 36, type: !118, isLocal: true, isDefinition: true)
!1690 = !DIGlobalVariableExpression(var: !1691, expr: !DIExpression())
!1691 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1581, file: !1659, line: 48, type: !118, isLocal: true, isDefinition: true)
!1692 = !DIGlobalVariableExpression(var: !1693, expr: !DIExpression())
!1693 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1581, file: !1659, line: 54, type: !118, isLocal: true, isDefinition: true)
!1694 = !DIGlobalVariableExpression(var: !1695, expr: !DIExpression())
!1695 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1696, file: !1778, line: 22, type: !1780, isLocal: true, isDefinition: true)
!1696 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1697, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1698, retainedTypes: !1699, globals: !1775, splitDebugInlining: false, nameTableKind: None)
!1697 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pi")
!1698 = !{!1014, !1020}
!1699 = !{!1700, !1764, !1769, !1067, !1020, !1014, !1774, !113}
!1700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1701, size: 32)
!1701 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1702)
!1702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1015, line: 523, size: 288, elements: !1703)
!1703 = !{!1704, !1723, !1727, !1731, !1735, !1736, !1737, !1741, !1760}
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1702, file: !1015, line: 524, baseType: !1705, size: 32)
!1705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1706, size: 32)
!1706 = !DISubroutineType(types: !1707)
!1707 = !{!119, !1708, !1055, !1056}
!1708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1709, size: 32)
!1709 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1710)
!1710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !1711)
!1711 = !{!1712, !1713, !1714, !1715, !1721, !1722}
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1710, file: !334, line: 380, baseType: !278, size: 32)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1710, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1710, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1710, file: !334, line: 386, baseType: !1716, size: 32, offset: 96)
!1716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1717, size: 32)
!1717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !1718)
!1718 = !{!1719, !1720}
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1717, file: !334, line: 359, baseType: !185, size: 8)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1717, file: !334, line: 364, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1710, file: !334, line: 388, baseType: !113, size: 32, offset: 128)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1710, file: !334, line: 396, baseType: !348, size: 32, offset: 160)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1702, file: !1015, line: 530, baseType: !1724, size: 32, offset: 32)
!1724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1725, size: 32)
!1725 = !DISubroutineType(types: !1726)
!1726 = !{!119, !1708, !1061}
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1702, file: !1015, line: 532, baseType: !1728, size: 32, offset: 64)
!1728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1729, size: 32)
!1729 = !DISubroutineType(types: !1730)
!1730 = !{!119, !1708, !1067, !1062}
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1702, file: !1015, line: 535, baseType: !1732, size: 32, offset: 96)
!1732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1733, size: 32)
!1733 = !DISubroutineType(types: !1734)
!1734 = !{!119, !1708, !1067}
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1702, file: !1015, line: 537, baseType: !1732, size: 32, offset: 128)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1702, file: !1015, line: 539, baseType: !1732, size: 32, offset: 160)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1702, file: !1015, line: 541, baseType: !1738, size: 32, offset: 192)
!1738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1739, size: 32)
!1739 = !DISubroutineType(types: !1740)
!1740 = !{!119, !1708, !1055, !1014, !1020}
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1702, file: !1015, line: 544, baseType: !1742, size: 32, offset: 224)
!1742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1743, size: 32)
!1743 = !DISubroutineType(types: !1744)
!1744 = !{!119, !1708, !1745, !345}
!1745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1746, size: 32)
!1746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1015, line: 478, size: 96, elements: !1747)
!1747 = !{!1748, !1754, !1759}
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1746, file: !1015, line: 482, baseType: !1749, size: 32)
!1749 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1087, line: 33, baseType: !1750)
!1750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1087, line: 29, size: 32, elements: !1751)
!1751 = !{!1752}
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1750, file: !1087, line: 30, baseType: !1753, size: 32)
!1753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1750, size: 32)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1746, file: !1015, line: 485, baseType: !1755, size: 32, offset: 32)
!1755 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1015, line: 464, baseType: !1756)
!1756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1757, size: 32)
!1757 = !DISubroutineType(types: !1758)
!1758 = !{null, !1708, !1745, !1067}
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1746, file: !1015, line: 493, baseType: !1067, size: 32, offset: 64)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1702, file: !1015, line: 547, baseType: !1761, size: 32, offset: 256)
!1761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1762, size: 32)
!1762 = !DISubroutineType(types: !1763)
!1763 = !{!118, !1708}
!1764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1765, size: 32)
!1765 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1766)
!1766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1015, line: 428, size: 32, elements: !1767)
!1767 = !{!1768}
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1766, file: !1015, line: 434, baseType: !1067, size: 32)
!1769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1770, size: 32)
!1770 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1771)
!1771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1015, line: 441, size: 32, elements: !1772)
!1772 = !{!1773}
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1771, file: !1015, line: 447, baseType: !1067, size: 32)
!1774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1771, size: 32)
!1775 = !{!1776, !1694}
!1776 = !DIGlobalVariableExpression(var: !1777, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1777 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1696, file: !1778, line: 37, type: !1779, isLocal: true, isDefinition: true)
!1778 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1779 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !239)
!1780 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1781, size: 352, elements: !1782)
!1781 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1708)
!1782 = !{!1783}
!1783 = !DISubrange(count: 11)
!1784 = !DIGlobalVariableExpression(var: !1785, expr: !DIExpression())
!1785 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1786, file: !1828, line: 139, type: !1833, isLocal: false, isDefinition: true)
!1786 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1787, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1788, globals: !1825, splitDebugInlining: false, nameTableKind: None)
!1787 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pi")
!1788 = !{!1789}
!1789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1790, size: 32)
!1790 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !310, line: 369, baseType: !1791)
!1791 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 335, size: 1152, elements: !1792)
!1792 = !{!1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824}
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1791, file: !310, line: 337, baseType: !314, size: 32)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1791, file: !310, line: 338, baseType: !314, size: 32, offset: 32)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1791, file: !310, line: 339, baseType: !314, size: 32, offset: 64)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1791, file: !310, line: 340, baseType: !314, size: 32, offset: 96)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1791, file: !310, line: 341, baseType: !314, size: 32, offset: 128)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1791, file: !310, line: 342, baseType: !314, size: 32, offset: 160)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1791, file: !310, line: 343, baseType: !314, size: 32, offset: 192)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1791, file: !310, line: 344, baseType: !118, size: 32, offset: 224)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1791, file: !310, line: 345, baseType: !314, size: 32, offset: 256)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1791, file: !310, line: 346, baseType: !314, size: 32, offset: 288)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1791, file: !310, line: 347, baseType: !838, size: 64, offset: 320)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1791, file: !310, line: 348, baseType: !314, size: 32, offset: 384)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1791, file: !310, line: 349, baseType: !314, size: 32, offset: 416)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1791, file: !310, line: 350, baseType: !314, size: 32, offset: 448)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1791, file: !310, line: 351, baseType: !118, size: 32, offset: 480)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1791, file: !310, line: 352, baseType: !314, size: 32, offset: 512)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1791, file: !310, line: 353, baseType: !314, size: 32, offset: 544)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1791, file: !310, line: 354, baseType: !838, size: 64, offset: 576)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1791, file: !310, line: 355, baseType: !314, size: 32, offset: 640)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1791, file: !310, line: 356, baseType: !314, size: 32, offset: 672)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1791, file: !310, line: 357, baseType: !314, size: 32, offset: 704)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1791, file: !310, line: 358, baseType: !118, size: 32, offset: 736)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1791, file: !310, line: 359, baseType: !314, size: 32, offset: 768)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1791, file: !310, line: 360, baseType: !314, size: 32, offset: 800)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1791, file: !310, line: 361, baseType: !838, size: 64, offset: 832)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1791, file: !310, line: 362, baseType: !314, size: 32, offset: 896)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1791, file: !310, line: 363, baseType: !314, size: 32, offset: 928)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1791, file: !310, line: 364, baseType: !838, size: 64, offset: 960)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1791, file: !310, line: 365, baseType: !314, size: 32, offset: 1024)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1791, file: !310, line: 366, baseType: !314, size: 32, offset: 1056)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !1791, file: !310, line: 367, baseType: !859, size: 32, offset: 1088)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1791, file: !310, line: 368, baseType: !314, size: 32, offset: 1120)
!1825 = !{!1826, !1829, !1784}
!1826 = !DIGlobalVariableExpression(var: !1827, expr: !DIExpression())
!1827 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1786, file: !1828, line: 137, type: !118, isLocal: false, isDefinition: true)
!1828 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1829 = !DIGlobalVariableExpression(var: !1830, expr: !DIExpression())
!1830 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1786, file: !1828, line: 138, type: !1831, isLocal: false, isDefinition: true)
!1831 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1832, size: 128, elements: !267)
!1832 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !185)
!1833 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1832, size: 64, elements: !1458)
!1834 = !DIGlobalVariableExpression(var: !1835, expr: !DIExpression())
!1835 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1836, file: !1839, line: 23, type: !1840, isLocal: false, isDefinition: true)
!1836 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1837, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !297, globals: !1838, splitDebugInlining: false, nameTableKind: None)
!1837 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pi")
!1838 = !{!1834}
!1839 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1840 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !119)
!1841 = !DIGlobalVariableExpression(var: !1842, expr: !DIExpression())
!1842 = distinct !DIGlobalVariable(name: "log_const_os", scope: !1843, file: !1847, line: 37, type: !2102, isLocal: false, isDefinition: true)
!1843 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1844, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1845, retainedTypes: !1854, globals: !1927, splitDebugInlining: false, nameTableKind: None)
!1844 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pi")
!1845 = !{!1846, !30, !602}
!1846 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1847, line: 63, baseType: !32, size: 32, elements: !1848)
!1847 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1848 = !{!1849, !1850, !1851, !1852, !1853}
!1849 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1850 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1851 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1852 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1853 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1854 = !{!239, !113, !119, !1855, !106, !118, !1885, !742, !185, !1910}
!1855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1856, size: 32)
!1856 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1857)
!1857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1858, line: 51, size: 64, elements: !1859)
!1858 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1859 = !{!1860, !1880}
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1857, file: !1858, line: 52, baseType: !1861, size: 32)
!1861 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1858, line: 38, baseType: !1862)
!1862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1863, size: 32)
!1863 = !DISubroutineType(types: !1864)
!1864 = !{!119, !1865, !284, !199}
!1865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1866, size: 32)
!1866 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1867)
!1867 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !1868)
!1868 = !{!1869, !1870, !1871, !1872, !1878, !1879}
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1867, file: !334, line: 380, baseType: !278, size: 32)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1867, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1867, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1867, file: !334, line: 386, baseType: !1873, size: 32, offset: 96)
!1873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1874, size: 32)
!1874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !1875)
!1875 = !{!1876, !1877}
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1874, file: !334, line: 359, baseType: !185, size: 8)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1874, file: !334, line: 364, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1867, file: !334, line: 388, baseType: !113, size: 32, offset: 128)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1867, file: !334, line: 396, baseType: !348, size: 32, offset: 160)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1857, file: !1858, line: 53, baseType: !1881, size: 32, offset: 32)
!1881 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1858, line: 47, baseType: !1882)
!1882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1883, size: 32)
!1883 = !DISubroutineType(types: !1884)
!1884 = !{!119, !1865, !284, !199, !118}
!1885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1886, size: 32)
!1886 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !533, line: 468, baseType: !1887)
!1887 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 445, size: 1120, elements: !1888)
!1888 = !{!1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909}
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1887, file: !533, line: 447, baseType: !537, size: 32)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1887, file: !533, line: 448, baseType: !314, size: 32, offset: 32)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1887, file: !533, line: 449, baseType: !314, size: 32, offset: 64)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1887, file: !533, line: 450, baseType: !314, size: 32, offset: 96)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1887, file: !533, line: 451, baseType: !314, size: 32, offset: 128)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1887, file: !533, line: 452, baseType: !314, size: 32, offset: 160)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1887, file: !533, line: 453, baseType: !1635, size: 96, offset: 192)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1887, file: !533, line: 454, baseType: !314, size: 32, offset: 288)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1887, file: !533, line: 455, baseType: !314, size: 32, offset: 320)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1887, file: !533, line: 456, baseType: !314, size: 32, offset: 352)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1887, file: !533, line: 457, baseType: !314, size: 32, offset: 384)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1887, file: !533, line: 458, baseType: !314, size: 32, offset: 416)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1887, file: !533, line: 459, baseType: !314, size: 32, offset: 448)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1887, file: !533, line: 460, baseType: !314, size: 32, offset: 480)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1887, file: !533, line: 461, baseType: !1646, size: 64, offset: 512)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1887, file: !533, line: 462, baseType: !537, size: 32, offset: 576)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1887, file: !533, line: 463, baseType: !537, size: 32, offset: 608)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1887, file: !533, line: 464, baseType: !1650, size: 128, offset: 640)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1887, file: !533, line: 465, baseType: !1652, size: 160, offset: 768)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1887, file: !533, line: 466, baseType: !1654, size: 160, offset: 928)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1887, file: !533, line: 467, baseType: !314, size: 32, offset: 1088)
!1910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1911, size: 32)
!1911 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !533, line: 426, baseType: !1912)
!1912 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 411, size: 28704, elements: !1913)
!1913 = !{!1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926}
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1912, file: !533, line: 413, baseType: !1598, size: 256)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1912, file: !533, line: 414, baseType: !1600, size: 768, offset: 256)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1912, file: !533, line: 415, baseType: !1598, size: 256, offset: 1024)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1912, file: !533, line: 416, baseType: !1600, size: 768, offset: 1280)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1912, file: !533, line: 417, baseType: !1598, size: 256, offset: 2048)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1912, file: !533, line: 418, baseType: !1600, size: 768, offset: 2304)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1912, file: !533, line: 419, baseType: !1598, size: 256, offset: 3072)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1912, file: !533, line: 420, baseType: !1600, size: 768, offset: 3328)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1912, file: !533, line: 421, baseType: !1598, size: 256, offset: 4096)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1912, file: !533, line: 422, baseType: !1611, size: 1792, offset: 4352)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1912, file: !533, line: 423, baseType: !1615, size: 1920, offset: 6144)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1912, file: !533, line: 424, baseType: !1620, size: 20608, offset: 8064)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1912, file: !533, line: 425, baseType: !314, size: 32, offset: 28672)
!1927 = !{!1841, !1928, !2054, !2062, !2064, !2067, !2072, !2074, !2079}
!1928 = !DIGlobalVariableExpression(var: !1929, expr: !DIExpression())
!1929 = distinct !DIGlobalVariable(name: "_kernel", scope: !1843, file: !1847, line: 40, type: !1930, isLocal: false, isDefinition: true)
!1930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !179, line: 158, size: 288, elements: !1931)
!1931 = !{!1932, !2049}
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !1930, file: !179, line: 159, baseType: !1933, size: 192)
!1933 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1934, size: 192, elements: !515)
!1934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !179, line: 100, size: 192, elements: !1935)
!1935 = !{!1936, !1937, !1938, !2042, !2043, !2044, !2045}
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !1934, file: !179, line: 102, baseType: !118, size: 32)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !1934, file: !179, line: 105, baseType: !106, size: 32, offset: 32)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1934, file: !179, line: 108, baseType: !1939, size: 32, offset: 64)
!1939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1940, size: 32)
!1940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !143, line: 245, size: 1280, elements: !1941)
!1941 = !{!1942, !2000, !2012, !2013, !2014, !2015, !2016, !2022, !2037}
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1940, file: !143, line: 247, baseType: !1943, size: 384)
!1943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !143, line: 57, size: 384, elements: !1944)
!1944 = !{!1945, !1969, !1976, !1977, !1978, !1987, !1988, !1989}
!1945 = !DIDerivedType(tag: DW_TAG_member, scope: !1943, file: !143, line: 60, baseType: !1946, size: 64)
!1946 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1943, file: !143, line: 60, size: 64, elements: !1947)
!1947 = !{!1948, !1963}
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1946, file: !143, line: 61, baseType: !1949, size: 64)
!1949 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !153, line: 49, baseType: !1950)
!1950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !153, line: 37, size: 64, elements: !1951)
!1951 = !{!1952, !1958}
!1952 = !DIDerivedType(tag: DW_TAG_member, scope: !1950, file: !153, line: 38, baseType: !1953, size: 32)
!1953 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1950, file: !153, line: 38, size: 32, elements: !1954)
!1954 = !{!1955, !1957}
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1953, file: !153, line: 39, baseType: !1956, size: 32)
!1956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1950, size: 32)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1953, file: !153, line: 40, baseType: !1956, size: 32)
!1958 = !DIDerivedType(tag: DW_TAG_member, scope: !1950, file: !153, line: 42, baseType: !1959, size: 32, offset: 32)
!1959 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1950, file: !153, line: 42, size: 32, elements: !1960)
!1960 = !{!1961, !1962}
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1959, file: !153, line: 43, baseType: !1956, size: 32)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1959, file: !153, line: 44, baseType: !1956, size: 32)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1946, file: !143, line: 62, baseType: !1964, size: 64)
!1964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !169, line: 49, size: 64, elements: !1965)
!1965 = !{!1966}
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1964, file: !169, line: 50, baseType: !1967, size: 64)
!1967 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1968, size: 64, elements: !174)
!1968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1964, size: 32)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1943, file: !143, line: 68, baseType: !1970, size: 32, offset: 64)
!1970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1971, size: 32)
!1971 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !179, line: 233, baseType: !1972)
!1972 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !179, line: 231, size: 64, elements: !1973)
!1973 = !{!1974}
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1972, file: !179, line: 232, baseType: !1975, size: 64)
!1975 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !153, line: 48, baseType: !1950)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1943, file: !143, line: 71, baseType: !185, size: 8, offset: 96)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1943, file: !143, line: 74, baseType: !185, size: 8, offset: 104)
!1978 = !DIDerivedType(tag: DW_TAG_member, scope: !1943, file: !143, line: 90, baseType: !1979, size: 16, offset: 112)
!1979 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1943, file: !143, line: 90, size: 16, elements: !1980)
!1980 = !{!1981, !1986}
!1981 = !DIDerivedType(tag: DW_TAG_member, scope: !1979, file: !143, line: 91, baseType: !1982, size: 16)
!1982 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1979, file: !143, line: 91, size: 16, elements: !1983)
!1983 = !{!1984, !1985}
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1982, file: !143, line: 96, baseType: !195, size: 8)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1982, file: !143, line: 97, baseType: !185, size: 8, offset: 8)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1979, file: !143, line: 100, baseType: !199, size: 16)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1943, file: !143, line: 107, baseType: !118, size: 32, offset: 128)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1943, file: !143, line: 127, baseType: !113, size: 32, offset: 160)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1943, file: !143, line: 131, baseType: !1990, size: 192, offset: 192)
!1990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !179, line: 244, size: 192, elements: !1991)
!1991 = !{!1992, !1993, !1999}
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1990, file: !179, line: 245, baseType: !1949, size: 64)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1990, file: !179, line: 246, baseType: !1994, size: 32, offset: 64)
!1994 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !179, line: 242, baseType: !1995)
!1995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1996, size: 32)
!1996 = !DISubroutineType(types: !1997)
!1997 = !{null, !1998}
!1998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1990, size: 32)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1990, file: !179, line: 249, baseType: !116, size: 64, offset: 128)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1940, file: !143, line: 250, baseType: !2001, size: 288, offset: 384)
!2001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !216, line: 25, size: 288, elements: !2002)
!2002 = !{!2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011}
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2001, file: !216, line: 26, baseType: !118, size: 32)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2001, file: !216, line: 27, baseType: !118, size: 32, offset: 32)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2001, file: !216, line: 28, baseType: !118, size: 32, offset: 64)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2001, file: !216, line: 29, baseType: !118, size: 32, offset: 96)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2001, file: !216, line: 30, baseType: !118, size: 32, offset: 128)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2001, file: !216, line: 31, baseType: !118, size: 32, offset: 160)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2001, file: !216, line: 32, baseType: !118, size: 32, offset: 192)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2001, file: !216, line: 33, baseType: !118, size: 32, offset: 224)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2001, file: !216, line: 34, baseType: !118, size: 32, offset: 256)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1940, file: !143, line: 253, baseType: !113, size: 32, offset: 672)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1940, file: !143, line: 256, baseType: !1971, size: 64, offset: 704)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1940, file: !143, line: 279, baseType: !230, size: 256, offset: 768)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1940, file: !143, line: 294, baseType: !119, size: 32, offset: 1024)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1940, file: !143, line: 300, baseType: !2017, size: 96, offset: 1056)
!2017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !143, line: 149, size: 96, elements: !2018)
!2018 = !{!2019, !2020, !2021}
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2017, file: !143, line: 153, baseType: !22, size: 32)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2017, file: !143, line: 162, baseType: !239, size: 32, offset: 32)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2017, file: !143, line: 168, baseType: !239, size: 32, offset: 64)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1940, file: !143, line: 325, baseType: !2023, size: 32, offset: 1152)
!2023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2024, size: 32)
!2024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !245, line: 5073, size: 192, elements: !2025)
!2025 = !{!2026, !2032, !2033}
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2024, file: !245, line: 5074, baseType: !2027, size: 96)
!2027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !249, line: 56, size: 96, elements: !2028)
!2028 = !{!2029, !2030, !2031}
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2027, file: !249, line: 57, baseType: !252, size: 32)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2027, file: !249, line: 58, baseType: !113, size: 32, offset: 32)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2027, file: !249, line: 59, baseType: !239, size: 32, offset: 64)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2024, file: !245, line: 5075, baseType: !1971, size: 64, offset: 96)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2024, file: !245, line: 5076, baseType: !2034, size: 32, offset: 160)
!2034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !2035)
!2035 = !{!2036}
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2034, file: !259, line: 52, baseType: !22, size: 32)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1940, file: !143, line: 343, baseType: !2038, size: 64, offset: 1184)
!2038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !216, line: 60, size: 64, elements: !2039)
!2039 = !{!2040, !2041}
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2038, file: !216, line: 63, baseType: !118, size: 32)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2038, file: !216, line: 66, baseType: !118, size: 32, offset: 32)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !1934, file: !179, line: 111, baseType: !1939, size: 32, offset: 96)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !1934, file: !179, line: 124, baseType: !119, size: 32, offset: 128)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1934, file: !179, line: 127, baseType: !185, size: 8, offset: 160)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1934, file: !179, line: 153, baseType: !2046, offset: 168)
!2046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2047, line: 33, elements: !2048)
!2047 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2048 = !{}
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !1930, file: !179, line: 170, baseType: !2050, size: 96, offset: 192)
!2050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !179, line: 83, size: 96, elements: !2051)
!2051 = !{!2052, !2053}
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2050, file: !179, line: 86, baseType: !1939, size: 32)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2050, file: !179, line: 90, baseType: !1975, size: 64, offset: 32)
!2054 = !DIGlobalVariableExpression(var: !2055, expr: !DIExpression())
!2055 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1843, file: !1847, line: 43, type: !2056, isLocal: false, isDefinition: true, align: 512)
!2056 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2057, size: 8704, elements: !2060)
!2057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !128, line: 47, size: 8, elements: !2058)
!2058 = !{!2059}
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2057, file: !128, line: 48, baseType: !107, size: 8)
!2060 = !{!2061}
!2061 = !DISubrange(count: 1088)
!2062 = !DIGlobalVariableExpression(var: !2063, expr: !DIExpression())
!2063 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1843, file: !1847, line: 44, type: !1940, isLocal: false, isDefinition: true)
!2064 = !DIGlobalVariableExpression(var: !2065, expr: !DIExpression())
!2065 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1843, file: !1847, line: 48, type: !2066, isLocal: false, isDefinition: true)
!2066 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1940, size: 1280, elements: !515)
!2067 = !DIGlobalVariableExpression(var: !2068, expr: !DIExpression())
!2068 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1843, file: !1847, line: 86, type: !2069, isLocal: false, isDefinition: true, align: 512)
!2069 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2057, size: 16896, elements: !2070)
!2070 = !{!516, !2071}
!2071 = !DISubrange(count: 2112)
!2072 = !DIGlobalVariableExpression(var: !2073, expr: !DIExpression())
!2073 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1843, file: !1847, line: 217, type: !345, isLocal: false, isDefinition: true)
!2074 = !DIGlobalVariableExpression(var: !2075, expr: !DIExpression())
!2075 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1843, file: !1847, line: 50, type: !2076, isLocal: true, isDefinition: true, align: 512)
!2076 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2057, size: 3072, elements: !2077)
!2077 = !{!516, !2078}
!2078 = !DISubrange(count: 384)
!2079 = !DIGlobalVariableExpression(var: !2080, expr: !DIExpression())
!2080 = distinct !DIGlobalVariable(name: "levels", scope: !2081, file: !1847, line: 232, type: !2101, isLocal: true, isDefinition: true)
!2081 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1847, file: !1847, line: 230, type: !2082, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1843, retainedNodes: !2084)
!2082 = !DISubroutineType(types: !2083)
!2083 = !{null, !1846}
!2084 = !{!2085, !2086, !2096, !2100}
!2085 = !DILocalVariable(name: "level", arg: 1, scope: !2081, file: !1847, line: 230, type: !1846)
!2086 = !DILocalVariable(name: "entry", scope: !2081, file: !1847, line: 244, type: !2087)
!2087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2088, size: 32)
!2088 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2089)
!2089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !325, line: 51, size: 64, elements: !2090)
!2090 = !{!2091, !2095}
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2089, file: !325, line: 60, baseType: !2092, size: 32)
!2092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2093, size: 32)
!2093 = !DISubroutineType(types: !2094)
!2094 = !{!119, !1865}
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2089, file: !325, line: 65, baseType: !1865, size: 32, offset: 32)
!2096 = !DILocalVariable(name: "dev", scope: !2097, file: !1847, line: 247, type: !1865)
!2097 = distinct !DILexicalBlock(scope: !2098, file: !1847, line: 246, column: 64)
!2098 = distinct !DILexicalBlock(scope: !2099, file: !1847, line: 246, column: 2)
!2099 = distinct !DILexicalBlock(scope: !2081, file: !1847, line: 246, column: 2)
!2100 = !DILocalVariable(name: "rc", scope: !2097, file: !1847, line: 248, type: !119)
!2101 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2087, size: 192, elements: !1214)
!2102 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2103)
!2103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !289, line: 16, size: 64, elements: !2104)
!2104 = !{!2105, !2106}
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2103, file: !289, line: 17, baseType: !278, size: 32)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2103, file: !289, line: 18, baseType: !185, size: 8, offset: 32)
!2107 = !DIGlobalVariableExpression(var: !2108, expr: !DIExpression())
!2108 = distinct !DIGlobalVariable(name: "states_str", scope: !2109, file: !2110, line: 276, type: !2234, isLocal: true, isDefinition: true)
!2109 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2110, file: !2110, line: 271, type: !2111, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !2225)
!2110 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2111 = !DISubroutineType(types: !2112)
!2112 = !{!278, !2113, !106, !239}
!2113 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !143, line: 347, baseType: !2114)
!2114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2115, size: 32)
!2115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !143, line: 245, size: 1280, elements: !2116)
!2116 = !{!2117, !2175, !2187, !2188, !2189, !2190, !2191, !2197, !2212}
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2115, file: !143, line: 247, baseType: !2118, size: 384)
!2118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !143, line: 57, size: 384, elements: !2119)
!2119 = !{!2120, !2144, !2151, !2152, !2153, !2162, !2163, !2164}
!2120 = !DIDerivedType(tag: DW_TAG_member, scope: !2118, file: !143, line: 60, baseType: !2121, size: 64)
!2121 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2118, file: !143, line: 60, size: 64, elements: !2122)
!2122 = !{!2123, !2138}
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2121, file: !143, line: 61, baseType: !2124, size: 64)
!2124 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !153, line: 49, baseType: !2125)
!2125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !153, line: 37, size: 64, elements: !2126)
!2126 = !{!2127, !2133}
!2127 = !DIDerivedType(tag: DW_TAG_member, scope: !2125, file: !153, line: 38, baseType: !2128, size: 32)
!2128 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2125, file: !153, line: 38, size: 32, elements: !2129)
!2129 = !{!2130, !2132}
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2128, file: !153, line: 39, baseType: !2131, size: 32)
!2131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2125, size: 32)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2128, file: !153, line: 40, baseType: !2131, size: 32)
!2133 = !DIDerivedType(tag: DW_TAG_member, scope: !2125, file: !153, line: 42, baseType: !2134, size: 32, offset: 32)
!2134 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2125, file: !153, line: 42, size: 32, elements: !2135)
!2135 = !{!2136, !2137}
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2134, file: !153, line: 43, baseType: !2131, size: 32)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2134, file: !153, line: 44, baseType: !2131, size: 32)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2121, file: !143, line: 62, baseType: !2139, size: 64)
!2139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !169, line: 49, size: 64, elements: !2140)
!2140 = !{!2141}
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2139, file: !169, line: 50, baseType: !2142, size: 64)
!2142 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2143, size: 64, elements: !174)
!2143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2139, size: 32)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2118, file: !143, line: 68, baseType: !2145, size: 32, offset: 64)
!2145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2146, size: 32)
!2146 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !179, line: 233, baseType: !2147)
!2147 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !179, line: 231, size: 64, elements: !2148)
!2148 = !{!2149}
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2147, file: !179, line: 232, baseType: !2150, size: 64)
!2150 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !153, line: 48, baseType: !2125)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2118, file: !143, line: 71, baseType: !185, size: 8, offset: 96)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2118, file: !143, line: 74, baseType: !185, size: 8, offset: 104)
!2153 = !DIDerivedType(tag: DW_TAG_member, scope: !2118, file: !143, line: 90, baseType: !2154, size: 16, offset: 112)
!2154 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2118, file: !143, line: 90, size: 16, elements: !2155)
!2155 = !{!2156, !2161}
!2156 = !DIDerivedType(tag: DW_TAG_member, scope: !2154, file: !143, line: 91, baseType: !2157, size: 16)
!2157 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2154, file: !143, line: 91, size: 16, elements: !2158)
!2158 = !{!2159, !2160}
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2157, file: !143, line: 96, baseType: !195, size: 8)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2157, file: !143, line: 97, baseType: !185, size: 8, offset: 8)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2154, file: !143, line: 100, baseType: !199, size: 16)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2118, file: !143, line: 107, baseType: !118, size: 32, offset: 128)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2118, file: !143, line: 127, baseType: !113, size: 32, offset: 160)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2118, file: !143, line: 131, baseType: !2165, size: 192, offset: 192)
!2165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !179, line: 244, size: 192, elements: !2166)
!2166 = !{!2167, !2168, !2174}
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2165, file: !179, line: 245, baseType: !2124, size: 64)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2165, file: !179, line: 246, baseType: !2169, size: 32, offset: 64)
!2169 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !179, line: 242, baseType: !2170)
!2170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2171, size: 32)
!2171 = !DISubroutineType(types: !2172)
!2172 = !{null, !2173}
!2173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2165, size: 32)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2165, file: !179, line: 249, baseType: !116, size: 64, offset: 128)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2115, file: !143, line: 250, baseType: !2176, size: 288, offset: 384)
!2176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !216, line: 25, size: 288, elements: !2177)
!2177 = !{!2178, !2179, !2180, !2181, !2182, !2183, !2184, !2185, !2186}
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2176, file: !216, line: 26, baseType: !118, size: 32)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2176, file: !216, line: 27, baseType: !118, size: 32, offset: 32)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2176, file: !216, line: 28, baseType: !118, size: 32, offset: 64)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2176, file: !216, line: 29, baseType: !118, size: 32, offset: 96)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2176, file: !216, line: 30, baseType: !118, size: 32, offset: 128)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2176, file: !216, line: 31, baseType: !118, size: 32, offset: 160)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2176, file: !216, line: 32, baseType: !118, size: 32, offset: 192)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2176, file: !216, line: 33, baseType: !118, size: 32, offset: 224)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2176, file: !216, line: 34, baseType: !118, size: 32, offset: 256)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2115, file: !143, line: 253, baseType: !113, size: 32, offset: 672)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2115, file: !143, line: 256, baseType: !2146, size: 64, offset: 704)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2115, file: !143, line: 279, baseType: !230, size: 256, offset: 768)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2115, file: !143, line: 294, baseType: !119, size: 32, offset: 1024)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2115, file: !143, line: 300, baseType: !2192, size: 96, offset: 1056)
!2192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !143, line: 149, size: 96, elements: !2193)
!2193 = !{!2194, !2195, !2196}
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2192, file: !143, line: 153, baseType: !22, size: 32)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2192, file: !143, line: 162, baseType: !239, size: 32, offset: 32)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2192, file: !143, line: 168, baseType: !239, size: 32, offset: 64)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2115, file: !143, line: 325, baseType: !2198, size: 32, offset: 1152)
!2198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2199, size: 32)
!2199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !245, line: 5073, size: 192, elements: !2200)
!2200 = !{!2201, !2207, !2208}
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2199, file: !245, line: 5074, baseType: !2202, size: 96)
!2202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !249, line: 56, size: 96, elements: !2203)
!2203 = !{!2204, !2205, !2206}
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2202, file: !249, line: 57, baseType: !252, size: 32)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2202, file: !249, line: 58, baseType: !113, size: 32, offset: 32)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2202, file: !249, line: 59, baseType: !239, size: 32, offset: 64)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2199, file: !245, line: 5075, baseType: !2146, size: 64, offset: 96)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2199, file: !245, line: 5076, baseType: !2209, size: 32, offset: 160)
!2209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !2210)
!2210 = !{!2211}
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2209, file: !259, line: 52, baseType: !22, size: 32)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2115, file: !143, line: 343, baseType: !2213, size: 64, offset: 1184)
!2213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !216, line: 60, size: 64, elements: !2214)
!2214 = !{!2215, !2216}
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2213, file: !216, line: 63, baseType: !118, size: 32)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2213, file: !216, line: 66, baseType: !118, size: 32, offset: 32)
!2217 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2218, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2219, globals: !2221, splitDebugInlining: false, nameTableKind: None)
!2218 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pi")
!2219 = !{!113, !278, !114, !185, !22, !119, !2220, !24, !239, !106, !118, !120}
!2220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2124, size: 32)
!2221 = !{!2107, !2222}
!2222 = !DIGlobalVariableExpression(var: !2223, expr: !DIExpression())
!2223 = distinct !DIGlobalVariable(name: "states_sz", scope: !2109, file: !2110, line: 279, type: !2224, isLocal: true, isDefinition: true)
!2224 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1779, size: 256, elements: !1458)
!2225 = !{!2226, !2227, !2228, !2229, !2230, !2231, !2232}
!2226 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2109, file: !2110, line: 271, type: !2113)
!2227 = !DILocalVariable(name: "buf", arg: 2, scope: !2109, file: !2110, line: 271, type: !106)
!2228 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2109, file: !2110, line: 271, type: !239)
!2229 = !DILocalVariable(name: "off", scope: !2109, file: !2110, line: 273, type: !239)
!2230 = !DILocalVariable(name: "bit", scope: !2109, file: !2110, line: 274, type: !185)
!2231 = !DILocalVariable(name: "thread_state", scope: !2109, file: !2110, line: 275, type: !185)
!2232 = !DILocalVariable(name: "index", scope: !2233, file: !2110, line: 293, type: !185)
!2233 = distinct !DILexicalBlock(scope: !2109, file: !2110, line: 293, column: 2)
!2234 = !DICompositeType(tag: DW_TAG_array_type, baseType: !278, size: 256, elements: !1458)
!2235 = !DIGlobalVariableExpression(var: !2236, expr: !DIExpression())
!2236 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2237, file: !2348, line: 56, type: !2335, isLocal: false, isDefinition: true)
!2237 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2238, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2239, globals: !2345, splitDebugInlining: false, nameTableKind: None)
!2238 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pi")
!2239 = !{!2240, !106, !113, !2343, !284, !114, !742, !119, !118, !120, !2344}
!2240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2241, size: 32)
!2241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !143, line: 245, size: 1280, elements: !2242)
!2242 = !{!2243, !2301, !2313, !2314, !2315, !2316, !2317, !2323, !2338}
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2241, file: !143, line: 247, baseType: !2244, size: 384)
!2244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !143, line: 57, size: 384, elements: !2245)
!2245 = !{!2246, !2270, !2277, !2278, !2279, !2288, !2289, !2290}
!2246 = !DIDerivedType(tag: DW_TAG_member, scope: !2244, file: !143, line: 60, baseType: !2247, size: 64)
!2247 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2244, file: !143, line: 60, size: 64, elements: !2248)
!2248 = !{!2249, !2264}
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2247, file: !143, line: 61, baseType: !2250, size: 64)
!2250 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !153, line: 49, baseType: !2251)
!2251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !153, line: 37, size: 64, elements: !2252)
!2252 = !{!2253, !2259}
!2253 = !DIDerivedType(tag: DW_TAG_member, scope: !2251, file: !153, line: 38, baseType: !2254, size: 32)
!2254 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2251, file: !153, line: 38, size: 32, elements: !2255)
!2255 = !{!2256, !2258}
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2254, file: !153, line: 39, baseType: !2257, size: 32)
!2257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2251, size: 32)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2254, file: !153, line: 40, baseType: !2257, size: 32)
!2259 = !DIDerivedType(tag: DW_TAG_member, scope: !2251, file: !153, line: 42, baseType: !2260, size: 32, offset: 32)
!2260 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2251, file: !153, line: 42, size: 32, elements: !2261)
!2261 = !{!2262, !2263}
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2260, file: !153, line: 43, baseType: !2257, size: 32)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2260, file: !153, line: 44, baseType: !2257, size: 32)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2247, file: !143, line: 62, baseType: !2265, size: 64)
!2265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !169, line: 49, size: 64, elements: !2266)
!2266 = !{!2267}
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2265, file: !169, line: 50, baseType: !2268, size: 64)
!2268 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2269, size: 64, elements: !174)
!2269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2265, size: 32)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2244, file: !143, line: 68, baseType: !2271, size: 32, offset: 64)
!2271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2272, size: 32)
!2272 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !179, line: 233, baseType: !2273)
!2273 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !179, line: 231, size: 64, elements: !2274)
!2274 = !{!2275}
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2273, file: !179, line: 232, baseType: !2276, size: 64)
!2276 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !153, line: 48, baseType: !2251)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2244, file: !143, line: 71, baseType: !185, size: 8, offset: 96)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2244, file: !143, line: 74, baseType: !185, size: 8, offset: 104)
!2279 = !DIDerivedType(tag: DW_TAG_member, scope: !2244, file: !143, line: 90, baseType: !2280, size: 16, offset: 112)
!2280 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2244, file: !143, line: 90, size: 16, elements: !2281)
!2281 = !{!2282, !2287}
!2282 = !DIDerivedType(tag: DW_TAG_member, scope: !2280, file: !143, line: 91, baseType: !2283, size: 16)
!2283 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2280, file: !143, line: 91, size: 16, elements: !2284)
!2284 = !{!2285, !2286}
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2283, file: !143, line: 96, baseType: !195, size: 8)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2283, file: !143, line: 97, baseType: !185, size: 8, offset: 8)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2280, file: !143, line: 100, baseType: !199, size: 16)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2244, file: !143, line: 107, baseType: !118, size: 32, offset: 128)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2244, file: !143, line: 127, baseType: !113, size: 32, offset: 160)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2244, file: !143, line: 131, baseType: !2291, size: 192, offset: 192)
!2291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !179, line: 244, size: 192, elements: !2292)
!2292 = !{!2293, !2294, !2300}
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2291, file: !179, line: 245, baseType: !2250, size: 64)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2291, file: !179, line: 246, baseType: !2295, size: 32, offset: 64)
!2295 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !179, line: 242, baseType: !2296)
!2296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2297, size: 32)
!2297 = !DISubroutineType(types: !2298)
!2298 = !{null, !2299}
!2299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2291, size: 32)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2291, file: !179, line: 249, baseType: !116, size: 64, offset: 128)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2241, file: !143, line: 250, baseType: !2302, size: 288, offset: 384)
!2302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !216, line: 25, size: 288, elements: !2303)
!2303 = !{!2304, !2305, !2306, !2307, !2308, !2309, !2310, !2311, !2312}
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2302, file: !216, line: 26, baseType: !118, size: 32)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2302, file: !216, line: 27, baseType: !118, size: 32, offset: 32)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2302, file: !216, line: 28, baseType: !118, size: 32, offset: 64)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2302, file: !216, line: 29, baseType: !118, size: 32, offset: 96)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2302, file: !216, line: 30, baseType: !118, size: 32, offset: 128)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2302, file: !216, line: 31, baseType: !118, size: 32, offset: 160)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2302, file: !216, line: 32, baseType: !118, size: 32, offset: 192)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2302, file: !216, line: 33, baseType: !118, size: 32, offset: 224)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2302, file: !216, line: 34, baseType: !118, size: 32, offset: 256)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2241, file: !143, line: 253, baseType: !113, size: 32, offset: 672)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2241, file: !143, line: 256, baseType: !2272, size: 64, offset: 704)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2241, file: !143, line: 279, baseType: !230, size: 256, offset: 768)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2241, file: !143, line: 294, baseType: !119, size: 32, offset: 1024)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2241, file: !143, line: 300, baseType: !2318, size: 96, offset: 1056)
!2318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !143, line: 149, size: 96, elements: !2319)
!2319 = !{!2320, !2321, !2322}
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2318, file: !143, line: 153, baseType: !22, size: 32)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2318, file: !143, line: 162, baseType: !239, size: 32, offset: 32)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2318, file: !143, line: 168, baseType: !239, size: 32, offset: 64)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2241, file: !143, line: 325, baseType: !2324, size: 32, offset: 1152)
!2324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2325, size: 32)
!2325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !245, line: 5073, size: 192, elements: !2326)
!2326 = !{!2327, !2333, !2334}
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2325, file: !245, line: 5074, baseType: !2328, size: 96)
!2328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !249, line: 56, size: 96, elements: !2329)
!2329 = !{!2330, !2331, !2332}
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2328, file: !249, line: 57, baseType: !252, size: 32)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2328, file: !249, line: 58, baseType: !113, size: 32, offset: 32)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2328, file: !249, line: 59, baseType: !239, size: 32, offset: 64)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2325, file: !245, line: 5075, baseType: !2272, size: 64, offset: 96)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2325, file: !245, line: 5076, baseType: !2335, size: 32, offset: 160)
!2335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !2336)
!2336 = !{!2337}
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2335, file: !259, line: 52, baseType: !22, size: 32)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2241, file: !143, line: 343, baseType: !2339, size: 64, offset: 1184)
!2339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !216, line: 60, size: 64, elements: !2340)
!2340 = !{!2341, !2342}
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2339, file: !216, line: 63, baseType: !118, size: 32)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2339, file: !216, line: 66, baseType: !118, size: 32, offset: 32)
!2343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2269, size: 32)
!2344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2250, size: 32)
!2345 = !{!2235, !2346, !2349, !2351}
!2346 = !DIGlobalVariableExpression(var: !2347, expr: !DIExpression())
!2347 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2237, file: !2348, line: 404, type: !119, isLocal: true, isDefinition: true)
!2348 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2349 = !DIGlobalVariableExpression(var: !2350, expr: !DIExpression())
!2350 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2237, file: !2348, line: 405, type: !119, isLocal: true, isDefinition: true)
!2351 = !DIGlobalVariableExpression(var: !2352, expr: !DIExpression())
!2352 = distinct !DIGlobalVariable(name: "pending_current", scope: !2237, file: !2348, line: 425, type: !2240, isLocal: true, isDefinition: true)
!2353 = !DIGlobalVariableExpression(var: !2354, expr: !DIExpression())
!2354 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2355, file: !2385, line: 19, type: !2391, isLocal: true, isDefinition: true)
!2355 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2356, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2357, globals: !2382, splitDebugInlining: false, nameTableKind: None)
!2356 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pi")
!2357 = !{!114, !113, !742, !118, !120, !119, !2358, !106, !116}
!2358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2359, size: 32)
!2359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !179, line: 244, size: 192, elements: !2360)
!2360 = !{!2361, !2376, !2381}
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2359, file: !179, line: 245, baseType: !2362, size: 64)
!2362 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !153, line: 49, baseType: !2363)
!2363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !153, line: 37, size: 64, elements: !2364)
!2364 = !{!2365, !2371}
!2365 = !DIDerivedType(tag: DW_TAG_member, scope: !2363, file: !153, line: 38, baseType: !2366, size: 32)
!2366 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2363, file: !153, line: 38, size: 32, elements: !2367)
!2367 = !{!2368, !2370}
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2366, file: !153, line: 39, baseType: !2369, size: 32)
!2369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2363, size: 32)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2366, file: !153, line: 40, baseType: !2369, size: 32)
!2371 = !DIDerivedType(tag: DW_TAG_member, scope: !2363, file: !153, line: 42, baseType: !2372, size: 32, offset: 32)
!2372 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2363, file: !153, line: 42, size: 32, elements: !2373)
!2373 = !{!2374, !2375}
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2372, file: !153, line: 43, baseType: !2369, size: 32)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2372, file: !153, line: 44, baseType: !2369, size: 32)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2359, file: !179, line: 246, baseType: !2377, size: 32, offset: 64)
!2377 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !179, line: 242, baseType: !2378)
!2378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2379, size: 32)
!2379 = !DISubroutineType(types: !2380)
!2380 = !{null, !2358}
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2359, file: !179, line: 249, baseType: !116, size: 64, offset: 128)
!2382 = !{!2383, !2353, !2386, !2388}
!2383 = !DIGlobalVariableExpression(var: !2384, expr: !DIExpression())
!2384 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2355, file: !2385, line: 15, type: !120, isLocal: true, isDefinition: true)
!2385 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2386 = !DIGlobalVariableExpression(var: !2387, expr: !DIExpression())
!2387 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2355, file: !2385, line: 25, type: !119, isLocal: true, isDefinition: true)
!2388 = !DIGlobalVariableExpression(var: !2389, expr: !DIExpression())
!2389 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2355, file: !2385, line: 17, type: !2390, isLocal: true, isDefinition: true)
!2390 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !153, line: 48, baseType: !2363)
!2391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !2392)
!2392 = !{!2393}
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2391, file: !259, line: 52, baseType: !22, size: 32)
!2394 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2395, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !297, splitDebugInlining: false, nameTableKind: None)
!2395 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pi")
!2396 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2397, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !297, splitDebugInlining: false, nameTableKind: None)
!2397 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pi")
!2398 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2399, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2400, retainedTypes: !2420, splitDebugInlining: false, nameTableKind: None)
!2399 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pi")
!2400 = !{!2401, !2409}
!2401 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2402, line: 69, baseType: !32, size: 32, elements: !2403)
!2402 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2403 = !{!2404, !2405, !2406, !2407, !2408}
!2404 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2405 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2406 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2407 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2408 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2409 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2402, line: 56, baseType: !32, size: 32, elements: !2410)
!2410 = !{!2411, !2412, !2413, !2414, !2415, !2416, !2417, !2418, !2419}
!2411 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2412 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2413 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2414 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2415 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2416 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2417 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2418 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2419 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2420 = !{!119, !2401, !2409, !2421, !196, !352, !2423, !2424, !186, !200, !278, !239, !113, !22, !32, !280, !2426, !2427, !105, !281, !117, !282, !2422, !2428, !2429, !2430, !2431}
!2421 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2402, line: 31, baseType: !2422)
!2422 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !117)
!2423 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !240, line: 329, baseType: !32)
!2424 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2402, line: 32, baseType: !2425)
!2425 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !121)
!2426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !196, size: 32)
!2427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !352, size: 32)
!2428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2422, size: 32)
!2429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !239, size: 32)
!2430 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !240, line: 145, baseType: !119)
!2431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2430, size: 32)
!2432 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2433, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !297, splitDebugInlining: false, nameTableKind: None)
!2433 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pi")
!2434 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2435, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2435 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pi/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pi")
!2436 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2437, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2438, splitDebugInlining: false, nameTableKind: None)
!2437 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pi")
!2438 = !{!278, !186, !119, !32}
!2439 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2440, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2441, retainedTypes: !297, splitDebugInlining: false, nameTableKind: None)
!2440 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pi")
!2441 = !{!2442, !30}
!2442 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2443, line: 27, baseType: !32, size: 32, elements: !2444)
!2443 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2444 = !{!2445, !2446, !2447, !2448, !2449}
!2445 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2446 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2447 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2448 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2449 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2450 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2451, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2452, retainedTypes: !2453, splitDebugInlining: false, nameTableKind: None)
!2451 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pi")
!2452 = !{!602, !2442, !30}
!2453 = !{!768, !2454, !113, !119, !742, !118, !185, !2471}
!2454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2455, size: 32)
!2455 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !533, line: 426, baseType: !2456)
!2456 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 411, size: 28704, elements: !2457)
!2457 = !{!2458, !2459, !2460, !2461, !2462, !2463, !2464, !2465, !2466, !2467, !2468, !2469, !2470}
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2456, file: !533, line: 413, baseType: !1598, size: 256)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2456, file: !533, line: 414, baseType: !1600, size: 768, offset: 256)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2456, file: !533, line: 415, baseType: !1598, size: 256, offset: 1024)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2456, file: !533, line: 416, baseType: !1600, size: 768, offset: 1280)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2456, file: !533, line: 417, baseType: !1598, size: 256, offset: 2048)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2456, file: !533, line: 418, baseType: !1600, size: 768, offset: 2304)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2456, file: !533, line: 419, baseType: !1598, size: 256, offset: 3072)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2456, file: !533, line: 420, baseType: !1600, size: 768, offset: 3328)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2456, file: !533, line: 421, baseType: !1598, size: 256, offset: 4096)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2456, file: !533, line: 422, baseType: !1611, size: 1792, offset: 4352)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2456, file: !533, line: 423, baseType: !1615, size: 1920, offset: 6144)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2456, file: !533, line: 424, baseType: !1620, size: 20608, offset: 8064)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2456, file: !533, line: 425, baseType: !314, size: 32, offset: 28672)
!2471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2472, size: 32)
!2472 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !533, line: 468, baseType: !2473)
!2473 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 445, size: 1120, elements: !2474)
!2474 = !{!2475, !2476, !2477, !2478, !2479, !2480, !2481, !2482, !2483, !2484, !2485, !2486, !2487, !2488, !2489, !2490, !2491, !2492, !2493, !2494, !2495}
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2473, file: !533, line: 447, baseType: !537, size: 32)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2473, file: !533, line: 448, baseType: !314, size: 32, offset: 32)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2473, file: !533, line: 449, baseType: !314, size: 32, offset: 64)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2473, file: !533, line: 450, baseType: !314, size: 32, offset: 96)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2473, file: !533, line: 451, baseType: !314, size: 32, offset: 128)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2473, file: !533, line: 452, baseType: !314, size: 32, offset: 160)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2473, file: !533, line: 453, baseType: !1635, size: 96, offset: 192)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2473, file: !533, line: 454, baseType: !314, size: 32, offset: 288)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2473, file: !533, line: 455, baseType: !314, size: 32, offset: 320)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2473, file: !533, line: 456, baseType: !314, size: 32, offset: 352)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2473, file: !533, line: 457, baseType: !314, size: 32, offset: 384)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2473, file: !533, line: 458, baseType: !314, size: 32, offset: 416)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2473, file: !533, line: 459, baseType: !314, size: 32, offset: 448)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2473, file: !533, line: 460, baseType: !314, size: 32, offset: 480)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2473, file: !533, line: 461, baseType: !1646, size: 64, offset: 512)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2473, file: !533, line: 462, baseType: !537, size: 32, offset: 576)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2473, file: !533, line: 463, baseType: !537, size: 32, offset: 608)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2473, file: !533, line: 464, baseType: !1650, size: 128, offset: 640)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2473, file: !533, line: 465, baseType: !1652, size: 160, offset: 768)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2473, file: !533, line: 466, baseType: !1654, size: 160, offset: 928)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2473, file: !533, line: 467, baseType: !314, size: 32, offset: 1088)
!2496 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2497, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !297, splitDebugInlining: false, nameTableKind: None)
!2497 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pi")
!2498 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2499, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2500, splitDebugInlining: false, nameTableKind: None)
!2499 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pi")
!2500 = !{!113, !119, !22, !2501}
!2501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2502, size: 32)
!2502 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !533, line: 468, baseType: !2503)
!2503 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 445, size: 1120, elements: !2504)
!2504 = !{!2505, !2506, !2507, !2508, !2509, !2510, !2511, !2512, !2513, !2514, !2515, !2516, !2517, !2518, !2519, !2520, !2521, !2522, !2523, !2524, !2525}
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2503, file: !533, line: 447, baseType: !537, size: 32)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2503, file: !533, line: 448, baseType: !314, size: 32, offset: 32)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2503, file: !533, line: 449, baseType: !314, size: 32, offset: 64)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2503, file: !533, line: 450, baseType: !314, size: 32, offset: 96)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2503, file: !533, line: 451, baseType: !314, size: 32, offset: 128)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2503, file: !533, line: 452, baseType: !314, size: 32, offset: 160)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2503, file: !533, line: 453, baseType: !1635, size: 96, offset: 192)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2503, file: !533, line: 454, baseType: !314, size: 32, offset: 288)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2503, file: !533, line: 455, baseType: !314, size: 32, offset: 320)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2503, file: !533, line: 456, baseType: !314, size: 32, offset: 352)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2503, file: !533, line: 457, baseType: !314, size: 32, offset: 384)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2503, file: !533, line: 458, baseType: !314, size: 32, offset: 416)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2503, file: !533, line: 459, baseType: !314, size: 32, offset: 448)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2503, file: !533, line: 460, baseType: !314, size: 32, offset: 480)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2503, file: !533, line: 461, baseType: !1646, size: 64, offset: 512)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2503, file: !533, line: 462, baseType: !537, size: 32, offset: 576)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2503, file: !533, line: 463, baseType: !537, size: 32, offset: 608)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2503, file: !533, line: 464, baseType: !1650, size: 128, offset: 640)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2503, file: !533, line: 465, baseType: !1652, size: 160, offset: 768)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2503, file: !533, line: 466, baseType: !1654, size: 160, offset: 928)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2503, file: !533, line: 467, baseType: !314, size: 32, offset: 1088)
!2526 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2527, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2528, splitDebugInlining: false, nameTableKind: None)
!2527 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pi")
!2528 = !{!2529, !113, !119}
!2529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2530, size: 32)
!2530 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !533, line: 468, baseType: !2531)
!2531 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 445, size: 1120, elements: !2532)
!2532 = !{!2533, !2534, !2535, !2536, !2537, !2538, !2539, !2540, !2541, !2542, !2543, !2544, !2545, !2546, !2547, !2548, !2549, !2550, !2551, !2552, !2553}
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2531, file: !533, line: 447, baseType: !537, size: 32)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2531, file: !533, line: 448, baseType: !314, size: 32, offset: 32)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2531, file: !533, line: 449, baseType: !314, size: 32, offset: 64)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2531, file: !533, line: 450, baseType: !314, size: 32, offset: 96)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2531, file: !533, line: 451, baseType: !314, size: 32, offset: 128)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2531, file: !533, line: 452, baseType: !314, size: 32, offset: 160)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2531, file: !533, line: 453, baseType: !1635, size: 96, offset: 192)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2531, file: !533, line: 454, baseType: !314, size: 32, offset: 288)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2531, file: !533, line: 455, baseType: !314, size: 32, offset: 320)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2531, file: !533, line: 456, baseType: !314, size: 32, offset: 352)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2531, file: !533, line: 457, baseType: !314, size: 32, offset: 384)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2531, file: !533, line: 458, baseType: !314, size: 32, offset: 416)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2531, file: !533, line: 459, baseType: !314, size: 32, offset: 448)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2531, file: !533, line: 460, baseType: !314, size: 32, offset: 480)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2531, file: !533, line: 461, baseType: !1646, size: 64, offset: 512)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2531, file: !533, line: 462, baseType: !537, size: 32, offset: 576)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2531, file: !533, line: 463, baseType: !537, size: 32, offset: 608)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2531, file: !533, line: 464, baseType: !1650, size: 128, offset: 640)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2531, file: !533, line: 465, baseType: !1652, size: 160, offset: 768)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2531, file: !533, line: 466, baseType: !1654, size: 160, offset: 928)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2531, file: !533, line: 467, baseType: !314, size: 32, offset: 1088)
!2554 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2555, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2556, splitDebugInlining: false, nameTableKind: None)
!2555 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pi")
!2556 = !{!2557, !118, !113, !119}
!2557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2558, size: 32)
!2558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2559, line: 98, size: 256, elements: !2560)
!2559 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2560 = !{!2561, !2566, !2571, !2576, !2581, !2586, !2591, !2596}
!2561 = !DIDerivedType(tag: DW_TAG_member, scope: !2558, file: !2559, line: 99, baseType: !2562, size: 32)
!2562 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2558, file: !2559, line: 99, size: 32, elements: !2563)
!2563 = !{!2564, !2565}
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2562, file: !2559, line: 99, baseType: !118, size: 32)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2562, file: !2559, line: 99, baseType: !118, size: 32)
!2566 = !DIDerivedType(tag: DW_TAG_member, scope: !2558, file: !2559, line: 100, baseType: !2567, size: 32, offset: 32)
!2567 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2558, file: !2559, line: 100, size: 32, elements: !2568)
!2568 = !{!2569, !2570}
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2567, file: !2559, line: 100, baseType: !118, size: 32)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2567, file: !2559, line: 100, baseType: !118, size: 32)
!2571 = !DIDerivedType(tag: DW_TAG_member, scope: !2558, file: !2559, line: 101, baseType: !2572, size: 32, offset: 64)
!2572 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2558, file: !2559, line: 101, size: 32, elements: !2573)
!2573 = !{!2574, !2575}
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2572, file: !2559, line: 101, baseType: !118, size: 32)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2572, file: !2559, line: 101, baseType: !118, size: 32)
!2576 = !DIDerivedType(tag: DW_TAG_member, scope: !2558, file: !2559, line: 102, baseType: !2577, size: 32, offset: 96)
!2577 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2558, file: !2559, line: 102, size: 32, elements: !2578)
!2578 = !{!2579, !2580}
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2577, file: !2559, line: 102, baseType: !118, size: 32)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2577, file: !2559, line: 102, baseType: !118, size: 32)
!2581 = !DIDerivedType(tag: DW_TAG_member, scope: !2558, file: !2559, line: 103, baseType: !2582, size: 32, offset: 128)
!2582 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2558, file: !2559, line: 103, size: 32, elements: !2583)
!2583 = !{!2584, !2585}
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2582, file: !2559, line: 103, baseType: !118, size: 32)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2582, file: !2559, line: 103, baseType: !118, size: 32)
!2586 = !DIDerivedType(tag: DW_TAG_member, scope: !2558, file: !2559, line: 104, baseType: !2587, size: 32, offset: 160)
!2587 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2558, file: !2559, line: 104, size: 32, elements: !2588)
!2588 = !{!2589, !2590}
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2587, file: !2559, line: 104, baseType: !118, size: 32)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2587, file: !2559, line: 104, baseType: !118, size: 32)
!2591 = !DIDerivedType(tag: DW_TAG_member, scope: !2558, file: !2559, line: 105, baseType: !2592, size: 32, offset: 192)
!2592 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2558, file: !2559, line: 105, size: 32, elements: !2593)
!2593 = !{!2594, !2595}
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2592, file: !2559, line: 105, baseType: !118, size: 32)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2592, file: !2559, line: 105, baseType: !118, size: 32)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2558, file: !2559, line: 106, baseType: !118, size: 32, offset: 224)
!2597 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2598, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2441, retainedTypes: !2599, splitDebugInlining: false, nameTableKind: None)
!2598 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pi")
!2599 = !{!2600, !113, !119, !2625, !2668, !118}
!2600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2601, size: 32)
!2601 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !533, line: 468, baseType: !2602)
!2602 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 445, size: 1120, elements: !2603)
!2603 = !{!2604, !2605, !2606, !2607, !2608, !2609, !2610, !2611, !2612, !2613, !2614, !2615, !2616, !2617, !2618, !2619, !2620, !2621, !2622, !2623, !2624}
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2602, file: !533, line: 447, baseType: !537, size: 32)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2602, file: !533, line: 448, baseType: !314, size: 32, offset: 32)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2602, file: !533, line: 449, baseType: !314, size: 32, offset: 64)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2602, file: !533, line: 450, baseType: !314, size: 32, offset: 96)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2602, file: !533, line: 451, baseType: !314, size: 32, offset: 128)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2602, file: !533, line: 452, baseType: !314, size: 32, offset: 160)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2602, file: !533, line: 453, baseType: !1635, size: 96, offset: 192)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2602, file: !533, line: 454, baseType: !314, size: 32, offset: 288)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2602, file: !533, line: 455, baseType: !314, size: 32, offset: 320)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2602, file: !533, line: 456, baseType: !314, size: 32, offset: 352)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2602, file: !533, line: 457, baseType: !314, size: 32, offset: 384)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2602, file: !533, line: 458, baseType: !314, size: 32, offset: 416)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2602, file: !533, line: 459, baseType: !314, size: 32, offset: 448)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2602, file: !533, line: 460, baseType: !314, size: 32, offset: 480)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2602, file: !533, line: 461, baseType: !1646, size: 64, offset: 512)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2602, file: !533, line: 462, baseType: !537, size: 32, offset: 576)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2602, file: !533, line: 463, baseType: !537, size: 32, offset: 608)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2602, file: !533, line: 464, baseType: !1650, size: 128, offset: 640)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2602, file: !533, line: 465, baseType: !1652, size: 160, offset: 768)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2602, file: !533, line: 466, baseType: !1654, size: 160, offset: 928)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2602, file: !533, line: 467, baseType: !314, size: 32, offset: 1088)
!2625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2626, size: 32)
!2626 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2559, line: 141, baseType: !2627)
!2627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2559, line: 97, size: 256, elements: !2628)
!2628 = !{!2629}
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2627, file: !2559, line: 107, baseType: !2630, size: 256)
!2630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2559, line: 98, size: 256, elements: !2631)
!2631 = !{!2632, !2637, !2642, !2647, !2652, !2657, !2662, !2667}
!2632 = !DIDerivedType(tag: DW_TAG_member, scope: !2630, file: !2559, line: 99, baseType: !2633, size: 32)
!2633 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2630, file: !2559, line: 99, size: 32, elements: !2634)
!2634 = !{!2635, !2636}
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2633, file: !2559, line: 99, baseType: !118, size: 32)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2633, file: !2559, line: 99, baseType: !118, size: 32)
!2637 = !DIDerivedType(tag: DW_TAG_member, scope: !2630, file: !2559, line: 100, baseType: !2638, size: 32, offset: 32)
!2638 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2630, file: !2559, line: 100, size: 32, elements: !2639)
!2639 = !{!2640, !2641}
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2638, file: !2559, line: 100, baseType: !118, size: 32)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2638, file: !2559, line: 100, baseType: !118, size: 32)
!2642 = !DIDerivedType(tag: DW_TAG_member, scope: !2630, file: !2559, line: 101, baseType: !2643, size: 32, offset: 64)
!2643 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2630, file: !2559, line: 101, size: 32, elements: !2644)
!2644 = !{!2645, !2646}
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2643, file: !2559, line: 101, baseType: !118, size: 32)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2643, file: !2559, line: 101, baseType: !118, size: 32)
!2647 = !DIDerivedType(tag: DW_TAG_member, scope: !2630, file: !2559, line: 102, baseType: !2648, size: 32, offset: 96)
!2648 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2630, file: !2559, line: 102, size: 32, elements: !2649)
!2649 = !{!2650, !2651}
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2648, file: !2559, line: 102, baseType: !118, size: 32)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2648, file: !2559, line: 102, baseType: !118, size: 32)
!2652 = !DIDerivedType(tag: DW_TAG_member, scope: !2630, file: !2559, line: 103, baseType: !2653, size: 32, offset: 128)
!2653 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2630, file: !2559, line: 103, size: 32, elements: !2654)
!2654 = !{!2655, !2656}
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2653, file: !2559, line: 103, baseType: !118, size: 32)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2653, file: !2559, line: 103, baseType: !118, size: 32)
!2657 = !DIDerivedType(tag: DW_TAG_member, scope: !2630, file: !2559, line: 104, baseType: !2658, size: 32, offset: 160)
!2658 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2630, file: !2559, line: 104, size: 32, elements: !2659)
!2659 = !{!2660, !2661}
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2658, file: !2559, line: 104, baseType: !118, size: 32)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2658, file: !2559, line: 104, baseType: !118, size: 32)
!2662 = !DIDerivedType(tag: DW_TAG_member, scope: !2630, file: !2559, line: 105, baseType: !2663, size: 32, offset: 192)
!2663 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2630, file: !2559, line: 105, size: 32, elements: !2664)
!2664 = !{!2665, !2666}
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2663, file: !2559, line: 105, baseType: !118, size: 32)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2663, file: !2559, line: 105, baseType: !118, size: 32)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2630, file: !2559, line: 106, baseType: !118, size: 32, offset: 224)
!2668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !199, size: 32)
!2669 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2670, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1583, retainedTypes: !2671, splitDebugInlining: false, nameTableKind: None)
!2670 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pi")
!2671 = !{!768, !742, !185, !118, !2672, !2689}
!2672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2673, size: 32)
!2673 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !533, line: 426, baseType: !2674)
!2674 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 411, size: 28704, elements: !2675)
!2675 = !{!2676, !2677, !2678, !2679, !2680, !2681, !2682, !2683, !2684, !2685, !2686, !2687, !2688}
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2674, file: !533, line: 413, baseType: !1598, size: 256)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2674, file: !533, line: 414, baseType: !1600, size: 768, offset: 256)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2674, file: !533, line: 415, baseType: !1598, size: 256, offset: 1024)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2674, file: !533, line: 416, baseType: !1600, size: 768, offset: 1280)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2674, file: !533, line: 417, baseType: !1598, size: 256, offset: 2048)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2674, file: !533, line: 418, baseType: !1600, size: 768, offset: 2304)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2674, file: !533, line: 419, baseType: !1598, size: 256, offset: 3072)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2674, file: !533, line: 420, baseType: !1600, size: 768, offset: 3328)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2674, file: !533, line: 421, baseType: !1598, size: 256, offset: 4096)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2674, file: !533, line: 422, baseType: !1611, size: 1792, offset: 4352)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2674, file: !533, line: 423, baseType: !1615, size: 1920, offset: 6144)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2674, file: !533, line: 424, baseType: !1620, size: 20608, offset: 8064)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2674, file: !533, line: 425, baseType: !314, size: 32, offset: 28672)
!2689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2690, size: 32)
!2690 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !533, line: 468, baseType: !2691)
!2691 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 445, size: 1120, elements: !2692)
!2692 = !{!2693, !2694, !2695, !2696, !2697, !2698, !2699, !2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707, !2708, !2709, !2710, !2711, !2712, !2713}
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2691, file: !533, line: 447, baseType: !537, size: 32)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2691, file: !533, line: 448, baseType: !314, size: 32, offset: 32)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2691, file: !533, line: 449, baseType: !314, size: 32, offset: 64)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2691, file: !533, line: 450, baseType: !314, size: 32, offset: 96)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2691, file: !533, line: 451, baseType: !314, size: 32, offset: 128)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2691, file: !533, line: 452, baseType: !314, size: 32, offset: 160)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2691, file: !533, line: 453, baseType: !1635, size: 96, offset: 192)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2691, file: !533, line: 454, baseType: !314, size: 32, offset: 288)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2691, file: !533, line: 455, baseType: !314, size: 32, offset: 320)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2691, file: !533, line: 456, baseType: !314, size: 32, offset: 352)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2691, file: !533, line: 457, baseType: !314, size: 32, offset: 384)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2691, file: !533, line: 458, baseType: !314, size: 32, offset: 416)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2691, file: !533, line: 459, baseType: !314, size: 32, offset: 448)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2691, file: !533, line: 460, baseType: !314, size: 32, offset: 480)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2691, file: !533, line: 461, baseType: !1646, size: 64, offset: 512)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2691, file: !533, line: 462, baseType: !537, size: 32, offset: 576)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2691, file: !533, line: 463, baseType: !537, size: 32, offset: 608)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2691, file: !533, line: 464, baseType: !1650, size: 128, offset: 640)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2691, file: !533, line: 465, baseType: !1652, size: 160, offset: 768)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2691, file: !533, line: 466, baseType: !1654, size: 160, offset: 928)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2691, file: !533, line: 467, baseType: !314, size: 32, offset: 1088)
!2714 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2715, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2716, splitDebugInlining: false, nameTableKind: None)
!2715 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pi")
!2716 = !{!2717, !113, !119}
!2717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2718, size: 32)
!2718 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !533, line: 468, baseType: !2719)
!2719 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 445, size: 1120, elements: !2720)
!2720 = !{!2721, !2722, !2723, !2724, !2725, !2726, !2727, !2728, !2729, !2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740, !2741}
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2719, file: !533, line: 447, baseType: !537, size: 32)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2719, file: !533, line: 448, baseType: !314, size: 32, offset: 32)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2719, file: !533, line: 449, baseType: !314, size: 32, offset: 64)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2719, file: !533, line: 450, baseType: !314, size: 32, offset: 96)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2719, file: !533, line: 451, baseType: !314, size: 32, offset: 128)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2719, file: !533, line: 452, baseType: !314, size: 32, offset: 160)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2719, file: !533, line: 453, baseType: !1635, size: 96, offset: 192)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2719, file: !533, line: 454, baseType: !314, size: 32, offset: 288)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2719, file: !533, line: 455, baseType: !314, size: 32, offset: 320)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2719, file: !533, line: 456, baseType: !314, size: 32, offset: 352)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2719, file: !533, line: 457, baseType: !314, size: 32, offset: 384)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2719, file: !533, line: 458, baseType: !314, size: 32, offset: 416)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2719, file: !533, line: 459, baseType: !314, size: 32, offset: 448)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2719, file: !533, line: 460, baseType: !314, size: 32, offset: 480)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2719, file: !533, line: 461, baseType: !1646, size: 64, offset: 512)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2719, file: !533, line: 462, baseType: !537, size: 32, offset: 576)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2719, file: !533, line: 463, baseType: !537, size: 32, offset: 608)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2719, file: !533, line: 464, baseType: !1650, size: 128, offset: 640)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2719, file: !533, line: 465, baseType: !1652, size: 160, offset: 768)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2719, file: !533, line: 466, baseType: !1654, size: 160, offset: 928)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2719, file: !533, line: 467, baseType: !314, size: 32, offset: 1088)
!2742 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2743, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2744, splitDebugInlining: false, nameTableKind: None)
!2743 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pi")
!2744 = !{!107, !106, !239, !972, !2745, !186, !113}
!2745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2746, size: 32)
!2746 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !186)
!2747 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2748, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2749, splitDebugInlining: false, nameTableKind: None)
!2748 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/sprintf.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pi")
!2749 = !{!119, !113}
!2750 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2751, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2752, splitDebugInlining: false, nameTableKind: None)
!2751 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pi")
!2752 = !{!2753}
!2753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2754, size: 32)
!2754 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !310, line: 369, baseType: !2755)
!2755 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 335, size: 1152, elements: !2756)
!2756 = !{!2757, !2758, !2759, !2760, !2761, !2762, !2763, !2764, !2765, !2766, !2767, !2768, !2769, !2770, !2771, !2772, !2773, !2774, !2775, !2776, !2777, !2778, !2779, !2780, !2781, !2782, !2783, !2784, !2785, !2786, !2787, !2788}
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2755, file: !310, line: 337, baseType: !314, size: 32)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2755, file: !310, line: 338, baseType: !314, size: 32, offset: 32)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2755, file: !310, line: 339, baseType: !314, size: 32, offset: 64)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2755, file: !310, line: 340, baseType: !314, size: 32, offset: 96)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2755, file: !310, line: 341, baseType: !314, size: 32, offset: 128)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2755, file: !310, line: 342, baseType: !314, size: 32, offset: 160)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2755, file: !310, line: 343, baseType: !314, size: 32, offset: 192)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2755, file: !310, line: 344, baseType: !118, size: 32, offset: 224)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2755, file: !310, line: 345, baseType: !314, size: 32, offset: 256)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2755, file: !310, line: 346, baseType: !314, size: 32, offset: 288)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2755, file: !310, line: 347, baseType: !838, size: 64, offset: 320)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2755, file: !310, line: 348, baseType: !314, size: 32, offset: 384)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2755, file: !310, line: 349, baseType: !314, size: 32, offset: 416)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2755, file: !310, line: 350, baseType: !314, size: 32, offset: 448)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2755, file: !310, line: 351, baseType: !118, size: 32, offset: 480)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2755, file: !310, line: 352, baseType: !314, size: 32, offset: 512)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2755, file: !310, line: 353, baseType: !314, size: 32, offset: 544)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2755, file: !310, line: 354, baseType: !838, size: 64, offset: 576)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2755, file: !310, line: 355, baseType: !314, size: 32, offset: 640)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2755, file: !310, line: 356, baseType: !314, size: 32, offset: 672)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2755, file: !310, line: 357, baseType: !314, size: 32, offset: 704)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2755, file: !310, line: 358, baseType: !118, size: 32, offset: 736)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2755, file: !310, line: 359, baseType: !314, size: 32, offset: 768)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2755, file: !310, line: 360, baseType: !314, size: 32, offset: 800)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2755, file: !310, line: 361, baseType: !838, size: 64, offset: 832)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2755, file: !310, line: 362, baseType: !314, size: 32, offset: 896)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2755, file: !310, line: 363, baseType: !314, size: 32, offset: 928)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2755, file: !310, line: 364, baseType: !838, size: 64, offset: 960)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2755, file: !310, line: 365, baseType: !314, size: 32, offset: 1024)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2755, file: !310, line: 366, baseType: !314, size: 32, offset: 1056)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2755, file: !310, line: 367, baseType: !859, size: 32, offset: 1088)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2755, file: !310, line: 368, baseType: !314, size: 32, offset: 1120)
!2789 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2790, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2790 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pi")
!2791 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2792, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2793, retainedTypes: !2809, splitDebugInlining: false, nameTableKind: None)
!2792 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pi")
!2793 = !{!2794, !2801, !2805}
!2794 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2795, line: 38, baseType: !32, size: 32, elements: !2796)
!2795 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2796 = !{!2797, !2798, !2799, !2800}
!2797 = !DIEnumerator(name: "HAL_OK", value: 0)
!2798 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!2799 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!2800 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!2801 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !811, line: 184, baseType: !32, size: 32, elements: !2802)
!2802 = !{!2803, !2804}
!2803 = !DIEnumerator(name: "RESET", value: 0)
!2804 = !DIEnumerator(name: "SET", value: 1)
!2805 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !811, line: 190, baseType: !32, size: 32, elements: !2806)
!2806 = !{!2807, !2808}
!2807 = !DIEnumerator(name: "DISABLE", value: 0)
!2808 = !DIEnumerator(name: "ENABLE", value: 1)
!2809 = !{!113, !2810, !185, !118, !1452, !2846, !2852, !2863, !199, !2864, !120}
!2810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2811, size: 32)
!2811 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !310, line: 369, baseType: !2812)
!2812 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 335, size: 1152, elements: !2813)
!2813 = !{!2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824, !2825, !2826, !2827, !2828, !2829, !2830, !2831, !2832, !2833, !2834, !2835, !2836, !2837, !2838, !2839, !2840, !2841, !2842, !2843, !2844, !2845}
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2812, file: !310, line: 337, baseType: !314, size: 32)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2812, file: !310, line: 338, baseType: !314, size: 32, offset: 32)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2812, file: !310, line: 339, baseType: !314, size: 32, offset: 64)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2812, file: !310, line: 340, baseType: !314, size: 32, offset: 96)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2812, file: !310, line: 341, baseType: !314, size: 32, offset: 128)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2812, file: !310, line: 342, baseType: !314, size: 32, offset: 160)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2812, file: !310, line: 343, baseType: !314, size: 32, offset: 192)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2812, file: !310, line: 344, baseType: !118, size: 32, offset: 224)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2812, file: !310, line: 345, baseType: !314, size: 32, offset: 256)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2812, file: !310, line: 346, baseType: !314, size: 32, offset: 288)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2812, file: !310, line: 347, baseType: !838, size: 64, offset: 320)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2812, file: !310, line: 348, baseType: !314, size: 32, offset: 384)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2812, file: !310, line: 349, baseType: !314, size: 32, offset: 416)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2812, file: !310, line: 350, baseType: !314, size: 32, offset: 448)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2812, file: !310, line: 351, baseType: !118, size: 32, offset: 480)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2812, file: !310, line: 352, baseType: !314, size: 32, offset: 512)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2812, file: !310, line: 353, baseType: !314, size: 32, offset: 544)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2812, file: !310, line: 354, baseType: !838, size: 64, offset: 576)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2812, file: !310, line: 355, baseType: !314, size: 32, offset: 640)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2812, file: !310, line: 356, baseType: !314, size: 32, offset: 672)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2812, file: !310, line: 357, baseType: !314, size: 32, offset: 704)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2812, file: !310, line: 358, baseType: !118, size: 32, offset: 736)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2812, file: !310, line: 359, baseType: !314, size: 32, offset: 768)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2812, file: !310, line: 360, baseType: !314, size: 32, offset: 800)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2812, file: !310, line: 361, baseType: !838, size: 64, offset: 832)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2812, file: !310, line: 362, baseType: !314, size: 32, offset: 896)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2812, file: !310, line: 363, baseType: !314, size: 32, offset: 928)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2812, file: !310, line: 364, baseType: !838, size: 64, offset: 960)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2812, file: !310, line: 365, baseType: !314, size: 32, offset: 1024)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2812, file: !310, line: 366, baseType: !314, size: 32, offset: 1056)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2812, file: !310, line: 367, baseType: !859, size: 32, offset: 1088)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2812, file: !310, line: 368, baseType: !314, size: 32, offset: 1120)
!2846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2847, size: 32)
!2847 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !310, line: 329, baseType: !2848)
!2848 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 325, size: 64, elements: !2849)
!2849 = !{!2850, !2851}
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2848, file: !310, line: 327, baseType: !314, size: 32)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2848, file: !310, line: 328, baseType: !314, size: 32, offset: 32)
!2852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2853, size: 32)
!2853 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !310, line: 258, baseType: !2854)
!2854 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 249, size: 224, elements: !2855)
!2855 = !{!2856, !2857, !2858, !2859, !2860, !2861, !2862}
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2854, file: !310, line: 251, baseType: !314, size: 32)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2854, file: !310, line: 252, baseType: !314, size: 32, offset: 32)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2854, file: !310, line: 253, baseType: !314, size: 32, offset: 64)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2854, file: !310, line: 254, baseType: !314, size: 32, offset: 96)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2854, file: !310, line: 255, baseType: !314, size: 32, offset: 128)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2854, file: !310, line: 256, baseType: !314, size: 32, offset: 160)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2854, file: !310, line: 257, baseType: !314, size: 32, offset: 192)
!2863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1616, size: 32)
!2864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2865, size: 32)
!2865 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !310, line: 275, baseType: !2866)
!2866 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 264, size: 320, elements: !2867)
!2867 = !{!2868, !2869, !2870, !2871, !2872, !2873, !2874, !2875, !2876}
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !2866, file: !310, line: 266, baseType: !314, size: 32)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !2866, file: !310, line: 267, baseType: !314, size: 32, offset: 32)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !2866, file: !310, line: 268, baseType: !314, size: 32, offset: 64)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !2866, file: !310, line: 269, baseType: !314, size: 32, offset: 96)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !2866, file: !310, line: 270, baseType: !314, size: 32, offset: 128)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !2866, file: !310, line: 271, baseType: !314, size: 32, offset: 160)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !2866, file: !310, line: 272, baseType: !314, size: 32, offset: 192)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !2866, file: !310, line: 273, baseType: !314, size: 32, offset: 224)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !2866, file: !310, line: 274, baseType: !1126, size: 64, offset: 256)
!2877 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2878, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2879, retainedTypes: !2880, splitDebugInlining: false, nameTableKind: None)
!2878 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pi")
!2879 = !{!810}
!2880 = !{!2881, !118, !2889, !2895, !2906}
!2881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2882, size: 32)
!2882 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !533, line: 770, baseType: !2883)
!2883 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 764, size: 128, elements: !2884)
!2884 = !{!2885, !2886, !2887, !2888}
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2883, file: !533, line: 766, baseType: !314, size: 32)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2883, file: !533, line: 767, baseType: !314, size: 32, offset: 32)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2883, file: !533, line: 768, baseType: !314, size: 32, offset: 64)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2883, file: !533, line: 769, baseType: !537, size: 32, offset: 96)
!2889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2890, size: 32)
!2890 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !310, line: 329, baseType: !2891)
!2891 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 325, size: 64, elements: !2892)
!2892 = !{!2893, !2894}
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2891, file: !310, line: 327, baseType: !314, size: 32)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2891, file: !310, line: 328, baseType: !314, size: 32, offset: 32)
!2895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2896, size: 32)
!2896 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !310, line: 258, baseType: !2897)
!2897 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 249, size: 224, elements: !2898)
!2898 = !{!2899, !2900, !2901, !2902, !2903, !2904, !2905}
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2897, file: !310, line: 251, baseType: !314, size: 32)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2897, file: !310, line: 252, baseType: !314, size: 32, offset: 32)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2897, file: !310, line: 253, baseType: !314, size: 32, offset: 64)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2897, file: !310, line: 254, baseType: !314, size: 32, offset: 96)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2897, file: !310, line: 255, baseType: !314, size: 32, offset: 128)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2897, file: !310, line: 256, baseType: !314, size: 32, offset: 160)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2897, file: !310, line: 257, baseType: !314, size: 32, offset: 192)
!2906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2907, size: 32)
!2907 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !310, line: 369, baseType: !2908)
!2908 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 335, size: 1152, elements: !2909)
!2909 = !{!2910, !2911, !2912, !2913, !2914, !2915, !2916, !2917, !2918, !2919, !2920, !2921, !2922, !2923, !2924, !2925, !2926, !2927, !2928, !2929, !2930, !2931, !2932, !2933, !2934, !2935, !2936, !2937, !2938, !2939, !2940, !2941}
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2908, file: !310, line: 337, baseType: !314, size: 32)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2908, file: !310, line: 338, baseType: !314, size: 32, offset: 32)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2908, file: !310, line: 339, baseType: !314, size: 32, offset: 64)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2908, file: !310, line: 340, baseType: !314, size: 32, offset: 96)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2908, file: !310, line: 341, baseType: !314, size: 32, offset: 128)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2908, file: !310, line: 342, baseType: !314, size: 32, offset: 160)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2908, file: !310, line: 343, baseType: !314, size: 32, offset: 192)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2908, file: !310, line: 344, baseType: !118, size: 32, offset: 224)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2908, file: !310, line: 345, baseType: !314, size: 32, offset: 256)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2908, file: !310, line: 346, baseType: !314, size: 32, offset: 288)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2908, file: !310, line: 347, baseType: !838, size: 64, offset: 320)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2908, file: !310, line: 348, baseType: !314, size: 32, offset: 384)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2908, file: !310, line: 349, baseType: !314, size: 32, offset: 416)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2908, file: !310, line: 350, baseType: !314, size: 32, offset: 448)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2908, file: !310, line: 351, baseType: !118, size: 32, offset: 480)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2908, file: !310, line: 352, baseType: !314, size: 32, offset: 512)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2908, file: !310, line: 353, baseType: !314, size: 32, offset: 544)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2908, file: !310, line: 354, baseType: !838, size: 64, offset: 576)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2908, file: !310, line: 355, baseType: !314, size: 32, offset: 640)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2908, file: !310, line: 356, baseType: !314, size: 32, offset: 672)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2908, file: !310, line: 357, baseType: !314, size: 32, offset: 704)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2908, file: !310, line: 358, baseType: !118, size: 32, offset: 736)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2908, file: !310, line: 359, baseType: !314, size: 32, offset: 768)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2908, file: !310, line: 360, baseType: !314, size: 32, offset: 800)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2908, file: !310, line: 361, baseType: !838, size: 64, offset: 832)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2908, file: !310, line: 362, baseType: !314, size: 32, offset: 896)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2908, file: !310, line: 363, baseType: !314, size: 32, offset: 928)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2908, file: !310, line: 364, baseType: !838, size: 64, offset: 960)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2908, file: !310, line: 365, baseType: !314, size: 32, offset: 1024)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2908, file: !310, line: 366, baseType: !314, size: 32, offset: 1056)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2908, file: !310, line: 367, baseType: !859, size: 32, offset: 1088)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2908, file: !310, line: 368, baseType: !314, size: 32, offset: 1120)
!2942 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2943, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2944, splitDebugInlining: false, nameTableKind: None)
!2943 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pi")
!2944 = !{!113, !239}
!2945 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2946, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2947, retainedTypes: !297, splitDebugInlining: false, nameTableKind: None)
!2946 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pi")
!2947 = !{!2948, !2955, !2442, !30}
!2948 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !2949, line: 14, baseType: !32, size: 32, elements: !2950)
!2949 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2950 = !{!2951, !2952, !2953, !2954}
!2951 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!2952 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!2953 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!2954 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!2955 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !2949, line: 42, baseType: !32, size: 32, elements: !2956)
!2956 = !{!2957, !2958, !2959, !2960, !2961, !2962}
!2957 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!2958 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!2959 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!2960 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!2961 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!2962 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!2963 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2964, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !297, splitDebugInlining: false, nameTableKind: None)
!2964 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pi")
!2965 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2966, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2967, splitDebugInlining: false, nameTableKind: None)
!2966 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pi")
!2967 = !{!22, !113, !119}
!2968 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2969, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !297, splitDebugInlining: false, nameTableKind: None)
!2969 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pi")
!2970 = !{!"Ubuntu clang version 14.0.6"}
!2971 = !{i32 7, !"Dwarf Version", i32 4}
!2972 = !{i32 2, !"Debug Info Version", i32 3}
!2973 = !{i32 1, !"wchar_size", i32 4}
!2974 = !{i32 1, !"min_enum_size", i32 4}
!2975 = !{i32 1, !"branch-target-enforcement", i32 0}
!2976 = !{i32 1, !"sign-return-address", i32 0}
!2977 = !{i32 1, !"sign-return-address-all", i32 0}
!2978 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!2979 = !{i32 7, !"frame-pointer", i32 2}
!2980 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !2981, file: !2981, line: 26, type: !2982, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2394, retainedNodes: !2048)
!2981 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2982 = !DISubroutineType(types: !2983)
!2983 = !{null}
!2984 = !DILocation(line: 28, column: 1, scope: !2980)
!2985 = !{i64 2154450165, i64 2154450185, i64 2154450248}
!2986 = !DILocation(line: 29, column: 1, scope: !2980)
!2987 = !{i64 2154450580, i64 2154450600, i64 2154450663}
!2988 = !DILocation(line: 30, column: 1, scope: !2980)
!2989 = !{i64 2154450999, i64 2154451019, i64 2154451082}
!2990 = !DILocation(line: 31, column: 1, scope: !2980)
!2991 = !{i64 2154451418, i64 2154451438, i64 2154451501}
!2992 = !DILocation(line: 33, column: 1, scope: !2980)
!2993 = !{i64 2154451710, i64 2154451730, i64 2154451793}
!2994 = !DILocation(line: 35, column: 1, scope: !2980)
!2995 = !{i64 2154452035, i64 2154452055, i64 2154452118}
!2996 = !DILocation(line: 50, column: 1, scope: !2980)
!2997 = !{i64 2154452462, i64 2154452482, i64 2154452545}
!2998 = !DILocation(line: 54, column: 1, scope: !2980)
!2999 = !{i64 2154452901, i64 2154452921, i64 2154452984}
!3000 = !DILocation(line: 61, column: 1, scope: !2980)
!3001 = !{i64 2154453218, i64 2154453238, i64 2154453301}
!3002 = !DILocation(line: 63, column: 1, scope: !2980)
!3003 = !{i64 2154457659, i64 2154457679, i64 2154457742}
!3004 = !DILocation(line: 64, column: 1, scope: !2980)
!3005 = !{i64 2154458181, i64 2154458201, i64 2154458264}
!3006 = !DILocation(line: 65, column: 1, scope: !2980)
!3007 = !{i64 2154458679, i64 2154458699, i64 2154458762}
!3008 = !DILocation(line: 66, column: 1, scope: !2980)
!3009 = !{i64 2154459161, i64 2154459181, i64 2154459244}
!3010 = !DILocation(line: 67, column: 1, scope: !2980)
!3011 = !{i64 2154459668, i64 2154459688, i64 2154459751}
!3012 = !DILocation(line: 68, column: 1, scope: !2980)
!3013 = !{i64 2154460156, i64 2154460176, i64 2154460239}
!3014 = !DILocation(line: 70, column: 1, scope: !2980)
!3015 = !{i64 2154460624, i64 2154460644, i64 2154460707}
!3016 = !DILocation(line: 71, column: 1, scope: !2980)
!3017 = !{i64 2154461066, i64 2154461086, i64 2154461149}
!3018 = !DILocation(line: 72, column: 1, scope: !2980)
!3019 = !{i64 2154461524, i64 2154461544, i64 2154461607}
!3020 = !DILocation(line: 79, column: 1, scope: !2980)
!3021 = !{i64 2154461978, i64 2154461998, i64 2154462061}
!3022 = !DILocation(line: 80, column: 1, scope: !2980)
!3023 = !{i64 2154462489, i64 2154462509, i64 2154462572}
!3024 = !DILocation(line: 82, column: 1, scope: !2980)
!3025 = !{i64 2154462980, i64 2154463000, i64 2154463063}
!3026 = !DILocation(line: 97, column: 1, scope: !2980)
!3027 = !{i64 2154463317, i64 2154463337, i64 2154463400}
!3028 = !DILocation(line: 99, column: 1, scope: !2980)
!3029 = !{i64 2154463535, i64 2154463555, i64 2154463618}
!3030 = !DILocation(line: 102, column: 1, scope: !2980)
!3031 = !{i64 2154463792, i64 2154463812, i64 2154463875}
!3032 = !DILocation(line: 105, column: 1, scope: !2980)
!3033 = !{i64 2154464032, i64 2154464052, i64 2154464115}
!3034 = !DILocation(line: 115, column: 1, scope: !2980)
!3035 = !{i64 2154464371, i64 2154464391, i64 2154464454}
!3036 = !DILocation(line: 118, column: 1, scope: !2980)
!3037 = !{i64 2154464715, i64 2154464735, i64 2154464798}
!3038 = !DILocation(line: 32, column: 1, scope: !3039)
!3039 = !DILexicalBlockFile(scope: !2980, file: !3040, discriminator: 0)
!3040 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3041 = !{i64 2154465071, i64 2154465091, i64 2154465154}
!3042 = !DILocation(line: 33, column: 1, scope: !3039)
!3043 = !{i64 2154465583, i64 2154465603, i64 2154465666}
!3044 = !DILocation(line: 53, column: 1, scope: !3039)
!3045 = !{i64 2154466091, i64 2154466111, i64 2154466174}
!3046 = !DILocation(line: 54, column: 1, scope: !3039)
!3047 = !{i64 2154466509, i64 2154466529, i64 2154466592}
!3048 = !DILocation(line: 55, column: 1, scope: !3039)
!3049 = !{i64 2154470988, i64 2154471008, i64 2154471071}
!3050 = !DILocation(line: 56, column: 1, scope: !3039)
!3051 = !{i64 2154471406, i64 2154471426, i64 2154471489}
!3052 = !DILocation(line: 57, column: 1, scope: !3039)
!3053 = !{i64 2154471824, i64 2154471844, i64 2154471907}
!3054 = !DILocation(line: 58, column: 1, scope: !3039)
!3055 = !{i64 2154472242, i64 2154472262, i64 2154472325}
!3056 = !DILocation(line: 59, column: 1, scope: !3039)
!3057 = !{i64 2154472660, i64 2154472680, i64 2154472743}
!3058 = !DILocation(line: 60, column: 1, scope: !3039)
!3059 = !{i64 2154473084, i64 2154473104, i64 2154473167}
!3060 = !DILocation(line: 61, column: 1, scope: !3039)
!3061 = !{i64 2154473401, i64 2154473421, i64 2154473484}
!3062 = !DILocation(line: 70, column: 1, scope: !3039)
!3063 = !{i64 2154473630, i64 2154473650, i64 2154473713}
!3064 = !DILocation(line: 72, column: 1, scope: !3039)
!3065 = !{i64 2154473962, i64 2154473982, i64 2154474045}
!3066 = !DILocation(line: 73, column: 1, scope: !3039)
!3067 = !{i64 2154474412, i64 2154474432, i64 2154474495}
!3068 = !DILocation(line: 74, column: 1, scope: !3039)
!3069 = !{i64 2154474862, i64 2154474882, i64 2154474945}
!3070 = !DILocation(line: 75, column: 1, scope: !3039)
!3071 = !{i64 2154475312, i64 2154475332, i64 2154475395}
!3072 = !DILocation(line: 76, column: 1, scope: !3039)
!3073 = !{i64 2154475762, i64 2154475782, i64 2154475845}
!3074 = !DILocation(line: 77, column: 1, scope: !3039)
!3075 = !{i64 2154476212, i64 2154476232, i64 2154476295}
!3076 = !DILocation(line: 78, column: 1, scope: !3039)
!3077 = !{i64 2154476662, i64 2154476682, i64 2154476745}
!3078 = !DILocation(line: 79, column: 1, scope: !3039)
!3079 = !{i64 2154477112, i64 2154477132, i64 2154477195}
!3080 = !DILocation(line: 80, column: 1, scope: !3039)
!3081 = !{i64 2154477565, i64 2154477585, i64 2154477648}
!3082 = !DILocation(line: 84, column: 1, scope: !3039)
!3083 = !{i64 2154477897, i64 2154477917, i64 2154477980}
!3084 = !DILocation(line: 91, column: 1, scope: !3039)
!3085 = !{i64 2154478294, i64 2154478314, i64 2154478377}
!3086 = !DILocation(line: 93, column: 1, scope: !3039)
!3087 = !{i64 2154478661, i64 2154478681, i64 2154478744}
!3088 = !DILocation(line: 106, column: 1, scope: !3039)
!3089 = !{i64 2154478931, i64 2154478951, i64 2154479014}
!3090 = !DILocation(line: 11, column: 1, scope: !3091)
!3091 = !DILexicalBlockFile(scope: !2980, file: !3092, discriminator: 0)
!3092 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3093 = distinct !DISubprogram(name: "test_thread", scope: !125, file: !125, line: 33, type: !111, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3094)
!3094 = !{!3095, !3096, !3097, !3098, !3099, !3100, !3104, !3105, !3106, !3107, !3111}
!3095 = !DILocalVariable(name: "arg1", arg: 1, scope: !3093, file: !125, line: 33, type: !113)
!3096 = !DILocalVariable(name: "arg2", arg: 2, scope: !3093, file: !125, line: 33, type: !113)
!3097 = !DILocalVariable(name: "arg3", arg: 3, scope: !3093, file: !125, line: 33, type: !113)
!3098 = !DILocalVariable(name: "counter", scope: !3093, file: !125, line: 35, type: !102)
!3099 = !DILocalVariable(name: "buffer", scope: !3093, file: !125, line: 36, type: !106)
!3100 = !DILocalVariable(name: "array", scope: !3093, file: !125, line: 52, type: !3101)
!3101 = !DICompositeType(tag: DW_TAG_array_type, baseType: !119, size: 26912, elements: !3102)
!3102 = !{!3103}
!3103 = !DISubrange(count: 841)
!3104 = !DILocalVariable(name: "carry", scope: !3093, file: !125, line: 53, type: !119)
!3105 = !DILocalVariable(name: "i", scope: !3093, file: !125, line: 54, type: !119)
!3106 = !DILocalVariable(name: "j", scope: !3093, file: !125, line: 54, type: !119)
!3107 = !DILocalVariable(name: "sum", scope: !3108, file: !125, line: 61, type: !119)
!3108 = distinct !DILexicalBlock(scope: !3109, file: !125, line: 60, column: 35)
!3109 = distinct !DILexicalBlock(scope: !3110, file: !125, line: 60, column: 2)
!3110 = distinct !DILexicalBlock(scope: !3093, file: !125, line: 60, column: 2)
!3111 = !DILocalVariable(name: "value", scope: !3108, file: !125, line: 61, type: !119)
!3112 = !DILocation(line: 0, scope: !3093)
!3113 = !DILocation(line: 52, column: 2, scope: !3093)
!3114 = !DILocation(line: 52, column: 6, scope: !3093)
!3115 = !DILocation(line: 56, column: 2, scope: !3116)
!3116 = distinct !DILexicalBlock(scope: !3093, file: !125, line: 56, column: 2)
!3117 = !DILocation(line: 57, column: 3, scope: !3118)
!3118 = distinct !DILexicalBlock(scope: !3119, file: !125, line: 56, column: 31)
!3119 = distinct !DILexicalBlock(scope: !3116, file: !125, line: 56, column: 2)
!3120 = !DILocation(line: 57, column: 12, scope: !3118)
!3121 = !DILocation(line: 56, column: 27, scope: !3119)
!3122 = !DILocation(line: 56, column: 16, scope: !3119)
!3123 = distinct !{!3123, !3115, !3124}
!3124 = !DILocation(line: 58, column: 2, scope: !3116)
!3125 = !DILocation(line: 0, scope: !3108)
!3126 = !DILocation(line: 63, column: 3, scope: !3127)
!3127 = distinct !DILexicalBlock(scope: !3108, file: !125, line: 63, column: 3)
!3128 = !DILocation(line: 64, column: 14, scope: !3129)
!3129 = distinct !DILexicalBlock(scope: !3130, file: !125, line: 63, column: 27)
!3130 = distinct !DILexicalBlock(scope: !3127, file: !125, line: 63, column: 3)
!3131 = !DILocation(line: 64, column: 31, scope: !3129)
!3132 = !DILocation(line: 64, column: 29, scope: !3129)
!3133 = !DILocation(line: 64, column: 18, scope: !3129)
!3134 = !DILocation(line: 65, column: 24, scope: !3129)
!3135 = !DILocation(line: 65, column: 28, scope: !3129)
!3136 = !DILocation(line: 66, column: 8, scope: !3129)
!3137 = !DILocation(line: 65, column: 13, scope: !3129)
!3138 = !DILocation(line: 63, column: 22, scope: !3130)
!3139 = !DILocation(line: 63, column: 17, scope: !3130)
!3140 = distinct !{!3140, !3126, !3141}
!3141 = !DILocation(line: 67, column: 3, scope: !3127)
!3142 = !DILocation(line: 69, column: 23, scope: !3108)
!3143 = !DILocation(line: 69, column: 17, scope: !3108)
!3144 = !DILocation(line: 73, column: 3, scope: !3108)
!3145 = !DILocation(line: 74, column: 10, scope: !3108)
!3146 = !DILocation(line: 60, column: 28, scope: !3109)
!3147 = !DILocation(line: 60, column: 21, scope: !3109)
!3148 = !DILocation(line: 60, column: 2, scope: !3110)
!3149 = distinct !{!3149, !3148, !3150}
!3150 = !DILocation(line: 75, column: 2, scope: !3110)
!3151 = !DILocation(line: 35, column: 22, scope: !3093)
!3152 = !DILocation(line: 77, column: 2, scope: !3093)
!3153 = !DILocation(line: 78, column: 1, scope: !3093)
!3154 = distinct !DISubprogram(name: "atomic_dec", scope: !3155, file: !3155, line: 141, type: !3156, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3159)
!3155 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic_builtin.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3156 = !DISubroutineType(types: !3157)
!3157 = !{!3158, !102}
!3158 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_val_t", file: !104, line: 23, baseType: !103)
!3159 = !{!3160}
!3160 = !DILocalVariable(name: "target", arg: 1, scope: !3154, file: !3155, line: 141, type: !102)
!3161 = !DILocation(line: 0, scope: !3154)
!3162 = !DILocation(line: 143, column: 9, scope: !3154)
!3163 = !DILocation(line: 143, column: 2, scope: !3154)
!3164 = distinct !DISubprogram(name: "atomic_sub", scope: !3155, file: !3155, line: 105, type: !3165, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3167)
!3165 = !DISubroutineType(types: !3166)
!3166 = !{!3158, !102, !3158}
!3167 = !{!3168, !3169}
!3168 = !DILocalVariable(name: "target", arg: 1, scope: !3164, file: !3155, line: 105, type: !102)
!3169 = !DILocalVariable(name: "value", arg: 2, scope: !3164, file: !3155, line: 105, type: !3158)
!3170 = !DILocation(line: 0, scope: !3164)
!3171 = !DILocation(line: 107, column: 9, scope: !3164)
!3172 = !DILocation(line: 107, column: 2, scope: !3164)
!3173 = distinct !DISubprogram(name: "main", scope: !125, file: !125, line: 80, type: !2982, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3174)
!3174 = !{!3175, !3176, !3177, !3178, !3179}
!3175 = !DILocalVariable(name: "start_time", scope: !3173, file: !125, line: 82, type: !118)
!3176 = !DILocalVariable(name: "stop_time", scope: !3173, file: !125, line: 82, type: !118)
!3177 = !DILocalVariable(name: "cycles_spent", scope: !3173, file: !125, line: 82, type: !118)
!3178 = !DILocalVariable(name: "nanoseconds_spent", scope: !3173, file: !125, line: 82, type: !118)
!3179 = !DILocalVariable(name: "i", scope: !3173, file: !125, line: 83, type: !119)
!3180 = !DILocation(line: 85, column: 2, scope: !3173)
!3181 = !DILocation(line: 89, column: 15, scope: !3173)
!3182 = !DILocation(line: 0, scope: !3173)
!3183 = !DILocation(line: 91, column: 2, scope: !3184)
!3184 = distinct !DILexicalBlock(scope: !3173, file: !125, line: 91, column: 2)
!3185 = !DILocation(line: 99, column: 9, scope: !3173)
!3186 = !DILocation(line: 99, column: 2, scope: !3173)
!3187 = !DILocation(line: 92, column: 20, scope: !3188)
!3188 = distinct !DILexicalBlock(scope: !3189, file: !125, line: 91, column: 36)
!3189 = distinct !DILexicalBlock(scope: !3184, file: !125, line: 91, column: 2)
!3190 = !DILocation(line: 92, column: 32, scope: !3188)
!3191 = !DILocation(line: 94, column: 37, scope: !3188)
!3192 = !DILocation(line: 92, column: 3, scope: !3188)
!3193 = !DILocation(line: 91, column: 32, scope: !3189)
!3194 = !DILocation(line: 91, column: 16, scope: !3189)
!3195 = distinct !{!3195, !3183, !3196}
!3196 = !DILocation(line: 96, column: 2, scope: !3184)
!3197 = !DILocation(line: 100, column: 3, scope: !3198)
!3198 = distinct !DILexicalBlock(scope: !3173, file: !125, line: 99, column: 18)
!3199 = distinct !{!3199, !3186, !3200}
!3200 = !DILocation(line: 101, column: 2, scope: !3173)
!3201 = !DILocation(line: 104, column: 14, scope: !3173)
!3202 = !DILocation(line: 109, column: 2, scope: !3203)
!3203 = distinct !DILexicalBlock(scope: !3173, file: !125, line: 109, column: 2)
!3204 = !DILocation(line: 110, column: 56, scope: !3205)
!3205 = distinct !DILexicalBlock(scope: !3206, file: !125, line: 109, column: 36)
!3206 = distinct !DILexicalBlock(scope: !3203, file: !125, line: 109, column: 2)
!3207 = !DILocation(line: 110, column: 3, scope: !3205)
!3208 = !DILocation(line: 109, column: 32, scope: !3206)
!3209 = !DILocation(line: 109, column: 16, scope: !3206)
!3210 = distinct !{!3210, !3202, !3211}
!3211 = !DILocation(line: 111, column: 2, scope: !3203)
!3212 = !DILocation(line: 106, column: 27, scope: !3173)
!3213 = !DILocation(line: 107, column: 52, scope: !3173)
!3214 = !DILocation(line: 107, column: 32, scope: !3173)
!3215 = !DILocation(line: 107, column: 22, scope: !3173)
!3216 = !DILocation(line: 114, column: 45, scope: !3173)
!3217 = !DILocation(line: 113, column: 2, scope: !3173)
!3218 = !DILocation(line: 115, column: 1, scope: !3173)
!3219 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !245, file: !245, line: 1675, type: !3220, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2048)
!3220 = !DISubroutineType(types: !3221)
!3221 = !{!118}
!3222 = !DILocation(line: 1677, column: 9, scope: !3219)
!3223 = !DILocation(line: 1677, column: 2, scope: !3219)
!3224 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3225, file: !3225, line: 403, type: !3226, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3228)
!3225 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3226 = !DISubroutineType(types: !3227)
!3227 = !{!120, !120}
!3228 = !{!3229}
!3229 = !DILocalVariable(name: "t", arg: 1, scope: !3224, file: !3225, line: 403, type: !120)
!3230 = !DILocation(line: 0, scope: !3224)
!3231 = !DILocation(line: 406, column: 2, scope: !3224)
!3232 = distinct !DISubprogram(name: "k_thread_create", scope: !3233, file: !3233, line: 24, type: !3234, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3244)
!3233 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pi")
!3234 = !DISubroutineType(types: !3235)
!3235 = !{!3236, !3237, !3238, !239, !108, !113, !113, !113, !119, !118, !3240}
!3236 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !143, line: 347, baseType: !3237)
!3237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !142, size: 32)
!3238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3239, size: 32)
!3239 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !109, line: 44, baseType: !127)
!3240 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !115, line: 67, baseType: !3241)
!3241 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !115, line: 65, size: 64, elements: !3242)
!3242 = !{!3243}
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !3241, file: !115, line: 66, baseType: !114, size: 64)
!3244 = !{!3245, !3246, !3247, !3248, !3249, !3250, !3251, !3252, !3253, !3254}
!3245 = !DILocalVariable(name: "new_thread", arg: 1, scope: !3232, file: !3233, line: 24, type: !3237)
!3246 = !DILocalVariable(name: "stack", arg: 2, scope: !3232, file: !3233, line: 24, type: !3238)
!3247 = !DILocalVariable(name: "stack_size", arg: 3, scope: !3232, file: !3233, line: 24, type: !239)
!3248 = !DILocalVariable(name: "entry", arg: 4, scope: !3232, file: !3233, line: 24, type: !108)
!3249 = !DILocalVariable(name: "p1", arg: 5, scope: !3232, file: !3233, line: 24, type: !113)
!3250 = !DILocalVariable(name: "p2", arg: 6, scope: !3232, file: !3233, line: 24, type: !113)
!3251 = !DILocalVariable(name: "p3", arg: 7, scope: !3232, file: !3233, line: 24, type: !113)
!3252 = !DILocalVariable(name: "prio", arg: 8, scope: !3232, file: !3233, line: 24, type: !119)
!3253 = !DILocalVariable(name: "options", arg: 9, scope: !3232, file: !3233, line: 24, type: !118)
!3254 = !DILocalVariable(name: "delay", arg: 10, scope: !3232, file: !3233, line: 24, type: !3240)
!3255 = !DILocation(line: 0, scope: !3232)
!3256 = !DILocation(line: 49, column: 2, scope: !3257)
!3257 = distinct !DILexicalBlock(scope: !3232, file: !3233, line: 49, column: 2)
!3258 = !{i64 2154156400}
!3259 = !DILocation(line: 50, column: 9, scope: !3232)
!3260 = !DILocation(line: 50, column: 2, scope: !3232)
!3261 = distinct !DISubprogram(name: "k_sleep", scope: !3233, file: !3233, line: 91, type: !3262, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3264)
!3262 = !DISubroutineType(types: !3263)
!3263 = !{!742, !3240}
!3264 = !{!3265}
!3265 = !DILocalVariable(name: "timeout", arg: 1, scope: !3261, file: !3233, line: 91, type: !3240)
!3266 = !DILocation(line: 0, scope: !3261)
!3267 = !DILocation(line: 99, column: 2, scope: !3268)
!3268 = distinct !DILexicalBlock(scope: !3261, file: !3233, line: 99, column: 2)
!3269 = !{i64 2154156604}
!3270 = !DILocation(line: 100, column: 9, scope: !3261)
!3271 = !DILocation(line: 100, column: 2, scope: !3261)
!3272 = distinct !DISubprogram(name: "k_cyc_to_ns_floor64", scope: !3225, file: !3225, line: 935, type: !3226, scopeLine: 936, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3273)
!3273 = !{!3274}
!3274 = !DILocalVariable(name: "t", arg: 1, scope: !3272, file: !3225, line: 935, type: !120)
!3275 = !DILocation(line: 0, scope: !3272)
!3276 = !DILocalVariable(name: "t", arg: 1, scope: !3277, file: !3225, line: 102, type: !120)
!3277 = distinct !DISubprogram(name: "z_tmcvt", scope: !3225, file: !3225, line: 102, type: !3278, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3280)
!3278 = !DISubroutineType(types: !3279)
!3279 = !{!120, !120, !118, !118, !345, !345, !345, !345}
!3280 = !{!3276, !3281, !3282, !3283, !3284, !3285, !3286, !3287, !3288, !3289, !3290}
!3281 = !DILocalVariable(name: "from_hz", arg: 2, scope: !3277, file: !3225, line: 102, type: !118)
!3282 = !DILocalVariable(name: "to_hz", arg: 3, scope: !3277, file: !3225, line: 103, type: !118)
!3283 = !DILocalVariable(name: "const_hz", arg: 4, scope: !3277, file: !3225, line: 103, type: !345)
!3284 = !DILocalVariable(name: "result32", arg: 5, scope: !3277, file: !3225, line: 104, type: !345)
!3285 = !DILocalVariable(name: "round_up", arg: 6, scope: !3277, file: !3225, line: 104, type: !345)
!3286 = !DILocalVariable(name: "round_off", arg: 7, scope: !3277, file: !3225, line: 105, type: !345)
!3287 = !DILocalVariable(name: "mul_ratio", scope: !3277, file: !3225, line: 107, type: !345)
!3288 = !DILocalVariable(name: "div_ratio", scope: !3277, file: !3225, line: 109, type: !345)
!3289 = !DILocalVariable(name: "off", scope: !3277, file: !3225, line: 116, type: !120)
!3290 = !DILocalVariable(name: "rdivisor", scope: !3291, file: !3225, line: 119, type: !118)
!3291 = distinct !DILexicalBlock(scope: !3292, file: !3225, line: 118, column: 18)
!3292 = distinct !DILexicalBlock(scope: !3277, file: !3225, line: 118, column: 6)
!3293 = !DILocation(line: 0, scope: !3277, inlinedAt: !3294)
!3294 = distinct !DILocation(line: 938, column: 9, scope: !3272)
!3295 = !DILocation(line: 161, column: 14, scope: !3296, inlinedAt: !3294)
!3296 = distinct !DILexicalBlock(scope: !3297, file: !3225, line: 157, column: 10)
!3297 = distinct !DILexicalBlock(scope: !3298, file: !3225, line: 150, column: 14)
!3298 = distinct !DILexicalBlock(scope: !3299, file: !3225, line: 148, column: 7)
!3299 = distinct !DILexicalBlock(scope: !3300, file: !3225, line: 147, column: 9)
!3300 = distinct !DILexicalBlock(scope: !3301, file: !3225, line: 141, column: 13)
!3301 = distinct !DILexicalBlock(scope: !3277, file: !3225, line: 134, column: 6)
!3302 = !DILocation(line: 161, column: 25, scope: !3296, inlinedAt: !3294)
!3303 = !DILocation(line: 161, column: 50, scope: !3296, inlinedAt: !3294)
!3304 = !DILocation(line: 161, column: 65, scope: !3296, inlinedAt: !3294)
!3305 = !DILocation(line: 161, column: 33, scope: !3296, inlinedAt: !3294)
!3306 = !DILocation(line: 938, column: 2, scope: !3272)
!3307 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !3308, file: !3308, line: 24, type: !3220, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2048)
!3308 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3309 = !DILocation(line: 26, column: 9, scope: !3307)
!3310 = !DILocation(line: 26, column: 2, scope: !3307)
!3311 = distinct !DISubprogram(name: "cbvprintf_package", scope: !286, file: !286, line: 233, type: !3312, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !3321)
!3312 = !DISubroutineType(types: !3313)
!3313 = !{!119, !113, !239, !118, !278, !3314}
!3314 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3315, line: 99, baseType: !3316)
!3315 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3316 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3315, line: 40, baseType: !3317)
!3317 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !286, baseType: !3318)
!3318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3319)
!3319 = !{!3320}
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3318, file: !286, line: 18, baseType: !113, size: 32)
!3321 = !{!3322, !3323, !3324, !3325, !3326, !3327, !3328, !3329, !3330, !3331, !3333, !3334, !3335, !3336, !3337, !3338, !3339, !3340, !3341, !3342, !3343, !3344, !3357, !3366, !3369, !3370, !3373, !3376, !3379, !3382, !3388}
!3322 = !DILocalVariable(name: "packaged", arg: 1, scope: !3311, file: !286, line: 233, type: !113)
!3323 = !DILocalVariable(name: "len", arg: 2, scope: !3311, file: !286, line: 233, type: !239)
!3324 = !DILocalVariable(name: "flags", arg: 3, scope: !3311, file: !286, line: 233, type: !118)
!3325 = !DILocalVariable(name: "fmt", arg: 4, scope: !3311, file: !286, line: 234, type: !278)
!3326 = !DILocalVariable(name: "ap", arg: 5, scope: !3311, file: !286, line: 234, type: !3314)
!3327 = !DILocalVariable(name: "buf0", scope: !3311, file: !286, line: 247, type: !284)
!3328 = !DILocalVariable(name: "buf", scope: !3311, file: !286, line: 248, type: !284)
!3329 = !DILocalVariable(name: "size", scope: !3311, file: !286, line: 249, type: !32)
!3330 = !DILocalVariable(name: "align", scope: !3311, file: !286, line: 250, type: !32)
!3331 = !DILocalVariable(name: "str_ptr_pos", scope: !3311, file: !286, line: 251, type: !3332)
!3332 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 128, elements: !267)
!3333 = !DILocalVariable(name: "str_ptr_arg", scope: !3311, file: !286, line: 252, type: !3332)
!3334 = !DILocalVariable(name: "s_idx", scope: !3311, file: !286, line: 253, type: !32)
!3335 = !DILocalVariable(name: "s_rw_cnt", scope: !3311, file: !286, line: 254, type: !32)
!3336 = !DILocalVariable(name: "s_ro_cnt", scope: !3311, file: !286, line: 255, type: !32)
!3337 = !DILocalVariable(name: "arg_idx", scope: !3311, file: !286, line: 256, type: !119)
!3338 = !DILocalVariable(name: "i", scope: !3311, file: !286, line: 257, type: !32)
!3339 = !DILocalVariable(name: "s", scope: !3311, file: !286, line: 258, type: !278)
!3340 = !DILocalVariable(name: "parsing", scope: !3311, file: !286, line: 259, type: !345)
!3341 = !DILocalVariable(name: "rws_pos_en", scope: !3311, file: !286, line: 263, type: !345)
!3342 = !DILocalVariable(name: "fros_cnt", scope: !3311, file: !286, line: 268, type: !119)
!3343 = !DILocalVariable(name: "is_str_arg", scope: !3311, file: !286, line: 269, type: !345)
!3344 = !DILocalVariable(name: "pkg_hdr", scope: !3311, file: !286, line: 270, type: !3345)
!3345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3346, size: 32)
!3346 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !3347, line: 78, size: 32, elements: !3348)
!3347 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3348 = !{!3349, !3356}
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !3346, file: !3347, line: 80, baseType: !3350, size: 32)
!3350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !3347, line: 45, size: 32, elements: !3351)
!3351 = !{!3352, !3353, !3354, !3355}
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3350, file: !3347, line: 47, baseType: !185, size: 8)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !3350, file: !3347, line: 50, baseType: !185, size: 8, offset: 8)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !3350, file: !3347, line: 53, baseType: !185, size: 8, offset: 16)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !3350, file: !3347, line: 56, baseType: !185, size: 8, offset: 24)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !3346, file: !3347, line: 82, baseType: !113, size: 32)
!3357 = !DILocalVariable(name: "v", scope: !3358, file: !286, line: 567, type: !3362)
!3358 = distinct !DILexicalBlock(scope: !3359, file: !286, line: 562, column: 14)
!3359 = distinct !DILexicalBlock(scope: !3360, file: !286, line: 481, column: 18)
!3360 = distinct !DILexicalBlock(scope: !3361, file: !286, line: 466, column: 3)
!3361 = distinct !DILexicalBlock(scope: !3311, file: !286, line: 343, column: 15)
!3362 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3311, file: !286, line: 567, size: 64, elements: !3363)
!3363 = !{!3364, !3365}
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !3362, file: !286, line: 567, baseType: !276, size: 64)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !3362, file: !286, line: 567, baseType: !274, size: 64)
!3366 = !DILocalVariable(name: "is_ro", scope: !3367, file: !286, line: 620, type: !345)
!3367 = distinct !DILexicalBlock(scope: !3368, file: !286, line: 613, column: 19)
!3368 = distinct !DILexicalBlock(scope: !3361, file: !286, line: 613, column: 7)
!3369 = !DILocalVariable(name: "do_ro", scope: !3367, file: !286, line: 621, type: !345)
!3370 = !DILocalVariable(name: "s_ptr_idx", scope: !3371, file: !286, line: 626, type: !118)
!3371 = distinct !DILexicalBlock(scope: !3372, file: !286, line: 625, column: 11)
!3372 = distinct !DILexicalBlock(scope: !3367, file: !286, line: 623, column: 8)
!3373 = !DILocalVariable(name: "v", scope: !3374, file: !286, line: 684, type: !119)
!3374 = distinct !DILexicalBlock(scope: !3375, file: !286, line: 683, column: 35)
!3375 = distinct !DILexicalBlock(scope: !3368, file: !286, line: 683, column: 14)
!3376 = !DILocalVariable(name: "v", scope: !3377, file: !286, line: 691, type: !105)
!3377 = distinct !DILexicalBlock(scope: !3378, file: !286, line: 690, column: 36)
!3378 = distinct !DILexicalBlock(scope: !3375, file: !286, line: 690, column: 14)
!3379 = !DILocalVariable(name: "v", scope: !3380, file: !286, line: 698, type: !117)
!3380 = distinct !DILexicalBlock(scope: !3381, file: !286, line: 697, column: 41)
!3381 = distinct !DILexicalBlock(scope: !3378, file: !286, line: 697, column: 14)
!3382 = !DILocalVariable(name: "pos", scope: !3383, file: !286, line: 762, type: !185)
!3383 = distinct !DILexicalBlock(scope: !3384, file: !286, line: 757, column: 31)
!3384 = distinct !DILexicalBlock(scope: !3385, file: !286, line: 757, column: 3)
!3385 = distinct !DILexicalBlock(scope: !3386, file: !286, line: 757, column: 3)
!3386 = distinct !DILexicalBlock(scope: !3387, file: !286, line: 756, column: 16)
!3387 = distinct !DILexicalBlock(scope: !3311, file: !286, line: 756, column: 6)
!3388 = !DILabel(scope: !3367, name: "process_string", file: !286, line: 615)
!3389 = !DILocation(line: 0, scope: !3311)
!3390 = !DILocation(line: 251, column: 2, scope: !3311)
!3391 = !DILocation(line: 251, column: 10, scope: !3311)
!3392 = !DILocation(line: 252, column: 2, scope: !3311)
!3393 = !DILocation(line: 252, column: 10, scope: !3311)
!3394 = !DILocation(line: 263, column: 29, scope: !3311)
!3395 = !DILocation(line: 263, column: 21, scope: !3311)
!3396 = !DILocation(line: 268, column: 21, scope: !3311)
!3397 = !DILocation(line: 268, column: 19, scope: !3311)
!3398 = !DILocation(line: 273, column: 6, scope: !3399)
!3399 = distinct !DILexicalBlock(scope: !3311, file: !286, line: 273, column: 6)
!3400 = !DILocation(line: 273, column: 26, scope: !3399)
!3401 = !DILocation(line: 273, column: 6, scope: !3311)
!3402 = !DILocation(line: 297, column: 6, scope: !3311)
!3403 = !DILocation(line: 305, column: 11, scope: !3404)
!3404 = distinct !DILexicalBlock(scope: !3311, file: !286, line: 305, column: 6)
!3405 = !DILocation(line: 305, column: 6, scope: !3311)
!3406 = !DILocation(line: 327, column: 19, scope: !3407)
!3407 = distinct !DILexicalBlock(scope: !3311, file: !286, line: 327, column: 6)
!3408 = !DILocation(line: 327, column: 22, scope: !3407)
!3409 = !DILocation(line: 327, column: 33, scope: !3407)
!3410 = !DILocation(line: 327, column: 50, scope: !3407)
!3411 = !DILocation(line: 327, column: 6, scope: !3311)
!3412 = !DILocation(line: 338, column: 9, scope: !3311)
!3413 = !DILocation(line: 341, column: 2, scope: !3311)
!3414 = !DILocation(line: 472, column: 8, scope: !3360)
!3415 = !DILocation(line: 473, column: 14, scope: !3416)
!3416 = distinct !DILexicalBlock(scope: !3417, file: !286, line: 473, column: 9)
!3417 = distinct !DILexicalBlock(scope: !3418, file: !286, line: 472, column: 18)
!3418 = distinct !DILexicalBlock(scope: !3360, file: !286, line: 472, column: 8)
!3419 = !DILocation(line: 473, column: 9, scope: !3417)
!3420 = !DILocation(line: 479, column: 5, scope: !3417)
!3421 = !DILocation(line: 468, column: 9, scope: !3422)
!3422 = distinct !DILexicalBlock(scope: !3360, file: !286, line: 468, column: 8)
!3423 = !DILocation(line: 468, column: 8, scope: !3422)
!3424 = !DILocation(line: 468, column: 15, scope: !3422)
!3425 = !DILocation(line: 468, column: 8, scope: !3360)
!3426 = distinct !{!3426, !3427, !3428}
!3427 = !DILocation(line: 343, column: 2, scope: !3311)
!3428 = !DILocation(line: 712, column: 2, scope: !3311)
!3429 = !DILocation(line: 481, column: 4, scope: !3360)
!3430 = !DILocation(line: 484, column: 12, scope: !3359)
!3431 = !DILocation(line: 485, column: 5, scope: !3359)
!3432 = !DILocation(line: 505, column: 5, scope: !3359)
!3433 = !DILocation(line: 518, column: 5, scope: !3359)
!3434 = !DILocation(line: 523, column: 5, scope: !3359)
!3435 = !DILocation(line: 532, column: 9, scope: !3436)
!3436 = distinct !DILexicalBlock(scope: !3359, file: !286, line: 532, column: 9)
!3437 = !DILocation(line: 532, column: 17, scope: !3436)
!3438 = !DILocation(line: 532, column: 9, scope: !3359)
!3439 = !DILocation(line: 533, column: 10, scope: !3440)
!3440 = distinct !DILexicalBlock(scope: !3441, file: !286, line: 533, column: 10)
!3441 = distinct !DILexicalBlock(scope: !3436, file: !286, line: 532, column: 25)
!3442 = !DILocation(line: 533, column: 18, scope: !3440)
!3443 = !DILocation(line: 0, scope: !3444)
!3444 = distinct !DILexicalBlock(scope: !3358, file: !286, line: 569, column: 9)
!3445 = !DILocation(line: 0, scope: !3358)
!3446 = !DILocation(line: 579, column: 20, scope: !3358)
!3447 = !DILocation(line: 579, column: 11, scope: !3358)
!3448 = !DILocation(line: 580, column: 9, scope: !3358)
!3449 = !DILocation(line: 582, column: 21, scope: !3450)
!3450 = distinct !DILexicalBlock(scope: !3451, file: !286, line: 582, column: 10)
!3451 = distinct !DILexicalBlock(scope: !3452, file: !286, line: 580, column: 23)
!3452 = distinct !DILexicalBlock(scope: !3358, file: !286, line: 580, column: 9)
!3453 = !DILocation(line: 582, column: 28, scope: !3450)
!3454 = !DILocation(line: 582, column: 10, scope: !3451)
!3455 = !DILocation(line: 0, scope: !3456)
!3456 = distinct !DILexicalBlock(scope: !3457, file: !286, line: 587, column: 17)
!3457 = distinct !DILexicalBlock(scope: !3451, file: !286, line: 585, column: 10)
!3458 = !DILocation(line: 593, column: 9, scope: !3358)
!3459 = !DILocation(line: 600, column: 5, scope: !3359)
!3460 = !DILocation(line: 605, column: 18, scope: !3361)
!3461 = !DILocation(line: 605, column: 9, scope: !3361)
!3462 = !DILocation(line: 608, column: 20, scope: !3463)
!3463 = distinct !DILexicalBlock(scope: !3361, file: !286, line: 608, column: 7)
!3464 = !DILocation(line: 608, column: 23, scope: !3463)
!3465 = !DILocation(line: 608, column: 34, scope: !3463)
!3466 = !DILocation(line: 608, column: 41, scope: !3463)
!3467 = !DILocation(line: 608, column: 7, scope: !3361)
!3468 = !DILocation(line: 613, column: 7, scope: !3361)
!3469 = !DILocation(line: 614, column: 8, scope: !3367)
!3470 = !DILocation(line: 614, column: 4, scope: !3367)
!3471 = !DILocation(line: 256, column: 6, scope: !3311)
!3472 = !DILocation(line: 254, column: 15, scope: !3311)
!3473 = !DILocation(line: 320, column: 7, scope: !3474)
!3474 = distinct !DILexicalBlock(scope: !3404, file: !286, line: 305, column: 20)
!3475 = !DILocation(line: 615, column: 1, scope: !3367)
!3476 = !DILocation(line: 616, column: 8, scope: !3367)
!3477 = !DILocation(line: 617, column: 5, scope: !3478)
!3478 = distinct !DILexicalBlock(scope: !3479, file: !286, line: 616, column: 22)
!3479 = distinct !DILexicalBlock(scope: !3367, file: !286, line: 616, column: 8)
!3480 = !DILocation(line: 617, column: 25, scope: !3478)
!3481 = !DILocation(line: 618, column: 4, scope: !3478)
!3482 = !DILocation(line: 620, column: 26, scope: !3367)
!3483 = !DILocation(line: 620, column: 29, scope: !3367)
!3484 = !DILocation(line: 620, column: 17, scope: !3367)
!3485 = !DILocation(line: 620, column: 43, scope: !3367)
!3486 = !DILocation(line: 0, scope: !3367)
!3487 = !DILocation(line: 623, column: 14, scope: !3372)
!3488 = !DILocation(line: 626, column: 26, scope: !3371)
!3489 = !DILocation(line: 626, column: 37, scope: !3371)
!3490 = !DILocation(line: 0, scope: !3371)
!3491 = !DILocation(line: 634, column: 15, scope: !3492)
!3492 = distinct !DILexicalBlock(scope: !3371, file: !286, line: 634, column: 9)
!3493 = !DILocation(line: 635, column: 6, scope: !3494)
!3494 = distinct !DILexicalBlock(scope: !3495, file: !286, line: 635, column: 6)
!3495 = distinct !DILexicalBlock(scope: !3496, file: !286, line: 635, column: 6)
!3496 = distinct !DILexicalBlock(scope: !3497, file: !286, line: 635, column: 6)
!3497 = distinct !DILexicalBlock(scope: !3492, file: !286, line: 634, column: 44)
!3498 = !DILocation(line: 639, column: 15, scope: !3499)
!3499 = distinct !DILexicalBlock(scope: !3371, file: !286, line: 639, column: 9)
!3500 = !DILocation(line: 639, column: 9, scope: !3371)
!3501 = !DILocation(line: 640, column: 6, scope: !3502)
!3502 = distinct !DILexicalBlock(scope: !3503, file: !286, line: 640, column: 6)
!3503 = distinct !DILexicalBlock(scope: !3504, file: !286, line: 640, column: 6)
!3504 = distinct !DILexicalBlock(scope: !3505, file: !286, line: 640, column: 6)
!3505 = distinct !DILexicalBlock(scope: !3499, file: !286, line: 639, column: 43)
!3506 = !DILocation(line: 644, column: 9, scope: !3371)
!3507 = !DILocation(line: 649, column: 27, scope: !3508)
!3508 = distinct !DILexicalBlock(scope: !3509, file: !286, line: 644, column: 23)
!3509 = distinct !DILexicalBlock(scope: !3371, file: !286, line: 644, column: 9)
!3510 = !DILocation(line: 649, column: 6, scope: !3508)
!3511 = !DILocation(line: 649, column: 25, scope: !3508)
!3512 = !DILocation(line: 650, column: 27, scope: !3508)
!3513 = !DILocation(line: 650, column: 6, scope: !3508)
!3514 = !DILocation(line: 650, column: 25, scope: !3508)
!3515 = !DILocation(line: 651, column: 10, scope: !3508)
!3516 = !DILocation(line: 653, column: 26, scope: !3517)
!3517 = distinct !DILexicalBlock(scope: !3518, file: !286, line: 651, column: 17)
!3518 = distinct !DILexicalBlock(scope: !3508, file: !286, line: 651, column: 10)
!3519 = !DILocation(line: 654, column: 15, scope: !3517)
!3520 = !DILocation(line: 655, column: 6, scope: !3517)
!3521 = !DILocation(line: 656, column: 15, scope: !3522)
!3522 = distinct !DILexicalBlock(scope: !3518, file: !286, line: 655, column: 13)
!3523 = !DILocation(line: 658, column: 16, scope: !3509)
!3524 = !DILocation(line: 663, column: 10, scope: !3525)
!3525 = distinct !DILexicalBlock(scope: !3526, file: !286, line: 658, column: 23)
!3526 = distinct !DILexicalBlock(scope: !3509, file: !286, line: 658, column: 16)
!3527 = !DILocation(line: 664, column: 5, scope: !3525)
!3528 = !DILocation(line: 664, column: 16, scope: !3526)
!3529 = !DILocation(line: 669, column: 10, scope: !3530)
!3530 = distinct !DILexicalBlock(scope: !3531, file: !286, line: 664, column: 28)
!3531 = distinct !DILexicalBlock(scope: !3526, file: !286, line: 664, column: 16)
!3532 = !DILocation(line: 670, column: 5, scope: !3530)
!3533 = !DILocation(line: 675, column: 13, scope: !3534)
!3534 = distinct !DILexicalBlock(scope: !3531, file: !286, line: 670, column: 12)
!3535 = !DILocation(line: 675, column: 27, scope: !3534)
!3536 = !DILocation(line: 675, column: 10, scope: !3534)
!3537 = !DILocation(line: 678, column: 10, scope: !3371)
!3538 = !DILocation(line: 680, column: 8, scope: !3367)
!3539 = !DILocation(line: 683, column: 14, scope: !3368)
!3540 = !DILocation(line: 684, column: 12, scope: !3374)
!3541 = !DILocation(line: 0, scope: !3374)
!3542 = !DILocation(line: 686, column: 8, scope: !3374)
!3543 = !DILocation(line: 687, column: 5, scope: !3544)
!3544 = distinct !DILexicalBlock(scope: !3545, file: !286, line: 686, column: 22)
!3545 = distinct !DILexicalBlock(scope: !3374, file: !286, line: 686, column: 8)
!3546 = !DILocation(line: 687, column: 17, scope: !3544)
!3547 = !DILocation(line: 688, column: 4, scope: !3544)
!3548 = !DILocation(line: 698, column: 18, scope: !3380)
!3549 = !DILocation(line: 0, scope: !3380)
!3550 = !DILocation(line: 700, column: 8, scope: !3380)
!3551 = !DILocation(line: 704, column: 6, scope: !3552)
!3552 = distinct !DILexicalBlock(scope: !3553, file: !286, line: 703, column: 12)
!3553 = distinct !DILexicalBlock(scope: !3554, file: !286, line: 701, column: 9)
!3554 = distinct !DILexicalBlock(scope: !3555, file: !286, line: 700, column: 22)
!3555 = distinct !DILexicalBlock(scope: !3380, file: !286, line: 700, column: 8)
!3556 = !DILocation(line: 704, column: 24, scope: !3552)
!3557 = !DILocation(line: 706, column: 4, scope: !3554)
!3558 = !DILocation(line: 709, column: 4, scope: !3559)
!3559 = distinct !DILexicalBlock(scope: !3560, file: !286, line: 709, column: 4)
!3560 = distinct !DILexicalBlock(scope: !3561, file: !286, line: 709, column: 4)
!3561 = distinct !DILexicalBlock(scope: !3562, file: !286, line: 709, column: 4)
!3562 = distinct !DILexicalBlock(scope: !3381, file: !286, line: 708, column: 10)
!3563 = !DILocation(line: 0, scope: !3375)
!3564 = !DILocation(line: 0, scope: !3361)
!3565 = !DILocation(line: 720, column: 6, scope: !3566)
!3566 = distinct !DILexicalBlock(scope: !3311, file: !286, line: 720, column: 6)
!3567 = !DILocation(line: 720, column: 17, scope: !3566)
!3568 = !DILocation(line: 720, column: 31, scope: !3566)
!3569 = !DILocation(line: 720, column: 6, scope: !3311)
!3570 = !DILocation(line: 721, column: 3, scope: !3571)
!3571 = distinct !DILexicalBlock(scope: !3572, file: !286, line: 721, column: 3)
!3572 = distinct !DILexicalBlock(scope: !3573, file: !286, line: 721, column: 3)
!3573 = distinct !DILexicalBlock(scope: !3574, file: !286, line: 721, column: 3)
!3574 = distinct !DILexicalBlock(scope: !3566, file: !286, line: 720, column: 38)
!3575 = !DILocation(line: 729, column: 6, scope: !3311)
!3576 = !DILocation(line: 730, column: 21, scope: !3577)
!3577 = distinct !DILexicalBlock(scope: !3578, file: !286, line: 729, column: 20)
!3578 = distinct !DILexicalBlock(scope: !3311, file: !286, line: 729, column: 6)
!3579 = !DILocation(line: 730, column: 27, scope: !3577)
!3580 = !DILocation(line: 730, column: 3, scope: !3577)
!3581 = !DILocation(line: 737, column: 22, scope: !3311)
!3582 = !DILocation(line: 737, column: 20, scope: !3311)
!3583 = !DILocation(line: 0, scope: !3584)
!3584 = distinct !DILexicalBlock(scope: !3311, file: !286, line: 739, column: 6)
!3585 = !DILocation(line: 745, column: 17, scope: !3586)
!3586 = distinct !DILexicalBlock(scope: !3584, file: !286, line: 743, column: 9)
!3587 = !DILocation(line: 745, column: 25, scope: !3586)
!3588 = !DILocation(line: 746, column: 17, scope: !3586)
!3589 = !DILocation(line: 746, column: 28, scope: !3586)
!3590 = !DILocation(line: 749, column: 29, scope: !3311)
!3591 = !DILocation(line: 749, column: 16, scope: !3311)
!3592 = !DILocation(line: 749, column: 27, scope: !3311)
!3593 = !DILocation(line: 756, column: 6, scope: !3387)
!3594 = !DILocation(line: 756, column: 6, scope: !3311)
!3595 = !DILocation(line: 757, column: 3, scope: !3385)
!3596 = !DILocation(line: 758, column: 10, scope: !3597)
!3597 = distinct !DILexicalBlock(scope: !3383, file: !286, line: 758, column: 8)
!3598 = !DILocation(line: 758, column: 25, scope: !3597)
!3599 = !DILocation(line: 758, column: 8, scope: !3383)
!3600 = !DILocation(line: 0, scope: !3383)
!3601 = !DILocation(line: 765, column: 8, scope: !3602)
!3602 = distinct !DILexicalBlock(scope: !3383, file: !286, line: 765, column: 8)
!3603 = !DILocation(line: 765, column: 19, scope: !3602)
!3604 = !DILocation(line: 765, column: 23, scope: !3602)
!3605 = !DILocation(line: 765, column: 8, scope: !3383)
!3606 = !DILocation(line: 762, column: 33, scope: !3383)
!3607 = !DILocation(line: 769, column: 8, scope: !3383)
!3608 = !DILocation(line: 769, column: 11, scope: !3383)
!3609 = !DILocation(line: 757, column: 27, scope: !3384)
!3610 = !DILocation(line: 757, column: 17, scope: !3384)
!3611 = distinct !{!3611, !3595, !3612}
!3612 = !DILocation(line: 770, column: 3, scope: !3385)
!3613 = !DILocation(line: 774, column: 16, scope: !3614)
!3614 = distinct !DILexicalBlock(scope: !3615, file: !286, line: 774, column: 2)
!3615 = distinct !DILexicalBlock(scope: !3311, file: !286, line: 774, column: 2)
!3616 = !DILocation(line: 774, column: 2, scope: !3615)
!3617 = !DILocation(line: 776, column: 16, scope: !3618)
!3618 = distinct !DILexicalBlock(scope: !3619, file: !286, line: 776, column: 7)
!3619 = distinct !DILexicalBlock(scope: !3614, file: !286, line: 774, column: 30)
!3620 = !DILocation(line: 776, column: 19, scope: !3618)
!3621 = !DILocation(line: 776, column: 34, scope: !3618)
!3622 = !DILocation(line: 776, column: 7, scope: !3619)
!3623 = !DILocation(line: 780, column: 7, scope: !3619)
!3624 = !DILocation(line: 782, column: 13, scope: !3625)
!3625 = distinct !DILexicalBlock(scope: !3626, file: !286, line: 780, column: 19)
!3626 = distinct !DILexicalBlock(scope: !3619, file: !286, line: 780, column: 7)
!3627 = !DILocation(line: 782, column: 8, scope: !3625)
!3628 = !DILocation(line: 782, column: 11, scope: !3625)
!3629 = !DILocation(line: 783, column: 3, scope: !3625)
!3630 = !DILocation(line: 785, column: 26, scope: !3631)
!3631 = distinct !DILexicalBlock(scope: !3626, file: !286, line: 783, column: 10)
!3632 = !DILocation(line: 785, column: 41, scope: !3631)
!3633 = !DILocation(line: 785, column: 24, scope: !3631)
!3634 = !DILocation(line: 785, column: 8, scope: !3631)
!3635 = !DILocation(line: 787, column: 52, scope: !3631)
!3636 = !DILocation(line: 789, column: 11, scope: !3631)
!3637 = !DILocation(line: 789, column: 21, scope: !3631)
!3638 = !DILocation(line: 0, scope: !3626)
!3639 = !DILocation(line: 793, column: 7, scope: !3640)
!3640 = distinct !DILexicalBlock(scope: !3619, file: !286, line: 793, column: 7)
!3641 = !DILocation(line: 793, column: 18, scope: !3640)
!3642 = !DILocation(line: 793, column: 22, scope: !3640)
!3643 = !DILocation(line: 793, column: 29, scope: !3640)
!3644 = !DILocation(line: 793, column: 7, scope: !3619)
!3645 = !DILocation(line: 797, column: 12, scope: !3619)
!3646 = !DILocation(line: 797, column: 7, scope: !3619)
!3647 = !DILocation(line: 797, column: 10, scope: !3619)
!3648 = !DILocation(line: 799, column: 3, scope: !3619)
!3649 = !DILocation(line: 800, column: 7, scope: !3619)
!3650 = !DILocation(line: 801, column: 2, scope: !3619)
!3651 = !DILocation(line: 338, column: 4, scope: !3311)
!3652 = !DILocation(line: 774, column: 26, scope: !3614)
!3653 = distinct !{!3653, !3616, !3654}
!3654 = !DILocation(line: 801, column: 2, scope: !3615)
!3655 = !DILocation(line: 808, column: 9, scope: !3311)
!3656 = !DILocation(line: 808, column: 2, scope: !3311)
!3657 = !DILocation(line: 813, column: 1, scope: !3311)
!3658 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !286, file: !286, line: 33, type: !3659, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !3661)
!3659 = !DISubroutineType(types: !3660)
!3660 = !{!345, !278}
!3661 = !{!3662}
!3662 = !DILocalVariable(name: "addr", arg: 1, scope: !3658, file: !286, line: 33, type: !278)
!3663 = !DILocation(line: 0, scope: !3658)
!3664 = !DILocation(line: 41, column: 9, scope: !3658)
!3665 = !DILocation(line: 41, column: 2, scope: !3658)
!3666 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !3667, file: !3667, line: 24, type: !3668, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !3670)
!3667 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3668 = !DISubroutineType(types: !3669)
!3669 = !{!345, !13}
!3670 = !{!3671}
!3671 = !DILocalVariable(name: "addr", arg: 1, scope: !3666, file: !3667, line: 24, type: !13)
!3672 = !DILocation(line: 0, scope: !3666)
!3673 = !DILocation(line: 49, column: 30, scope: !3666)
!3674 = !DILocation(line: 49, column: 57, scope: !3666)
!3675 = !DILocation(line: 49, column: 2, scope: !3666)
!3676 = distinct !DISubprogram(name: "cbprintf_package", scope: !286, file: !286, line: 815, type: !3677, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !3679)
!3677 = !DISubroutineType(types: !3678)
!3678 = !{!119, !113, !239, !118, !278, null}
!3679 = !{!3680, !3681, !3682, !3683, !3684, !3685}
!3680 = !DILocalVariable(name: "packaged", arg: 1, scope: !3676, file: !286, line: 815, type: !113)
!3681 = !DILocalVariable(name: "len", arg: 2, scope: !3676, file: !286, line: 815, type: !239)
!3682 = !DILocalVariable(name: "flags", arg: 3, scope: !3676, file: !286, line: 815, type: !118)
!3683 = !DILocalVariable(name: "format", arg: 4, scope: !3676, file: !286, line: 816, type: !278)
!3684 = !DILocalVariable(name: "ap", scope: !3676, file: !286, line: 818, type: !3314)
!3685 = !DILocalVariable(name: "ret", scope: !3676, file: !286, line: 819, type: !119)
!3686 = !DILocation(line: 0, scope: !3676)
!3687 = !DILocation(line: 818, column: 2, scope: !3676)
!3688 = !DILocation(line: 818, column: 10, scope: !3676)
!3689 = !DILocation(line: 821, column: 2, scope: !3676)
!3690 = !DILocation(line: 822, column: 8, scope: !3676)
!3691 = !DILocation(line: 823, column: 2, scope: !3676)
!3692 = !DILocation(line: 825, column: 1, scope: !3676)
!3693 = !DILocation(line: 824, column: 2, scope: !3676)
!3694 = distinct !DISubprogram(name: "cbpprintf_external", scope: !286, file: !286, line: 827, type: !3695, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !3705)
!3695 = !DISubroutineType(types: !3696)
!3696 = !{!119, !3697, !3701, !113, !113}
!3697 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3347, line: 297, baseType: !3698)
!3698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3699, size: 32)
!3699 = !DISubroutineType(types: !3700)
!3700 = !{!119, null}
!3701 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !3347, line: 328, baseType: !3702)
!3702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3703, size: 32)
!3703 = !DISubroutineType(types: !3704)
!3704 = !{!119, !3697, !113, !278, !3314}
!3705 = !{!3706, !3707, !3708, !3709, !3710, !3711, !3717, !3718, !3719, !3720, !3721, !3722, !3723, !3724}
!3706 = !DILocalVariable(name: "out", arg: 1, scope: !3694, file: !286, line: 827, type: !3697)
!3707 = !DILocalVariable(name: "formatter", arg: 2, scope: !3694, file: !286, line: 828, type: !3701)
!3708 = !DILocalVariable(name: "ctx", arg: 3, scope: !3694, file: !286, line: 829, type: !113)
!3709 = !DILocalVariable(name: "packaged", arg: 4, scope: !3694, file: !286, line: 829, type: !113)
!3710 = !DILocalVariable(name: "buf", scope: !3694, file: !286, line: 831, type: !284)
!3711 = !DILocalVariable(name: "hdr", scope: !3694, file: !286, line: 832, type: !3712)
!3712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3713, size: 32)
!3713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !3347, line: 96, size: 64, elements: !3714)
!3714 = !{!3715, !3716}
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !3713, file: !3347, line: 98, baseType: !3346, size: 32)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !3713, file: !3347, line: 101, baseType: !106, size: 32, offset: 32)
!3717 = !DILocalVariable(name: "s", scope: !3694, file: !286, line: 833, type: !106)
!3718 = !DILocalVariable(name: "ps", scope: !3694, file: !286, line: 833, type: !283)
!3719 = !DILocalVariable(name: "i", scope: !3694, file: !286, line: 834, type: !32)
!3720 = !DILocalVariable(name: "args_size", scope: !3694, file: !286, line: 834, type: !32)
!3721 = !DILocalVariable(name: "s_nbr", scope: !3694, file: !286, line: 834, type: !32)
!3722 = !DILocalVariable(name: "ros_nbr", scope: !3694, file: !286, line: 834, type: !32)
!3723 = !DILocalVariable(name: "rws_nbr", scope: !3694, file: !286, line: 834, type: !32)
!3724 = !DILocalVariable(name: "s_idx", scope: !3694, file: !286, line: 834, type: !32)
!3725 = !DILocation(line: 0, scope: !3694)
!3726 = !DILocation(line: 836, column: 10, scope: !3727)
!3727 = distinct !DILexicalBlock(scope: !3694, file: !286, line: 836, column: 6)
!3728 = !DILocation(line: 836, column: 6, scope: !3694)
!3729 = !DILocation(line: 842, column: 28, scope: !3694)
!3730 = !DILocation(line: 842, column: 14, scope: !3694)
!3731 = !DILocation(line: 852, column: 16, scope: !3732)
!3732 = distinct !DILexicalBlock(scope: !3733, file: !286, line: 852, column: 2)
!3733 = distinct !DILexicalBlock(scope: !3694, file: !286, line: 852, column: 2)
!3734 = !DILocation(line: 852, column: 2, scope: !3733)
!3735 = !DILocation(line: 841, column: 28, scope: !3694)
!3736 = !DILocation(line: 841, column: 14, scope: !3694)
!3737 = !DILocation(line: 841, column: 32, scope: !3694)
!3738 = !DILocation(line: 847, column: 19, scope: !3694)
!3739 = !DILocation(line: 843, column: 28, scope: !3694)
!3740 = !DILocation(line: 843, column: 14, scope: !3694)
!3741 = !DILocation(line: 847, column: 31, scope: !3694)
!3742 = !DILocation(line: 844, column: 28, scope: !3694)
!3743 = !DILocation(line: 844, column: 14, scope: !3694)
!3744 = !DILocation(line: 847, column: 45, scope: !3694)
!3745 = !DILocation(line: 847, column: 41, scope: !3694)
!3746 = !DILocation(line: 854, column: 24, scope: !3747)
!3747 = distinct !DILexicalBlock(scope: !3732, file: !286, line: 852, column: 30)
!3748 = !DILocation(line: 854, column: 11, scope: !3747)
!3749 = !DILocation(line: 855, column: 30, scope: !3747)
!3750 = !DILocation(line: 855, column: 22, scope: !3747)
!3751 = !DILocation(line: 855, column: 8, scope: !3747)
!3752 = !DILocation(line: 857, column: 7, scope: !3747)
!3753 = !DILocation(line: 859, column: 8, scope: !3747)
!3754 = !DILocation(line: 859, column: 18, scope: !3747)
!3755 = !DILocation(line: 859, column: 5, scope: !3747)
!3756 = !DILocation(line: 852, column: 26, scope: !3732)
!3757 = distinct !{!3757, !3734, !3758}
!3758 = !DILocation(line: 860, column: 2, scope: !3733)
!3759 = !DILocation(line: 863, column: 6, scope: !3694)
!3760 = !DILocation(line: 866, column: 56, scope: !3694)
!3761 = !DILocation(line: 866, column: 9, scope: !3694)
!3762 = !DILocation(line: 866, column: 2, scope: !3694)
!3763 = !DILocation(line: 867, column: 1, scope: !3694)
!3764 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !286, file: !286, line: 179, type: !3765, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !3767)
!3765 = !DISubroutineType(types: !3766)
!3766 = !{!119, !3697, !3701, !113, !278, !113}
!3767 = !{!3768, !3769, !3770, !3771, !3772, !3773}
!3768 = !DILocalVariable(name: "out", arg: 1, scope: !3764, file: !286, line: 179, type: !3697)
!3769 = !DILocalVariable(name: "formatter", arg: 2, scope: !3764, file: !286, line: 180, type: !3701)
!3770 = !DILocalVariable(name: "ctx", arg: 3, scope: !3764, file: !286, line: 181, type: !113)
!3771 = !DILocalVariable(name: "fmt", arg: 4, scope: !3764, file: !286, line: 182, type: !278)
!3772 = !DILocalVariable(name: "buf", arg: 5, scope: !3764, file: !286, line: 182, type: !113)
!3773 = !DILocalVariable(name: "u", scope: !3764, file: !286, line: 187, type: !3774)
!3774 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3764, file: !286, line: 184, size: 32, elements: !3775)
!3775 = !{!3776, !3777}
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !3774, file: !286, line: 185, baseType: !3314, size: 32)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3774, file: !286, line: 186, baseType: !113, size: 32)
!3778 = !DILocation(line: 0, scope: !3764)
!3779 = !DILocation(line: 191, column: 9, scope: !3764)
!3780 = !DILocation(line: 191, column: 2, scope: !3764)
!3781 = distinct !DISubprogram(name: "is_ptr", scope: !286, file: !286, line: 881, type: !3782, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !3784)
!3782 = !DISubroutineType(types: !3783)
!3783 = !{!345, !278, !119}
!3784 = !{!3785, !3786, !3787, !3788, !3789}
!3785 = !DILocalVariable(name: "fmt", arg: 1, scope: !3781, file: !286, line: 881, type: !278)
!3786 = !DILocalVariable(name: "n", arg: 2, scope: !3781, file: !286, line: 881, type: !119)
!3787 = !DILocalVariable(name: "c", scope: !3781, file: !286, line: 883, type: !107)
!3788 = !DILocalVariable(name: "mod", scope: !3781, file: !286, line: 884, type: !345)
!3789 = !DILocalVariable(name: "cnt", scope: !3781, file: !286, line: 885, type: !119)
!3790 = !DILocation(line: 0, scope: !3781)
!3791 = !DILocation(line: 887, column: 14, scope: !3781)
!3792 = !DILocation(line: 887, column: 22, scope: !3781)
!3793 = !DILocation(line: 887, column: 2, scope: !3781)
!3794 = !DILocation(line: 887, column: 18, scope: !3781)
!3795 = !DILocation(line: 888, column: 7, scope: !3796)
!3796 = distinct !DILexicalBlock(scope: !3781, file: !286, line: 887, column: 31)
!3797 = !DILocation(line: 889, column: 12, scope: !3798)
!3798 = distinct !DILexicalBlock(scope: !3799, file: !286, line: 889, column: 8)
!3799 = distinct !DILexicalBlock(scope: !3800, file: !286, line: 888, column: 12)
!3800 = distinct !DILexicalBlock(scope: !3796, file: !286, line: 888, column: 7)
!3801 = !DILocation(line: 889, column: 8, scope: !3799)
!3802 = !DILocation(line: 890, column: 11, scope: !3803)
!3803 = distinct !DILexicalBlock(scope: !3804, file: !286, line: 890, column: 9)
!3804 = distinct !DILexicalBlock(scope: !3798, file: !286, line: 889, column: 18)
!3805 = !DILocation(line: 890, column: 9, scope: !3804)
!3806 = !DILocation(line: 892, column: 16, scope: !3807)
!3807 = distinct !DILexicalBlock(scope: !3803, file: !286, line: 892, column: 16)
!3808 = !DILocation(line: 892, column: 16, scope: !3803)
!3809 = !DILocation(line: 895, column: 15, scope: !3810)
!3810 = distinct !DILexicalBlock(scope: !3798, file: !286, line: 895, column: 15)
!3811 = !DILocation(line: 895, column: 15, scope: !3798)
!3812 = !DILocation(line: 900, column: 9, scope: !3813)
!3813 = distinct !DILexicalBlock(scope: !3796, file: !286, line: 900, column: 7)
!3814 = !DILocation(line: 900, column: 7, scope: !3796)
!3815 = distinct !{!3815, !3793, !3816}
!3816 = !DILocation(line: 903, column: 2, scope: !3781)
!3817 = !DILocation(line: 906, column: 1, scope: !3781)
!3818 = distinct !DISubprogram(name: "is_fmt_spec", scope: !286, file: !286, line: 873, type: !3819, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !3821)
!3819 = !DISubroutineType(types: !3820)
!3820 = !{!345, !107}
!3821 = !{!3822}
!3822 = !DILocalVariable(name: "c", arg: 1, scope: !3818, file: !286, line: 873, type: !107)
!3823 = !DILocation(line: 0, scope: !3818)
!3824 = !DILocation(line: 875, column: 19, scope: !3818)
!3825 = !DILocation(line: 875, column: 2, scope: !3818)
!3826 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !286, file: !286, line: 908, type: !3827, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !3833)
!3827 = !DISubroutineType(types: !3828)
!3828 = !{!119, !113, !239, !3829, !113, !118, !2668, !239}
!3829 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !3347, line: 308, baseType: !3830)
!3830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3831, size: 32)
!3831 = !DISubroutineType(types: !3832)
!3832 = !{!119, !13, !239, !113}
!3833 = !{!3834, !3835, !3836, !3837, !3838, !3839, !3840, !3841, !3842, !3843, !3844, !3845, !3846, !3847, !3848, !3849, !3851, !3852, !3853, !3854, !3855, !3861, !3864, !3865, !3866, !3868, !3871, !3872, !3873, !3874, !3875, !3876, !3877, !3878, !3879, !3880, !3881, !3882, !3884, !3887, !3888, !3889, !3890, !3891, !3892, !3894, !3897, !3898, !3899}
!3834 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !3826, file: !286, line: 908, type: !113)
!3835 = !DILocalVariable(name: "in_len", arg: 2, scope: !3826, file: !286, line: 909, type: !239)
!3836 = !DILocalVariable(name: "cb", arg: 3, scope: !3826, file: !286, line: 910, type: !3829)
!3837 = !DILocalVariable(name: "ctx", arg: 4, scope: !3826, file: !286, line: 911, type: !113)
!3838 = !DILocalVariable(name: "flags", arg: 5, scope: !3826, file: !286, line: 912, type: !118)
!3839 = !DILocalVariable(name: "strl", arg: 6, scope: !3826, file: !286, line: 913, type: !2668)
!3840 = !DILocalVariable(name: "strl_len", arg: 7, scope: !3826, file: !286, line: 914, type: !239)
!3841 = !DILocalVariable(name: "buf", scope: !3826, file: !286, line: 918, type: !284)
!3842 = !DILocalVariable(name: "buf32", scope: !3826, file: !286, line: 919, type: !867)
!3843 = !DILocalVariable(name: "args_size", scope: !3826, file: !286, line: 920, type: !32)
!3844 = !DILocalVariable(name: "ros_nbr", scope: !3826, file: !286, line: 920, type: !32)
!3845 = !DILocalVariable(name: "rws_nbr", scope: !3826, file: !286, line: 920, type: !32)
!3846 = !DILocalVariable(name: "fmt_present", scope: !3826, file: !286, line: 921, type: !345)
!3847 = !DILocalVariable(name: "rw_cpy", scope: !3826, file: !286, line: 922, type: !345)
!3848 = !DILocalVariable(name: "ro_cpy", scope: !3826, file: !286, line: 923, type: !345)
!3849 = !DILocalVariable(name: "in_desc", scope: !3826, file: !286, line: 924, type: !3850)
!3850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3350, size: 32)
!3851 = !DILocalVariable(name: "out_len", scope: !3826, file: !286, line: 960, type: !119)
!3852 = !DILocalVariable(name: "fmt", scope: !3826, file: !286, line: 965, type: !278)
!3853 = !DILocalVariable(name: "str_pos", scope: !3826, file: !286, line: 966, type: !284)
!3854 = !DILocalVariable(name: "strl_cnt", scope: !3826, file: !286, line: 967, type: !239)
!3855 = !DILocalVariable(name: "i", scope: !3856, file: !286, line: 973, type: !119)
!3856 = distinct !DILexicalBlock(scope: !3857, file: !286, line: 973, column: 4)
!3857 = distinct !DILexicalBlock(scope: !3858, file: !286, line: 972, column: 15)
!3858 = distinct !DILexicalBlock(scope: !3859, file: !286, line: 972, column: 7)
!3859 = distinct !DILexicalBlock(scope: !3860, file: !286, line: 970, column: 18)
!3860 = distinct !DILexicalBlock(scope: !3826, file: !286, line: 970, column: 6)
!3861 = !DILocalVariable(name: "str", scope: !3862, file: !286, line: 974, type: !278)
!3862 = distinct !DILexicalBlock(scope: !3863, file: !286, line: 973, column: 38)
!3863 = distinct !DILexicalBlock(scope: !3856, file: !286, line: 973, column: 4)
!3864 = !DILocalVariable(name: "len", scope: !3862, file: !286, line: 975, type: !119)
!3865 = !DILocalVariable(name: "drop_ro_str_pos", scope: !3859, file: !286, line: 990, type: !345)
!3866 = !DILocalVariable(name: "i", scope: !3867, file: !286, line: 995, type: !119)
!3867 = distinct !DILexicalBlock(scope: !3859, file: !286, line: 995, column: 3)
!3868 = !DILocalVariable(name: "arg_idx", scope: !3869, file: !286, line: 996, type: !185)
!3869 = distinct !DILexicalBlock(scope: !3870, file: !286, line: 995, column: 37)
!3870 = distinct !DILexicalBlock(scope: !3867, file: !286, line: 995, column: 3)
!3871 = !DILocalVariable(name: "arg_pos", scope: !3869, file: !286, line: 997, type: !185)
!3872 = !DILocalVariable(name: "str", scope: !3869, file: !286, line: 998, type: !278)
!3873 = !DILocalVariable(name: "is_ro", scope: !3869, file: !286, line: 999, type: !345)
!3874 = !DILocalVariable(name: "len", scope: !3869, file: !286, line: 1000, type: !119)
!3875 = !DILocalVariable(name: "out_desc", scope: !3826, file: !286, line: 1038, type: !3350)
!3876 = !DILocalVariable(name: "cpy_str_pos", scope: !3826, file: !286, line: 1040, type: !3332)
!3877 = !DILocalVariable(name: "keep_str_pos", scope: !3826, file: !286, line: 1042, type: !3332)
!3878 = !DILocalVariable(name: "scpy_cnt", scope: !3826, file: !286, line: 1043, type: !185)
!3879 = !DILocalVariable(name: "keep_cnt", scope: !3826, file: !286, line: 1044, type: !185)
!3880 = !DILocalVariable(name: "dst", scope: !3826, file: !286, line: 1045, type: !284)
!3881 = !DILocalVariable(name: "rv", scope: !3826, file: !286, line: 1046, type: !119)
!3882 = !DILocalVariable(name: "i", scope: !3883, file: !286, line: 1074, type: !119)
!3883 = distinct !DILexicalBlock(scope: !3826, file: !286, line: 1074, column: 2)
!3884 = !DILocalVariable(name: "arg_idx", scope: !3885, file: !286, line: 1075, type: !185)
!3885 = distinct !DILexicalBlock(scope: !3886, file: !286, line: 1074, column: 36)
!3886 = distinct !DILexicalBlock(scope: !3883, file: !286, line: 1074, column: 2)
!3887 = !DILocalVariable(name: "arg_pos", scope: !3885, file: !286, line: 1076, type: !185)
!3888 = !DILocalVariable(name: "str", scope: !3885, file: !286, line: 1077, type: !278)
!3889 = !DILocalVariable(name: "is_ro", scope: !3885, file: !286, line: 1078, type: !345)
!3890 = !DILocalVariable(name: "in_desc_backup", scope: !3826, file: !286, line: 1114, type: !3350)
!3891 = !DILocalVariable(name: "strs_len", scope: !3826, file: !286, line: 1134, type: !239)
!3892 = !DILocalVariable(name: "i", scope: !3893, file: !286, line: 1143, type: !119)
!3893 = distinct !DILexicalBlock(scope: !3826, file: !286, line: 1143, column: 2)
!3894 = !DILocalVariable(name: "loc", scope: !3895, file: !286, line: 1144, type: !185)
!3895 = distinct !DILexicalBlock(scope: !3896, file: !286, line: 1143, column: 37)
!3896 = distinct !DILexicalBlock(scope: !3893, file: !286, line: 1143, column: 2)
!3897 = !DILocalVariable(name: "str", scope: !3895, file: !286, line: 1145, type: !278)
!3898 = !DILocalVariable(name: "str_len", scope: !3895, file: !286, line: 1146, type: !199)
!3899 = !DILabel(scope: !3900, name: "calculate_string_length", file: !286, line: 1021)
!3900 = distinct !DILexicalBlock(scope: !3901, file: !286, line: 1020, column: 56)
!3901 = distinct !DILexicalBlock(scope: !3902, file: !286, line: 1020, column: 15)
!3902 = distinct !DILexicalBlock(scope: !3869, file: !286, line: 1014, column: 8)
!3903 = !DILocation(line: 0, scope: !3826)
!3904 = !DILocation(line: 916, column: 2, scope: !3905)
!3905 = distinct !DILexicalBlock(scope: !3906, file: !286, line: 916, column: 2)
!3906 = distinct !DILexicalBlock(scope: !3826, file: !286, line: 916, column: 2)
!3907 = !DILocation(line: 916, column: 2, scope: !3906)
!3908 = !DILocation(line: 916, column: 2, scope: !3909)
!3909 = distinct !DILexicalBlock(scope: !3905, file: !286, line: 916, column: 2)
!3910 = !DILocation(line: 919, column: 20, scope: !3826)
!3911 = !DILocation(line: 921, column: 27, scope: !3826)
!3912 = !DILocation(line: 921, column: 21, scope: !3826)
!3913 = !DILocation(line: 926, column: 18, scope: !3826)
!3914 = !DILocation(line: 926, column: 11, scope: !3826)
!3915 = !DILocation(line: 926, column: 34, scope: !3826)
!3916 = !DILocation(line: 931, column: 21, scope: !3826)
!3917 = !DILocation(line: 931, column: 12, scope: !3826)
!3918 = !DILocation(line: 932, column: 11, scope: !3826)
!3919 = !DILocation(line: 932, column: 19, scope: !3826)
!3920 = !DILocation(line: 938, column: 21, scope: !3826)
!3921 = !DILocation(line: 938, column: 12, scope: !3826)
!3922 = !DILocation(line: 939, column: 19, scope: !3826)
!3923 = !DILocation(line: 939, column: 23, scope: !3826)
!3924 = !DILocation(line: 946, column: 14, scope: !3925)
!3925 = distinct !DILexicalBlock(scope: !3826, file: !286, line: 946, column: 6)
!3926 = !DILocation(line: 947, column: 7, scope: !3927)
!3927 = distinct !DILexicalBlock(scope: !3928, file: !286, line: 947, column: 7)
!3928 = distinct !DILexicalBlock(scope: !3925, file: !286, line: 946, column: 26)
!3929 = !DILocation(line: 947, column: 7, scope: !3928)
!3930 = !DILocation(line: 948, column: 4, scope: !3931)
!3931 = distinct !DILexicalBlock(scope: !3927, file: !286, line: 947, column: 11)
!3932 = !DILocation(line: 949, column: 3, scope: !3931)
!3933 = !DILocation(line: 958, column: 23, scope: !3826)
!3934 = !DILocation(line: 958, column: 14, scope: !3826)
!3935 = !DILocation(line: 958, column: 27, scope: !3826)
!3936 = !DILocation(line: 965, column: 41, scope: !3826)
!3937 = !DILocation(line: 965, column: 20, scope: !3826)
!3938 = !DILocation(line: 966, column: 22, scope: !3826)
!3939 = !DILocation(line: 970, column: 9, scope: !3860)
!3940 = !DILocation(line: 970, column: 6, scope: !3826)
!3941 = !DILocation(line: 972, column: 7, scope: !3859)
!3942 = !DILocation(line: 0, scope: !3856)
!3943 = !DILocation(line: 973, column: 4, scope: !3856)
!3944 = !DILocation(line: 974, column: 46, scope: !3862)
!3945 = !DILocation(line: 974, column: 40, scope: !3862)
!3946 = !DILocation(line: 974, column: 23, scope: !3862)
!3947 = !DILocation(line: 0, scope: !3862)
!3948 = !DILocation(line: 975, column: 15, scope: !3862)
!3949 = !DILocation(line: 978, column: 14, scope: !3950)
!3950 = distinct !DILexicalBlock(scope: !3862, file: !286, line: 978, column: 9)
!3951 = !DILocation(line: 979, column: 25, scope: !3952)
!3952 = distinct !DILexicalBlock(scope: !3950, file: !286, line: 978, column: 38)
!3953 = !DILocation(line: 979, column: 19, scope: !3952)
!3954 = !DILocation(line: 979, column: 6, scope: !3952)
!3955 = !DILocation(line: 979, column: 23, scope: !3952)
!3956 = !DILocation(line: 980, column: 5, scope: !3952)
!3957 = !DILocation(line: 981, column: 13, scope: !3862)
!3958 = !DILocation(line: 982, column: 12, scope: !3862)
!3959 = !DILocation(line: 973, column: 34, scope: !3863)
!3960 = !DILocation(line: 973, column: 22, scope: !3863)
!3961 = distinct !{!3961, !3943, !3962}
!3962 = !DILocation(line: 983, column: 4, scope: !3856)
!3963 = !DILocation(line: 985, column: 16, scope: !3964)
!3964 = distinct !DILexicalBlock(scope: !3965, file: !286, line: 985, column: 8)
!3965 = distinct !DILexicalBlock(scope: !3858, file: !286, line: 984, column: 10)
!3966 = !DILocation(line: 967, column: 9, scope: !3826)
!3967 = !DILocation(line: 971, column: 11, scope: !3859)
!3968 = !DILocation(line: 0, scope: !3859)
!3969 = !DILocation(line: 0, scope: !3867)
!3970 = !DILocation(line: 995, column: 21, scope: !3870)
!3971 = !DILocation(line: 995, column: 3, scope: !3867)
!3972 = !DILocation(line: 990, column: 34, scope: !3859)
!3973 = !DILocation(line: 990, column: 26, scope: !3859)
!3974 = !DILocation(line: 996, column: 30, scope: !3869)
!3975 = !DILocation(line: 0, scope: !3869)
!3976 = !DILocation(line: 997, column: 30, scope: !3869)
!3977 = !DILocation(line: 997, column: 22, scope: !3869)
!3978 = !DILocation(line: 998, column: 39, scope: !3869)
!3979 = !DILocation(line: 998, column: 22, scope: !3869)
!3980 = !DILocation(line: 999, column: 17, scope: !3869)
!3981 = !DILocation(line: 1002, column: 20, scope: !3982)
!3982 = distinct !DILexicalBlock(scope: !3869, file: !286, line: 1002, column: 8)
!3983 = !DILocation(line: 996, column: 22, scope: !3869)
!3984 = !DILocation(line: 1002, column: 35, scope: !3982)
!3985 = !DILocation(line: 1002, column: 23, scope: !3982)
!3986 = !DILocation(line: 1002, column: 8, scope: !3869)
!3987 = !DILocation(line: 1003, column: 5, scope: !3988)
!3988 = distinct !DILexicalBlock(scope: !3989, file: !286, line: 1003, column: 5)
!3989 = distinct !DILexicalBlock(scope: !3990, file: !286, line: 1003, column: 5)
!3990 = distinct !DILexicalBlock(scope: !3991, file: !286, line: 1003, column: 5)
!3991 = distinct !DILexicalBlock(scope: !3992, file: !286, line: 1003, column: 5)
!3992 = distinct !DILexicalBlock(scope: !3982, file: !286, line: 1002, column: 45)
!3993 = !DILocation(line: 1010, column: 13, scope: !3992)
!3994 = !DILocation(line: 1011, column: 5, scope: !3992)
!3995 = !DILocation(line: 1014, column: 8, scope: !3869)
!3996 = !DILocation(line: 1015, column: 9, scope: !3997)
!3997 = distinct !DILexicalBlock(scope: !3902, file: !286, line: 1014, column: 15)
!3998 = !DILocation(line: 1018, column: 14, scope: !3999)
!3999 = distinct !DILexicalBlock(scope: !4000, file: !286, line: 1017, column: 12)
!4000 = distinct !DILexicalBlock(scope: !3997, file: !286, line: 1015, column: 9)
!4001 = !DILocation(line: 1020, column: 4, scope: !3997)
!4002 = !DILocation(line: 1020, column: 15, scope: !3902)
!4003 = !DILocation(line: 1021, column: 1, scope: !3900)
!4004 = !DILocation(line: 1022, column: 11, scope: !3900)
!4005 = !DILocation(line: 1025, column: 14, scope: !4006)
!4006 = distinct !DILexicalBlock(scope: !3900, file: !286, line: 1025, column: 9)
!4007 = !DILocation(line: 1026, column: 25, scope: !4008)
!4008 = distinct !DILexicalBlock(scope: !4006, file: !286, line: 1025, column: 38)
!4009 = !DILocation(line: 1026, column: 19, scope: !4008)
!4010 = !DILocation(line: 1026, column: 6, scope: !4008)
!4011 = !DILocation(line: 1026, column: 23, scope: !4008)
!4012 = !DILocation(line: 1027, column: 5, scope: !4008)
!4013 = !DILocation(line: 1031, column: 21, scope: !3900)
!4014 = !DILocation(line: 1031, column: 13, scope: !3900)
!4015 = !DILocation(line: 1032, column: 4, scope: !3900)
!4016 = !DILocation(line: 995, column: 33, scope: !3870)
!4017 = distinct !{!4017, !3971, !4018}
!4018 = !DILocation(line: 1033, column: 3, scope: !3867)
!4019 = !DILocation(line: 1040, column: 10, scope: !3826)
!4020 = !DILocation(line: 1042, column: 10, scope: !3826)
!4021 = !DILocation(line: 1052, column: 6, scope: !3826)
!4022 = !DILocation(line: 1055, column: 9, scope: !4023)
!4023 = distinct !DILexicalBlock(scope: !4024, file: !286, line: 1052, column: 14)
!4024 = distinct !DILexicalBlock(scope: !3826, file: !286, line: 1052, column: 6)
!4025 = !DILocation(line: 1056, column: 2, scope: !4023)
!4026 = !DILocation(line: 1056, column: 21, scope: !4027)
!4027 = distinct !DILexicalBlock(scope: !4024, file: !286, line: 1056, column: 13)
!4028 = !DILocation(line: 1066, column: 3, scope: !4029)
!4029 = distinct !DILexicalBlock(scope: !4030, file: !286, line: 1065, column: 11)
!4030 = distinct !DILexicalBlock(scope: !3826, file: !286, line: 1065, column: 6)
!4031 = !DILocation(line: 1067, column: 2, scope: !4029)
!4032 = !DILocation(line: 1068, column: 10, scope: !3826)
!4033 = !DILocation(line: 0, scope: !3883)
!4034 = !DILocation(line: 1074, column: 20, scope: !3886)
!4035 = !DILocation(line: 1074, column: 2, scope: !3883)
!4036 = !DILocation(line: 1110, column: 24, scope: !3826)
!4037 = !DILocation(line: 1053, column: 12, scope: !4023)
!4038 = !DILocation(line: 1054, column: 12, scope: !4023)
!4039 = !DILocation(line: 1108, column: 30, scope: !3826)
!4040 = !DILocation(line: 1108, column: 40, scope: !3826)
!4041 = !DILocation(line: 1108, column: 38, scope: !3826)
!4042 = !DILocation(line: 1109, column: 31, scope: !3826)
!4043 = !DILocation(line: 1109, column: 24, scope: !3826)
!4044 = !DILocation(line: 1110, column: 31, scope: !3826)
!4045 = !DILocation(line: 1114, column: 31, scope: !3826)
!4046 = !DILocation(line: 1114, column: 48, scope: !3826)
!4047 = !DILocation(line: 1115, column: 13, scope: !3826)
!4048 = !DILocation(line: 1118, column: 7, scope: !3826)
!4049 = !DILocation(line: 1119, column: 9, scope: !4050)
!4050 = distinct !DILexicalBlock(scope: !3826, file: !286, line: 1119, column: 6)
!4051 = !DILocation(line: 1119, column: 6, scope: !3826)
!4052 = !DILocation(line: 1075, column: 29, scope: !3885)
!4053 = !DILocation(line: 1075, column: 21, scope: !3885)
!4054 = !DILocation(line: 0, scope: !3885)
!4055 = !DILocation(line: 1076, column: 29, scope: !3885)
!4056 = !DILocation(line: 1076, column: 21, scope: !3885)
!4057 = !DILocation(line: 1077, column: 38, scope: !3885)
!4058 = !DILocation(line: 1077, column: 21, scope: !3885)
!4059 = !DILocation(line: 1078, column: 16, scope: !3885)
!4060 = !DILocation(line: 1080, column: 19, scope: !4061)
!4061 = distinct !DILexicalBlock(scope: !3885, file: !286, line: 1080, column: 7)
!4062 = !DILocation(line: 1080, column: 34, scope: !4061)
!4063 = !DILocation(line: 1080, column: 22, scope: !4061)
!4064 = !DILocation(line: 1080, column: 7, scope: !3885)
!4065 = !DILocation(line: 1084, column: 7, scope: !3885)
!4066 = !DILocation(line: 1085, column: 8, scope: !4067)
!4067 = distinct !DILexicalBlock(scope: !4068, file: !286, line: 1084, column: 14)
!4068 = distinct !DILexicalBlock(scope: !3885, file: !286, line: 1084, column: 7)
!4069 = !DILocation(line: 1086, column: 5, scope: !4070)
!4070 = distinct !DILexicalBlock(scope: !4071, file: !286, line: 1086, column: 5)
!4071 = distinct !DILexicalBlock(scope: !4072, file: !286, line: 1086, column: 5)
!4072 = distinct !DILexicalBlock(scope: !4073, file: !286, line: 1085, column: 49)
!4073 = distinct !DILexicalBlock(scope: !4067, file: !286, line: 1085, column: 8)
!4074 = !DILocation(line: 1086, column: 5, scope: !4071)
!4075 = !DILocation(line: 1086, column: 5, scope: !4076)
!4076 = distinct !DILexicalBlock(scope: !4070, file: !286, line: 1086, column: 5)
!4077 = !DILocation(line: 1087, column: 25, scope: !4072)
!4078 = !DILocation(line: 1087, column: 5, scope: !4072)
!4079 = !DILocation(line: 1088, column: 4, scope: !4072)
!4080 = !DILocation(line: 1088, column: 15, scope: !4073)
!4081 = !DILocation(line: 1089, column: 5, scope: !4082)
!4082 = distinct !DILexicalBlock(scope: !4083, file: !286, line: 1089, column: 5)
!4083 = distinct !DILexicalBlock(scope: !4084, file: !286, line: 1089, column: 5)
!4084 = distinct !DILexicalBlock(scope: !4085, file: !286, line: 1088, column: 61)
!4085 = distinct !DILexicalBlock(scope: !4073, file: !286, line: 1088, column: 15)
!4086 = !DILocation(line: 1089, column: 5, scope: !4083)
!4087 = !DILocation(line: 1089, column: 5, scope: !4088)
!4088 = distinct !DILexicalBlock(scope: !4082, file: !286, line: 1089, column: 5)
!4089 = !DILocation(line: 1090, column: 26, scope: !4084)
!4090 = !DILocation(line: 1090, column: 5, scope: !4084)
!4091 = !DILocation(line: 1091, column: 4, scope: !4084)
!4092 = !DILocation(line: 1095, column: 8, scope: !4093)
!4093 = distinct !DILexicalBlock(scope: !4068, file: !286, line: 1094, column: 10)
!4094 = !DILocation(line: 1096, column: 5, scope: !4095)
!4095 = distinct !DILexicalBlock(scope: !4096, file: !286, line: 1096, column: 5)
!4096 = distinct !DILexicalBlock(scope: !4097, file: !286, line: 1096, column: 5)
!4097 = distinct !DILexicalBlock(scope: !4098, file: !286, line: 1095, column: 49)
!4098 = distinct !DILexicalBlock(scope: !4093, file: !286, line: 1095, column: 8)
!4099 = !DILocation(line: 1096, column: 5, scope: !4096)
!4100 = !DILocation(line: 1096, column: 5, scope: !4101)
!4101 = distinct !DILexicalBlock(scope: !4095, file: !286, line: 1096, column: 5)
!4102 = !DILocation(line: 1097, column: 25, scope: !4097)
!4103 = !DILocation(line: 1097, column: 5, scope: !4097)
!4104 = !DILocation(line: 1098, column: 4, scope: !4097)
!4105 = !DILocation(line: 1099, column: 5, scope: !4106)
!4106 = distinct !DILexicalBlock(scope: !4107, file: !286, line: 1099, column: 5)
!4107 = distinct !DILexicalBlock(scope: !4108, file: !286, line: 1099, column: 5)
!4108 = distinct !DILexicalBlock(scope: !4098, file: !286, line: 1098, column: 11)
!4109 = !DILocation(line: 1099, column: 5, scope: !4107)
!4110 = !DILocation(line: 1099, column: 5, scope: !4111)
!4111 = distinct !DILexicalBlock(scope: !4106, file: !286, line: 1099, column: 5)
!4112 = !DILocation(line: 1100, column: 26, scope: !4108)
!4113 = !DILocation(line: 1100, column: 5, scope: !4108)
!4114 = !DILocation(line: 1100, column: 30, scope: !4108)
!4115 = !DILocation(line: 1101, column: 26, scope: !4108)
!4116 = !DILocation(line: 1101, column: 5, scope: !4108)
!4117 = !DILocation(line: 0, scope: !4068)
!4118 = !DILocation(line: 1074, column: 32, scope: !3886)
!4119 = distinct !{!4119, !4035, !4120}
!4120 = !DILocation(line: 1104, column: 2, scope: !3883)
!4121 = !DILocation(line: 1124, column: 13, scope: !3826)
!4122 = !DILocation(line: 1127, column: 10, scope: !3826)
!4123 = !DILocation(line: 1127, column: 7, scope: !3826)
!4124 = !DILocation(line: 1128, column: 9, scope: !4125)
!4125 = distinct !DILexicalBlock(scope: !3826, file: !286, line: 1128, column: 6)
!4126 = !DILocation(line: 1128, column: 6, scope: !3826)
!4127 = !DILocation(line: 1134, column: 27, scope: !3826)
!4128 = !DILocation(line: 1136, column: 7, scope: !3826)
!4129 = !DILocation(line: 1137, column: 9, scope: !4130)
!4130 = distinct !DILexicalBlock(scope: !3826, file: !286, line: 1137, column: 6)
!4131 = !DILocation(line: 1137, column: 6, scope: !3826)
!4132 = !DILocation(line: 1131, column: 10, scope: !3826)
!4133 = !DILocation(line: 1140, column: 10, scope: !3826)
!4134 = !DILocation(line: 0, scope: !3893)
!4135 = !DILocation(line: 1143, column: 20, scope: !3896)
!4136 = !DILocation(line: 1143, column: 2, scope: !3893)
!4137 = !DILocation(line: 1144, column: 3, scope: !3895)
!4138 = !DILocation(line: 1144, column: 17, scope: !3895)
!4139 = !DILocation(line: 0, scope: !3895)
!4140 = !DILocation(line: 1144, column: 11, scope: !3895)
!4141 = !DILocation(line: 1145, column: 38, scope: !3895)
!4142 = !DILocation(line: 1145, column: 21, scope: !3895)
!4143 = !DILocation(line: 1146, column: 22, scope: !3895)
!4144 = !DILocation(line: 1146, column: 29, scope: !3895)
!4145 = !DILocation(line: 1148, column: 8, scope: !3895)
!4146 = !DILocation(line: 1149, column: 10, scope: !4147)
!4147 = distinct !DILexicalBlock(scope: !3895, file: !286, line: 1149, column: 7)
!4148 = !DILocation(line: 1149, column: 7, scope: !3895)
!4149 = !DILocation(line: 1154, column: 8, scope: !3895)
!4150 = !DILocation(line: 1155, column: 10, scope: !4151)
!4151 = distinct !DILexicalBlock(scope: !3895, file: !286, line: 1155, column: 7)
!4152 = !DILocation(line: 1155, column: 7, scope: !3895)
!4153 = !DILocation(line: 1159, column: 2, scope: !3896)
!4154 = !DILocation(line: 1152, column: 11, scope: !3895)
!4155 = !DILocation(line: 1158, column: 11, scope: !3895)
!4156 = !DILocation(line: 1143, column: 33, scope: !3896)
!4157 = distinct !{!4157, !4136, !4158}
!4158 = !DILocation(line: 1159, column: 2, scope: !3893)
!4159 = !DILocation(line: 1162, column: 8, scope: !3826)
!4160 = !DILocation(line: 1164, column: 2, scope: !3826)
!4161 = !DILocation(line: 1165, column: 1, scope: !3826)
!4162 = distinct !DISubprogram(name: "get_package_len", scope: !286, file: !286, line: 196, type: !4163, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !4165)
!4163 = !DISubroutineType(types: !4164)
!4164 = !{!239, !113}
!4165 = !{!4166, !4167, !4168, !4169, !4170, !4171, !4172}
!4166 = !DILocalVariable(name: "packaged", arg: 1, scope: !4162, file: !286, line: 196, type: !113)
!4167 = !DILocalVariable(name: "buf", scope: !4162, file: !286, line: 200, type: !284)
!4168 = !DILocalVariable(name: "start", scope: !4162, file: !286, line: 201, type: !284)
!4169 = !DILocalVariable(name: "args_size", scope: !4162, file: !286, line: 202, type: !32)
!4170 = !DILocalVariable(name: "s_nbr", scope: !4162, file: !286, line: 202, type: !32)
!4171 = !DILocalVariable(name: "ros_nbr", scope: !4162, file: !286, line: 202, type: !32)
!4172 = !DILocalVariable(name: "i", scope: !4173, file: !286, line: 215, type: !119)
!4173 = distinct !DILexicalBlock(scope: !4162, file: !286, line: 215, column: 2)
!4174 = !DILocation(line: 0, scope: !4162)
!4175 = !DILocation(line: 198, column: 2, scope: !4176)
!4176 = distinct !DILexicalBlock(scope: !4177, file: !286, line: 198, column: 2)
!4177 = distinct !DILexicalBlock(scope: !4162, file: !286, line: 198, column: 2)
!4178 = !DILocation(line: 198, column: 2, scope: !4177)
!4179 = !DILocation(line: 198, column: 2, scope: !4180)
!4180 = distinct !DILexicalBlock(scope: !4176, file: !286, line: 198, column: 2)
!4181 = !DILocation(line: 204, column: 14, scope: !4162)
!4182 = !DILocation(line: 204, column: 21, scope: !4162)
!4183 = !DILocation(line: 205, column: 14, scope: !4162)
!4184 = !DILocation(line: 206, column: 14, scope: !4162)
!4185 = !DILocation(line: 209, column: 6, scope: !4162)
!4186 = !DILocation(line: 212, column: 6, scope: !4162)
!4187 = !DILocation(line: 0, scope: !4173)
!4188 = !DILocation(line: 215, column: 20, scope: !4189)
!4189 = distinct !DILexicalBlock(scope: !4173, file: !286, line: 215, column: 2)
!4190 = !DILocation(line: 215, column: 2, scope: !4173)
!4191 = !DILocation(line: 220, column: 33, scope: !4162)
!4192 = !DILocation(line: 220, column: 2, scope: !4162)
!4193 = !DILocation(line: 216, column: 6, scope: !4194)
!4194 = distinct !DILexicalBlock(scope: !4189, file: !286, line: 215, column: 34)
!4195 = !DILocation(line: 217, column: 10, scope: !4194)
!4196 = !DILocation(line: 217, column: 36, scope: !4194)
!4197 = !DILocation(line: 217, column: 7, scope: !4194)
!4198 = !DILocation(line: 215, column: 30, scope: !4189)
!4199 = distinct !{!4199, !4190, !4200}
!4200 = !DILocation(line: 218, column: 2, scope: !4173)
!4201 = distinct !DISubprogram(name: "append_string", scope: !286, file: !286, line: 223, type: !4202, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !4204)
!4202 = !DISubroutineType(types: !4203)
!4203 = !{!119, !3829, !113, !278, !199}
!4204 = !{!4205, !4206, !4207, !4208}
!4205 = !DILocalVariable(name: "cb", arg: 1, scope: !4201, file: !286, line: 223, type: !3829)
!4206 = !DILocalVariable(name: "ctx", arg: 2, scope: !4201, file: !286, line: 223, type: !113)
!4207 = !DILocalVariable(name: "str", arg: 3, scope: !4201, file: !286, line: 223, type: !278)
!4208 = !DILocalVariable(name: "strl", arg: 4, scope: !4201, file: !286, line: 223, type: !199)
!4209 = !DILocation(line: 0, scope: !4201)
!4210 = !DILocation(line: 225, column: 9, scope: !4211)
!4211 = distinct !DILexicalBlock(scope: !4201, file: !286, line: 225, column: 6)
!4212 = !DILocation(line: 225, column: 6, scope: !4201)
!4213 = !DILocation(line: 226, column: 14, scope: !4214)
!4214 = distinct !DILexicalBlock(scope: !4211, file: !286, line: 225, column: 18)
!4215 = !DILocation(line: 226, column: 12, scope: !4214)
!4216 = !DILocation(line: 226, column: 3, scope: !4214)
!4217 = !DILocation(line: 229, column: 14, scope: !4201)
!4218 = !DILocation(line: 229, column: 9, scope: !4201)
!4219 = !DILocation(line: 229, column: 27, scope: !4201)
!4220 = !DILocation(line: 229, column: 39, scope: !4201)
!4221 = !DILocation(line: 230, column: 17, scope: !4201)
!4222 = !DILocation(line: 230, column: 9, scope: !4201)
!4223 = !DILocation(line: 230, column: 2, scope: !4201)
!4224 = !DILocation(line: 231, column: 1, scope: !4201)
!4225 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !299, file: !299, line: 45, type: !301, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !295, retainedNodes: !4226)
!4226 = !{!4227}
!4227 = !DILocalVariable(name: "c", arg: 1, scope: !4225, file: !299, line: 45, type: !119)
!4228 = !DILocation(line: 0, scope: !4225)
!4229 = !DILocation(line: 50, column: 2, scope: !4225)
!4230 = distinct !DISubprogram(name: "__printk_hook_install", scope: !299, file: !299, line: 63, type: !4231, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !295, retainedNodes: !4233)
!4231 = !DISubroutineType(types: !4232)
!4232 = !{null, !300}
!4233 = !{!4234}
!4234 = !DILocalVariable(name: "fn", arg: 1, scope: !4230, file: !299, line: 63, type: !300)
!4235 = !DILocation(line: 0, scope: !4230)
!4236 = !DILocation(line: 65, column: 12, scope: !4230)
!4237 = !DILocation(line: 66, column: 1, scope: !4230)
!4238 = distinct !DISubprogram(name: "__printk_get_hook", scope: !299, file: !299, line: 76, type: !4239, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !295, retainedNodes: !2048)
!4239 = !DISubroutineType(types: !4240)
!4240 = !{!113}
!4241 = !DILocation(line: 78, column: 9, scope: !4238)
!4242 = !DILocation(line: 78, column: 2, scope: !4238)
!4243 = distinct !DISubprogram(name: "vprintk", scope: !299, file: !299, line: 113, type: !4244, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !295, retainedNodes: !4252)
!4244 = !DISubroutineType(types: !4245)
!4245 = !{null, !278, !4246}
!4246 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3315, line: 99, baseType: !4247)
!4247 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3315, line: 40, baseType: !4248)
!4248 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !299, baseType: !4249)
!4249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4250)
!4250 = !{!4251}
!4251 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4249, file: !299, line: 79, baseType: !113, size: 32)
!4252 = !{!4253, !4254, !4255}
!4253 = !DILocalVariable(name: "fmt", arg: 1, scope: !4243, file: !299, line: 113, type: !278)
!4254 = !DILocalVariable(name: "ap", arg: 2, scope: !4243, file: !299, line: 113, type: !4246)
!4255 = !DILocalVariable(name: "ctx", scope: !4256, file: !299, line: 121, type: !4258)
!4256 = distinct !DILexicalBlock(scope: !4257, file: !299, line: 120, column: 27)
!4257 = distinct !DILexicalBlock(scope: !4243, file: !299, line: 120, column: 6)
!4258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !299, line: 81, size: 32, elements: !4259)
!4259 = !{!4260, !4261}
!4260 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !4258, file: !299, line: 85, baseType: !32, size: 32)
!4261 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4258, file: !299, line: 86, baseType: !4262, offset: 32)
!4262 = !DICompositeType(tag: DW_TAG_array_type, baseType: !107, elements: !4263)
!4263 = !{!4264}
!4264 = !DISubrange(count: 0)
!4265 = !DILocation(line: 0, scope: !4243)
!4266 = !DILocation(line: 148, column: 3, scope: !4267)
!4267 = distinct !DILexicalBlock(scope: !4257, file: !299, line: 138, column: 9)
!4268 = !DILocation(line: 155, column: 1, scope: !4243)
!4269 = distinct !DISubprogram(name: "char_out", scope: !299, file: !299, line: 107, type: !4270, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !295, retainedNodes: !4272)
!4270 = !DISubroutineType(types: !4271)
!4271 = !{!119, !119, !113}
!4272 = !{!4273, !4274}
!4273 = !DILocalVariable(name: "c", arg: 1, scope: !4269, file: !299, line: 107, type: !119)
!4274 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !4269, file: !299, line: 107, type: !113)
!4275 = !DILocation(line: 0, scope: !4269)
!4276 = !DILocation(line: 110, column: 9, scope: !4269)
!4277 = !DILocation(line: 110, column: 2, scope: !4269)
!4278 = distinct !DISubprogram(name: "cbvprintf", scope: !3347, file: !3347, line: 739, type: !4279, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !295, retainedNodes: !4281)
!4279 = !DISubroutineType(types: !4280)
!4280 = !{!119, !3697, !113, !278, !4246}
!4281 = !{!4282, !4283, !4284, !4285}
!4282 = !DILocalVariable(name: "out", arg: 1, scope: !4278, file: !3347, line: 739, type: !3697)
!4283 = !DILocalVariable(name: "ctx", arg: 2, scope: !4278, file: !3347, line: 739, type: !113)
!4284 = !DILocalVariable(name: "format", arg: 3, scope: !4278, file: !3347, line: 739, type: !278)
!4285 = !DILocalVariable(name: "ap", arg: 4, scope: !4278, file: !3347, line: 739, type: !4246)
!4286 = !DILocation(line: 0, scope: !4278)
!4287 = !DILocation(line: 741, column: 9, scope: !4278)
!4288 = !DILocation(line: 741, column: 2, scope: !4278)
!4289 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !299, file: !299, line: 157, type: !4290, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !295, retainedNodes: !4292)
!4290 = !DISubroutineType(types: !4291)
!4291 = !{null, !106, !239}
!4292 = !{!4293, !4294, !4295}
!4293 = !DILocalVariable(name: "c", arg: 1, scope: !4289, file: !299, line: 157, type: !106)
!4294 = !DILocalVariable(name: "n", arg: 2, scope: !4289, file: !299, line: 157, type: !239)
!4295 = !DILocalVariable(name: "i", scope: !4289, file: !299, line: 159, type: !239)
!4296 = !DILocation(line: 0, scope: !4289)
!4297 = !DILocation(line: 164, column: 16, scope: !4298)
!4298 = distinct !DILexicalBlock(scope: !4299, file: !299, line: 164, column: 2)
!4299 = distinct !DILexicalBlock(scope: !4289, file: !299, line: 164, column: 2)
!4300 = !DILocation(line: 164, column: 2, scope: !4299)
!4301 = !DILocation(line: 165, column: 3, scope: !4302)
!4302 = distinct !DILexicalBlock(scope: !4298, file: !299, line: 164, column: 26)
!4303 = !DILocation(line: 165, column: 13, scope: !4302)
!4304 = !DILocation(line: 164, column: 22, scope: !4298)
!4305 = distinct !{!4305, !4300, !4306}
!4306 = !DILocation(line: 166, column: 2, scope: !4299)
!4307 = !DILocation(line: 171, column: 1, scope: !4289)
!4308 = distinct !DISubprogram(name: "printk", scope: !299, file: !299, line: 203, type: !4309, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !295, retainedNodes: !4311)
!4309 = !DISubroutineType(types: !4310)
!4310 = !{null, !278, null}
!4311 = !{!4312, !4313}
!4312 = !DILocalVariable(name: "fmt", arg: 1, scope: !4308, file: !299, line: 203, type: !278)
!4313 = !DILocalVariable(name: "ap", scope: !4308, file: !299, line: 205, type: !4246)
!4314 = !DILocation(line: 0, scope: !4308)
!4315 = !DILocation(line: 205, column: 2, scope: !4308)
!4316 = !DILocation(line: 205, column: 10, scope: !4308)
!4317 = !DILocation(line: 207, column: 2, scope: !4308)
!4318 = !DILocation(line: 209, column: 2, scope: !4308)
!4319 = !DILocation(line: 211, column: 2, scope: !4308)
!4320 = !DILocation(line: 212, column: 1, scope: !4308)
!4321 = distinct !DISubprogram(name: "snprintk", scope: !299, file: !299, line: 239, type: !4322, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !295, retainedNodes: !4324)
!4322 = !DISubroutineType(types: !4323)
!4323 = !{!119, !106, !239, !278, null}
!4324 = !{!4325, !4326, !4327, !4328, !4329}
!4325 = !DILocalVariable(name: "str", arg: 1, scope: !4321, file: !299, line: 239, type: !106)
!4326 = !DILocalVariable(name: "size", arg: 2, scope: !4321, file: !299, line: 239, type: !239)
!4327 = !DILocalVariable(name: "fmt", arg: 3, scope: !4321, file: !299, line: 239, type: !278)
!4328 = !DILocalVariable(name: "ap", scope: !4321, file: !299, line: 241, type: !4246)
!4329 = !DILocalVariable(name: "ret", scope: !4321, file: !299, line: 242, type: !119)
!4330 = !DILocation(line: 0, scope: !4321)
!4331 = !DILocation(line: 241, column: 2, scope: !4321)
!4332 = !DILocation(line: 241, column: 10, scope: !4321)
!4333 = !DILocation(line: 244, column: 2, scope: !4321)
!4334 = !DILocation(line: 245, column: 8, scope: !4321)
!4335 = !DILocation(line: 246, column: 2, scope: !4321)
!4336 = !DILocation(line: 249, column: 1, scope: !4321)
!4337 = !DILocation(line: 248, column: 2, scope: !4321)
!4338 = distinct !DISubprogram(name: "vsnprintk", scope: !299, file: !299, line: 251, type: !4339, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !295, retainedNodes: !4341)
!4339 = !DISubroutineType(types: !4340)
!4340 = !{!119, !106, !239, !278, !4246}
!4341 = !{!4342, !4343, !4344, !4345, !4346}
!4342 = !DILocalVariable(name: "str", arg: 1, scope: !4338, file: !299, line: 251, type: !106)
!4343 = !DILocalVariable(name: "size", arg: 2, scope: !4338, file: !299, line: 251, type: !239)
!4344 = !DILocalVariable(name: "fmt", arg: 3, scope: !4338, file: !299, line: 251, type: !278)
!4345 = !DILocalVariable(name: "ap", arg: 4, scope: !4338, file: !299, line: 251, type: !4246)
!4346 = !DILocalVariable(name: "ctx", scope: !4338, file: !299, line: 253, type: !4347)
!4347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !299, line: 217, size: 96, elements: !4348)
!4348 = !{!4349, !4350, !4351}
!4349 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4347, file: !299, line: 218, baseType: !106, size: 32)
!4350 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4347, file: !299, line: 219, baseType: !119, size: 32, offset: 32)
!4351 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4347, file: !299, line: 220, baseType: !119, size: 32, offset: 64)
!4352 = !DILocation(line: 0, scope: !4338)
!4353 = !DILocation(line: 253, column: 2, scope: !4338)
!4354 = !DILocation(line: 253, column: 21, scope: !4338)
!4355 = !DILocation(line: 253, column: 27, scope: !4338)
!4356 = !DILocation(line: 255, column: 2, scope: !4338)
!4357 = !DILocation(line: 257, column: 10, scope: !4358)
!4358 = distinct !DILexicalBlock(scope: !4338, file: !299, line: 257, column: 6)
!4359 = !DILocation(line: 257, column: 22, scope: !4358)
!4360 = !DILocation(line: 257, column: 16, scope: !4358)
!4361 = !DILocation(line: 257, column: 6, scope: !4338)
!4362 = !DILocation(line: 258, column: 3, scope: !4363)
!4363 = distinct !DILexicalBlock(scope: !4358, file: !299, line: 257, column: 27)
!4364 = !DILocation(line: 258, column: 18, scope: !4363)
!4365 = !DILocation(line: 259, column: 2, scope: !4363)
!4366 = !DILocation(line: 262, column: 1, scope: !4338)
!4367 = !DILocation(line: 261, column: 2, scope: !4338)
!4368 = distinct !DISubprogram(name: "str_out", scope: !299, file: !299, line: 223, type: !4369, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !295, retainedNodes: !4372)
!4369 = !DISubroutineType(types: !4370)
!4370 = !{!119, !119, !4371}
!4371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4347, size: 32)
!4372 = !{!4373, !4374}
!4373 = !DILocalVariable(name: "c", arg: 1, scope: !4368, file: !299, line: 223, type: !119)
!4374 = !DILocalVariable(name: "ctx", arg: 2, scope: !4368, file: !299, line: 223, type: !4371)
!4375 = !DILocation(line: 0, scope: !4368)
!4376 = !DILocation(line: 225, column: 11, scope: !4377)
!4377 = distinct !DILexicalBlock(scope: !4368, file: !299, line: 225, column: 6)
!4378 = !DILocation(line: 225, column: 15, scope: !4377)
!4379 = !DILocation(line: 0, scope: !4377)
!4380 = !DILocation(line: 225, column: 23, scope: !4377)
!4381 = !DILocation(line: 225, column: 45, scope: !4377)
!4382 = !DILocation(line: 225, column: 37, scope: !4377)
!4383 = !DILocation(line: 225, column: 6, scope: !4368)
!4384 = !DILocation(line: 226, column: 8, scope: !4385)
!4385 = distinct !DILexicalBlock(scope: !4377, file: !299, line: 225, column: 50)
!4386 = !DILocation(line: 226, column: 13, scope: !4385)
!4387 = !DILocation(line: 227, column: 3, scope: !4385)
!4388 = !DILocation(line: 230, column: 29, scope: !4389)
!4389 = distinct !DILexicalBlock(scope: !4368, file: !299, line: 230, column: 6)
!4390 = !DILocation(line: 230, column: 17, scope: !4389)
!4391 = !DILocation(line: 230, column: 6, scope: !4368)
!4392 = !DILocation(line: 231, column: 22, scope: !4393)
!4393 = distinct !DILexicalBlock(scope: !4389, file: !299, line: 230, column: 34)
!4394 = !DILocation(line: 231, column: 3, scope: !4393)
!4395 = !DILocation(line: 231, column: 26, scope: !4393)
!4396 = !DILocation(line: 232, column: 2, scope: !4393)
!4397 = !DILocation(line: 233, column: 28, scope: !4398)
!4398 = distinct !DILexicalBlock(scope: !4389, file: !299, line: 232, column: 9)
!4399 = !DILocation(line: 233, column: 22, scope: !4398)
!4400 = !DILocation(line: 233, column: 3, scope: !4398)
!4401 = !DILocation(line: 233, column: 26, scope: !4398)
!4402 = !DILocation(line: 237, column: 1, scope: !4368)
!4403 = distinct !DISubprogram(name: "z_thread_entry", scope: !4404, file: !4404, line: 30, type: !4405, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !4407)
!4404 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4405 = !DISubroutineType(types: !4406)
!4406 = !{null, !108, !113, !113, !113}
!4407 = !{!4408, !4409, !4410, !4411}
!4408 = !DILocalVariable(name: "entry", arg: 1, scope: !4403, file: !4404, line: 30, type: !108)
!4409 = !DILocalVariable(name: "p1", arg: 2, scope: !4403, file: !4404, line: 31, type: !113)
!4410 = !DILocalVariable(name: "p2", arg: 3, scope: !4403, file: !4404, line: 31, type: !113)
!4411 = !DILocalVariable(name: "p3", arg: 4, scope: !4403, file: !4404, line: 31, type: !113)
!4412 = !DILocation(line: 0, scope: !4403)
!4413 = !DILocation(line: 36, column: 2, scope: !4403)
!4414 = !DILocation(line: 38, column: 17, scope: !4403)
!4415 = !DILocation(line: 38, column: 2, scope: !4403)
!4416 = !DILocation(line: 45, column: 2, scope: !4403)
!4417 = distinct !DISubprogram(name: "k_current_get", scope: !245, file: !245, line: 530, type: !4418, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !2048)
!4418 = !DISubroutineType(types: !4419)
!4419 = !{!4420}
!4420 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !143, line: 347, baseType: !4421)
!4421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4422, size: 32)
!4422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !143, line: 245, size: 1280, elements: !4423)
!4423 = !{!4424, !4482, !4494, !4495, !4496, !4497, !4498, !4504, !4519}
!4424 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4422, file: !143, line: 247, baseType: !4425, size: 384)
!4425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !143, line: 57, size: 384, elements: !4426)
!4426 = !{!4427, !4451, !4458, !4459, !4460, !4469, !4470, !4471}
!4427 = !DIDerivedType(tag: DW_TAG_member, scope: !4425, file: !143, line: 60, baseType: !4428, size: 64)
!4428 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4425, file: !143, line: 60, size: 64, elements: !4429)
!4429 = !{!4430, !4445}
!4430 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !4428, file: !143, line: 61, baseType: !4431, size: 64)
!4431 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !153, line: 49, baseType: !4432)
!4432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !153, line: 37, size: 64, elements: !4433)
!4433 = !{!4434, !4440}
!4434 = !DIDerivedType(tag: DW_TAG_member, scope: !4432, file: !153, line: 38, baseType: !4435, size: 32)
!4435 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4432, file: !153, line: 38, size: 32, elements: !4436)
!4436 = !{!4437, !4439}
!4437 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4435, file: !153, line: 39, baseType: !4438, size: 32)
!4438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4432, size: 32)
!4439 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4435, file: !153, line: 40, baseType: !4438, size: 32)
!4440 = !DIDerivedType(tag: DW_TAG_member, scope: !4432, file: !153, line: 42, baseType: !4441, size: 32, offset: 32)
!4441 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4432, file: !153, line: 42, size: 32, elements: !4442)
!4442 = !{!4443, !4444}
!4443 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4441, file: !153, line: 43, baseType: !4438, size: 32)
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4441, file: !153, line: 44, baseType: !4438, size: 32)
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !4428, file: !143, line: 62, baseType: !4446, size: 64)
!4446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !169, line: 49, size: 64, elements: !4447)
!4447 = !{!4448}
!4448 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4446, file: !169, line: 50, baseType: !4449, size: 64)
!4449 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4450, size: 64, elements: !174)
!4450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4446, size: 32)
!4451 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !4425, file: !143, line: 68, baseType: !4452, size: 32, offset: 64)
!4452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4453, size: 32)
!4453 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !179, line: 233, baseType: !4454)
!4454 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !179, line: 231, size: 64, elements: !4455)
!4455 = !{!4456}
!4456 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !4454, file: !179, line: 232, baseType: !4457, size: 64)
!4457 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !153, line: 48, baseType: !4432)
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !4425, file: !143, line: 71, baseType: !185, size: 8, offset: 96)
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !4425, file: !143, line: 74, baseType: !185, size: 8, offset: 104)
!4460 = !DIDerivedType(tag: DW_TAG_member, scope: !4425, file: !143, line: 90, baseType: !4461, size: 16, offset: 112)
!4461 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4425, file: !143, line: 90, size: 16, elements: !4462)
!4462 = !{!4463, !4468}
!4463 = !DIDerivedType(tag: DW_TAG_member, scope: !4461, file: !143, line: 91, baseType: !4464, size: 16)
!4464 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4461, file: !143, line: 91, size: 16, elements: !4465)
!4465 = !{!4466, !4467}
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !4464, file: !143, line: 96, baseType: !195, size: 8)
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !4464, file: !143, line: 97, baseType: !185, size: 8, offset: 8)
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !4461, file: !143, line: 100, baseType: !199, size: 16)
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !4425, file: !143, line: 107, baseType: !118, size: 32, offset: 128)
!4470 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !4425, file: !143, line: 127, baseType: !113, size: 32, offset: 160)
!4471 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4425, file: !143, line: 131, baseType: !4472, size: 192, offset: 192)
!4472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !179, line: 244, size: 192, elements: !4473)
!4473 = !{!4474, !4475, !4481}
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4472, file: !179, line: 245, baseType: !4431, size: 64)
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4472, file: !179, line: 246, baseType: !4476, size: 32, offset: 64)
!4476 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !179, line: 242, baseType: !4477)
!4477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4478, size: 32)
!4478 = !DISubroutineType(types: !4479)
!4479 = !{null, !4480}
!4480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4472, size: 32)
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !4472, file: !179, line: 249, baseType: !116, size: 64, offset: 128)
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !4422, file: !143, line: 250, baseType: !4483, size: 288, offset: 384)
!4483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !216, line: 25, size: 288, elements: !4484)
!4484 = !{!4485, !4486, !4487, !4488, !4489, !4490, !4491, !4492, !4493}
!4485 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4483, file: !216, line: 26, baseType: !118, size: 32)
!4486 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4483, file: !216, line: 27, baseType: !118, size: 32, offset: 32)
!4487 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4483, file: !216, line: 28, baseType: !118, size: 32, offset: 64)
!4488 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4483, file: !216, line: 29, baseType: !118, size: 32, offset: 96)
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4483, file: !216, line: 30, baseType: !118, size: 32, offset: 128)
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4483, file: !216, line: 31, baseType: !118, size: 32, offset: 160)
!4491 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4483, file: !216, line: 32, baseType: !118, size: 32, offset: 192)
!4492 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4483, file: !216, line: 33, baseType: !118, size: 32, offset: 224)
!4493 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4483, file: !216, line: 34, baseType: !118, size: 32, offset: 256)
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !4422, file: !143, line: 253, baseType: !113, size: 32, offset: 672)
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !4422, file: !143, line: 256, baseType: !4453, size: 64, offset: 704)
!4496 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4422, file: !143, line: 279, baseType: !230, size: 256, offset: 768)
!4497 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !4422, file: !143, line: 294, baseType: !119, size: 32, offset: 1024)
!4498 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !4422, file: !143, line: 300, baseType: !4499, size: 96, offset: 1056)
!4499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !143, line: 149, size: 96, elements: !4500)
!4500 = !{!4501, !4502, !4503}
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4499, file: !143, line: 153, baseType: !22, size: 32)
!4502 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4499, file: !143, line: 162, baseType: !239, size: 32, offset: 32)
!4503 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !4499, file: !143, line: 168, baseType: !239, size: 32, offset: 64)
!4504 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !4422, file: !143, line: 325, baseType: !4505, size: 32, offset: 1152)
!4505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4506, size: 32)
!4506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !245, line: 5073, size: 192, elements: !4507)
!4507 = !{!4508, !4514, !4515}
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4506, file: !245, line: 5074, baseType: !4509, size: 96)
!4509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !249, line: 56, size: 96, elements: !4510)
!4510 = !{!4511, !4512, !4513}
!4511 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4509, file: !249, line: 57, baseType: !252, size: 32)
!4512 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4509, file: !249, line: 58, baseType: !113, size: 32, offset: 32)
!4513 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4509, file: !249, line: 59, baseType: !239, size: 32, offset: 64)
!4514 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !4506, file: !245, line: 5075, baseType: !4453, size: 64, offset: 96)
!4515 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4506, file: !245, line: 5076, baseType: !4516, size: 32, offset: 160)
!4516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !4517)
!4517 = !{!4518}
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !4516, file: !259, line: 52, baseType: !22, size: 32)
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4422, file: !143, line: 343, baseType: !4520, size: 64, offset: 1184)
!4520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !216, line: 60, size: 64, elements: !4521)
!4521 = !{!4522, !4523}
!4522 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !4520, file: !216, line: 63, baseType: !118, size: 32)
!4523 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !4520, file: !216, line: 66, baseType: !118, size: 32, offset: 32)
!4524 = !DILocation(line: 535, column: 9, scope: !4417)
!4525 = !DILocation(line: 535, column: 2, scope: !4417)
!4526 = distinct !DISubprogram(name: "k_thread_abort", scope: !3233, file: !3233, line: 188, type: !4527, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !4529)
!4527 = !DISubroutineType(types: !4528)
!4528 = !{null, !4420}
!4529 = !{!4530}
!4530 = !DILocalVariable(name: "thread", arg: 1, scope: !4526, file: !3233, line: 188, type: !4420)
!4531 = !DILocation(line: 0, scope: !4526)
!4532 = !DILocation(line: 197, column: 2, scope: !4533)
!4533 = distinct !DILexicalBlock(scope: !4526, file: !3233, line: 197, column: 2)
!4534 = !{i64 2154155256}
!4535 = !DILocation(line: 198, column: 2, scope: !4526)
!4536 = !DILocation(line: 199, column: 1, scope: !4526)
!4537 = distinct !DISubprogram(name: "z_current_get", scope: !3233, file: !3233, line: 173, type: !4418, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !2048)
!4538 = !DILocation(line: 180, column: 2, scope: !4539)
!4539 = distinct !DILexicalBlock(scope: !4537, file: !3233, line: 180, column: 2)
!4540 = !{i64 2154155188}
!4541 = !DILocation(line: 181, column: 9, scope: !4537)
!4542 = !DILocation(line: 181, column: 2, scope: !4537)
!4543 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2402, file: !2402, line: 1338, type: !4544, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2398, retainedNodes: !4552)
!4544 = !DISubroutineType(types: !4545)
!4545 = !{!119, !3697, !113, !278, !4546, !118}
!4546 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3315, line: 99, baseType: !4547)
!4547 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3315, line: 40, baseType: !4548)
!4548 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2402, baseType: !4549)
!4549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4550)
!4550 = !{!4551}
!4551 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4549, file: !2402, baseType: !113, size: 32)
!4552 = !{!4553, !4554, !4555, !4556, !4557, !4558, !4562, !4563, !4564, !4566, !4571, !4614, !4617, !4620, !4621, !4622, !4623, !4624, !4625, !4626, !4629, !4630, !4631, !4635, !4638, !4640, !4643, !4644, !4645, !4650, !4656, !4659, !4663, !4669, !4673, !4676, !4678, !4681}
!4553 = !DILocalVariable(name: "out", arg: 1, scope: !4543, file: !2402, line: 1338, type: !3697)
!4554 = !DILocalVariable(name: "ctx", arg: 2, scope: !4543, file: !2402, line: 1338, type: !113)
!4555 = !DILocalVariable(name: "fp", arg: 3, scope: !4543, file: !2402, line: 1338, type: !278)
!4556 = !DILocalVariable(name: "ap", arg: 4, scope: !4543, file: !2402, line: 1339, type: !4546)
!4557 = !DILocalVariable(name: "flags", arg: 5, scope: !4543, file: !2402, line: 1339, type: !118)
!4558 = !DILocalVariable(name: "buf", scope: !4543, file: !2402, line: 1341, type: !4559)
!4559 = !DICompositeType(tag: DW_TAG_array_type, baseType: !107, size: 176, elements: !4560)
!4560 = !{!4561}
!4561 = !DISubrange(count: 22)
!4562 = !DILocalVariable(name: "count", scope: !4543, file: !2402, line: 1342, type: !239)
!4563 = !DILocalVariable(name: "sint", scope: !4543, file: !2402, line: 1343, type: !2421)
!4564 = !DILocalVariable(name: "tagged_ap", scope: !4543, file: !2402, line: 1345, type: !4565)
!4565 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !345)
!4566 = !DILocalVariable(name: "rc", scope: !4567, file: !2402, line: 1377, type: !119)
!4567 = distinct !DILexicalBlock(scope: !4568, file: !2402, line: 1377, column: 4)
!4568 = distinct !DILexicalBlock(scope: !4569, file: !2402, line: 1376, column: 19)
!4569 = distinct !DILexicalBlock(scope: !4570, file: !2402, line: 1376, column: 7)
!4570 = distinct !DILexicalBlock(scope: !4543, file: !2402, line: 1375, column: 19)
!4571 = !DILocalVariable(name: "state", scope: !4570, file: !2402, line: 1395, type: !4572)
!4572 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4543, file: !2402, line: 1392, size: 192, elements: !4573)
!4573 = !{!4574, !4582}
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4572, file: !2402, line: 1393, baseType: !4575, size: 64)
!4575 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2402, line: 166, size: 64, elements: !4576)
!4576 = !{!4577, !4578, !4579, !4580, !4581}
!4577 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4575, file: !2402, line: 168, baseType: !2421, size: 64)
!4578 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4575, file: !2402, line: 171, baseType: !2424, size: 64)
!4579 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4575, file: !2402, line: 174, baseType: !276, size: 64)
!4580 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4575, file: !2402, line: 177, baseType: !274, size: 64)
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4575, file: !2402, line: 180, baseType: !113, size: 32)
!4582 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4572, file: !2402, line: 1394, baseType: !4583, size: 96, offset: 64)
!4583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2402, line: 189, size: 96, elements: !4584)
!4584 = !{!4585, !4586, !4587, !4588, !4589, !4590, !4591, !4592, !4593, !4594, !4595, !4596, !4597, !4598, !4599, !4600, !4601, !4602, !4603, !4604, !4609}
!4585 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4583, file: !2402, line: 191, baseType: !345, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4586 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4583, file: !2402, line: 194, baseType: !345, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4587 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4583, file: !2402, line: 197, baseType: !345, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4588 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4583, file: !2402, line: 200, baseType: !345, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4589 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4583, file: !2402, line: 203, baseType: !345, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4590 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4583, file: !2402, line: 206, baseType: !345, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4591 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4583, file: !2402, line: 209, baseType: !345, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4592 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4583, file: !2402, line: 212, baseType: !345, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4593 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4583, file: !2402, line: 219, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4594 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4583, file: !2402, line: 222, baseType: !345, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4595 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4583, file: !2402, line: 229, baseType: !345, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4596 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4583, file: !2402, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4597 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4583, file: !2402, line: 238, baseType: !345, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4598 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4583, file: !2402, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4599 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4583, file: !2402, line: 244, baseType: !345, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4600 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4583, file: !2402, line: 247, baseType: !345, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4601 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4583, file: !2402, line: 252, baseType: !345, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4602 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4583, file: !2402, line: 257, baseType: !345, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4603 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4583, file: !2402, line: 260, baseType: !186, size: 8, offset: 24)
!4604 = !DIDerivedType(tag: DW_TAG_member, scope: !4583, file: !2402, line: 262, baseType: !4605, size: 32, offset: 32)
!4605 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4583, file: !2402, line: 262, size: 32, elements: !4606)
!4606 = !{!4607, !4608}
!4607 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4605, file: !2402, line: 267, baseType: !119, size: 32)
!4608 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4605, file: !2402, line: 289, baseType: !119, size: 32)
!4609 = !DIDerivedType(tag: DW_TAG_member, scope: !4583, file: !2402, line: 292, baseType: !4610, size: 32, offset: 64)
!4610 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4583, file: !2402, line: 292, size: 32, elements: !4611)
!4611 = !{!4612, !4613}
!4612 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4610, file: !2402, line: 297, baseType: !119, size: 32)
!4613 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4610, file: !2402, line: 306, baseType: !119, size: 32)
!4614 = !DILocalVariable(name: "conv", scope: !4570, file: !2402, line: 1400, type: !4615)
!4615 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4616)
!4616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4583, size: 32)
!4617 = !DILocalVariable(name: "value", scope: !4570, file: !2402, line: 1401, type: !4618)
!4618 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4619)
!4619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4575, size: 32)
!4620 = !DILocalVariable(name: "sp", scope: !4570, file: !2402, line: 1402, type: !278)
!4621 = !DILocalVariable(name: "width", scope: !4570, file: !2402, line: 1403, type: !119)
!4622 = !DILocalVariable(name: "precision", scope: !4570, file: !2402, line: 1404, type: !119)
!4623 = !DILocalVariable(name: "bps", scope: !4570, file: !2402, line: 1405, type: !278)
!4624 = !DILocalVariable(name: "bpe", scope: !4570, file: !2402, line: 1406, type: !278)
!4625 = !DILocalVariable(name: "sign", scope: !4570, file: !2402, line: 1407, type: !107)
!4626 = !DILocalVariable(name: "arg", scope: !4627, file: !2402, line: 1432, type: !119)
!4627 = distinct !DILexicalBlock(scope: !4628, file: !2402, line: 1431, column: 24)
!4628 = distinct !DILexicalBlock(scope: !4570, file: !2402, line: 1431, column: 7)
!4629 = !DILocalVariable(name: "specifier_cat", scope: !4570, file: !2402, line: 1468, type: !2401)
!4630 = !DILocalVariable(name: "length_mod", scope: !4570, file: !2402, line: 1470, type: !2409)
!4631 = !DILocalVariable(name: "rc", scope: !4632, file: !2402, line: 1575, type: !119)
!4632 = distinct !DILexicalBlock(scope: !4633, file: !2402, line: 1575, column: 4)
!4633 = distinct !DILexicalBlock(scope: !4634, file: !2402, line: 1574, column: 43)
!4634 = distinct !DILexicalBlock(scope: !4570, file: !2402, line: 1574, column: 7)
!4635 = !DILocalVariable(name: "rc", scope: !4636, file: !2402, line: 1584, type: !119)
!4636 = distinct !DILexicalBlock(scope: !4637, file: !2402, line: 1584, column: 4)
!4637 = distinct !DILexicalBlock(scope: !4570, file: !2402, line: 1582, column: 28)
!4638 = !DILocalVariable(name: "len", scope: !4639, file: !2402, line: 1589, type: !239)
!4639 = distinct !DILexicalBlock(scope: !4637, file: !2402, line: 1586, column: 13)
!4640 = !DILocalVariable(name: "len", scope: !4641, file: !2402, line: 1641, type: !239)
!4641 = distinct !DILexicalBlock(scope: !4642, file: !2402, line: 1640, column: 24)
!4642 = distinct !DILexicalBlock(scope: !4637, file: !2402, line: 1640, column: 8)
!4643 = !DILocalVariable(name: "nj_len", scope: !4570, file: !2402, line: 1722, type: !239)
!4644 = !DILocalVariable(name: "pad_len", scope: !4570, file: !2402, line: 1723, type: !119)
!4645 = !DILocalVariable(name: "pad", scope: !4646, file: !2402, line: 1751, type: !107)
!4646 = distinct !DILexicalBlock(scope: !4647, file: !2402, line: 1750, column: 26)
!4647 = distinct !DILexicalBlock(scope: !4648, file: !2402, line: 1750, column: 8)
!4648 = distinct !DILexicalBlock(scope: !4649, file: !2402, line: 1747, column: 18)
!4649 = distinct !DILexicalBlock(scope: !4570, file: !2402, line: 1747, column: 7)
!4650 = !DILocalVariable(name: "rc", scope: !4651, file: !2402, line: 1758, type: !119)
!4651 = distinct !DILexicalBlock(scope: !4652, file: !2402, line: 1758, column: 7)
!4652 = distinct !DILexicalBlock(scope: !4653, file: !2402, line: 1757, column: 21)
!4653 = distinct !DILexicalBlock(scope: !4654, file: !2402, line: 1757, column: 10)
!4654 = distinct !DILexicalBlock(scope: !4655, file: !2402, line: 1756, column: 26)
!4655 = distinct !DILexicalBlock(scope: !4646, file: !2402, line: 1756, column: 9)
!4656 = !DILocalVariable(name: "rc", scope: !4657, file: !2402, line: 1765, type: !119)
!4657 = distinct !DILexicalBlock(scope: !4658, file: !2402, line: 1765, column: 6)
!4658 = distinct !DILexicalBlock(scope: !4646, file: !2402, line: 1764, column: 25)
!4659 = !DILocalVariable(name: "rc", scope: !4660, file: !2402, line: 1774, type: !119)
!4660 = distinct !DILexicalBlock(scope: !4661, file: !2402, line: 1774, column: 4)
!4661 = distinct !DILexicalBlock(scope: !4662, file: !2402, line: 1773, column: 18)
!4662 = distinct !DILexicalBlock(scope: !4570, file: !2402, line: 1773, column: 7)
!4663 = !DILocalVariable(name: "rc", scope: !4664, file: !2402, line: 1819, type: !119)
!4664 = distinct !DILexicalBlock(scope: !4665, file: !2402, line: 1819, column: 5)
!4665 = distinct !DILexicalBlock(scope: !4666, file: !2402, line: 1818, column: 44)
!4666 = distinct !DILexicalBlock(scope: !4667, file: !2402, line: 1818, column: 8)
!4667 = distinct !DILexicalBlock(scope: !4668, file: !2402, line: 1817, column: 10)
!4668 = distinct !DILexicalBlock(scope: !4570, file: !2402, line: 1777, column: 7)
!4669 = !DILocalVariable(name: "rc", scope: !4670, file: !2402, line: 1823, type: !119)
!4670 = distinct !DILexicalBlock(scope: !4671, file: !2402, line: 1823, column: 5)
!4671 = distinct !DILexicalBlock(scope: !4672, file: !2402, line: 1822, column: 26)
!4672 = distinct !DILexicalBlock(scope: !4667, file: !2402, line: 1822, column: 8)
!4673 = !DILocalVariable(name: "rc", scope: !4674, file: !2402, line: 1828, type: !119)
!4674 = distinct !DILexicalBlock(scope: !4675, file: !2402, line: 1828, column: 5)
!4675 = distinct !DILexicalBlock(scope: !4667, file: !2402, line: 1827, column: 26)
!4676 = !DILocalVariable(name: "rc", scope: !4677, file: !2402, line: 1831, type: !119)
!4677 = distinct !DILexicalBlock(scope: !4667, file: !2402, line: 1831, column: 4)
!4678 = !DILocalVariable(name: "rc", scope: !4679, file: !2402, line: 1836, type: !119)
!4679 = distinct !DILexicalBlock(scope: !4680, file: !2402, line: 1836, column: 4)
!4680 = distinct !DILexicalBlock(scope: !4570, file: !2402, line: 1835, column: 21)
!4681 = !DILabel(scope: !4637, name: "prec_int_pad0", file: !2402, line: 1634)
!4682 = !DILocation(line: 0, scope: !4543)
!4683 = !DILocation(line: 1341, column: 2, scope: !4543)
!4684 = !DILocation(line: 1341, column: 7, scope: !4543)
!4685 = !DILocation(line: 1375, column: 2, scope: !4543)
!4686 = !DILocation(line: 1342, column: 9, scope: !4543)
!4687 = !DILocation(line: 1375, column: 9, scope: !4543)
!4688 = !DILocation(line: 1377, column: 4, scope: !4567)
!4689 = !DILocation(line: 0, scope: !4567)
!4690 = !DILocation(line: 1377, column: 4, scope: !4691)
!4691 = distinct !DILexicalBlock(scope: !4567, file: !2402, line: 1377, column: 4)
!4692 = distinct !{!4692, !4685, !4693}
!4693 = !DILocation(line: 1839, column: 2, scope: !4543)
!4694 = !DILocation(line: 1392, column: 3, scope: !4570)
!4695 = !DILocation(line: 1395, column: 5, scope: !4570)
!4696 = !DILocation(line: 0, scope: !4570)
!4697 = !DILocation(line: 1409, column: 8, scope: !4570)
!4698 = !DILocation(line: 1414, column: 13, scope: !4699)
!4699 = distinct !DILexicalBlock(scope: !4570, file: !2402, line: 1414, column: 7)
!4700 = !DILocation(line: 1414, column: 7, scope: !4570)
!4701 = !DILocation(line: 1415, column: 12, scope: !4702)
!4702 = distinct !DILexicalBlock(scope: !4699, file: !2402, line: 1414, column: 25)
!4703 = !DILocation(line: 1417, column: 14, scope: !4704)
!4704 = distinct !DILexicalBlock(scope: !4702, file: !2402, line: 1417, column: 8)
!4705 = !DILocation(line: 1417, column: 8, scope: !4702)
!4706 = !DILocation(line: 1418, column: 21, scope: !4707)
!4707 = distinct !DILexicalBlock(scope: !4704, file: !2402, line: 1417, column: 19)
!4708 = !DILocation(line: 1419, column: 13, scope: !4707)
!4709 = !DILocation(line: 1420, column: 4, scope: !4707)
!4710 = !DILocation(line: 1421, column: 20, scope: !4711)
!4711 = distinct !DILexicalBlock(scope: !4699, file: !2402, line: 1421, column: 14)
!4712 = !DILocation(line: 1421, column: 14, scope: !4699)
!4713 = !DILocation(line: 1431, column: 13, scope: !4628)
!4714 = !DILocation(line: 1431, column: 7, scope: !4570)
!4715 = !DILocation(line: 1432, column: 14, scope: !4627)
!4716 = !DILocation(line: 0, scope: !4627)
!4717 = !DILocation(line: 1434, column: 12, scope: !4718)
!4718 = distinct !DILexicalBlock(scope: !4627, file: !2402, line: 1434, column: 8)
!4719 = !DILocation(line: 1434, column: 8, scope: !4627)
!4720 = !DILocation(line: 1435, column: 24, scope: !4721)
!4721 = distinct !DILexicalBlock(scope: !4718, file: !2402, line: 1434, column: 17)
!4722 = !DILocation(line: 1436, column: 4, scope: !4721)
!4723 = !DILocation(line: 1439, column: 20, scope: !4724)
!4724 = distinct !DILexicalBlock(scope: !4628, file: !2402, line: 1439, column: 14)
!4725 = !DILocation(line: 1439, column: 14, scope: !4628)
!4726 = !DILocation(line: 1469, column: 37, scope: !4570)
!4727 = !DILocation(line: 1448, column: 20, scope: !4570)
!4728 = !DILocation(line: 1449, column: 22, scope: !4570)
!4729 = !DILocation(line: 1471, column: 34, scope: !4570)
!4730 = !DILocation(line: 1478, column: 7, scope: !4570)
!4731 = !DILocation(line: 1479, column: 4, scope: !4732)
!4732 = distinct !DILexicalBlock(scope: !4733, file: !2402, line: 1478, column: 40)
!4733 = distinct !DILexicalBlock(scope: !4570, file: !2402, line: 1478, column: 7)
!4734 = !DILocation(line: 1484, column: 19, scope: !4735)
!4735 = distinct !DILexicalBlock(scope: !4732, file: !2402, line: 1479, column: 24)
!4736 = !DILocation(line: 1484, column: 17, scope: !4735)
!4737 = !DILocation(line: 1485, column: 5, scope: !4735)
!4738 = !DILocation(line: 1492, column: 20, scope: !4739)
!4739 = distinct !DILexicalBlock(scope: !4740, file: !2402, line: 1491, column: 12)
!4740 = distinct !DILexicalBlock(scope: !4735, file: !2402, line: 1487, column: 9)
!4741 = !DILocation(line: 1492, column: 18, scope: !4739)
!4742 = !DILocation(line: 1494, column: 5, scope: !4735)
!4743 = !DILocation(line: 1497, column: 23, scope: !4735)
!4744 = !DILocation(line: 1496, column: 17, scope: !4735)
!4745 = !DILocation(line: 1498, column: 5, scope: !4735)
!4746 = !DILocation(line: 1501, column: 23, scope: !4735)
!4747 = !DILocation(line: 1500, column: 17, scope: !4735)
!4748 = !DILocation(line: 1502, column: 5, scope: !4735)
!4749 = !DILocation(line: 1513, column: 23, scope: !4735)
!4750 = !DILocation(line: 1513, column: 6, scope: !4735)
!4751 = !DILocation(line: 1512, column: 17, scope: !4735)
!4752 = !DILocation(line: 1514, column: 5, scope: !4735)
!4753 = !DILocation(line: 0, scope: !4735)
!4754 = !DILocation(line: 1516, column: 8, scope: !4732)
!4755 = !DILocation(line: 1517, column: 19, scope: !4756)
!4756 = distinct !DILexicalBlock(scope: !4757, file: !2402, line: 1516, column: 33)
!4757 = distinct !DILexicalBlock(scope: !4732, file: !2402, line: 1516, column: 8)
!4758 = !DILocation(line: 1517, column: 17, scope: !4756)
!4759 = !DILocation(line: 1518, column: 4, scope: !4756)
!4760 = !DILocation(line: 1519, column: 19, scope: !4761)
!4761 = distinct !DILexicalBlock(scope: !4762, file: !2402, line: 1518, column: 39)
!4762 = distinct !DILexicalBlock(scope: !4757, file: !2402, line: 1518, column: 15)
!4763 = !DILocation(line: 1519, column: 17, scope: !4761)
!4764 = !DILocation(line: 1520, column: 4, scope: !4761)
!4765 = !DILocation(line: 1522, column: 4, scope: !4766)
!4766 = distinct !DILexicalBlock(scope: !4767, file: !2402, line: 1521, column: 47)
!4767 = distinct !DILexicalBlock(scope: !4733, file: !2402, line: 1521, column: 14)
!4768 = !DILocation(line: 1527, column: 19, scope: !4769)
!4769 = distinct !DILexicalBlock(scope: !4766, file: !2402, line: 1522, column: 24)
!4770 = !DILocation(line: 1527, column: 17, scope: !4769)
!4771 = !DILocation(line: 1528, column: 5, scope: !4769)
!4772 = !DILocation(line: 0, scope: !4773)
!4773 = distinct !DILexicalBlock(scope: !4769, file: !2402, line: 1530, column: 9)
!4774 = !DILocation(line: 1540, column: 23, scope: !4769)
!4775 = !DILocation(line: 1539, column: 17, scope: !4769)
!4776 = !DILocation(line: 1542, column: 5, scope: !4769)
!4777 = !DILocation(line: 1545, column: 23, scope: !4769)
!4778 = !DILocation(line: 1544, column: 17, scope: !4769)
!4779 = !DILocation(line: 1547, column: 5, scope: !4769)
!4780 = !DILocation(line: 1551, column: 23, scope: !4769)
!4781 = !DILocation(line: 1551, column: 6, scope: !4769)
!4782 = !DILocation(line: 1550, column: 17, scope: !4769)
!4783 = !DILocation(line: 1552, column: 5, scope: !4769)
!4784 = !DILocation(line: 0, scope: !4769)
!4785 = !DILocation(line: 1554, column: 8, scope: !4766)
!4786 = !DILocation(line: 1555, column: 19, scope: !4787)
!4787 = distinct !DILexicalBlock(scope: !4788, file: !2402, line: 1554, column: 33)
!4788 = distinct !DILexicalBlock(scope: !4766, file: !2402, line: 1554, column: 8)
!4789 = !DILocation(line: 1555, column: 17, scope: !4787)
!4790 = !DILocation(line: 1556, column: 4, scope: !4787)
!4791 = !DILocation(line: 1557, column: 19, scope: !4792)
!4792 = distinct !DILexicalBlock(scope: !4793, file: !2402, line: 1556, column: 39)
!4793 = distinct !DILexicalBlock(scope: !4788, file: !2402, line: 1556, column: 15)
!4794 = !DILocation(line: 1557, column: 17, scope: !4792)
!4795 = !DILocation(line: 1558, column: 4, scope: !4792)
!4796 = !DILocation(line: 0, scope: !4797)
!4797 = distinct !DILexicalBlock(scope: !4798, file: !2402, line: 1560, column: 8)
!4798 = distinct !DILexicalBlock(scope: !4799, file: !2402, line: 1559, column: 45)
!4799 = distinct !DILexicalBlock(scope: !4767, file: !2402, line: 1559, column: 14)
!4800 = !DILocation(line: 1566, column: 17, scope: !4801)
!4801 = distinct !DILexicalBlock(scope: !4802, file: !2402, line: 1565, column: 46)
!4802 = distinct !DILexicalBlock(scope: !4799, file: !2402, line: 1565, column: 14)
!4803 = !DILocation(line: 1566, column: 15, scope: !4801)
!4804 = !DILocation(line: 1567, column: 3, scope: !4801)
!4805 = !DILocation(line: 1574, column: 21, scope: !4634)
!4806 = !DILocation(line: 1575, column: 4, scope: !4632)
!4807 = !DILocation(line: 0, scope: !4632)
!4808 = !DILocation(line: 1575, column: 4, scope: !4809)
!4809 = distinct !DILexicalBlock(scope: !4632, file: !2402, line: 1575, column: 4)
!4810 = !DILocation(line: 1582, column: 17, scope: !4570)
!4811 = !DILocation(line: 1582, column: 3, scope: !4570)
!4812 = !DILocation(line: 1584, column: 4, scope: !4636)
!4813 = !DILocation(line: 0, scope: !4636)
!4814 = !DILocation(line: 1584, column: 4, scope: !4815)
!4815 = distinct !DILexicalBlock(scope: !4636, file: !2402, line: 1584, column: 4)
!4816 = !DILocation(line: 1587, column: 31, scope: !4639)
!4817 = !DILocation(line: 1591, column: 18, scope: !4818)
!4818 = distinct !DILexicalBlock(scope: !4639, file: !2402, line: 1591, column: 8)
!4819 = !DILocation(line: 1591, column: 8, scope: !4639)
!4820 = !DILocation(line: 1592, column: 11, scope: !4821)
!4821 = distinct !DILexicalBlock(scope: !4818, file: !2402, line: 1591, column: 24)
!4822 = !DILocation(line: 0, scope: !4639)
!4823 = !DILocation(line: 1593, column: 4, scope: !4821)
!4824 = !DILocation(line: 1594, column: 11, scope: !4825)
!4825 = distinct !DILexicalBlock(scope: !4818, file: !2402, line: 1593, column: 11)
!4826 = !DILocation(line: 1604, column: 51, scope: !4637)
!4827 = !DILocation(line: 1604, column: 13, scope: !4637)
!4828 = !DILocation(line: 1604, column: 11, scope: !4637)
!4829 = !DILocation(line: 1606, column: 4, scope: !4637)
!4830 = !DILocation(line: 1609, column: 14, scope: !4831)
!4831 = distinct !DILexicalBlock(scope: !4637, file: !2402, line: 1609, column: 8)
!4832 = !DILocation(line: 1609, column: 8, scope: !4637)
!4833 = !DILocation(line: 1619, column: 18, scope: !4637)
!4834 = !DILocation(line: 1620, column: 13, scope: !4835)
!4835 = distinct !DILexicalBlock(scope: !4637, file: !2402, line: 1620, column: 8)
!4836 = !DILocation(line: 1620, column: 8, scope: !4637)
!4837 = !DILocation(line: 1622, column: 36, scope: !4838)
!4838 = distinct !DILexicalBlock(scope: !4835, file: !2402, line: 1620, column: 18)
!4839 = !DILocation(line: 1622, column: 17, scope: !4838)
!4840 = !DILocation(line: 1623, column: 4, scope: !4838)
!4841 = !DILocation(line: 1632, column: 29, scope: !4637)
!4842 = !DILocation(line: 1632, column: 10, scope: !4637)
!4843 = !DILocation(line: 1632, column: 4, scope: !4637)
!4844 = !DILocation(line: 1407, column: 8, scope: !4570)
!4845 = !DILocation(line: 0, scope: !4637)
!4846 = !DILocation(line: 1634, column: 3, scope: !4637)
!4847 = !DILocation(line: 1640, column: 18, scope: !4642)
!4848 = !DILocation(line: 1640, column: 8, scope: !4637)
!4849 = !DILocation(line: 1729, column: 13, scope: !4850)
!4850 = distinct !DILexicalBlock(scope: !4570, file: !2402, line: 1729, column: 7)
!4851 = !DILocation(line: 1641, column: 22, scope: !4641)
!4852 = !DILocation(line: 0, scope: !4641)
!4853 = !DILocation(line: 1646, column: 21, scope: !4641)
!4854 = !DILocation(line: 1649, column: 13, scope: !4855)
!4855 = distinct !DILexicalBlock(scope: !4641, file: !2402, line: 1649, column: 9)
!4856 = !DILocation(line: 1649, column: 9, scope: !4641)
!4857 = !DILocation(line: 1650, column: 35, scope: !4858)
!4858 = distinct !DILexicalBlock(scope: !4855, file: !2402, line: 1649, column: 34)
!4859 = !DILocation(line: 1650, column: 23, scope: !4858)
!4860 = !DILocation(line: 1651, column: 5, scope: !4858)
!4861 = !DILocation(line: 1660, column: 15, scope: !4862)
!4862 = distinct !DILexicalBlock(scope: !4637, file: !2402, line: 1660, column: 8)
!4863 = !DILocation(line: 1660, column: 19, scope: !4862)
!4864 = !DILocation(line: 1660, column: 8, scope: !4637)
!4865 = !DILocation(line: 1661, column: 23, scope: !4866)
!4866 = distinct !DILexicalBlock(scope: !4862, file: !2402, line: 1660, column: 28)
!4867 = !DILocation(line: 1661, column: 11, scope: !4866)
!4868 = !DILocation(line: 1665, column: 22, scope: !4866)
!4869 = !DILocation(line: 1666, column: 21, scope: !4866)
!4870 = !DILocation(line: 1668, column: 5, scope: !4866)
!4871 = !DILocation(line: 1677, column: 30, scope: !4872)
!4872 = distinct !DILexicalBlock(scope: !4873, file: !2402, line: 1676, column: 49)
!4873 = distinct !DILexicalBlock(scope: !4637, file: !2402, line: 1676, column: 8)
!4874 = !DILocation(line: 1677, column: 5, scope: !4872)
!4875 = !DILocation(line: 1680, column: 4, scope: !4637)
!4876 = !DILocation(line: 0, scope: !4818)
!4877 = !DILocation(line: 1597, column: 14, scope: !4639)
!4878 = !DILocation(line: 1699, column: 11, scope: !4879)
!4879 = distinct !DILexicalBlock(scope: !4570, file: !2402, line: 1699, column: 7)
!4880 = !DILocation(line: 1699, column: 7, scope: !4570)
!4881 = !DILocation(line: 1725, column: 7, scope: !4882)
!4882 = distinct !DILexicalBlock(scope: !4570, file: !2402, line: 1725, column: 7)
!4883 = !DILocation(line: 1725, column: 12, scope: !4882)
!4884 = !DILocation(line: 1747, column: 13, scope: !4649)
!4885 = !DILocation(line: 1747, column: 7, scope: !4570)
!4886 = !DILocation(line: 1722, column: 24, scope: !4570)
!4887 = !DILocation(line: 1725, column: 7, scope: !4570)
!4888 = !DILocation(line: 1729, column: 7, scope: !4570)
!4889 = !DILocation(line: 1736, column: 13, scope: !4890)
!4890 = distinct !DILexicalBlock(scope: !4570, file: !2402, line: 1736, column: 7)
!4891 = !DILocation(line: 1735, column: 19, scope: !4570)
!4892 = !DILocation(line: 1736, column: 7, scope: !4570)
!4893 = !DILocation(line: 1748, column: 10, scope: !4648)
!4894 = !DILocation(line: 1750, column: 15, scope: !4647)
!4895 = !DILocation(line: 1750, column: 8, scope: !4648)
!4896 = !DILocation(line: 0, scope: !4646)
!4897 = !DILocation(line: 1756, column: 15, scope: !4655)
!4898 = !DILocation(line: 1756, column: 9, scope: !4646)
!4899 = !DILocation(line: 1758, column: 7, scope: !4651)
!4900 = !DILocation(line: 0, scope: !4651)
!4901 = !DILocation(line: 1758, column: 7, scope: !4902)
!4902 = distinct !DILexicalBlock(scope: !4651, file: !2402, line: 1758, column: 7)
!4903 = !DILocation(line: 1764, column: 5, scope: !4646)
!4904 = !DILocation(line: 0, scope: !4648)
!4905 = !DILocation(line: 1764, column: 20, scope: !4646)
!4906 = !DILocation(line: 1764, column: 17, scope: !4646)
!4907 = !DILocation(line: 1765, column: 6, scope: !4657)
!4908 = !DILocation(line: 0, scope: !4657)
!4909 = !DILocation(line: 1765, column: 6, scope: !4910)
!4910 = distinct !DILexicalBlock(scope: !4657, file: !2402, line: 1765, column: 6)
!4911 = distinct !{!4911, !4903, !4912}
!4912 = !DILocation(line: 1766, column: 5, scope: !4646)
!4913 = !DILocation(line: 1773, column: 12, scope: !4662)
!4914 = !DILocation(line: 1773, column: 7, scope: !4570)
!4915 = !DILocation(line: 1773, column: 7, scope: !4662)
!4916 = !DILocation(line: 1774, column: 4, scope: !4660)
!4917 = !DILocation(line: 0, scope: !4660)
!4918 = !DILocation(line: 1774, column: 4, scope: !4919)
!4919 = distinct !DILexicalBlock(scope: !4660, file: !2402, line: 1774, column: 4)
!4920 = !DILocation(line: 1818, column: 8, scope: !4666)
!4921 = !DILocation(line: 1818, column: 27, scope: !4666)
!4922 = !DILocation(line: 1818, column: 25, scope: !4666)
!4923 = !DILocation(line: 1818, column: 8, scope: !4667)
!4924 = !DILocation(line: 1819, column: 5, scope: !4664)
!4925 = !DILocation(line: 0, scope: !4664)
!4926 = !DILocation(line: 1819, column: 5, scope: !4927)
!4927 = distinct !DILexicalBlock(scope: !4664, file: !2402, line: 1819, column: 5)
!4928 = !DILocation(line: 1822, column: 14, scope: !4672)
!4929 = !DILocation(line: 1822, column: 8, scope: !4667)
!4930 = !DILocation(line: 1823, column: 5, scope: !4670)
!4931 = !DILocation(line: 0, scope: !4670)
!4932 = !DILocation(line: 1823, column: 5, scope: !4933)
!4933 = distinct !DILexicalBlock(scope: !4670, file: !2402, line: 1823, column: 5)
!4934 = !DILocation(line: 1826, column: 20, scope: !4667)
!4935 = !DILocation(line: 1827, column: 4, scope: !4667)
!4936 = !DILocation(line: 0, scope: !4667)
!4937 = !DILocation(line: 1827, column: 21, scope: !4667)
!4938 = !DILocation(line: 1827, column: 18, scope: !4667)
!4939 = !DILocation(line: 1828, column: 5, scope: !4674)
!4940 = !DILocation(line: 0, scope: !4674)
!4941 = !DILocation(line: 1828, column: 5, scope: !4942)
!4942 = distinct !DILexicalBlock(scope: !4674, file: !2402, line: 1828, column: 5)
!4943 = distinct !{!4943, !4935, !4944}
!4944 = !DILocation(line: 1829, column: 4, scope: !4667)
!4945 = !DILocation(line: 1831, column: 4, scope: !4677)
!4946 = !DILocation(line: 0, scope: !4677)
!4947 = !DILocation(line: 1831, column: 4, scope: !4948)
!4948 = distinct !DILexicalBlock(scope: !4677, file: !2402, line: 1831, column: 4)
!4949 = !DILocation(line: 1835, column: 16, scope: !4570)
!4950 = !DILocation(line: 1835, column: 3, scope: !4570)
!4951 = !DILocation(line: 1836, column: 4, scope: !4679)
!4952 = !DILocation(line: 0, scope: !4679)
!4953 = !DILocation(line: 1836, column: 4, scope: !4954)
!4954 = distinct !DILexicalBlock(scope: !4679, file: !2402, line: 1836, column: 4)
!4955 = !DILocation(line: 1837, column: 4, scope: !4680)
!4956 = distinct !{!4956, !4950, !4957}
!4957 = !DILocation(line: 1838, column: 3, scope: !4570)
!4958 = !DILocation(line: 1844, column: 1, scope: !4543)
!4959 = distinct !DISubprogram(name: "extract_conversion", scope: !2402, file: !2402, line: 642, type: !4960, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2398, retainedNodes: !4962)
!4960 = !DISubroutineType(types: !4961)
!4961 = !{!278, !4616, !278}
!4962 = !{!4963, !4964}
!4963 = !DILocalVariable(name: "conv", arg: 1, scope: !4959, file: !2402, line: 642, type: !4616)
!4964 = !DILocalVariable(name: "sp", arg: 2, scope: !4959, file: !2402, line: 643, type: !278)
!4965 = !DILocation(line: 0, scope: !4959)
!4966 = !DILocation(line: 645, column: 10, scope: !4959)
!4967 = !DILocation(line: 653, column: 2, scope: !4959)
!4968 = !DILocation(line: 654, column: 6, scope: !4969)
!4969 = distinct !DILexicalBlock(scope: !4959, file: !2402, line: 654, column: 6)
!4970 = !DILocation(line: 654, column: 10, scope: !4969)
!4971 = !DILocation(line: 654, column: 6, scope: !4959)
!4972 = !DILocation(line: 655, column: 24, scope: !4973)
!4973 = distinct !DILexicalBlock(scope: !4969, file: !2402, line: 654, column: 18)
!4974 = !DILocation(line: 655, column: 19, scope: !4973)
!4975 = !DILocation(line: 656, column: 3, scope: !4973)
!4976 = !DILocation(line: 659, column: 7, scope: !4959)
!4977 = !DILocation(line: 660, column: 7, scope: !4959)
!4978 = !DILocation(line: 661, column: 7, scope: !4959)
!4979 = !DILocation(line: 662, column: 7, scope: !4959)
!4980 = !DILocation(line: 663, column: 7, scope: !4959)
!4981 = !DILocation(line: 665, column: 2, scope: !4959)
!4982 = !DILocation(line: 666, column: 1, scope: !4959)
!4983 = distinct !DISubprogram(name: "outs", scope: !2402, file: !2402, line: 1319, type: !4984, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2398, retainedNodes: !4986)
!4984 = !DISubroutineType(types: !4985)
!4985 = !{!119, !3697, !113, !278, !278}
!4986 = !{!4987, !4988, !4989, !4990, !4991, !4992}
!4987 = !DILocalVariable(name: "out", arg: 1, scope: !4983, file: !2402, line: 1319, type: !3697)
!4988 = !DILocalVariable(name: "ctx", arg: 2, scope: !4983, file: !2402, line: 1320, type: !113)
!4989 = !DILocalVariable(name: "sp", arg: 3, scope: !4983, file: !2402, line: 1321, type: !278)
!4990 = !DILocalVariable(name: "ep", arg: 4, scope: !4983, file: !2402, line: 1322, type: !278)
!4991 = !DILocalVariable(name: "count", scope: !4983, file: !2402, line: 1324, type: !239)
!4992 = !DILocalVariable(name: "rc", scope: !4993, file: !2402, line: 1327, type: !119)
!4993 = distinct !DILexicalBlock(scope: !4983, file: !2402, line: 1326, column: 45)
!4994 = !DILocation(line: 0, scope: !4983)
!4995 = !DILocation(line: 1326, column: 2, scope: !4983)
!4996 = !DILocation(line: 1324, column: 9, scope: !4983)
!4997 = !DILocation(line: 1326, column: 13, scope: !4983)
!4998 = !DILocation(line: 1326, column: 19, scope: !4983)
!4999 = !DILocation(line: 1327, column: 21, scope: !4993)
!5000 = !DILocation(line: 1326, column: 36, scope: !4983)
!5001 = !DILocation(line: 1326, column: 39, scope: !4983)
!5002 = !DILocation(line: 1327, column: 24, scope: !4993)
!5003 = !DILocation(line: 1327, column: 16, scope: !4993)
!5004 = !DILocation(line: 1327, column: 12, scope: !4993)
!5005 = !DILocation(line: 0, scope: !4993)
!5006 = !DILocation(line: 1329, column: 10, scope: !5007)
!5007 = distinct !DILexicalBlock(scope: !4993, file: !2402, line: 1329, column: 7)
!5008 = !DILocation(line: 1329, column: 7, scope: !4993)
!5009 = distinct !{!5009, !4995, !5010}
!5010 = !DILocation(line: 1333, column: 2, scope: !4983)
!5011 = !DILocation(line: 1336, column: 1, scope: !4983)
!5012 = distinct !DISubprogram(name: "encode_uint", scope: !2402, file: !2402, line: 788, type: !5013, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2398, retainedNodes: !5015)
!5013 = !DISubroutineType(types: !5014)
!5014 = !{!106, !2424, !4616, !106, !278}
!5015 = !{!5016, !5017, !5018, !5019, !5020, !5021, !5023, !5024}
!5016 = !DILocalVariable(name: "value", arg: 1, scope: !5012, file: !2402, line: 788, type: !2424)
!5017 = !DILocalVariable(name: "conv", arg: 2, scope: !5012, file: !2402, line: 789, type: !4616)
!5018 = !DILocalVariable(name: "bps", arg: 3, scope: !5012, file: !2402, line: 790, type: !106)
!5019 = !DILocalVariable(name: "bpe", arg: 4, scope: !5012, file: !2402, line: 791, type: !278)
!5020 = !DILocalVariable(name: "upcase", scope: !5012, file: !2402, line: 793, type: !345)
!5021 = !DILocalVariable(name: "radix", scope: !5012, file: !2402, line: 794, type: !5022)
!5022 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!5023 = !DILocalVariable(name: "bp", scope: !5012, file: !2402, line: 795, type: !106)
!5024 = !DILocalVariable(name: "lsv", scope: !5025, file: !2402, line: 798, type: !32)
!5025 = distinct !DILexicalBlock(scope: !5012, file: !2402, line: 797, column: 5)
!5026 = !DILocation(line: 0, scope: !5012)
!5027 = !DILocation(line: 793, column: 35, scope: !5012)
!5028 = !DILocation(line: 793, column: 24, scope: !5012)
!5029 = !DILocation(line: 793, column: 16, scope: !5012)
!5030 = !DILocation(line: 794, column: 29, scope: !5012)
!5031 = !DILocation(line: 795, column: 24, scope: !5012)
!5032 = !DILocation(line: 795, column: 17, scope: !5012)
!5033 = !DILocation(line: 797, column: 2, scope: !5012)
!5034 = !DILocation(line: 802, column: 9, scope: !5025)
!5035 = !DILocation(line: 798, column: 22, scope: !5025)
!5036 = !DILocation(line: 0, scope: !5025)
!5037 = !DILocation(line: 800, column: 16, scope: !5025)
!5038 = !DILocation(line: 800, column: 11, scope: !5025)
!5039 = !DILocation(line: 800, column: 4, scope: !5025)
!5040 = !DILocation(line: 800, column: 9, scope: !5025)
!5041 = !DILocation(line: 803, column: 18, scope: !5012)
!5042 = !DILocation(line: 803, column: 24, scope: !5012)
!5043 = !DILocation(line: 803, column: 2, scope: !5025)
!5044 = distinct !{!5044, !5033, !5045}
!5045 = !DILocation(line: 803, column: 37, scope: !5012)
!5046 = !DILocation(line: 808, column: 12, scope: !5047)
!5047 = distinct !DILexicalBlock(scope: !5012, file: !2402, line: 808, column: 6)
!5048 = !DILocation(line: 808, column: 6, scope: !5012)
!5049 = !DILocation(line: 809, column: 7, scope: !5050)
!5050 = distinct !DILexicalBlock(scope: !5047, file: !2402, line: 808, column: 23)
!5051 = !DILocation(line: 813, column: 3, scope: !5052)
!5052 = distinct !DILexicalBlock(scope: !5053, file: !2402, line: 811, column: 27)
!5053 = distinct !DILexicalBlock(scope: !5054, file: !2402, line: 811, column: 14)
!5054 = distinct !DILexicalBlock(scope: !5050, file: !2402, line: 809, column: 7)
!5055 = !DILocation(line: 0, scope: !5054)
!5056 = !DILocation(line: 818, column: 2, scope: !5012)
!5057 = distinct !DISubprogram(name: "store_count", scope: !2402, file: !2402, line: 1280, type: !5058, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2398, retainedNodes: !5062)
!5058 = !DISubroutineType(types: !5059)
!5059 = !{null, !5060, !113, !119}
!5060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5061, size: 32)
!5061 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4583)
!5062 = !{!5063, !5064, !5065}
!5063 = !DILocalVariable(name: "conv", arg: 1, scope: !5057, file: !2402, line: 1280, type: !5060)
!5064 = !DILocalVariable(name: "dp", arg: 2, scope: !5057, file: !2402, line: 1281, type: !113)
!5065 = !DILocalVariable(name: "count", arg: 3, scope: !5057, file: !2402, line: 1282, type: !119)
!5066 = !DILocation(line: 0, scope: !5057)
!5067 = !DILocation(line: 1284, column: 38, scope: !5057)
!5068 = !DILocation(line: 1284, column: 2, scope: !5057)
!5069 = !DILocation(line: 1286, column: 4, scope: !5070)
!5070 = distinct !DILexicalBlock(scope: !5057, file: !2402, line: 1284, column: 50)
!5071 = !DILocation(line: 1286, column: 14, scope: !5070)
!5072 = !DILocation(line: 1287, column: 3, scope: !5070)
!5073 = !DILocation(line: 1289, column: 24, scope: !5070)
!5074 = !DILocation(line: 1289, column: 22, scope: !5070)
!5075 = !DILocation(line: 1290, column: 3, scope: !5070)
!5076 = !DILocation(line: 1292, column: 18, scope: !5070)
!5077 = !DILocation(line: 1292, column: 4, scope: !5070)
!5078 = !DILocation(line: 1292, column: 16, scope: !5070)
!5079 = !DILocation(line: 1293, column: 3, scope: !5070)
!5080 = !DILocation(line: 1295, column: 4, scope: !5070)
!5081 = !DILocation(line: 1295, column: 15, scope: !5070)
!5082 = !DILocation(line: 1296, column: 3, scope: !5070)
!5083 = !DILocation(line: 1298, column: 22, scope: !5070)
!5084 = !DILocation(line: 1298, column: 4, scope: !5070)
!5085 = !DILocation(line: 1298, column: 20, scope: !5070)
!5086 = !DILocation(line: 1299, column: 3, scope: !5070)
!5087 = !DILocation(line: 1301, column: 21, scope: !5070)
!5088 = !DILocation(line: 1301, column: 4, scope: !5070)
!5089 = !DILocation(line: 1301, column: 19, scope: !5070)
!5090 = !DILocation(line: 1302, column: 3, scope: !5070)
!5091 = !DILocation(line: 1304, column: 4, scope: !5070)
!5092 = !DILocation(line: 1304, column: 17, scope: !5070)
!5093 = !DILocation(line: 1305, column: 3, scope: !5070)
!5094 = !DILocation(line: 1307, column: 4, scope: !5070)
!5095 = !DILocation(line: 1307, column: 20, scope: !5070)
!5096 = !DILocation(line: 1308, column: 3, scope: !5070)
!5097 = !DILocation(line: 1316, column: 1, scope: !5057)
!5098 = distinct !DISubprogram(name: "isupper", scope: !5099, file: !5099, line: 16, type: !301, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2398, retainedNodes: !5100)
!5099 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5100 = !{!5101}
!5101 = !DILocalVariable(name: "a", arg: 1, scope: !5098, file: !5099, line: 16, type: !119)
!5102 = !DILocation(line: 0, scope: !5098)
!5103 = !DILocation(line: 18, column: 29, scope: !5098)
!5104 = !DILocation(line: 18, column: 45, scope: !5098)
!5105 = !DILocation(line: 18, column: 2, scope: !5098)
!5106 = distinct !DISubprogram(name: "conversion_radix", scope: !2402, file: !2402, line: 761, type: !5107, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2398, retainedNodes: !5109)
!5107 = !DISubroutineType(types: !5108)
!5108 = !{!239, !107}
!5109 = !{!5110}
!5110 = !DILocalVariable(name: "specifier", arg: 1, scope: !5106, file: !2402, line: 761, type: !107)
!5111 = !DILocation(line: 0, scope: !5106)
!5112 = !DILocation(line: 763, column: 2, scope: !5106)
!5113 = !DILocation(line: 770, column: 3, scope: !5114)
!5114 = distinct !DILexicalBlock(scope: !5106, file: !2402, line: 763, column: 21)
!5115 = !DILocation(line: 774, column: 3, scope: !5114)
!5116 = !DILocation(line: 0, scope: !5114)
!5117 = !DILocation(line: 776, column: 1, scope: !5106)
!5118 = distinct !DISubprogram(name: "extract_flags", scope: !2402, file: !2402, line: 339, type: !4960, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2398, retainedNodes: !5119)
!5119 = !{!5120, !5121, !5122}
!5120 = !DILocalVariable(name: "conv", arg: 1, scope: !5118, file: !2402, line: 339, type: !4616)
!5121 = !DILocalVariable(name: "sp", arg: 2, scope: !5118, file: !2402, line: 340, type: !278)
!5122 = !DILocalVariable(name: "loop", scope: !5118, file: !2402, line: 342, type: !345)
!5123 = !DILocation(line: 0, scope: !5118)
!5124 = !DILocation(line: 344, column: 2, scope: !5118)
!5125 = !DILocation(line: 345, column: 11, scope: !5126)
!5126 = distinct !DILexicalBlock(scope: !5118, file: !2402, line: 344, column: 5)
!5127 = !DILocation(line: 345, column: 3, scope: !5126)
!5128 = !DILocation(line: 351, column: 4, scope: !5129)
!5129 = distinct !DILexicalBlock(scope: !5126, file: !2402, line: 345, column: 16)
!5130 = !DILocation(line: 354, column: 4, scope: !5129)
!5131 = !DILocation(line: 357, column: 4, scope: !5129)
!5132 = !DILocation(line: 360, column: 4, scope: !5129)
!5133 = !DILocation(line: 0, scope: !5129)
!5134 = !DILocation(line: 370, column: 12, scope: !5135)
!5135 = distinct !DILexicalBlock(scope: !5118, file: !2402, line: 370, column: 6)
!5136 = !DILocation(line: 370, column: 22, scope: !5135)
!5137 = !DILocation(line: 371, column: 19, scope: !5138)
!5138 = distinct !DILexicalBlock(scope: !5135, file: !2402, line: 370, column: 42)
!5139 = !DILocation(line: 372, column: 2, scope: !5138)
!5140 = !DILocation(line: 376, column: 2, scope: !5118)
!5141 = distinct !DISubprogram(name: "extract_width", scope: !2402, file: !2402, line: 388, type: !4960, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2398, retainedNodes: !5142)
!5142 = !{!5143, !5144, !5145, !5146}
!5143 = !DILocalVariable(name: "conv", arg: 1, scope: !5141, file: !2402, line: 388, type: !4616)
!5144 = !DILocalVariable(name: "sp", arg: 2, scope: !5141, file: !2402, line: 389, type: !278)
!5145 = !DILocalVariable(name: "wp", scope: !5141, file: !2402, line: 398, type: !278)
!5146 = !DILocalVariable(name: "width", scope: !5141, file: !2402, line: 399, type: !239)
!5147 = !DILocation(line: 0, scope: !5141)
!5148 = !DILocation(line: 391, column: 8, scope: !5141)
!5149 = !DILocation(line: 391, column: 22, scope: !5141)
!5150 = !DILocation(line: 393, column: 6, scope: !5151)
!5151 = distinct !DILexicalBlock(scope: !5141, file: !2402, line: 393, column: 6)
!5152 = !DILocation(line: 393, column: 10, scope: !5151)
!5153 = !DILocation(line: 393, column: 6, scope: !5141)
!5154 = !DILocation(line: 394, column: 20, scope: !5155)
!5155 = distinct !DILexicalBlock(scope: !5151, file: !2402, line: 393, column: 18)
!5156 = !DILocation(line: 395, column: 10, scope: !5155)
!5157 = !DILocation(line: 395, column: 3, scope: !5155)
!5158 = !DILocation(line: 399, column: 17, scope: !5141)
!5159 = !DILocation(line: 401, column: 6, scope: !5160)
!5160 = distinct !DILexicalBlock(scope: !5141, file: !2402, line: 401, column: 6)
!5161 = !DILocation(line: 401, column: 9, scope: !5160)
!5162 = !DILocation(line: 401, column: 6, scope: !5141)
!5163 = !DILocation(line: 402, column: 23, scope: !5164)
!5164 = distinct !DILexicalBlock(scope: !5160, file: !2402, line: 401, column: 16)
!5165 = !DILocation(line: 403, column: 9, scope: !5164)
!5166 = !DILocation(line: 403, column: 21, scope: !5164)
!5167 = !DILocation(line: 405, column: 11, scope: !5164)
!5168 = !DILocation(line: 404, column: 21, scope: !5164)
!5169 = !DILocation(line: 406, column: 2, scope: !5164)
!5170 = !DILocation(line: 409, column: 1, scope: !5141)
!5171 = distinct !DISubprogram(name: "extract_prec", scope: !2402, file: !2402, line: 420, type: !4960, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2398, retainedNodes: !5172)
!5172 = !{!5173, !5174, !5175}
!5173 = !DILocalVariable(name: "conv", arg: 1, scope: !5171, file: !2402, line: 420, type: !4616)
!5174 = !DILocalVariable(name: "sp", arg: 2, scope: !5171, file: !2402, line: 421, type: !278)
!5175 = !DILocalVariable(name: "prec", scope: !5171, file: !2402, line: 435, type: !239)
!5176 = !DILocation(line: 0, scope: !5171)
!5177 = !DILocation(line: 423, column: 24, scope: !5171)
!5178 = !DILocation(line: 423, column: 28, scope: !5171)
!5179 = !DILocation(line: 423, column: 8, scope: !5171)
!5180 = !DILocation(line: 423, column: 21, scope: !5171)
!5181 = !DILocation(line: 425, column: 6, scope: !5171)
!5182 = !DILocation(line: 428, column: 2, scope: !5171)
!5183 = !DILocation(line: 430, column: 6, scope: !5184)
!5184 = distinct !DILexicalBlock(scope: !5171, file: !2402, line: 430, column: 6)
!5185 = !DILocation(line: 430, column: 10, scope: !5184)
!5186 = !DILocation(line: 430, column: 6, scope: !5171)
!5187 = !DILocation(line: 431, column: 19, scope: !5188)
!5188 = distinct !DILexicalBlock(scope: !5184, file: !2402, line: 430, column: 18)
!5189 = !DILocation(line: 432, column: 10, scope: !5188)
!5190 = !DILocation(line: 432, column: 3, scope: !5188)
!5191 = !DILocation(line: 435, column: 16, scope: !5171)
!5192 = !DILocation(line: 437, column: 8, scope: !5171)
!5193 = !DILocation(line: 437, column: 19, scope: !5171)
!5194 = !DILocation(line: 439, column: 10, scope: !5171)
!5195 = !DILocation(line: 438, column: 20, scope: !5171)
!5196 = !DILocation(line: 441, column: 9, scope: !5171)
!5197 = !DILocation(line: 442, column: 1, scope: !5171)
!5198 = distinct !DISubprogram(name: "extract_length", scope: !2402, file: !2402, line: 453, type: !4960, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2398, retainedNodes: !5199)
!5199 = !{!5200, !5201}
!5200 = !DILocalVariable(name: "conv", arg: 1, scope: !5198, file: !2402, line: 453, type: !4616)
!5201 = !DILocalVariable(name: "sp", arg: 2, scope: !5198, file: !2402, line: 454, type: !278)
!5202 = !DILocation(line: 0, scope: !5198)
!5203 = !DILocation(line: 456, column: 10, scope: !5198)
!5204 = !DILocation(line: 456, column: 2, scope: !5198)
!5205 = !DILocation(line: 458, column: 8, scope: !5206)
!5206 = distinct !DILexicalBlock(scope: !5207, file: !2402, line: 458, column: 7)
!5207 = distinct !DILexicalBlock(scope: !5198, file: !2402, line: 456, column: 15)
!5208 = !DILocation(line: 458, column: 7, scope: !5206)
!5209 = !DILocation(line: 458, column: 13, scope: !5206)
!5210 = !DILocation(line: 0, scope: !5206)
!5211 = !DILocation(line: 458, column: 7, scope: !5207)
!5212 = !DILocation(line: 459, column: 21, scope: !5213)
!5213 = distinct !DILexicalBlock(scope: !5206, file: !2402, line: 458, column: 21)
!5214 = !DILocation(line: 460, column: 4, scope: !5213)
!5215 = !DILocation(line: 461, column: 3, scope: !5213)
!5216 = !DILocation(line: 462, column: 21, scope: !5217)
!5217 = distinct !DILexicalBlock(scope: !5206, file: !2402, line: 461, column: 10)
!5218 = !DILocation(line: 466, column: 8, scope: !5219)
!5219 = distinct !DILexicalBlock(scope: !5207, file: !2402, line: 466, column: 7)
!5220 = !DILocation(line: 466, column: 7, scope: !5219)
!5221 = !DILocation(line: 466, column: 13, scope: !5219)
!5222 = !DILocation(line: 0, scope: !5219)
!5223 = !DILocation(line: 466, column: 7, scope: !5207)
!5224 = !DILocation(line: 467, column: 21, scope: !5225)
!5225 = distinct !DILexicalBlock(scope: !5219, file: !2402, line: 466, column: 21)
!5226 = !DILocation(line: 468, column: 4, scope: !5225)
!5227 = !DILocation(line: 469, column: 3, scope: !5225)
!5228 = !DILocation(line: 470, column: 21, scope: !5229)
!5229 = distinct !DILexicalBlock(scope: !5219, file: !2402, line: 469, column: 10)
!5230 = !DILocation(line: 474, column: 9, scope: !5207)
!5231 = !DILocation(line: 474, column: 20, scope: !5207)
!5232 = !DILocation(line: 475, column: 3, scope: !5207)
!5233 = !DILocation(line: 476, column: 3, scope: !5207)
!5234 = !DILocation(line: 478, column: 9, scope: !5207)
!5235 = !DILocation(line: 478, column: 20, scope: !5207)
!5236 = !DILocation(line: 479, column: 3, scope: !5207)
!5237 = !DILocation(line: 480, column: 3, scope: !5207)
!5238 = !DILocation(line: 482, column: 9, scope: !5207)
!5239 = !DILocation(line: 482, column: 20, scope: !5207)
!5240 = !DILocation(line: 483, column: 3, scope: !5207)
!5241 = !DILocation(line: 484, column: 3, scope: !5207)
!5242 = !DILocation(line: 486, column: 9, scope: !5207)
!5243 = !DILocation(line: 486, column: 20, scope: !5207)
!5244 = !DILocation(line: 487, column: 3, scope: !5207)
!5245 = !DILocation(line: 492, column: 21, scope: !5207)
!5246 = !DILocation(line: 493, column: 3, scope: !5207)
!5247 = !DILocation(line: 495, column: 9, scope: !5207)
!5248 = !DILocation(line: 495, column: 20, scope: !5207)
!5249 = !DILocation(line: 496, column: 3, scope: !5207)
!5250 = !DILocation(line: 498, column: 2, scope: !5198)
!5251 = distinct !DISubprogram(name: "extract_specifier", scope: !2402, file: !2402, line: 513, type: !4960, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2398, retainedNodes: !5252)
!5252 = !{!5253, !5254, !5255, !5256}
!5253 = !DILocalVariable(name: "conv", arg: 1, scope: !5251, file: !2402, line: 513, type: !4616)
!5254 = !DILocalVariable(name: "sp", arg: 2, scope: !5251, file: !2402, line: 514, type: !278)
!5255 = !DILocalVariable(name: "unsupported", scope: !5251, file: !2402, line: 516, type: !345)
!5256 = !DILabel(scope: !5257, name: "int_conv", file: !2402, line: 526)
!5257 = distinct !DILexicalBlock(scope: !5251, file: !2402, line: 520, column: 27)
!5258 = !DILocation(line: 0, scope: !5251)
!5259 = !DILocation(line: 518, column: 20, scope: !5251)
!5260 = !DILocation(line: 518, column: 8, scope: !5251)
!5261 = !DILocation(line: 518, column: 18, scope: !5251)
!5262 = !DILocation(line: 520, column: 2, scope: !5251)
!5263 = !DILocation(line: 525, column: 3, scope: !5257)
!5264 = !DILocation(line: 0, scope: !5257)
!5265 = !DILocation(line: 526, column: 1, scope: !5257)
!5266 = !DILocation(line: 528, column: 24, scope: !5267)
!5267 = distinct !DILexicalBlock(scope: !5257, file: !2402, line: 528, column: 7)
!5268 = !DILocation(line: 528, column: 7, scope: !5257)
!5269 = !DILocation(line: 535, column: 23, scope: !5270)
!5270 = distinct !DILexicalBlock(scope: !5257, file: !2402, line: 535, column: 7)
!5271 = !DILocation(line: 535, column: 7, scope: !5257)
!5272 = !DILocation(line: 536, column: 36, scope: !5273)
!5273 = distinct !DILexicalBlock(scope: !5270, file: !2402, line: 535, column: 31)
!5274 = !DILocation(line: 537, column: 3, scope: !5273)
!5275 = !DILocation(line: 570, column: 9, scope: !5257)
!5276 = !DILocation(line: 570, column: 23, scope: !5257)
!5277 = !DILocation(line: 575, column: 4, scope: !5278)
!5278 = distinct !DILexicalBlock(scope: !5279, file: !2402, line: 573, column: 48)
!5279 = distinct !DILexicalBlock(scope: !5257, file: !2402, line: 573, column: 7)
!5280 = !DILocation(line: 603, column: 9, scope: !5257)
!5281 = !DILocation(line: 603, column: 23, scope: !5257)
!5282 = !DILocation(line: 605, column: 24, scope: !5283)
!5283 = distinct !DILexicalBlock(scope: !5257, file: !2402, line: 605, column: 7)
!5284 = !DILocation(line: 605, column: 7, scope: !5257)
!5285 = !DILocation(line: 612, column: 9, scope: !5257)
!5286 = !DILocation(line: 612, column: 23, scope: !5257)
!5287 = !DILocation(line: 619, column: 24, scope: !5288)
!5288 = distinct !DILexicalBlock(scope: !5257, file: !2402, line: 619, column: 7)
!5289 = !DILocation(line: 619, column: 7, scope: !5257)
!5290 = !DILocation(line: 625, column: 9, scope: !5257)
!5291 = !DILocation(line: 625, column: 17, scope: !5257)
!5292 = !DILocation(line: 626, column: 3, scope: !5257)
!5293 = !DILocation(line: 629, column: 20, scope: !5251)
!5294 = !DILocation(line: 629, column: 8, scope: !5251)
!5295 = !DILocation(line: 518, column: 23, scope: !5251)
!5296 = !DILocation(line: 631, column: 2, scope: !5251)
!5297 = distinct !DISubprogram(name: "extract_decimal", scope: !2402, file: !2402, line: 318, type: !5298, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2398, retainedNodes: !5300)
!5298 = !DISubroutineType(types: !5299)
!5299 = !{!239, !277}
!5300 = !{!5301, !5302, !5303}
!5301 = !DILocalVariable(name: "str", arg: 1, scope: !5297, file: !2402, line: 318, type: !277)
!5302 = !DILocalVariable(name: "sp", scope: !5297, file: !2402, line: 320, type: !278)
!5303 = !DILocalVariable(name: "val", scope: !5297, file: !2402, line: 321, type: !239)
!5304 = !DILocation(line: 0, scope: !5297)
!5305 = !DILocation(line: 320, column: 19, scope: !5297)
!5306 = !DILocation(line: 323, column: 37, scope: !5297)
!5307 = !DILocation(line: 323, column: 17, scope: !5297)
!5308 = !DILocation(line: 323, column: 9, scope: !5297)
!5309 = !DILocation(line: 323, column: 2, scope: !5297)
!5310 = !DILocation(line: 324, column: 13, scope: !5311)
!5311 = distinct !DILexicalBlock(scope: !5297, file: !2402, line: 323, column: 43)
!5312 = !DILocation(line: 324, column: 24, scope: !5311)
!5313 = !DILocation(line: 324, column: 19, scope: !5311)
!5314 = !DILocation(line: 324, column: 27, scope: !5311)
!5315 = distinct !{!5315, !5309, !5316}
!5316 = !DILocation(line: 325, column: 2, scope: !5297)
!5317 = !DILocation(line: 326, column: 7, scope: !5297)
!5318 = !DILocation(line: 327, column: 2, scope: !5297)
!5319 = distinct !DISubprogram(name: "isdigit", scope: !5099, file: !5099, line: 43, type: !301, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2398, retainedNodes: !5320)
!5320 = !{!5321}
!5321 = !DILocalVariable(name: "a", arg: 1, scope: !5319, file: !5099, line: 43, type: !119)
!5322 = !DILocation(line: 0, scope: !5319)
!5323 = !DILocation(line: 45, column: 29, scope: !5319)
!5324 = !DILocation(line: 45, column: 45, scope: !5319)
!5325 = !DILocation(line: 45, column: 2, scope: !5319)
!5326 = distinct !DISubprogram(name: "assert_post_action", scope: !5327, file: !5327, line: 26, type: !5328, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2432, retainedNodes: !5330)
!5327 = !DIFile(filename: "zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5328 = !DISubroutineType(types: !5329)
!5329 = !{null, !278, !32}
!5330 = !{!5331, !5332}
!5331 = !DILocalVariable(name: "file", arg: 1, scope: !5326, file: !5327, line: 26, type: !278)
!5332 = !DILocalVariable(name: "line", arg: 2, scope: !5326, file: !5327, line: 26, type: !32)
!5333 = !DILocation(line: 0, scope: !5326)
!5334 = !DILocation(line: 43, column: 2, scope: !5335)
!5335 = distinct !DILexicalBlock(scope: !5326, file: !5327, line: 43, column: 2)
!5336 = !{i64 2154160600, i64 2154160616, i64 2154160642, i64 2154160670, i64 2154160690}
!5337 = !DILocation(line: 44, column: 1, scope: !5326)
!5338 = distinct !DISubprogram(name: "assert_print", scope: !5327, file: !5327, line: 46, type: !4309, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2432, retainedNodes: !5339)
!5339 = !{!5340, !5341}
!5340 = !DILocalVariable(name: "fmt", arg: 1, scope: !5338, file: !5327, line: 46, type: !278)
!5341 = !DILocalVariable(name: "ap", scope: !5338, file: !5327, line: 48, type: !5342)
!5342 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3315, line: 99, baseType: !5343)
!5343 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3315, line: 40, baseType: !5344)
!5344 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !5327, baseType: !5345)
!5345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5346)
!5346 = !{!5347}
!5347 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5345, file: !5327, line: 48, baseType: !113, size: 32)
!5348 = !DILocation(line: 0, scope: !5338)
!5349 = !DILocation(line: 48, column: 2, scope: !5338)
!5350 = !DILocation(line: 48, column: 10, scope: !5338)
!5351 = !DILocation(line: 50, column: 2, scope: !5338)
!5352 = !DILocation(line: 52, column: 2, scope: !5338)
!5353 = !DILocation(line: 54, column: 2, scope: !5338)
!5354 = !DILocation(line: 55, column: 1, scope: !5338)
!5355 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5356, file: !5356, line: 9, type: !2982, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2434, retainedNodes: !2048)
!5356 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pi")
!5357 = !DILocation(line: 11, column: 1, scope: !5355)
!5358 = !{i64 2147565276, i64 2147565319, i64 2147565359}
!5359 = !DILocation(line: 12, column: 1, scope: !5355)
!5360 = !{i64 2147569503, i64 2147569546, i64 2147569586}
!5361 = !DILocation(line: 13, column: 1, scope: !5355)
!5362 = !{i64 2147569712, i64 2147569755, i64 2147569795}
!5363 = !DILocation(line: 14, column: 1, scope: !5355)
!5364 = !{i64 2147569881, i64 2147569924, i64 2147569964}
!5365 = !DILocation(line: 15, column: 1, scope: !5355)
!5366 = !{i64 2147570044, i64 2147570087, i64 2147570127}
!5367 = !DILocation(line: 16, column: 1, scope: !5355)
!5368 = !{i64 2147570228, i64 2147570271, i64 2147570311}
!5369 = !DILocation(line: 17, column: 1, scope: !5355)
!5370 = !{i64 2147570407, i64 2147570450, i64 2147570490}
!5371 = !DILocation(line: 18, column: 1, scope: !5355)
!5372 = !{i64 2147570649, i64 2147570692, i64 2147570732}
!5373 = !DILocation(line: 19, column: 1, scope: !5355)
!5374 = !{i64 2147570884, i64 2147570927, i64 2147570967}
!5375 = !DILocation(line: 20, column: 1, scope: !5355)
!5376 = !{i64 2147571070, i64 2147571113, i64 2147571153}
!5377 = !DILocation(line: 21, column: 1, scope: !5355)
!5378 = !{i64 2147571286, i64 2147571329, i64 2147571369}
!5379 = !DILocation(line: 22, column: 1, scope: !5355)
!5380 = !{i64 2147571489, i64 2147571532, i64 2147571572}
!5381 = !DILocation(line: 23, column: 1, scope: !5355)
!5382 = !{i64 2147571692, i64 2147571735, i64 2147571775}
!5383 = !DILocation(line: 24, column: 1, scope: !5355)
!5384 = !{i64 2147571867, i64 2147571910, i64 2147571950}
!5385 = !DILocation(line: 25, column: 1, scope: !5355)
!5386 = !{i64 2147572075, i64 2147572118, i64 2147572158}
!5387 = !DILocation(line: 26, column: 1, scope: !5355)
!5388 = !{i64 2147572279, i64 2147572322, i64 2147572362}
!5389 = !DILocation(line: 27, column: 1, scope: !5355)
!5390 = !{i64 2147572472, i64 2147572515, i64 2147572555}
!5391 = !DILocation(line: 28, column: 1, scope: !5355)
!5392 = !{i64 2147572674, i64 2147572717, i64 2147572757}
!5393 = !DILocation(line: 29, column: 1, scope: !5355)
!5394 = !{i64 2147572873, i64 2147572916, i64 2147572956}
!5395 = !DILocation(line: 30, column: 1, scope: !5355)
!5396 = !{i64 2147573100, i64 2147573143, i64 2147573183}
!5397 = !DILocation(line: 31, column: 1, scope: !5355)
!5398 = !{i64 2147573302, i64 2147573345, i64 2147573385}
!5399 = !DILocation(line: 32, column: 1, scope: !5355)
!5400 = !{i64 2147573517, i64 2147573560, i64 2147573600}
!5401 = !DILocation(line: 33, column: 1, scope: !5355)
!5402 = !{i64 2147573734, i64 2147573777, i64 2147573817}
!5403 = !DILocation(line: 34, column: 1, scope: !5355)
!5404 = !{i64 2147573906, i64 2147573949, i64 2147573989}
!5405 = !DILocation(line: 35, column: 1, scope: !5355)
!5406 = !{i64 2147574108, i64 2147574151, i64 2147574191}
!5407 = !DILocation(line: 36, column: 1, scope: !5355)
!5408 = !{i64 2147574334, i64 2147574377, i64 2147574417}
!5409 = !DILocation(line: 37, column: 1, scope: !5355)
!5410 = !{i64 2147574533, i64 2147574576, i64 2147574616}
!5411 = !DILocation(line: 38, column: 1, scope: !5355)
!5412 = !{i64 2147574708, i64 2147574751, i64 2147574791}
!5413 = !DILocation(line: 39, column: 1, scope: !5355)
!5414 = !{i64 2147574961, i64 2147575004, i64 2147575044}
!5415 = !DILocation(line: 40, column: 1, scope: !5355)
!5416 = !{i64 2147575202, i64 2147575245, i64 2147575285}
!5417 = !DILocation(line: 41, column: 1, scope: !5355)
!5418 = !{i64 2147575437, i64 2147575480, i64 2147575520}
!5419 = !DILocation(line: 42, column: 1, scope: !5355)
!5420 = !{i64 2147575669, i64 2147575712, i64 2147575752}
!5421 = !DILocation(line: 43, column: 1, scope: !5355)
!5422 = !{i64 2147575916, i64 2147575959, i64 2147575999}
!5423 = !DILocation(line: 44, column: 1, scope: !5355)
!5424 = !{i64 2147576142, i64 2147576185, i64 2147576225}
!5425 = !DILocation(line: 45, column: 1, scope: !5355)
!5426 = !{i64 2147576368, i64 2147576411, i64 2147576451}
!5427 = !DILocation(line: 46, column: 1, scope: !5355)
!5428 = !{i64 2147576627, i64 2147576670, i64 2147576710}
!5429 = !DILocation(line: 47, column: 1, scope: !5355)
!5430 = !{i64 2147576853, i64 2147576896, i64 2147576936}
!5431 = !DILocation(line: 48, column: 1, scope: !5355)
!5432 = !{i64 2147577088, i64 2147577131, i64 2147577171}
!5433 = !DILocation(line: 49, column: 1, scope: !5355)
!5434 = !{i64 2147577326, i64 2147577369, i64 2147577409}
!5435 = !DILocation(line: 50, column: 1, scope: !5355)
!5436 = !{i64 2147577600, i64 2147577643, i64 2147577683}
!5437 = !DILocation(line: 51, column: 1, scope: !5355)
!5438 = !{i64 2147577838, i64 2147577881, i64 2147577921}
!5439 = !DILocation(line: 52, column: 1, scope: !5355)
!5440 = !{i64 2147578091, i64 2147578134, i64 2147578174}
!5441 = !DILocation(line: 53, column: 1, scope: !5355)
!5442 = !{i64 2147582396, i64 2147582439, i64 2147582479}
!5443 = !DILocation(line: 54, column: 1, scope: !5355)
!5444 = !{i64 2147582646, i64 2147582689, i64 2147582729}
!5445 = !DILocation(line: 55, column: 1, scope: !5355)
!5446 = !{i64 2147582887, i64 2147582930, i64 2147582970}
!5447 = !DILocation(line: 56, column: 1, scope: !5355)
!5448 = !{i64 2147583134, i64 2147583177, i64 2147583217}
!5449 = !DILocation(line: 57, column: 1, scope: !5355)
!5450 = !{i64 2147583369, i64 2147583412, i64 2147583452}
!5451 = !DILocation(line: 58, column: 1, scope: !5355)
!5452 = !{i64 2147583604, i64 2147583647, i64 2147583687}
!5453 = !DILocation(line: 59, column: 1, scope: !5355)
!5454 = !{i64 2147583839, i64 2147583882, i64 2147583922}
!5455 = !DILocation(line: 60, column: 1, scope: !5355)
!5456 = !{i64 2147584077, i64 2147584120, i64 2147584160}
!5457 = !DILocation(line: 61, column: 1, scope: !5355)
!5458 = !{i64 2147584318, i64 2147584361, i64 2147584401}
!5459 = !DILocation(line: 62, column: 1, scope: !5355)
!5460 = !{i64 2147584598, i64 2147584641, i64 2147584681}
!5461 = !DILocation(line: 63, column: 1, scope: !5355)
!5462 = !{i64 2147584857, i64 2147584900, i64 2147584940}
!5463 = !DILocation(line: 64, column: 1, scope: !5355)
!5464 = !{i64 2147585095, i64 2147585138, i64 2147585178}
!5465 = !DILocation(line: 65, column: 1, scope: !5355)
!5466 = !{i64 2147585345, i64 2147585388, i64 2147585428}
!5467 = !DILocation(line: 66, column: 1, scope: !5355)
!5468 = !{i64 2147585574, i64 2147585617, i64 2147585657}
!5469 = !DILocation(line: 67, column: 1, scope: !5355)
!5470 = !{i64 2147585782, i64 2147585825, i64 2147585865}
!5471 = !DILocation(line: 68, column: 1, scope: !5355)
!5472 = !{i64 2147585993, i64 2147586036, i64 2147586076}
!5473 = !DILocation(line: 69, column: 1, scope: !5355)
!5474 = !{i64 2147586228, i64 2147586271, i64 2147586311}
!5475 = !DILocation(line: 70, column: 1, scope: !5355)
!5476 = !{i64 2147586457, i64 2147586500, i64 2147586540}
!5477 = !DILocation(line: 71, column: 1, scope: !5355)
!5478 = !{i64 2147586674, i64 2147586717, i64 2147586757}
!5479 = !DILocation(line: 72, column: 1, scope: !5355)
!5480 = !{i64 2147586903, i64 2147586946, i64 2147586986}
!5481 = !DILocation(line: 73, column: 1, scope: !5355)
!5482 = !{i64 2147587141, i64 2147587184, i64 2147587224}
!5483 = !DILocation(line: 74, column: 1, scope: !5355)
!5484 = !{i64 2147587373, i64 2147587416, i64 2147587456}
!5485 = !DILocation(line: 75, column: 1, scope: !5355)
!5486 = !{i64 2147587599, i64 2147587642, i64 2147587682}
!5487 = !DILocation(line: 76, column: 1, scope: !5355)
!5488 = !{i64 2147587816, i64 2147587859, i64 2147587899}
!5489 = !DILocation(line: 77, column: 1, scope: !5355)
!5490 = !{i64 2147588048, i64 2147588091, i64 2147588131}
!5491 = !DILocation(line: 78, column: 1, scope: !5355)
!5492 = !{i64 2147588274, i64 2147588317, i64 2147588357}
!5493 = !DILocation(line: 79, column: 1, scope: !5355)
!5494 = !{i64 2147588488, i64 2147588531, i64 2147588571}
!5495 = !DILocation(line: 80, column: 1, scope: !5355)
!5496 = !{i64 2147588708, i64 2147588751, i64 2147588791}
!5497 = !DILocation(line: 81, column: 1, scope: !5355)
!5498 = !{i64 2147588940, i64 2147588983, i64 2147589023}
!5499 = !DILocation(line: 82, column: 1, scope: !5355)
!5500 = !{i64 2147589148, i64 2147589191, i64 2147589231}
!5501 = !DILocation(line: 83, column: 1, scope: !5355)
!5502 = !{i64 2147589353, i64 2147589396, i64 2147589436}
!5503 = !DILocation(line: 84, column: 1, scope: !5355)
!5504 = !{i64 2147589570, i64 2147589613, i64 2147589653}
!5505 = !DILocation(line: 85, column: 1, scope: !5355)
!5506 = !{i64 2147589784, i64 2147589827, i64 2147589867}
!5507 = !DILocation(line: 86, column: 1, scope: !5355)
!5508 = !{i64 2147590010, i64 2147590053, i64 2147590093}
!5509 = !DILocation(line: 87, column: 1, scope: !5355)
!5510 = !{i64 2147590230, i64 2147590273, i64 2147590313}
!5511 = !DILocation(line: 88, column: 1, scope: !5355)
!5512 = !{i64 2147594496, i64 2147594539, i64 2147594579}
!5513 = !DILocation(line: 89, column: 1, scope: !5355)
!5514 = !{i64 2147594728, i64 2147594771, i64 2147594811}
!5515 = !DILocation(line: 90, column: 1, scope: !5355)
!5516 = !{i64 2147594963, i64 2147595006, i64 2147595046}
!5517 = !DILocation(line: 91, column: 1, scope: !5355)
!5518 = !{i64 2147595213, i64 2147595256, i64 2147595296}
!5519 = !DILocation(line: 92, column: 1, scope: !5355)
!5520 = !{i64 2147595463, i64 2147595506, i64 2147595546}
!5521 = !DILocation(line: 93, column: 1, scope: !5355)
!5522 = !{i64 2147595701, i64 2147595744, i64 2147595784}
!5523 = !DILocation(line: 94, column: 1, scope: !5355)
!5524 = !{i64 2147595912, i64 2147595955, i64 2147595995}
!5525 = !DILocation(line: 95, column: 1, scope: !5355)
!5526 = !{i64 2147596129, i64 2147596172, i64 2147596212}
!5527 = !DILocation(line: 96, column: 1, scope: !5355)
!5528 = !{i64 2147596325, i64 2147596368, i64 2147596408}
!5529 = !DILocation(line: 97, column: 1, scope: !5355)
!5530 = !{i64 2147596527, i64 2147596570, i64 2147596610}
!5531 = !DILocation(line: 98, column: 1, scope: !5355)
!5532 = !{i64 2147596720, i64 2147596763, i64 2147596803}
!5533 = !DILocation(line: 99, column: 1, scope: !5355)
!5534 = !{i64 2147596928, i64 2147596971, i64 2147597011}
!5535 = !DILocation(line: 100, column: 1, scope: !5355)
!5536 = !{i64 2147597124, i64 2147597167, i64 2147597207}
!5537 = !DILocation(line: 101, column: 1, scope: !5355)
!5538 = !{i64 2147597326, i64 2147597369, i64 2147597409}
!5539 = !DILocation(line: 102, column: 1, scope: !5355)
!5540 = !{i64 2147597537, i64 2147597580, i64 2147597620}
!5541 = !DILocation(line: 103, column: 1, scope: !5355)
!5542 = !{i64 2147597736, i64 2147597779, i64 2147597819}
!5543 = !DILocation(line: 104, column: 1, scope: !5355)
!5544 = !{i64 2147597911, i64 2147597954, i64 2147597994}
!5545 = !DILocation(line: 105, column: 1, scope: !5355)
!5546 = !{i64 2147598095, i64 2147598138, i64 2147598178}
!5547 = !DILocation(line: 106, column: 1, scope: !5355)
!5548 = !{i64 2147598297, i64 2147598340, i64 2147598380}
!5549 = !DILocation(line: 107, column: 1, scope: !5355)
!5550 = !{i64 2147598496, i64 2147598539, i64 2147598579}
!5551 = !DILocation(line: 108, column: 1, scope: !5355)
!5552 = !{i64 2147598701, i64 2147598744, i64 2147598784}
!5553 = !DILocation(line: 109, column: 1, scope: !5355)
!5554 = !{i64 2147598894, i64 2147598937, i64 2147598977}
!5555 = !DILocation(line: 110, column: 1, scope: !5355)
!5556 = !{i64 2147599060, i64 2147599103, i64 2147599143}
!5557 = !DILocation(line: 111, column: 1, scope: !5355)
!5558 = !{i64 2147599244, i64 2147599287, i64 2147599327}
!5559 = !DILocation(line: 112, column: 1, scope: !5355)
!5560 = !{i64 2147599434, i64 2147599477, i64 2147599517}
!5561 = !DILocation(line: 113, column: 1, scope: !5355)
!5562 = !{i64 2147599618, i64 2147599661, i64 2147599701}
!5563 = !DILocation(line: 114, column: 1, scope: !5355)
!5564 = !{i64 2147599832, i64 2147599875, i64 2147599915}
!5565 = !DILocation(line: 115, column: 1, scope: !5355)
!5566 = !{i64 2147600043, i64 2147600086, i64 2147600126}
!5567 = !DILocation(line: 116, column: 1, scope: !5355)
!5568 = !{i64 2147600266, i64 2147600309, i64 2147600349}
!5569 = !DILocation(line: 117, column: 1, scope: !5355)
!5570 = !{i64 2147600450, i64 2147600493, i64 2147600533}
!5571 = !DILocation(line: 118, column: 1, scope: !5355)
!5572 = !{i64 2147600664, i64 2147600707, i64 2147600747}
!5573 = !DILocation(line: 119, column: 1, scope: !5355)
!5574 = !{i64 2147600830, i64 2147600873, i64 2147600913}
!5575 = !DILocation(line: 120, column: 1, scope: !5355)
!5576 = !{i64 2147601011, i64 2147601054, i64 2147601094}
!5577 = !DILocation(line: 121, column: 1, scope: !5355)
!5578 = !{i64 2147601204, i64 2147601247, i64 2147601287}
!5579 = !DILocation(line: 122, column: 1, scope: !5355)
!5580 = !{i64 2147601430, i64 2147601473, i64 2147601513}
!5581 = !DILocation(line: 123, column: 1, scope: !5355)
!5582 = !{i64 2147601644, i64 2147601687, i64 2147601727}
!5583 = !DILocation(line: 124, column: 1, scope: !5355)
!5584 = !{i64 2147601870, i64 2147601913, i64 2147601953}
!5585 = !DILocation(line: 125, column: 1, scope: !5355)
!5586 = !{i64 2147602087, i64 2147602130, i64 2147602170}
!5587 = !DILocation(line: 126, column: 1, scope: !5355)
!5588 = !{i64 2147602364, i64 2147602407, i64 2147602447}
!5589 = !DILocation(line: 127, column: 1, scope: !5355)
!5590 = !{i64 2147602590, i64 2147602633, i64 2147602673}
!5591 = !DILocation(line: 128, column: 1, scope: !5355)
!5592 = !{i64 2147602798, i64 2147602841, i64 2147602881}
!5593 = !DILocation(line: 129, column: 1, scope: !5355)
!5594 = !{i64 2147602994, i64 2147603037, i64 2147603077}
!5595 = !DILocation(line: 130, column: 1, scope: !5355)
!5596 = !{i64 2147603259, i64 2147603302, i64 2147603342}
!5597 = !DILocation(line: 131, column: 1, scope: !5355)
!5598 = !{i64 2147603473, i64 2147603516, i64 2147603556}
!5599 = !DILocation(line: 132, column: 1, scope: !5355)
!5600 = !{i64 2147607709, i64 2147607752, i64 2147607792}
!5601 = !DILocation(line: 133, column: 1, scope: !5355)
!5602 = !{i64 2147607963, i64 2147608006, i64 2147608046}
!5603 = !DILocation(line: 134, column: 1, scope: !5355)
!5604 = !{i64 2147608162, i64 2147608205, i64 2147608245}
!5605 = !DILocation(line: 135, column: 1, scope: !5355)
!5606 = !{i64 2147608404, i64 2147608447, i64 2147608487}
!5607 = !DILocation(line: 136, column: 1, scope: !5355)
!5608 = !{i64 2147608567, i64 2147608610, i64 2147608650}
!5609 = !DILocation(line: 137, column: 1, scope: !5355)
!5610 = !{i64 2147608754, i64 2147608797, i64 2147608837}
!5611 = !DILocation(line: 138, column: 1, scope: !5355)
!5612 = !{i64 2147608962, i64 2147609005, i64 2147609045}
!5613 = !DILocation(line: 139, column: 1, scope: !5355)
!5614 = !{i64 2147609158, i64 2147609201, i64 2147609241}
!5615 = !DILocation(line: 140, column: 1, scope: !5355)
!5616 = !{i64 2147609351, i64 2147609394, i64 2147609434}
!5617 = !DILocation(line: 141, column: 1, scope: !5355)
!5618 = !{i64 2147609533, i64 2147609576, i64 2147609616}
!5619 = !DILocation(line: 142, column: 1, scope: !5355)
!5620 = !{i64 2147609747, i64 2147609790, i64 2147609830}
!5621 = !DILocation(line: 143, column: 1, scope: !5355)
!5622 = !{i64 2147609958, i64 2147610001, i64 2147610041}
!5623 = !DILocation(line: 144, column: 1, scope: !5355)
!5624 = !{i64 2147610178, i64 2147610221, i64 2147610261}
!5625 = !DILocation(line: 145, column: 1, scope: !5355)
!5626 = !{i64 2147610385, i64 2147610428, i64 2147610468}
!5627 = !DILocation(line: 146, column: 1, scope: !5355)
!5628 = !{i64 2147610658, i64 2147610701, i64 2147610741}
!5629 = !DILocation(line: 147, column: 1, scope: !5355)
!5630 = !{i64 2147610906, i64 2147610949, i64 2147610989}
!5631 = !DILocation(line: 148, column: 1, scope: !5355)
!5632 = !{i64 2147611105, i64 2147611148, i64 2147611188}
!5633 = !DILocation(line: 149, column: 1, scope: !5355)
!5634 = !{i64 2147611340, i64 2147611383, i64 2147611423}
!5635 = !DILocation(line: 150, column: 1, scope: !5355)
!5636 = !{i64 2147611590, i64 2147611633, i64 2147611673}
!5637 = !DILocation(line: 151, column: 1, scope: !5355)
!5638 = !{i64 2147611792, i64 2147611835, i64 2147611875}
!5639 = !DILocation(line: 152, column: 1, scope: !5355)
!5640 = !{i64 2147612015, i64 2147612058, i64 2147612098}
!5641 = !DILocation(line: 153, column: 1, scope: !5355)
!5642 = !{i64 2147612229, i64 2147612272, i64 2147612312}
!5643 = !DILocation(line: 154, column: 1, scope: !5355)
!5644 = !{i64 2147612473, i64 2147612516, i64 2147612556}
!5645 = !DILocation(line: 155, column: 1, scope: !5355)
!5646 = !{i64 2147612702, i64 2147612745, i64 2147612785}
!5647 = !DILocation(line: 156, column: 1, scope: !5355)
!5648 = !{i64 2147612931, i64 2147612974, i64 2147613014}
!5649 = !DILocation(line: 157, column: 1, scope: !5355)
!5650 = !{i64 2147613139, i64 2147613182, i64 2147613222}
!5651 = !DILocation(line: 158, column: 1, scope: !5355)
!5652 = !{i64 2147613377, i64 2147613420, i64 2147613460}
!5653 = !DILocation(line: 159, column: 1, scope: !5355)
!5654 = !{i64 2147613603, i64 2147613646, i64 2147613686}
!5655 = !DILocation(line: 160, column: 1, scope: !5355)
!5656 = !{i64 2147613862, i64 2147613905, i64 2147613945}
!5657 = !DILocation(line: 161, column: 1, scope: !5355)
!5658 = !{i64 2147614082, i64 2147614125, i64 2147614165}
!5659 = !DILocation(line: 162, column: 1, scope: !5355)
!5660 = !{i64 2147614314, i64 2147614357, i64 2147614397}
!5661 = !DILocation(line: 163, column: 1, scope: !5355)
!5662 = !{i64 2147614555, i64 2147614598, i64 2147614638}
!5663 = !DILocation(line: 164, column: 1, scope: !5355)
!5664 = !{i64 2147614796, i64 2147614839, i64 2147614879}
!5665 = !DILocation(line: 165, column: 1, scope: !5355)
!5666 = !{i64 2147615019, i64 2147615062, i64 2147615102}
!5667 = !DILocation(line: 166, column: 1, scope: !5355)
!5668 = !{i64 2147615236, i64 2147615279, i64 2147615319}
!5669 = !DILocation(line: 167, column: 1, scope: !5355)
!5670 = !{i64 2147615477, i64 2147615520, i64 2147615560}
!5671 = !DILocation(line: 168, column: 1, scope: !5355)
!5672 = !{i64 2147615664, i64 2147615707, i64 2147615747}
!5673 = !DILocation(line: 169, column: 1, scope: !5355)
!5674 = !{i64 2147615851, i64 2147615894, i64 2147615934}
!5675 = !DILocation(line: 170, column: 1, scope: !5355)
!5676 = !{i64 2147616014, i64 2147616057, i64 2147616097}
!5677 = !DILocation(line: 171, column: 1, scope: !5355)
!5678 = !{i64 2147616219, i64 2147616262, i64 2147616302}
!5679 = !DILocation(line: 172, column: 1, scope: !5355)
!5680 = !{i64 2147620473, i64 2147620516, i64 2147620556}
!5681 = !DILocation(line: 173, column: 1, scope: !5355)
!5682 = !{i64 2147620732, i64 2147620775, i64 2147620815}
!5683 = !DILocation(line: 174, column: 1, scope: !5355)
!5684 = !{i64 2147620955, i64 2147620998, i64 2147621038}
!5685 = !DILocation(line: 175, column: 1, scope: !5355)
!5686 = !{i64 2147621184, i64 2147621227, i64 2147621267}
!5687 = !DILocation(line: 176, column: 1, scope: !5355)
!5688 = !{i64 2147621398, i64 2147621441, i64 2147621481}
!5689 = !DILocation(line: 177, column: 1, scope: !5355)
!5690 = !{i64 2147621600, i64 2147621643, i64 2147621683}
!5691 = !DILocation(line: 178, column: 1, scope: !5355)
!5692 = !{i64 2147621796, i64 2147621839, i64 2147621879}
!5693 = !DILocation(line: 179, column: 1, scope: !5355)
!5694 = !{i64 2147622008, i64 2147622051, i64 2147622091}
!5695 = !DILocation(line: 180, column: 1, scope: !5355)
!5696 = !{i64 2147622229, i64 2147622272, i64 2147622312}
!5697 = !DILocation(line: 181, column: 1, scope: !5355)
!5698 = !{i64 2147622444, i64 2147622487, i64 2147622527}
!5699 = !DILocation(line: 182, column: 1, scope: !5355)
!5700 = !{i64 2147622634, i64 2147622677, i64 2147622717}
!5701 = !DILocation(line: 183, column: 1, scope: !5355)
!5702 = !{i64 2147622833, i64 2147622876, i64 2147622916}
!5703 = !DILocation(line: 184, column: 1, scope: !5355)
!5704 = !{i64 2147623038, i64 2147623081, i64 2147623121}
!5705 = !DILocation(line: 185, column: 1, scope: !5355)
!5706 = !{i64 2147623258, i64 2147623301, i64 2147623341}
!5707 = !DILocation(line: 186, column: 1, scope: !5355)
!5708 = !{i64 2147623459, i64 2147623502, i64 2147623542}
!5709 = !DILocation(line: 187, column: 1, scope: !5355)
!5710 = !{i64 2147623658, i64 2147623701, i64 2147623741}
!5711 = !DILocation(line: 188, column: 1, scope: !5355)
!5712 = !{i64 2147623863, i64 2147623906, i64 2147623946}
!5713 = !DILocation(line: 189, column: 1, scope: !5355)
!5714 = !{i64 2147624032, i64 2147624075, i64 2147624115}
!5715 = !DILocation(line: 190, column: 1, scope: !5355)
!5716 = !{i64 2147624216, i64 2147624259, i64 2147624299}
!5717 = !DILocation(line: 191, column: 1, scope: !5355)
!5718 = !{i64 2147624400, i64 2147624443, i64 2147624483}
!5719 = !DILocation(line: 192, column: 1, scope: !5355)
!5720 = !{i64 2147624587, i64 2147624630, i64 2147624670}
!5721 = !DILocation(line: 193, column: 1, scope: !5355)
!5722 = !{i64 2147624771, i64 2147624814, i64 2147624854}
!5723 = !DILocation(line: 194, column: 1, scope: !5355)
!5724 = !{i64 2147624958, i64 2147625001, i64 2147625041}
!5725 = !DILocation(line: 195, column: 1, scope: !5355)
!5726 = !{i64 2147625170, i64 2147625213, i64 2147625253}
!5727 = !DILocation(line: 196, column: 1, scope: !5355)
!5728 = !{i64 2147625408, i64 2147625451, i64 2147625491}
!5729 = !DILocation(line: 197, column: 1, scope: !5355)
!5730 = !{i64 2147625638, i64 2147625681, i64 2147625721}
!5731 = !DILocation(line: 198, column: 1, scope: !5355)
!5732 = !{i64 2147625867, i64 2147625910, i64 2147625950}
!5733 = !DILocation(line: 199, column: 1, scope: !5355)
!5734 = !{i64 2147626054, i64 2147626097, i64 2147626137}
!5735 = !DILocation(line: 200, column: 1, scope: !5355)
!5736 = !{i64 2147626250, i64 2147626293, i64 2147626333}
!5737 = !DILocation(line: 201, column: 1, scope: !5355)
!5738 = !{i64 2147626458, i64 2147626501, i64 2147626541}
!5739 = !DILocation(line: 202, column: 1, scope: !5355)
!5740 = !{i64 2147626670, i64 2147626713, i64 2147626753}
!5741 = !DILocation(line: 203, column: 1, scope: !5355)
!5742 = !{i64 2147626869, i64 2147626912, i64 2147626952}
!5743 = !DILocation(line: 204, column: 1, scope: !5355)
!5744 = !{i64 2147627107, i64 2147627150, i64 2147627190}
!5745 = !DILocation(line: 205, column: 1, scope: !5355)
!5746 = !{i64 2147627303, i64 2147627346, i64 2147627386}
!5747 = !DILocation(line: 206, column: 1, scope: !5355)
!5748 = !{i64 2147627505, i64 2147627548, i64 2147627588}
!5749 = !DILocation(line: 207, column: 1, scope: !5355)
!5750 = !{i64 2147627698, i64 2147627741, i64 2147627781}
!5751 = !DILocation(line: 208, column: 1, scope: !5355)
!5752 = !{i64 2147627932, i64 2147627975, i64 2147628015}
!5753 = !DILocation(line: 209, column: 1, scope: !5355)
!5754 = !{i64 2147628095, i64 2147628138, i64 2147628178}
!5755 = !DILocation(line: 210, column: 1, scope: !5355)
!5756 = !{i64 2147628334, i64 2147628377, i64 2147628417}
!5757 = !DILocation(line: 211, column: 1, scope: !5355)
!5758 = !{i64 2147628573, i64 2147628616, i64 2147628656}
!5759 = !DILocation(line: 212, column: 1, scope: !5355)
!5760 = !{i64 2147628809, i64 2147628852, i64 2147628892}
!5761 = !DILocation(line: 213, column: 1, scope: !5355)
!5762 = !{i64 2147629039, i64 2147629082, i64 2147629122}
!5763 = !DILocation(line: 214, column: 1, scope: !5355)
!5764 = !{i64 2147629226, i64 2147629269, i64 2147629309}
!5765 = !DILocation(line: 215, column: 1, scope: !5355)
!5766 = !{i64 2147629425, i64 2147629468, i64 2147629508}
!5767 = !DILocation(line: 216, column: 1, scope: !5355)
!5768 = !{i64 2147633757, i64 2147633800, i64 2147633840}
!5769 = !DILocation(line: 217, column: 1, scope: !5355)
!5770 = !{i64 2147633932, i64 2147633975, i64 2147634015}
!5771 = !DILocation(line: 218, column: 1, scope: !5355)
!5772 = !{i64 2147634166, i64 2147634209, i64 2147634249}
!5773 = !DILocation(line: 219, column: 1, scope: !5355)
!5774 = !{i64 2147634374, i64 2147634417, i64 2147634457}
!5775 = !DILocation(line: 220, column: 1, scope: !5355)
!5776 = !{i64 2147634592, i64 2147634635, i64 2147634675}
!5777 = !DILocation(line: 221, column: 1, scope: !5355)
!5778 = !{i64 2147634782, i64 2147634825, i64 2147634865}
!5779 = !DILocation(line: 222, column: 1, scope: !5355)
!5780 = !{i64 2147635014, i64 2147635057, i64 2147635097}
!5781 = !DILocation(line: 223, column: 1, scope: !5355)
!5782 = !{i64 2147635234, i64 2147635277, i64 2147635317}
!5783 = !DILocation(line: 224, column: 1, scope: !5355)
!5784 = !{i64 2147635430, i64 2147635473, i64 2147635513}
!5785 = !DILocation(line: 225, column: 1, scope: !5355)
!5786 = !{i64 2147635636, i64 2147635679, i64 2147635719}
!5787 = !DILocation(line: 226, column: 1, scope: !5355)
!5788 = !{i64 2147635841, i64 2147635884, i64 2147635924}
!5789 = !DILocation(line: 227, column: 1, scope: !5355)
!5790 = !{i64 2147636067, i64 2147636110, i64 2147636150}
!5791 = !DILocation(line: 228, column: 1, scope: !5355)
!5792 = !{i64 2147636275, i64 2147636318, i64 2147636358}
!5793 = !DILocation(line: 229, column: 1, scope: !5355)
!5794 = !{i64 2147636471, i64 2147636514, i64 2147636554}
!5795 = !DILocation(line: 230, column: 1, scope: !5355)
!5796 = !{i64 2147636703, i64 2147636746, i64 2147636786}
!5797 = !DILocation(line: 231, column: 1, scope: !5355)
!5798 = !{i64 2147636887, i64 2147636930, i64 2147636970}
!5799 = !DILocation(line: 232, column: 1, scope: !5355)
!5800 = !{i64 2147637096, i64 2147637139, i64 2147637179}
!5801 = !DILocation(line: 233, column: 1, scope: !5355)
!5802 = !{i64 2147637304, i64 2147637347, i64 2147637387}
!5803 = !DILocation(line: 234, column: 1, scope: !5355)
!5804 = !{i64 2147637500, i64 2147637543, i64 2147637583}
!5805 = !DILocation(line: 235, column: 1, scope: !5355)
!5806 = !{i64 2147637684, i64 2147637727, i64 2147637767}
!5807 = !DILocation(line: 236, column: 1, scope: !5355)
!5808 = !{i64 2147637910, i64 2147637953, i64 2147637993}
!5809 = !DILocation(line: 237, column: 1, scope: !5355)
!5810 = !{i64 2147638136, i64 2147638179, i64 2147638219}
!5811 = !DILocation(line: 238, column: 1, scope: !5355)
!5812 = !{i64 2147638362, i64 2147638405, i64 2147638445}
!5813 = !DILocation(line: 239, column: 1, scope: !5355)
!5814 = !{i64 2147638588, i64 2147638631, i64 2147638671}
!5815 = !DILocation(line: 240, column: 1, scope: !5355)
!5816 = !{i64 2147638814, i64 2147638857, i64 2147638897}
!5817 = !DILocation(line: 241, column: 1, scope: !5355)
!5818 = !{i64 2147639046, i64 2147639089, i64 2147639129}
!5819 = !DILocation(line: 242, column: 1, scope: !5355)
!5820 = !{i64 2147639284, i64 2147639327, i64 2147639367}
!5821 = !DILocation(line: 243, column: 1, scope: !5355)
!5822 = !{i64 2147639504, i64 2147639547, i64 2147639587}
!5823 = !DILocation(line: 244, column: 1, scope: !5355)
!5824 = !{i64 2147639748, i64 2147639791, i64 2147639831}
!5825 = !DILocation(line: 245, column: 1, scope: !5355)
!5826 = !{i64 2147639989, i64 2147640032, i64 2147640072}
!5827 = !DILocation(line: 246, column: 1, scope: !5355)
!5828 = !{i64 2147640224, i64 2147640267, i64 2147640307}
!5829 = !DILocation(line: 247, column: 1, scope: !5355)
!5830 = !{i64 2147640456, i64 2147640499, i64 2147640539}
!5831 = !DILocation(line: 248, column: 1, scope: !5355)
!5832 = !{i64 2147640658, i64 2147640701, i64 2147640741}
!5833 = !DILocation(line: 249, column: 1, scope: !5355)
!5834 = !{i64 2147640908, i64 2147640951, i64 2147640991}
!5835 = !DILocation(line: 250, column: 1, scope: !5355)
!5836 = !{i64 2147641146, i64 2147641189, i64 2147641229}
!5837 = !DILocation(line: 251, column: 1, scope: !5355)
!5838 = !{i64 2147641354, i64 2147641397, i64 2147641437}
!5839 = !DILocation(line: 252, column: 1, scope: !5355)
!5840 = !{i64 2147641550, i64 2147641593, i64 2147641633}
!5841 = !DILocation(line: 253, column: 1, scope: !5355)
!5842 = !{i64 2147641734, i64 2147641777, i64 2147641817}
!5843 = !DILocation(line: 254, column: 1, scope: !5355)
!5844 = !{i64 2147641951, i64 2147641994, i64 2147642034}
!5845 = !DILocation(line: 255, column: 1, scope: !5355)
!5846 = !{i64 2147642156, i64 2147642199, i64 2147642239}
!5847 = !DILocation(line: 256, column: 1, scope: !5355)
!5848 = !{i64 2147646452, i64 2147646495, i64 2147646535}
!5849 = !DILocation(line: 257, column: 1, scope: !5355)
!5850 = !{i64 2147646675, i64 2147646718, i64 2147646758}
!5851 = !DILocation(line: 258, column: 1, scope: !5355)
!5852 = !{i64 2147646899, i64 2147646942, i64 2147646982}
!5853 = !DILocation(line: 259, column: 1, scope: !5355)
!5854 = !{i64 2147647137, i64 2147647180, i64 2147647220}
!5855 = !DILocation(line: 260, column: 1, scope: !5355)
!5856 = !{i64 2147647375, i64 2147647418, i64 2147647458}
!5857 = !DILocation(line: 261, column: 1, scope: !5355)
!5858 = !{i64 2147647592, i64 2147647635, i64 2147647675}
!5859 = !DILocation(line: 262, column: 1, scope: !5355)
!5860 = !{i64 2147647797, i64 2147647840, i64 2147647880}
!5861 = !DILocation(line: 263, column: 1, scope: !5355)
!5862 = !{i64 2147647990, i64 2147648033, i64 2147648073}
!5863 = !DILocation(line: 264, column: 1, scope: !5355)
!5864 = !{i64 2147648243, i64 2147648286, i64 2147648326}
!5865 = !DILocation(line: 265, column: 1, scope: !5355)
!5866 = !{i64 2147648451, i64 2147648494, i64 2147648534}
!5867 = !DILocation(line: 266, column: 1, scope: !5355)
!5868 = !{i64 2147648647, i64 2147648690, i64 2147648730}
!5869 = !DILocation(line: 267, column: 1, scope: !5355)
!5870 = !{i64 2147648861, i64 2147648904, i64 2147648944}
!5871 = !DILocation(line: 268, column: 1, scope: !5355)
!5872 = !{i64 2147649069, i64 2147649112, i64 2147649152}
!5873 = !DILocation(line: 269, column: 1, scope: !5355)
!5874 = !{i64 2147649259, i64 2147649302, i64 2147649342}
!5875 = !DILocation(line: 270, column: 1, scope: !5355)
!5876 = !{i64 2147649473, i64 2147649516, i64 2147649556}
!5877 = !DILocation(line: 271, column: 1, scope: !5355)
!5878 = !{i64 2147649735, i64 2147649778, i64 2147649818}
!5879 = !DILocation(line: 272, column: 1, scope: !5355)
!5880 = !{i64 2147649946, i64 2147649989, i64 2147650029}
!5881 = !DILocation(line: 273, column: 1, scope: !5355)
!5882 = !{i64 2147650190, i64 2147650233, i64 2147650273}
!5883 = !DILocation(line: 274, column: 1, scope: !5355)
!5884 = !{i64 2147650401, i64 2147650444, i64 2147650484}
!5885 = !DILocation(line: 275, column: 1, scope: !5355)
!5886 = !{i64 2147650630, i64 2147650673, i64 2147650713}
!5887 = !DILocation(line: 276, column: 1, scope: !5355)
!5888 = !{i64 2147650895, i64 2147650938, i64 2147650978}
!5889 = !DILocation(line: 277, column: 1, scope: !5355)
!5890 = !{i64 2147651100, i64 2147651143, i64 2147651183}
!5891 = !DILocation(line: 278, column: 1, scope: !5355)
!5892 = !{i64 2147651296, i64 2147651339, i64 2147651379}
!5893 = !DILocation(line: 279, column: 1, scope: !5355)
!5894 = !{i64 2147651519, i64 2147651562, i64 2147651602}
!5895 = !DILocation(line: 280, column: 1, scope: !5355)
!5896 = !{i64 2147651682, i64 2147651725, i64 2147651765}
!5897 = !DILocation(line: 281, column: 1, scope: !5355)
!5898 = !{i64 2147651887, i64 2147651930, i64 2147651970}
!5899 = !DILocation(line: 282, column: 1, scope: !5355)
!5900 = !{i64 2147652107, i64 2147652150, i64 2147652190}
!5901 = !DILocation(line: 283, column: 1, scope: !5355)
!5902 = !{i64 2147652321, i64 2147652364, i64 2147652404}
!5903 = !DILocation(line: 284, column: 1, scope: !5355)
!5904 = !{i64 2147652565, i64 2147652608, i64 2147652648}
!5905 = !DILocation(line: 285, column: 1, scope: !5355)
!5906 = !{i64 2147652797, i64 2147652840, i64 2147652880}
!5907 = !DILocation(line: 286, column: 1, scope: !5355)
!5908 = !{i64 2147653011, i64 2147653054, i64 2147653094}
!5909 = !DILocation(line: 287, column: 1, scope: !5355)
!5910 = !{i64 2147653222, i64 2147653265, i64 2147653305}
!5911 = !DILocation(line: 288, column: 1, scope: !5355)
!5912 = !{i64 2147653415, i64 2147653458, i64 2147653498}
!5913 = !DILocation(line: 289, column: 1, scope: !5355)
!5914 = !{i64 2147653614, i64 2147653657, i64 2147653697}
!5915 = !DILocation(line: 290, column: 1, scope: !5355)
!5916 = !{i64 2147653786, i64 2147653829, i64 2147653869}
!5917 = !DILocation(line: 291, column: 1, scope: !5355)
!5918 = !{i64 2147653979, i64 2147654022, i64 2147654062}
!5919 = !DILocation(line: 292, column: 1, scope: !5355)
!5920 = !{i64 2147654151, i64 2147654194, i64 2147654234}
!5921 = !DILocation(line: 293, column: 1, scope: !5355)
!5922 = !{i64 2147654341, i64 2147654384, i64 2147654424}
!5923 = !DILocation(line: 294, column: 1, scope: !5355)
!5924 = !{i64 2147654534, i64 2147654577, i64 2147654617}
!5925 = !DILocation(line: 295, column: 1, scope: !5355)
!5926 = !{i64 2147654730, i64 2147654773, i64 2147654813}
!5927 = !DILocation(line: 296, column: 1, scope: !5355)
!5928 = !{i64 2147654893, i64 2147654936, i64 2147654976}
!5929 = !DILocation(line: 297, column: 1, scope: !5355)
!5930 = !{i64 2147655095, i64 2147655138, i64 2147655178}
!5931 = !DILocation(line: 298, column: 1, scope: !5355)
!5932 = !{i64 2147655306, i64 2147655349, i64 2147655389}
!5933 = !DILocation(line: 299, column: 1, scope: !5355)
!5934 = !{i64 2147659572, i64 2147659615, i64 2147659655}
!5935 = !DILocation(line: 300, column: 1, scope: !5355)
!5936 = !{i64 2147659780, i64 2147659823, i64 2147659863}
!5937 = !DILocation(line: 301, column: 1, scope: !5355)
!5938 = !{i64 2147659973, i64 2147660016, i64 2147660056}
!5939 = !DILocation(line: 302, column: 1, scope: !5355)
!5940 = !{i64 2147660160, i64 2147660203, i64 2147660243}
!5941 = !DILocation(line: 303, column: 1, scope: !5355)
!5942 = !{i64 2147660326, i64 2147660369, i64 2147660409}
!5943 = !DILocation(line: 304, column: 1, scope: !5355)
!5944 = !{i64 2147660553, i64 2147660596, i64 2147660636}
!5945 = !DILocation(line: 305, column: 1, scope: !5355)
!5946 = !{i64 2147660770, i64 2147660813, i64 2147660853}
!5947 = !DILocation(line: 306, column: 1, scope: !5355)
!5948 = !{i64 2147660996, i64 2147661039, i64 2147661079}
!5949 = !DILocation(line: 307, column: 1, scope: !5355)
!5950 = !{i64 2147661201, i64 2147661244, i64 2147661284}
!5951 = !DILocation(line: 308, column: 1, scope: !5355)
!5952 = !{i64 2147661418, i64 2147661461, i64 2147661501}
!5953 = !DILocation(line: 309, column: 1, scope: !5355)
!5954 = !{i64 2147661710, i64 2147661753, i64 2147661793}
!5955 = !DILocation(line: 310, column: 1, scope: !5355)
!5956 = !{i64 2147661942, i64 2147661985, i64 2147662025}
!5957 = !DILocation(line: 311, column: 1, scope: !5355)
!5958 = !{i64 2147662159, i64 2147662202, i64 2147662242}
!5959 = !DILocation(line: 312, column: 1, scope: !5355)
!5960 = !{i64 2147662366, i64 2147662409, i64 2147662449}
!5961 = !DILocation(line: 313, column: 1, scope: !5355)
!5962 = !{i64 2147662567, i64 2147662610, i64 2147662650}
!5963 = !DILocation(line: 314, column: 1, scope: !5355)
!5964 = !{i64 2147662799, i64 2147662842, i64 2147662882}
!5965 = !DILocation(line: 315, column: 1, scope: !5355)
!5966 = !{i64 2147663007, i64 2147663050, i64 2147663090}
!5967 = !DILocation(line: 316, column: 1, scope: !5355)
!5968 = !{i64 2147663197, i64 2147663240, i64 2147663280}
!5969 = !DILocation(line: 317, column: 1, scope: !5355)
!5970 = !{i64 2147663423, i64 2147663466, i64 2147663506}
!5971 = !DILocation(line: 318, column: 1, scope: !5355)
!5972 = !{i64 2147663612, i64 2147663655, i64 2147663695}
!5973 = !DILocation(line: 319, column: 1, scope: !5355)
!5974 = !{i64 2147663883, i64 2147663926, i64 2147663966}
!5975 = !DILocation(line: 320, column: 1, scope: !5355)
!5976 = !{i64 2147664103, i64 2147664146, i64 2147664186}
!5977 = !DILocation(line: 321, column: 1, scope: !5355)
!5978 = !{i64 2147664356, i64 2147664399, i64 2147664439}
!5979 = !DILocation(line: 322, column: 1, scope: !5355)
!5980 = !{i64 2147664564, i64 2147664607, i64 2147664647}
!5981 = !DILocation(line: 323, column: 1, scope: !5355)
!5982 = !{i64 2147664796, i64 2147664839, i64 2147664879}
!5983 = !DILocation(line: 324, column: 1, scope: !5355)
!5984 = !{i64 2147665007, i64 2147665050, i64 2147665090}
!5985 = !DILocation(line: 325, column: 1, scope: !5355)
!5986 = !{i64 2147665197, i64 2147665240, i64 2147665280}
!5987 = !DILocation(line: 326, column: 1, scope: !5355)
!5988 = !{i64 2147665411, i64 2147665454, i64 2147665494}
!5989 = !DILocation(line: 327, column: 1, scope: !5355)
!5990 = !{i64 2147665610, i64 2147665653, i64 2147665693}
!5991 = !DILocation(line: 328, column: 1, scope: !5355)
!5992 = !{i64 2147665797, i64 2147665840, i64 2147665880}
!5993 = !DILocation(line: 329, column: 1, scope: !5355)
!5994 = !{i64 2147666005, i64 2147666048, i64 2147666088}
!5995 = !DILocation(line: 330, column: 1, scope: !5355)
!5996 = !{i64 2147666234, i64 2147666277, i64 2147666317}
!5997 = !DILocation(line: 331, column: 1, scope: !5355)
!5998 = !{i64 2147666436, i64 2147666479, i64 2147666519}
!5999 = !DILocation(line: 332, column: 1, scope: !5355)
!6000 = !{i64 2147666635, i64 2147666678, i64 2147666718}
!6001 = !DILocation(line: 333, column: 1, scope: !5355)
!6002 = !{i64 2147666852, i64 2147666895, i64 2147666935}
!6003 = !DILocation(line: 335, column: 1, scope: !5355)
!6004 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !322, file: !322, line: 30, type: !329, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !305, retainedNodes: !6005)
!6005 = !{!6006, !6007}
!6006 = !DILocalVariable(name: "arg", arg: 1, scope: !6004, file: !322, line: 30, type: !331)
!6007 = !DILocalVariable(name: "key", scope: !6004, file: !322, line: 32, type: !118)
!6008 = !DILocation(line: 0, scope: !6004)
!6009 = !DILocation(line: 37, column: 2, scope: !6004)
!6010 = !DILocation(line: 38, column: 2, scope: !6004)
!6011 = !DILocation(line: 55, column: 2, scope: !6012, inlinedAt: !6019)
!6012 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6013, file: !6013, line: 42, type: !6014, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !305, retainedNodes: !6016)
!6013 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6014 = !DISubroutineType(types: !6015)
!6015 = !{!32}
!6016 = !{!6017, !6018}
!6017 = !DILocalVariable(name: "key", scope: !6012, file: !6013, line: 44, type: !32)
!6018 = !DILocalVariable(name: "tmp", scope: !6012, file: !6013, line: 53, type: !32)
!6019 = distinct !DILocation(line: 40, column: 8, scope: !6004)
!6020 = !{i64 1937334}
!6021 = !DILocation(line: 0, scope: !6012, inlinedAt: !6019)
!6022 = !DILocalVariable(name: "key", arg: 1, scope: !6023, file: !6013, line: 84, type: !32)
!6023 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6013, file: !6013, line: 84, type: !6024, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !305, retainedNodes: !6026)
!6024 = !DISubroutineType(types: !6025)
!6025 = !{null, !32}
!6026 = !{!6022}
!6027 = !DILocation(line: 0, scope: !6023, inlinedAt: !6028)
!6028 = distinct !DILocation(line: 47, column: 2, scope: !6004)
!6029 = !DILocation(line: 95, column: 2, scope: !6023, inlinedAt: !6028)
!6030 = !{i64 1938151}
!6031 = !DILocation(line: 51, column: 18, scope: !6004)
!6032 = !DILocation(line: 53, column: 2, scope: !6004)
!6033 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !6034, file: !6034, line: 1609, type: !2982, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !305, retainedNodes: !2048)
!6034 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6035 = !DILocation(line: 1611, column: 3, scope: !6033)
!6036 = !DILocation(line: 1612, column: 1, scope: !6033)
!6037 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !6034, file: !6034, line: 1629, type: !2982, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !305, retainedNodes: !2048)
!6038 = !DILocation(line: 1631, column: 3, scope: !6037)
!6039 = !DILocation(line: 1632, column: 1, scope: !6037)
!6040 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !359, file: !359, line: 26, type: !365, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !356, retainedNodes: !6041)
!6041 = !{!6042}
!6042 = !DILocalVariable(name: "dev", arg: 1, scope: !6040, file: !359, line: 26, type: !367)
!6043 = !DILocation(line: 0, scope: !6040)
!6044 = !DILocation(line: 68, column: 2, scope: !6040)
!6045 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !6046, file: !6046, line: 14, type: !4309, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2436, retainedNodes: !6047)
!6046 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6047 = !{!6048, !6049}
!6048 = !DILocalVariable(name: "fmt", arg: 1, scope: !6045, file: !6046, line: 14, type: !278)
!6049 = !DILocalVariable(name: "ap", scope: !6045, file: !6046, line: 16, type: !6050)
!6050 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3315, line: 99, baseType: !6051)
!6051 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3315, line: 40, baseType: !6052)
!6052 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !6046, baseType: !6053)
!6053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !6054)
!6054 = !{!6055}
!6055 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !6053, file: !6046, line: 16, baseType: !113, size: 32)
!6056 = !DILocation(line: 0, scope: !6045)
!6057 = !DILocation(line: 16, column: 2, scope: !6045)
!6058 = !DILocation(line: 16, column: 10, scope: !6045)
!6059 = !DILocation(line: 18, column: 2, scope: !6045)
!6060 = !DILocation(line: 19, column: 2, scope: !6045)
!6061 = !DILocation(line: 20, column: 2, scope: !6045)
!6062 = !DILocation(line: 21, column: 1, scope: !6045)
!6063 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !6046, file: !6046, line: 23, type: !6064, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2436, retainedNodes: !6066)
!6064 = !DISubroutineType(types: !6065)
!6065 = !{null, !278, !6050}
!6066 = !{!6067, !6068}
!6067 = !DILocalVariable(name: "fmt", arg: 1, scope: !6063, file: !6046, line: 23, type: !278)
!6068 = !DILocalVariable(name: "ap", arg: 2, scope: !6063, file: !6046, line: 23, type: !6050)
!6069 = !DILocation(line: 0, scope: !6063)
!6070 = !DILocation(line: 25, column: 2, scope: !6063)
!6071 = !DILocation(line: 26, column: 1, scope: !6063)
!6072 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !6046, file: !6046, line: 52, type: !6073, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2436, retainedNodes: !6075)
!6073 = !DISubroutineType(types: !6074)
!6074 = !{null, !119, !13, !239}
!6075 = !{!6076, !6077, !6078, !6079}
!6076 = !DILocalVariable(name: "level", arg: 1, scope: !6072, file: !6046, line: 52, type: !119)
!6077 = !DILocalVariable(name: "data", arg: 2, scope: !6072, file: !6046, line: 52, type: !13)
!6078 = !DILocalVariable(name: "size", arg: 3, scope: !6072, file: !6046, line: 52, type: !239)
!6079 = !DILocalVariable(name: "data_buffer", scope: !6072, file: !6046, line: 54, type: !278)
!6080 = !DILocation(line: 0, scope: !6072)
!6081 = !DILocation(line: 55, column: 14, scope: !6072)
!6082 = !DILocation(line: 55, column: 2, scope: !6072)
!6083 = !DILocation(line: 56, column: 3, scope: !6084)
!6084 = distinct !DILexicalBlock(scope: !6072, file: !6046, line: 55, column: 20)
!6085 = !DILocation(line: 57, column: 3, scope: !6084)
!6086 = !DILocation(line: 59, column: 7, scope: !6084)
!6087 = distinct !{!6087, !6082, !6088}
!6088 = !DILocation(line: 65, column: 2, scope: !6072)
!6089 = !DILocation(line: 66, column: 1, scope: !6072)
!6090 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !6091, file: !6091, line: 175, type: !6092, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2436, retainedNodes: !6094)
!6091 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6092 = !DISubroutineType(types: !6093)
!6093 = !{!107, !119}
!6094 = !{!6095}
!6095 = !DILocalVariable(name: "level", arg: 1, scope: !6090, file: !6091, line: 175, type: !119)
!6096 = !DILocation(line: 0, scope: !6090)
!6097 = !DILocation(line: 177, column: 2, scope: !6090)
!6098 = !DILocation(line: 189, column: 1, scope: !6090)
!6099 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !6046, file: !6046, line: 28, type: !6100, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2436, retainedNodes: !6102)
!6100 = !DISubroutineType(types: !6101)
!6101 = !{null, !278, !239}
!6102 = !{!6103, !6104, !6105, !6107, !6109}
!6103 = !DILocalVariable(name: "data", arg: 1, scope: !6099, file: !6046, line: 28, type: !278)
!6104 = !DILocalVariable(name: "length", arg: 2, scope: !6099, file: !6046, line: 28, type: !239)
!6105 = !DILocalVariable(name: "i", scope: !6106, file: !6046, line: 30, type: !239)
!6106 = distinct !DILexicalBlock(scope: !6099, file: !6046, line: 30, column: 2)
!6107 = !DILocalVariable(name: "i", scope: !6108, file: !6046, line: 40, type: !239)
!6108 = distinct !DILexicalBlock(scope: !6099, file: !6046, line: 40, column: 2)
!6109 = !DILocalVariable(name: "c", scope: !6110, file: !6046, line: 42, type: !186)
!6110 = distinct !DILexicalBlock(scope: !6111, file: !6046, line: 41, column: 19)
!6111 = distinct !DILexicalBlock(scope: !6112, file: !6046, line: 41, column: 7)
!6112 = distinct !DILexicalBlock(scope: !6113, file: !6046, line: 40, column: 54)
!6113 = distinct !DILexicalBlock(scope: !6108, file: !6046, line: 40, column: 2)
!6114 = !DILocation(line: 0, scope: !6099)
!6115 = !DILocation(line: 0, scope: !6106)
!6116 = !DILocation(line: 30, column: 2, scope: !6106)
!6117 = !DILocation(line: 38, column: 2, scope: !6099)
!6118 = !DILocation(line: 0, scope: !6108)
!6119 = !DILocation(line: 40, column: 2, scope: !6108)
!6120 = !DILocation(line: 31, column: 9, scope: !6121)
!6121 = distinct !DILexicalBlock(scope: !6122, file: !6046, line: 31, column: 7)
!6122 = distinct !DILexicalBlock(scope: !6123, file: !6046, line: 30, column: 54)
!6123 = distinct !DILexicalBlock(scope: !6106, file: !6046, line: 30, column: 2)
!6124 = !DILocation(line: 31, column: 7, scope: !6122)
!6125 = !DILocation(line: 32, column: 35, scope: !6126)
!6126 = distinct !DILexicalBlock(scope: !6121, file: !6046, line: 31, column: 19)
!6127 = !DILocation(line: 32, column: 20, scope: !6126)
!6128 = !DILocation(line: 32, column: 4, scope: !6126)
!6129 = !DILocation(line: 33, column: 3, scope: !6126)
!6130 = !DILocation(line: 34, column: 4, scope: !6131)
!6131 = distinct !DILexicalBlock(scope: !6121, file: !6046, line: 33, column: 10)
!6132 = !DILocation(line: 30, column: 50, scope: !6123)
!6133 = !DILocation(line: 30, column: 24, scope: !6123)
!6134 = distinct !{!6134, !6116, !6135}
!6135 = !DILocation(line: 36, column: 2, scope: !6106)
!6136 = !DILocation(line: 49, column: 2, scope: !6099)
!6137 = !DILocation(line: 50, column: 1, scope: !6099)
!6138 = !DILocation(line: 41, column: 9, scope: !6111)
!6139 = !DILocation(line: 41, column: 7, scope: !6112)
!6140 = !DILocation(line: 42, column: 22, scope: !6110)
!6141 = !DILocation(line: 0, scope: !6110)
!6142 = !DILocation(line: 44, column: 25, scope: !6110)
!6143 = !DILocation(line: 44, column: 17, scope: !6110)
!6144 = !DILocation(line: 44, column: 33, scope: !6110)
!6145 = !DILocation(line: 44, column: 4, scope: !6110)
!6146 = !DILocation(line: 45, column: 3, scope: !6110)
!6147 = !DILocation(line: 46, column: 4, scope: !6148)
!6148 = distinct !DILexicalBlock(scope: !6111, file: !6046, line: 45, column: 10)
!6149 = !DILocation(line: 40, column: 50, scope: !6113)
!6150 = !DILocation(line: 40, column: 24, scope: !6113)
!6151 = distinct !{!6151, !6119, !6152}
!6152 = !DILocation(line: 48, column: 2, scope: !6108)
!6153 = distinct !DISubprogram(name: "isprint", scope: !5099, file: !5099, line: 37, type: !301, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2436, retainedNodes: !6154)
!6154 = !{!6155}
!6155 = !DILocalVariable(name: "c", arg: 1, scope: !6153, file: !5099, line: 37, type: !119)
!6156 = !DILocation(line: 0, scope: !6153)
!6157 = !DILocation(line: 39, column: 38, scope: !6153)
!6158 = !DILocation(line: 39, column: 2, scope: !6153)
!6159 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !6160, file: !6160, line: 57, type: !6161, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2439, retainedNodes: !6207)
!6160 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6161 = !DISubroutineType(types: !6162)
!6162 = !{null, !32, !6163}
!6163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6164, size: 32)
!6164 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6165)
!6165 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2559, line: 141, baseType: !6166)
!6166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2559, line: 97, size: 256, elements: !6167)
!6167 = !{!6168}
!6168 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !6166, file: !2559, line: 107, baseType: !6169, size: 256)
!6169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2559, line: 98, size: 256, elements: !6170)
!6170 = !{!6171, !6176, !6181, !6186, !6191, !6196, !6201, !6206}
!6171 = !DIDerivedType(tag: DW_TAG_member, scope: !6169, file: !2559, line: 99, baseType: !6172, size: 32)
!6172 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6169, file: !2559, line: 99, size: 32, elements: !6173)
!6173 = !{!6174, !6175}
!6174 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !6172, file: !2559, line: 99, baseType: !118, size: 32)
!6175 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !6172, file: !2559, line: 99, baseType: !118, size: 32)
!6176 = !DIDerivedType(tag: DW_TAG_member, scope: !6169, file: !2559, line: 100, baseType: !6177, size: 32, offset: 32)
!6177 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6169, file: !2559, line: 100, size: 32, elements: !6178)
!6178 = !{!6179, !6180}
!6179 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !6177, file: !2559, line: 100, baseType: !118, size: 32)
!6180 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !6177, file: !2559, line: 100, baseType: !118, size: 32)
!6181 = !DIDerivedType(tag: DW_TAG_member, scope: !6169, file: !2559, line: 101, baseType: !6182, size: 32, offset: 64)
!6182 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6169, file: !2559, line: 101, size: 32, elements: !6183)
!6183 = !{!6184, !6185}
!6184 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !6182, file: !2559, line: 101, baseType: !118, size: 32)
!6185 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !6182, file: !2559, line: 101, baseType: !118, size: 32)
!6186 = !DIDerivedType(tag: DW_TAG_member, scope: !6169, file: !2559, line: 102, baseType: !6187, size: 32, offset: 96)
!6187 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6169, file: !2559, line: 102, size: 32, elements: !6188)
!6188 = !{!6189, !6190}
!6189 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !6187, file: !2559, line: 102, baseType: !118, size: 32)
!6190 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !6187, file: !2559, line: 102, baseType: !118, size: 32)
!6191 = !DIDerivedType(tag: DW_TAG_member, scope: !6169, file: !2559, line: 103, baseType: !6192, size: 32, offset: 128)
!6192 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6169, file: !2559, line: 103, size: 32, elements: !6193)
!6193 = !{!6194, !6195}
!6194 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6192, file: !2559, line: 103, baseType: !118, size: 32)
!6195 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6192, file: !2559, line: 103, baseType: !118, size: 32)
!6196 = !DIDerivedType(tag: DW_TAG_member, scope: !6169, file: !2559, line: 104, baseType: !6197, size: 32, offset: 160)
!6197 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6169, file: !2559, line: 104, size: 32, elements: !6198)
!6198 = !{!6199, !6200}
!6199 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !6197, file: !2559, line: 104, baseType: !118, size: 32)
!6200 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6197, file: !2559, line: 104, baseType: !118, size: 32)
!6201 = !DIDerivedType(tag: DW_TAG_member, scope: !6169, file: !2559, line: 105, baseType: !6202, size: 32, offset: 192)
!6202 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6169, file: !2559, line: 105, size: 32, elements: !6203)
!6203 = !{!6204, !6205}
!6204 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !6202, file: !2559, line: 105, baseType: !118, size: 32)
!6205 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6202, file: !2559, line: 105, baseType: !118, size: 32)
!6206 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !6169, file: !2559, line: 106, baseType: !118, size: 32, offset: 224)
!6207 = !{!6208, !6209}
!6208 = !DILocalVariable(name: "reason", arg: 1, scope: !6159, file: !6160, line: 57, type: !32)
!6209 = !DILocalVariable(name: "esf", arg: 2, scope: !6159, file: !6160, line: 57, type: !6163)
!6210 = !DILocation(line: 0, scope: !6159)
!6211 = !DILocation(line: 60, column: 10, scope: !6212)
!6212 = distinct !DILexicalBlock(scope: !6159, file: !6160, line: 60, column: 6)
!6213 = !DILocation(line: 60, column: 6, scope: !6159)
!6214 = !DILocation(line: 61, column: 3, scope: !6215)
!6215 = distinct !DILexicalBlock(scope: !6212, file: !6160, line: 60, column: 19)
!6216 = !DILocation(line: 62, column: 2, scope: !6215)
!6217 = !DILocation(line: 63, column: 2, scope: !6159)
!6218 = !DILocation(line: 64, column: 1, scope: !6159)
!6219 = distinct !DISubprogram(name: "esf_dump", scope: !6160, file: !6160, line: 20, type: !6220, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2439, retainedNodes: !6222)
!6220 = !DISubroutineType(types: !6221)
!6221 = !{null, !6163}
!6222 = !{!6223}
!6223 = !DILocalVariable(name: "esf", arg: 1, scope: !6219, file: !6160, line: 20, type: !6163)
!6224 = !DILocation(line: 0, scope: !6219)
!6225 = !DILocation(line: 22, column: 2, scope: !6226)
!6226 = distinct !DILexicalBlock(scope: !6227, file: !6160, line: 22, column: 2)
!6227 = distinct !DILexicalBlock(scope: !6228, file: !6160, line: 22, column: 2)
!6228 = distinct !DILexicalBlock(scope: !6229, file: !6160, line: 22, column: 2)
!6229 = distinct !DILexicalBlock(scope: !6219, file: !6160, line: 22, column: 2)
!6230 = !DILocation(line: 24, column: 2, scope: !6231)
!6231 = distinct !DILexicalBlock(scope: !6232, file: !6160, line: 24, column: 2)
!6232 = distinct !DILexicalBlock(scope: !6233, file: !6160, line: 24, column: 2)
!6233 = distinct !DILexicalBlock(scope: !6234, file: !6160, line: 24, column: 2)
!6234 = distinct !DILexicalBlock(scope: !6219, file: !6160, line: 24, column: 2)
!6235 = !DILocation(line: 26, column: 2, scope: !6236)
!6236 = distinct !DILexicalBlock(scope: !6237, file: !6160, line: 26, column: 2)
!6237 = distinct !DILexicalBlock(scope: !6238, file: !6160, line: 26, column: 2)
!6238 = distinct !DILexicalBlock(scope: !6239, file: !6160, line: 26, column: 2)
!6239 = distinct !DILexicalBlock(scope: !6219, file: !6160, line: 26, column: 2)
!6240 = !DILocation(line: 53, column: 2, scope: !6241)
!6241 = distinct !DILexicalBlock(scope: !6242, file: !6160, line: 53, column: 2)
!6242 = distinct !DILexicalBlock(scope: !6243, file: !6160, line: 53, column: 2)
!6243 = distinct !DILexicalBlock(scope: !6244, file: !6160, line: 53, column: 2)
!6244 = distinct !DILexicalBlock(scope: !6219, file: !6160, line: 53, column: 2)
!6245 = !DILocation(line: 55, column: 1, scope: !6219)
!6246 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !6160, file: !6160, line: 82, type: !6247, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2439, retainedNodes: !6262)
!6247 = !DISubroutineType(types: !6248)
!6248 = !{null, !6163, !6249}
!6249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6250, size: 32)
!6250 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !216, line: 37, baseType: !6251)
!6251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !216, line: 25, size: 288, elements: !6252)
!6252 = !{!6253, !6254, !6255, !6256, !6257, !6258, !6259, !6260, !6261}
!6253 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6251, file: !216, line: 26, baseType: !118, size: 32)
!6254 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6251, file: !216, line: 27, baseType: !118, size: 32, offset: 32)
!6255 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6251, file: !216, line: 28, baseType: !118, size: 32, offset: 64)
!6256 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6251, file: !216, line: 29, baseType: !118, size: 32, offset: 96)
!6257 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6251, file: !216, line: 30, baseType: !118, size: 32, offset: 128)
!6258 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6251, file: !216, line: 31, baseType: !118, size: 32, offset: 160)
!6259 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6251, file: !216, line: 32, baseType: !118, size: 32, offset: 192)
!6260 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6251, file: !216, line: 33, baseType: !118, size: 32, offset: 224)
!6261 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6251, file: !216, line: 34, baseType: !118, size: 32, offset: 256)
!6262 = !{!6263, !6264, !6265}
!6263 = !DILocalVariable(name: "esf", arg: 1, scope: !6246, file: !6160, line: 82, type: !6163)
!6264 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !6246, file: !6160, line: 82, type: !6249)
!6265 = !DILocalVariable(name: "reason", scope: !6246, file: !6160, line: 88, type: !32)
!6266 = !DILocation(line: 0, scope: !6246)
!6267 = !DILocation(line: 88, column: 35, scope: !6246)
!6268 = !DILocation(line: 108, column: 2, scope: !6246)
!6269 = !DILocation(line: 131, column: 1, scope: !6246)
!6270 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !6160, file: !6160, line: 133, type: !6271, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2439, retainedNodes: !6273)
!6271 = !DISubroutineType(types: !6272)
!6272 = !{null, !113}
!6273 = !{!6274, !6275, !6276}
!6274 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !6270, file: !6160, line: 133, type: !113)
!6275 = !DILocalVariable(name: "ssf_contents", scope: !6270, file: !6160, line: 135, type: !867)
!6276 = !DILocalVariable(name: "oops_esf", scope: !6270, file: !6160, line: 136, type: !6165)
!6277 = !DILocation(line: 0, scope: !6270)
!6278 = !DILocation(line: 136, column: 2, scope: !6270)
!6279 = !DILocation(line: 136, column: 15, scope: !6270)
!6280 = !DILocation(line: 139, column: 22, scope: !6270)
!6281 = !DILocation(line: 139, column: 17, scope: !6270)
!6282 = !DILocation(line: 139, column: 20, scope: !6270)
!6283 = !DILocation(line: 141, column: 2, scope: !6270)
!6284 = !DILocation(line: 142, column: 2, scope: !6270)
!6285 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6286, file: !6286, line: 40, type: !6024, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2450, retainedNodes: !6287)
!6286 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6287 = !{!6288}
!6288 = !DILocalVariable(name: "irq", arg: 1, scope: !6285, file: !6286, line: 40, type: !32)
!6289 = !DILocation(line: 0, scope: !6285)
!6290 = !DILocation(line: 42, column: 2, scope: !6285)
!6291 = !DILocation(line: 43, column: 1, scope: !6285)
!6292 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !533, file: !533, line: 1684, type: !6293, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2450, retainedNodes: !6295)
!6293 = !DISubroutineType(types: !6294)
!6294 = !{null, !768}
!6295 = !{!6296}
!6296 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6292, file: !533, line: 1684, type: !768)
!6297 = !DILocation(line: 0, scope: !6292)
!6298 = !DILocation(line: 1686, column: 23, scope: !6299)
!6299 = distinct !DILexicalBlock(scope: !6292, file: !533, line: 1686, column: 7)
!6300 = !DILocation(line: 1686, column: 7, scope: !6292)
!6301 = !DILocation(line: 1688, column: 5, scope: !6302)
!6302 = distinct !DILexicalBlock(scope: !6299, file: !533, line: 1687, column: 3)
!6303 = !{i64 2150445065}
!6304 = !DILocation(line: 1689, column: 81, scope: !6302)
!6305 = !DILocation(line: 1689, column: 60, scope: !6302)
!6306 = !DILocation(line: 1689, column: 34, scope: !6302)
!6307 = !DILocation(line: 1689, column: 5, scope: !6302)
!6308 = !DILocation(line: 1689, column: 43, scope: !6302)
!6309 = !DILocation(line: 1690, column: 5, scope: !6302)
!6310 = !{i64 2150445179}
!6311 = !DILocation(line: 1691, column: 3, scope: !6302)
!6312 = !DILocation(line: 1692, column: 1, scope: !6292)
!6313 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6286, file: !6286, line: 45, type: !6024, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2450, retainedNodes: !6314)
!6314 = !{!6315}
!6315 = !DILocalVariable(name: "irq", arg: 1, scope: !6313, file: !6286, line: 45, type: !32)
!6316 = !DILocation(line: 0, scope: !6313)
!6317 = !DILocation(line: 47, column: 2, scope: !6313)
!6318 = !DILocation(line: 48, column: 1, scope: !6313)
!6319 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !533, file: !533, line: 1722, type: !6293, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2450, retainedNodes: !6320)
!6320 = !{!6321}
!6321 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6319, file: !533, line: 1722, type: !768)
!6322 = !DILocation(line: 0, scope: !6319)
!6323 = !DILocation(line: 1724, column: 23, scope: !6324)
!6324 = distinct !DILexicalBlock(scope: !6319, file: !533, line: 1724, column: 7)
!6325 = !DILocation(line: 1724, column: 7, scope: !6319)
!6326 = !DILocation(line: 1726, column: 81, scope: !6327)
!6327 = distinct !DILexicalBlock(scope: !6324, file: !533, line: 1725, column: 3)
!6328 = !DILocation(line: 1726, column: 60, scope: !6327)
!6329 = !DILocation(line: 1726, column: 34, scope: !6327)
!6330 = !DILocation(line: 1726, column: 5, scope: !6327)
!6331 = !DILocation(line: 1726, column: 43, scope: !6327)
!6332 = !DILocation(line: 271, column: 3, scope: !6333, inlinedAt: !6335)
!6333 = distinct !DISubprogram(name: "__DSB", scope: !6334, file: !6334, line: 269, type: !2982, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2450, retainedNodes: !2048)
!6334 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6335 = distinct !DILocation(line: 1727, column: 5, scope: !6327)
!6336 = !{i64 2899448}
!6337 = !DILocation(line: 260, column: 3, scope: !6338, inlinedAt: !6339)
!6338 = distinct !DISubprogram(name: "__ISB", scope: !6334, file: !6334, line: 258, type: !2982, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2450, retainedNodes: !2048)
!6339 = distinct !DILocation(line: 1728, column: 5, scope: !6327)
!6340 = !{i64 2899165}
!6341 = !DILocation(line: 1729, column: 3, scope: !6327)
!6342 = !DILocation(line: 1730, column: 1, scope: !6319)
!6343 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6286, file: !6286, line: 50, type: !6344, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2450, retainedNodes: !6346)
!6344 = !DISubroutineType(types: !6345)
!6345 = !{!119, !32}
!6346 = !{!6347}
!6347 = !DILocalVariable(name: "irq", arg: 1, scope: !6343, file: !6286, line: 50, type: !32)
!6348 = !DILocation(line: 0, scope: !6343)
!6349 = !DILocation(line: 52, column: 20, scope: !6343)
!6350 = !DILocation(line: 52, column: 9, scope: !6343)
!6351 = !DILocation(line: 52, column: 41, scope: !6343)
!6352 = !DILocation(line: 52, column: 39, scope: !6343)
!6353 = !DILocation(line: 52, column: 2, scope: !6343)
!6354 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6286, file: !6286, line: 64, type: !6355, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2450, retainedNodes: !6357)
!6355 = !DISubroutineType(types: !6356)
!6356 = !{null, !32, !32, !118}
!6357 = !{!6358, !6359, !6360}
!6358 = !DILocalVariable(name: "irq", arg: 1, scope: !6354, file: !6286, line: 64, type: !32)
!6359 = !DILocalVariable(name: "prio", arg: 2, scope: !6354, file: !6286, line: 64, type: !32)
!6360 = !DILocalVariable(name: "flags", arg: 3, scope: !6354, file: !6286, line: 64, type: !118)
!6361 = !DILocation(line: 0, scope: !6354)
!6362 = !DILocation(line: 83, column: 8, scope: !6363)
!6363 = distinct !DILexicalBlock(scope: !6364, file: !6286, line: 82, column: 9)
!6364 = distinct !DILexicalBlock(scope: !6354, file: !6286, line: 76, column: 6)
!6365 = !DILocation(line: 91, column: 2, scope: !6366)
!6366 = distinct !DILexicalBlock(scope: !6367, file: !6286, line: 91, column: 2)
!6367 = distinct !DILexicalBlock(scope: !6354, file: !6286, line: 91, column: 2)
!6368 = !DILocation(line: 91, column: 2, scope: !6367)
!6369 = !DILocation(line: 91, column: 2, scope: !6370)
!6370 = distinct !DILexicalBlock(scope: !6366, file: !6286, line: 91, column: 2)
!6371 = !DILocation(line: 95, column: 2, scope: !6354)
!6372 = !DILocation(line: 96, column: 1, scope: !6354)
!6373 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !533, file: !533, line: 1814, type: !6374, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2450, retainedNodes: !6376)
!6374 = !DISubroutineType(types: !6375)
!6375 = !{null, !768, !118}
!6376 = !{!6377, !6378}
!6377 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6373, file: !533, line: 1814, type: !768)
!6378 = !DILocalVariable(name: "priority", arg: 2, scope: !6373, file: !533, line: 1814, type: !118)
!6379 = !DILocation(line: 0, scope: !6373)
!6380 = !DILocation(line: 0, scope: !6381)
!6381 = distinct !DILexicalBlock(scope: !6373, file: !533, line: 1816, column: 7)
!6382 = !DILocation(line: 1816, column: 7, scope: !6373)
!6383 = !DILocation(line: 1824, column: 1, scope: !6373)
!6384 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6286, file: !6286, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2450, retainedNodes: !6385)
!6385 = !{!6386}
!6386 = !DILocalVariable(name: "unused", arg: 1, scope: !6384, file: !6286, line: 155, type: !13)
!6387 = !DILocation(line: 0, scope: !6384)
!6388 = !DILocation(line: 159, column: 2, scope: !6384)
!6389 = !DILocation(line: 160, column: 1, scope: !6384)
!6390 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6391, file: !6391, line: 87, type: !2982, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2496, retainedNodes: !2048)
!6391 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6392 = !DILocation(line: 89, column: 2, scope: !6390)
!6393 = !DILocation(line: 90, column: 2, scope: !6390)
!6394 = !DILocation(line: 91, column: 1, scope: !6390)
!6395 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6391, file: !6391, line: 23, type: !2982, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2048)
!6396 = !DISubprogram(name: "z_arm_int_exit", scope: !6397, file: !6397, line: 153, type: !2982, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2048)
!6397 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6398 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6399, file: !6399, line: 256, type: !2982, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2498, retainedNodes: !2048)
!6399 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6400 = !DILocation(line: 258, column: 2, scope: !6398)
!6401 = !DILocation(line: 260, column: 2, scope: !6398)
!6402 = !DILocation(line: 262, column: 2, scope: !6398)
!6403 = !DILocation(line: 263, column: 2, scope: !6398)
!6404 = !DILocation(line: 267, column: 2, scope: !6398)
!6405 = !DILocation(line: 268, column: 2, scope: !6398)
!6406 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6399, file: !6399, line: 53, type: !2982, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2498, retainedNodes: !2048)
!6407 = !DILocation(line: 55, column: 12, scope: !6406)
!6408 = !DILocation(line: 271, column: 3, scope: !6409, inlinedAt: !6410)
!6409 = distinct !DISubprogram(name: "__DSB", scope: !6334, file: !6334, line: 269, type: !2982, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2498, retainedNodes: !2048)
!6410 = distinct !DILocation(line: 56, column: 2, scope: !6406)
!6411 = !{i64 2898119}
!6412 = !DILocation(line: 260, column: 3, scope: !6413, inlinedAt: !6414)
!6413 = distinct !DISubprogram(name: "__ISB", scope: !6334, file: !6334, line: 258, type: !2982, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2498, retainedNodes: !2048)
!6414 = distinct !DILocation(line: 57, column: 2, scope: !6406)
!6415 = !{i64 2897836}
!6416 = !DILocation(line: 58, column: 1, scope: !6406)
!6417 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !6399, file: !6399, line: 96, type: !2982, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2498, retainedNodes: !2048)
!6418 = !DILocation(line: 103, column: 13, scope: !6417)
!6419 = !DILocation(line: 975, column: 3, scope: !6420, inlinedAt: !6423)
!6420 = distinct !DISubprogram(name: "__get_CONTROL", scope: !6334, file: !6334, line: 971, type: !3220, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2498, retainedNodes: !6421)
!6421 = !{!6422}
!6422 = !DILocalVariable(name: "result", scope: !6420, file: !6334, line: 973, type: !118)
!6423 = distinct !DILocation(line: 189, column: 16, scope: !6417)
!6424 = !{i64 2918949}
!6425 = !DILocation(line: 0, scope: !6420, inlinedAt: !6423)
!6426 = !DILocation(line: 189, column: 32, scope: !6417)
!6427 = !DILocalVariable(name: "control", arg: 1, scope: !6428, file: !6334, line: 1001, type: !118)
!6428 = distinct !DISubprogram(name: "__set_CONTROL", scope: !6334, file: !6334, line: 1001, type: !6429, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2498, retainedNodes: !6431)
!6429 = !DISubroutineType(types: !6430)
!6430 = !{null, !118}
!6431 = !{!6427}
!6432 = !DILocation(line: 0, scope: !6428, inlinedAt: !6433)
!6433 = distinct !DILocation(line: 189, column: 2, scope: !6417)
!6434 = !DILocation(line: 1003, column: 3, scope: !6428, inlinedAt: !6433)
!6435 = !{i64 2919669}
!6436 = !DILocation(line: 260, column: 3, scope: !6413, inlinedAt: !6437)
!6437 = distinct !DILocation(line: 1004, column: 3, scope: !6428, inlinedAt: !6433)
!6438 = !DILocation(line: 191, column: 1, scope: !6417)
!6439 = distinct !DISubprogram(name: "arch_swap", scope: !6440, file: !6440, line: 33, type: !6344, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2526, retainedNodes: !6441)
!6440 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6441 = !{!6442}
!6442 = !DILocalVariable(name: "key", arg: 1, scope: !6439, file: !6440, line: 33, type: !32)
!6443 = !DILocation(line: 0, scope: !6439)
!6444 = !DILocation(line: 36, column: 2, scope: !6439)
!6445 = !DILocation(line: 36, column: 17, scope: !6439)
!6446 = !DILocation(line: 36, column: 25, scope: !6439)
!6447 = !DILocation(line: 37, column: 37, scope: !6439)
!6448 = !DILocation(line: 37, column: 17, scope: !6439)
!6449 = !DILocation(line: 37, column: 35, scope: !6439)
!6450 = !DILocation(line: 41, column: 12, scope: !6439)
!6451 = !DILocalVariable(name: "key", arg: 1, scope: !6452, file: !6013, line: 84, type: !32)
!6452 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6013, file: !6013, line: 84, type: !6024, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2526, retainedNodes: !6453)
!6453 = !{!6451}
!6454 = !DILocation(line: 0, scope: !6452, inlinedAt: !6455)
!6455 = distinct !DILocation(line: 44, column: 2, scope: !6439)
!6456 = !DILocation(line: 95, column: 2, scope: !6452, inlinedAt: !6455)
!6457 = !{i64 2040479}
!6458 = !DILocation(line: 53, column: 9, scope: !6439)
!6459 = !DILocation(line: 53, column: 24, scope: !6439)
!6460 = !DILocation(line: 53, column: 2, scope: !6439)
!6461 = distinct !DISubprogram(name: "arch_new_thread", scope: !6462, file: !6462, line: 56, type: !6463, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !6573)
!6462 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6463 = !DISubroutineType(types: !6464)
!6464 = !{null, !6465, !6568, !106, !108, !113, !113, !113}
!6465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6466, size: 32)
!6466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !143, line: 245, size: 1280, elements: !6467)
!6467 = !{!6468, !6526, !6538, !6539, !6540, !6541, !6542, !6548, !6563}
!6468 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6466, file: !143, line: 247, baseType: !6469, size: 384)
!6469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !143, line: 57, size: 384, elements: !6470)
!6470 = !{!6471, !6495, !6502, !6503, !6504, !6513, !6514, !6515}
!6471 = !DIDerivedType(tag: DW_TAG_member, scope: !6469, file: !143, line: 60, baseType: !6472, size: 64)
!6472 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6469, file: !143, line: 60, size: 64, elements: !6473)
!6473 = !{!6474, !6489}
!6474 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6472, file: !143, line: 61, baseType: !6475, size: 64)
!6475 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !153, line: 49, baseType: !6476)
!6476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !153, line: 37, size: 64, elements: !6477)
!6477 = !{!6478, !6484}
!6478 = !DIDerivedType(tag: DW_TAG_member, scope: !6476, file: !153, line: 38, baseType: !6479, size: 32)
!6479 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6476, file: !153, line: 38, size: 32, elements: !6480)
!6480 = !{!6481, !6483}
!6481 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6479, file: !153, line: 39, baseType: !6482, size: 32)
!6482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6476, size: 32)
!6483 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6479, file: !153, line: 40, baseType: !6482, size: 32)
!6484 = !DIDerivedType(tag: DW_TAG_member, scope: !6476, file: !153, line: 42, baseType: !6485, size: 32, offset: 32)
!6485 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6476, file: !153, line: 42, size: 32, elements: !6486)
!6486 = !{!6487, !6488}
!6487 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6485, file: !153, line: 43, baseType: !6482, size: 32)
!6488 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6485, file: !153, line: 44, baseType: !6482, size: 32)
!6489 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6472, file: !143, line: 62, baseType: !6490, size: 64)
!6490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !169, line: 49, size: 64, elements: !6491)
!6491 = !{!6492}
!6492 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6490, file: !169, line: 50, baseType: !6493, size: 64)
!6493 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6494, size: 64, elements: !174)
!6494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6490, size: 32)
!6495 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6469, file: !143, line: 68, baseType: !6496, size: 32, offset: 64)
!6496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6497, size: 32)
!6497 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !179, line: 233, baseType: !6498)
!6498 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !179, line: 231, size: 64, elements: !6499)
!6499 = !{!6500}
!6500 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6498, file: !179, line: 232, baseType: !6501, size: 64)
!6501 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !153, line: 48, baseType: !6476)
!6502 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6469, file: !143, line: 71, baseType: !185, size: 8, offset: 96)
!6503 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6469, file: !143, line: 74, baseType: !185, size: 8, offset: 104)
!6504 = !DIDerivedType(tag: DW_TAG_member, scope: !6469, file: !143, line: 90, baseType: !6505, size: 16, offset: 112)
!6505 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6469, file: !143, line: 90, size: 16, elements: !6506)
!6506 = !{!6507, !6512}
!6507 = !DIDerivedType(tag: DW_TAG_member, scope: !6505, file: !143, line: 91, baseType: !6508, size: 16)
!6508 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6505, file: !143, line: 91, size: 16, elements: !6509)
!6509 = !{!6510, !6511}
!6510 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6508, file: !143, line: 96, baseType: !195, size: 8)
!6511 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6508, file: !143, line: 97, baseType: !185, size: 8, offset: 8)
!6512 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6505, file: !143, line: 100, baseType: !199, size: 16)
!6513 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6469, file: !143, line: 107, baseType: !118, size: 32, offset: 128)
!6514 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6469, file: !143, line: 127, baseType: !113, size: 32, offset: 160)
!6515 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6469, file: !143, line: 131, baseType: !6516, size: 192, offset: 192)
!6516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !179, line: 244, size: 192, elements: !6517)
!6517 = !{!6518, !6519, !6525}
!6518 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6516, file: !179, line: 245, baseType: !6475, size: 64)
!6519 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6516, file: !179, line: 246, baseType: !6520, size: 32, offset: 64)
!6520 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !179, line: 242, baseType: !6521)
!6521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6522, size: 32)
!6522 = !DISubroutineType(types: !6523)
!6523 = !{null, !6524}
!6524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6516, size: 32)
!6525 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6516, file: !179, line: 249, baseType: !116, size: 64, offset: 128)
!6526 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6466, file: !143, line: 250, baseType: !6527, size: 288, offset: 384)
!6527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !216, line: 25, size: 288, elements: !6528)
!6528 = !{!6529, !6530, !6531, !6532, !6533, !6534, !6535, !6536, !6537}
!6529 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6527, file: !216, line: 26, baseType: !118, size: 32)
!6530 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6527, file: !216, line: 27, baseType: !118, size: 32, offset: 32)
!6531 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6527, file: !216, line: 28, baseType: !118, size: 32, offset: 64)
!6532 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6527, file: !216, line: 29, baseType: !118, size: 32, offset: 96)
!6533 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6527, file: !216, line: 30, baseType: !118, size: 32, offset: 128)
!6534 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6527, file: !216, line: 31, baseType: !118, size: 32, offset: 160)
!6535 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6527, file: !216, line: 32, baseType: !118, size: 32, offset: 192)
!6536 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6527, file: !216, line: 33, baseType: !118, size: 32, offset: 224)
!6537 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6527, file: !216, line: 34, baseType: !118, size: 32, offset: 256)
!6538 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6466, file: !143, line: 253, baseType: !113, size: 32, offset: 672)
!6539 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6466, file: !143, line: 256, baseType: !6497, size: 64, offset: 704)
!6540 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6466, file: !143, line: 279, baseType: !230, size: 256, offset: 768)
!6541 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6466, file: !143, line: 294, baseType: !119, size: 32, offset: 1024)
!6542 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6466, file: !143, line: 300, baseType: !6543, size: 96, offset: 1056)
!6543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !143, line: 149, size: 96, elements: !6544)
!6544 = !{!6545, !6546, !6547}
!6545 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6543, file: !143, line: 153, baseType: !22, size: 32)
!6546 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6543, file: !143, line: 162, baseType: !239, size: 32, offset: 32)
!6547 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6543, file: !143, line: 168, baseType: !239, size: 32, offset: 64)
!6548 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6466, file: !143, line: 325, baseType: !6549, size: 32, offset: 1152)
!6549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6550, size: 32)
!6550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !245, line: 5073, size: 192, elements: !6551)
!6551 = !{!6552, !6558, !6559}
!6552 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6550, file: !245, line: 5074, baseType: !6553, size: 96)
!6553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !249, line: 56, size: 96, elements: !6554)
!6554 = !{!6555, !6556, !6557}
!6555 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6553, file: !249, line: 57, baseType: !252, size: 32)
!6556 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6553, file: !249, line: 58, baseType: !113, size: 32, offset: 32)
!6557 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6553, file: !249, line: 59, baseType: !239, size: 32, offset: 64)
!6558 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6550, file: !245, line: 5075, baseType: !6497, size: 64, offset: 96)
!6559 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6550, file: !245, line: 5076, baseType: !6560, size: 32, offset: 160)
!6560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !6561)
!6561 = !{!6562}
!6562 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !6560, file: !259, line: 52, baseType: !22, size: 32)
!6563 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6466, file: !143, line: 343, baseType: !6564, size: 64, offset: 1184)
!6564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !216, line: 60, size: 64, elements: !6565)
!6565 = !{!6566, !6567}
!6566 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6564, file: !216, line: 63, baseType: !118, size: 32)
!6567 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6564, file: !216, line: 66, baseType: !118, size: 32, offset: 32)
!6568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6569, size: 32)
!6569 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !109, line: 44, baseType: !6570)
!6570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !128, line: 47, size: 8, elements: !6571)
!6571 = !{!6572}
!6572 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6570, file: !128, line: 48, baseType: !107, size: 8)
!6573 = !{!6574, !6575, !6576, !6577, !6578, !6579, !6580, !6581}
!6574 = !DILocalVariable(name: "thread", arg: 1, scope: !6461, file: !6462, line: 56, type: !6465)
!6575 = !DILocalVariable(name: "stack", arg: 2, scope: !6461, file: !6462, line: 56, type: !6568)
!6576 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6461, file: !6462, line: 57, type: !106)
!6577 = !DILocalVariable(name: "entry", arg: 4, scope: !6461, file: !6462, line: 57, type: !108)
!6578 = !DILocalVariable(name: "p1", arg: 5, scope: !6461, file: !6462, line: 58, type: !113)
!6579 = !DILocalVariable(name: "p2", arg: 6, scope: !6461, file: !6462, line: 58, type: !113)
!6580 = !DILocalVariable(name: "p3", arg: 7, scope: !6461, file: !6462, line: 58, type: !113)
!6581 = !DILocalVariable(name: "iframe", scope: !6461, file: !6462, line: 60, type: !2557)
!6582 = !DILocation(line: 0, scope: !6461)
!6583 = !DILocation(line: 85, column: 11, scope: !6461)
!6584 = !DILocation(line: 93, column: 10, scope: !6461)
!6585 = !DILocation(line: 98, column: 13, scope: !6461)
!6586 = !DILocation(line: 100, column: 15, scope: !6461)
!6587 = !DILocation(line: 100, column: 10, scope: !6461)
!6588 = !DILocation(line: 100, column: 13, scope: !6461)
!6589 = !DILocation(line: 101, column: 15, scope: !6461)
!6590 = !DILocation(line: 101, column: 10, scope: !6461)
!6591 = !DILocation(line: 101, column: 13, scope: !6461)
!6592 = !DILocation(line: 102, column: 15, scope: !6461)
!6593 = !DILocation(line: 102, column: 10, scope: !6461)
!6594 = !DILocation(line: 102, column: 13, scope: !6461)
!6595 = !DILocation(line: 103, column: 15, scope: !6461)
!6596 = !DILocation(line: 103, column: 10, scope: !6461)
!6597 = !DILocation(line: 103, column: 13, scope: !6461)
!6598 = !DILocation(line: 106, column: 10, scope: !6461)
!6599 = !DILocation(line: 106, column: 15, scope: !6461)
!6600 = !DILocation(line: 122, column: 29, scope: !6461)
!6601 = !DILocation(line: 122, column: 23, scope: !6461)
!6602 = !DILocation(line: 122, column: 27, scope: !6461)
!6603 = !DILocation(line: 123, column: 15, scope: !6461)
!6604 = !DILocation(line: 123, column: 23, scope: !6461)
!6605 = !DILocation(line: 143, column: 1, scope: !6461)
!6606 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !6462, file: !6462, line: 385, type: !6607, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !6610)
!6607 = !DISubroutineType(types: !6608)
!6608 = !{!118, !6609, !6609}
!6609 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !118)
!6610 = !{!6611, !6612, !6613, !6616}
!6611 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !6606, file: !6462, line: 385, type: !6609)
!6612 = !DILocalVariable(name: "psp", arg: 2, scope: !6606, file: !6462, line: 385, type: !6609)
!6613 = !DILocalVariable(name: "thread", scope: !6606, file: !6462, line: 388, type: !6614)
!6614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6615, size: 32)
!6615 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6466)
!6616 = !DILocalVariable(name: "guard_len", scope: !6606, file: !6462, line: 405, type: !118)
!6617 = !DILocation(line: 0, scope: !6606)
!6618 = !DILocation(line: 388, column: 34, scope: !6606)
!6619 = !DILocation(line: 390, column: 13, scope: !6620)
!6620 = distinct !DILexicalBlock(scope: !6606, file: !6462, line: 390, column: 6)
!6621 = !DILocation(line: 390, column: 6, scope: !6606)
!6622 = !DILocation(line: 438, column: 6, scope: !6623)
!6623 = distinct !DILexicalBlock(scope: !6606, file: !6462, line: 438, column: 6)
!6624 = !DILocation(line: 438, column: 6, scope: !6606)
!6625 = !DILocation(line: 442, column: 3, scope: !6626)
!6626 = distinct !DILexicalBlock(scope: !6623, file: !6462, line: 440, column: 22)
!6627 = !DILocation(line: 455, column: 1, scope: !6606)
!6628 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6462, file: !6462, line: 530, type: !6629, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !6631)
!6629 = !DISubroutineType(types: !6630)
!6630 = !{null, !6465, !106, !108}
!6631 = !{!6632, !6633, !6634}
!6632 = !DILocalVariable(name: "main_thread", arg: 1, scope: !6628, file: !6462, line: 530, type: !6465)
!6633 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !6628, file: !6462, line: 530, type: !106)
!6634 = !DILocalVariable(name: "_main", arg: 3, scope: !6628, file: !6462, line: 531, type: !108)
!6635 = !DILocation(line: 0, scope: !6628)
!6636 = !DILocation(line: 535, column: 11, scope: !6628)
!6637 = !DILocation(line: 560, column: 2, scope: !6628)
!6638 = !DILocation(line: 576, column: 2, scope: !6628)
!6639 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!6640 = !DILocation(line: 603, column: 2, scope: !6628)
!6641 = distinct !DISubprogram(name: "z_arm_fault", scope: !6642, file: !6642, line: 1036, type: !6643, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2597, retainedNodes: !6658)
!6642 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6643 = !DISubroutineType(types: !6644)
!6644 = !{null, !118, !118, !118, !6645}
!6645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6646, size: 32)
!6646 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !216, line: 37, baseType: !6647)
!6647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !216, line: 25, size: 288, elements: !6648)
!6648 = !{!6649, !6650, !6651, !6652, !6653, !6654, !6655, !6656, !6657}
!6649 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6647, file: !216, line: 26, baseType: !118, size: 32)
!6650 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6647, file: !216, line: 27, baseType: !118, size: 32, offset: 32)
!6651 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6647, file: !216, line: 28, baseType: !118, size: 32, offset: 64)
!6652 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6647, file: !216, line: 29, baseType: !118, size: 32, offset: 96)
!6653 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6647, file: !216, line: 30, baseType: !118, size: 32, offset: 128)
!6654 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6647, file: !216, line: 31, baseType: !118, size: 32, offset: 160)
!6655 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6647, file: !216, line: 32, baseType: !118, size: 32, offset: 192)
!6656 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6647, file: !216, line: 33, baseType: !118, size: 32, offset: 224)
!6657 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6647, file: !216, line: 34, baseType: !118, size: 32, offset: 256)
!6658 = !{!6659, !6660, !6661, !6662, !6663, !6664, !6665, !6666, !6667, !6668}
!6659 = !DILocalVariable(name: "msp", arg: 1, scope: !6641, file: !6642, line: 1036, type: !118)
!6660 = !DILocalVariable(name: "psp", arg: 2, scope: !6641, file: !6642, line: 1036, type: !118)
!6661 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6641, file: !6642, line: 1036, type: !118)
!6662 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !6641, file: !6642, line: 1037, type: !6645)
!6663 = !DILocalVariable(name: "reason", scope: !6641, file: !6642, line: 1039, type: !118)
!6664 = !DILocalVariable(name: "fault", scope: !6641, file: !6642, line: 1040, type: !119)
!6665 = !DILocalVariable(name: "recoverable", scope: !6641, file: !6642, line: 1041, type: !345)
!6666 = !DILocalVariable(name: "nested_exc", scope: !6641, file: !6642, line: 1041, type: !345)
!6667 = !DILocalVariable(name: "esf", scope: !6641, file: !6642, line: 1042, type: !2625)
!6668 = !DILocalVariable(name: "esf_copy", scope: !6641, file: !6642, line: 1047, type: !2626)
!6669 = !DILocation(line: 0, scope: !6641)
!6670 = !DILocation(line: 1040, column: 19, scope: !6641)
!6671 = !DILocation(line: 1041, column: 2, scope: !6641)
!6672 = !DILocation(line: 1047, column: 2, scope: !6641)
!6673 = !DILocation(line: 1047, column: 15, scope: !6641)
!6674 = !DILocalVariable(name: "key", arg: 1, scope: !6675, file: !6013, line: 84, type: !32)
!6675 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6013, file: !6013, line: 84, type: !6024, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2597, retainedNodes: !6676)
!6676 = !{!6674}
!6677 = !DILocation(line: 0, scope: !6675, inlinedAt: !6678)
!6678 = distinct !DILocation(line: 1050, column: 2, scope: !6641)
!6679 = !DILocation(line: 95, column: 2, scope: !6675, inlinedAt: !6678)
!6680 = !{i64 2073723}
!6681 = !DILocation(line: 1055, column: 9, scope: !6641)
!6682 = !DILocation(line: 1056, column: 2, scope: !6683)
!6683 = distinct !DILexicalBlock(scope: !6684, file: !6642, line: 1056, column: 2)
!6684 = distinct !DILexicalBlock(scope: !6641, file: !6642, line: 1056, column: 2)
!6685 = !DILocation(line: 1056, column: 2, scope: !6684)
!6686 = !DILocation(line: 1056, column: 2, scope: !6687)
!6687 = distinct !DILexicalBlock(scope: !6683, file: !6642, line: 1056, column: 2)
!6688 = !DILocation(line: 1040, column: 24, scope: !6641)
!6689 = !DILocation(line: 1063, column: 11, scope: !6641)
!6690 = !DILocation(line: 1064, column: 6, scope: !6691)
!6691 = distinct !DILexicalBlock(scope: !6641, file: !6642, line: 1064, column: 6)
!6692 = !{i8 0, i8 2}
!6693 = !DILocation(line: 1064, column: 6, scope: !6641)
!6694 = !DILocation(line: 1070, column: 20, scope: !6641)
!6695 = !DILocation(line: 1070, column: 2, scope: !6641)
!6696 = !DILocation(line: 1089, column: 6, scope: !6697)
!6697 = distinct !DILexicalBlock(scope: !6641, file: !6642, line: 1089, column: 6)
!6698 = !DILocation(line: 0, scope: !6697)
!6699 = !DILocation(line: 1089, column: 6, scope: !6641)
!6700 = !DILocation(line: 1090, column: 28, scope: !6701)
!6701 = distinct !DILexicalBlock(scope: !6702, file: !6642, line: 1090, column: 7)
!6702 = distinct !DILexicalBlock(scope: !6697, file: !6642, line: 1089, column: 18)
!6703 = !DILocation(line: 1090, column: 44, scope: !6701)
!6704 = !DILocation(line: 1090, column: 7, scope: !6702)
!6705 = !DILocation(line: 1091, column: 24, scope: !6706)
!6706 = distinct !DILexicalBlock(scope: !6701, file: !6642, line: 1090, column: 50)
!6707 = !DILocation(line: 1092, column: 3, scope: !6706)
!6708 = !DILocation(line: 1094, column: 23, scope: !6709)
!6709 = distinct !DILexicalBlock(scope: !6697, file: !6642, line: 1093, column: 9)
!6710 = !DILocation(line: 1097, column: 2, scope: !6641)
!6711 = !DILocation(line: 1098, column: 1, scope: !6641)
!6712 = distinct !DISubprogram(name: "get_esf", scope: !6642, file: !6642, line: 894, type: !6713, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2597, retainedNodes: !6716)
!6713 = !DISubroutineType(types: !6714)
!6714 = !{!2625, !118, !118, !118, !6715}
!6715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !345, size: 32)
!6716 = !{!6717, !6718, !6719, !6720, !6721, !6722}
!6717 = !DILocalVariable(name: "msp", arg: 1, scope: !6712, file: !6642, line: 894, type: !118)
!6718 = !DILocalVariable(name: "psp", arg: 2, scope: !6712, file: !6642, line: 894, type: !118)
!6719 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6712, file: !6642, line: 894, type: !118)
!6720 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !6712, file: !6642, line: 895, type: !6715)
!6721 = !DILocalVariable(name: "alternative_state_exc", scope: !6712, file: !6642, line: 897, type: !345)
!6722 = !DILocalVariable(name: "ptr_esf", scope: !6712, file: !6642, line: 898, type: !2625)
!6723 = !DILocation(line: 0, scope: !6712)
!6724 = !DILocation(line: 900, column: 14, scope: !6712)
!6725 = !DILocation(line: 902, column: 49, scope: !6726)
!6726 = distinct !DILexicalBlock(scope: !6712, file: !6642, line: 902, column: 6)
!6727 = !DILocation(line: 902, column: 6, scope: !6712)
!6728 = !DILocation(line: 983, column: 44, scope: !6729)
!6729 = distinct !DILexicalBlock(scope: !6712, file: !6642, line: 983, column: 6)
!6730 = !DILocation(line: 985, column: 3, scope: !6731)
!6731 = distinct !DILexicalBlock(scope: !6732, file: !6642, line: 985, column: 3)
!6732 = distinct !DILexicalBlock(scope: !6733, file: !6642, line: 985, column: 3)
!6733 = distinct !DILexicalBlock(scope: !6734, file: !6642, line: 985, column: 3)
!6734 = distinct !DILexicalBlock(scope: !6735, file: !6642, line: 985, column: 3)
!6735 = distinct !DILexicalBlock(scope: !6729, file: !6642, line: 984, column: 47)
!6736 = !DILocation(line: 986, column: 3, scope: !6735)
!6737 = !DILocation(line: 983, column: 18, scope: !6729)
!6738 = !DILocation(line: 991, column: 7, scope: !6739)
!6739 = distinct !DILexicalBlock(scope: !6740, file: !6642, line: 990, column: 30)
!6740 = distinct !DILexicalBlock(scope: !6712, file: !6642, line: 990, column: 6)
!6741 = !DILocation(line: 998, column: 16, scope: !6742)
!6742 = distinct !DILexicalBlock(scope: !6743, file: !6642, line: 995, column: 10)
!6743 = distinct !DILexicalBlock(scope: !6739, file: !6642, line: 991, column: 7)
!6744 = !DILocation(line: 1002, column: 2, scope: !6712)
!6745 = !DILocation(line: 1003, column: 1, scope: !6712)
!6746 = distinct !DISubprogram(name: "fault_handle", scope: !6642, file: !6642, line: 786, type: !6747, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2597, retainedNodes: !6749)
!6747 = !DISubroutineType(types: !6748)
!6748 = !{!118, !2625, !119, !6715}
!6749 = !{!6750, !6751, !6752, !6753}
!6750 = !DILocalVariable(name: "esf", arg: 1, scope: !6746, file: !6642, line: 786, type: !2625)
!6751 = !DILocalVariable(name: "fault", arg: 2, scope: !6746, file: !6642, line: 786, type: !119)
!6752 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6746, file: !6642, line: 786, type: !6715)
!6753 = !DILocalVariable(name: "reason", scope: !6746, file: !6642, line: 788, type: !118)
!6754 = !DILocation(line: 0, scope: !6746)
!6755 = !DILocation(line: 790, column: 15, scope: !6746)
!6756 = !DILocation(line: 792, column: 2, scope: !6746)
!6757 = !DILocation(line: 794, column: 12, scope: !6758)
!6758 = distinct !DILexicalBlock(scope: !6746, file: !6642, line: 792, column: 17)
!6759 = !DILocation(line: 795, column: 3, scope: !6758)
!6760 = !DILocation(line: 800, column: 12, scope: !6758)
!6761 = !DILocation(line: 801, column: 3, scope: !6758)
!6762 = !DILocation(line: 803, column: 12, scope: !6758)
!6763 = !DILocation(line: 804, column: 3, scope: !6758)
!6764 = !DILocation(line: 806, column: 12, scope: !6758)
!6765 = !DILocation(line: 807, column: 3, scope: !6758)
!6766 = !DILocation(line: 814, column: 3, scope: !6758)
!6767 = !DILocation(line: 815, column: 3, scope: !6758)
!6768 = !DILocation(line: 820, column: 3, scope: !6758)
!6769 = !DILocation(line: 821, column: 3, scope: !6758)
!6770 = !DILocation(line: 829, column: 2, scope: !6746)
!6771 = distinct !DISubprogram(name: "hard_fault", scope: !6642, file: !6642, line: 709, type: !6772, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2597, retainedNodes: !6774)
!6772 = !DISubroutineType(types: !6773)
!6773 = !{!118, !2625, !6715}
!6774 = !{!6775, !6776, !6777}
!6775 = !DILocalVariable(name: "esf", arg: 1, scope: !6771, file: !6642, line: 709, type: !2625)
!6776 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6771, file: !6642, line: 709, type: !6715)
!6777 = !DILocalVariable(name: "reason", scope: !6771, file: !6642, line: 711, type: !118)
!6778 = !DILocation(line: 0, scope: !6771)
!6779 = !DILocation(line: 713, column: 2, scope: !6780)
!6780 = distinct !DILexicalBlock(scope: !6781, file: !6642, line: 713, column: 2)
!6781 = distinct !DILexicalBlock(scope: !6782, file: !6642, line: 713, column: 2)
!6782 = distinct !DILexicalBlock(scope: !6783, file: !6642, line: 713, column: 2)
!6783 = distinct !DILexicalBlock(scope: !6771, file: !6642, line: 713, column: 2)
!6784 = !DILocation(line: 732, column: 15, scope: !6771)
!6785 = !DILocation(line: 734, column: 12, scope: !6786)
!6786 = distinct !DILexicalBlock(scope: !6771, file: !6642, line: 734, column: 6)
!6787 = !DILocation(line: 734, column: 17, scope: !6786)
!6788 = !DILocation(line: 734, column: 41, scope: !6786)
!6789 = !DILocation(line: 734, column: 6, scope: !6771)
!6790 = !DILocation(line: 735, column: 3, scope: !6791)
!6791 = distinct !DILexicalBlock(scope: !6792, file: !6642, line: 735, column: 3)
!6792 = distinct !DILexicalBlock(scope: !6793, file: !6642, line: 735, column: 3)
!6793 = distinct !DILexicalBlock(scope: !6794, file: !6642, line: 735, column: 3)
!6794 = distinct !DILexicalBlock(scope: !6795, file: !6642, line: 735, column: 3)
!6795 = distinct !DILexicalBlock(scope: !6786, file: !6642, line: 734, column: 47)
!6796 = !DILocation(line: 736, column: 2, scope: !6795)
!6797 = !DILocation(line: 736, column: 19, scope: !6798)
!6798 = distinct !DILexicalBlock(scope: !6786, file: !6642, line: 736, column: 13)
!6799 = !DILocation(line: 736, column: 49, scope: !6798)
!6800 = !DILocation(line: 736, column: 13, scope: !6786)
!6801 = !DILocation(line: 737, column: 3, scope: !6802)
!6802 = distinct !DILexicalBlock(scope: !6803, file: !6642, line: 737, column: 3)
!6803 = distinct !DILexicalBlock(scope: !6804, file: !6642, line: 737, column: 3)
!6804 = distinct !DILexicalBlock(scope: !6805, file: !6642, line: 737, column: 3)
!6805 = distinct !DILexicalBlock(scope: !6806, file: !6642, line: 737, column: 3)
!6806 = distinct !DILexicalBlock(scope: !6798, file: !6642, line: 736, column: 55)
!6807 = !DILocation(line: 738, column: 2, scope: !6806)
!6808 = !DILocation(line: 738, column: 19, scope: !6809)
!6809 = distinct !DILexicalBlock(scope: !6798, file: !6642, line: 738, column: 13)
!6810 = !DILocation(line: 738, column: 24, scope: !6809)
!6811 = !DILocation(line: 738, column: 47, scope: !6809)
!6812 = !DILocation(line: 738, column: 13, scope: !6798)
!6813 = !DILocation(line: 739, column: 3, scope: !6814)
!6814 = distinct !DILexicalBlock(scope: !6815, file: !6642, line: 739, column: 3)
!6815 = distinct !DILexicalBlock(scope: !6816, file: !6642, line: 739, column: 3)
!6816 = distinct !DILexicalBlock(scope: !6817, file: !6642, line: 739, column: 3)
!6817 = distinct !DILexicalBlock(scope: !6818, file: !6642, line: 739, column: 3)
!6818 = distinct !DILexicalBlock(scope: !6809, file: !6642, line: 738, column: 53)
!6819 = !DILocation(line: 740, column: 7, scope: !6820)
!6820 = distinct !DILexicalBlock(scope: !6818, file: !6642, line: 740, column: 7)
!6821 = !DILocation(line: 740, column: 7, scope: !6818)
!6822 = !DILocation(line: 741, column: 4, scope: !6823)
!6823 = distinct !DILexicalBlock(scope: !6824, file: !6642, line: 741, column: 4)
!6824 = distinct !DILexicalBlock(scope: !6825, file: !6642, line: 741, column: 4)
!6825 = distinct !DILexicalBlock(scope: !6826, file: !6642, line: 741, column: 4)
!6826 = distinct !DILexicalBlock(scope: !6827, file: !6642, line: 741, column: 4)
!6827 = distinct !DILexicalBlock(scope: !6820, file: !6642, line: 740, column: 38)
!6828 = !DILocation(line: 742, column: 24, scope: !6827)
!6829 = !DILocation(line: 743, column: 3, scope: !6827)
!6830 = !DILocation(line: 743, column: 20, scope: !6831)
!6831 = distinct !DILexicalBlock(scope: !6820, file: !6642, line: 743, column: 14)
!6832 = !DILocation(line: 743, column: 25, scope: !6831)
!6833 = !DILocation(line: 743, column: 52, scope: !6831)
!6834 = !DILocation(line: 743, column: 14, scope: !6820)
!6835 = !DILocation(line: 744, column: 13, scope: !6836)
!6836 = distinct !DILexicalBlock(scope: !6831, file: !6642, line: 743, column: 58)
!6837 = !DILocation(line: 745, column: 3, scope: !6836)
!6838 = !DILocation(line: 745, column: 20, scope: !6839)
!6839 = distinct !DILexicalBlock(scope: !6831, file: !6642, line: 745, column: 14)
!6840 = !DILocation(line: 745, column: 25, scope: !6839)
!6841 = !DILocation(line: 745, column: 52, scope: !6839)
!6842 = !DILocation(line: 745, column: 14, scope: !6831)
!6843 = !DILocation(line: 746, column: 13, scope: !6844)
!6844 = distinct !DILexicalBlock(scope: !6839, file: !6642, line: 745, column: 58)
!6845 = !DILocation(line: 747, column: 3, scope: !6844)
!6846 = !DILocation(line: 747, column: 20, scope: !6847)
!6847 = distinct !DILexicalBlock(scope: !6839, file: !6642, line: 747, column: 14)
!6848 = !DILocation(line: 747, column: 52, scope: !6847)
!6849 = !DILocation(line: 747, column: 14, scope: !6839)
!6850 = !DILocation(line: 748, column: 13, scope: !6851)
!6851 = distinct !DILexicalBlock(scope: !6847, file: !6642, line: 747, column: 58)
!6852 = !DILocation(line: 754, column: 4, scope: !6853)
!6853 = distinct !DILexicalBlock(scope: !6854, file: !6642, line: 754, column: 4)
!6854 = distinct !DILexicalBlock(scope: !6855, file: !6642, line: 754, column: 4)
!6855 = distinct !DILexicalBlock(scope: !6856, file: !6642, line: 754, column: 4)
!6856 = distinct !DILexicalBlock(scope: !6847, file: !6642, line: 753, column: 10)
!6857 = !DILocation(line: 758, column: 3, scope: !6858)
!6858 = distinct !DILexicalBlock(scope: !6859, file: !6642, line: 758, column: 3)
!6859 = distinct !DILexicalBlock(scope: !6860, file: !6642, line: 758, column: 3)
!6860 = distinct !DILexicalBlock(scope: !6861, file: !6642, line: 758, column: 3)
!6861 = distinct !DILexicalBlock(scope: !6809, file: !6642, line: 757, column: 9)
!6862 = !DILocation(line: 766, column: 2, scope: !6771)
!6863 = distinct !DISubprogram(name: "mem_manage_fault", scope: !6642, file: !6642, line: 229, type: !6747, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2597, retainedNodes: !6864)
!6864 = !{!6865, !6866, !6867, !6868, !6869, !6870, !6873}
!6865 = !DILocalVariable(name: "esf", arg: 1, scope: !6863, file: !6642, line: 229, type: !2625)
!6866 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6863, file: !6642, line: 229, type: !119)
!6867 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6863, file: !6642, line: 230, type: !6715)
!6868 = !DILocalVariable(name: "reason", scope: !6863, file: !6642, line: 232, type: !118)
!6869 = !DILocalVariable(name: "mmfar", scope: !6863, file: !6642, line: 233, type: !118)
!6870 = !DILocalVariable(name: "temp", scope: !6871, file: !6642, line: 254, type: !118)
!6871 = distinct !DILexicalBlock(scope: !6872, file: !6642, line: 244, column: 48)
!6872 = distinct !DILexicalBlock(scope: !6863, file: !6642, line: 244, column: 6)
!6873 = !DILocalVariable(name: "min_stack_ptr", scope: !6874, file: !6642, line: 309, type: !118)
!6874 = distinct !DILexicalBlock(scope: !6875, file: !6642, line: 308, column: 43)
!6875 = distinct !DILexicalBlock(scope: !6876, file: !6642, line: 308, column: 7)
!6876 = distinct !DILexicalBlock(scope: !6877, file: !6642, line: 289, column: 40)
!6877 = distinct !DILexicalBlock(scope: !6863, file: !6642, line: 288, column: 6)
!6878 = !DILocation(line: 0, scope: !6863)
!6879 = !DILocation(line: 235, column: 2, scope: !6880)
!6880 = distinct !DILexicalBlock(scope: !6881, file: !6642, line: 235, column: 2)
!6881 = distinct !DILexicalBlock(scope: !6882, file: !6642, line: 235, column: 2)
!6882 = distinct !DILexicalBlock(scope: !6883, file: !6642, line: 235, column: 2)
!6883 = distinct !DILexicalBlock(scope: !6863, file: !6642, line: 235, column: 2)
!6884 = !DILocation(line: 237, column: 12, scope: !6885)
!6885 = distinct !DILexicalBlock(scope: !6863, file: !6642, line: 237, column: 6)
!6886 = !DILocation(line: 237, column: 17, scope: !6885)
!6887 = !DILocation(line: 237, column: 41, scope: !6885)
!6888 = !DILocation(line: 237, column: 6, scope: !6863)
!6889 = !DILocation(line: 238, column: 3, scope: !6890)
!6890 = distinct !DILexicalBlock(scope: !6891, file: !6642, line: 238, column: 3)
!6891 = distinct !DILexicalBlock(scope: !6892, file: !6642, line: 238, column: 3)
!6892 = distinct !DILexicalBlock(scope: !6893, file: !6642, line: 238, column: 3)
!6893 = distinct !DILexicalBlock(scope: !6894, file: !6642, line: 238, column: 3)
!6894 = distinct !DILexicalBlock(scope: !6885, file: !6642, line: 237, column: 47)
!6895 = !DILocation(line: 240, column: 2, scope: !6894)
!6896 = !DILocation(line: 241, column: 12, scope: !6897)
!6897 = distinct !DILexicalBlock(scope: !6863, file: !6642, line: 241, column: 6)
!6898 = !DILocation(line: 241, column: 17, scope: !6897)
!6899 = !DILocation(line: 241, column: 43, scope: !6897)
!6900 = !DILocation(line: 241, column: 6, scope: !6863)
!6901 = !DILocation(line: 242, column: 3, scope: !6902)
!6902 = distinct !DILexicalBlock(scope: !6903, file: !6642, line: 242, column: 3)
!6903 = distinct !DILexicalBlock(scope: !6904, file: !6642, line: 242, column: 3)
!6904 = distinct !DILexicalBlock(scope: !6905, file: !6642, line: 242, column: 3)
!6905 = distinct !DILexicalBlock(scope: !6906, file: !6642, line: 242, column: 3)
!6906 = distinct !DILexicalBlock(scope: !6897, file: !6642, line: 241, column: 49)
!6907 = !DILocation(line: 243, column: 2, scope: !6906)
!6908 = !DILocation(line: 244, column: 12, scope: !6872)
!6909 = !DILocation(line: 244, column: 17, scope: !6872)
!6910 = !DILocation(line: 244, column: 42, scope: !6872)
!6911 = !DILocation(line: 244, column: 6, scope: !6863)
!6912 = !DILocation(line: 245, column: 3, scope: !6913)
!6913 = distinct !DILexicalBlock(scope: !6914, file: !6642, line: 245, column: 3)
!6914 = distinct !DILexicalBlock(scope: !6915, file: !6642, line: 245, column: 3)
!6915 = distinct !DILexicalBlock(scope: !6916, file: !6642, line: 245, column: 3)
!6916 = distinct !DILexicalBlock(scope: !6871, file: !6642, line: 245, column: 3)
!6917 = !DILocation(line: 254, column: 24, scope: !6871)
!6918 = !DILocation(line: 0, scope: !6871)
!6919 = !DILocation(line: 256, column: 13, scope: !6920)
!6920 = distinct !DILexicalBlock(scope: !6871, file: !6642, line: 256, column: 7)
!6921 = !DILocation(line: 256, column: 18, scope: !6920)
!6922 = !DILocation(line: 256, column: 44, scope: !6920)
!6923 = !DILocation(line: 256, column: 7, scope: !6871)
!6924 = !DILocation(line: 258, column: 4, scope: !6925)
!6925 = distinct !DILexicalBlock(scope: !6926, file: !6642, line: 258, column: 4)
!6926 = distinct !DILexicalBlock(scope: !6927, file: !6642, line: 258, column: 4)
!6927 = distinct !DILexicalBlock(scope: !6928, file: !6642, line: 258, column: 4)
!6928 = distinct !DILexicalBlock(scope: !6929, file: !6642, line: 258, column: 4)
!6929 = distinct !DILexicalBlock(scope: !6920, file: !6642, line: 256, column: 50)
!6930 = !DILocation(line: 259, column: 24, scope: !6931)
!6931 = distinct !DILexicalBlock(scope: !6929, file: !6642, line: 259, column: 8)
!6932 = !DILocation(line: 259, column: 8, scope: !6929)
!6933 = !DILocation(line: 261, column: 15, scope: !6934)
!6934 = distinct !DILexicalBlock(scope: !6931, file: !6642, line: 259, column: 30)
!6935 = !DILocation(line: 262, column: 4, scope: !6934)
!6936 = !DILocation(line: 265, column: 12, scope: !6937)
!6937 = distinct !DILexicalBlock(scope: !6863, file: !6642, line: 265, column: 6)
!6938 = !DILocation(line: 265, column: 17, scope: !6937)
!6939 = !DILocation(line: 265, column: 42, scope: !6937)
!6940 = !DILocation(line: 265, column: 6, scope: !6863)
!6941 = !DILocation(line: 266, column: 3, scope: !6942)
!6942 = distinct !DILexicalBlock(scope: !6943, file: !6642, line: 266, column: 3)
!6943 = distinct !DILexicalBlock(scope: !6944, file: !6642, line: 266, column: 3)
!6944 = distinct !DILexicalBlock(scope: !6945, file: !6642, line: 266, column: 3)
!6945 = distinct !DILexicalBlock(scope: !6946, file: !6642, line: 266, column: 3)
!6946 = distinct !DILexicalBlock(scope: !6937, file: !6642, line: 265, column: 48)
!6947 = !DILocation(line: 267, column: 2, scope: !6946)
!6948 = !DILocation(line: 269, column: 12, scope: !6949)
!6949 = distinct !DILexicalBlock(scope: !6863, file: !6642, line: 269, column: 6)
!6950 = !DILocation(line: 269, column: 17, scope: !6949)
!6951 = !DILocation(line: 269, column: 41, scope: !6949)
!6952 = !DILocation(line: 269, column: 6, scope: !6863)
!6953 = !DILocation(line: 270, column: 3, scope: !6954)
!6954 = distinct !DILexicalBlock(scope: !6955, file: !6642, line: 270, column: 3)
!6955 = distinct !DILexicalBlock(scope: !6956, file: !6642, line: 270, column: 3)
!6956 = distinct !DILexicalBlock(scope: !6957, file: !6642, line: 270, column: 3)
!6957 = distinct !DILexicalBlock(scope: !6958, file: !6642, line: 270, column: 3)
!6958 = distinct !DILexicalBlock(scope: !6949, file: !6642, line: 269, column: 47)
!6959 = !DILocation(line: 272, column: 2, scope: !6958)
!6960 = !DILocation(line: 288, column: 12, scope: !6877)
!6961 = !DILocation(line: 288, column: 17, scope: !6877)
!6962 = !DILocation(line: 288, column: 41, scope: !6877)
!6963 = !DILocation(line: 289, column: 9, scope: !6877)
!6964 = !DILocation(line: 289, column: 14, scope: !6877)
!6965 = !DILocation(line: 288, column: 6, scope: !6863)
!6966 = !DILocation(line: 308, column: 12, scope: !6875)
!6967 = !DILocation(line: 308, column: 17, scope: !6875)
!6968 = !DILocation(line: 308, column: 7, scope: !6876)
!6969 = !DILocation(line: 310, column: 6, scope: !6874)
!6970 = !DILocation(line: 309, column: 29, scope: !6874)
!6971 = !DILocation(line: 0, scope: !6874)
!6972 = !DILocation(line: 312, column: 8, scope: !6973)
!6973 = distinct !DILexicalBlock(scope: !6874, file: !6642, line: 312, column: 8)
!6974 = !DILocation(line: 312, column: 8, scope: !6874)
!6975 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !6976, file: !6334, line: 1099, type: !118)
!6976 = distinct !DISubprogram(name: "__set_PSP", scope: !6334, file: !6334, line: 1099, type: !6429, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2597, retainedNodes: !6977)
!6977 = !{!6975}
!6978 = !DILocation(line: 0, scope: !6976, inlinedAt: !6979)
!6979 = distinct !DILocation(line: 338, column: 5, scope: !6980)
!6980 = distinct !DILexicalBlock(scope: !6973, file: !6642, line: 312, column: 23)
!6981 = !DILocation(line: 1101, column: 3, scope: !6976, inlinedAt: !6979)
!6982 = !{i64 2949088}
!6983 = !DILocation(line: 341, column: 4, scope: !6980)
!6984 = !DILocation(line: 342, column: 5, scope: !6985)
!6985 = distinct !DILexicalBlock(scope: !6986, file: !6642, line: 342, column: 5)
!6986 = distinct !DILexicalBlock(scope: !6987, file: !6642, line: 342, column: 5)
!6987 = distinct !DILexicalBlock(scope: !6973, file: !6642, line: 341, column: 11)
!6988 = !DILocation(line: 342, column: 5, scope: !6986)
!6989 = !DILocation(line: 342, column: 5, scope: !6990)
!6990 = distinct !DILexicalBlock(scope: !6985, file: !6642, line: 342, column: 5)
!6991 = !DILocation(line: 360, column: 12, scope: !6992)
!6992 = distinct !DILexicalBlock(scope: !6863, file: !6642, line: 360, column: 6)
!6993 = !DILocation(line: 360, column: 17, scope: !6992)
!6994 = !DILocation(line: 360, column: 41, scope: !6992)
!6995 = !DILocation(line: 360, column: 6, scope: !6863)
!6996 = !DILocation(line: 361, column: 14, scope: !6997)
!6997 = distinct !DILexicalBlock(scope: !6992, file: !6642, line: 360, column: 47)
!6998 = !DILocation(line: 362, column: 2, scope: !6997)
!6999 = !DILocation(line: 366, column: 12, scope: !6863)
!7000 = !DILocation(line: 369, column: 15, scope: !6863)
!7001 = !DILocation(line: 371, column: 2, scope: !6863)
!7002 = distinct !DISubprogram(name: "bus_fault", scope: !6642, file: !6642, line: 383, type: !7003, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2597, retainedNodes: !7005)
!7003 = !DISubroutineType(types: !7004)
!7004 = !{!119, !2625, !119, !6715}
!7005 = !{!7006, !7007, !7008, !7009, !7010}
!7006 = !DILocalVariable(name: "esf", arg: 1, scope: !7002, file: !6642, line: 383, type: !2625)
!7007 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7002, file: !6642, line: 383, type: !119)
!7008 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7002, file: !6642, line: 383, type: !6715)
!7009 = !DILocalVariable(name: "reason", scope: !7002, file: !6642, line: 385, type: !118)
!7010 = !DILocalVariable(name: "bfar", scope: !7011, file: !6642, line: 405, type: !118)
!7011 = distinct !DILexicalBlock(scope: !7012, file: !6642, line: 395, column: 42)
!7012 = distinct !DILexicalBlock(scope: !7002, file: !6642, line: 395, column: 6)
!7013 = !DILocation(line: 0, scope: !7002)
!7014 = !DILocation(line: 387, column: 2, scope: !7015)
!7015 = distinct !DILexicalBlock(scope: !7016, file: !6642, line: 387, column: 2)
!7016 = distinct !DILexicalBlock(scope: !7017, file: !6642, line: 387, column: 2)
!7017 = distinct !DILexicalBlock(scope: !7018, file: !6642, line: 387, column: 2)
!7018 = distinct !DILexicalBlock(scope: !7002, file: !6642, line: 387, column: 2)
!7019 = !DILocation(line: 389, column: 11, scope: !7020)
!7020 = distinct !DILexicalBlock(scope: !7002, file: !6642, line: 389, column: 6)
!7021 = !DILocation(line: 389, column: 16, scope: !7020)
!7022 = !DILocation(line: 389, column: 6, scope: !7002)
!7023 = !DILocation(line: 390, column: 3, scope: !7024)
!7024 = distinct !DILexicalBlock(scope: !7025, file: !6642, line: 390, column: 3)
!7025 = distinct !DILexicalBlock(scope: !7026, file: !6642, line: 390, column: 3)
!7026 = distinct !DILexicalBlock(scope: !7027, file: !6642, line: 390, column: 3)
!7027 = distinct !DILexicalBlock(scope: !7028, file: !6642, line: 390, column: 3)
!7028 = distinct !DILexicalBlock(scope: !7020, file: !6642, line: 389, column: 39)
!7029 = !DILocation(line: 391, column: 2, scope: !7028)
!7030 = !DILocation(line: 392, column: 11, scope: !7031)
!7031 = distinct !DILexicalBlock(scope: !7002, file: !6642, line: 392, column: 6)
!7032 = !DILocation(line: 392, column: 16, scope: !7031)
!7033 = !DILocation(line: 392, column: 6, scope: !7002)
!7034 = !DILocation(line: 393, column: 3, scope: !7035)
!7035 = distinct !DILexicalBlock(scope: !7036, file: !6642, line: 393, column: 3)
!7036 = distinct !DILexicalBlock(scope: !7037, file: !6642, line: 393, column: 3)
!7037 = distinct !DILexicalBlock(scope: !7038, file: !6642, line: 393, column: 3)
!7038 = distinct !DILexicalBlock(scope: !7039, file: !6642, line: 393, column: 3)
!7039 = distinct !DILexicalBlock(scope: !7031, file: !6642, line: 392, column: 41)
!7040 = !DILocation(line: 394, column: 2, scope: !7039)
!7041 = !DILocation(line: 395, column: 11, scope: !7012)
!7042 = !DILocation(line: 395, column: 16, scope: !7012)
!7043 = !DILocation(line: 395, column: 6, scope: !7002)
!7044 = !DILocation(line: 396, column: 3, scope: !7045)
!7045 = distinct !DILexicalBlock(scope: !7046, file: !6642, line: 396, column: 3)
!7046 = distinct !DILexicalBlock(scope: !7047, file: !6642, line: 396, column: 3)
!7047 = distinct !DILexicalBlock(scope: !7048, file: !6642, line: 396, column: 3)
!7048 = distinct !DILexicalBlock(scope: !7011, file: !6642, line: 396, column: 3)
!7049 = !DILocation(line: 405, column: 3, scope: !7011)
!7050 = !DILocation(line: 0, scope: !7011)
!7051 = !DILocation(line: 407, column: 13, scope: !7052)
!7052 = distinct !DILexicalBlock(scope: !7011, file: !6642, line: 407, column: 7)
!7053 = !DILocation(line: 407, column: 18, scope: !7052)
!7054 = !DILocation(line: 407, column: 44, scope: !7052)
!7055 = !DILocation(line: 407, column: 7, scope: !7011)
!7056 = !DILocation(line: 408, column: 4, scope: !7057)
!7057 = distinct !DILexicalBlock(scope: !7058, file: !6642, line: 408, column: 4)
!7058 = distinct !DILexicalBlock(scope: !7059, file: !6642, line: 408, column: 4)
!7059 = distinct !DILexicalBlock(scope: !7060, file: !6642, line: 408, column: 4)
!7060 = distinct !DILexicalBlock(scope: !7061, file: !6642, line: 408, column: 4)
!7061 = distinct !DILexicalBlock(scope: !7052, file: !6642, line: 407, column: 50)
!7062 = !DILocation(line: 409, column: 24, scope: !7063)
!7063 = distinct !DILexicalBlock(scope: !7061, file: !6642, line: 409, column: 8)
!7064 = !DILocation(line: 409, column: 8, scope: !7061)
!7065 = !DILocation(line: 411, column: 15, scope: !7066)
!7066 = distinct !DILexicalBlock(scope: !7063, file: !6642, line: 409, column: 30)
!7067 = !DILocation(line: 412, column: 4, scope: !7066)
!7068 = !DILocation(line: 415, column: 11, scope: !7069)
!7069 = distinct !DILexicalBlock(scope: !7002, file: !6642, line: 415, column: 6)
!7070 = !DILocation(line: 415, column: 16, scope: !7069)
!7071 = !DILocation(line: 415, column: 6, scope: !7002)
!7072 = !DILocation(line: 416, column: 3, scope: !7073)
!7073 = distinct !DILexicalBlock(scope: !7074, file: !6642, line: 416, column: 3)
!7074 = distinct !DILexicalBlock(scope: !7075, file: !6642, line: 416, column: 3)
!7075 = distinct !DILexicalBlock(scope: !7076, file: !6642, line: 416, column: 3)
!7076 = distinct !DILexicalBlock(scope: !7077, file: !6642, line: 416, column: 3)
!7077 = distinct !DILexicalBlock(scope: !7069, file: !6642, line: 415, column: 44)
!7078 = !DILocation(line: 417, column: 2, scope: !7077)
!7079 = !DILocation(line: 418, column: 12, scope: !7080)
!7080 = distinct !DILexicalBlock(scope: !7002, file: !6642, line: 418, column: 6)
!7081 = !DILocation(line: 418, column: 17, scope: !7080)
!7082 = !DILocation(line: 418, column: 41, scope: !7080)
!7083 = !DILocation(line: 418, column: 6, scope: !7002)
!7084 = !DILocation(line: 423, column: 18, scope: !7085)
!7085 = distinct !DILexicalBlock(scope: !7080, file: !6642, line: 423, column: 13)
!7086 = !DILocation(line: 423, column: 23, scope: !7085)
!7087 = !DILocation(line: 423, column: 13, scope: !7080)
!7088 = !DILocation(line: 0, scope: !7080)
!7089 = !DILocation(line: 524, column: 12, scope: !7002)
!7090 = !DILocation(line: 526, column: 15, scope: !7002)
!7091 = !DILocation(line: 528, column: 2, scope: !7002)
!7092 = distinct !DISubprogram(name: "usage_fault", scope: !6642, file: !6642, line: 539, type: !7093, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2597, retainedNodes: !7097)
!7093 = !DISubroutineType(types: !7094)
!7094 = !{!118, !7095}
!7095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7096, size: 32)
!7096 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2626)
!7097 = !{!7098, !7099}
!7098 = !DILocalVariable(name: "esf", arg: 1, scope: !7092, file: !6642, line: 539, type: !7095)
!7099 = !DILocalVariable(name: "reason", scope: !7092, file: !6642, line: 541, type: !118)
!7100 = !DILocation(line: 0, scope: !7092)
!7101 = !DILocation(line: 543, column: 2, scope: !7102)
!7102 = distinct !DILexicalBlock(scope: !7103, file: !6642, line: 543, column: 2)
!7103 = distinct !DILexicalBlock(scope: !7104, file: !6642, line: 543, column: 2)
!7104 = distinct !DILexicalBlock(scope: !7105, file: !6642, line: 543, column: 2)
!7105 = distinct !DILexicalBlock(scope: !7092, file: !6642, line: 543, column: 2)
!7106 = !DILocation(line: 546, column: 12, scope: !7107)
!7107 = distinct !DILexicalBlock(scope: !7092, file: !6642, line: 546, column: 6)
!7108 = !DILocation(line: 546, column: 17, scope: !7107)
!7109 = !DILocation(line: 546, column: 43, scope: !7107)
!7110 = !DILocation(line: 546, column: 6, scope: !7092)
!7111 = !DILocation(line: 547, column: 3, scope: !7112)
!7112 = distinct !DILexicalBlock(scope: !7113, file: !6642, line: 547, column: 3)
!7113 = distinct !DILexicalBlock(scope: !7114, file: !6642, line: 547, column: 3)
!7114 = distinct !DILexicalBlock(scope: !7115, file: !6642, line: 547, column: 3)
!7115 = distinct !DILexicalBlock(scope: !7116, file: !6642, line: 547, column: 3)
!7116 = distinct !DILexicalBlock(scope: !7107, file: !6642, line: 546, column: 49)
!7117 = !DILocation(line: 548, column: 2, scope: !7116)
!7118 = !DILocation(line: 549, column: 12, scope: !7119)
!7119 = distinct !DILexicalBlock(scope: !7092, file: !6642, line: 549, column: 6)
!7120 = !DILocation(line: 549, column: 17, scope: !7119)
!7121 = !DILocation(line: 549, column: 43, scope: !7119)
!7122 = !DILocation(line: 549, column: 6, scope: !7092)
!7123 = !DILocation(line: 550, column: 3, scope: !7124)
!7124 = distinct !DILexicalBlock(scope: !7125, file: !6642, line: 550, column: 3)
!7125 = distinct !DILexicalBlock(scope: !7126, file: !6642, line: 550, column: 3)
!7126 = distinct !DILexicalBlock(scope: !7127, file: !6642, line: 550, column: 3)
!7127 = distinct !DILexicalBlock(scope: !7128, file: !6642, line: 550, column: 3)
!7128 = distinct !DILexicalBlock(scope: !7119, file: !6642, line: 549, column: 49)
!7129 = !DILocation(line: 551, column: 2, scope: !7128)
!7130 = !DILocation(line: 567, column: 12, scope: !7131)
!7131 = distinct !DILexicalBlock(scope: !7092, file: !6642, line: 567, column: 6)
!7132 = !DILocation(line: 567, column: 17, scope: !7131)
!7133 = !DILocation(line: 567, column: 38, scope: !7131)
!7134 = !DILocation(line: 567, column: 6, scope: !7092)
!7135 = !DILocation(line: 568, column: 3, scope: !7136)
!7136 = distinct !DILexicalBlock(scope: !7137, file: !6642, line: 568, column: 3)
!7137 = distinct !DILexicalBlock(scope: !7138, file: !6642, line: 568, column: 3)
!7138 = distinct !DILexicalBlock(scope: !7139, file: !6642, line: 568, column: 3)
!7139 = distinct !DILexicalBlock(scope: !7140, file: !6642, line: 568, column: 3)
!7140 = distinct !DILexicalBlock(scope: !7131, file: !6642, line: 567, column: 44)
!7141 = !DILocation(line: 569, column: 2, scope: !7140)
!7142 = !DILocation(line: 570, column: 12, scope: !7143)
!7143 = distinct !DILexicalBlock(scope: !7092, file: !6642, line: 570, column: 6)
!7144 = !DILocation(line: 570, column: 17, scope: !7143)
!7145 = !DILocation(line: 570, column: 39, scope: !7143)
!7146 = !DILocation(line: 570, column: 6, scope: !7092)
!7147 = !DILocation(line: 571, column: 3, scope: !7148)
!7148 = distinct !DILexicalBlock(scope: !7149, file: !6642, line: 571, column: 3)
!7149 = distinct !DILexicalBlock(scope: !7150, file: !6642, line: 571, column: 3)
!7150 = distinct !DILexicalBlock(scope: !7151, file: !6642, line: 571, column: 3)
!7151 = distinct !DILexicalBlock(scope: !7152, file: !6642, line: 571, column: 3)
!7152 = distinct !DILexicalBlock(scope: !7143, file: !6642, line: 570, column: 45)
!7153 = !DILocation(line: 572, column: 2, scope: !7152)
!7154 = !DILocation(line: 573, column: 12, scope: !7155)
!7155 = distinct !DILexicalBlock(scope: !7092, file: !6642, line: 573, column: 6)
!7156 = !DILocation(line: 573, column: 17, scope: !7155)
!7157 = !DILocation(line: 573, column: 42, scope: !7155)
!7158 = !DILocation(line: 573, column: 6, scope: !7092)
!7159 = !DILocation(line: 574, column: 3, scope: !7160)
!7160 = distinct !DILexicalBlock(scope: !7161, file: !6642, line: 574, column: 3)
!7161 = distinct !DILexicalBlock(scope: !7162, file: !6642, line: 574, column: 3)
!7162 = distinct !DILexicalBlock(scope: !7163, file: !6642, line: 574, column: 3)
!7163 = distinct !DILexicalBlock(scope: !7164, file: !6642, line: 574, column: 3)
!7164 = distinct !DILexicalBlock(scope: !7155, file: !6642, line: 573, column: 48)
!7165 = !DILocation(line: 575, column: 2, scope: !7164)
!7166 = !DILocation(line: 576, column: 12, scope: !7167)
!7167 = distinct !DILexicalBlock(scope: !7092, file: !6642, line: 576, column: 6)
!7168 = !DILocation(line: 576, column: 17, scope: !7167)
!7169 = !DILocation(line: 576, column: 44, scope: !7167)
!7170 = !DILocation(line: 576, column: 6, scope: !7092)
!7171 = !DILocation(line: 577, column: 3, scope: !7172)
!7172 = distinct !DILexicalBlock(scope: !7173, file: !6642, line: 577, column: 3)
!7173 = distinct !DILexicalBlock(scope: !7174, file: !6642, line: 577, column: 3)
!7174 = distinct !DILexicalBlock(scope: !7175, file: !6642, line: 577, column: 3)
!7175 = distinct !DILexicalBlock(scope: !7176, file: !6642, line: 577, column: 3)
!7176 = distinct !DILexicalBlock(scope: !7167, file: !6642, line: 576, column: 50)
!7177 = !DILocation(line: 578, column: 2, scope: !7176)
!7178 = !DILocation(line: 581, column: 12, scope: !7092)
!7179 = !DILocation(line: 583, column: 2, scope: !7092)
!7180 = distinct !DISubprogram(name: "debug_monitor", scope: !6642, file: !6642, line: 632, type: !7181, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2597, retainedNodes: !7183)
!7181 = !DISubroutineType(types: !7182)
!7182 = !{null, !2625, !6715}
!7183 = !{!7184, !7185}
!7184 = !DILocalVariable(name: "esf", arg: 1, scope: !7180, file: !6642, line: 632, type: !2625)
!7185 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7180, file: !6642, line: 632, type: !6715)
!7186 = !DILocation(line: 0, scope: !7180)
!7187 = !DILocation(line: 634, column: 15, scope: !7180)
!7188 = !DILocation(line: 636, column: 2, scope: !7189)
!7189 = distinct !DILexicalBlock(scope: !7190, file: !6642, line: 636, column: 2)
!7190 = distinct !DILexicalBlock(scope: !7191, file: !6642, line: 636, column: 2)
!7191 = distinct !DILexicalBlock(scope: !7192, file: !6642, line: 636, column: 2)
!7192 = distinct !DILexicalBlock(scope: !7180, file: !6642, line: 636, column: 2)
!7193 = !DILocation(line: 652, column: 1, scope: !7180)
!7194 = distinct !DISubprogram(name: "reserved_exception", scope: !6642, file: !6642, line: 776, type: !7195, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2597, retainedNodes: !7197)
!7195 = !DISubroutineType(types: !7196)
!7196 = !{null, !7095, !119}
!7197 = !{!7198, !7199}
!7198 = !DILocalVariable(name: "esf", arg: 1, scope: !7194, file: !6642, line: 776, type: !7095)
!7199 = !DILocalVariable(name: "fault", arg: 2, scope: !7194, file: !6642, line: 776, type: !119)
!7200 = !DILocation(line: 0, scope: !7194)
!7201 = !DILocation(line: 780, column: 2, scope: !7202)
!7202 = distinct !DILexicalBlock(scope: !7203, file: !6642, line: 780, column: 2)
!7203 = distinct !DILexicalBlock(scope: !7204, file: !6642, line: 780, column: 2)
!7204 = distinct !DILexicalBlock(scope: !7205, file: !6642, line: 780, column: 2)
!7205 = distinct !DILexicalBlock(scope: !7194, file: !6642, line: 780, column: 2)
!7206 = !DILocation(line: 783, column: 1, scope: !7194)
!7207 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !6642, file: !6642, line: 658, type: !7208, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2597, retainedNodes: !7210)
!7208 = !DISubroutineType(types: !7209)
!7209 = !{!345, !2625}
!7210 = !{!7211, !7212, !7213}
!7211 = !DILocalVariable(name: "esf", arg: 1, scope: !7207, file: !6642, line: 658, type: !2625)
!7212 = !DILocalVariable(name: "ret_addr", scope: !7207, file: !6642, line: 660, type: !2668)
!7213 = !DILocalVariable(name: "fault_insn", scope: !7207, file: !6642, line: 686, type: !199)
!7214 = !DILocation(line: 0, scope: !7207)
!7215 = !DILocation(line: 660, column: 46, scope: !7207)
!7216 = !DILocation(line: 660, column: 23, scope: !7207)
!7217 = !DILocation(line: 682, column: 11, scope: !7207)
!7218 = !DILocation(line: 271, column: 3, scope: !7219, inlinedAt: !7220)
!7219 = distinct !DISubprogram(name: "__DSB", scope: !6334, file: !6334, line: 269, type: !2982, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2597, retainedNodes: !2048)
!7220 = distinct !DILocation(line: 683, column: 2, scope: !7207)
!7221 = !{i64 2925223}
!7222 = !DILocation(line: 260, column: 3, scope: !7223, inlinedAt: !7224)
!7223 = distinct !DISubprogram(name: "__ISB", scope: !6334, file: !6334, line: 258, type: !2982, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2597, retainedNodes: !2048)
!7224 = distinct !DILocation(line: 684, column: 2, scope: !7207)
!7225 = !{i64 2924940}
!7226 = !DILocation(line: 686, column: 35, scope: !7207)
!7227 = !DILocation(line: 686, column: 24, scope: !7207)
!7228 = !DILocation(line: 688, column: 11, scope: !7207)
!7229 = !DILocation(line: 271, column: 3, scope: !7219, inlinedAt: !7230)
!7230 = distinct !DILocation(line: 689, column: 2, scope: !7207)
!7231 = !DILocation(line: 260, column: 3, scope: !7223, inlinedAt: !7232)
!7232 = distinct !DILocation(line: 690, column: 2, scope: !7207)
!7233 = !DILocation(line: 693, column: 45, scope: !7234)
!7234 = distinct !DILexicalBlock(scope: !7207, file: !6642, line: 693, column: 6)
!7235 = !DILocation(line: 699, column: 1, scope: !7207)
!7236 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !6642, file: !6642, line: 1107, type: !2982, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2597, retainedNodes: !2048)
!7237 = !DILocation(line: 1111, column: 11, scope: !7236)
!7238 = !DILocation(line: 1136, column: 1, scope: !7236)
!7239 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !7240, file: !7240, line: 26, type: !2982, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2669, retainedNodes: !7241)
!7240 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7241 = !{!7242}
!7242 = !DILocalVariable(name: "irq", scope: !7239, file: !7240, line: 28, type: !119)
!7243 = !DILocation(line: 0, scope: !7239)
!7244 = !DILocation(line: 30, column: 2, scope: !7245)
!7245 = distinct !DILexicalBlock(scope: !7239, file: !7240, line: 30, column: 2)
!7246 = !DILocation(line: 31, column: 3, scope: !7247)
!7247 = distinct !DILexicalBlock(scope: !7248, file: !7240, line: 30, column: 39)
!7248 = distinct !DILexicalBlock(scope: !7245, file: !7240, line: 30, column: 2)
!7249 = !DILocation(line: 30, column: 35, scope: !7248)
!7250 = !DILocation(line: 30, column: 13, scope: !7248)
!7251 = distinct !{!7251, !7244, !7252}
!7252 = !DILocation(line: 32, column: 2, scope: !7245)
!7253 = !DILocation(line: 33, column: 1, scope: !7239)
!7254 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !533, file: !533, line: 1814, type: !6374, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2669, retainedNodes: !7255)
!7255 = !{!7256, !7257}
!7256 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7254, file: !533, line: 1814, type: !768)
!7257 = !DILocalVariable(name: "priority", arg: 2, scope: !7254, file: !533, line: 1814, type: !118)
!7258 = !DILocation(line: 0, scope: !7254)
!7259 = !DILocation(line: 1816, column: 7, scope: !7254)
!7260 = !DILocation(line: 0, scope: !7261)
!7261 = distinct !DILexicalBlock(scope: !7254, file: !533, line: 1816, column: 7)
!7262 = !DILocation(line: 1824, column: 1, scope: !7254)
!7263 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !7264, file: !7264, line: 27, type: !7265, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !7371)
!7264 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7265 = !DISubroutineType(types: !7266)
!7266 = !{null, !7267}
!7267 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !143, line: 347, baseType: !7268)
!7268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7269, size: 32)
!7269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !143, line: 245, size: 1280, elements: !7270)
!7270 = !{!7271, !7329, !7341, !7342, !7343, !7344, !7345, !7351, !7366}
!7271 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7269, file: !143, line: 247, baseType: !7272, size: 384)
!7272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !143, line: 57, size: 384, elements: !7273)
!7273 = !{!7274, !7298, !7305, !7306, !7307, !7316, !7317, !7318}
!7274 = !DIDerivedType(tag: DW_TAG_member, scope: !7272, file: !143, line: 60, baseType: !7275, size: 64)
!7275 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7272, file: !143, line: 60, size: 64, elements: !7276)
!7276 = !{!7277, !7292}
!7277 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7275, file: !143, line: 61, baseType: !7278, size: 64)
!7278 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !153, line: 49, baseType: !7279)
!7279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !153, line: 37, size: 64, elements: !7280)
!7280 = !{!7281, !7287}
!7281 = !DIDerivedType(tag: DW_TAG_member, scope: !7279, file: !153, line: 38, baseType: !7282, size: 32)
!7282 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7279, file: !153, line: 38, size: 32, elements: !7283)
!7283 = !{!7284, !7286}
!7284 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7282, file: !153, line: 39, baseType: !7285, size: 32)
!7285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7279, size: 32)
!7286 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7282, file: !153, line: 40, baseType: !7285, size: 32)
!7287 = !DIDerivedType(tag: DW_TAG_member, scope: !7279, file: !153, line: 42, baseType: !7288, size: 32, offset: 32)
!7288 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7279, file: !153, line: 42, size: 32, elements: !7289)
!7289 = !{!7290, !7291}
!7290 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7288, file: !153, line: 43, baseType: !7285, size: 32)
!7291 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7288, file: !153, line: 44, baseType: !7285, size: 32)
!7292 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7275, file: !143, line: 62, baseType: !7293, size: 64)
!7293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !169, line: 49, size: 64, elements: !7294)
!7294 = !{!7295}
!7295 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7293, file: !169, line: 50, baseType: !7296, size: 64)
!7296 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7297, size: 64, elements: !174)
!7297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7293, size: 32)
!7298 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7272, file: !143, line: 68, baseType: !7299, size: 32, offset: 64)
!7299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7300, size: 32)
!7300 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !179, line: 233, baseType: !7301)
!7301 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !179, line: 231, size: 64, elements: !7302)
!7302 = !{!7303}
!7303 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7301, file: !179, line: 232, baseType: !7304, size: 64)
!7304 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !153, line: 48, baseType: !7279)
!7305 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7272, file: !143, line: 71, baseType: !185, size: 8, offset: 96)
!7306 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7272, file: !143, line: 74, baseType: !185, size: 8, offset: 104)
!7307 = !DIDerivedType(tag: DW_TAG_member, scope: !7272, file: !143, line: 90, baseType: !7308, size: 16, offset: 112)
!7308 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7272, file: !143, line: 90, size: 16, elements: !7309)
!7309 = !{!7310, !7315}
!7310 = !DIDerivedType(tag: DW_TAG_member, scope: !7308, file: !143, line: 91, baseType: !7311, size: 16)
!7311 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7308, file: !143, line: 91, size: 16, elements: !7312)
!7312 = !{!7313, !7314}
!7313 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7311, file: !143, line: 96, baseType: !195, size: 8)
!7314 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7311, file: !143, line: 97, baseType: !185, size: 8, offset: 8)
!7315 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7308, file: !143, line: 100, baseType: !199, size: 16)
!7316 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7272, file: !143, line: 107, baseType: !118, size: 32, offset: 128)
!7317 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7272, file: !143, line: 127, baseType: !113, size: 32, offset: 160)
!7318 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7272, file: !143, line: 131, baseType: !7319, size: 192, offset: 192)
!7319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !179, line: 244, size: 192, elements: !7320)
!7320 = !{!7321, !7322, !7328}
!7321 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7319, file: !179, line: 245, baseType: !7278, size: 64)
!7322 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7319, file: !179, line: 246, baseType: !7323, size: 32, offset: 64)
!7323 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !179, line: 242, baseType: !7324)
!7324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7325, size: 32)
!7325 = !DISubroutineType(types: !7326)
!7326 = !{null, !7327}
!7327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7319, size: 32)
!7328 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7319, file: !179, line: 249, baseType: !116, size: 64, offset: 128)
!7329 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7269, file: !143, line: 250, baseType: !7330, size: 288, offset: 384)
!7330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !216, line: 25, size: 288, elements: !7331)
!7331 = !{!7332, !7333, !7334, !7335, !7336, !7337, !7338, !7339, !7340}
!7332 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7330, file: !216, line: 26, baseType: !118, size: 32)
!7333 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7330, file: !216, line: 27, baseType: !118, size: 32, offset: 32)
!7334 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7330, file: !216, line: 28, baseType: !118, size: 32, offset: 64)
!7335 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7330, file: !216, line: 29, baseType: !118, size: 32, offset: 96)
!7336 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7330, file: !216, line: 30, baseType: !118, size: 32, offset: 128)
!7337 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7330, file: !216, line: 31, baseType: !118, size: 32, offset: 160)
!7338 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7330, file: !216, line: 32, baseType: !118, size: 32, offset: 192)
!7339 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7330, file: !216, line: 33, baseType: !118, size: 32, offset: 224)
!7340 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7330, file: !216, line: 34, baseType: !118, size: 32, offset: 256)
!7341 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7269, file: !143, line: 253, baseType: !113, size: 32, offset: 672)
!7342 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7269, file: !143, line: 256, baseType: !7300, size: 64, offset: 704)
!7343 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7269, file: !143, line: 279, baseType: !230, size: 256, offset: 768)
!7344 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7269, file: !143, line: 294, baseType: !119, size: 32, offset: 1024)
!7345 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7269, file: !143, line: 300, baseType: !7346, size: 96, offset: 1056)
!7346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !143, line: 149, size: 96, elements: !7347)
!7347 = !{!7348, !7349, !7350}
!7348 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7346, file: !143, line: 153, baseType: !22, size: 32)
!7349 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7346, file: !143, line: 162, baseType: !239, size: 32, offset: 32)
!7350 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7346, file: !143, line: 168, baseType: !239, size: 32, offset: 64)
!7351 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7269, file: !143, line: 325, baseType: !7352, size: 32, offset: 1152)
!7352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7353, size: 32)
!7353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !245, line: 5073, size: 192, elements: !7354)
!7354 = !{!7355, !7361, !7362}
!7355 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7353, file: !245, line: 5074, baseType: !7356, size: 96)
!7356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !249, line: 56, size: 96, elements: !7357)
!7357 = !{!7358, !7359, !7360}
!7358 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7356, file: !249, line: 57, baseType: !252, size: 32)
!7359 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7356, file: !249, line: 58, baseType: !113, size: 32, offset: 32)
!7360 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7356, file: !249, line: 59, baseType: !239, size: 32, offset: 64)
!7361 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7353, file: !245, line: 5075, baseType: !7300, size: 64, offset: 96)
!7362 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7353, file: !245, line: 5076, baseType: !7363, size: 32, offset: 160)
!7363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !7364)
!7364 = !{!7365}
!7365 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !7363, file: !259, line: 52, baseType: !22, size: 32)
!7366 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7269, file: !143, line: 343, baseType: !7367, size: 64, offset: 1184)
!7367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !216, line: 60, size: 64, elements: !7368)
!7368 = !{!7369, !7370}
!7369 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7367, file: !216, line: 63, baseType: !118, size: 32)
!7370 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7367, file: !216, line: 66, baseType: !118, size: 32, offset: 32)
!7371 = !{!7372}
!7372 = !DILocalVariable(name: "thread", arg: 1, scope: !7263, file: !7264, line: 27, type: !7267)
!7373 = !DILocation(line: 0, scope: !7263)
!7374 = !DILocation(line: 29, column: 6, scope: !7375)
!7375 = distinct !DILexicalBlock(scope: !7263, file: !7264, line: 29, column: 6)
!7376 = !DILocation(line: 29, column: 15, scope: !7375)
!7377 = !DILocation(line: 29, column: 6, scope: !7263)
!7378 = !DILocation(line: 1031, column: 3, scope: !7379, inlinedAt: !7382)
!7379 = distinct !DISubprogram(name: "__get_IPSR", scope: !6334, file: !6334, line: 1027, type: !3220, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !7380)
!7380 = !{!7381}
!7381 = !DILocalVariable(name: "result", scope: !7379, file: !6334, line: 1029, type: !118)
!7382 = distinct !DILocation(line: 48, column: 10, scope: !7383, inlinedAt: !7387)
!7383 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7384, file: !7384, line: 46, type: !7385, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !2048)
!7384 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7385 = !DISubroutineType(types: !7386)
!7386 = !{!345}
!7387 = distinct !DILocation(line: 30, column: 7, scope: !7388)
!7388 = distinct !DILexicalBlock(scope: !7389, file: !7264, line: 30, column: 7)
!7389 = distinct !DILexicalBlock(scope: !7375, file: !7264, line: 29, column: 26)
!7390 = !{i64 2914071}
!7391 = !DILocation(line: 0, scope: !7379, inlinedAt: !7382)
!7392 = !DILocation(line: 48, column: 9, scope: !7383, inlinedAt: !7387)
!7393 = !DILocation(line: 30, column: 7, scope: !7389)
!7394 = !DILocation(line: 42, column: 14, scope: !7395)
!7395 = distinct !DILexicalBlock(scope: !7388, file: !7264, line: 30, column: 25)
!7396 = !DILocation(line: 48, column: 15, scope: !7395)
!7397 = !DILocation(line: 49, column: 3, scope: !7395)
!7398 = !DILocation(line: 52, column: 2, scope: !7263)
!7399 = !DILocation(line: 53, column: 1, scope: !7263)
!7400 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !392, file: !392, line: 127, type: !2982, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !385, retainedNodes: !2048)
!7401 = !DILocation(line: 134, column: 2, scope: !7400)
!7402 = !DILocation(line: 156, column: 1, scope: !7400)
!7403 = !DILocation(line: 0, scope: !391)
!7404 = !DILocation(line: 289, column: 36, scope: !7405)
!7405 = distinct !DILexicalBlock(scope: !391, file: !392, line: 285, column: 2)
!7406 = !DILocation(line: 289, column: 42, scope: !7405)
!7407 = !DILocation(line: 300, column: 36, scope: !391)
!7408 = !DILocation(line: 301, column: 35, scope: !391)
!7409 = !DILocation(line: 302, column: 37, scope: !391)
!7410 = !DILocation(line: 311, column: 2, scope: !391)
!7411 = !DILocation(line: 316, column: 1, scope: !391)
!7412 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !561, file: !561, line: 180, type: !2982, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !2048)
!7413 = !DILocation(line: 188, column: 12, scope: !7412)
!7414 = !DILocation(line: 271, column: 3, scope: !7415, inlinedAt: !7416)
!7415 = distinct !DISubprogram(name: "__DSB", scope: !6334, file: !6334, line: 269, type: !2982, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !2048)
!7416 = distinct !DILocation(line: 192, column: 2, scope: !7412)
!7417 = !{i64 3090086}
!7418 = !DILocation(line: 260, column: 3, scope: !7419, inlinedAt: !7420)
!7419 = distinct !DISubprogram(name: "__ISB", scope: !6334, file: !6334, line: 258, type: !2982, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !2048)
!7420 = distinct !DILocation(line: 193, column: 2, scope: !7412)
!7421 = !{i64 3089803}
!7422 = !DILocation(line: 194, column: 1, scope: !7412)
!7423 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !561, file: !561, line: 199, type: !2982, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !2048)
!7424 = !DILocation(line: 282, column: 3, scope: !7425, inlinedAt: !7426)
!7425 = distinct !DISubprogram(name: "__DMB", scope: !6334, file: !6334, line: 280, type: !2982, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !2048)
!7426 = distinct !DILocation(line: 202, column: 2, scope: !7423)
!7427 = !{i64 3090362}
!7428 = !DILocation(line: 205, column: 12, scope: !7423)
!7429 = !DILocation(line: 206, column: 1, scope: !7423)
!7430 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !561, file: !561, line: 275, type: !7431, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7444)
!7431 = !DISubroutineType(types: !7432)
!7432 = !{null, !7433, !1832, !6609, !6609}
!7433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7434, size: 32)
!7434 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7435)
!7435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !505, line: 52, size: 96, elements: !7436)
!7436 = !{!7437, !7438, !7439}
!7437 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7435, file: !505, line: 53, baseType: !22, size: 32)
!7438 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7435, file: !505, line: 54, baseType: !239, size: 32, offset: 32)
!7439 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !7435, file: !505, line: 55, baseType: !7440, size: 32, offset: 64)
!7440 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !511, line: 151, baseType: !7441)
!7441 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !511, line: 149, size: 32, elements: !7442)
!7442 = !{!7443}
!7443 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !7441, file: !511, line: 150, baseType: !118, size: 32)
!7444 = !{!7445, !7446, !7447, !7448}
!7445 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7430, file: !561, line: 276, type: !7433)
!7446 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7430, file: !561, line: 276, type: !1832)
!7447 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !7430, file: !561, line: 277, type: !6609)
!7448 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7430, file: !561, line: 277, type: !6609)
!7449 = !DILocation(line: 0, scope: !7430)
!7450 = !DILocation(line: 279, column: 6, scope: !7451)
!7451 = distinct !DILexicalBlock(scope: !7430, file: !561, line: 279, column: 6)
!7452 = !DILocation(line: 280, column: 57, scope: !7451)
!7453 = !DILocation(line: 279, column: 6, scope: !7430)
!7454 = !DILocation(line: 282, column: 3, scope: !7455)
!7455 = distinct !DILexicalBlock(scope: !7456, file: !561, line: 282, column: 3)
!7456 = distinct !DILexicalBlock(scope: !7457, file: !561, line: 282, column: 3)
!7457 = distinct !DILexicalBlock(scope: !7458, file: !561, line: 282, column: 3)
!7458 = distinct !DILexicalBlock(scope: !7451, file: !561, line: 280, column: 69)
!7459 = !DILocation(line: 285, column: 1, scope: !7430)
!7460 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !7461, file: !7461, line: 220, type: !7462, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7464)
!7461 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7462 = !DISubroutineType(types: !7463)
!7463 = !{!119, !7433, !1832, !6609, !6609}
!7464 = !{!7465, !7466, !7467, !7468, !7469}
!7465 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7460, file: !7461, line: 221, type: !7433)
!7466 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7460, file: !7461, line: 221, type: !1832)
!7467 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !7460, file: !7461, line: 222, type: !6609)
!7468 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7460, file: !7461, line: 223, type: !6609)
!7469 = !DILocalVariable(name: "mpu_reg_index", scope: !7460, file: !7461, line: 225, type: !119)
!7470 = !DILocation(line: 0, scope: !7460)
!7471 = !DILocation(line: 225, column: 22, scope: !7460)
!7472 = !DILocation(line: 233, column: 18, scope: !7460)
!7473 = !DILocation(line: 236, column: 23, scope: !7460)
!7474 = !DILocation(line: 236, column: 21, scope: !7460)
!7475 = !DILocation(line: 238, column: 2, scope: !7460)
!7476 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !561, file: !561, line: 105, type: !7477, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7479)
!7477 = !DISubroutineType(types: !7478)
!7478 = !{!119, !7433, !185, !185, !345}
!7479 = !{!7480, !7481, !7482, !7483, !7484, !7485}
!7480 = !DILocalVariable(name: "regions", arg: 1, scope: !7476, file: !561, line: 106, type: !7433)
!7481 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7476, file: !561, line: 106, type: !185)
!7482 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !7476, file: !561, line: 106, type: !185)
!7483 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !7476, file: !561, line: 107, type: !345)
!7484 = !DILocalVariable(name: "i", scope: !7476, file: !561, line: 109, type: !119)
!7485 = !DILocalVariable(name: "reg_index", scope: !7476, file: !561, line: 110, type: !119)
!7486 = !DILocation(line: 0, scope: !7476)
!7487 = !DILocation(line: 110, column: 18, scope: !7476)
!7488 = !DILocation(line: 112, column: 16, scope: !7489)
!7489 = distinct !DILexicalBlock(scope: !7490, file: !561, line: 112, column: 2)
!7490 = distinct !DILexicalBlock(scope: !7476, file: !561, line: 112, column: 2)
!7491 = !DILocation(line: 112, column: 2, scope: !7490)
!7492 = !DILocation(line: 113, column: 7, scope: !7493)
!7493 = distinct !DILexicalBlock(scope: !7494, file: !561, line: 113, column: 7)
!7494 = distinct !DILexicalBlock(scope: !7489, file: !561, line: 112, column: 36)
!7495 = !DILocation(line: 113, column: 18, scope: !7493)
!7496 = !DILocation(line: 113, column: 23, scope: !7493)
!7497 = !DILocation(line: 113, column: 7, scope: !7494)
!7498 = !DILocation(line: 118, column: 23, scope: !7499)
!7499 = distinct !DILexicalBlock(scope: !7494, file: !561, line: 118, column: 7)
!7500 = !DILocation(line: 119, column: 7, scope: !7499)
!7501 = !DILocation(line: 118, column: 7, scope: !7494)
!7502 = !DILocation(line: 120, column: 4, scope: !7503)
!7503 = distinct !DILexicalBlock(scope: !7504, file: !561, line: 120, column: 4)
!7504 = distinct !DILexicalBlock(scope: !7505, file: !561, line: 120, column: 4)
!7505 = distinct !DILexicalBlock(scope: !7506, file: !561, line: 120, column: 4)
!7506 = distinct !DILexicalBlock(scope: !7507, file: !561, line: 120, column: 4)
!7507 = distinct !DILexicalBlock(scope: !7499, file: !561, line: 119, column: 45)
!7508 = !DILocation(line: 121, column: 4, scope: !7507)
!7509 = !DILocation(line: 124, column: 36, scope: !7494)
!7510 = !DILocation(line: 124, column: 15, scope: !7494)
!7511 = !DILocation(line: 126, column: 17, scope: !7512)
!7512 = distinct !DILexicalBlock(scope: !7494, file: !561, line: 126, column: 7)
!7513 = !DILocation(line: 126, column: 7, scope: !7494)
!7514 = !DILocation(line: 131, column: 12, scope: !7494)
!7515 = !DILocation(line: 132, column: 2, scope: !7494)
!7516 = !DILocation(line: 112, column: 32, scope: !7489)
!7517 = distinct !{!7517, !7491, !7518}
!7518 = !DILocation(line: 132, column: 2, scope: !7490)
!7519 = !DILocation(line: 135, column: 1, scope: !7476)
!7520 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !7461, file: !7461, line: 63, type: !7521, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7523)
!7521 = !DISubroutineType(types: !7522)
!7522 = !{!119, !7433}
!7523 = !{!7524, !7525}
!7524 = !DILocalVariable(name: "part", arg: 1, scope: !7520, file: !7461, line: 63, type: !7433)
!7525 = !DILocalVariable(name: "partition_is_valid", scope: !7520, file: !7461, line: 70, type: !119)
!7526 = !DILocation(line: 0, scope: !7520)
!7527 = !DILocation(line: 71, column: 11, scope: !7520)
!7528 = !DILocation(line: 71, column: 37, scope: !7520)
!7529 = !{i32 0, i32 33}
!7530 = !DILocation(line: 72, column: 3, scope: !7520)
!7531 = !DILocation(line: 71, column: 30, scope: !7520)
!7532 = !DILocation(line: 75, column: 11, scope: !7520)
!7533 = !DILocation(line: 75, column: 17, scope: !7520)
!7534 = !DILocation(line: 75, column: 38, scope: !7520)
!7535 = !DILocation(line: 77, column: 2, scope: !7520)
!7536 = distinct !DISubprogram(name: "mpu_configure_region", scope: !561, file: !561, line: 79, type: !7537, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7539)
!7537 = !DISubroutineType(types: !7538)
!7538 = !{!119, !1832, !7433}
!7539 = !{!7540, !7541, !7542}
!7540 = !DILocalVariable(name: "index", arg: 1, scope: !7536, file: !561, line: 79, type: !1832)
!7541 = !DILocalVariable(name: "new_region", arg: 2, scope: !7536, file: !561, line: 80, type: !7433)
!7542 = !DILocalVariable(name: "region_conf", scope: !7536, file: !561, line: 82, type: !550)
!7543 = !DILocation(line: 0, scope: !7536)
!7544 = !DILocation(line: 82, column: 2, scope: !7536)
!7545 = !DILocation(line: 82, column: 24, scope: !7536)
!7546 = !DILocation(line: 87, column: 33, scope: !7536)
!7547 = !DILocation(line: 87, column: 14, scope: !7536)
!7548 = !DILocation(line: 87, column: 19, scope: !7536)
!7549 = !DILocation(line: 91, column: 55, scope: !7536)
!7550 = !DILocation(line: 92, column: 16, scope: !7536)
!7551 = !DILocation(line: 92, column: 53, scope: !7536)
!7552 = !DILocation(line: 91, column: 2, scope: !7536)
!7553 = !DILocation(line: 95, column: 9, scope: !7536)
!7554 = !DILocation(line: 97, column: 1, scope: !7536)
!7555 = !DILocation(line: 95, column: 2, scope: !7536)
!7556 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !7461, file: !7461, line: 113, type: !7557, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7562)
!7557 = !DISubroutineType(types: !7558)
!7558 = !{null, !7559, !7560, !118, !118}
!7559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !556, size: 32)
!7560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7561, size: 32)
!7561 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7440)
!7562 = !{!7563, !7564, !7565, !7566}
!7563 = !DILocalVariable(name: "p_attr", arg: 1, scope: !7556, file: !7461, line: 114, type: !7559)
!7564 = !DILocalVariable(name: "attr", arg: 2, scope: !7556, file: !7461, line: 115, type: !7560)
!7565 = !DILocalVariable(name: "base", arg: 3, scope: !7556, file: !7461, line: 115, type: !118)
!7566 = !DILocalVariable(name: "size", arg: 4, scope: !7556, file: !7461, line: 115, type: !118)
!7567 = !DILocation(line: 0, scope: !7556)
!7568 = !DILocation(line: 127, column: 23, scope: !7556)
!7569 = !DILocation(line: 127, column: 35, scope: !7556)
!7570 = !DILocation(line: 127, column: 33, scope: !7556)
!7571 = !DILocation(line: 127, column: 10, scope: !7556)
!7572 = !DILocation(line: 127, column: 15, scope: !7556)
!7573 = !DILocation(line: 129, column: 1, scope: !7556)
!7574 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !561, file: !561, line: 57, type: !7575, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7577)
!7575 = !DISubroutineType(types: !7576)
!7576 = !{!119, !1832, !548}
!7577 = !{!7578, !7579}
!7578 = !DILocalVariable(name: "index", arg: 1, scope: !7574, file: !561, line: 57, type: !1832)
!7579 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7574, file: !561, line: 58, type: !548)
!7580 = !DILocation(line: 0, scope: !7574)
!7581 = !DILocation(line: 61, column: 6, scope: !7582)
!7582 = distinct !DILexicalBlock(scope: !7574, file: !561, line: 61, column: 6)
!7583 = !DILocation(line: 61, column: 12, scope: !7582)
!7584 = !DILocation(line: 61, column: 6, scope: !7574)
!7585 = !DILocation(line: 64, column: 3, scope: !7586)
!7586 = distinct !DILexicalBlock(scope: !7587, file: !561, line: 64, column: 3)
!7587 = distinct !DILexicalBlock(scope: !7588, file: !561, line: 64, column: 3)
!7588 = distinct !DILexicalBlock(scope: !7589, file: !561, line: 64, column: 3)
!7589 = distinct !DILexicalBlock(scope: !7590, file: !561, line: 64, column: 3)
!7590 = distinct !DILexicalBlock(scope: !7582, file: !561, line: 61, column: 40)
!7591 = !DILocation(line: 65, column: 3, scope: !7590)
!7592 = !DILocation(line: 71, column: 2, scope: !7574)
!7593 = !DILocation(line: 73, column: 2, scope: !7574)
!7594 = !DILocation(line: 74, column: 1, scope: !7574)
!7595 = distinct !DISubprogram(name: "region_init", scope: !7461, file: !7461, line: 29, type: !7596, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7598)
!7596 = !DISubroutineType(types: !7597)
!7597 = !{null, !6609, !548}
!7598 = !{!7599, !7600}
!7599 = !DILocalVariable(name: "index", arg: 1, scope: !7595, file: !7461, line: 29, type: !6609)
!7600 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7595, file: !7461, line: 30, type: !548)
!7601 = !DILocation(line: 0, scope: !7595)
!7602 = !DILocation(line: 33, column: 2, scope: !7595)
!7603 = !DILocation(line: 47, column: 28, scope: !7595)
!7604 = !DILocation(line: 47, column: 33, scope: !7595)
!7605 = !DILocation(line: 48, column: 26, scope: !7595)
!7606 = !DILocation(line: 47, column: 12, scope: !7595)
!7607 = !DILocation(line: 49, column: 32, scope: !7595)
!7608 = !DILocation(line: 49, column: 37, scope: !7595)
!7609 = !DILocation(line: 49, column: 12, scope: !7595)
!7610 = !DILocation(line: 53, column: 1, scope: !7595)
!7611 = distinct !DISubprogram(name: "set_region_number", scope: !7612, file: !7612, line: 32, type: !6429, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7613)
!7612 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7613 = !{!7614}
!7614 = !DILocalVariable(name: "index", arg: 1, scope: !7611, file: !7612, line: 32, type: !118)
!7615 = !DILocation(line: 0, scope: !7611)
!7616 = !DILocation(line: 34, column: 11, scope: !7611)
!7617 = !DILocation(line: 35, column: 1, scope: !7611)
!7618 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !7461, file: !7461, line: 88, type: !7619, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7621)
!7619 = !DISubroutineType(types: !7620)
!7620 = !{!118, !118}
!7621 = !{!7622}
!7622 = !DILocalVariable(name: "size", arg: 1, scope: !7618, file: !7461, line: 88, type: !118)
!7623 = !DILocation(line: 0, scope: !7618)
!7624 = !DILocation(line: 91, column: 11, scope: !7625)
!7625 = distinct !DILexicalBlock(scope: !7618, file: !7461, line: 91, column: 6)
!7626 = !DILocation(line: 91, column: 6, scope: !7618)
!7627 = !DILocation(line: 100, column: 11, scope: !7628)
!7628 = distinct !DILexicalBlock(scope: !7618, file: !7461, line: 100, column: 6)
!7629 = !DILocation(line: 100, column: 6, scope: !7618)
!7630 = !DILocation(line: 104, column: 35, scope: !7618)
!7631 = !DILocation(line: 104, column: 16, scope: !7618)
!7632 = !DILocation(line: 104, column: 50, scope: !7618)
!7633 = !DILocation(line: 104, column: 72, scope: !7618)
!7634 = !DILocation(line: 104, column: 2, scope: !7618)
!7635 = !DILocation(line: 106, column: 1, scope: !7618)
!7636 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !561, file: !561, line: 307, type: !7637, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7639)
!7637 = !DISubroutineType(types: !7638)
!7638 = !{null, !7433, !185}
!7639 = !{!7640, !7641}
!7640 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7636, file: !561, line: 308, type: !7433)
!7641 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7636, file: !561, line: 308, type: !185)
!7642 = !DILocation(line: 0, scope: !7636)
!7643 = !DILocation(line: 310, column: 6, scope: !7644)
!7644 = distinct !DILexicalBlock(scope: !7636, file: !561, line: 310, column: 6)
!7645 = !DILocation(line: 311, column: 3, scope: !7644)
!7646 = !DILocation(line: 310, column: 6, scope: !7636)
!7647 = !DILocation(line: 313, column: 3, scope: !7648)
!7648 = distinct !DILexicalBlock(scope: !7649, file: !561, line: 313, column: 3)
!7649 = distinct !DILexicalBlock(scope: !7650, file: !561, line: 313, column: 3)
!7650 = distinct !DILexicalBlock(scope: !7651, file: !561, line: 313, column: 3)
!7651 = distinct !DILexicalBlock(scope: !7644, file: !561, line: 311, column: 15)
!7652 = !DILocation(line: 316, column: 1, scope: !7636)
!7653 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !7461, file: !7461, line: 249, type: !7654, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7656)
!7654 = !DISubroutineType(types: !7655)
!7655 = !{!119, !7433, !185}
!7656 = !{!7657, !7658, !7659, !7660}
!7657 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7653, file: !7461, line: 250, type: !7433)
!7658 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7653, file: !7461, line: 250, type: !185)
!7659 = !DILocalVariable(name: "mpu_reg_index", scope: !7653, file: !7461, line: 252, type: !119)
!7660 = !DILocalVariable(name: "i", scope: !7661, file: !7461, line: 264, type: !119)
!7661 = distinct !DILexicalBlock(scope: !7662, file: !7461, line: 264, column: 3)
!7662 = distinct !DILexicalBlock(scope: !7663, file: !7461, line: 261, column: 32)
!7663 = distinct !DILexicalBlock(scope: !7653, file: !7461, line: 261, column: 6)
!7664 = !DILocation(line: 0, scope: !7653)
!7665 = !DILocation(line: 252, column: 22, scope: !7653)
!7666 = !DILocation(line: 258, column: 18, scope: !7653)
!7667 = !DILocation(line: 261, column: 20, scope: !7663)
!7668 = !DILocation(line: 261, column: 6, scope: !7653)
!7669 = !DILocation(line: 0, scope: !7661)
!7670 = !DILocation(line: 265, column: 4, scope: !7671)
!7671 = distinct !DILexicalBlock(scope: !7672, file: !7461, line: 264, column: 59)
!7672 = distinct !DILexicalBlock(scope: !7661, file: !7461, line: 264, column: 3)
!7673 = !DILocation(line: 264, column: 55, scope: !7672)
!7674 = !DILocation(line: 264, column: 33, scope: !7672)
!7675 = !DILocation(line: 264, column: 3, scope: !7661)
!7676 = distinct !{!7676, !7675, !7677}
!7677 = !DILocation(line: 266, column: 3, scope: !7661)
!7678 = !DILocation(line: 269, column: 2, scope: !7653)
!7679 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !7680, file: !7680, line: 218, type: !6429, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7681)
!7680 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7681 = !{!7682}
!7682 = !DILocalVariable(name: "rnr", arg: 1, scope: !7679, file: !7680, line: 218, type: !118)
!7683 = !DILocation(line: 0, scope: !7679)
!7684 = !DILocation(line: 220, column: 12, scope: !7679)
!7685 = !DILocation(line: 221, column: 13, scope: !7679)
!7686 = !DILocation(line: 222, column: 1, scope: !7679)
!7687 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !561, file: !561, line: 326, type: !7688, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7690)
!7688 = !DISubroutineType(types: !7689)
!7689 = !{!119}
!7690 = !{!7691}
!7691 = !DILocalVariable(name: "r_index", scope: !7687, file: !561, line: 328, type: !118)
!7692 = !DILocation(line: 330, column: 17, scope: !7693)
!7693 = distinct !DILexicalBlock(scope: !7687, file: !561, line: 330, column: 6)
!7694 = !DILocation(line: 330, column: 29, scope: !7693)
!7695 = !DILocation(line: 330, column: 6, scope: !7687)
!7696 = !DILocation(line: 337, column: 3, scope: !7697)
!7697 = distinct !DILexicalBlock(scope: !7698, file: !561, line: 337, column: 3)
!7698 = distinct !DILexicalBlock(scope: !7699, file: !561, line: 337, column: 3)
!7699 = distinct !DILexicalBlock(scope: !7700, file: !561, line: 337, column: 3)
!7700 = distinct !DILexicalBlock(scope: !7693, file: !561, line: 330, column: 50)
!7701 = !DILocation(line: 347, column: 2, scope: !7687)
!7702 = !DILocation(line: 0, scope: !7687)
!7703 = !DILocation(line: 364, column: 29, scope: !7704)
!7704 = distinct !DILexicalBlock(scope: !7705, file: !561, line: 364, column: 2)
!7705 = distinct !DILexicalBlock(scope: !7687, file: !561, line: 364, column: 2)
!7706 = !DILocation(line: 364, column: 2, scope: !7705)
!7707 = !DILocation(line: 365, column: 25, scope: !7708)
!7708 = distinct !DILexicalBlock(scope: !7704, file: !561, line: 364, column: 66)
!7709 = !DILocation(line: 365, column: 3, scope: !7708)
!7710 = !DILocation(line: 364, column: 62, scope: !7704)
!7711 = distinct !{!7711, !7706, !7712}
!7712 = !DILocation(line: 366, column: 2, scope: !7705)
!7713 = !DILocation(line: 369, column: 23, scope: !7687)
!7714 = !DILocation(line: 369, column: 21, scope: !7687)
!7715 = !DILocation(line: 372, column: 2, scope: !7687)
!7716 = !DILocation(line: 433, column: 2, scope: !7717)
!7717 = distinct !DILexicalBlock(scope: !7718, file: !561, line: 433, column: 2)
!7718 = distinct !DILexicalBlock(scope: !7687, file: !561, line: 433, column: 2)
!7719 = !DILocation(line: 433, column: 2, scope: !7718)
!7720 = !DILocation(line: 433, column: 2, scope: !7721)
!7721 = distinct !DILexicalBlock(scope: !7717, file: !561, line: 433, column: 2)
!7722 = !DILocation(line: 444, column: 1, scope: !7687)
!7723 = distinct !DISubprogram(name: "strcpy", scope: !7724, file: !7724, line: 20, type: !7725, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2742, retainedNodes: !7729)
!7724 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7725 = !DISubroutineType(types: !7726)
!7726 = !{!106, !7727, !7728}
!7727 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !106)
!7728 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !278)
!7729 = !{!7730, !7731, !7732}
!7730 = !DILocalVariable(name: "d", arg: 1, scope: !7723, file: !7724, line: 20, type: !7727)
!7731 = !DILocalVariable(name: "s", arg: 2, scope: !7723, file: !7724, line: 20, type: !7728)
!7732 = !DILocalVariable(name: "dest", scope: !7723, file: !7724, line: 22, type: !106)
!7733 = !DILocation(line: 0, scope: !7723)
!7734 = !DILocation(line: 24, column: 9, scope: !7723)
!7735 = !DILocation(line: 24, column: 12, scope: !7723)
!7736 = !DILocation(line: 24, column: 2, scope: !7723)
!7737 = !DILocation(line: 25, column: 6, scope: !7738)
!7738 = distinct !DILexicalBlock(scope: !7723, file: !7724, line: 24, column: 21)
!7739 = !DILocation(line: 26, column: 4, scope: !7738)
!7740 = !DILocation(line: 27, column: 4, scope: !7738)
!7741 = distinct !{!7741, !7736, !7742}
!7742 = !DILocation(line: 28, column: 2, scope: !7723)
!7743 = !DILocation(line: 30, column: 5, scope: !7723)
!7744 = !DILocation(line: 32, column: 2, scope: !7723)
!7745 = distinct !DISubprogram(name: "strncpy", scope: !7724, file: !7724, line: 42, type: !7746, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2742, retainedNodes: !7748)
!7746 = !DISubroutineType(types: !7747)
!7747 = !{!106, !7727, !7728, !239}
!7748 = !{!7749, !7750, !7751, !7752}
!7749 = !DILocalVariable(name: "d", arg: 1, scope: !7745, file: !7724, line: 42, type: !7727)
!7750 = !DILocalVariable(name: "s", arg: 2, scope: !7745, file: !7724, line: 42, type: !7728)
!7751 = !DILocalVariable(name: "n", arg: 3, scope: !7745, file: !7724, line: 42, type: !239)
!7752 = !DILocalVariable(name: "dest", scope: !7745, file: !7724, line: 44, type: !106)
!7753 = !DILocation(line: 0, scope: !7745)
!7754 = !DILocation(line: 46, column: 12, scope: !7745)
!7755 = !DILocation(line: 46, column: 17, scope: !7745)
!7756 = !DILocation(line: 46, column: 20, scope: !7745)
!7757 = !DILocation(line: 46, column: 23, scope: !7745)
!7758 = !DILocation(line: 46, column: 2, scope: !7745)
!7759 = !DILocation(line: 47, column: 6, scope: !7760)
!7760 = distinct !DILexicalBlock(scope: !7745, file: !7724, line: 46, column: 32)
!7761 = !DILocation(line: 48, column: 4, scope: !7760)
!7762 = !DILocation(line: 49, column: 4, scope: !7760)
!7763 = !DILocation(line: 50, column: 4, scope: !7760)
!7764 = distinct !{!7764, !7758, !7765}
!7765 = !DILocation(line: 51, column: 2, scope: !7745)
!7766 = !DILocation(line: 54, column: 6, scope: !7767)
!7767 = distinct !DILexicalBlock(scope: !7745, file: !7724, line: 53, column: 16)
!7768 = !DILocation(line: 55, column: 4, scope: !7767)
!7769 = !DILocation(line: 56, column: 4, scope: !7767)
!7770 = !DILocation(line: 53, column: 11, scope: !7745)
!7771 = !DILocation(line: 53, column: 2, scope: !7745)
!7772 = distinct !{!7772, !7771, !7773}
!7773 = !DILocation(line: 57, column: 2, scope: !7745)
!7774 = !DILocation(line: 59, column: 2, scope: !7745)
!7775 = distinct !DISubprogram(name: "strchr", scope: !7724, file: !7724, line: 69, type: !7776, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2742, retainedNodes: !7778)
!7776 = !DISubroutineType(types: !7777)
!7777 = !{!106, !278, !119}
!7778 = !{!7779, !7780, !7781}
!7779 = !DILocalVariable(name: "s", arg: 1, scope: !7775, file: !7724, line: 69, type: !278)
!7780 = !DILocalVariable(name: "c", arg: 2, scope: !7775, file: !7724, line: 69, type: !119)
!7781 = !DILocalVariable(name: "tmp", scope: !7775, file: !7724, line: 71, type: !107)
!7782 = !DILocation(line: 0, scope: !7775)
!7783 = !DILocation(line: 73, column: 2, scope: !7775)
!7784 = !DILocation(line: 73, column: 10, scope: !7775)
!7785 = !DILocation(line: 73, column: 13, scope: !7775)
!7786 = !DILocation(line: 73, column: 21, scope: !7775)
!7787 = !DILocation(line: 74, column: 4, scope: !7788)
!7788 = distinct !DILexicalBlock(scope: !7775, file: !7724, line: 73, column: 38)
!7789 = distinct !{!7789, !7783, !7790}
!7790 = !DILocation(line: 75, column: 2, scope: !7775)
!7791 = !DILocation(line: 77, column: 9, scope: !7775)
!7792 = !DILocation(line: 77, column: 2, scope: !7775)
!7793 = distinct !DISubprogram(name: "strrchr", scope: !7724, file: !7724, line: 87, type: !7776, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2742, retainedNodes: !7794)
!7794 = !{!7795, !7796, !7797}
!7795 = !DILocalVariable(name: "s", arg: 1, scope: !7793, file: !7724, line: 87, type: !278)
!7796 = !DILocalVariable(name: "c", arg: 2, scope: !7793, file: !7724, line: 87, type: !119)
!7797 = !DILocalVariable(name: "match", scope: !7793, file: !7724, line: 89, type: !106)
!7798 = !DILocation(line: 0, scope: !7793)
!7799 = !DILocation(line: 91, column: 2, scope: !7793)
!7800 = !DILocation(line: 92, column: 7, scope: !7801)
!7801 = distinct !DILexicalBlock(scope: !7802, file: !7724, line: 92, column: 7)
!7802 = distinct !DILexicalBlock(scope: !7793, file: !7724, line: 91, column: 5)
!7803 = !DILocation(line: 92, column: 10, scope: !7801)
!7804 = !DILocation(line: 92, column: 7, scope: !7802)
!7805 = !DILocation(line: 95, column: 13, scope: !7793)
!7806 = !DILocation(line: 95, column: 2, scope: !7802)
!7807 = distinct !{!7807, !7799, !7808}
!7808 = !DILocation(line: 95, column: 15, scope: !7793)
!7809 = !DILocation(line: 97, column: 2, scope: !7793)
!7810 = distinct !DISubprogram(name: "strlen", scope: !7724, file: !7724, line: 107, type: !7811, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2742, retainedNodes: !7813)
!7811 = !DISubroutineType(types: !7812)
!7812 = !{!239, !278}
!7813 = !{!7814, !7815}
!7814 = !DILocalVariable(name: "s", arg: 1, scope: !7810, file: !7724, line: 107, type: !278)
!7815 = !DILocalVariable(name: "n", scope: !7810, file: !7724, line: 109, type: !239)
!7816 = !DILocation(line: 0, scope: !7810)
!7817 = !DILocation(line: 111, column: 9, scope: !7810)
!7818 = !DILocation(line: 111, column: 12, scope: !7810)
!7819 = !DILocation(line: 111, column: 2, scope: !7810)
!7820 = !DILocation(line: 112, column: 4, scope: !7821)
!7821 = distinct !DILexicalBlock(scope: !7810, file: !7724, line: 111, column: 21)
!7822 = !DILocation(line: 113, column: 4, scope: !7821)
!7823 = distinct !{!7823, !7819, !7824}
!7824 = !DILocation(line: 114, column: 2, scope: !7810)
!7825 = !DILocation(line: 116, column: 2, scope: !7810)
!7826 = distinct !DISubprogram(name: "strnlen", scope: !7724, file: !7724, line: 126, type: !7827, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2742, retainedNodes: !7829)
!7827 = !DISubroutineType(types: !7828)
!7828 = !{!239, !278, !239}
!7829 = !{!7830, !7831, !7832}
!7830 = !DILocalVariable(name: "s", arg: 1, scope: !7826, file: !7724, line: 126, type: !278)
!7831 = !DILocalVariable(name: "maxlen", arg: 2, scope: !7826, file: !7724, line: 126, type: !239)
!7832 = !DILocalVariable(name: "n", scope: !7826, file: !7724, line: 128, type: !239)
!7833 = !DILocation(line: 0, scope: !7826)
!7834 = !DILocation(line: 130, column: 9, scope: !7826)
!7835 = !DILocation(line: 130, column: 12, scope: !7826)
!7836 = !DILocation(line: 130, column: 20, scope: !7826)
!7837 = !DILocation(line: 130, column: 2, scope: !7826)
!7838 = !DILocation(line: 131, column: 4, scope: !7839)
!7839 = distinct !DILexicalBlock(scope: !7826, file: !7724, line: 130, column: 35)
!7840 = !DILocation(line: 132, column: 4, scope: !7839)
!7841 = distinct !{!7841, !7837, !7842}
!7842 = !DILocation(line: 133, column: 2, scope: !7826)
!7843 = !DILocation(line: 135, column: 2, scope: !7826)
!7844 = distinct !DISubprogram(name: "strcmp", scope: !7724, file: !7724, line: 145, type: !7845, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2742, retainedNodes: !7847)
!7845 = !DISubroutineType(types: !7846)
!7846 = !{!119, !278, !278}
!7847 = !{!7848, !7849}
!7848 = !DILocalVariable(name: "s1", arg: 1, scope: !7844, file: !7724, line: 145, type: !278)
!7849 = !DILocalVariable(name: "s2", arg: 2, scope: !7844, file: !7724, line: 145, type: !278)
!7850 = !DILocation(line: 0, scope: !7844)
!7851 = !DILocation(line: 147, column: 10, scope: !7844)
!7852 = !DILocation(line: 147, column: 17, scope: !7844)
!7853 = !DILocation(line: 147, column: 14, scope: !7844)
!7854 = !DILocation(line: 147, column: 22, scope: !7844)
!7855 = !DILocation(line: 148, column: 5, scope: !7856)
!7856 = distinct !DILexicalBlock(scope: !7844, file: !7724, line: 147, column: 40)
!7857 = !DILocation(line: 149, column: 5, scope: !7856)
!7858 = distinct !{!7858, !7859, !7860}
!7859 = !DILocation(line: 147, column: 2, scope: !7844)
!7860 = !DILocation(line: 150, column: 2, scope: !7844)
!7861 = !DILocation(line: 152, column: 9, scope: !7844)
!7862 = !DILocation(line: 152, column: 15, scope: !7844)
!7863 = !DILocation(line: 152, column: 13, scope: !7844)
!7864 = !DILocation(line: 152, column: 2, scope: !7844)
!7865 = distinct !DISubprogram(name: "strncmp", scope: !7724, file: !7724, line: 162, type: !7866, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2742, retainedNodes: !7868)
!7866 = !DISubroutineType(types: !7867)
!7867 = !{!119, !278, !278, !239}
!7868 = !{!7869, !7870, !7871}
!7869 = !DILocalVariable(name: "s1", arg: 1, scope: !7865, file: !7724, line: 162, type: !278)
!7870 = !DILocalVariable(name: "s2", arg: 2, scope: !7865, file: !7724, line: 162, type: !278)
!7871 = !DILocalVariable(name: "n", arg: 3, scope: !7865, file: !7724, line: 162, type: !239)
!7872 = !DILocation(line: 0, scope: !7865)
!7873 = !DILocation(line: 164, column: 17, scope: !7865)
!7874 = !DILocation(line: 164, column: 21, scope: !7865)
!7875 = !DILocation(line: 164, column: 28, scope: !7865)
!7876 = !DILocation(line: 164, column: 25, scope: !7865)
!7877 = !DILocation(line: 164, column: 33, scope: !7865)
!7878 = !DILocation(line: 165, column: 5, scope: !7879)
!7879 = distinct !DILexicalBlock(scope: !7865, file: !7724, line: 164, column: 51)
!7880 = !DILocation(line: 166, column: 5, scope: !7879)
!7881 = !DILocation(line: 167, column: 4, scope: !7879)
!7882 = distinct !{!7882, !7883, !7884}
!7883 = !DILocation(line: 164, column: 2, scope: !7865)
!7884 = !DILocation(line: 168, column: 2, scope: !7865)
!7885 = !DILocation(line: 170, column: 25, scope: !7865)
!7886 = !DILocation(line: 170, column: 31, scope: !7865)
!7887 = !DILocation(line: 170, column: 29, scope: !7865)
!7888 = !DILocation(line: 170, column: 9, scope: !7865)
!7889 = !DILocation(line: 170, column: 2, scope: !7865)
!7890 = distinct !DISubprogram(name: "strtok_r", scope: !7724, file: !7724, line: 180, type: !7891, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2742, retainedNodes: !7893)
!7891 = !DISubroutineType(types: !7892)
!7892 = !{!106, !106, !278, !283}
!7893 = !{!7894, !7895, !7896, !7897, !7898}
!7894 = !DILocalVariable(name: "str", arg: 1, scope: !7890, file: !7724, line: 180, type: !106)
!7895 = !DILocalVariable(name: "sep", arg: 2, scope: !7890, file: !7724, line: 180, type: !278)
!7896 = !DILocalVariable(name: "state", arg: 3, scope: !7890, file: !7724, line: 180, type: !283)
!7897 = !DILocalVariable(name: "start", scope: !7890, file: !7724, line: 182, type: !106)
!7898 = !DILocalVariable(name: "end", scope: !7890, file: !7724, line: 182, type: !106)
!7899 = !DILocation(line: 0, scope: !7890)
!7900 = !DILocation(line: 184, column: 10, scope: !7890)
!7901 = !DILocation(line: 184, column: 22, scope: !7890)
!7902 = !DILocation(line: 187, column: 9, scope: !7890)
!7903 = !DILocation(line: 187, column: 16, scope: !7890)
!7904 = !DILocation(line: 187, column: 19, scope: !7890)
!7905 = !DILocation(line: 187, column: 2, scope: !7890)
!7906 = !DILocation(line: 188, column: 8, scope: !7907)
!7907 = distinct !DILexicalBlock(scope: !7890, file: !7724, line: 187, column: 40)
!7908 = distinct !{!7908, !7905, !7909}
!7909 = !DILocation(line: 189, column: 2, scope: !7890)
!7910 = !DILocation(line: 198, column: 9, scope: !7890)
!7911 = !DILocation(line: 198, column: 18, scope: !7890)
!7912 = !DILocation(line: 198, column: 17, scope: !7890)
!7913 = !DILocation(line: 198, column: 2, scope: !7890)
!7914 = !DILocation(line: 199, column: 6, scope: !7915)
!7915 = distinct !DILexicalBlock(scope: !7890, file: !7724, line: 198, column: 37)
!7916 = !DILocation(line: 198, column: 14, scope: !7890)
!7917 = distinct !{!7917, !7913, !7918}
!7918 = !DILocation(line: 200, column: 2, scope: !7890)
!7919 = !DILocation(line: 203, column: 8, scope: !7920)
!7920 = distinct !DILexicalBlock(scope: !7921, file: !7724, line: 202, column: 20)
!7921 = distinct !DILexicalBlock(scope: !7890, file: !7724, line: 202, column: 6)
!7922 = !DILocation(line: 204, column: 16, scope: !7920)
!7923 = !DILocation(line: 205, column: 2, scope: !7920)
!7924 = !DILocation(line: 210, column: 1, scope: !7890)
!7925 = distinct !DISubprogram(name: "strcat", scope: !7724, file: !7724, line: 212, type: !7725, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2742, retainedNodes: !7926)
!7926 = !{!7927, !7928}
!7927 = !DILocalVariable(name: "dest", arg: 1, scope: !7925, file: !7724, line: 212, type: !7727)
!7928 = !DILocalVariable(name: "src", arg: 2, scope: !7925, file: !7724, line: 212, type: !7728)
!7929 = !DILocation(line: 0, scope: !7925)
!7930 = !DILocation(line: 214, column: 16, scope: !7925)
!7931 = !DILocation(line: 214, column: 14, scope: !7925)
!7932 = !DILocation(line: 214, column: 2, scope: !7925)
!7933 = !DILocation(line: 215, column: 2, scope: !7925)
!7934 = distinct !DISubprogram(name: "strncat", scope: !7724, file: !7724, line: 218, type: !7746, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2742, retainedNodes: !7935)
!7935 = !{!7936, !7937, !7938, !7939, !7940}
!7936 = !DILocalVariable(name: "dest", arg: 1, scope: !7934, file: !7724, line: 218, type: !7727)
!7937 = !DILocalVariable(name: "src", arg: 2, scope: !7934, file: !7724, line: 218, type: !7728)
!7938 = !DILocalVariable(name: "n", arg: 3, scope: !7934, file: !7724, line: 219, type: !239)
!7939 = !DILocalVariable(name: "orig_dest", scope: !7934, file: !7724, line: 221, type: !106)
!7940 = !DILocalVariable(name: "len", scope: !7934, file: !7724, line: 222, type: !239)
!7941 = !DILocation(line: 0, scope: !7934)
!7942 = !DILocation(line: 222, column: 15, scope: !7934)
!7943 = !DILocation(line: 224, column: 7, scope: !7934)
!7944 = !DILocation(line: 225, column: 14, scope: !7934)
!7945 = !DILocation(line: 225, column: 19, scope: !7934)
!7946 = !DILocation(line: 225, column: 11, scope: !7934)
!7947 = !DILocation(line: 225, column: 23, scope: !7934)
!7948 = !DILocation(line: 225, column: 28, scope: !7934)
!7949 = !DILocation(line: 225, column: 2, scope: !7934)
!7950 = !DILocation(line: 226, column: 17, scope: !7951)
!7951 = distinct !DILexicalBlock(scope: !7934, file: !7724, line: 225, column: 38)
!7952 = !DILocation(line: 226, column: 8, scope: !7951)
!7953 = !DILocation(line: 226, column: 11, scope: !7951)
!7954 = distinct !{!7954, !7949, !7955}
!7955 = !DILocation(line: 227, column: 2, scope: !7934)
!7956 = !DILocation(line: 228, column: 8, scope: !7934)
!7957 = !DILocation(line: 230, column: 2, scope: !7934)
!7958 = distinct !DISubprogram(name: "memcmp", scope: !7724, file: !7724, line: 239, type: !7959, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2742, retainedNodes: !7961)
!7959 = !DISubroutineType(types: !7960)
!7960 = !{!119, !13, !13, !239}
!7961 = !{!7962, !7963, !7964, !7965, !7966}
!7962 = !DILocalVariable(name: "m1", arg: 1, scope: !7958, file: !7724, line: 239, type: !13)
!7963 = !DILocalVariable(name: "m2", arg: 2, scope: !7958, file: !7724, line: 239, type: !13)
!7964 = !DILocalVariable(name: "n", arg: 3, scope: !7958, file: !7724, line: 239, type: !239)
!7965 = !DILocalVariable(name: "c1", scope: !7958, file: !7724, line: 241, type: !278)
!7966 = !DILocalVariable(name: "c2", scope: !7958, file: !7724, line: 242, type: !278)
!7967 = !DILocation(line: 0, scope: !7958)
!7968 = !DILocation(line: 244, column: 7, scope: !7969)
!7969 = distinct !DILexicalBlock(scope: !7958, file: !7724, line: 244, column: 6)
!7970 = !DILocation(line: 244, column: 6, scope: !7958)
!7971 = !DILocation(line: 248, column: 10, scope: !7958)
!7972 = !DILocation(line: 248, column: 14, scope: !7958)
!7973 = !DILocation(line: 248, column: 19, scope: !7958)
!7974 = !DILocation(line: 248, column: 2, scope: !7958)
!7975 = !DILocation(line: 248, column: 23, scope: !7958)
!7976 = !DILocation(line: 248, column: 30, scope: !7958)
!7977 = !DILocation(line: 248, column: 27, scope: !7958)
!7978 = !DILocation(line: 249, column: 5, scope: !7979)
!7979 = distinct !DILexicalBlock(scope: !7958, file: !7724, line: 248, column: 36)
!7980 = !DILocation(line: 250, column: 5, scope: !7979)
!7981 = distinct !{!7981, !7974, !7982}
!7982 = !DILocation(line: 251, column: 2, scope: !7958)
!7983 = !DILocation(line: 253, column: 9, scope: !7958)
!7984 = !DILocation(line: 253, column: 15, scope: !7958)
!7985 = !DILocation(line: 253, column: 13, scope: !7958)
!7986 = !DILocation(line: 253, column: 2, scope: !7958)
!7987 = !DILocation(line: 254, column: 1, scope: !7958)
!7988 = distinct !DISubprogram(name: "memmove", scope: !7724, file: !7724, line: 263, type: !7989, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2742, retainedNodes: !7991)
!7989 = !DISubroutineType(types: !7990)
!7990 = !{!113, !113, !13, !239}
!7991 = !{!7992, !7993, !7994, !7995, !7996}
!7992 = !DILocalVariable(name: "d", arg: 1, scope: !7988, file: !7724, line: 263, type: !113)
!7993 = !DILocalVariable(name: "s", arg: 2, scope: !7988, file: !7724, line: 263, type: !13)
!7994 = !DILocalVariable(name: "n", arg: 3, scope: !7988, file: !7724, line: 263, type: !239)
!7995 = !DILocalVariable(name: "dest", scope: !7988, file: !7724, line: 265, type: !106)
!7996 = !DILocalVariable(name: "src", scope: !7988, file: !7724, line: 266, type: !278)
!7997 = !DILocation(line: 0, scope: !7988)
!7998 = !DILocation(line: 268, column: 21, scope: !7999)
!7999 = distinct !DILexicalBlock(scope: !7988, file: !7724, line: 268, column: 6)
!8000 = !DILocation(line: 268, column: 28, scope: !7999)
!8001 = !DILocation(line: 268, column: 6, scope: !7988)
!8002 = !DILocation(line: 280, column: 12, scope: !8003)
!8003 = distinct !DILexicalBlock(scope: !7999, file: !7724, line: 278, column: 9)
!8004 = !DILocation(line: 280, column: 3, scope: !8003)
!8005 = !DILocation(line: 275, column: 5, scope: !8006)
!8006 = distinct !DILexicalBlock(scope: !8007, file: !7724, line: 274, column: 17)
!8007 = distinct !DILexicalBlock(scope: !7999, file: !7724, line: 268, column: 33)
!8008 = !DILocation(line: 276, column: 14, scope: !8006)
!8009 = !DILocation(line: 276, column: 4, scope: !8006)
!8010 = !DILocation(line: 276, column: 12, scope: !8006)
!8011 = !DILocation(line: 274, column: 12, scope: !8007)
!8012 = !DILocation(line: 274, column: 3, scope: !8007)
!8013 = distinct !{!8013, !8012, !8014}
!8014 = !DILocation(line: 277, column: 3, scope: !8007)
!8015 = !DILocation(line: 281, column: 12, scope: !8016)
!8016 = distinct !DILexicalBlock(scope: !8003, file: !7724, line: 280, column: 17)
!8017 = !DILocation(line: 281, column: 10, scope: !8016)
!8018 = !DILocation(line: 282, column: 8, scope: !8016)
!8019 = !DILocation(line: 283, column: 7, scope: !8016)
!8020 = !DILocation(line: 284, column: 5, scope: !8016)
!8021 = distinct !{!8021, !8004, !8022}
!8022 = !DILocation(line: 285, column: 3, scope: !8003)
!8023 = !DILocation(line: 288, column: 2, scope: !7988)
!8024 = distinct !DISubprogram(name: "memcpy", scope: !7724, file: !7724, line: 298, type: !8025, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2742, retainedNodes: !8029)
!8025 = !DISubroutineType(types: !8026)
!8026 = !{!113, !8027, !8028, !239}
!8027 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !113)
!8028 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!8029 = !{!8030, !8031, !8032, !8033, !8034}
!8030 = !DILocalVariable(name: "d", arg: 1, scope: !8024, file: !7724, line: 298, type: !8027)
!8031 = !DILocalVariable(name: "s", arg: 2, scope: !8024, file: !7724, line: 298, type: !8028)
!8032 = !DILocalVariable(name: "n", arg: 3, scope: !8024, file: !7724, line: 298, type: !239)
!8033 = !DILocalVariable(name: "d_byte", scope: !8024, file: !7724, line: 302, type: !972)
!8034 = !DILocalVariable(name: "s_byte", scope: !8024, file: !7724, line: 303, type: !2745)
!8035 = !DILocation(line: 0, scope: !8024)
!8036 = !DILocation(line: 337, column: 11, scope: !8024)
!8037 = !DILocation(line: 337, column: 2, scope: !8024)
!8038 = !DILocation(line: 338, column: 25, scope: !8039)
!8039 = distinct !DILexicalBlock(scope: !8024, file: !7724, line: 337, column: 16)
!8040 = !DILocation(line: 338, column: 17, scope: !8039)
!8041 = !DILocation(line: 338, column: 11, scope: !8039)
!8042 = !DILocation(line: 338, column: 15, scope: !8039)
!8043 = !DILocation(line: 339, column: 4, scope: !8039)
!8044 = distinct !{!8044, !8037, !8045}
!8045 = !DILocation(line: 340, column: 2, scope: !8024)
!8046 = !DILocation(line: 342, column: 2, scope: !8024)
!8047 = distinct !DISubprogram(name: "memset", scope: !7724, file: !7724, line: 352, type: !8048, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2742, retainedNodes: !8050)
!8048 = !DISubroutineType(types: !8049)
!8049 = !{!113, !113, !119, !239}
!8050 = !{!8051, !8052, !8053, !8054, !8055}
!8051 = !DILocalVariable(name: "buf", arg: 1, scope: !8047, file: !7724, line: 352, type: !113)
!8052 = !DILocalVariable(name: "c", arg: 2, scope: !8047, file: !7724, line: 352, type: !119)
!8053 = !DILocalVariable(name: "n", arg: 3, scope: !8047, file: !7724, line: 352, type: !239)
!8054 = !DILocalVariable(name: "d_byte", scope: !8047, file: !7724, line: 356, type: !972)
!8055 = !DILocalVariable(name: "c_byte", scope: !8047, file: !7724, line: 357, type: !186)
!8056 = !DILocation(line: 0, scope: !8047)
!8057 = !DILocation(line: 357, column: 25, scope: !8047)
!8058 = !DILocation(line: 389, column: 11, scope: !8047)
!8059 = !DILocation(line: 389, column: 2, scope: !8047)
!8060 = !DILocation(line: 390, column: 11, scope: !8061)
!8061 = distinct !DILexicalBlock(scope: !8047, file: !7724, line: 389, column: 16)
!8062 = !DILocation(line: 390, column: 15, scope: !8061)
!8063 = !DILocation(line: 391, column: 4, scope: !8061)
!8064 = distinct !{!8064, !8059, !8065}
!8065 = !DILocation(line: 392, column: 2, scope: !8047)
!8066 = !DILocation(line: 394, column: 2, scope: !8047)
!8067 = distinct !DISubprogram(name: "memchr", scope: !7724, file: !7724, line: 404, type: !8068, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2742, retainedNodes: !8070)
!8068 = !DISubroutineType(types: !8069)
!8069 = !{!113, !13, !119, !239}
!8070 = !{!8071, !8072, !8073, !8074}
!8071 = !DILocalVariable(name: "s", arg: 1, scope: !8067, file: !7724, line: 404, type: !13)
!8072 = !DILocalVariable(name: "c", arg: 2, scope: !8067, file: !7724, line: 404, type: !119)
!8073 = !DILocalVariable(name: "n", arg: 3, scope: !8067, file: !7724, line: 404, type: !239)
!8074 = !DILocalVariable(name: "p", scope: !8075, file: !7724, line: 407, type: !2745)
!8075 = distinct !DILexicalBlock(scope: !8076, file: !7724, line: 406, column: 14)
!8076 = distinct !DILexicalBlock(scope: !8067, file: !7724, line: 406, column: 6)
!8077 = !DILocation(line: 0, scope: !8067)
!8078 = !DILocation(line: 406, column: 8, scope: !8076)
!8079 = !DILocation(line: 406, column: 6, scope: !8067)
!8080 = !DILocation(line: 409, column: 3, scope: !8075)
!8081 = !DILocation(line: 0, scope: !8075)
!8082 = !DILocation(line: 410, column: 8, scope: !8083)
!8083 = distinct !DILexicalBlock(scope: !8084, file: !7724, line: 410, column: 8)
!8084 = distinct !DILexicalBlock(scope: !8075, file: !7724, line: 409, column: 6)
!8085 = !DILocation(line: 410, column: 13, scope: !8083)
!8086 = !DILocation(line: 410, column: 8, scope: !8084)
!8087 = distinct !{!8087, !8080, !8088}
!8088 = !DILocation(line: 414, column: 20, scope: !8075)
!8089 = !DILocation(line: 417, column: 2, scope: !8067)
!8090 = !DILocation(line: 418, column: 1, scope: !8067)
!8091 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !571, file: !571, line: 23, type: !4231, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !564, retainedNodes: !8092)
!8092 = !{!8093}
!8093 = !DILocalVariable(name: "hook", arg: 1, scope: !8091, file: !571, line: 23, type: !300)
!8094 = !DILocation(line: 0, scope: !8091)
!8095 = !DILocation(line: 25, column: 15, scope: !8091)
!8096 = !DILocation(line: 26, column: 1, scope: !8091)
!8097 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !571, file: !571, line: 14, type: !301, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !564, retainedNodes: !8098)
!8098 = !{!8099}
!8099 = !DILocalVariable(name: "c", arg: 1, scope: !8097, file: !571, line: 14, type: !119)
!8100 = !DILocation(line: 0, scope: !8097)
!8101 = !DILocation(line: 18, column: 2, scope: !8097)
!8102 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !571, file: !571, line: 28, type: !8103, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !564, retainedNodes: !8105)
!8103 = !DISubroutineType(types: !8104)
!8104 = !{!119, !119, !567}
!8105 = !{!8106, !8107}
!8106 = !DILocalVariable(name: "c", arg: 1, scope: !8102, file: !571, line: 28, type: !119)
!8107 = !DILocalVariable(name: "stream", arg: 2, scope: !8102, file: !571, line: 28, type: !567)
!8108 = !DILocation(line: 0, scope: !8102)
!8109 = !DILocation(line: 30, column: 27, scope: !8102)
!8110 = !DILocation(line: 30, column: 50, scope: !8102)
!8111 = !DILocation(line: 30, column: 9, scope: !8102)
!8112 = !DILocation(line: 30, column: 2, scope: !8102)
!8113 = distinct !DISubprogram(name: "fputc", scope: !571, file: !571, line: 41, type: !8103, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !564, retainedNodes: !8114)
!8114 = !{!8115, !8116}
!8115 = !DILocalVariable(name: "c", arg: 1, scope: !8113, file: !571, line: 41, type: !119)
!8116 = !DILocalVariable(name: "stream", arg: 2, scope: !8113, file: !571, line: 41, type: !567)
!8117 = !DILocation(line: 0, scope: !8113)
!8118 = !DILocation(line: 43, column: 9, scope: !8113)
!8119 = !DILocation(line: 43, column: 2, scope: !8113)
!8120 = distinct !DISubprogram(name: "zephyr_fputc", scope: !8121, file: !8121, line: 72, type: !8103, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !564, retainedNodes: !8122)
!8121 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pi")
!8122 = !{!8123, !8124}
!8123 = !DILocalVariable(name: "c", arg: 1, scope: !8120, file: !8121, line: 72, type: !119)
!8124 = !DILocalVariable(name: "stream", arg: 2, scope: !8120, file: !8121, line: 72, type: !567)
!8125 = !DILocation(line: 0, scope: !8120)
!8126 = !DILocation(line: 81, column: 2, scope: !8127)
!8127 = distinct !DILexicalBlock(scope: !8120, file: !8121, line: 81, column: 2)
!8128 = !{i64 2154220805}
!8129 = !DILocation(line: 82, column: 9, scope: !8120)
!8130 = !DILocation(line: 82, column: 2, scope: !8120)
!8131 = distinct !DISubprogram(name: "fputs", scope: !571, file: !571, line: 46, type: !8132, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !564, retainedNodes: !8135)
!8132 = !DISubroutineType(types: !8133)
!8133 = !{!119, !7728, !8134}
!8134 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !567)
!8135 = !{!8136, !8137, !8138, !8139}
!8136 = !DILocalVariable(name: "s", arg: 1, scope: !8131, file: !571, line: 46, type: !7728)
!8137 = !DILocalVariable(name: "stream", arg: 2, scope: !8131, file: !571, line: 46, type: !8134)
!8138 = !DILocalVariable(name: "len", scope: !8131, file: !571, line: 48, type: !119)
!8139 = !DILocalVariable(name: "ret", scope: !8131, file: !571, line: 49, type: !119)
!8140 = !DILocation(line: 0, scope: !8131)
!8141 = !DILocation(line: 48, column: 12, scope: !8131)
!8142 = !DILocation(line: 51, column: 8, scope: !8131)
!8143 = !DILocation(line: 53, column: 13, scope: !8131)
!8144 = !DILocation(line: 53, column: 9, scope: !8131)
!8145 = !DILocation(line: 53, column: 2, scope: !8131)
!8146 = distinct !DISubprogram(name: "fwrite", scope: !571, file: !571, line: 99, type: !8147, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !564, retainedNodes: !8149)
!8147 = !DISubroutineType(types: !8148)
!8148 = !{!239, !8028, !239, !239, !8134}
!8149 = !{!8150, !8151, !8152, !8153}
!8150 = !DILocalVariable(name: "ptr", arg: 1, scope: !8146, file: !571, line: 99, type: !8028)
!8151 = !DILocalVariable(name: "size", arg: 2, scope: !8146, file: !571, line: 99, type: !239)
!8152 = !DILocalVariable(name: "nitems", arg: 3, scope: !8146, file: !571, line: 99, type: !239)
!8153 = !DILocalVariable(name: "stream", arg: 4, scope: !8146, file: !571, line: 100, type: !8134)
!8154 = !DILocation(line: 0, scope: !8146)
!8155 = !DILocation(line: 102, column: 9, scope: !8146)
!8156 = !DILocation(line: 102, column: 2, scope: !8146)
!8157 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !8121, file: !8121, line: 96, type: !8147, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !564, retainedNodes: !8158)
!8158 = !{!8159, !8160, !8161, !8162}
!8159 = !DILocalVariable(name: "ptr", arg: 1, scope: !8157, file: !8121, line: 96, type: !8028)
!8160 = !DILocalVariable(name: "size", arg: 2, scope: !8157, file: !8121, line: 96, type: !239)
!8161 = !DILocalVariable(name: "nitems", arg: 3, scope: !8157, file: !8121, line: 96, type: !239)
!8162 = !DILocalVariable(name: "stream", arg: 4, scope: !8157, file: !8121, line: 96, type: !8134)
!8163 = !DILocation(line: 0, scope: !8157)
!8164 = !DILocation(line: 107, column: 2, scope: !8165)
!8165 = distinct !DILexicalBlock(scope: !8157, file: !8121, line: 107, column: 2)
!8166 = !{i64 2154220909}
!8167 = !DILocation(line: 108, column: 9, scope: !8157)
!8168 = !DILocation(line: 108, column: 2, scope: !8157)
!8169 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !571, file: !571, line: 56, type: !8147, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !564, retainedNodes: !8170)
!8170 = !{!8171, !8172, !8173, !8174, !8175, !8176, !8177, !8178}
!8171 = !DILocalVariable(name: "ptr", arg: 1, scope: !8169, file: !571, line: 56, type: !8028)
!8172 = !DILocalVariable(name: "size", arg: 2, scope: !8169, file: !571, line: 56, type: !239)
!8173 = !DILocalVariable(name: "nitems", arg: 3, scope: !8169, file: !571, line: 57, type: !239)
!8174 = !DILocalVariable(name: "stream", arg: 4, scope: !8169, file: !571, line: 57, type: !8134)
!8175 = !DILocalVariable(name: "i", scope: !8169, file: !571, line: 59, type: !239)
!8176 = !DILocalVariable(name: "j", scope: !8169, file: !571, line: 60, type: !239)
!8177 = !DILocalVariable(name: "p", scope: !8169, file: !571, line: 61, type: !2745)
!8178 = !DILabel(scope: !8169, name: "done", file: !571, line: 82)
!8179 = !DILocation(line: 0, scope: !8169)
!8180 = !DILocation(line: 63, column: 14, scope: !8181)
!8181 = distinct !DILexicalBlock(scope: !8169, file: !571, line: 63, column: 6)
!8182 = !DILocation(line: 63, column: 24, scope: !8181)
!8183 = !DILocation(line: 72, column: 3, scope: !8184)
!8184 = distinct !DILexicalBlock(scope: !8169, file: !571, line: 70, column: 5)
!8185 = !DILocation(line: 0, scope: !8184)
!8186 = !DILocation(line: 73, column: 8, scope: !8187)
!8187 = distinct !DILexicalBlock(scope: !8188, file: !571, line: 73, column: 8)
!8188 = distinct !DILexicalBlock(scope: !8184, file: !571, line: 72, column: 6)
!8189 = !DILocation(line: 73, column: 29, scope: !8187)
!8190 = !DILocation(line: 73, column: 27, scope: !8187)
!8191 = !DILocation(line: 73, column: 21, scope: !8187)
!8192 = !DILocation(line: 73, column: 33, scope: !8187)
!8193 = !DILocation(line: 73, column: 8, scope: !8188)
!8194 = !DILocation(line: 76, column: 5, scope: !8188)
!8195 = !DILocation(line: 77, column: 14, scope: !8184)
!8196 = !DILocation(line: 77, column: 3, scope: !8188)
!8197 = distinct !{!8197, !8183, !8198}
!8198 = !DILocation(line: 77, column: 17, scope: !8184)
!8199 = !DILocation(line: 79, column: 4, scope: !8184)
!8200 = !DILocation(line: 80, column: 13, scope: !8169)
!8201 = !DILocation(line: 80, column: 2, scope: !8184)
!8202 = distinct !{!8202, !8203, !8204}
!8203 = !DILocation(line: 70, column: 2, scope: !8169)
!8204 = !DILocation(line: 80, column: 16, scope: !8169)
!8205 = !DILocation(line: 82, column: 1, scope: !8169)
!8206 = !DILocation(line: 83, column: 17, scope: !8169)
!8207 = !DILocation(line: 83, column: 2, scope: !8169)
!8208 = !DILocation(line: 84, column: 1, scope: !8169)
!8209 = distinct !DISubprogram(name: "puts", scope: !571, file: !571, line: 106, type: !8210, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !564, retainedNodes: !8212)
!8210 = !DISubroutineType(types: !8211)
!8211 = !{!119, !278}
!8212 = !{!8213}
!8213 = !DILocalVariable(name: "s", arg: 1, scope: !8209, file: !571, line: 106, type: !278)
!8214 = !DILocation(line: 0, scope: !8209)
!8215 = !DILocation(line: 108, column: 6, scope: !8216)
!8216 = distinct !DILexicalBlock(scope: !8209, file: !571, line: 108, column: 6)
!8217 = !DILocation(line: 108, column: 23, scope: !8216)
!8218 = !DILocation(line: 108, column: 6, scope: !8209)
!8219 = !DILocation(line: 112, column: 9, scope: !8209)
!8220 = !DILocation(line: 112, column: 29, scope: !8209)
!8221 = !DILocation(line: 112, column: 2, scope: !8209)
!8222 = !DILocation(line: 113, column: 1, scope: !8209)
!8223 = distinct !DISubprogram(name: "snprintf", scope: !8224, file: !8224, line: 28, type: !8225, scopeLine: 30, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2747, retainedNodes: !8227)
!8224 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/sprintf.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8225 = !DISubroutineType(types: !8226)
!8226 = !{!119, !7727, !239, !7728, null}
!8227 = !{!8228, !8229, !8230, !8231, !8238, !8243, !8244}
!8228 = !DILocalVariable(name: "str", arg: 1, scope: !8223, file: !8224, line: 28, type: !7727)
!8229 = !DILocalVariable(name: "len", arg: 2, scope: !8223, file: !8224, line: 28, type: !239)
!8230 = !DILocalVariable(name: "format", arg: 3, scope: !8223, file: !8224, line: 29, type: !7728)
!8231 = !DILocalVariable(name: "vargs", scope: !8223, file: !8224, line: 31, type: !8232)
!8232 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3315, line: 99, baseType: !8233)
!8233 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3315, line: 40, baseType: !8234)
!8234 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !8224, baseType: !8235)
!8235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !8236)
!8236 = !{!8237}
!8237 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !8235, file: !8224, line: 31, baseType: !113, size: 32)
!8238 = !DILocalVariable(name: "p", scope: !8223, file: !8224, line: 33, type: !8239)
!8239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "emitter", file: !8224, line: 13, size: 64, elements: !8240)
!8240 = !{!8241, !8242}
!8241 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !8239, file: !8224, line: 14, baseType: !106, size: 32)
!8242 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !8239, file: !8224, line: 15, baseType: !119, size: 32, offset: 32)
!8243 = !DILocalVariable(name: "r", scope: !8223, file: !8224, line: 34, type: !119)
!8244 = !DILocalVariable(name: "dummy", scope: !8223, file: !8224, line: 35, type: !107)
!8245 = !DILocation(line: 0, scope: !8223)
!8246 = !DILocation(line: 31, column: 2, scope: !8223)
!8247 = !DILocation(line: 31, column: 10, scope: !8223)
!8248 = !DILocation(line: 33, column: 2, scope: !8223)
!8249 = !DILocation(line: 33, column: 17, scope: !8223)
!8250 = !DILocation(line: 35, column: 2, scope: !8223)
!8251 = !DILocation(line: 37, column: 10, scope: !8252)
!8252 = distinct !DILexicalBlock(scope: !8223, file: !8224, line: 37, column: 6)
!8253 = !DILocation(line: 37, column: 6, scope: !8223)
!8254 = !DILocation(line: 41, column: 4, scope: !8223)
!8255 = !DILocation(line: 41, column: 8, scope: !8223)
!8256 = !DILocation(line: 42, column: 4, scope: !8223)
!8257 = !DILocation(line: 42, column: 8, scope: !8223)
!8258 = !DILocation(line: 44, column: 2, scope: !8223)
!8259 = !DILocation(line: 45, column: 6, scope: !8223)
!8260 = !DILocation(line: 46, column: 2, scope: !8223)
!8261 = !DILocation(line: 48, column: 6, scope: !8223)
!8262 = !DILocation(line: 48, column: 11, scope: !8223)
!8263 = !DILocation(line: 50, column: 1, scope: !8223)
!8264 = !DILocation(line: 49, column: 2, scope: !8223)
!8265 = distinct !DISubprogram(name: "cbvprintf", scope: !3347, file: !3347, line: 739, type: !8266, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2747, retainedNodes: !8268)
!8266 = !DISubroutineType(types: !8267)
!8267 = !{!119, !3697, !113, !278, !8232}
!8268 = !{!8269, !8270, !8271, !8272}
!8269 = !DILocalVariable(name: "out", arg: 1, scope: !8265, file: !3347, line: 739, type: !3697)
!8270 = !DILocalVariable(name: "ctx", arg: 2, scope: !8265, file: !3347, line: 739, type: !113)
!8271 = !DILocalVariable(name: "format", arg: 3, scope: !8265, file: !3347, line: 739, type: !278)
!8272 = !DILocalVariable(name: "ap", arg: 4, scope: !8265, file: !3347, line: 739, type: !8232)
!8273 = !DILocation(line: 0, scope: !8265)
!8274 = !DILocation(line: 741, column: 9, scope: !8265)
!8275 = !DILocation(line: 741, column: 2, scope: !8265)
!8276 = distinct !DISubprogram(name: "sprintf_out", scope: !8224, file: !8224, line: 18, type: !8277, scopeLine: 19, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2747, retainedNodes: !8280)
!8277 = !DISubroutineType(types: !8278)
!8278 = !{!119, !119, !8279}
!8279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8239, size: 32)
!8280 = !{!8281, !8282}
!8281 = !DILocalVariable(name: "c", arg: 1, scope: !8276, file: !8224, line: 18, type: !119)
!8282 = !DILocalVariable(name: "p", arg: 2, scope: !8276, file: !8224, line: 18, type: !8279)
!8283 = !DILocation(line: 0, scope: !8276)
!8284 = !DILocation(line: 20, column: 9, scope: !8285)
!8285 = distinct !DILexicalBlock(scope: !8276, file: !8224, line: 20, column: 6)
!8286 = !DILocation(line: 20, column: 13, scope: !8285)
!8287 = !DILocation(line: 20, column: 6, scope: !8276)
!8288 = !DILocation(line: 21, column: 15, scope: !8289)
!8289 = distinct !DILexicalBlock(scope: !8285, file: !8224, line: 20, column: 18)
!8290 = !DILocation(line: 21, column: 8, scope: !8289)
!8291 = !DILocation(line: 21, column: 13, scope: !8289)
!8292 = !DILocation(line: 22, column: 10, scope: !8289)
!8293 = !DILocation(line: 23, column: 10, scope: !8289)
!8294 = !DILocation(line: 24, column: 2, scope: !8289)
!8295 = !DILocation(line: 25, column: 2, scope: !8276)
!8296 = distinct !DISubprogram(name: "sprintf", scope: !8224, file: !8224, line: 52, type: !8297, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2747, retainedNodes: !8299)
!8297 = !DISubroutineType(types: !8298)
!8298 = !{!119, !7727, !7728, null}
!8299 = !{!8300, !8301, !8302, !8303, !8304}
!8300 = !DILocalVariable(name: "str", arg: 1, scope: !8296, file: !8224, line: 52, type: !7727)
!8301 = !DILocalVariable(name: "format", arg: 2, scope: !8296, file: !8224, line: 52, type: !7728)
!8302 = !DILocalVariable(name: "vargs", scope: !8296, file: !8224, line: 54, type: !8232)
!8303 = !DILocalVariable(name: "p", scope: !8296, file: !8224, line: 56, type: !8239)
!8304 = !DILocalVariable(name: "r", scope: !8296, file: !8224, line: 57, type: !119)
!8305 = !DILocation(line: 0, scope: !8296)
!8306 = !DILocation(line: 54, column: 2, scope: !8296)
!8307 = !DILocation(line: 54, column: 10, scope: !8296)
!8308 = !DILocation(line: 56, column: 2, scope: !8296)
!8309 = !DILocation(line: 56, column: 17, scope: !8296)
!8310 = !DILocation(line: 59, column: 4, scope: !8296)
!8311 = !DILocation(line: 59, column: 8, scope: !8296)
!8312 = !DILocation(line: 60, column: 4, scope: !8296)
!8313 = !DILocation(line: 60, column: 8, scope: !8296)
!8314 = !DILocation(line: 62, column: 2, scope: !8296)
!8315 = !DILocation(line: 63, column: 6, scope: !8296)
!8316 = !DILocation(line: 64, column: 2, scope: !8296)
!8317 = !DILocation(line: 66, column: 6, scope: !8296)
!8318 = !DILocation(line: 66, column: 11, scope: !8296)
!8319 = !DILocation(line: 68, column: 1, scope: !8296)
!8320 = !DILocation(line: 67, column: 2, scope: !8296)
!8321 = distinct !DISubprogram(name: "vsnprintf", scope: !8224, file: !8224, line: 70, type: !8322, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2747, retainedNodes: !8324)
!8322 = !DISubroutineType(types: !8323)
!8323 = !{!119, !7727, !239, !7728, !8232}
!8324 = !{!8325, !8326, !8327, !8328, !8329, !8330, !8331}
!8325 = !DILocalVariable(name: "str", arg: 1, scope: !8321, file: !8224, line: 70, type: !7727)
!8326 = !DILocalVariable(name: "len", arg: 2, scope: !8321, file: !8224, line: 70, type: !239)
!8327 = !DILocalVariable(name: "format", arg: 3, scope: !8321, file: !8224, line: 71, type: !7728)
!8328 = !DILocalVariable(name: "vargs", arg: 4, scope: !8321, file: !8224, line: 71, type: !8232)
!8329 = !DILocalVariable(name: "p", scope: !8321, file: !8224, line: 73, type: !8239)
!8330 = !DILocalVariable(name: "r", scope: !8321, file: !8224, line: 74, type: !119)
!8331 = !DILocalVariable(name: "dummy", scope: !8321, file: !8224, line: 75, type: !107)
!8332 = !DILocation(line: 0, scope: !8321)
!8333 = !DILocation(line: 73, column: 2, scope: !8321)
!8334 = !DILocation(line: 73, column: 17, scope: !8321)
!8335 = !DILocation(line: 75, column: 2, scope: !8321)
!8336 = !DILocation(line: 77, column: 10, scope: !8337)
!8337 = distinct !DILexicalBlock(scope: !8321, file: !8224, line: 77, column: 6)
!8338 = !DILocation(line: 77, column: 6, scope: !8321)
!8339 = !DILocation(line: 81, column: 4, scope: !8321)
!8340 = !DILocation(line: 81, column: 8, scope: !8321)
!8341 = !DILocation(line: 82, column: 4, scope: !8321)
!8342 = !DILocation(line: 82, column: 8, scope: !8321)
!8343 = !DILocation(line: 84, column: 6, scope: !8321)
!8344 = !DILocation(line: 86, column: 6, scope: !8321)
!8345 = !DILocation(line: 86, column: 11, scope: !8321)
!8346 = !DILocation(line: 88, column: 1, scope: !8321)
!8347 = !DILocation(line: 87, column: 2, scope: !8321)
!8348 = distinct !DISubprogram(name: "vsprintf", scope: !8224, file: !8224, line: 90, type: !8349, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2747, retainedNodes: !8351)
!8349 = !DISubroutineType(types: !8350)
!8350 = !{!119, !7727, !7728, !8232}
!8351 = !{!8352, !8353, !8354, !8355, !8356}
!8352 = !DILocalVariable(name: "str", arg: 1, scope: !8348, file: !8224, line: 90, type: !7727)
!8353 = !DILocalVariable(name: "format", arg: 2, scope: !8348, file: !8224, line: 90, type: !7728)
!8354 = !DILocalVariable(name: "vargs", arg: 3, scope: !8348, file: !8224, line: 91, type: !8232)
!8355 = !DILocalVariable(name: "p", scope: !8348, file: !8224, line: 93, type: !8239)
!8356 = !DILocalVariable(name: "r", scope: !8348, file: !8224, line: 94, type: !119)
!8357 = !DILocation(line: 0, scope: !8348)
!8358 = !DILocation(line: 93, column: 2, scope: !8348)
!8359 = !DILocation(line: 93, column: 17, scope: !8348)
!8360 = !DILocation(line: 96, column: 4, scope: !8348)
!8361 = !DILocation(line: 96, column: 8, scope: !8348)
!8362 = !DILocation(line: 97, column: 4, scope: !8348)
!8363 = !DILocation(line: 97, column: 8, scope: !8348)
!8364 = !DILocation(line: 99, column: 6, scope: !8348)
!8365 = !DILocation(line: 101, column: 6, scope: !8348)
!8366 = !DILocation(line: 101, column: 11, scope: !8348)
!8367 = !DILocation(line: 103, column: 1, scope: !8348)
!8368 = !DILocation(line: 102, column: 2, scope: !8348)
!8369 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !682, file: !682, line: 368, type: !735, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8370)
!8370 = !{!8371}
!8371 = !DILocalVariable(name: "dev", arg: 1, scope: !8369, file: !682, line: 368, type: !711)
!8372 = !DILocation(line: 0, scope: !8369)
!8373 = !DILocation(line: 370, column: 2, scope: !8369)
!8374 = !DILocation(line: 371, column: 1, scope: !8369)
!8375 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !682, file: !682, line: 243, type: !8376, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8378)
!8376 = !DISubroutineType(types: !8377)
!8377 = !{null, !119, !119, !711}
!8378 = !{!8379, !8380, !8381, !8382, !8384}
!8379 = !DILocalVariable(name: "min", arg: 1, scope: !8375, file: !682, line: 243, type: !119)
!8380 = !DILocalVariable(name: "max", arg: 2, scope: !8375, file: !682, line: 243, type: !119)
!8381 = !DILocalVariable(name: "dev", arg: 3, scope: !8375, file: !682, line: 243, type: !711)
!8382 = !DILocalVariable(name: "data", scope: !8375, file: !682, line: 245, type: !8383)
!8383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !715, size: 32)
!8384 = !DILocalVariable(name: "line", scope: !8375, file: !682, line: 246, type: !119)
!8385 = !DILocation(line: 0, scope: !8375)
!8386 = !DILocation(line: 245, column: 38, scope: !8375)
!8387 = !DILocation(line: 249, column: 24, scope: !8388)
!8388 = distinct !DILexicalBlock(scope: !8389, file: !682, line: 249, column: 2)
!8389 = distinct !DILexicalBlock(scope: !8375, file: !682, line: 249, column: 2)
!8390 = !DILocation(line: 249, column: 2, scope: !8389)
!8391 = !DILocation(line: 251, column: 7, scope: !8392)
!8392 = distinct !DILexicalBlock(scope: !8393, file: !682, line: 251, column: 7)
!8393 = distinct !DILexicalBlock(scope: !8388, file: !682, line: 249, column: 39)
!8394 = !DILocation(line: 251, column: 7, scope: !8393)
!8395 = !DILocation(line: 253, column: 4, scope: !8396)
!8396 = distinct !DILexicalBlock(scope: !8392, file: !682, line: 251, column: 36)
!8397 = !DILocation(line: 256, column: 24, scope: !8398)
!8398 = distinct !DILexicalBlock(scope: !8396, file: !682, line: 256, column: 8)
!8399 = !DILocation(line: 256, column: 9, scope: !8398)
!8400 = !DILocation(line: 256, column: 8, scope: !8396)
!8401 = !DILocation(line: 260, column: 43, scope: !8396)
!8402 = !DILocation(line: 260, column: 4, scope: !8396)
!8403 = !DILocation(line: 261, column: 3, scope: !8396)
!8404 = !DILocation(line: 249, column: 35, scope: !8388)
!8405 = distinct !{!8405, !8390, !8406}
!8406 = !DILocation(line: 262, column: 2, scope: !8389)
!8407 = !DILocation(line: 263, column: 1, scope: !8375)
!8408 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !682, file: !682, line: 158, type: !301, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8409)
!8409 = !{!8410}
!8410 = !DILocalVariable(name: "line", arg: 1, scope: !8408, file: !682, line: 158, type: !119)
!8411 = !DILocation(line: 0, scope: !8408)
!8412 = !DILocation(line: 170, column: 38, scope: !8413)
!8413 = distinct !DILexicalBlock(scope: !8414, file: !682, line: 160, column: 17)
!8414 = distinct !DILexicalBlock(scope: !8408, file: !682, line: 160, column: 6)
!8415 = !DILocation(line: 170, column: 10, scope: !8413)
!8416 = !DILocation(line: 176, column: 1, scope: !8408)
!8417 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !682, file: !682, line: 183, type: !8418, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8420)
!8418 = !DISubroutineType(types: !8419)
!8419 = !{null, !119}
!8420 = !{!8421}
!8421 = !DILocalVariable(name: "line", arg: 1, scope: !8417, file: !682, line: 183, type: !119)
!8422 = !DILocation(line: 0, scope: !8417)
!8423 = !DILocation(line: 195, column: 28, scope: !8424)
!8424 = distinct !DILexicalBlock(scope: !8425, file: !682, line: 185, column: 17)
!8425 = distinct !DILexicalBlock(scope: !8417, file: !682, line: 185, column: 6)
!8426 = !DILocation(line: 195, column: 3, scope: !8424)
!8427 = !DILocation(line: 200, column: 1, scope: !8417)
!8428 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !8429, file: !8429, line: 910, type: !6429, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8430)
!8429 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8430 = !{!8431}
!8431 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8428, file: !8429, line: 910, type: !118)
!8432 = !DILocation(line: 0, scope: !8428)
!8433 = !DILocation(line: 912, column: 3, scope: !8428)
!8434 = !DILocation(line: 913, column: 1, scope: !8428)
!8435 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !8429, file: !8429, line: 834, type: !7619, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8436)
!8436 = !{!8437}
!8437 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8435, file: !8429, line: 834, type: !118)
!8438 = !DILocation(line: 0, scope: !8435)
!8439 = !DILocation(line: 836, column: 11, scope: !8435)
!8440 = !DILocation(line: 836, column: 40, scope: !8435)
!8441 = !DILocation(line: 836, column: 3, scope: !8435)
!8442 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !682, file: !682, line: 304, type: !735, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8443)
!8443 = !{!8444}
!8444 = !DILocalVariable(name: "dev", arg: 1, scope: !8442, file: !682, line: 304, type: !711)
!8445 = !DILocation(line: 0, scope: !8442)
!8446 = !DILocation(line: 306, column: 2, scope: !8442)
!8447 = !DILocation(line: 307, column: 1, scope: !8442)
!8448 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !682, file: !682, line: 299, type: !735, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8449)
!8449 = !{!8450}
!8450 = !DILocalVariable(name: "dev", arg: 1, scope: !8448, file: !682, line: 299, type: !711)
!8451 = !DILocation(line: 0, scope: !8448)
!8452 = !DILocation(line: 301, column: 2, scope: !8448)
!8453 = !DILocation(line: 302, column: 1, scope: !8448)
!8454 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !682, file: !682, line: 294, type: !735, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8455)
!8455 = !{!8456}
!8456 = !DILocalVariable(name: "dev", arg: 1, scope: !8454, file: !682, line: 294, type: !711)
!8457 = !DILocation(line: 0, scope: !8454)
!8458 = !DILocation(line: 296, column: 2, scope: !8454)
!8459 = !DILocation(line: 297, column: 1, scope: !8454)
!8460 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !682, file: !682, line: 397, type: !735, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8461)
!8461 = !{!8462}
!8462 = !DILocalVariable(name: "dev", arg: 1, scope: !8460, file: !682, line: 397, type: !711)
!8463 = !DILocation(line: 0, scope: !8460)
!8464 = !DILocation(line: 399, column: 2, scope: !8460)
!8465 = !DILocation(line: 400, column: 1, scope: !8460)
!8466 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !682, file: !682, line: 392, type: !735, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8467)
!8467 = !{!8468}
!8468 = !DILocalVariable(name: "dev", arg: 1, scope: !8466, file: !682, line: 392, type: !711)
!8469 = !DILocation(line: 0, scope: !8466)
!8470 = !DILocation(line: 394, column: 2, scope: !8466)
!8471 = !DILocation(line: 395, column: 1, scope: !8466)
!8472 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !682, file: !682, line: 289, type: !735, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8473)
!8473 = !{!8474}
!8474 = !DILocalVariable(name: "dev", arg: 1, scope: !8472, file: !682, line: 289, type: !711)
!8475 = !DILocation(line: 0, scope: !8472)
!8476 = !DILocation(line: 291, column: 2, scope: !8472)
!8477 = !DILocation(line: 292, column: 1, scope: !8472)
!8478 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !682, file: !682, line: 387, type: !735, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8479)
!8479 = !{!8480}
!8480 = !DILocalVariable(name: "dev", arg: 1, scope: !8478, file: !682, line: 387, type: !711)
!8481 = !DILocation(line: 0, scope: !8478)
!8482 = !DILocation(line: 389, column: 2, scope: !8478)
!8483 = !DILocation(line: 390, column: 1, scope: !8478)
!8484 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !682, file: !682, line: 382, type: !735, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8485)
!8485 = !{!8486}
!8486 = !DILocalVariable(name: "dev", arg: 1, scope: !8484, file: !682, line: 382, type: !711)
!8487 = !DILocation(line: 0, scope: !8484)
!8488 = !DILocation(line: 384, column: 2, scope: !8484)
!8489 = !DILocation(line: 385, column: 1, scope: !8484)
!8490 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !682, file: !682, line: 373, type: !735, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8491)
!8491 = !{!8492}
!8492 = !DILocalVariable(name: "dev", arg: 1, scope: !8490, file: !682, line: 373, type: !711)
!8493 = !DILocation(line: 0, scope: !8490)
!8494 = !DILocation(line: 375, column: 2, scope: !8490)
!8495 = !DILocation(line: 376, column: 1, scope: !8490)
!8496 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !682, file: !682, line: 284, type: !735, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8497)
!8497 = !{!8498}
!8498 = !DILocalVariable(name: "dev", arg: 1, scope: !8496, file: !682, line: 284, type: !711)
!8499 = !DILocation(line: 0, scope: !8496)
!8500 = !DILocation(line: 286, column: 2, scope: !8496)
!8501 = !DILocation(line: 287, column: 1, scope: !8496)
!8502 = distinct !DISubprogram(name: "stm32_exti_init", scope: !682, file: !682, line: 416, type: !709, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8503)
!8503 = !{!8504}
!8504 = !DILocalVariable(name: "dev", arg: 1, scope: !8502, file: !682, line: 416, type: !711)
!8505 = !DILocation(line: 0, scope: !8502)
!8506 = !DILocation(line: 418, column: 2, scope: !8502)
!8507 = !DILocation(line: 420, column: 2, scope: !8502)
!8508 = !DILocation(line: 0, scope: !734)
!8509 = !DILocation(line: 493, column: 2, scope: !8510)
!8510 = distinct !DILexicalBlock(scope: !734, file: !682, line: 493, column: 2)
!8511 = !DILocation(line: 497, column: 2, scope: !8512)
!8512 = distinct !DILexicalBlock(scope: !734, file: !682, line: 497, column: 2)
!8513 = !DILocation(line: 507, column: 2, scope: !8514)
!8514 = distinct !DILexicalBlock(scope: !734, file: !682, line: 507, column: 2)
!8515 = !DILocation(line: 512, column: 2, scope: !8516)
!8516 = distinct !DILexicalBlock(scope: !734, file: !682, line: 512, column: 2)
!8517 = !DILocation(line: 516, column: 2, scope: !8518)
!8518 = distinct !DILexicalBlock(scope: !734, file: !682, line: 516, column: 2)
!8519 = !DILocation(line: 523, column: 2, scope: !8520)
!8520 = distinct !DILexicalBlock(scope: !734, file: !682, line: 523, column: 2)
!8521 = !DILocation(line: 527, column: 2, scope: !8522)
!8522 = distinct !DILexicalBlock(scope: !734, file: !682, line: 527, column: 2)
!8523 = !DILocation(line: 581, column: 2, scope: !8524)
!8524 = distinct !DILexicalBlock(scope: !734, file: !682, line: 581, column: 2)
!8525 = !DILocation(line: 586, column: 2, scope: !8526)
!8526 = distinct !DILexicalBlock(scope: !734, file: !682, line: 586, column: 2)
!8527 = !DILocation(line: 591, column: 2, scope: !8528)
!8528 = distinct !DILexicalBlock(scope: !734, file: !682, line: 591, column: 2)
!8529 = !DILocation(line: 595, column: 2, scope: !8530)
!8530 = distinct !DILexicalBlock(scope: !734, file: !682, line: 595, column: 2)
!8531 = !DILocation(line: 607, column: 1, scope: !734)
!8532 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !682, file: !682, line: 112, type: !8418, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8533)
!8533 = !{!8534, !8535}
!8534 = !DILocalVariable(name: "line", arg: 1, scope: !8532, file: !682, line: 112, type: !119)
!8535 = !DILocalVariable(name: "irqnum", scope: !8532, file: !682, line: 114, type: !119)
!8536 = !DILocation(line: 0, scope: !8532)
!8537 = !DILocation(line: 122, column: 13, scope: !8538)
!8538 = distinct !DILexicalBlock(scope: !8532, file: !682, line: 122, column: 6)
!8539 = !DILocation(line: 122, column: 6, scope: !8532)
!8540 = !DILocation(line: 123, column: 3, scope: !8541)
!8541 = distinct !DILexicalBlock(scope: !8542, file: !682, line: 123, column: 3)
!8542 = distinct !DILexicalBlock(scope: !8543, file: !682, line: 123, column: 3)
!8543 = distinct !DILexicalBlock(scope: !8544, file: !682, line: 123, column: 3)
!8544 = distinct !DILexicalBlock(scope: !8538, file: !682, line: 122, column: 22)
!8545 = !DILocation(line: 121, column: 11, scope: !8532)
!8546 = !DILocation(line: 130, column: 26, scope: !8532)
!8547 = !DILocation(line: 130, column: 2, scope: !8532)
!8548 = !DILocation(line: 134, column: 2, scope: !8532)
!8549 = !DILocation(line: 135, column: 1, scope: !8532)
!8550 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !8429, file: !8429, line: 268, type: !6429, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8551)
!8551 = !{!8552}
!8552 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8550, file: !8429, line: 268, type: !118)
!8553 = !DILocation(line: 0, scope: !8550)
!8554 = !DILocation(line: 270, column: 3, scope: !8550)
!8555 = !DILocation(line: 271, column: 1, scope: !8550)
!8556 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !682, file: !682, line: 137, type: !8418, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8557)
!8557 = !{!8558}
!8558 = !DILocalVariable(name: "line", arg: 1, scope: !8556, file: !682, line: 137, type: !119)
!8559 = !DILocation(line: 0, scope: !8556)
!8560 = !DILocation(line: 141, column: 11, scope: !8561)
!8561 = distinct !DILexicalBlock(scope: !8556, file: !682, line: 141, column: 6)
!8562 = !DILocation(line: 141, column: 6, scope: !8556)
!8563 = !DILocation(line: 145, column: 28, scope: !8564)
!8564 = distinct !DILexicalBlock(scope: !8561, file: !682, line: 141, column: 17)
!8565 = !DILocation(line: 145, column: 3, scope: !8564)
!8566 = !DILocation(line: 147, column: 2, scope: !8564)
!8567 = !DILocation(line: 151, column: 1, scope: !8556)
!8568 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !8429, file: !8429, line: 309, type: !6429, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8569)
!8569 = !{!8570}
!8570 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8568, file: !8429, line: 309, type: !118)
!8571 = !DILocation(line: 0, scope: !8568)
!8572 = !DILocation(line: 311, column: 3, scope: !8568)
!8573 = !DILocation(line: 312, column: 1, scope: !8568)
!8574 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !682, file: !682, line: 202, type: !8575, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8577)
!8575 = !DISubroutineType(types: !8576)
!8576 = !{null, !119, !119}
!8577 = !{!8578, !8579}
!8578 = !DILocalVariable(name: "line", arg: 1, scope: !8574, file: !682, line: 202, type: !119)
!8579 = !DILocalVariable(name: "trigger", arg: 2, scope: !8574, file: !682, line: 202, type: !119)
!8580 = !DILocation(line: 0, scope: !8574)
!8581 = !DILocation(line: 211, column: 2, scope: !8574)
!8582 = !DILocation(line: 213, column: 36, scope: !8583)
!8583 = distinct !DILexicalBlock(scope: !8574, file: !682, line: 211, column: 19)
!8584 = !DILocation(line: 213, column: 3, scope: !8583)
!8585 = !DILocation(line: 214, column: 3, scope: !8583)
!8586 = !DILocation(line: 215, column: 3, scope: !8583)
!8587 = !DILocation(line: 217, column: 35, scope: !8583)
!8588 = !DILocation(line: 217, column: 3, scope: !8583)
!8589 = !DILocation(line: 218, column: 3, scope: !8583)
!8590 = !DILocation(line: 219, column: 3, scope: !8583)
!8591 = !DILocation(line: 221, column: 36, scope: !8583)
!8592 = !DILocation(line: 221, column: 3, scope: !8583)
!8593 = !DILocation(line: 222, column: 3, scope: !8583)
!8594 = !DILocation(line: 223, column: 3, scope: !8583)
!8595 = !DILocation(line: 225, column: 35, scope: !8583)
!8596 = !DILocation(line: 225, column: 3, scope: !8583)
!8597 = !DILocation(line: 226, column: 3, scope: !8583)
!8598 = !DILocation(line: 227, column: 3, scope: !8583)
!8599 = !DILocation(line: 232, column: 1, scope: !8574)
!8600 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !8429, file: !8429, line: 573, type: !6429, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8601)
!8601 = !{!8602}
!8602 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8600, file: !8429, line: 573, type: !118)
!8603 = !DILocation(line: 0, scope: !8600)
!8604 = !DILocation(line: 575, column: 3, scope: !8600)
!8605 = !DILocation(line: 577, column: 1, scope: !8600)
!8606 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !8429, file: !8429, line: 703, type: !6429, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8607)
!8607 = !{!8608}
!8608 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8606, file: !8429, line: 703, type: !118)
!8609 = !DILocation(line: 0, scope: !8606)
!8610 = !DILocation(line: 705, column: 3, scope: !8606)
!8611 = !DILocation(line: 706, column: 1, scope: !8606)
!8612 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !8429, file: !8429, line: 529, type: !6429, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8613)
!8613 = !{!8614}
!8614 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8612, file: !8429, line: 529, type: !118)
!8615 = !DILocation(line: 0, scope: !8612)
!8616 = !DILocation(line: 531, column: 3, scope: !8612)
!8617 = !DILocation(line: 533, column: 1, scope: !8612)
!8618 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !8429, file: !8429, line: 661, type: !6429, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8619)
!8619 = !{!8620}
!8620 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8618, file: !8429, line: 661, type: !118)
!8621 = !DILocation(line: 0, scope: !8618)
!8622 = !DILocation(line: 663, column: 3, scope: !8618)
!8623 = !DILocation(line: 664, column: 1, scope: !8618)
!8624 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !682, file: !682, line: 433, type: !8625, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8627)
!8625 = !DISubroutineType(types: !8626)
!8626 = !{!119, !119, !722, !113}
!8627 = !{!8628, !8629, !8630, !8631, !8633}
!8628 = !DILocalVariable(name: "line", arg: 1, scope: !8624, file: !682, line: 433, type: !119)
!8629 = !DILocalVariable(name: "cb", arg: 2, scope: !8624, file: !682, line: 433, type: !722)
!8630 = !DILocalVariable(name: "arg", arg: 3, scope: !8624, file: !682, line: 433, type: !113)
!8631 = !DILocalVariable(name: "dev", scope: !8624, file: !682, line: 435, type: !8632)
!8632 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !711)
!8633 = !DILocalVariable(name: "data", scope: !8624, file: !682, line: 436, type: !8383)
!8634 = !DILocation(line: 0, scope: !8624)
!8635 = !DILocation(line: 438, column: 21, scope: !8636)
!8636 = distinct !DILexicalBlock(scope: !8624, file: !682, line: 438, column: 6)
!8637 = !DILocation(line: 438, column: 6, scope: !8636)
!8638 = !DILocation(line: 438, column: 6, scope: !8624)
!8639 = !DILocation(line: 442, column: 20, scope: !8624)
!8640 = !DILocation(line: 443, column: 17, scope: !8624)
!8641 = !DILocation(line: 443, column: 22, scope: !8624)
!8642 = !DILocation(line: 445, column: 2, scope: !8624)
!8643 = !DILocation(line: 446, column: 1, scope: !8624)
!8644 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !682, file: !682, line: 448, type: !8418, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8645)
!8645 = !{!8646, !8647, !8648}
!8646 = !DILocalVariable(name: "line", arg: 1, scope: !8644, file: !682, line: 448, type: !119)
!8647 = !DILocalVariable(name: "dev", scope: !8644, file: !682, line: 450, type: !8632)
!8648 = !DILocalVariable(name: "data", scope: !8644, file: !682, line: 451, type: !8383)
!8649 = !DILocation(line: 0, scope: !8644)
!8650 = !DILocation(line: 453, column: 17, scope: !8644)
!8651 = !DILocation(line: 453, column: 20, scope: !8644)
!8652 = !DILocation(line: 454, column: 17, scope: !8644)
!8653 = !DILocation(line: 454, column: 22, scope: !8644)
!8654 = !DILocation(line: 455, column: 1, scope: !8644)
!8655 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !871, file: !871, line: 183, type: !909, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !807, retainedNodes: !8656)
!8656 = !{!8657, !8658, !8659, !8660, !8661}
!8657 = !DILocalVariable(name: "dev", arg: 1, scope: !8655, file: !871, line: 183, type: !900)
!8658 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8655, file: !871, line: 184, type: !911)
!8659 = !DILocalVariable(name: "pclken", scope: !8655, file: !871, line: 186, type: !861)
!8660 = !DILocalVariable(name: "reg", scope: !8655, file: !871, line: 187, type: !1452)
!8661 = !DILocalVariable(name: "reg_val", scope: !8655, file: !871, line: 188, type: !118)
!8662 = !DILocation(line: 0, scope: !8655)
!8663 = !DILocation(line: 192, column: 6, scope: !8664)
!8664 = distinct !DILexicalBlock(scope: !8655, file: !871, line: 192, column: 6)
!8665 = !DILocation(line: 192, column: 6, scope: !8655)
!8666 = !DILocation(line: 197, column: 52, scope: !8655)
!8667 = !DILocation(line: 197, column: 8, scope: !8655)
!8668 = !DILocation(line: 198, column: 12, scope: !8655)
!8669 = !DILocation(line: 199, column: 21, scope: !8655)
!8670 = !DILocation(line: 199, column: 10, scope: !8655)
!8671 = !DILocation(line: 200, column: 7, scope: !8655)
!8672 = !DILocation(line: 202, column: 2, scope: !8655)
!8673 = !DILocation(line: 203, column: 1, scope: !8655)
!8674 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !871, file: !871, line: 205, type: !909, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !807, retainedNodes: !8675)
!8675 = !{!8676, !8677, !8678, !8679, !8680}
!8676 = !DILocalVariable(name: "dev", arg: 1, scope: !8674, file: !871, line: 205, type: !900)
!8677 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8674, file: !871, line: 206, type: !911)
!8678 = !DILocalVariable(name: "pclken", scope: !8674, file: !871, line: 208, type: !861)
!8679 = !DILocalVariable(name: "reg", scope: !8674, file: !871, line: 209, type: !1452)
!8680 = !DILocalVariable(name: "reg_val", scope: !8674, file: !871, line: 210, type: !118)
!8681 = !DILocation(line: 0, scope: !8674)
!8682 = !DILocation(line: 214, column: 6, scope: !8683)
!8683 = distinct !DILexicalBlock(scope: !8674, file: !871, line: 214, column: 6)
!8684 = !DILocation(line: 214, column: 6, scope: !8674)
!8685 = !DILocation(line: 219, column: 52, scope: !8674)
!8686 = !DILocation(line: 219, column: 8, scope: !8674)
!8687 = !DILocation(line: 220, column: 12, scope: !8674)
!8688 = !DILocation(line: 221, column: 22, scope: !8674)
!8689 = !DILocation(line: 221, column: 13, scope: !8674)
!8690 = !DILocation(line: 221, column: 10, scope: !8674)
!8691 = !DILocation(line: 222, column: 7, scope: !8674)
!8692 = !DILocation(line: 224, column: 2, scope: !8674)
!8693 = !DILocation(line: 225, column: 1, scope: !8674)
!8694 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !871, file: !871, line: 262, type: !925, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !807, retainedNodes: !8695)
!8695 = !{!8696, !8697, !8698, !8699, !8700, !8701, !8702, !8703}
!8696 = !DILocalVariable(name: "clock", arg: 1, scope: !8694, file: !871, line: 262, type: !900)
!8697 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8694, file: !871, line: 263, type: !911)
!8698 = !DILocalVariable(name: "rate", arg: 3, scope: !8694, file: !871, line: 264, type: !867)
!8699 = !DILocalVariable(name: "pclken", scope: !8694, file: !871, line: 266, type: !861)
!8700 = !DILocalVariable(name: "ahb_clock", scope: !8694, file: !871, line: 273, type: !118)
!8701 = !DILocalVariable(name: "apb1_clock", scope: !8694, file: !871, line: 274, type: !118)
!8702 = !DILocalVariable(name: "apb2_clock", scope: !8694, file: !871, line: 276, type: !118)
!8703 = !DILocalVariable(name: "ahb3_clock", scope: !8694, file: !871, line: 286, type: !118)
!8704 = !DILocation(line: 0, scope: !8694)
!8705 = !DILocation(line: 273, column: 23, scope: !8694)
!8706 = !DILocation(line: 299, column: 18, scope: !8694)
!8707 = !DILocation(line: 299, column: 2, scope: !8694)
!8708 = !DILocation(line: 274, column: 24, scope: !8694)
!8709 = !DILocation(line: 319, column: 3, scope: !8710)
!8710 = distinct !DILexicalBlock(scope: !8694, file: !871, line: 299, column: 23)
!8711 = !DILocation(line: 276, column: 24, scope: !8694)
!8712 = !DILocation(line: 323, column: 3, scope: !8710)
!8713 = !DILocation(line: 346, column: 33, scope: !8710)
!8714 = !DILocation(line: 346, column: 11, scope: !8710)
!8715 = !DILocation(line: 350, column: 3, scope: !8710)
!8716 = !DILocation(line: 354, column: 33, scope: !8710)
!8717 = !DILocation(line: 354, column: 11, scope: !8710)
!8718 = !DILocation(line: 358, column: 3, scope: !8710)
!8719 = !DILocation(line: 374, column: 3, scope: !8710)
!8720 = !DILocation(line: 379, column: 3, scope: !8710)
!8721 = !DILocation(line: 0, scope: !8710)
!8722 = !DILocation(line: 396, column: 1, scope: !8694)
!8723 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !871, file: !871, line: 227, type: !941, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !807, retainedNodes: !8724)
!8724 = !{!8725, !8726, !8727, !8728, !8729, !8730, !8731, !8732}
!8725 = !DILocalVariable(name: "dev", arg: 1, scope: !8723, file: !871, line: 227, type: !900)
!8726 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8723, file: !871, line: 228, type: !911)
!8727 = !DILocalVariable(name: "data", arg: 3, scope: !8723, file: !871, line: 229, type: !113)
!8728 = !DILocalVariable(name: "pclken", scope: !8723, file: !871, line: 233, type: !861)
!8729 = !DILocalVariable(name: "reg", scope: !8723, file: !871, line: 234, type: !1452)
!8730 = !DILocalVariable(name: "reg_val", scope: !8723, file: !871, line: 235, type: !118)
!8731 = !DILocalVariable(name: "dt_val", scope: !8723, file: !871, line: 235, type: !118)
!8732 = !DILocalVariable(name: "err", scope: !8723, file: !871, line: 236, type: !119)
!8733 = !DILocation(line: 0, scope: !8723)
!8734 = !DILocation(line: 241, column: 30, scope: !8723)
!8735 = !DILocation(line: 241, column: 8, scope: !8723)
!8736 = !DILocation(line: 242, column: 10, scope: !8737)
!8737 = distinct !DILexicalBlock(scope: !8723, file: !871, line: 242, column: 6)
!8738 = !DILocation(line: 242, column: 6, scope: !8723)
!8739 = !DILocation(line: 247, column: 11, scope: !8723)
!8740 = !DILocation(line: 248, column: 6, scope: !8723)
!8741 = !DILocation(line: 247, column: 44, scope: !8723)
!8742 = !DILocation(line: 250, column: 6, scope: !8723)
!8743 = !DILocation(line: 249, column: 52, scope: !8723)
!8744 = !DILocation(line: 249, column: 8, scope: !8723)
!8745 = !DILocation(line: 251, column: 12, scope: !8723)
!8746 = !DILocation(line: 252, column: 10, scope: !8723)
!8747 = !DILocation(line: 253, column: 7, scope: !8723)
!8748 = !DILocation(line: 255, column: 2, scope: !8723)
!8749 = !DILocation(line: 260, column: 1, scope: !8723)
!8750 = distinct !DISubprogram(name: "enabled_clock", scope: !871, file: !871, line: 100, type: !8751, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !807, retainedNodes: !8753)
!8751 = !DISubroutineType(types: !8752)
!8752 = !{!119, !118}
!8753 = !{!8754, !8755}
!8754 = !DILocalVariable(name: "src_clk", arg: 1, scope: !8750, file: !871, line: 100, type: !118)
!8755 = !DILocalVariable(name: "r", scope: !8750, file: !871, line: 102, type: !119)
!8756 = !DILocation(line: 0, scope: !8750)
!8757 = !DILocation(line: 104, column: 2, scope: !8750)
!8758 = !DILocation(line: 180, column: 2, scope: !8750)
!8759 = !DILocation(line: 181, column: 1, scope: !8750)
!8760 = distinct !DISubprogram(name: "get_bus_clock", scope: !871, file: !871, line: 79, type: !8761, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !807, retainedNodes: !8763)
!8761 = !DISubroutineType(types: !8762)
!8762 = !{!118, !118, !118}
!8763 = !{!8764, !8765}
!8764 = !DILocalVariable(name: "clock", arg: 1, scope: !8760, file: !871, line: 79, type: !118)
!8765 = !DILocalVariable(name: "prescaler", arg: 2, scope: !8760, file: !871, line: 79, type: !118)
!8766 = !DILocation(line: 0, scope: !8760)
!8767 = !DILocation(line: 81, column: 15, scope: !8760)
!8768 = !DILocation(line: 81, column: 2, scope: !8760)
!8769 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !871, file: !871, line: 68, type: !8770, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !807, retainedNodes: !8772)
!8770 = !DISubroutineType(types: !8771)
!8771 = !{!118, !118, !119, !119, !119}
!8772 = !{!8773, !8774, !8775, !8776}
!8773 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !8769, file: !871, line: 68, type: !118)
!8774 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !8769, file: !871, line: 69, type: !119)
!8775 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !8769, file: !871, line: 70, type: !119)
!8776 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !8769, file: !871, line: 71, type: !119)
!8777 = !DILocation(line: 0, scope: !8769)
!8778 = !DILocation(line: 75, column: 22, scope: !8769)
!8779 = !DILocation(line: 76, column: 13, scope: !8769)
!8780 = !DILocation(line: 75, column: 34, scope: !8769)
!8781 = !DILocation(line: 75, column: 2, scope: !8769)
!8782 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !871, file: !871, line: 641, type: !898, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !807, retainedNodes: !8783)
!8783 = !{!8784, !8785, !8786}
!8784 = !DILocalVariable(name: "dev", arg: 1, scope: !8782, file: !871, line: 641, type: !900)
!8785 = !DILocalVariable(name: "old_flash_freq", scope: !8782, file: !871, line: 664, type: !118)
!8786 = !DILocalVariable(name: "new_flash_freq", scope: !8782, file: !871, line: 665, type: !118)
!8787 = !DILocation(line: 0, scope: !8782)
!8788 = !DILocation(line: 646, column: 2, scope: !8782)
!8789 = !DILocation(line: 667, column: 19, scope: !8782)
!8790 = !DILocation(line: 674, column: 21, scope: !8791)
!8791 = distinct !DILexicalBlock(scope: !8782, file: !871, line: 674, column: 6)
!8792 = !DILocation(line: 674, column: 6, scope: !8782)
!8793 = !DILocation(line: 675, column: 3, scope: !8794)
!8794 = distinct !DILexicalBlock(scope: !8791, file: !871, line: 674, column: 59)
!8795 = !DILocation(line: 676, column: 2, scope: !8794)
!8796 = !DILocation(line: 680, column: 2, scope: !8782)
!8797 = !DILocation(line: 683, column: 2, scope: !8782)
!8798 = !DILocation(line: 690, column: 3, scope: !8799)
!8799 = distinct !DILexicalBlock(scope: !8800, file: !871, line: 689, column: 9)
!8800 = distinct !DILexicalBlock(scope: !8782, file: !871, line: 685, column: 6)
!8801 = !DILocation(line: 695, column: 2, scope: !8782)
!8802 = !DILocation(line: 696, column: 2, scope: !8782)
!8803 = !DILocation(line: 696, column: 9, scope: !8782)
!8804 = !DILocation(line: 696, column: 34, scope: !8782)
!8805 = distinct !{!8805, !8802, !8806}
!8806 = !DILocation(line: 697, column: 2, scope: !8782)
!8807 = !DILocation(line: 720, column: 21, scope: !8808)
!8808 = distinct !DILexicalBlock(scope: !8782, file: !871, line: 720, column: 6)
!8809 = !DILocation(line: 720, column: 6, scope: !8782)
!8810 = !DILocation(line: 721, column: 3, scope: !8811)
!8811 = distinct !DILexicalBlock(scope: !8808, file: !871, line: 720, column: 60)
!8812 = !DILocation(line: 722, column: 2, scope: !8811)
!8813 = !DILocation(line: 725, column: 18, scope: !8782)
!8814 = !DILocation(line: 728, column: 2, scope: !8782)
!8815 = !DILocation(line: 730, column: 2, scope: !8782)
!8816 = !DILocation(line: 745, column: 2, scope: !8782)
!8817 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !8818, file: !8818, line: 3275, type: !3220, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !807, retainedNodes: !2048)
!8818 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8819 = !DILocation(line: 3277, column: 21, scope: !8817)
!8820 = !DILocation(line: 3277, column: 3, scope: !8817)
!8821 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !871, file: !871, line: 507, type: !2982, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !807, retainedNodes: !2048)
!8822 = !DILocation(line: 516, column: 4, scope: !8823)
!8823 = distinct !DILexicalBlock(scope: !8824, file: !871, line: 515, column: 10)
!8824 = distinct !DILexicalBlock(scope: !8825, file: !871, line: 513, column: 7)
!8825 = distinct !DILexicalBlock(scope: !8826, file: !871, line: 510, column: 37)
!8826 = distinct !DILexicalBlock(scope: !8821, file: !871, line: 510, column: 6)
!8827 = !DILocation(line: 526, column: 3, scope: !8825)
!8828 = !DILocation(line: 527, column: 3, scope: !8825)
!8829 = !DILocation(line: 527, column: 10, scope: !8825)
!8830 = !DILocation(line: 527, column: 31, scope: !8825)
!8831 = distinct !{!8831, !8828, !8832}
!8832 = !DILocation(line: 529, column: 3, scope: !8825)
!8833 = !DILocation(line: 583, column: 3, scope: !8834)
!8834 = distinct !DILexicalBlock(scope: !8835, file: !871, line: 577, column: 37)
!8835 = distinct !DILexicalBlock(scope: !8821, file: !871, line: 577, column: 6)
!8836 = !DILocation(line: 584, column: 3, scope: !8834)
!8837 = !DILocation(line: 584, column: 10, scope: !8834)
!8838 = !DILocation(line: 584, column: 31, scope: !8834)
!8839 = distinct !{!8839, !8836, !8840}
!8840 = !DILocation(line: 585, column: 3, scope: !8834)
!8841 = !DILocation(line: 627, column: 1, scope: !8821)
!8842 = distinct !DISubprogram(name: "set_up_plls", scope: !871, file: !871, line: 448, type: !2982, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !807, retainedNodes: !2048)
!8843 = !DILocation(line: 460, column: 6, scope: !8844)
!8844 = distinct !DILexicalBlock(scope: !8842, file: !871, line: 460, column: 6)
!8845 = !DILocation(line: 460, column: 31, scope: !8844)
!8846 = !DILocation(line: 460, column: 6, scope: !8842)
!8847 = !DILocation(line: 461, column: 3, scope: !8848)
!8848 = distinct !DILexicalBlock(scope: !8844, file: !871, line: 460, column: 67)
!8849 = !DILocation(line: 462, column: 3, scope: !8848)
!8850 = !DILocation(line: 463, column: 2, scope: !8848)
!8851 = !DILocation(line: 464, column: 2, scope: !8842)
!8852 = !DILocation(line: 488, column: 2, scope: !8842)
!8853 = !DILocation(line: 492, column: 2, scope: !8842)
!8854 = !DILocation(line: 496, column: 2, scope: !8842)
!8855 = !DILocation(line: 499, column: 2, scope: !8842)
!8856 = !DILocation(line: 500, column: 2, scope: !8842)
!8857 = !DILocation(line: 500, column: 9, scope: !8842)
!8858 = !DILocation(line: 500, column: 30, scope: !8842)
!8859 = distinct !{!8859, !8856, !8860}
!8860 = !DILocation(line: 502, column: 2, scope: !8842)
!8861 = !DILocation(line: 505, column: 1, scope: !8842)
!8862 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8818, file: !8818, line: 3224, type: !6429, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !807, retainedNodes: !8863)
!8863 = !{!8864}
!8864 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8862, file: !8818, line: 3224, type: !118)
!8865 = !DILocation(line: 0, scope: !8862)
!8866 = !DILocation(line: 3226, column: 3, scope: !8862)
!8867 = !DILocation(line: 3227, column: 1, scope: !8862)
!8868 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8818, file: !8818, line: 3188, type: !6429, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !807, retainedNodes: !8869)
!8869 = !{!8870}
!8870 = !DILocalVariable(name: "Source", arg: 1, scope: !8868, file: !8818, line: 3188, type: !118)
!8871 = !DILocation(line: 0, scope: !8868)
!8872 = !DILocation(line: 3190, column: 3, scope: !8868)
!8873 = !DILocation(line: 3191, column: 1, scope: !8868)
!8874 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8818, file: !8818, line: 3204, type: !3220, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !807, retainedNodes: !2048)
!8875 = !DILocation(line: 3206, column: 21, scope: !8874)
!8876 = !DILocation(line: 3206, column: 3, scope: !8874)
!8877 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8818, file: !8818, line: 3240, type: !6429, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !807, retainedNodes: !8878)
!8878 = !{!8879}
!8879 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8877, file: !8818, line: 3240, type: !118)
!8880 = !DILocation(line: 0, scope: !8877)
!8881 = !DILocation(line: 3242, column: 3, scope: !8877)
!8882 = !DILocation(line: 3243, column: 1, scope: !8877)
!8883 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8818, file: !8818, line: 3256, type: !6429, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !807, retainedNodes: !8884)
!8884 = !{!8885}
!8885 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8883, file: !8818, line: 3256, type: !118)
!8886 = !DILocation(line: 0, scope: !8883)
!8887 = !DILocation(line: 3258, column: 3, scope: !8883)
!8888 = !DILocation(line: 3259, column: 1, scope: !8883)
!8889 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !871, file: !871, line: 409, type: !2982, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !807, retainedNodes: !2048)
!8890 = !DILocation(line: 412, column: 6, scope: !8891)
!8891 = distinct !DILexicalBlock(scope: !8889, file: !871, line: 412, column: 6)
!8892 = !DILocation(line: 412, column: 27, scope: !8891)
!8893 = !DILocation(line: 412, column: 6, scope: !8889)
!8894 = !DILocation(line: 414, column: 3, scope: !8895)
!8895 = distinct !DILexicalBlock(scope: !8891, file: !871, line: 412, column: 33)
!8896 = !DILocation(line: 415, column: 3, scope: !8895)
!8897 = !DILocation(line: 415, column: 10, scope: !8895)
!8898 = !DILocation(line: 415, column: 31, scope: !8895)
!8899 = distinct !{!8899, !8896, !8900}
!8900 = !DILocation(line: 417, column: 3, scope: !8895)
!8901 = !DILocation(line: 421, column: 2, scope: !8889)
!8902 = !DILocation(line: 422, column: 2, scope: !8889)
!8903 = !DILocation(line: 422, column: 9, scope: !8889)
!8904 = !DILocation(line: 422, column: 34, scope: !8889)
!8905 = distinct !{!8905, !8902, !8906}
!8906 = !DILocation(line: 423, column: 2, scope: !8889)
!8907 = !DILocation(line: 424, column: 1, scope: !8889)
!8908 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !8818, file: !8818, line: 4195, type: !2982, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !807, retainedNodes: !2048)
!8909 = !DILocation(line: 4197, column: 3, scope: !8908)
!8910 = !DILocation(line: 4198, column: 1, scope: !8908)
!8911 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8818, file: !8818, line: 4184, type: !2982, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !807, retainedNodes: !2048)
!8912 = !DILocation(line: 4186, column: 3, scope: !8911)
!8913 = !DILocation(line: 4187, column: 1, scope: !8911)
!8914 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8818, file: !8818, line: 4205, type: !3220, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !807, retainedNodes: !2048)
!8915 = !DILocation(line: 4207, column: 11, scope: !8914)
!8916 = !DILocation(line: 4207, column: 44, scope: !8914)
!8917 = !DILocation(line: 4207, column: 3, scope: !8914)
!8918 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8818, file: !8818, line: 3007, type: !3220, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !807, retainedNodes: !2048)
!8919 = !DILocation(line: 3009, column: 11, scope: !8918)
!8920 = !DILocation(line: 3009, column: 44, scope: !8918)
!8921 = !DILocation(line: 3009, column: 3, scope: !8918)
!8922 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8818, file: !8818, line: 2987, type: !2982, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !807, retainedNodes: !2048)
!8923 = !DILocation(line: 2989, column: 3, scope: !8922)
!8924 = !DILocation(line: 2990, column: 1, scope: !8922)
!8925 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8818, file: !8818, line: 2939, type: !2982, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !807, retainedNodes: !2048)
!8926 = !DILocation(line: 2941, column: 3, scope: !8925)
!8927 = !DILocation(line: 2942, column: 1, scope: !8925)
!8928 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8818, file: !8818, line: 2949, type: !2982, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !807, retainedNodes: !2048)
!8929 = !DILocation(line: 2951, column: 3, scope: !8928)
!8930 = !DILocation(line: 2952, column: 1, scope: !8928)
!8931 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8818, file: !8818, line: 2969, type: !3220, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !807, retainedNodes: !2048)
!8932 = !DILocation(line: 2971, column: 11, scope: !8931)
!8933 = !DILocation(line: 2971, column: 44, scope: !8931)
!8934 = !DILocation(line: 2971, column: 3, scope: !8931)
!8935 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !8818, file: !8818, line: 3143, type: !2982, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !807, retainedNodes: !2048)
!8936 = !DILocation(line: 3145, column: 3, scope: !8935)
!8937 = !DILocation(line: 3146, column: 1, scope: !8935)
!8938 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !8818, file: !8818, line: 3163, type: !3220, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !807, retainedNodes: !2048)
!8939 = !DILocation(line: 3165, column: 11, scope: !8938)
!8940 = !DILocation(line: 3165, column: 46, scope: !8938)
!8941 = !DILocation(line: 3165, column: 3, scope: !8938)
!8942 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !8943, file: !8943, line: 40, type: !3220, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2750, retainedNodes: !2048)
!8943 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8944 = !DILocation(line: 45, column: 3, scope: !8945)
!8945 = distinct !DILexicalBlock(scope: !8946, file: !8943, line: 44, column: 44)
!8946 = distinct !DILexicalBlock(scope: !8947, file: !8943, line: 44, column: 13)
!8947 = distinct !DILexicalBlock(scope: !8942, file: !8943, line: 42, column: 6)
!8948 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !8943, file: !8943, line: 56, type: !2982, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2750, retainedNodes: !2048)
!8949 = !DILocation(line: 58, column: 2, scope: !8948)
!8950 = !DILocation(line: 62, column: 1, scope: !8948)
!8951 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8818, file: !8818, line: 4304, type: !8952, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2750, retainedNodes: !8954)
!8952 = !DISubroutineType(types: !8953)
!8953 = !{null, !118, !118, !118, !118}
!8954 = !{!8955, !8956, !8957, !8958}
!8955 = !DILocalVariable(name: "Source", arg: 1, scope: !8951, file: !8818, line: 4304, type: !118)
!8956 = !DILocalVariable(name: "PLLM", arg: 2, scope: !8951, file: !8818, line: 4304, type: !118)
!8957 = !DILocalVariable(name: "PLLN", arg: 3, scope: !8951, file: !8818, line: 4304, type: !118)
!8958 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !8951, file: !8818, line: 4304, type: !118)
!8959 = !DILocation(line: 0, scope: !8951)
!8960 = !DILocation(line: 4306, column: 3, scope: !8951)
!8961 = !DILocation(line: 4308, column: 3, scope: !8951)
!8962 = !DILocation(line: 4312, column: 1, scope: !8951)
!8963 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !8943, file: !8943, line: 69, type: !2982, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2750, retainedNodes: !2048)
!8964 = !DILocation(line: 72, column: 2, scope: !8963)
!8965 = !DILocation(line: 73, column: 1, scope: !8963)
!8966 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !8967, file: !8967, line: 1185, type: !6429, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2750, retainedNodes: !8968)
!8967 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8968 = !{!8969, !8970}
!8969 = !DILocalVariable(name: "Periphs", arg: 1, scope: !8966, file: !8967, line: 1185, type: !118)
!8970 = !DILocalVariable(name: "tmpreg", scope: !8966, file: !8967, line: 1187, type: !314)
!8971 = !DILocation(line: 0, scope: !8966)
!8972 = !DILocation(line: 1187, column: 3, scope: !8966)
!8973 = !DILocation(line: 1187, column: 17, scope: !8966)
!8974 = !DILocation(line: 1188, column: 3, scope: !8966)
!8975 = !DILocation(line: 1190, column: 12, scope: !8966)
!8976 = !DILocation(line: 1190, column: 10, scope: !8966)
!8977 = !DILocation(line: 1191, column: 9, scope: !8966)
!8978 = !DILocation(line: 1192, column: 1, scope: !8966)
!8979 = distinct !DISubprogram(name: "uart_console_init", scope: !1002, file: !1002, line: 588, type: !979, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !945, retainedNodes: !8980)
!8980 = !{!8981}
!8981 = !DILocalVariable(name: "arg", arg: 1, scope: !8979, file: !1002, line: 588, type: !957)
!8982 = !DILocation(line: 0, scope: !8979)
!8983 = !DILocation(line: 593, column: 7, scope: !8984)
!8984 = distinct !DILexicalBlock(scope: !8979, file: !1002, line: 593, column: 6)
!8985 = !DILocation(line: 593, column: 6, scope: !8979)
!8986 = !DILocation(line: 597, column: 2, scope: !8979)
!8987 = !DILocation(line: 599, column: 2, scope: !8979)
!8988 = !DILocation(line: 600, column: 1, scope: !8979)
!8989 = distinct !DISubprogram(name: "device_is_ready", scope: !8990, file: !8990, line: 47, type: !8991, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !945, retainedNodes: !8993)
!8990 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pi")
!8991 = !DISubroutineType(types: !8992)
!8992 = !{!345, !957}
!8993 = !{!8994}
!8994 = !DILocalVariable(name: "dev", arg: 1, scope: !8989, file: !8990, line: 47, type: !957)
!8995 = !DILocation(line: 0, scope: !8989)
!8996 = !DILocation(line: 55, column: 2, scope: !8997)
!8997 = distinct !DILexicalBlock(scope: !8989, file: !8990, line: 55, column: 2)
!8998 = !{i64 2154376072}
!8999 = !DILocation(line: 56, column: 9, scope: !8989)
!9000 = !DILocation(line: 56, column: 2, scope: !8989)
!9001 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1002, file: !1002, line: 573, type: !2982, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !945, retainedNodes: !2048)
!9002 = !DILocation(line: 576, column: 2, scope: !9001)
!9003 = !DILocation(line: 579, column: 2, scope: !9001)
!9004 = !DILocation(line: 581, column: 1, scope: !9001)
!9005 = distinct !DISubprogram(name: "console_out", scope: !1002, file: !1002, line: 77, type: !301, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !945, retainedNodes: !9006)
!9006 = !{!9007}
!9007 = !DILocalVariable(name: "c", arg: 1, scope: !9005, file: !1002, line: 77, type: !119)
!9008 = !DILocation(line: 0, scope: !9005)
!9009 = !DILocation(line: 89, column: 11, scope: !9010)
!9010 = distinct !DILexicalBlock(scope: !9005, file: !1002, line: 89, column: 6)
!9011 = !DILocation(line: 89, column: 6, scope: !9005)
!9012 = !DILocation(line: 90, column: 3, scope: !9013)
!9013 = distinct !DILexicalBlock(scope: !9010, file: !1002, line: 89, column: 17)
!9014 = !DILocation(line: 91, column: 2, scope: !9013)
!9015 = !DILocation(line: 92, column: 34, scope: !9005)
!9016 = !DILocation(line: 92, column: 2, scope: !9005)
!9017 = !DILocation(line: 94, column: 2, scope: !9005)
!9018 = distinct !DISubprogram(name: "uart_poll_out", scope: !9019, file: !9019, line: 95, type: !975, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !945, retainedNodes: !9020)
!9019 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/pi")
!9020 = !{!9021, !9022}
!9021 = !DILocalVariable(name: "dev", arg: 1, scope: !9018, file: !9019, line: 95, type: !957)
!9022 = !DILocalVariable(name: "out_char", arg: 2, scope: !9018, file: !9019, line: 95, type: !186)
!9023 = !DILocation(line: 0, scope: !9018)
!9024 = !DILocation(line: 105, column: 2, scope: !9025)
!9025 = distinct !DILexicalBlock(scope: !9018, file: !9019, line: 105, column: 2)
!9026 = !{i64 2154459463}
!9027 = !DILocation(line: 106, column: 2, scope: !9018)
!9028 = !DILocation(line: 107, column: 1, scope: !9018)
!9029 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !951, file: !951, line: 574, type: !975, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !945, retainedNodes: !9030)
!9030 = !{!9031, !9032, !9033}
!9031 = !DILocalVariable(name: "dev", arg: 1, scope: !9029, file: !951, line: 574, type: !957)
!9032 = !DILocalVariable(name: "out_char", arg: 2, scope: !9029, file: !951, line: 575, type: !186)
!9033 = !DILocalVariable(name: "api", scope: !9029, file: !951, line: 577, type: !948)
!9034 = !DILocation(line: 0, scope: !9029)
!9035 = !DILocation(line: 578, column: 40, scope: !9029)
!9036 = !DILocation(line: 580, column: 7, scope: !9029)
!9037 = !DILocation(line: 580, column: 2, scope: !9029)
!9038 = !DILocation(line: 581, column: 1, scope: !9029)
!9039 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !334, file: !334, line: 730, type: !8991, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !945, retainedNodes: !9040)
!9040 = !{!9041}
!9041 = !DILocalVariable(name: "dev", arg: 1, scope: !9039, file: !334, line: 730, type: !957)
!9042 = !DILocation(line: 0, scope: !9039)
!9043 = !DILocation(line: 732, column: 9, scope: !9039)
!9044 = !DILocation(line: 732, column: 2, scope: !9039)
!9045 = distinct !DISubprogram(name: "uart_register_input", scope: !1002, file: !1002, line: 560, type: !9046, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !945, retainedNodes: !9093)
!9046 = !DISubroutineType(types: !9047)
!9047 = !{null, !9048, !9048, !9090}
!9048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9049, size: 32)
!9049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !245, line: 2208, size: 160, elements: !9050)
!9050 = !{!9051}
!9051 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !9049, file: !245, line: 2209, baseType: !9052, size: 160)
!9052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !245, line: 1709, size: 160, elements: !9053)
!9053 = !{!9054, !9067, !9071}
!9054 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !9052, file: !245, line: 1710, baseType: !9055, size: 64)
!9055 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !9056, line: 46, baseType: !9057)
!9056 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !9056, line: 41, size: 64, elements: !9058)
!9058 = !{!9059, !9066}
!9059 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9057, file: !9056, line: 42, baseType: !9060, size: 32)
!9060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9061, size: 32)
!9061 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !9056, line: 39, baseType: !9062)
!9062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !9056, line: 35, size: 32, elements: !9063)
!9063 = !{!9064}
!9064 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !9062, file: !9056, line: 36, baseType: !9065, size: 32)
!9065 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !9056, line: 32, baseType: !118)
!9066 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9057, file: !9056, line: 43, baseType: !9060, size: 32, offset: 32)
!9067 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9052, file: !245, line: 1711, baseType: !9068, size: 32, offset: 64)
!9068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !9069)
!9069 = !{!9070}
!9070 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !9068, file: !259, line: 52, baseType: !22, size: 32)
!9071 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9052, file: !245, line: 1712, baseType: !9072, size: 64, offset: 96)
!9072 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !179, line: 233, baseType: !9073)
!9073 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !179, line: 231, size: 64, elements: !9074)
!9074 = !{!9075}
!9075 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !9073, file: !179, line: 232, baseType: !9076, size: 64)
!9076 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !153, line: 48, baseType: !9077)
!9077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !153, line: 37, size: 64, elements: !9078)
!9078 = !{!9079, !9085}
!9079 = !DIDerivedType(tag: DW_TAG_member, scope: !9077, file: !153, line: 38, baseType: !9080, size: 32)
!9080 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9077, file: !153, line: 38, size: 32, elements: !9081)
!9081 = !{!9082, !9084}
!9082 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9080, file: !153, line: 39, baseType: !9083, size: 32)
!9083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9077, size: 32)
!9084 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9080, file: !153, line: 40, baseType: !9083, size: 32)
!9085 = !DIDerivedType(tag: DW_TAG_member, scope: !9077, file: !153, line: 42, baseType: !9086, size: 32, offset: 32)
!9086 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9077, file: !153, line: 42, size: 32, elements: !9087)
!9087 = !{!9088, !9089}
!9088 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9086, file: !153, line: 43, baseType: !9083, size: 32)
!9089 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9086, file: !153, line: 44, baseType: !9083, size: 32)
!9090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9091, size: 32)
!9091 = !DISubroutineType(types: !9092)
!9092 = !{!185, !106, !185}
!9093 = !{!9094, !9095, !9096}
!9094 = !DILocalVariable(name: "avail", arg: 1, scope: !9045, file: !1002, line: 560, type: !9048)
!9095 = !DILocalVariable(name: "lines", arg: 2, scope: !9045, file: !1002, line: 560, type: !9048)
!9096 = !DILocalVariable(name: "completion", arg: 3, scope: !9045, file: !1002, line: 561, type: !9090)
!9097 = !DILocation(line: 0, scope: !9045)
!9098 = !DILocation(line: 566, column: 1, scope: !9045)
!9099 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1180, file: !1180, line: 523, type: !1038, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9100)
!9100 = !{!9101, !9102, !9103, !9104, !9105}
!9101 = !DILocalVariable(name: "dev", arg: 1, scope: !9099, file: !1180, line: 523, type: !1040)
!9102 = !DILocalVariable(name: "pin", arg: 2, scope: !9099, file: !1180, line: 524, type: !1055)
!9103 = !DILocalVariable(name: "flags", arg: 3, scope: !9099, file: !1180, line: 524, type: !1056)
!9104 = !DILocalVariable(name: "err", scope: !9099, file: !1180, line: 526, type: !119)
!9105 = !DILocalVariable(name: "pincfg", scope: !9099, file: !1180, line: 527, type: !119)
!9106 = !DILocation(line: 0, scope: !9099)
!9107 = !DILocation(line: 527, column: 2, scope: !9099)
!9108 = !DILocation(line: 532, column: 8, scope: !9099)
!9109 = !DILocation(line: 533, column: 10, scope: !9110)
!9110 = distinct !DILexicalBlock(scope: !9099, file: !1180, line: 533, column: 6)
!9111 = !DILocation(line: 533, column: 6, scope: !9099)
!9112 = !DILocation(line: 543, column: 13, scope: !9113)
!9113 = distinct !DILexicalBlock(scope: !9099, file: !1180, line: 543, column: 6)
!9114 = !DILocation(line: 543, column: 28, scope: !9113)
!9115 = !DILocation(line: 543, column: 6, scope: !9099)
!9116 = !DILocation(line: 544, column: 14, scope: !9117)
!9117 = distinct !DILexicalBlock(scope: !9118, file: !1180, line: 544, column: 7)
!9118 = distinct !DILexicalBlock(scope: !9113, file: !1180, line: 543, column: 34)
!9119 = !DILocation(line: 544, column: 39, scope: !9117)
!9120 = !DILocation(line: 544, column: 7, scope: !9118)
!9121 = !DILocation(line: 545, column: 38, scope: !9122)
!9122 = distinct !DILexicalBlock(scope: !9117, file: !1180, line: 544, column: 45)
!9123 = !DILocation(line: 545, column: 4, scope: !9122)
!9124 = !DILocation(line: 546, column: 3, scope: !9122)
!9125 = !DILocation(line: 546, column: 21, scope: !9126)
!9126 = distinct !DILexicalBlock(scope: !9117, file: !1180, line: 546, column: 14)
!9127 = !DILocation(line: 546, column: 45, scope: !9126)
!9128 = !DILocation(line: 546, column: 14, scope: !9117)
!9129 = !DILocation(line: 547, column: 40, scope: !9130)
!9130 = distinct !DILexicalBlock(scope: !9126, file: !1180, line: 546, column: 51)
!9131 = !DILocation(line: 547, column: 4, scope: !9130)
!9132 = !DILocation(line: 548, column: 3, scope: !9130)
!9133 = !DILocation(line: 551, column: 32, scope: !9099)
!9134 = !DILocation(line: 551, column: 37, scope: !9099)
!9135 = !DILocation(line: 551, column: 2, scope: !9099)
!9136 = !DILocation(line: 554, column: 6, scope: !9099)
!9137 = !DILocation(line: 562, column: 1, scope: !9099)
!9138 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1180, file: !1180, line: 410, type: !9139, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9141)
!9139 = !DISubroutineType(types: !9140)
!9140 = !{!119, !1040, !867}
!9141 = !{!9142, !9143, !9144, !9146}
!9142 = !DILocalVariable(name: "dev", arg: 1, scope: !9138, file: !1180, line: 410, type: !1040)
!9143 = !DILocalVariable(name: "value", arg: 2, scope: !9138, file: !1180, line: 410, type: !867)
!9144 = !DILocalVariable(name: "cfg", scope: !9138, file: !1180, line: 412, type: !9145)
!9145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1292, size: 32)
!9146 = !DILocalVariable(name: "gpio", scope: !9138, file: !1180, line: 413, type: !1113)
!9147 = !DILocation(line: 0, scope: !9138)
!9148 = !DILocation(line: 412, column: 45, scope: !9138)
!9149 = !DILocation(line: 413, column: 44, scope: !9138)
!9150 = !DILocation(line: 415, column: 11, scope: !9138)
!9151 = !DILocation(line: 415, column: 9, scope: !9138)
!9152 = !DILocation(line: 417, column: 2, scope: !9138)
!9153 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1180, file: !1180, line: 420, type: !1065, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9154)
!9154 = !{!9155, !9156, !9157, !9158, !9159, !9160}
!9155 = !DILocalVariable(name: "dev", arg: 1, scope: !9153, file: !1180, line: 420, type: !1040)
!9156 = !DILocalVariable(name: "mask", arg: 2, scope: !9153, file: !1180, line: 421, type: !1067)
!9157 = !DILocalVariable(name: "value", arg: 3, scope: !9153, file: !1180, line: 422, type: !1062)
!9158 = !DILocalVariable(name: "cfg", scope: !9153, file: !1180, line: 424, type: !9145)
!9159 = !DILocalVariable(name: "gpio", scope: !9153, file: !1180, line: 425, type: !1113)
!9160 = !DILocalVariable(name: "port_value", scope: !9153, file: !1180, line: 426, type: !118)
!9161 = !DILocation(line: 0, scope: !9153)
!9162 = !DILocation(line: 424, column: 45, scope: !9153)
!9163 = !DILocation(line: 425, column: 44, scope: !9153)
!9164 = !DILocation(line: 430, column: 15, scope: !9153)
!9165 = !DILocation(line: 431, column: 46, scope: !9153)
!9166 = !DILocation(line: 431, column: 44, scope: !9153)
!9167 = !DILocation(line: 431, column: 61, scope: !9153)
!9168 = !DILocation(line: 431, column: 53, scope: !9153)
!9169 = !DILocation(line: 431, column: 2, scope: !9153)
!9170 = !DILocation(line: 435, column: 2, scope: !9153)
!9171 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1180, file: !1180, line: 438, type: !1070, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9172)
!9172 = !{!9173, !9174, !9175, !9176}
!9173 = !DILocalVariable(name: "dev", arg: 1, scope: !9171, file: !1180, line: 438, type: !1040)
!9174 = !DILocalVariable(name: "pins", arg: 2, scope: !9171, file: !1180, line: 439, type: !1067)
!9175 = !DILocalVariable(name: "cfg", scope: !9171, file: !1180, line: 441, type: !9145)
!9176 = !DILocalVariable(name: "gpio", scope: !9171, file: !1180, line: 442, type: !1113)
!9177 = !DILocation(line: 0, scope: !9171)
!9178 = !DILocation(line: 441, column: 45, scope: !9171)
!9179 = !DILocation(line: 442, column: 44, scope: !9171)
!9180 = !DILocation(line: 448, column: 2, scope: !9171)
!9181 = !DILocation(line: 450, column: 2, scope: !9171)
!9182 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1180, file: !1180, line: 453, type: !1070, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9183)
!9183 = !{!9184, !9185, !9186, !9187}
!9184 = !DILocalVariable(name: "dev", arg: 1, scope: !9182, file: !1180, line: 453, type: !1040)
!9185 = !DILocalVariable(name: "pins", arg: 2, scope: !9182, file: !1180, line: 454, type: !1067)
!9186 = !DILocalVariable(name: "cfg", scope: !9182, file: !1180, line: 456, type: !9145)
!9187 = !DILocalVariable(name: "gpio", scope: !9182, file: !1180, line: 457, type: !1113)
!9188 = !DILocation(line: 0, scope: !9182)
!9189 = !DILocation(line: 456, column: 45, scope: !9182)
!9190 = !DILocation(line: 457, column: 44, scope: !9182)
!9191 = !DILocation(line: 467, column: 2, scope: !9182)
!9192 = !DILocation(line: 470, column: 2, scope: !9182)
!9193 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1180, file: !1180, line: 473, type: !1070, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9194)
!9194 = !{!9195, !9196, !9197, !9198}
!9195 = !DILocalVariable(name: "dev", arg: 1, scope: !9193, file: !1180, line: 473, type: !1040)
!9196 = !DILocalVariable(name: "pins", arg: 2, scope: !9193, file: !1180, line: 474, type: !1067)
!9197 = !DILocalVariable(name: "cfg", scope: !9193, file: !1180, line: 476, type: !9145)
!9198 = !DILocalVariable(name: "gpio", scope: !9193, file: !1180, line: 477, type: !1113)
!9199 = !DILocation(line: 0, scope: !9193)
!9200 = !DILocation(line: 476, column: 45, scope: !9193)
!9201 = !DILocation(line: 477, column: 44, scope: !9193)
!9202 = !DILocation(line: 484, column: 2, scope: !9193)
!9203 = !DILocation(line: 487, column: 2, scope: !9193)
!9204 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1180, file: !1180, line: 594, type: !1076, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9205)
!9205 = !{!9206, !9207, !9208, !9209, !9210, !9211, !9213, !9214, !9215}
!9206 = !DILocalVariable(name: "dev", arg: 1, scope: !9204, file: !1180, line: 594, type: !1040)
!9207 = !DILocalVariable(name: "pin", arg: 2, scope: !9204, file: !1180, line: 595, type: !1055)
!9208 = !DILocalVariable(name: "mode", arg: 3, scope: !9204, file: !1180, line: 596, type: !1014)
!9209 = !DILocalVariable(name: "trig", arg: 4, scope: !9204, file: !1180, line: 597, type: !1020)
!9210 = !DILocalVariable(name: "cfg", scope: !9204, file: !1180, line: 599, type: !9145)
!9211 = !DILocalVariable(name: "data", scope: !9204, file: !1180, line: 600, type: !9212)
!9212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1246, size: 32)
!9213 = !DILocalVariable(name: "edge", scope: !9204, file: !1180, line: 601, type: !119)
!9214 = !DILocalVariable(name: "err", scope: !9204, file: !1180, line: 602, type: !119)
!9215 = !DILabel(scope: !9204, name: "exit", file: !1180, line: 643)
!9216 = !DILocation(line: 0, scope: !9204)
!9217 = !DILocation(line: 599, column: 45, scope: !9204)
!9218 = !DILocation(line: 604, column: 6, scope: !9204)
!9219 = !DILocation(line: 605, column: 34, scope: !9220)
!9220 = distinct !DILexicalBlock(scope: !9221, file: !1180, line: 605, column: 7)
!9221 = distinct !DILexicalBlock(scope: !9222, file: !1180, line: 604, column: 38)
!9222 = distinct !DILexicalBlock(scope: !9204, file: !1180, line: 604, column: 6)
!9223 = !DILocation(line: 605, column: 7, scope: !9220)
!9224 = !DILocation(line: 605, column: 47, scope: !9220)
!9225 = !DILocation(line: 605, column: 39, scope: !9220)
!9226 = !DILocation(line: 605, column: 7, scope: !9221)
!9227 = !DILocation(line: 606, column: 4, scope: !9228)
!9228 = distinct !DILexicalBlock(scope: !9220, file: !1180, line: 605, column: 53)
!9229 = !DILocation(line: 607, column: 4, scope: !9228)
!9230 = !DILocation(line: 608, column: 4, scope: !9228)
!9231 = !DILocation(line: 609, column: 3, scope: !9228)
!9232 = !DILocation(line: 600, column: 38, scope: !9204)
!9233 = !DILocation(line: 620, column: 30, scope: !9234)
!9234 = distinct !DILexicalBlock(scope: !9204, file: !1180, line: 620, column: 6)
!9235 = !DILocation(line: 620, column: 6, scope: !9234)
!9236 = !DILocation(line: 620, column: 57, scope: !9234)
!9237 = !DILocation(line: 620, column: 6, scope: !9204)
!9238 = !DILocation(line: 625, column: 29, scope: !9204)
!9239 = !DILocation(line: 625, column: 2, scope: !9204)
!9240 = !DILocation(line: 627, column: 2, scope: !9204)
!9241 = !DILocation(line: 630, column: 3, scope: !9242)
!9242 = distinct !DILexicalBlock(scope: !9204, file: !1180, line: 627, column: 16)
!9243 = !DILocation(line: 633, column: 3, scope: !9242)
!9244 = !DILocation(line: 636, column: 3, scope: !9242)
!9245 = !DILocation(line: 639, column: 2, scope: !9204)
!9246 = !DILocation(line: 641, column: 2, scope: !9204)
!9247 = !DILocation(line: 643, column: 1, scope: !9204)
!9248 = !DILocation(line: 644, column: 2, scope: !9204)
!9249 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1180, file: !1180, line: 647, type: !1080, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9250)
!9250 = !{!9251, !9252, !9253, !9254}
!9251 = !DILocalVariable(name: "dev", arg: 1, scope: !9249, file: !1180, line: 647, type: !1040)
!9252 = !DILocalVariable(name: "callback", arg: 2, scope: !9249, file: !1180, line: 648, type: !1082)
!9253 = !DILocalVariable(name: "set", arg: 3, scope: !9249, file: !1180, line: 649, type: !345)
!9254 = !DILocalVariable(name: "data", scope: !9249, file: !1180, line: 651, type: !9212)
!9255 = !DILocation(line: 0, scope: !9249)
!9256 = !DILocation(line: 651, column: 38, scope: !9249)
!9257 = !DILocation(line: 653, column: 37, scope: !9249)
!9258 = !DILocation(line: 653, column: 9, scope: !9249)
!9259 = !DILocation(line: 653, column: 2, scope: !9249)
!9260 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !9261, file: !9261, line: 38, type: !9262, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9265)
!9261 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9262 = !DISubroutineType(types: !9263)
!9263 = !{!119, !9264, !1082, !345}
!9264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1252, size: 32)
!9265 = !{!9266, !9267, !9268}
!9266 = !DILocalVariable(name: "callbacks", arg: 1, scope: !9260, file: !9261, line: 38, type: !9264)
!9267 = !DILocalVariable(name: "callback", arg: 2, scope: !9260, file: !9261, line: 39, type: !1082)
!9268 = !DILocalVariable(name: "set", arg: 3, scope: !9260, file: !9261, line: 40, type: !345)
!9269 = !DILocation(line: 0, scope: !9260)
!9270 = !DILocation(line: 42, column: 2, scope: !9271)
!9271 = distinct !DILexicalBlock(scope: !9272, file: !9261, line: 42, column: 2)
!9272 = distinct !DILexicalBlock(scope: !9260, file: !9261, line: 42, column: 2)
!9273 = !DILocation(line: 42, column: 2, scope: !9272)
!9274 = !DILocation(line: 42, column: 2, scope: !9275)
!9275 = distinct !DILexicalBlock(scope: !9271, file: !9261, line: 42, column: 2)
!9276 = !DILocation(line: 43, column: 2, scope: !9277)
!9277 = distinct !DILexicalBlock(scope: !9278, file: !9261, line: 43, column: 2)
!9278 = distinct !DILexicalBlock(scope: !9260, file: !9261, line: 43, column: 2)
!9279 = !DILocation(line: 43, column: 2, scope: !9278)
!9280 = !DILocation(line: 43, column: 2, scope: !9281)
!9281 = distinct !DILexicalBlock(scope: !9277, file: !9261, line: 43, column: 2)
!9282 = !DILocation(line: 45, column: 7, scope: !9283)
!9283 = distinct !DILexicalBlock(scope: !9260, file: !9261, line: 45, column: 6)
!9284 = !DILocation(line: 45, column: 6, scope: !9260)
!9285 = !DILocation(line: 46, column: 56, scope: !9286)
!9286 = distinct !DILexicalBlock(scope: !9287, file: !9261, line: 46, column: 7)
!9287 = distinct !DILexicalBlock(scope: !9283, file: !9261, line: 45, column: 38)
!9288 = !DILocation(line: 46, column: 8, scope: !9286)
!9289 = !DILocation(line: 46, column: 7, scope: !9287)
!9290 = !DILocation(line: 51, column: 13, scope: !9283)
!9291 = !DILocation(line: 56, column: 43, scope: !9292)
!9292 = distinct !DILexicalBlock(scope: !9293, file: !9261, line: 55, column: 11)
!9293 = distinct !DILexicalBlock(scope: !9260, file: !9261, line: 55, column: 6)
!9294 = !DILocation(line: 56, column: 3, scope: !9292)
!9295 = !DILocation(line: 57, column: 2, scope: !9292)
!9296 = !DILocation(line: 60, column: 1, scope: !9260)
!9297 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1087, file: !1087, line: 261, type: !9298, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9300)
!9298 = !DISubroutineType(types: !9299)
!9299 = !{!345, !9264}
!9300 = !{!9301}
!9301 = !DILocalVariable(name: "list", arg: 1, scope: !9297, file: !1087, line: 261, type: !9264)
!9302 = !DILocation(line: 0, scope: !9297)
!9303 = !DILocation(line: 261, column: 1, scope: !9297)
!9304 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1087, file: !1087, line: 417, type: !9305, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9307)
!9305 = !DISubroutineType(types: !9306)
!9306 = !{!345, !9264, !1256}
!9307 = !{!9308, !9309, !9310, !9311}
!9308 = !DILocalVariable(name: "list", arg: 1, scope: !9304, file: !1087, line: 417, type: !9264)
!9309 = !DILocalVariable(name: "node", arg: 2, scope: !9304, file: !1087, line: 417, type: !1256)
!9310 = !DILocalVariable(name: "prev", scope: !9304, file: !1087, line: 417, type: !1256)
!9311 = !DILocalVariable(name: "test", scope: !9304, file: !1087, line: 417, type: !1256)
!9312 = !DILocation(line: 0, scope: !9304)
!9313 = !DILocation(line: 417, column: 1, scope: !9314)
!9314 = distinct !DILexicalBlock(scope: !9304, file: !1087, line: 417, column: 1)
!9315 = !DILocation(line: 417, column: 1, scope: !9316)
!9316 = distinct !DILexicalBlock(scope: !9314, file: !1087, line: 417, column: 1)
!9317 = !DILocation(line: 417, column: 1, scope: !9318)
!9318 = distinct !DILexicalBlock(scope: !9319, file: !1087, line: 417, column: 1)
!9319 = distinct !DILexicalBlock(scope: !9316, file: !1087, line: 417, column: 1)
!9320 = !DILocation(line: 417, column: 1, scope: !9319)
!9321 = distinct !{!9321, !9313, !9313}
!9322 = !DILocation(line: 417, column: 1, scope: !9323)
!9323 = distinct !DILexicalBlock(scope: !9318, file: !1087, line: 417, column: 1)
!9324 = !DILocation(line: 417, column: 1, scope: !9304)
!9325 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1087, file: !1087, line: 298, type: !9326, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9328)
!9326 = !DISubroutineType(types: !9327)
!9327 = !{null, !9264, !1256}
!9328 = !{!9329, !9330}
!9329 = !DILocalVariable(name: "list", arg: 1, scope: !9325, file: !1087, line: 298, type: !9264)
!9330 = !DILocalVariable(name: "node", arg: 2, scope: !9325, file: !1087, line: 298, type: !1256)
!9331 = !DILocation(line: 0, scope: !9325)
!9332 = !DILocation(line: 298, column: 1, scope: !9325)
!9333 = !DILocation(line: 298, column: 1, scope: !9334)
!9334 = distinct !DILexicalBlock(scope: !9325, file: !1087, line: 298, column: 1)
!9335 = !DILocation(line: 298, column: 1, scope: !9336)
!9336 = distinct !DILexicalBlock(scope: !9334, file: !1087, line: 298, column: 1)
!9337 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1087, file: !1087, line: 231, type: !9338, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9340)
!9338 = !DISubroutineType(types: !9339)
!9339 = !{!1256, !9264}
!9340 = !{!9341}
!9341 = !DILocalVariable(name: "list", arg: 1, scope: !9337, file: !1087, line: 231, type: !9264)
!9342 = !DILocation(line: 0, scope: !9337)
!9343 = !DILocation(line: 233, column: 15, scope: !9337)
!9344 = !DILocation(line: 233, column: 2, scope: !9337)
!9345 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1087, file: !1087, line: 209, type: !9346, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9348)
!9346 = !DISubroutineType(types: !9347)
!9347 = !{null, !1256, !1256}
!9348 = !{!9349, !9350}
!9349 = !DILocalVariable(name: "parent", arg: 1, scope: !9345, file: !1087, line: 209, type: !1256)
!9350 = !DILocalVariable(name: "child", arg: 2, scope: !9345, file: !1087, line: 209, type: !1256)
!9351 = !DILocation(line: 0, scope: !9345)
!9352 = !DILocation(line: 211, column: 10, scope: !9345)
!9353 = !DILocation(line: 211, column: 15, scope: !9345)
!9354 = !DILocation(line: 212, column: 1, scope: !9345)
!9355 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1087, file: !1087, line: 214, type: !9326, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9356)
!9356 = !{!9357, !9358}
!9357 = !DILocalVariable(name: "list", arg: 1, scope: !9355, file: !1087, line: 214, type: !9264)
!9358 = !DILocalVariable(name: "node", arg: 2, scope: !9355, file: !1087, line: 214, type: !1256)
!9359 = !DILocation(line: 0, scope: !9355)
!9360 = !DILocation(line: 216, column: 8, scope: !9355)
!9361 = !DILocation(line: 216, column: 13, scope: !9355)
!9362 = !DILocation(line: 217, column: 1, scope: !9355)
!9363 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1087, file: !1087, line: 243, type: !9338, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9364)
!9364 = !{!9365}
!9365 = !DILocalVariable(name: "list", arg: 1, scope: !9363, file: !1087, line: 243, type: !9264)
!9366 = !DILocation(line: 0, scope: !9363)
!9367 = !DILocation(line: 245, column: 15, scope: !9363)
!9368 = !DILocation(line: 245, column: 2, scope: !9363)
!9369 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1087, file: !1087, line: 219, type: !9326, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9370)
!9370 = !{!9371, !9372}
!9371 = !DILocalVariable(name: "list", arg: 1, scope: !9369, file: !1087, line: 219, type: !9264)
!9372 = !DILocalVariable(name: "node", arg: 2, scope: !9369, file: !1087, line: 219, type: !1256)
!9373 = !DILocation(line: 0, scope: !9369)
!9374 = !DILocation(line: 221, column: 8, scope: !9369)
!9375 = !DILocation(line: 221, column: 13, scope: !9369)
!9376 = !DILocation(line: 222, column: 1, scope: !9369)
!9377 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1087, file: !1087, line: 401, type: !9378, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9380)
!9378 = !DISubroutineType(types: !9379)
!9379 = !{null, !9264, !1256, !1256}
!9380 = !{!9381, !9382, !9383}
!9381 = !DILocalVariable(name: "list", arg: 1, scope: !9377, file: !1087, line: 401, type: !9264)
!9382 = !DILocalVariable(name: "prev_node", arg: 2, scope: !9377, file: !1087, line: 401, type: !1256)
!9383 = !DILocalVariable(name: "node", arg: 3, scope: !9377, file: !1087, line: 401, type: !1256)
!9384 = !DILocation(line: 0, scope: !9377)
!9385 = !DILocation(line: 401, column: 1, scope: !9386)
!9386 = distinct !DILexicalBlock(scope: !9377, file: !1087, line: 401, column: 1)
!9387 = !DILocation(line: 0, scope: !9386)
!9388 = !DILocation(line: 401, column: 1, scope: !9377)
!9389 = !DILocation(line: 401, column: 1, scope: !9390)
!9390 = distinct !DILexicalBlock(scope: !9386, file: !1087, line: 401, column: 1)
!9391 = !DILocation(line: 401, column: 1, scope: !9392)
!9392 = distinct !DILexicalBlock(scope: !9390, file: !1087, line: 401, column: 1)
!9393 = !DILocation(line: 401, column: 1, scope: !9394)
!9394 = distinct !DILexicalBlock(scope: !9392, file: !1087, line: 401, column: 1)
!9395 = !DILocation(line: 401, column: 1, scope: !9396)
!9396 = distinct !DILexicalBlock(scope: !9386, file: !1087, line: 401, column: 1)
!9397 = !DILocation(line: 401, column: 1, scope: !9398)
!9398 = distinct !DILexicalBlock(scope: !9396, file: !1087, line: 401, column: 1)
!9399 = !DILocation(line: 401, column: 1, scope: !9400)
!9400 = distinct !DILexicalBlock(scope: !9398, file: !1087, line: 401, column: 1)
!9401 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1087, file: !1087, line: 285, type: !9402, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9404)
!9402 = !DISubroutineType(types: !9403)
!9403 = !{!1256, !1256}
!9404 = !{!9405}
!9405 = !DILocalVariable(name: "node", arg: 1, scope: !9401, file: !1087, line: 285, type: !1256)
!9406 = !DILocation(line: 0, scope: !9401)
!9407 = !DILocation(line: 285, column: 1, scope: !9401)
!9408 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1087, file: !1087, line: 274, type: !9402, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9409)
!9409 = !{!9410}
!9410 = !DILocalVariable(name: "node", arg: 1, scope: !9408, file: !1087, line: 274, type: !1256)
!9411 = !DILocation(line: 0, scope: !9408)
!9412 = !DILocation(line: 274, column: 1, scope: !9408)
!9413 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1087, file: !1087, line: 204, type: !9402, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9414)
!9414 = !{!9415}
!9415 = !DILocalVariable(name: "node", arg: 1, scope: !9413, file: !1087, line: 204, type: !1256)
!9416 = !DILocation(line: 0, scope: !9413)
!9417 = !DILocation(line: 206, column: 15, scope: !9413)
!9418 = !DILocation(line: 206, column: 2, scope: !9413)
!9419 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1180, file: !1180, line: 342, type: !301, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9420)
!9420 = !{!9421, !9422, !9423}
!9421 = !DILocalVariable(name: "pin", arg: 1, scope: !9419, file: !1180, line: 342, type: !119)
!9422 = !DILocalVariable(name: "line", scope: !9419, file: !1180, line: 344, type: !118)
!9423 = !DILocalVariable(name: "port", scope: !9419, file: !1180, line: 345, type: !119)
!9424 = !DILocation(line: 0, scope: !9419)
!9425 = !DILocation(line: 344, column: 18, scope: !9419)
!9426 = !{i32 983040, i32 0}
!9427 = !DILocation(line: 356, column: 9, scope: !9419)
!9428 = !DILocation(line: 370, column: 2, scope: !9419)
!9429 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1180, file: !1180, line: 37, type: !725, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9430)
!9430 = !{!9431, !9432, !9433}
!9431 = !DILocalVariable(name: "line", arg: 1, scope: !9429, file: !1180, line: 37, type: !119)
!9432 = !DILocalVariable(name: "arg", arg: 2, scope: !9429, file: !1180, line: 37, type: !113)
!9433 = !DILocalVariable(name: "data", scope: !9429, file: !1180, line: 39, type: !9212)
!9434 = !DILocation(line: 0, scope: !9429)
!9435 = !DILocation(line: 41, column: 29, scope: !9429)
!9436 = !DILocation(line: 41, column: 39, scope: !9429)
!9437 = !DILocation(line: 41, column: 44, scope: !9429)
!9438 = !DILocation(line: 41, column: 2, scope: !9429)
!9439 = !DILocation(line: 42, column: 1, scope: !9429)
!9440 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1180, file: !1180, line: 376, type: !9441, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9443)
!9441 = !DISubroutineType(types: !9442)
!9442 = !{!119, !119, !119}
!9443 = !{!9444, !9445, !9446, !9448, !9449}
!9444 = !DILocalVariable(name: "port", arg: 1, scope: !9440, file: !1180, line: 376, type: !119)
!9445 = !DILocalVariable(name: "pin", arg: 2, scope: !9440, file: !1180, line: 376, type: !119)
!9446 = !DILocalVariable(name: "clk", scope: !9440, file: !1180, line: 386, type: !9447)
!9447 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1040)
!9448 = !DILocalVariable(name: "pclken", scope: !9440, file: !1180, line: 387, type: !1299)
!9449 = !DILocalVariable(name: "ret", scope: !9440, file: !1180, line: 396, type: !119)
!9450 = !DILocation(line: 0, scope: !9440)
!9451 = !DILocation(line: 387, column: 2, scope: !9440)
!9452 = !DILocation(line: 387, column: 22, scope: !9440)
!9453 = !DILocation(line: 399, column: 8, scope: !9440)
!9454 = !DILocation(line: 400, column: 10, scope: !9455)
!9455 = distinct !DILexicalBlock(scope: !9440, file: !1180, line: 400, column: 6)
!9456 = !DILocation(line: 400, column: 6, scope: !9440)
!9457 = !DILocation(line: 405, column: 2, scope: !9440)
!9458 = !DILocation(line: 407, column: 2, scope: !9440)
!9459 = !DILocation(line: 408, column: 1, scope: !9440)
!9460 = distinct !DISubprogram(name: "clock_control_on", scope: !816, file: !816, line: 123, type: !1145, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9461)
!9461 = !{!9462, !9463, !9464}
!9462 = !DILocalVariable(name: "dev", arg: 1, scope: !9460, file: !816, line: 123, type: !1040)
!9463 = !DILocalVariable(name: "sys", arg: 2, scope: !9460, file: !816, line: 124, type: !911)
!9464 = !DILocalVariable(name: "api", scope: !9460, file: !816, line: 126, type: !1138)
!9465 = !DILocation(line: 0, scope: !9460)
!9466 = !DILocation(line: 127, column: 49, scope: !9460)
!9467 = !DILocation(line: 129, column: 14, scope: !9460)
!9468 = !DILocation(line: 129, column: 9, scope: !9460)
!9469 = !DILocation(line: 129, column: 2, scope: !9460)
!9470 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1180, file: !1180, line: 311, type: !8575, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9471)
!9471 = !{!9472, !9473, !9474}
!9472 = !DILocalVariable(name: "port", arg: 1, scope: !9470, file: !1180, line: 311, type: !119)
!9473 = !DILocalVariable(name: "pin", arg: 2, scope: !9470, file: !1180, line: 311, type: !119)
!9474 = !DILocalVariable(name: "line", scope: !9470, file: !1180, line: 313, type: !118)
!9475 = !DILocation(line: 0, scope: !9470)
!9476 = !DILocation(line: 313, column: 18, scope: !9470)
!9477 = !DILocation(line: 337, column: 2, scope: !9470)
!9478 = !DILocation(line: 340, column: 1, scope: !9470)
!9479 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1180, file: !1180, line: 295, type: !9480, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9482)
!9480 = !DISubroutineType(types: !9481)
!9481 = !{!118, !119}
!9482 = !{!9483}
!9483 = !DILocalVariable(name: "pin", arg: 1, scope: !9479, file: !1180, line: 295, type: !119)
!9484 = !DILocation(line: 0, scope: !9479)
!9485 = !DILocation(line: 307, column: 46, scope: !9479)
!9486 = !DILocation(line: 307, column: 27, scope: !9479)
!9487 = !DILocation(line: 307, column: 32, scope: !9479)
!9488 = !DILocation(line: 307, column: 14, scope: !9479)
!9489 = !DILocation(line: 307, column: 39, scope: !9479)
!9490 = !DILocation(line: 307, column: 2, scope: !9479)
!9491 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !6034, file: !6034, line: 671, type: !9492, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9494)
!9492 = !DISubroutineType(types: !9493)
!9493 = !{null, !118, !118}
!9494 = !{!9495, !9496}
!9495 = !DILocalVariable(name: "Port", arg: 1, scope: !9491, file: !6034, line: 671, type: !118)
!9496 = !DILocalVariable(name: "Line", arg: 2, scope: !9491, file: !6034, line: 671, type: !118)
!9497 = !DILocation(line: 0, scope: !9491)
!9498 = !DILocation(line: 673, column: 3, scope: !9491)
!9499 = !DILocalVariable(name: "value", arg: 1, scope: !9500, file: !6334, line: 373, type: !118)
!9500 = distinct !DISubprogram(name: "__RBIT", scope: !6334, file: !6334, line: 373, type: !7619, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9501)
!9501 = !{!9499, !9502}
!9502 = !DILocalVariable(name: "result", scope: !9500, file: !6334, line: 375, type: !118)
!9503 = !DILocation(line: 0, scope: !9500, inlinedAt: !9504)
!9504 = distinct !DILocation(line: 673, column: 3, scope: !9491)
!9505 = !DILocation(line: 380, column: 4, scope: !9500, inlinedAt: !9504)
!9506 = !{i64 2921371}
!9507 = !DILocalVariable(name: "value", arg: 1, scope: !9508, file: !6334, line: 403, type: !118)
!9508 = distinct !DISubprogram(name: "__CLZ", scope: !6334, file: !6334, line: 403, type: !9509, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9511)
!9509 = !DISubroutineType(types: !9510)
!9510 = !{!185, !118}
!9511 = !{!9507}
!9512 = !DILocation(line: 0, scope: !9508, inlinedAt: !9513)
!9513 = distinct !DILocation(line: 673, column: 3, scope: !9491)
!9514 = !DILocation(line: 414, column: 7, scope: !9508, inlinedAt: !9513)
!9515 = !DILocation(line: 674, column: 1, scope: !9491)
!9516 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !9261, file: !9261, line: 69, type: !9517, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9519)
!9517 = !DISubroutineType(types: !9518)
!9518 = !{null, !9264, !1040, !118}
!9519 = !{!9520, !9521, !9522, !9523, !9524}
!9520 = !DILocalVariable(name: "list", arg: 1, scope: !9516, file: !9261, line: 69, type: !9264)
!9521 = !DILocalVariable(name: "port", arg: 2, scope: !9516, file: !9261, line: 70, type: !1040)
!9522 = !DILocalVariable(name: "pins", arg: 3, scope: !9516, file: !9261, line: 71, type: !118)
!9523 = !DILocalVariable(name: "cb", scope: !9516, file: !9261, line: 73, type: !1082)
!9524 = !DILocalVariable(name: "tmp", scope: !9516, file: !9261, line: 73, type: !1082)
!9525 = !DILocation(line: 0, scope: !9516)
!9526 = !DILocation(line: 75, column: 2, scope: !9527)
!9527 = distinct !DILexicalBlock(scope: !9516, file: !9261, line: 75, column: 2)
!9528 = !DILocation(line: 0, scope: !9527)
!9529 = !DILocation(line: 76, column: 11, scope: !9530)
!9530 = distinct !DILexicalBlock(scope: !9531, file: !9261, line: 76, column: 7)
!9531 = distinct !DILexicalBlock(scope: !9532, file: !9261, line: 75, column: 57)
!9532 = distinct !DILexicalBlock(scope: !9527, file: !9261, line: 75, column: 2)
!9533 = !DILocation(line: 76, column: 20, scope: !9530)
!9534 = !DILocation(line: 76, column: 7, scope: !9531)
!9535 = !DILocation(line: 77, column: 4, scope: !9536)
!9536 = distinct !DILexicalBlock(scope: !9537, file: !9261, line: 77, column: 4)
!9537 = distinct !DILexicalBlock(scope: !9538, file: !9261, line: 77, column: 4)
!9538 = distinct !DILexicalBlock(scope: !9530, file: !9261, line: 76, column: 28)
!9539 = !DILocation(line: 77, column: 4, scope: !9537)
!9540 = !DILocation(line: 77, column: 4, scope: !9541)
!9541 = distinct !DILexicalBlock(scope: !9536, file: !9261, line: 77, column: 4)
!9542 = !DILocation(line: 78, column: 4, scope: !9538)
!9543 = !DILocation(line: 79, column: 3, scope: !9538)
!9544 = !DILocation(line: 75, column: 2, scope: !9532)
!9545 = !DILocation(line: 81, column: 1, scope: !9516)
!9546 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !6034, file: !6034, line: 710, type: !7619, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9547)
!9547 = !{!9548}
!9548 = !DILocalVariable(name: "Line", arg: 1, scope: !9546, file: !6034, line: 710, type: !118)
!9549 = !DILocation(line: 0, scope: !9546)
!9550 = !DILocation(line: 712, column: 21, scope: !9546)
!9551 = !DILocation(line: 0, scope: !9500, inlinedAt: !9552)
!9552 = distinct !DILocation(line: 712, column: 76, scope: !9546)
!9553 = !DILocation(line: 380, column: 4, scope: !9500, inlinedAt: !9552)
!9554 = !DILocation(line: 0, scope: !9508, inlinedAt: !9555)
!9555 = distinct !DILocation(line: 712, column: 76, scope: !9546)
!9556 = !DILocation(line: 414, column: 7, scope: !9508, inlinedAt: !9555)
!9557 = !DILocation(line: 712, column: 73, scope: !9546)
!9558 = !DILocation(line: 712, column: 3, scope: !9546)
!9559 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !9560, file: !9560, line: 910, type: !9561, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9563)
!9560 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9561 = !DISubroutineType(types: !9562)
!9562 = !{null, !1113, !118}
!9563 = !{!9564, !9565}
!9564 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9559, file: !9560, line: 910, type: !1113)
!9565 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9559, file: !9560, line: 910, type: !118)
!9566 = !DILocation(line: 0, scope: !9559)
!9567 = !DILocation(line: 912, column: 3, scope: !9559)
!9568 = !DILocation(line: 913, column: 1, scope: !9559)
!9569 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !9560, file: !9560, line: 823, type: !9570, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9572)
!9570 = !DISubroutineType(types: !9571)
!9571 = !{!118, !1113}
!9572 = !{!9573}
!9573 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9569, file: !9560, line: 823, type: !1113)
!9574 = !DILocation(line: 0, scope: !9569)
!9575 = !DILocation(line: 825, column: 21, scope: !9569)
!9576 = !DILocation(line: 825, column: 3, scope: !9569)
!9577 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !9560, file: !9560, line: 812, type: !9561, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9578)
!9578 = !{!9579, !9580}
!9579 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9577, file: !9560, line: 812, type: !1113)
!9580 = !DILocalVariable(name: "PortValue", arg: 2, scope: !9577, file: !9560, line: 812, type: !118)
!9581 = !DILocation(line: 0, scope: !9577)
!9582 = !DILocation(line: 814, column: 3, scope: !9577)
!9583 = !DILocation(line: 815, column: 1, scope: !9577)
!9584 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !9560, file: !9560, line: 771, type: !9570, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9585)
!9585 = !{!9586}
!9586 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9584, file: !9560, line: 771, type: !1113)
!9587 = !DILocation(line: 0, scope: !9584)
!9588 = !DILocation(line: 773, column: 21, scope: !9584)
!9589 = !DILocation(line: 773, column: 3, scope: !9584)
!9590 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1180, file: !1180, line: 47, type: !9591, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9593)
!9591 = !DISubroutineType(types: !9592)
!9592 = !{!119, !1056, !280}
!9593 = !{!9594, !9595}
!9594 = !DILocalVariable(name: "flags", arg: 1, scope: !9590, file: !1180, line: 47, type: !1056)
!9595 = !DILocalVariable(name: "pincfg", arg: 2, scope: !9590, file: !1180, line: 47, type: !280)
!9596 = !DILocation(line: 0, scope: !9590)
!9597 = !DILocation(line: 50, column: 13, scope: !9598)
!9598 = distinct !DILexicalBlock(scope: !9590, file: !1180, line: 50, column: 6)
!9599 = !DILocation(line: 50, column: 28, scope: !9598)
!9600 = !DILocation(line: 50, column: 6, scope: !9590)
!9601 = !DILocation(line: 53, column: 11, scope: !9602)
!9602 = distinct !DILexicalBlock(scope: !9598, file: !1180, line: 50, column: 34)
!9603 = !DILocation(line: 55, column: 14, scope: !9604)
!9604 = distinct !DILexicalBlock(scope: !9602, file: !1180, line: 55, column: 7)
!9605 = !DILocation(line: 55, column: 35, scope: !9604)
!9606 = !DILocation(line: 55, column: 7, scope: !9602)
!9607 = !DILocation(line: 56, column: 14, scope: !9608)
!9608 = distinct !DILexicalBlock(scope: !9609, file: !1180, line: 56, column: 8)
!9609 = distinct !DILexicalBlock(scope: !9604, file: !1180, line: 55, column: 41)
!9610 = !DILocation(line: 56, column: 8, scope: !9609)
!9611 = !DILocation(line: 0, scope: !9604)
!9612 = !DILocation(line: 66, column: 14, scope: !9613)
!9613 = distinct !DILexicalBlock(scope: !9602, file: !1180, line: 66, column: 7)
!9614 = !DILocation(line: 66, column: 30, scope: !9613)
!9615 = !DILocation(line: 66, column: 7, scope: !9602)
!9616 = !DILocation(line: 67, column: 12, scope: !9617)
!9617 = distinct !DILexicalBlock(scope: !9613, file: !1180, line: 66, column: 36)
!9618 = !DILocation(line: 68, column: 3, scope: !9617)
!9619 = !DILocation(line: 68, column: 21, scope: !9620)
!9620 = distinct !DILexicalBlock(scope: !9613, file: !1180, line: 68, column: 14)
!9621 = !DILocation(line: 68, column: 39, scope: !9620)
!9622 = !DILocation(line: 68, column: 14, scope: !9613)
!9623 = !DILocation(line: 69, column: 12, scope: !9624)
!9624 = distinct !DILexicalBlock(scope: !9620, file: !1180, line: 68, column: 45)
!9625 = !DILocation(line: 70, column: 3, scope: !9624)
!9626 = !DILocation(line: 72, column: 21, scope: !9627)
!9627 = distinct !DILexicalBlock(scope: !9598, file: !1180, line: 72, column: 14)
!9628 = !DILocation(line: 72, column: 35, scope: !9627)
!9629 = !DILocation(line: 72, column: 14, scope: !9598)
!9630 = !DILocation(line: 77, column: 14, scope: !9631)
!9631 = distinct !DILexicalBlock(scope: !9632, file: !1180, line: 77, column: 7)
!9632 = distinct !DILexicalBlock(scope: !9627, file: !1180, line: 72, column: 41)
!9633 = !DILocation(line: 77, column: 30, scope: !9631)
!9634 = !DILocation(line: 77, column: 7, scope: !9632)
!9635 = !DILocation(line: 0, scope: !9598)
!9636 = !DILocation(line: 90, column: 1, scope: !9590)
!9637 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1180, file: !1180, line: 157, type: !9638, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9640)
!9638 = !DISubroutineType(types: !9639)
!9639 = !{null, !1040, !119, !119, !119}
!9640 = !{!9641, !9642, !9643, !9644, !9645, !9646, !9647, !9648, !9649, !9650, !9651}
!9641 = !DILocalVariable(name: "dev", arg: 1, scope: !9637, file: !1180, line: 157, type: !1040)
!9642 = !DILocalVariable(name: "pin", arg: 2, scope: !9637, file: !1180, line: 157, type: !119)
!9643 = !DILocalVariable(name: "conf", arg: 3, scope: !9637, file: !1180, line: 158, type: !119)
!9644 = !DILocalVariable(name: "func", arg: 4, scope: !9637, file: !1180, line: 158, type: !119)
!9645 = !DILocalVariable(name: "cfg", scope: !9637, file: !1180, line: 160, type: !9145)
!9646 = !DILocalVariable(name: "gpio", scope: !9637, file: !1180, line: 161, type: !1113)
!9647 = !DILocalVariable(name: "pin_ll", scope: !9637, file: !1180, line: 163, type: !119)
!9648 = !DILocalVariable(name: "mode", scope: !9637, file: !1180, line: 227, type: !32)
!9649 = !DILocalVariable(name: "otype", scope: !9637, file: !1180, line: 227, type: !32)
!9650 = !DILocalVariable(name: "ospeed", scope: !9637, file: !1180, line: 227, type: !32)
!9651 = !DILocalVariable(name: "pupd", scope: !9637, file: !1180, line: 227, type: !32)
!9652 = !DILocation(line: 0, scope: !9637)
!9653 = !DILocation(line: 160, column: 45, scope: !9637)
!9654 = !DILocation(line: 161, column: 44, scope: !9637)
!9655 = !DILocation(line: 163, column: 15, scope: !9637)
!9656 = !DILocation(line: 229, column: 14, scope: !9637)
!9657 = !DILocation(line: 246, column: 47, scope: !9637)
!9658 = !DILocation(line: 246, column: 2, scope: !9637)
!9659 = !DILocation(line: 248, column: 43, scope: !9637)
!9660 = !DILocation(line: 248, column: 2, scope: !9637)
!9661 = !DILocation(line: 250, column: 40, scope: !9637)
!9662 = !DILocation(line: 250, column: 2, scope: !9637)
!9663 = !DILocation(line: 252, column: 11, scope: !9664)
!9664 = distinct !DILexicalBlock(scope: !9637, file: !1180, line: 252, column: 6)
!9665 = !DILocation(line: 252, column: 6, scope: !9637)
!9666 = !DILocation(line: 253, column: 11, scope: !9667)
!9667 = distinct !DILexicalBlock(scope: !9668, file: !1180, line: 253, column: 7)
!9668 = distinct !DILexicalBlock(scope: !9664, file: !1180, line: 252, column: 36)
!9669 = !DILocation(line: 253, column: 7, scope: !9668)
!9670 = !DILocation(line: 254, column: 4, scope: !9671)
!9671 = distinct !DILexicalBlock(scope: !9667, file: !1180, line: 253, column: 16)
!9672 = !DILocation(line: 255, column: 3, scope: !9671)
!9673 = !DILocation(line: 256, column: 4, scope: !9674)
!9674 = distinct !DILexicalBlock(scope: !9667, file: !1180, line: 255, column: 10)
!9675 = !DILocation(line: 260, column: 40, scope: !9637)
!9676 = !DILocation(line: 260, column: 2, scope: !9637)
!9677 = !DILocation(line: 265, column: 1, scope: !9637)
!9678 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1180, file: !1180, line: 137, type: !9480, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9679)
!9679 = !{!9680, !9681}
!9680 = !DILocalVariable(name: "pin", arg: 1, scope: !9678, file: !1180, line: 137, type: !119)
!9681 = !DILocalVariable(name: "pinval", scope: !9678, file: !1180, line: 139, type: !118)
!9682 = !DILocation(line: 0, scope: !9678)
!9683 = !DILocation(line: 149, column: 13, scope: !9678)
!9684 = !DILocation(line: 151, column: 2, scope: !9678)
!9685 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !9560, file: !9560, line: 342, type: !9686, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9688)
!9686 = !DISubroutineType(types: !9687)
!9687 = !{null, !1113, !118, !118}
!9688 = !{!9689, !9690, !9691}
!9689 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9685, file: !9560, line: 342, type: !1113)
!9690 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9685, file: !9560, line: 342, type: !118)
!9691 = !DILocalVariable(name: "OutputType", arg: 3, scope: !9685, file: !9560, line: 342, type: !118)
!9692 = !DILocation(line: 0, scope: !9685)
!9693 = !DILocation(line: 344, column: 3, scope: !9685)
!9694 = !DILocation(line: 345, column: 1, scope: !9685)
!9695 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !9560, file: !9560, line: 413, type: !9686, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9696)
!9696 = !{!9697, !9698, !9699}
!9697 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9695, file: !9560, line: 413, type: !1113)
!9698 = !DILocalVariable(name: "Pin", arg: 2, scope: !9695, file: !9560, line: 413, type: !118)
!9699 = !DILocalVariable(name: "Speed", arg: 3, scope: !9695, file: !9560, line: 413, type: !118)
!9700 = !DILocation(line: 0, scope: !9695)
!9701 = !DILocation(line: 415, column: 3, scope: !9695)
!9702 = !DILocation(line: 0, scope: !9500, inlinedAt: !9703)
!9703 = distinct !DILocation(line: 415, column: 3, scope: !9695)
!9704 = !DILocation(line: 380, column: 4, scope: !9500, inlinedAt: !9703)
!9705 = !DILocation(line: 0, scope: !9508, inlinedAt: !9706)
!9706 = distinct !DILocation(line: 415, column: 3, scope: !9695)
!9707 = !DILocation(line: 414, column: 7, scope: !9508, inlinedAt: !9706)
!9708 = !DILocation(line: 0, scope: !9500, inlinedAt: !9709)
!9709 = distinct !DILocation(line: 415, column: 3, scope: !9695)
!9710 = !DILocation(line: 0, scope: !9508, inlinedAt: !9711)
!9711 = distinct !DILocation(line: 415, column: 3, scope: !9695)
!9712 = !DILocation(line: 417, column: 1, scope: !9695)
!9713 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !9560, file: !9560, line: 484, type: !9686, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9714)
!9714 = !{!9715, !9716, !9717}
!9715 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9713, file: !9560, line: 484, type: !1113)
!9716 = !DILocalVariable(name: "Pin", arg: 2, scope: !9713, file: !9560, line: 484, type: !118)
!9717 = !DILocalVariable(name: "Pull", arg: 3, scope: !9713, file: !9560, line: 484, type: !118)
!9718 = !DILocation(line: 0, scope: !9713)
!9719 = !DILocation(line: 486, column: 3, scope: !9713)
!9720 = !DILocation(line: 0, scope: !9500, inlinedAt: !9721)
!9721 = distinct !DILocation(line: 486, column: 3, scope: !9713)
!9722 = !DILocation(line: 380, column: 4, scope: !9500, inlinedAt: !9721)
!9723 = !DILocation(line: 0, scope: !9508, inlinedAt: !9724)
!9724 = distinct !DILocation(line: 486, column: 3, scope: !9713)
!9725 = !DILocation(line: 414, column: 7, scope: !9508, inlinedAt: !9724)
!9726 = !DILocation(line: 0, scope: !9500, inlinedAt: !9727)
!9727 = distinct !DILocation(line: 486, column: 3, scope: !9713)
!9728 = !DILocation(line: 0, scope: !9508, inlinedAt: !9729)
!9729 = distinct !DILocation(line: 486, column: 3, scope: !9713)
!9730 = !DILocation(line: 487, column: 1, scope: !9713)
!9731 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !9560, file: !9560, line: 556, type: !9686, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9732)
!9732 = !{!9733, !9734, !9735}
!9733 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9731, file: !9560, line: 556, type: !1113)
!9734 = !DILocalVariable(name: "Pin", arg: 2, scope: !9731, file: !9560, line: 556, type: !118)
!9735 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9731, file: !9560, line: 556, type: !118)
!9736 = !DILocation(line: 0, scope: !9731)
!9737 = !DILocation(line: 558, column: 3, scope: !9731)
!9738 = !DILocation(line: 0, scope: !9500, inlinedAt: !9739)
!9739 = distinct !DILocation(line: 558, column: 3, scope: !9731)
!9740 = !DILocation(line: 380, column: 4, scope: !9500, inlinedAt: !9739)
!9741 = !DILocation(line: 0, scope: !9508, inlinedAt: !9742)
!9742 = distinct !DILocation(line: 558, column: 3, scope: !9731)
!9743 = !DILocation(line: 414, column: 7, scope: !9508, inlinedAt: !9742)
!9744 = !DILocation(line: 0, scope: !9500, inlinedAt: !9745)
!9745 = distinct !DILocation(line: 558, column: 3, scope: !9731)
!9746 = !DILocation(line: 0, scope: !9508, inlinedAt: !9747)
!9747 = distinct !DILocation(line: 558, column: 3, scope: !9731)
!9748 = !DILocation(line: 560, column: 1, scope: !9731)
!9749 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !9560, file: !9560, line: 633, type: !9686, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9750)
!9750 = !{!9751, !9752, !9753}
!9751 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9749, file: !9560, line: 633, type: !1113)
!9752 = !DILocalVariable(name: "Pin", arg: 2, scope: !9749, file: !9560, line: 633, type: !118)
!9753 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9749, file: !9560, line: 633, type: !118)
!9754 = !DILocation(line: 0, scope: !9749)
!9755 = !DILocation(line: 635, column: 3, scope: !9749)
!9756 = !DILocation(line: 0, scope: !9500, inlinedAt: !9757)
!9757 = distinct !DILocation(line: 635, column: 3, scope: !9749)
!9758 = !DILocation(line: 380, column: 4, scope: !9500, inlinedAt: !9757)
!9759 = !DILocation(line: 0, scope: !9508, inlinedAt: !9760)
!9760 = distinct !DILocation(line: 635, column: 3, scope: !9749)
!9761 = !DILocation(line: 414, column: 7, scope: !9508, inlinedAt: !9760)
!9762 = !DILocation(line: 0, scope: !9500, inlinedAt: !9763)
!9763 = distinct !DILocation(line: 635, column: 3, scope: !9749)
!9764 = !DILocation(line: 0, scope: !9508, inlinedAt: !9765)
!9765 = distinct !DILocation(line: 635, column: 3, scope: !9749)
!9766 = !DILocation(line: 637, column: 1, scope: !9749)
!9767 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !9560, file: !9560, line: 273, type: !9686, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9768)
!9768 = !{!9769, !9770, !9771}
!9769 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9767, file: !9560, line: 273, type: !1113)
!9770 = !DILocalVariable(name: "Pin", arg: 2, scope: !9767, file: !9560, line: 273, type: !118)
!9771 = !DILocalVariable(name: "Mode", arg: 3, scope: !9767, file: !9560, line: 273, type: !118)
!9772 = !DILocation(line: 0, scope: !9767)
!9773 = !DILocation(line: 275, column: 3, scope: !9767)
!9774 = !DILocation(line: 0, scope: !9500, inlinedAt: !9775)
!9775 = distinct !DILocation(line: 275, column: 3, scope: !9767)
!9776 = !DILocation(line: 380, column: 4, scope: !9500, inlinedAt: !9775)
!9777 = !DILocation(line: 0, scope: !9508, inlinedAt: !9778)
!9778 = distinct !DILocation(line: 275, column: 3, scope: !9767)
!9779 = !DILocation(line: 414, column: 7, scope: !9508, inlinedAt: !9778)
!9780 = !DILocation(line: 0, scope: !9500, inlinedAt: !9781)
!9781 = distinct !DILocation(line: 275, column: 3, scope: !9767)
!9782 = !DILocation(line: 0, scope: !9508, inlinedAt: !9783)
!9783 = distinct !DILocation(line: 275, column: 3, scope: !9767)
!9784 = !DILocation(line: 276, column: 1, scope: !9767)
!9785 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1180, file: !1180, line: 698, type: !1193, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9786)
!9786 = !{!9787, !9788, !9789}
!9787 = !DILocalVariable(name: "dev", arg: 1, scope: !9785, file: !1180, line: 698, type: !1040)
!9788 = !DILocalVariable(name: "data", scope: !9785, file: !1180, line: 700, type: !9212)
!9789 = !DILocalVariable(name: "ret", scope: !9785, file: !1180, line: 701, type: !119)
!9790 = !DILocation(line: 0, scope: !9785)
!9791 = !DILocation(line: 700, column: 38, scope: !9785)
!9792 = !DILocation(line: 703, column: 8, scope: !9785)
!9793 = !DILocation(line: 703, column: 12, scope: !9785)
!9794 = !DILocation(line: 705, column: 7, scope: !9795)
!9795 = distinct !DILexicalBlock(scope: !9785, file: !1180, line: 705, column: 6)
!9796 = !DILocation(line: 705, column: 6, scope: !9785)
!9797 = !DILocation(line: 722, column: 8, scope: !9785)
!9798 = !DILocation(line: 723, column: 10, scope: !9799)
!9799 = distinct !DILexicalBlock(scope: !9785, file: !1180, line: 723, column: 6)
!9800 = !DILocation(line: 723, column: 6, scope: !9785)
!9801 = !DILocation(line: 731, column: 1, scope: !9785)
!9802 = distinct !DISubprogram(name: "device_is_ready", scope: !8990, file: !8990, line: 47, type: !9803, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9805)
!9803 = !DISubroutineType(types: !9804)
!9804 = !{!345, !1040}
!9805 = !{!9806}
!9806 = !DILocalVariable(name: "dev", arg: 1, scope: !9802, file: !8990, line: 47, type: !1040)
!9807 = !DILocation(line: 0, scope: !9802)
!9808 = !DILocation(line: 55, column: 2, scope: !9809)
!9809 = distinct !DILexicalBlock(scope: !9802, file: !8990, line: 55, column: 2)
!9810 = !{i64 2154367279}
!9811 = !DILocation(line: 56, column: 9, scope: !9802)
!9812 = !DILocation(line: 56, column: 2, scope: !9802)
!9813 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1180, file: !1180, line: 270, type: !9814, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9816)
!9814 = !DISubroutineType(types: !9815)
!9815 = !{!119, !1040, !345}
!9816 = !{!9817, !9818, !9819, !9820, !9821}
!9817 = !DILocalVariable(name: "dev", arg: 1, scope: !9813, file: !1180, line: 270, type: !1040)
!9818 = !DILocalVariable(name: "on", arg: 2, scope: !9813, file: !1180, line: 270, type: !345)
!9819 = !DILocalVariable(name: "cfg", scope: !9813, file: !1180, line: 272, type: !9145)
!9820 = !DILocalVariable(name: "ret", scope: !9813, file: !1180, line: 273, type: !119)
!9821 = !DILocalVariable(name: "clk", scope: !9813, file: !1180, line: 278, type: !9447)
!9822 = !DILocation(line: 0, scope: !9813)
!9823 = !DILocation(line: 272, column: 45, scope: !9813)
!9824 = !DILocation(line: 282, column: 38, scope: !9825)
!9825 = distinct !DILexicalBlock(scope: !9826, file: !1180, line: 280, column: 10)
!9826 = distinct !DILexicalBlock(scope: !9813, file: !1180, line: 280, column: 6)
!9827 = !DILocation(line: 282, column: 6, scope: !9825)
!9828 = !DILocation(line: 281, column: 9, scope: !9825)
!9829 = !DILocation(line: 293, column: 1, scope: !9813)
!9830 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !334, file: !334, line: 730, type: !9803, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9831)
!9831 = !{!9832}
!9832 = !DILocalVariable(name: "dev", arg: 1, scope: !9830, file: !334, line: 730, type: !1040)
!9833 = !DILocation(line: 0, scope: !9830)
!9834 = !DILocation(line: 732, column: 9, scope: !9830)
!9835 = !DILocation(line: 732, column: 2, scope: !9830)
!9836 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1180, file: !1180, line: 496, type: !9837, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9839)
!9837 = !DISubroutineType(types: !9838)
!9838 = !{!119, !1040, !119, !119, !119}
!9839 = !{!9840, !9841, !9842, !9843, !9844, !9845}
!9840 = !DILocalVariable(name: "dev", arg: 1, scope: !9836, file: !1180, line: 496, type: !1040)
!9841 = !DILocalVariable(name: "pin", arg: 2, scope: !9836, file: !1180, line: 496, type: !119)
!9842 = !DILocalVariable(name: "conf", arg: 3, scope: !9836, file: !1180, line: 496, type: !119)
!9843 = !DILocalVariable(name: "func", arg: 4, scope: !9836, file: !1180, line: 496, type: !119)
!9844 = !DILocalVariable(name: "ret", scope: !9836, file: !1180, line: 498, type: !119)
!9845 = !DILocalVariable(name: "gpio_out", scope: !9846, file: !1180, line: 508, type: !118)
!9846 = distinct !DILexicalBlock(scope: !9847, file: !1180, line: 507, column: 27)
!9847 = distinct !DILexicalBlock(scope: !9836, file: !1180, line: 507, column: 6)
!9848 = !DILocation(line: 0, scope: !9836)
!9849 = !DILocation(line: 505, column: 2, scope: !9836)
!9850 = !DILocation(line: 507, column: 11, scope: !9847)
!9851 = !DILocation(line: 507, column: 6, scope: !9836)
!9852 = !DILocation(line: 508, column: 28, scope: !9846)
!9853 = !DILocation(line: 0, scope: !9846)
!9854 = !DILocation(line: 510, column: 16, scope: !9855)
!9855 = distinct !DILexicalBlock(scope: !9846, file: !1180, line: 510, column: 7)
!9856 = !DILocation(line: 0, scope: !9855)
!9857 = !DILocation(line: 510, column: 7, scope: !9846)
!9858 = !DILocation(line: 511, column: 4, scope: !9859)
!9859 = distinct !DILexicalBlock(scope: !9855, file: !1180, line: 510, column: 32)
!9860 = !DILocation(line: 512, column: 3, scope: !9859)
!9861 = !DILocation(line: 513, column: 4, scope: !9862)
!9862 = distinct !DILexicalBlock(scope: !9863, file: !1180, line: 512, column: 39)
!9863 = distinct !DILexicalBlock(scope: !9855, file: !1180, line: 512, column: 14)
!9864 = !DILocation(line: 514, column: 3, scope: !9862)
!9865 = !DILocation(line: 518, column: 1, scope: !9836)
!9866 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1456, file: !1456, line: 526, type: !1359, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !9867)
!9867 = !{!9868, !9869, !9870}
!9868 = !DILocalVariable(name: "dev", arg: 1, scope: !9866, file: !1456, line: 526, type: !1361)
!9869 = !DILocalVariable(name: "c", arg: 2, scope: !9866, file: !1456, line: 526, type: !972)
!9870 = !DILocalVariable(name: "config", scope: !9866, file: !1456, line: 528, type: !9871)
!9871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1489, size: 32)
!9872 = !DILocation(line: 0, scope: !9866)
!9873 = !DILocation(line: 528, column: 48, scope: !9866)
!9874 = !DILocation(line: 531, column: 40, scope: !9875)
!9875 = distinct !DILexicalBlock(scope: !9866, file: !1456, line: 531, column: 6)
!9876 = !DILocation(line: 531, column: 6, scope: !9875)
!9877 = !DILocation(line: 531, column: 6, scope: !9866)
!9878 = !DILocation(line: 532, column: 34, scope: !9879)
!9879 = distinct !DILexicalBlock(scope: !9875, file: !1456, line: 531, column: 48)
!9880 = !DILocation(line: 532, column: 3, scope: !9879)
!9881 = !DILocation(line: 533, column: 2, scope: !9879)
!9882 = !DILocation(line: 539, column: 42, scope: !9883)
!9883 = distinct !DILexicalBlock(scope: !9866, file: !1456, line: 539, column: 6)
!9884 = !DILocation(line: 539, column: 7, scope: !9883)
!9885 = !DILocation(line: 539, column: 6, scope: !9866)
!9886 = !DILocation(line: 543, column: 52, scope: !9866)
!9887 = !DILocation(line: 543, column: 22, scope: !9866)
!9888 = !DILocation(line: 543, column: 5, scope: !9866)
!9889 = !DILocation(line: 545, column: 2, scope: !9866)
!9890 = !DILocation(line: 546, column: 1, scope: !9866)
!9891 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1456, file: !1456, line: 548, type: !1378, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !9892)
!9892 = !{!9893, !9894, !9895, !9896}
!9893 = !DILocalVariable(name: "dev", arg: 1, scope: !9891, file: !1456, line: 548, type: !1361)
!9894 = !DILocalVariable(name: "c", arg: 2, scope: !9891, file: !1456, line: 549, type: !186)
!9895 = !DILocalVariable(name: "config", scope: !9891, file: !1456, line: 551, type: !9871)
!9896 = !DILocalVariable(name: "key", scope: !9891, file: !1456, line: 555, type: !32)
!9897 = !DILocation(line: 0, scope: !9891)
!9898 = !DILocation(line: 551, column: 48, scope: !9891)
!9899 = !DILocation(line: 562, column: 2, scope: !9891)
!9900 = !DILocation(line: 563, column: 41, scope: !9901)
!9901 = distinct !DILexicalBlock(scope: !9902, file: !1456, line: 563, column: 7)
!9902 = distinct !DILexicalBlock(scope: !9891, file: !1456, line: 562, column: 12)
!9903 = !DILocation(line: 563, column: 7, scope: !9901)
!9904 = !DILocation(line: 563, column: 7, scope: !9902)
!9905 = !DILocation(line: 55, column: 2, scope: !9906, inlinedAt: !9910)
!9906 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6013, file: !6013, line: 42, type: !6014, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !9907)
!9907 = !{!9908, !9909}
!9908 = !DILocalVariable(name: "key", scope: !9906, file: !6013, line: 44, type: !32)
!9909 = !DILocalVariable(name: "tmp", scope: !9906, file: !6013, line: 53, type: !32)
!9910 = distinct !DILocation(line: 564, column: 10, scope: !9911)
!9911 = distinct !DILexicalBlock(scope: !9901, file: !1456, line: 563, column: 49)
!9912 = !{i64 2090080}
!9913 = !DILocation(line: 0, scope: !9906, inlinedAt: !9910)
!9914 = !DILocation(line: 565, column: 42, scope: !9915)
!9915 = distinct !DILexicalBlock(scope: !9911, file: !1456, line: 565, column: 8)
!9916 = !DILocation(line: 565, column: 8, scope: !9915)
!9917 = !DILocation(line: 565, column: 8, scope: !9911)
!9918 = !DILocalVariable(name: "key", arg: 1, scope: !9919, file: !6013, line: 84, type: !32)
!9919 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6013, file: !6013, line: 84, type: !6024, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !9920)
!9920 = !{!9918}
!9921 = !DILocation(line: 0, scope: !9919, inlinedAt: !9922)
!9922 = distinct !DILocation(line: 568, column: 4, scope: !9911)
!9923 = !DILocation(line: 95, column: 2, scope: !9919, inlinedAt: !9922)
!9924 = !{i64 2090897}
!9925 = !DILocation(line: 569, column: 3, scope: !9911)
!9926 = distinct !{!9926, !9899, !9927}
!9927 = !DILocation(line: 570, column: 2, scope: !9891)
!9928 = !DILocation(line: 592, column: 33, scope: !9891)
!9929 = !DILocation(line: 592, column: 2, scope: !9891)
!9930 = !DILocation(line: 0, scope: !9919, inlinedAt: !9931)
!9931 = distinct !DILocation(line: 593, column: 2, scope: !9891)
!9932 = !DILocation(line: 95, column: 2, scope: !9919, inlinedAt: !9931)
!9933 = !DILocation(line: 594, column: 1, scope: !9891)
!9934 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1456, file: !1456, line: 596, type: !1382, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !9935)
!9935 = !{!9936, !9937, !9938}
!9936 = !DILocalVariable(name: "dev", arg: 1, scope: !9934, file: !1456, line: 596, type: !1361)
!9937 = !DILocalVariable(name: "config", scope: !9934, file: !1456, line: 598, type: !9871)
!9938 = !DILocalVariable(name: "err", scope: !9934, file: !1456, line: 599, type: !118)
!9939 = !DILocation(line: 0, scope: !9934)
!9940 = !DILocation(line: 598, column: 48, scope: !9934)
!9941 = !DILocation(line: 606, column: 40, scope: !9942)
!9942 = distinct !DILexicalBlock(scope: !9934, file: !1456, line: 606, column: 6)
!9943 = !DILocation(line: 606, column: 6, scope: !9942)
!9944 = !DILocation(line: 606, column: 6, scope: !9934)
!9945 = !DILocation(line: 610, column: 39, scope: !9946)
!9946 = distinct !DILexicalBlock(scope: !9934, file: !1456, line: 610, column: 6)
!9947 = !DILocation(line: 610, column: 6, scope: !9946)
!9948 = !DILocation(line: 610, column: 6, scope: !9934)
!9949 = !DILocation(line: 614, column: 39, scope: !9950)
!9950 = distinct !DILexicalBlock(scope: !9934, file: !1456, line: 614, column: 6)
!9951 = !DILocation(line: 614, column: 6, scope: !9950)
!9952 = !DILocation(line: 614, column: 6, scope: !9934)
!9953 = !DILocation(line: 619, column: 40, scope: !9954)
!9954 = distinct !DILexicalBlock(scope: !9934, file: !1456, line: 619, column: 6)
!9955 = !DILocation(line: 619, column: 6, scope: !9954)
!9956 = !DILocation(line: 619, column: 6, scope: !9934)
!9957 = !DILocation(line: 623, column: 10, scope: !9958)
!9958 = distinct !DILexicalBlock(scope: !9934, file: !1456, line: 623, column: 6)
!9959 = !DILocation(line: 623, column: 6, scope: !9934)
!9960 = !DILocation(line: 624, column: 34, scope: !9961)
!9961 = distinct !DILexicalBlock(scope: !9958, file: !1456, line: 623, column: 24)
!9962 = !DILocation(line: 624, column: 3, scope: !9961)
!9963 = !DILocation(line: 625, column: 2, scope: !9961)
!9964 = !DILocation(line: 632, column: 10, scope: !9965)
!9965 = distinct !DILexicalBlock(scope: !9934, file: !1456, line: 632, column: 6)
!9966 = !DILocation(line: 632, column: 6, scope: !9934)
!9967 = !DILocation(line: 633, column: 34, scope: !9968)
!9968 = distinct !DILexicalBlock(scope: !9965, file: !1456, line: 632, column: 32)
!9969 = !DILocation(line: 633, column: 3, scope: !9968)
!9970 = !DILocation(line: 634, column: 2, scope: !9968)
!9971 = !DILocation(line: 636, column: 10, scope: !9972)
!9972 = distinct !DILexicalBlock(scope: !9934, file: !1456, line: 636, column: 6)
!9973 = !DILocation(line: 636, column: 6, scope: !9934)
!9974 = !DILocation(line: 637, column: 33, scope: !9975)
!9975 = distinct !DILexicalBlock(scope: !9972, file: !1456, line: 636, column: 31)
!9976 = !DILocation(line: 637, column: 3, scope: !9975)
!9977 = !DILocation(line: 638, column: 2, scope: !9975)
!9978 = !DILocation(line: 640, column: 10, scope: !9979)
!9979 = distinct !DILexicalBlock(scope: !9934, file: !1456, line: 640, column: 6)
!9980 = !DILocation(line: 640, column: 6, scope: !9934)
!9981 = !DILocation(line: 641, column: 33, scope: !9982)
!9982 = distinct !DILexicalBlock(scope: !9979, file: !1456, line: 640, column: 32)
!9983 = !DILocation(line: 641, column: 3, scope: !9982)
!9984 = !DILocation(line: 642, column: 2, scope: !9982)
!9985 = !DILocation(line: 646, column: 32, scope: !9934)
!9986 = !DILocation(line: 646, column: 2, scope: !9934)
!9987 = !DILocation(line: 648, column: 2, scope: !9934)
!9988 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1456, file: !1456, line: 419, type: !1386, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !9989)
!9989 = !{!9990, !9991, !9992, !9993, !9995, !9996, !9997, !9998}
!9990 = !DILocalVariable(name: "dev", arg: 1, scope: !9988, file: !1456, line: 419, type: !1361)
!9991 = !DILocalVariable(name: "cfg", arg: 2, scope: !9988, file: !1456, line: 420, type: !1388)
!9992 = !DILocalVariable(name: "config", scope: !9988, file: !1456, line: 422, type: !9871)
!9993 = !DILocalVariable(name: "data", scope: !9988, file: !1456, line: 423, type: !9994)
!9994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1546, size: 32)
!9995 = !DILocalVariable(name: "parity", scope: !9988, file: !1456, line: 424, type: !6609)
!9996 = !DILocalVariable(name: "stopbits", scope: !9988, file: !1456, line: 425, type: !6609)
!9997 = !DILocalVariable(name: "databits", scope: !9988, file: !1456, line: 426, type: !6609)
!9998 = !DILocalVariable(name: "flowctrl", scope: !9988, file: !1456, line: 428, type: !6609)
!9999 = !DILocation(line: 0, scope: !9988)
!10000 = !DILocation(line: 422, column: 48, scope: !9988)
!10001 = !DILocation(line: 423, column: 38, scope: !9988)
!10002 = !DILocation(line: 424, column: 56, scope: !9988)
!10003 = !DILocation(line: 424, column: 51, scope: !9988)
!10004 = !DILocation(line: 424, column: 26, scope: !9988)
!10005 = !DILocation(line: 425, column: 60, scope: !9988)
!10006 = !DILocation(line: 425, column: 55, scope: !9988)
!10007 = !DILocation(line: 425, column: 28, scope: !9988)
!10008 = !DILocation(line: 426, column: 60, scope: !9988)
!10009 = !DILocation(line: 426, column: 55, scope: !9988)
!10010 = !DILocation(line: 426, column: 28, scope: !9988)
!10011 = !DILocation(line: 428, column: 58, scope: !9988)
!10012 = !DILocation(line: 428, column: 53, scope: !9988)
!10013 = !DILocation(line: 428, column: 28, scope: !9988)
!10014 = !DILocation(line: 431, column: 44, scope: !10015)
!10015 = distinct !DILexicalBlock(scope: !9988, file: !1456, line: 431, column: 6)
!10016 = !DILocation(line: 438, column: 22, scope: !10017)
!10017 = distinct !DILexicalBlock(scope: !9988, file: !1456, line: 437, column: 6)
!10018 = !DILocation(line: 437, column: 6, scope: !9988)
!10019 = !DILocation(line: 448, column: 6, scope: !9988)
!10020 = !DILocation(line: 465, column: 47, scope: !10021)
!10021 = distinct !DILexicalBlock(scope: !9988, file: !1456, line: 465, column: 6)
!10022 = !DILocation(line: 475, column: 21, scope: !10023)
!10023 = distinct !DILexicalBlock(scope: !9988, file: !1456, line: 475, column: 6)
!10024 = !DILocation(line: 475, column: 6, scope: !9988)
!10025 = !DILocation(line: 476, column: 8, scope: !10026)
!10026 = distinct !DILexicalBlock(scope: !10027, file: !1456, line: 476, column: 7)
!10027 = distinct !DILexicalBlock(scope: !10023, file: !1456, line: 475, column: 49)
!10028 = !DILocation(line: 477, column: 34, scope: !10026)
!10029 = !DILocation(line: 476, column: 7, scope: !10027)
!10030 = !DILocation(line: 482, column: 27, scope: !9988)
!10031 = !DILocation(line: 482, column: 2, scope: !9988)
!10032 = !DILocation(line: 484, column: 16, scope: !10033)
!10033 = distinct !DILexicalBlock(scope: !9988, file: !1456, line: 484, column: 6)
!10034 = !DILocation(line: 484, column: 13, scope: !10033)
!10035 = !DILocation(line: 484, column: 6, scope: !9988)
!10036 = !DILocation(line: 485, column: 3, scope: !10037)
!10037 = distinct !DILexicalBlock(scope: !10033, file: !1456, line: 484, column: 44)
!10038 = !DILocation(line: 486, column: 2, scope: !10037)
!10039 = !DILocation(line: 488, column: 18, scope: !10040)
!10040 = distinct !DILexicalBlock(scope: !9988, file: !1456, line: 488, column: 6)
!10041 = !DILocation(line: 488, column: 15, scope: !10040)
!10042 = !DILocation(line: 488, column: 6, scope: !9988)
!10043 = !DILocation(line: 489, column: 3, scope: !10044)
!10044 = distinct !DILexicalBlock(scope: !10040, file: !1456, line: 488, column: 48)
!10045 = !DILocation(line: 490, column: 2, scope: !10044)
!10046 = !DILocation(line: 492, column: 18, scope: !10047)
!10047 = distinct !DILexicalBlock(scope: !9988, file: !1456, line: 492, column: 6)
!10048 = !DILocation(line: 492, column: 15, scope: !10047)
!10049 = !DILocation(line: 492, column: 6, scope: !9988)
!10050 = !DILocation(line: 493, column: 3, scope: !10051)
!10051 = distinct !DILexicalBlock(scope: !10047, file: !1456, line: 492, column: 48)
!10052 = !DILocation(line: 494, column: 2, scope: !10051)
!10053 = !DILocation(line: 496, column: 18, scope: !10054)
!10054 = distinct !DILexicalBlock(scope: !9988, file: !1456, line: 496, column: 6)
!10055 = !DILocation(line: 496, column: 15, scope: !10054)
!10056 = !DILocation(line: 496, column: 6, scope: !9988)
!10057 = !DILocation(line: 497, column: 3, scope: !10058)
!10058 = distinct !DILexicalBlock(scope: !10054, file: !1456, line: 496, column: 46)
!10059 = !DILocation(line: 498, column: 2, scope: !10058)
!10060 = !DILocation(line: 500, column: 11, scope: !10061)
!10061 = distinct !DILexicalBlock(scope: !9988, file: !1456, line: 500, column: 6)
!10062 = !DILocation(line: 500, column: 29, scope: !10061)
!10063 = !DILocation(line: 500, column: 20, scope: !10061)
!10064 = !DILocation(line: 500, column: 6, scope: !9988)
!10065 = !DILocation(line: 501, column: 3, scope: !10066)
!10066 = distinct !DILexicalBlock(scope: !10061, file: !1456, line: 500, column: 40)
!10067 = !DILocation(line: 502, column: 26, scope: !10066)
!10068 = !DILocation(line: 502, column: 19, scope: !10066)
!10069 = !DILocation(line: 503, column: 2, scope: !10066)
!10070 = !DILocation(line: 505, column: 26, scope: !9988)
!10071 = !DILocation(line: 505, column: 2, scope: !9988)
!10072 = !DILocation(line: 506, column: 2, scope: !9988)
!10073 = !DILocation(line: 507, column: 1, scope: !9988)
!10074 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1456, file: !1456, line: 509, type: !1399, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10075)
!10075 = !{!10076, !10077, !10078}
!10076 = !DILocalVariable(name: "dev", arg: 1, scope: !10074, file: !1456, line: 509, type: !1361)
!10077 = !DILocalVariable(name: "cfg", arg: 2, scope: !10074, file: !1456, line: 510, type: !1401)
!10078 = !DILocalVariable(name: "data", scope: !10074, file: !1456, line: 512, type: !9994)
!10079 = !DILocation(line: 0, scope: !10074)
!10080 = !DILocation(line: 512, column: 38, scope: !10074)
!10081 = !DILocation(line: 514, column: 24, scope: !10074)
!10082 = !DILocation(line: 514, column: 7, scope: !10074)
!10083 = !DILocation(line: 514, column: 16, scope: !10074)
!10084 = !DILocation(line: 515, column: 41, scope: !10074)
!10085 = !{i32 0, i32 1537}
!10086 = !DILocation(line: 515, column: 16, scope: !10074)
!10087 = !DILocation(line: 515, column: 7, scope: !10074)
!10088 = !DILocation(line: 515, column: 14, scope: !10074)
!10089 = !DILocation(line: 517, column: 3, scope: !10074)
!10090 = !{i32 0, i32 12289}
!10091 = !DILocation(line: 516, column: 19, scope: !10074)
!10092 = !DILocation(line: 516, column: 7, scope: !10074)
!10093 = !DILocation(line: 516, column: 17, scope: !10074)
!10094 = !DILocation(line: 519, column: 3, scope: !10074)
!10095 = !DILocation(line: 519, column: 33, scope: !10074)
!10096 = !DILocation(line: 518, column: 19, scope: !10074)
!10097 = !DILocation(line: 518, column: 7, scope: !10074)
!10098 = !DILocation(line: 518, column: 17, scope: !10074)
!10099 = !DILocation(line: 521, column: 3, scope: !10074)
!10100 = !{i32 0, i32 769}
!10101 = !DILocation(line: 520, column: 19, scope: !10074)
!10102 = !DILocation(line: 520, column: 7, scope: !10074)
!10103 = !DILocation(line: 520, column: 17, scope: !10074)
!10104 = !DILocation(line: 522, column: 2, scope: !10074)
!10105 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1456, file: !1456, line: 205, type: !10106, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10108)
!10106 = !DISubroutineType(types: !10107)
!10107 = !{!118, !1361}
!10108 = !{!10109, !10110}
!10109 = !DILocalVariable(name: "dev", arg: 1, scope: !10105, file: !1456, line: 205, type: !1361)
!10110 = !DILocalVariable(name: "config", scope: !10105, file: !1456, line: 207, type: !9871)
!10111 = !DILocation(line: 0, scope: !10105)
!10112 = !DILocation(line: 207, column: 48, scope: !10105)
!10113 = !DILocation(line: 209, column: 36, scope: !10105)
!10114 = !DILocation(line: 209, column: 9, scope: !10105)
!10115 = !DILocation(line: 209, column: 2, scope: !10105)
!10116 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1456, file: !1456, line: 270, type: !10117, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10119)
!10117 = !DISubroutineType(types: !10118)
!10118 = !{!1327, !118}
!10119 = !{!10120}
!10120 = !DILocalVariable(name: "parity", arg: 1, scope: !10116, file: !1456, line: 270, type: !118)
!10121 = !DILocation(line: 0, scope: !10116)
!10122 = !DILocation(line: 272, column: 2, scope: !10116)
!10123 = !DILocation(line: 281, column: 1, scope: !10116)
!10124 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1456, file: !1456, line: 220, type: !10106, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10125)
!10125 = !{!10126, !10127}
!10126 = !DILocalVariable(name: "dev", arg: 1, scope: !10124, file: !1456, line: 220, type: !1361)
!10127 = !DILocalVariable(name: "config", scope: !10124, file: !1456, line: 222, type: !9871)
!10128 = !DILocation(line: 0, scope: !10124)
!10129 = !DILocation(line: 222, column: 48, scope: !10124)
!10130 = !DILocation(line: 224, column: 44, scope: !10124)
!10131 = !DILocation(line: 224, column: 9, scope: !10124)
!10132 = !DILocation(line: 224, column: 2, scope: !10124)
!10133 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1456, file: !1456, line: 304, type: !10134, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10136)
!10134 = !DISubroutineType(types: !10135)
!10135 = !{!1341, !118}
!10136 = !{!10137}
!10137 = !DILocalVariable(name: "sb", arg: 1, scope: !10133, file: !1456, line: 304, type: !118)
!10138 = !DILocation(line: 0, scope: !10133)
!10139 = !DILocation(line: 306, column: 2, scope: !10133)
!10140 = !DILocation(line: 0, scope: !10141)
!10141 = distinct !DILexicalBlock(scope: !10133, file: !1456, line: 306, column: 14)
!10142 = !DILocation(line: 323, column: 1, scope: !10133)
!10143 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1456, file: !1456, line: 235, type: !10106, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10144)
!10144 = !{!10145, !10146}
!10145 = !DILocalVariable(name: "dev", arg: 1, scope: !10143, file: !1456, line: 235, type: !1361)
!10146 = !DILocalVariable(name: "config", scope: !10143, file: !1456, line: 237, type: !9871)
!10147 = !DILocation(line: 0, scope: !10143)
!10148 = !DILocation(line: 237, column: 48, scope: !10143)
!10149 = !DILocation(line: 239, column: 39, scope: !10143)
!10150 = !DILocation(line: 239, column: 9, scope: !10143)
!10151 = !DILocation(line: 239, column: 2, scope: !10143)
!10152 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1456, file: !1456, line: 355, type: !10153, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10155)
!10153 = !DISubroutineType(types: !10154)
!10154 = !{!1334, !118, !118}
!10155 = !{!10156, !10157}
!10156 = !DILocalVariable(name: "db", arg: 1, scope: !10152, file: !1456, line: 355, type: !118)
!10157 = !DILocalVariable(name: "p", arg: 2, scope: !10152, file: !1456, line: 356, type: !118)
!10158 = !DILocation(line: 0, scope: !10152)
!10159 = !DILocation(line: 358, column: 2, scope: !10152)
!10160 = !DILocation(line: 384, column: 1, scope: !10152)
!10161 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1456, file: !1456, line: 250, type: !10106, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10162)
!10162 = !{!10163, !10164}
!10163 = !DILocalVariable(name: "dev", arg: 1, scope: !10161, file: !1456, line: 250, type: !1361)
!10164 = !DILocalVariable(name: "config", scope: !10161, file: !1456, line: 252, type: !9871)
!10165 = !DILocation(line: 0, scope: !10161)
!10166 = !DILocation(line: 252, column: 48, scope: !10161)
!10167 = !DILocation(line: 254, column: 40, scope: !10161)
!10168 = !DILocation(line: 254, column: 9, scope: !10161)
!10169 = !DILocation(line: 254, column: 2, scope: !10161)
!10170 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1456, file: !1456, line: 409, type: !10171, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10173)
!10171 = !DISubroutineType(types: !10172)
!10172 = !{!1347, !118}
!10173 = !{!10174}
!10174 = !DILocalVariable(name: "fc", arg: 1, scope: !10170, file: !1456, line: 409, type: !118)
!10175 = !DILocation(line: 0, scope: !10170)
!10176 = !DILocation(line: 411, column: 9, scope: !10177)
!10177 = distinct !DILexicalBlock(scope: !10170, file: !1456, line: 411, column: 6)
!10178 = !DILocation(line: 416, column: 1, scope: !10170)
!10179 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !10180, file: !10180, line: 967, type: !10181, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10183)
!10180 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10181 = !DISubroutineType(types: !10182)
!10182 = !{!118, !1402}
!10183 = !{!10184}
!10184 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10179, file: !10180, line: 967, type: !1402)
!10185 = !DILocation(line: 0, scope: !10179)
!10186 = !DILocation(line: 969, column: 21, scope: !10179)
!10187 = !DILocation(line: 969, column: 3, scope: !10179)
!10188 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !10180, file: !10180, line: 601, type: !10181, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10189)
!10189 = !{!10190}
!10190 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10188, file: !10180, line: 601, type: !1402)
!10191 = !DILocation(line: 0, scope: !10188)
!10192 = !DILocation(line: 603, column: 21, scope: !10188)
!10193 = !DILocation(line: 603, column: 3, scope: !10188)
!10194 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !10180, file: !10180, line: 820, type: !10181, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10195)
!10195 = !{!10196}
!10196 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10194, file: !10180, line: 820, type: !1402)
!10197 = !DILocation(line: 0, scope: !10194)
!10198 = !DILocation(line: 822, column: 21, scope: !10194)
!10199 = !DILocation(line: 822, column: 3, scope: !10194)
!10200 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !10180, file: !10180, line: 547, type: !10181, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10201)
!10201 = !{!10202}
!10202 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10200, file: !10180, line: 547, type: !1402)
!10203 = !DILocation(line: 0, scope: !10200)
!10204 = !DILocation(line: 549, column: 21, scope: !10200)
!10205 = !DILocation(line: 549, column: 3, scope: !10200)
!10206 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1456, file: !1456, line: 257, type: !10207, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10209)
!10207 = !DISubroutineType(types: !10208)
!10208 = !{!118, !1327}
!10209 = !{!10210}
!10210 = !DILocalVariable(name: "parity", arg: 1, scope: !10206, file: !1456, line: 257, type: !1327)
!10211 = !DILocation(line: 0, scope: !10206)
!10212 = !DILocation(line: 259, column: 2, scope: !10206)
!10213 = !DILocation(line: 268, column: 1, scope: !10206)
!10214 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1456, file: !1456, line: 283, type: !10215, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10217)
!10215 = !DISubroutineType(types: !10216)
!10216 = !{!118, !1341}
!10217 = !{!10218}
!10218 = !DILocalVariable(name: "sb", arg: 1, scope: !10214, file: !1456, line: 283, type: !1341)
!10219 = !DILocation(line: 0, scope: !10214)
!10220 = !DILocation(line: 285, column: 2, scope: !10214)
!10221 = !DILocation(line: 0, scope: !10222)
!10222 = distinct !DILexicalBlock(scope: !10214, file: !1456, line: 285, column: 14)
!10223 = !DILocation(line: 302, column: 1, scope: !10214)
!10224 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1456, file: !1456, line: 325, type: !10225, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10227)
!10225 = !DISubroutineType(types: !10226)
!10226 = !{!118, !1334, !1327}
!10227 = !{!10228, !10229}
!10228 = !DILocalVariable(name: "db", arg: 1, scope: !10224, file: !1456, line: 325, type: !1334)
!10229 = !DILocalVariable(name: "p", arg: 2, scope: !10224, file: !1456, line: 326, type: !1327)
!10230 = !DILocation(line: 0, scope: !10224)
!10231 = !DILocation(line: 328, column: 2, scope: !10224)
!10232 = !DILocation(line: 353, column: 1, scope: !10224)
!10233 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1456, file: !1456, line: 393, type: !10234, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10236)
!10234 = !DISubroutineType(types: !10235)
!10235 = !{!118, !1347}
!10236 = !{!10237}
!10237 = !DILocalVariable(name: "fc", arg: 1, scope: !10233, file: !1456, line: 393, type: !1347)
!10238 = !DILocation(line: 0, scope: !10233)
!10239 = !DILocation(line: 395, column: 9, scope: !10240)
!10240 = distinct !DILexicalBlock(scope: !10233, file: !1456, line: 395, column: 6)
!10241 = !DILocation(line: 400, column: 1, scope: !10233)
!10242 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !10180, file: !10180, line: 424, type: !10243, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10245)
!10243 = !DISubroutineType(types: !10244)
!10244 = !{null, !1402}
!10245 = !{!10246}
!10246 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10242, file: !10180, line: 424, type: !1402)
!10247 = !DILocation(line: 0, scope: !10242)
!10248 = !DILocation(line: 426, column: 3, scope: !10242)
!10249 = !DILocation(line: 427, column: 1, scope: !10242)
!10250 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1456, file: !1456, line: 197, type: !10251, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10253)
!10251 = !DISubroutineType(types: !10252)
!10252 = !{null, !1361, !118}
!10253 = !{!10254, !10255, !10256}
!10254 = !DILocalVariable(name: "dev", arg: 1, scope: !10250, file: !1456, line: 197, type: !1361)
!10255 = !DILocalVariable(name: "parity", arg: 2, scope: !10250, file: !1456, line: 198, type: !118)
!10256 = !DILocalVariable(name: "config", scope: !10250, file: !1456, line: 200, type: !9871)
!10257 = !DILocation(line: 0, scope: !10250)
!10258 = !DILocation(line: 200, column: 48, scope: !10250)
!10259 = !DILocation(line: 202, column: 29, scope: !10250)
!10260 = !DILocation(line: 202, column: 2, scope: !10250)
!10261 = !DILocation(line: 203, column: 1, scope: !10250)
!10262 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1456, file: !1456, line: 212, type: !10251, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10263)
!10263 = !{!10264, !10265, !10266}
!10264 = !DILocalVariable(name: "dev", arg: 1, scope: !10262, file: !1456, line: 212, type: !1361)
!10265 = !DILocalVariable(name: "stopbits", arg: 2, scope: !10262, file: !1456, line: 213, type: !118)
!10266 = !DILocalVariable(name: "config", scope: !10262, file: !1456, line: 215, type: !9871)
!10267 = !DILocation(line: 0, scope: !10262)
!10268 = !DILocation(line: 215, column: 48, scope: !10262)
!10269 = !DILocation(line: 217, column: 37, scope: !10262)
!10270 = !DILocation(line: 217, column: 2, scope: !10262)
!10271 = !DILocation(line: 218, column: 1, scope: !10262)
!10272 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1456, file: !1456, line: 227, type: !10251, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10273)
!10273 = !{!10274, !10275, !10276}
!10274 = !DILocalVariable(name: "dev", arg: 1, scope: !10272, file: !1456, line: 227, type: !1361)
!10275 = !DILocalVariable(name: "databits", arg: 2, scope: !10272, file: !1456, line: 228, type: !118)
!10276 = !DILocalVariable(name: "config", scope: !10272, file: !1456, line: 230, type: !9871)
!10277 = !DILocation(line: 0, scope: !10272)
!10278 = !DILocation(line: 230, column: 48, scope: !10272)
!10279 = !DILocation(line: 232, column: 32, scope: !10272)
!10280 = !DILocation(line: 232, column: 2, scope: !10272)
!10281 = !DILocation(line: 233, column: 1, scope: !10272)
!10282 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1456, file: !1456, line: 242, type: !10251, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10283)
!10283 = !{!10284, !10285, !10286}
!10284 = !DILocalVariable(name: "dev", arg: 1, scope: !10282, file: !1456, line: 242, type: !1361)
!10285 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !10282, file: !1456, line: 243, type: !118)
!10286 = !DILocalVariable(name: "config", scope: !10282, file: !1456, line: 245, type: !9871)
!10287 = !DILocation(line: 0, scope: !10282)
!10288 = !DILocation(line: 245, column: 48, scope: !10282)
!10289 = !DILocation(line: 247, column: 33, scope: !10282)
!10290 = !DILocation(line: 247, column: 2, scope: !10282)
!10291 = !DILocation(line: 248, column: 1, scope: !10282)
!10292 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1456, file: !1456, line: 107, type: !10251, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10293)
!10293 = !{!10294, !10295, !10296, !10297, !10298}
!10294 = !DILocalVariable(name: "dev", arg: 1, scope: !10292, file: !1456, line: 107, type: !1361)
!10295 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !10292, file: !1456, line: 107, type: !118)
!10296 = !DILocalVariable(name: "config", scope: !10292, file: !1456, line: 109, type: !9871)
!10297 = !DILocalVariable(name: "data", scope: !10292, file: !1456, line: 110, type: !9994)
!10298 = !DILocalVariable(name: "clock_rate", scope: !10292, file: !1456, line: 112, type: !118)
!10299 = !DILocation(line: 0, scope: !10292)
!10300 = !DILocation(line: 109, column: 48, scope: !10292)
!10301 = !DILocation(line: 110, column: 38, scope: !10292)
!10302 = !DILocation(line: 112, column: 2, scope: !10292)
!10303 = !DILocation(line: 123, column: 36, scope: !10304)
!10304 = distinct !DILexicalBlock(scope: !10305, file: !1456, line: 123, column: 7)
!10305 = distinct !DILexicalBlock(scope: !10306, file: !1456, line: 122, column: 9)
!10306 = distinct !DILexicalBlock(scope: !10292, file: !1456, line: 115, column: 6)
!10307 = !DILocation(line: 124, column: 42, scope: !10304)
!10308 = !DILocation(line: 123, column: 7, scope: !10304)
!10309 = !DILocation(line: 125, column: 22, scope: !10304)
!10310 = !DILocation(line: 123, column: 7, scope: !10305)
!10311 = !DILocation(line: 126, column: 4, scope: !10312)
!10312 = distinct !DILexicalBlock(scope: !10313, file: !1456, line: 126, column: 4)
!10313 = distinct !DILexicalBlock(scope: !10314, file: !1456, line: 126, column: 4)
!10314 = distinct !DILexicalBlock(scope: !10315, file: !1456, line: 126, column: 4)
!10315 = distinct !DILexicalBlock(scope: !10316, file: !1456, line: 126, column: 4)
!10316 = distinct !DILexicalBlock(scope: !10304, file: !1456, line: 125, column: 27)
!10317 = !DILocation(line: 127, column: 4, scope: !10316)
!10318 = !DILocation(line: 176, column: 36, scope: !10292)
!10319 = !DILocation(line: 176, column: 3, scope: !10292)
!10320 = !DILocation(line: 179, column: 32, scope: !10292)
!10321 = !DILocation(line: 180, column: 10, scope: !10292)
!10322 = !DILocation(line: 179, column: 3, scope: !10292)
!10323 = !DILocation(line: 189, column: 3, scope: !10324)
!10324 = distinct !DILexicalBlock(scope: !10325, file: !1456, line: 189, column: 3)
!10325 = distinct !DILexicalBlock(scope: !10292, file: !1456, line: 189, column: 3)
!10326 = !DILocation(line: 189, column: 3, scope: !10325)
!10327 = !DILocation(line: 189, column: 3, scope: !10328)
!10328 = distinct !DILexicalBlock(scope: !10324, file: !1456, line: 189, column: 3)
!10329 = !DILocation(line: 195, column: 1, scope: !10292)
!10330 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !10180, file: !10180, line: 410, type: !10243, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10331)
!10331 = !{!10332}
!10332 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10330, file: !10180, line: 410, type: !1402)
!10333 = !DILocation(line: 0, scope: !10330)
!10334 = !DILocation(line: 412, column: 3, scope: !10330)
!10335 = !DILocation(line: 413, column: 1, scope: !10330)
!10336 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !816, file: !816, line: 216, type: !1435, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10337)
!10337 = !{!10338, !10339, !10340, !10341}
!10338 = !DILocalVariable(name: "dev", arg: 1, scope: !10336, file: !816, line: 216, type: !1361)
!10339 = !DILocalVariable(name: "sys", arg: 2, scope: !10336, file: !816, line: 217, type: !911)
!10340 = !DILocalVariable(name: "rate", arg: 3, scope: !10336, file: !816, line: 218, type: !867)
!10341 = !DILocalVariable(name: "api", scope: !10336, file: !816, line: 220, type: !1413)
!10342 = !DILocation(line: 0, scope: !10336)
!10343 = !DILocation(line: 221, column: 49, scope: !10336)
!10344 = !DILocation(line: 223, column: 11, scope: !10345)
!10345 = distinct !DILexicalBlock(scope: !10336, file: !816, line: 223, column: 6)
!10346 = !DILocation(line: 223, column: 20, scope: !10345)
!10347 = !DILocation(line: 223, column: 6, scope: !10336)
!10348 = !DILocation(line: 227, column: 9, scope: !10336)
!10349 = !DILocation(line: 227, column: 2, scope: !10336)
!10350 = !DILocation(line: 228, column: 1, scope: !10336)
!10351 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !6091, file: !6091, line: 175, type: !6092, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10352)
!10352 = !{!10353}
!10353 = !DILocalVariable(name: "level", arg: 1, scope: !10351, file: !6091, line: 175, type: !119)
!10354 = !DILocation(line: 0, scope: !10351)
!10355 = !DILocation(line: 177, column: 2, scope: !10351)
!10356 = !DILocation(line: 189, column: 1, scope: !10351)
!10357 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !10180, file: !10180, line: 615, type: !10358, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10360)
!10358 = !DISubroutineType(types: !10359)
!10359 = !{null, !1402, !118}
!10360 = !{!10361, !10362}
!10361 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10357, file: !10180, line: 615, type: !1402)
!10362 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !10357, file: !10180, line: 615, type: !118)
!10363 = !DILocation(line: 0, scope: !10357)
!10364 = !DILocation(line: 617, column: 3, scope: !10357)
!10365 = !DILocation(line: 618, column: 1, scope: !10357)
!10366 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !10180, file: !10180, line: 1020, type: !10367, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10369)
!10367 = !DISubroutineType(types: !10368)
!10368 = !{null, !1402, !118, !118, !118}
!10369 = !{!10370, !10371, !10372, !10373}
!10370 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10366, file: !10180, line: 1020, type: !1402)
!10371 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !10366, file: !10180, line: 1020, type: !118)
!10372 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !10366, file: !10180, line: 1020, type: !118)
!10373 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !10366, file: !10180, line: 1021, type: !118)
!10374 = !DILocation(line: 0, scope: !10366)
!10375 = !DILocation(line: 1029, column: 30, scope: !10376)
!10376 = distinct !DILexicalBlock(scope: !10377, file: !10180, line: 1028, column: 3)
!10377 = distinct !DILexicalBlock(scope: !10366, file: !10180, line: 1023, column: 7)
!10378 = !DILocation(line: 1029, column: 19, scope: !10376)
!10379 = !DILocation(line: 1029, column: 13, scope: !10376)
!10380 = !DILocation(line: 1029, column: 17, scope: !10376)
!10381 = !DILocation(line: 1031, column: 1, scope: !10366)
!10382 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !10180, file: !10180, line: 949, type: !10358, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10383)
!10383 = !{!10384, !10385}
!10384 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10382, file: !10180, line: 949, type: !1402)
!10385 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !10382, file: !10180, line: 949, type: !118)
!10386 = !DILocation(line: 0, scope: !10382)
!10387 = !DILocation(line: 951, column: 3, scope: !10382)
!10388 = !DILocation(line: 952, column: 1, scope: !10382)
!10389 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !10180, file: !10180, line: 588, type: !10358, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10390)
!10390 = !{!10391, !10392}
!10391 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10389, file: !10180, line: 588, type: !1402)
!10392 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10389, file: !10180, line: 588, type: !118)
!10393 = !DILocation(line: 0, scope: !10389)
!10394 = !DILocation(line: 590, column: 3, scope: !10389)
!10395 = !DILocation(line: 591, column: 1, scope: !10389)
!10396 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !10180, file: !10180, line: 805, type: !10358, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10397)
!10397 = !{!10398, !10399}
!10398 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10396, file: !10180, line: 805, type: !1402)
!10399 = !DILocalVariable(name: "StopBits", arg: 2, scope: !10396, file: !10180, line: 805, type: !118)
!10400 = !DILocation(line: 0, scope: !10396)
!10401 = !DILocation(line: 807, column: 3, scope: !10396)
!10402 = !DILocation(line: 808, column: 1, scope: !10396)
!10403 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !10180, file: !10180, line: 532, type: !10358, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10404)
!10404 = !{!10405, !10406}
!10405 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10403, file: !10180, line: 532, type: !1402)
!10406 = !DILocalVariable(name: "Parity", arg: 2, scope: !10403, file: !10180, line: 532, type: !118)
!10407 = !DILocation(line: 0, scope: !10403)
!10408 = !DILocation(line: 534, column: 3, scope: !10403)
!10409 = !DILocation(line: 535, column: 1, scope: !10403)
!10410 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !10180, file: !10180, line: 1770, type: !10181, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10411)
!10411 = !{!10412}
!10412 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10410, file: !10180, line: 1770, type: !1402)
!10413 = !DILocation(line: 0, scope: !10410)
!10414 = !DILocation(line: 1772, column: 11, scope: !10410)
!10415 = !DILocation(line: 1772, column: 46, scope: !10410)
!10416 = !DILocation(line: 1772, column: 3, scope: !10410)
!10417 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !10180, file: !10180, line: 1737, type: !10181, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10418)
!10418 = !{!10419}
!10419 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10417, file: !10180, line: 1737, type: !1402)
!10420 = !DILocation(line: 0, scope: !10417)
!10421 = !DILocation(line: 1739, column: 11, scope: !10417)
!10422 = !DILocation(line: 1739, column: 3, scope: !10417)
!10423 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !10180, file: !10180, line: 1748, type: !10181, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10424)
!10424 = !{!10425}
!10425 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10423, file: !10180, line: 1748, type: !1402)
!10426 = !DILocation(line: 0, scope: !10423)
!10427 = !DILocation(line: 1750, column: 11, scope: !10423)
!10428 = !DILocation(line: 1750, column: 45, scope: !10423)
!10429 = !DILocation(line: 1750, column: 3, scope: !10423)
!10430 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !10180, file: !10180, line: 1827, type: !10181, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10431)
!10431 = !{!10432}
!10432 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10430, file: !10180, line: 1827, type: !1402)
!10433 = !DILocation(line: 0, scope: !10430)
!10434 = !DILocation(line: 1829, column: 11, scope: !10430)
!10435 = !DILocation(line: 1829, column: 46, scope: !10430)
!10436 = !DILocation(line: 1829, column: 3, scope: !10430)
!10437 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !10180, file: !10180, line: 1992, type: !10243, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10438)
!10438 = !{!10439}
!10439 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10437, file: !10180, line: 1992, type: !1402)
!10440 = !DILocation(line: 0, scope: !10437)
!10441 = !DILocation(line: 1994, column: 3, scope: !10437)
!10442 = !DILocation(line: 1995, column: 1, scope: !10437)
!10443 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !10180, file: !10180, line: 1934, type: !10243, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10444)
!10444 = !{!10445, !10446}
!10445 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10443, file: !10180, line: 1934, type: !1402)
!10446 = !DILocalVariable(name: "tmpreg", scope: !10443, file: !10180, line: 1936, type: !314)
!10447 = !DILocation(line: 0, scope: !10443)
!10448 = !DILocation(line: 1936, column: 3, scope: !10443)
!10449 = !DILocation(line: 1936, column: 17, scope: !10443)
!10450 = !DILocation(line: 1937, column: 20, scope: !10443)
!10451 = !DILocation(line: 1937, column: 10, scope: !10443)
!10452 = !DILocation(line: 1938, column: 10, scope: !10443)
!10453 = !DILocation(line: 1939, column: 20, scope: !10443)
!10454 = !DILocation(line: 1939, column: 10, scope: !10443)
!10455 = !DILocation(line: 1940, column: 10, scope: !10443)
!10456 = !DILocation(line: 1941, column: 1, scope: !10443)
!10457 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !10180, file: !10180, line: 1877, type: !10243, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10458)
!10458 = !{!10459, !10460}
!10459 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10457, file: !10180, line: 1877, type: !1402)
!10460 = !DILocalVariable(name: "tmpreg", scope: !10457, file: !10180, line: 1879, type: !314)
!10461 = !DILocation(line: 0, scope: !10457)
!10462 = !DILocation(line: 1879, column: 3, scope: !10457)
!10463 = !DILocation(line: 1879, column: 17, scope: !10457)
!10464 = !DILocation(line: 1880, column: 20, scope: !10457)
!10465 = !DILocation(line: 1880, column: 10, scope: !10457)
!10466 = !DILocation(line: 1881, column: 10, scope: !10457)
!10467 = !DILocation(line: 1882, column: 20, scope: !10457)
!10468 = !DILocation(line: 1882, column: 10, scope: !10457)
!10469 = !DILocation(line: 1883, column: 10, scope: !10457)
!10470 = !DILocation(line: 1884, column: 1, scope: !10457)
!10471 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !10180, file: !10180, line: 1896, type: !10243, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10472)
!10472 = !{!10473, !10474}
!10473 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10471, file: !10180, line: 1896, type: !1402)
!10474 = !DILocalVariable(name: "tmpreg", scope: !10471, file: !10180, line: 1898, type: !314)
!10475 = !DILocation(line: 0, scope: !10471)
!10476 = !DILocation(line: 1898, column: 3, scope: !10471)
!10477 = !DILocation(line: 1898, column: 17, scope: !10471)
!10478 = !DILocation(line: 1899, column: 20, scope: !10471)
!10479 = !DILocation(line: 1899, column: 10, scope: !10471)
!10480 = !DILocation(line: 1900, column: 10, scope: !10471)
!10481 = !DILocation(line: 1901, column: 20, scope: !10471)
!10482 = !DILocation(line: 1901, column: 10, scope: !10471)
!10483 = !DILocation(line: 1902, column: 10, scope: !10471)
!10484 = !DILocation(line: 1903, column: 1, scope: !10471)
!10485 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !10180, file: !10180, line: 1915, type: !10243, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10486)
!10486 = !{!10487, !10488}
!10487 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10485, file: !10180, line: 1915, type: !1402)
!10488 = !DILocalVariable(name: "tmpreg", scope: !10485, file: !10180, line: 1917, type: !314)
!10489 = !DILocation(line: 0, scope: !10485)
!10490 = !DILocation(line: 1917, column: 3, scope: !10485)
!10491 = !DILocation(line: 1917, column: 17, scope: !10485)
!10492 = !DILocation(line: 1918, column: 20, scope: !10485)
!10493 = !DILocation(line: 1918, column: 10, scope: !10485)
!10494 = !DILocation(line: 1919, column: 10, scope: !10485)
!10495 = !DILocation(line: 1920, column: 20, scope: !10485)
!10496 = !DILocation(line: 1920, column: 10, scope: !10485)
!10497 = !DILocation(line: 1921, column: 10, scope: !10485)
!10498 = !DILocation(line: 1922, column: 1, scope: !10485)
!10499 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !10180, file: !10180, line: 1814, type: !10181, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10500)
!10500 = !{!10501}
!10501 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10499, file: !10180, line: 1814, type: !1402)
!10502 = !DILocation(line: 0, scope: !10499)
!10503 = !DILocation(line: 1816, column: 11, scope: !10499)
!10504 = !DILocation(line: 1816, column: 46, scope: !10499)
!10505 = !DILocation(line: 1816, column: 3, scope: !10499)
!10506 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !10180, file: !10180, line: 2426, type: !10507, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10509)
!10507 = !DISubroutineType(types: !10508)
!10508 = !{null, !1402, !185}
!10509 = !{!10510, !10511}
!10510 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10506, file: !10180, line: 2426, type: !1402)
!10511 = !DILocalVariable(name: "Value", arg: 2, scope: !10506, file: !10180, line: 2426, type: !185)
!10512 = !DILocation(line: 0, scope: !10506)
!10513 = !DILocation(line: 2428, column: 16, scope: !10506)
!10514 = !DILocation(line: 2428, column: 11, scope: !10506)
!10515 = !DILocation(line: 2428, column: 14, scope: !10506)
!10516 = !DILocation(line: 2429, column: 1, scope: !10506)
!10517 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !10180, file: !10180, line: 1792, type: !10181, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10518)
!10518 = !{!10519}
!10519 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10517, file: !10180, line: 1792, type: !1402)
!10520 = !DILocation(line: 0, scope: !10517)
!10521 = !DILocation(line: 1794, column: 11, scope: !10517)
!10522 = !DILocation(line: 1794, column: 47, scope: !10517)
!10523 = !DILocation(line: 1794, column: 3, scope: !10517)
!10524 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !10180, file: !10180, line: 2403, type: !10525, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10527)
!10525 = !DISubroutineType(types: !10526)
!10526 = !{!185, !1402}
!10527 = !{!10528}
!10528 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10524, file: !10180, line: 2403, type: !1402)
!10529 = !DILocation(line: 0, scope: !10524)
!10530 = !DILocation(line: 2405, column: 20, scope: !10524)
!10531 = !DILocation(line: 2405, column: 10, scope: !10524)
!10532 = !DILocation(line: 2405, column: 3, scope: !10524)
!10533 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1456, file: !1456, line: 1583, type: !1382, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10534)
!10534 = !{!10535, !10536, !10537, !10538, !10539, !10540}
!10535 = !DILocalVariable(name: "dev", arg: 1, scope: !10533, file: !1456, line: 1583, type: !1361)
!10536 = !DILocalVariable(name: "config", scope: !10533, file: !1456, line: 1585, type: !9871)
!10537 = !DILocalVariable(name: "data", scope: !10533, file: !1456, line: 1586, type: !9994)
!10538 = !DILocalVariable(name: "ll_parity", scope: !10533, file: !1456, line: 1587, type: !118)
!10539 = !DILocalVariable(name: "ll_datawidth", scope: !10533, file: !1456, line: 1588, type: !118)
!10540 = !DILocalVariable(name: "err", scope: !10533, file: !1456, line: 1589, type: !119)
!10541 = !DILocation(line: 0, scope: !10533)
!10542 = !DILocation(line: 1585, column: 48, scope: !10533)
!10543 = !DILocation(line: 1586, column: 38, scope: !10533)
!10544 = !DILocation(line: 1591, column: 2, scope: !10533)
!10545 = !DILocation(line: 1593, column: 29, scope: !10546)
!10546 = distinct !DILexicalBlock(scope: !10533, file: !1456, line: 1593, column: 6)
!10547 = !DILocation(line: 1593, column: 7, scope: !10546)
!10548 = !DILocation(line: 1593, column: 6, scope: !10533)
!10549 = !DILocation(line: 1594, column: 3, scope: !10550)
!10550 = distinct !DILexicalBlock(scope: !10551, file: !1456, line: 1594, column: 3)
!10551 = distinct !DILexicalBlock(scope: !10552, file: !1456, line: 1594, column: 3)
!10552 = distinct !DILexicalBlock(scope: !10553, file: !1456, line: 1594, column: 3)
!10553 = distinct !DILexicalBlock(scope: !10554, file: !1456, line: 1594, column: 3)
!10554 = distinct !DILexicalBlock(scope: !10546, file: !1456, line: 1593, column: 37)
!10555 = !DILocation(line: 1595, column: 3, scope: !10554)
!10556 = !DILocation(line: 1599, column: 31, scope: !10533)
!10557 = !DILocation(line: 1599, column: 71, scope: !10533)
!10558 = !DILocation(line: 1599, column: 8, scope: !10533)
!10559 = !DILocation(line: 1600, column: 10, scope: !10560)
!10560 = distinct !DILexicalBlock(scope: !10533, file: !1456, line: 1600, column: 6)
!10561 = !DILocation(line: 1600, column: 6, scope: !10533)
!10562 = !DILocation(line: 1601, column: 3, scope: !10563)
!10563 = distinct !DILexicalBlock(scope: !10564, file: !1456, line: 1601, column: 3)
!10564 = distinct !DILexicalBlock(scope: !10565, file: !1456, line: 1601, column: 3)
!10565 = distinct !DILexicalBlock(scope: !10566, file: !1456, line: 1601, column: 3)
!10566 = distinct !DILexicalBlock(scope: !10567, file: !1456, line: 1601, column: 3)
!10567 = distinct !DILexicalBlock(scope: !10560, file: !1456, line: 1600, column: 16)
!10568 = !DILocation(line: 1602, column: 3, scope: !10567)
!10569 = !DILocation(line: 1616, column: 36, scope: !10533)
!10570 = !DILocation(line: 1616, column: 8, scope: !10533)
!10571 = !DILocation(line: 1617, column: 10, scope: !10572)
!10572 = distinct !DILexicalBlock(scope: !10533, file: !1456, line: 1617, column: 6)
!10573 = !DILocation(line: 1617, column: 6, scope: !10533)
!10574 = !DILocation(line: 1621, column: 27, scope: !10533)
!10575 = !DILocation(line: 1621, column: 2, scope: !10533)
!10576 = !DILocation(line: 1624, column: 40, scope: !10533)
!10577 = !DILocation(line: 1624, column: 2, scope: !10533)
!10578 = !DILocation(line: 1630, column: 14, scope: !10579)
!10579 = distinct !DILexicalBlock(scope: !10533, file: !1456, line: 1630, column: 6)
!10580 = !DILocation(line: 1630, column: 6, scope: !10533)
!10581 = !DILocation(line: 1640, column: 4, scope: !10582)
!10582 = distinct !DILexicalBlock(scope: !10583, file: !1456, line: 1640, column: 4)
!10583 = distinct !DILexicalBlock(scope: !10584, file: !1456, line: 1640, column: 4)
!10584 = distinct !DILexicalBlock(scope: !10585, file: !1456, line: 1640, column: 4)
!10585 = distinct !DILexicalBlock(scope: !10586, file: !1456, line: 1640, column: 4)
!10586 = distinct !DILexicalBlock(scope: !10587, file: !1456, line: 1639, column: 28)
!10587 = distinct !DILexicalBlock(scope: !10588, file: !1456, line: 1639, column: 7)
!10588 = distinct !DILexicalBlock(scope: !10589, file: !1456, line: 1638, column: 9)
!10589 = distinct !DILexicalBlock(scope: !10579, file: !1456, line: 1634, column: 13)
!10590 = !DILocation(line: 0, scope: !10579)
!10591 = !DILocation(line: 1649, column: 35, scope: !10533)
!10592 = !DILocation(line: 1649, column: 2, scope: !10533)
!10593 = !DILocation(line: 1654, column: 14, scope: !10594)
!10594 = distinct !DILexicalBlock(scope: !10533, file: !1456, line: 1654, column: 6)
!10595 = !DILocation(line: 1654, column: 6, scope: !10533)
!10596 = !DILocation(line: 1655, column: 3, scope: !10597)
!10597 = distinct !DILexicalBlock(scope: !10594, file: !1456, line: 1654, column: 31)
!10598 = !DILocation(line: 1656, column: 2, scope: !10597)
!10599 = !DILocation(line: 1659, column: 37, scope: !10533)
!10600 = !DILocation(line: 1659, column: 2, scope: !10533)
!10601 = !DILocation(line: 1662, column: 14, scope: !10602)
!10602 = distinct !DILexicalBlock(scope: !10533, file: !1456, line: 1662, column: 6)
!10603 = !DILocation(line: 1662, column: 6, scope: !10533)
!10604 = !DILocation(line: 1663, column: 37, scope: !10605)
!10605 = distinct !DILexicalBlock(scope: !10602, file: !1456, line: 1662, column: 27)
!10606 = !DILocation(line: 1663, column: 3, scope: !10605)
!10607 = !DILocation(line: 1664, column: 2, scope: !10605)
!10608 = !DILocation(line: 1684, column: 26, scope: !10533)
!10609 = !DILocation(line: 1684, column: 2, scope: !10533)
!10610 = !DILocation(line: 1722, column: 2, scope: !10533)
!10611 = !DILocation(line: 1724, column: 1, scope: !10533)
!10612 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1456, file: !1456, line: 651, type: !10613, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10615)
!10613 = !DISubroutineType(types: !10614)
!10614 = !{null, !1361}
!10615 = !{!10616, !10617, !10618}
!10616 = !DILocalVariable(name: "dev", arg: 1, scope: !10612, file: !1456, line: 651, type: !1361)
!10617 = !DILocalVariable(name: "data", scope: !10612, file: !1456, line: 653, type: !9994)
!10618 = !DILocalVariable(name: "clk", scope: !10612, file: !1456, line: 654, type: !10619)
!10619 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1361)
!10620 = !DILocation(line: 0, scope: !10612)
!10621 = !DILocation(line: 653, column: 38, scope: !10612)
!10622 = !DILocation(line: 656, column: 8, scope: !10612)
!10623 = !DILocation(line: 656, column: 14, scope: !10612)
!10624 = !DILocation(line: 657, column: 1, scope: !10612)
!10625 = distinct !DISubprogram(name: "device_is_ready", scope: !8990, file: !8990, line: 47, type: !10626, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10628)
!10626 = !DISubroutineType(types: !10627)
!10627 = !{!345, !1361}
!10628 = !{!10629}
!10629 = !DILocalVariable(name: "dev", arg: 1, scope: !10625, file: !8990, line: 47, type: !1361)
!10630 = !DILocation(line: 0, scope: !10625)
!10631 = !DILocation(line: 55, column: 2, scope: !10632)
!10632 = distinct !DILexicalBlock(scope: !10625, file: !8990, line: 55, column: 2)
!10633 = !{i64 2154458442}
!10634 = !DILocation(line: 56, column: 9, scope: !10625)
!10635 = !DILocation(line: 56, column: 2, scope: !10625)
!10636 = distinct !DISubprogram(name: "clock_control_on", scope: !816, file: !816, line: 123, type: !1420, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10637)
!10637 = !{!10638, !10639, !10640}
!10638 = !DILocalVariable(name: "dev", arg: 1, scope: !10636, file: !816, line: 123, type: !1361)
!10639 = !DILocalVariable(name: "sys", arg: 2, scope: !10636, file: !816, line: 124, type: !911)
!10640 = !DILocalVariable(name: "api", scope: !10636, file: !816, line: 126, type: !1413)
!10641 = !DILocation(line: 0, scope: !10636)
!10642 = !DILocation(line: 127, column: 49, scope: !10636)
!10643 = !DILocation(line: 129, column: 14, scope: !10636)
!10644 = !DILocation(line: 129, column: 9, scope: !10636)
!10645 = !DILocation(line: 129, column: 2, scope: !10636)
!10646 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1512, file: !1512, line: 342, type: !10647, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10649)
!10647 = !DISubroutineType(types: !10648)
!10648 = !{!119, !1509, !185}
!10649 = !{!10650, !10651, !10652, !10653}
!10650 = !DILocalVariable(name: "config", arg: 1, scope: !10646, file: !1512, line: 342, type: !1509)
!10651 = !DILocalVariable(name: "id", arg: 2, scope: !10646, file: !1512, line: 343, type: !185)
!10652 = !DILocalVariable(name: "ret", scope: !10646, file: !1512, line: 345, type: !119)
!10653 = !DILocalVariable(name: "state", scope: !10646, file: !1512, line: 346, type: !1515)
!10654 = !DILocation(line: 0, scope: !10646)
!10655 = !DILocation(line: 346, column: 2, scope: !10646)
!10656 = !DILocation(line: 348, column: 8, scope: !10646)
!10657 = !DILocation(line: 349, column: 10, scope: !10658)
!10658 = distinct !DILexicalBlock(scope: !10646, file: !1512, line: 349, column: 6)
!10659 = !DILocation(line: 349, column: 6, scope: !10646)
!10660 = !DILocation(line: 353, column: 44, scope: !10646)
!10661 = !DILocation(line: 353, column: 9, scope: !10646)
!10662 = !DILocation(line: 353, column: 2, scope: !10646)
!10663 = !DILocation(line: 354, column: 1, scope: !10646)
!10664 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !10180, file: !10180, line: 497, type: !10358, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10665)
!10665 = !{!10666, !10667, !10668}
!10666 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10664, file: !10180, line: 497, type: !1402)
!10667 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !10664, file: !10180, line: 497, type: !118)
!10668 = !DILocalVariable(name: "val", scope: !10669, file: !10180, line: 499, type: !118)
!10669 = distinct !DILexicalBlock(scope: !10664, file: !10180, line: 499, column: 3)
!10670 = !DILocation(line: 0, scope: !10664)
!10671 = !DILocation(line: 499, column: 3, scope: !10669)
!10672 = !DILocalVariable(name: "addr", arg: 1, scope: !10673, file: !6334, line: 476, type: !1452)
!10673 = distinct !DISubprogram(name: "__LDREXW", scope: !6334, file: !6334, line: 476, type: !10674, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10676)
!10674 = !DISubroutineType(types: !10675)
!10675 = !{!118, !1452}
!10676 = !{!10672, !10677}
!10677 = !DILocalVariable(name: "result", scope: !10673, file: !6334, line: 478, type: !118)
!10678 = !DILocation(line: 0, scope: !10673, inlinedAt: !10679)
!10679 = distinct !DILocation(line: 499, column: 3, scope: !10680)
!10680 = distinct !DILexicalBlock(scope: !10669, file: !10180, line: 499, column: 3)
!10681 = !DILocation(line: 480, column: 4, scope: !10673, inlinedAt: !10679)
!10682 = !{i64 2948978}
!10683 = !DILocation(line: 499, column: 3, scope: !10680)
!10684 = !DILocation(line: 0, scope: !10669)
!10685 = !DILocalVariable(name: "value", arg: 1, scope: !10686, file: !6334, line: 527, type: !118)
!10686 = distinct !DISubprogram(name: "__STREXW", scope: !6334, file: !6334, line: 527, type: !10687, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10689)
!10687 = !DISubroutineType(types: !10688)
!10688 = !{!118, !118, !1452}
!10689 = !{!10685, !10690, !10691}
!10690 = !DILocalVariable(name: "addr", arg: 2, scope: !10686, file: !6334, line: 527, type: !1452)
!10691 = !DILocalVariable(name: "result", scope: !10686, file: !6334, line: 529, type: !118)
!10692 = !DILocation(line: 0, scope: !10686, inlinedAt: !10693)
!10693 = distinct !DILocation(line: 499, column: 3, scope: !10669)
!10694 = !DILocation(line: 531, column: 4, scope: !10686, inlinedAt: !10693)
!10695 = !{i64 2950414}
!10696 = distinct !{!10696, !10671, !10671}
!10697 = !DILocation(line: 500, column: 1, scope: !10664)
!10698 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !10180, file: !10180, line: 850, type: !10367, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10699)
!10699 = !{!10700, !10701, !10702, !10703}
!10700 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10698, file: !10180, line: 850, type: !1402)
!10701 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10698, file: !10180, line: 850, type: !118)
!10702 = !DILocalVariable(name: "Parity", arg: 3, scope: !10698, file: !10180, line: 850, type: !118)
!10703 = !DILocalVariable(name: "StopBits", arg: 4, scope: !10698, file: !10180, line: 851, type: !118)
!10704 = !DILocation(line: 0, scope: !10698)
!10705 = !DILocation(line: 853, column: 3, scope: !10698)
!10706 = !DILocation(line: 854, column: 3, scope: !10698)
!10707 = !DILocation(line: 855, column: 1, scope: !10698)
!10708 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !10180, file: !10180, line: 1337, type: !10243, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10709)
!10709 = !{!10710}
!10710 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10708, file: !10180, line: 1337, type: !1402)
!10711 = !DILocation(line: 0, scope: !10708)
!10712 = !DILocation(line: 1339, column: 3, scope: !10708)
!10713 = !DILocation(line: 1340, column: 1, scope: !10708)
!10714 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1512, file: !1512, line: 316, type: !10715, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10717)
!10715 = !DISubroutineType(types: !10716)
!10716 = !{!119, !1509, !1515}
!10717 = !{!10718, !10719, !10720}
!10718 = !DILocalVariable(name: "config", arg: 1, scope: !10714, file: !1512, line: 317, type: !1509)
!10719 = !DILocalVariable(name: "state", arg: 2, scope: !10714, file: !1512, line: 318, type: !1515)
!10720 = !DILocalVariable(name: "reg", scope: !10714, file: !1512, line: 320, type: !22)
!10721 = !DILocation(line: 0, scope: !10714)
!10722 = !DILocation(line: 329, column: 39, scope: !10714)
!10723 = !DILocation(line: 329, column: 52, scope: !10714)
!10724 = !DILocation(line: 329, column: 9, scope: !10714)
!10725 = !DILocation(line: 329, column: 2, scope: !10714)
!10726 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !334, file: !334, line: 730, type: !10626, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10727)
!10727 = !{!10728}
!10728 = !DILocalVariable(name: "dev", arg: 1, scope: !10726, file: !334, line: 730, type: !1361)
!10729 = !DILocation(line: 0, scope: !10726)
!10730 = !DILocation(line: 732, column: 9, scope: !10726)
!10731 = !DILocation(line: 732, column: 2, scope: !10726)
!10732 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1659, file: !1659, line: 270, type: !1665, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1581, retainedNodes: !10733)
!10733 = !{!10734}
!10734 = !DILocalVariable(name: "dev", arg: 1, scope: !10732, file: !1659, line: 270, type: !1667)
!10735 = !DILocation(line: 0, scope: !10732)
!10736 = !DILocation(line: 274, column: 2, scope: !10732)
!10737 = !DILocation(line: 275, column: 12, scope: !10732)
!10738 = !DILocation(line: 276, column: 15, scope: !10732)
!10739 = !DILocation(line: 277, column: 16, scope: !10732)
!10740 = !DILocation(line: 278, column: 15, scope: !10732)
!10741 = !DILocation(line: 279, column: 16, scope: !10732)
!10742 = !DILocation(line: 282, column: 2, scope: !10732)
!10743 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !533, file: !533, line: 1814, type: !6374, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1581, retainedNodes: !10744)
!10744 = !{!10745, !10746}
!10745 = !DILocalVariable(name: "IRQn", arg: 1, scope: !10743, file: !533, line: 1814, type: !768)
!10746 = !DILocalVariable(name: "priority", arg: 2, scope: !10743, file: !533, line: 1814, type: !118)
!10747 = !DILocation(line: 0, scope: !10743)
!10748 = !DILocation(line: 1822, column: 46, scope: !10749)
!10749 = distinct !DILexicalBlock(scope: !10750, file: !533, line: 1821, column: 3)
!10750 = distinct !DILexicalBlock(scope: !10743, file: !533, line: 1816, column: 7)
!10751 = !DILocation(line: 1824, column: 1, scope: !10743)
!10752 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1659, file: !1659, line: 118, type: !6271, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1581, retainedNodes: !10753)
!10753 = !{!10754, !10755}
!10754 = !DILocalVariable(name: "arg", arg: 1, scope: !10752, file: !1659, line: 118, type: !113)
!10755 = !DILocalVariable(name: "dticks", scope: !10752, file: !1659, line: 121, type: !118)
!10756 = !DILocation(line: 0, scope: !10752)
!10757 = !DILocation(line: 124, column: 2, scope: !10752)
!10758 = !DILocation(line: 129, column: 17, scope: !10752)
!10759 = !DILocation(line: 129, column: 14, scope: !10752)
!10760 = !DILocation(line: 130, column: 15, scope: !10752)
!10761 = !DILocation(line: 145, column: 27, scope: !10762)
!10762 = distinct !DILexicalBlock(scope: !10763, file: !1659, line: 132, column: 16)
!10763 = distinct !DILexicalBlock(scope: !10752, file: !1659, line: 132, column: 6)
!10764 = !DILocation(line: 145, column: 25, scope: !10762)
!10765 = !DILocation(line: 145, column: 45, scope: !10762)
!10766 = !DILocation(line: 146, column: 30, scope: !10762)
!10767 = !DILocation(line: 146, column: 20, scope: !10762)
!10768 = !DILocation(line: 147, column: 3, scope: !10762)
!10769 = !DILocation(line: 151, column: 2, scope: !10752)
!10770 = !DILocation(line: 152, column: 1, scope: !10752)
!10771 = distinct !DISubprogram(name: "elapsed", scope: !1659, file: !1659, line: 85, type: !3220, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1581, retainedNodes: !10772)
!10772 = !{!10773, !10774, !10775}
!10773 = !DILocalVariable(name: "val1", scope: !10771, file: !1659, line: 87, type: !118)
!10774 = !DILocalVariable(name: "ctrl", scope: !10771, file: !1659, line: 88, type: !118)
!10775 = !DILocalVariable(name: "val2", scope: !10771, file: !1659, line: 89, type: !118)
!10776 = !DILocation(line: 87, column: 27, scope: !10771)
!10777 = !DILocation(line: 0, scope: !10771)
!10778 = !DILocation(line: 88, column: 27, scope: !10771)
!10779 = !DILocation(line: 89, column: 27, scope: !10771)
!10780 = !DILocation(line: 105, column: 12, scope: !10781)
!10781 = distinct !DILexicalBlock(scope: !10771, file: !1659, line: 105, column: 6)
!10782 = !DILocation(line: 106, column: 6, scope: !10781)
!10783 = !DILocation(line: 107, column: 16, scope: !10784)
!10784 = distinct !DILexicalBlock(scope: !10781, file: !1659, line: 106, column: 24)
!10785 = !DILocation(line: 111, column: 18, scope: !10784)
!10786 = !DILocation(line: 112, column: 2, scope: !10784)
!10787 = !DILocation(line: 114, column: 20, scope: !10771)
!10788 = !DILocation(line: 114, column: 30, scope: !10771)
!10789 = !DILocation(line: 114, column: 28, scope: !10771)
!10790 = !DILocation(line: 114, column: 2, scope: !10771)
!10791 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1659, file: !1659, line: 154, type: !10792, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1581, retainedNodes: !10794)
!10792 = !DISubroutineType(types: !10793)
!10793 = !{null, !742, !345}
!10794 = !{!10795, !10796, !10797, !10798, !10799, !10800, !10801, !10806, !10807}
!10795 = !DILocalVariable(name: "ticks", arg: 1, scope: !10791, file: !1659, line: 154, type: !742)
!10796 = !DILocalVariable(name: "idle", arg: 2, scope: !10791, file: !1659, line: 154, type: !345)
!10797 = !DILocalVariable(name: "delay", scope: !10791, file: !1659, line: 169, type: !118)
!10798 = !DILocalVariable(name: "val1", scope: !10791, file: !1659, line: 170, type: !118)
!10799 = !DILocalVariable(name: "val2", scope: !10791, file: !1659, line: 170, type: !118)
!10800 = !DILocalVariable(name: "last_load_", scope: !10791, file: !1659, line: 171, type: !118)
!10801 = !DILocalVariable(name: "key", scope: !10791, file: !1659, line: 176, type: !10802)
!10802 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !259, line: 106, baseType: !10803)
!10803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !259, line: 32, size: 32, elements: !10804)
!10804 = !{!10805}
!10805 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !10803, file: !259, line: 33, baseType: !119, size: 32)
!10806 = !DILocalVariable(name: "pending", scope: !10791, file: !1659, line: 178, type: !118)
!10807 = !DILocalVariable(name: "unannounced", scope: !10791, file: !1659, line: 185, type: !118)
!10808 = !DILocation(line: 0, scope: !10791)
!10809 = !DILocation(line: 162, column: 49, scope: !10810)
!10810 = distinct !DILexicalBlock(scope: !10791, file: !1659, line: 162, column: 6)
!10811 = !DILocation(line: 163, column: 17, scope: !10812)
!10812 = distinct !DILexicalBlock(scope: !10810, file: !1659, line: 162, column: 78)
!10813 = !DILocation(line: 164, column: 13, scope: !10812)
!10814 = !DILocation(line: 165, column: 3, scope: !10812)
!10815 = !DILocation(line: 171, column: 24, scope: !10791)
!10816 = !DILocation(line: 173, column: 10, scope: !10791)
!10817 = !DILocation(line: 174, column: 10, scope: !10791)
!10818 = !DILocalVariable(name: "l", arg: 1, scope: !10819, file: !259, line: 136, type: !10822)
!10819 = distinct !DISubprogram(name: "k_spin_lock", scope: !259, file: !259, line: 136, type: !10820, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1581, retainedNodes: !10823)
!10820 = !DISubroutineType(types: !10821)
!10821 = !{!10802, !10822}
!10822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1685, size: 32)
!10823 = !{!10818, !10824}
!10824 = !DILocalVariable(name: "k", scope: !10819, file: !259, line: 139, type: !10802)
!10825 = !DILocation(line: 0, scope: !10819, inlinedAt: !10826)
!10826 = distinct !DILocation(line: 176, column: 25, scope: !10791)
!10827 = !DILocation(line: 55, column: 2, scope: !10828, inlinedAt: !10832)
!10828 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6013, file: !6013, line: 42, type: !6014, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1581, retainedNodes: !10829)
!10829 = !{!10830, !10831}
!10830 = !DILocalVariable(name: "key", scope: !10828, file: !6013, line: 44, type: !32)
!10831 = !DILocalVariable(name: "tmp", scope: !10828, file: !6013, line: 53, type: !32)
!10832 = distinct !DILocation(line: 145, column: 10, scope: !10819, inlinedAt: !10826)
!10833 = !{i64 2031621}
!10834 = !DILocation(line: 0, scope: !10828, inlinedAt: !10832)
!10835 = !DILocation(line: 148, column: 2, scope: !10836, inlinedAt: !10826)
!10836 = distinct !DILexicalBlock(scope: !10837, file: !259, line: 148, column: 2)
!10837 = distinct !DILexicalBlock(scope: !10819, file: !259, line: 148, column: 2)
!10838 = !DILocation(line: 148, column: 2, scope: !10837, inlinedAt: !10826)
!10839 = !DILocation(line: 148, column: 2, scope: !10840, inlinedAt: !10826)
!10840 = distinct !DILexicalBlock(scope: !10836, file: !259, line: 148, column: 2)
!10841 = !DILocation(line: 160, column: 2, scope: !10819, inlinedAt: !10826)
!10842 = !DILocation(line: 178, column: 21, scope: !10791)
!10843 = !DILocation(line: 180, column: 18, scope: !10791)
!10844 = !DILocation(line: 182, column: 14, scope: !10791)
!10845 = !DILocation(line: 183, column: 15, scope: !10791)
!10846 = !DILocation(line: 185, column: 39, scope: !10791)
!10847 = !DILocation(line: 185, column: 37, scope: !10791)
!10848 = !DILocation(line: 187, column: 27, scope: !10849)
!10849 = distinct !DILexicalBlock(scope: !10791, file: !1659, line: 187, column: 6)
!10850 = !DILocation(line: 187, column: 6, scope: !10791)
!10851 = !DILocation(line: 202, column: 27, scope: !10852)
!10852 = distinct !DILexicalBlock(scope: !10849, file: !1659, line: 195, column: 9)
!10853 = !DILocation(line: 202, column: 48, scope: !10852)
!10854 = !DILocation(line: 203, column: 9, scope: !10852)
!10855 = !DILocation(line: 204, column: 11, scope: !10852)
!10856 = !DILocation(line: 205, column: 13, scope: !10857)
!10857 = distinct !DILexicalBlock(scope: !10852, file: !1659, line: 205, column: 7)
!10858 = !DILocation(line: 205, column: 7, scope: !10852)
!10859 = !DILocation(line: 0, scope: !10849)
!10860 = !DILocation(line: 212, column: 18, scope: !10791)
!10861 = !DILocation(line: 214, column: 28, scope: !10791)
!10862 = !DILocation(line: 214, column: 16, scope: !10791)
!10863 = !DILocation(line: 215, column: 15, scope: !10791)
!10864 = !DILocation(line: 227, column: 11, scope: !10865)
!10865 = distinct !DILexicalBlock(scope: !10791, file: !1659, line: 227, column: 6)
!10866 = !DILocation(line: 227, column: 6, scope: !10791)
!10867 = !DILocation(line: 228, column: 15, scope: !10868)
!10868 = distinct !DILexicalBlock(scope: !10865, file: !1659, line: 227, column: 19)
!10869 = !DILocation(line: 228, column: 38, scope: !10868)
!10870 = !DILocation(line: 228, column: 24, scope: !10868)
!10871 = !DILocation(line: 229, column: 2, scope: !10868)
!10872 = !DILocation(line: 230, column: 24, scope: !10873)
!10873 = distinct !DILexicalBlock(scope: !10865, file: !1659, line: 229, column: 9)
!10874 = !DILocation(line: 230, column: 15, scope: !10873)
!10875 = !DILocation(line: 0, scope: !10865)
!10876 = !DILocalVariable(name: "key", arg: 2, scope: !10877, file: !259, line: 190, type: !10802)
!10877 = distinct !DISubprogram(name: "k_spin_unlock", scope: !259, file: !259, line: 189, type: !10878, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1581, retainedNodes: !10880)
!10878 = !DISubroutineType(types: !10879)
!10879 = !{null, !10822, !10802}
!10880 = !{!10881, !10876}
!10881 = !DILocalVariable(name: "l", arg: 1, scope: !10877, file: !259, line: 189, type: !10822)
!10882 = !DILocation(line: 0, scope: !10877, inlinedAt: !10883)
!10883 = distinct !DILocation(line: 232, column: 2, scope: !10791)
!10884 = !DILocation(line: 194, column: 2, scope: !10885, inlinedAt: !10883)
!10885 = distinct !DILexicalBlock(scope: !10886, file: !259, line: 194, column: 2)
!10886 = distinct !DILexicalBlock(scope: !10877, file: !259, line: 194, column: 2)
!10887 = !DILocation(line: 194, column: 2, scope: !10886, inlinedAt: !10883)
!10888 = !DILocation(line: 194, column: 2, scope: !10889, inlinedAt: !10883)
!10889 = distinct !DILexicalBlock(scope: !10885, file: !259, line: 194, column: 2)
!10890 = !DILocalVariable(name: "key", arg: 1, scope: !10891, file: !6013, line: 84, type: !32)
!10891 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6013, file: !6013, line: 84, type: !6024, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1581, retainedNodes: !10892)
!10892 = !{!10890}
!10893 = !DILocation(line: 0, scope: !10891, inlinedAt: !10894)
!10894 = distinct !DILocation(line: 215, column: 2, scope: !10877, inlinedAt: !10883)
!10895 = !DILocation(line: 95, column: 2, scope: !10891, inlinedAt: !10894)
!10896 = !{i64 2032438}
!10897 = !DILocation(line: 234, column: 1, scope: !10791)
!10898 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1659, file: !1659, line: 236, type: !3220, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1581, retainedNodes: !10899)
!10899 = !{!10900, !10901}
!10900 = !DILocalVariable(name: "key", scope: !10898, file: !1659, line: 242, type: !10802)
!10901 = !DILocalVariable(name: "cyc", scope: !10898, file: !1659, line: 243, type: !118)
!10902 = !DILocation(line: 0, scope: !10819, inlinedAt: !10903)
!10903 = distinct !DILocation(line: 242, column: 25, scope: !10898)
!10904 = !DILocation(line: 55, column: 2, scope: !10828, inlinedAt: !10905)
!10905 = distinct !DILocation(line: 145, column: 10, scope: !10819, inlinedAt: !10903)
!10906 = !DILocation(line: 0, scope: !10828, inlinedAt: !10905)
!10907 = !DILocation(line: 148, column: 2, scope: !10836, inlinedAt: !10903)
!10908 = !DILocation(line: 148, column: 2, scope: !10837, inlinedAt: !10903)
!10909 = !DILocation(line: 148, column: 2, scope: !10840, inlinedAt: !10903)
!10910 = !DILocation(line: 160, column: 2, scope: !10819, inlinedAt: !10903)
!10911 = !DILocation(line: 0, scope: !10898)
!10912 = !DILocation(line: 243, column: 17, scope: !10898)
!10913 = !DILocation(line: 243, column: 29, scope: !10898)
!10914 = !DILocation(line: 243, column: 43, scope: !10898)
!10915 = !DILocation(line: 0, scope: !10877, inlinedAt: !10916)
!10916 = distinct !DILocation(line: 245, column: 2, scope: !10898)
!10917 = !DILocation(line: 194, column: 2, scope: !10885, inlinedAt: !10916)
!10918 = !DILocation(line: 194, column: 2, scope: !10886, inlinedAt: !10916)
!10919 = !DILocation(line: 194, column: 2, scope: !10889, inlinedAt: !10916)
!10920 = !DILocation(line: 243, column: 27, scope: !10898)
!10921 = !DILocation(line: 243, column: 41, scope: !10898)
!10922 = !DILocation(line: 0, scope: !10891, inlinedAt: !10923)
!10923 = distinct !DILocation(line: 215, column: 2, scope: !10877, inlinedAt: !10916)
!10924 = !DILocation(line: 95, column: 2, scope: !10891, inlinedAt: !10923)
!10925 = !DILocation(line: 246, column: 13, scope: !10898)
!10926 = !DILocation(line: 246, column: 2, scope: !10898)
!10927 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1659, file: !1659, line: 249, type: !3220, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1581, retainedNodes: !10928)
!10928 = !{!10929, !10930}
!10929 = !DILocalVariable(name: "key", scope: !10927, file: !1659, line: 251, type: !10802)
!10930 = !DILocalVariable(name: "ret", scope: !10927, file: !1659, line: 252, type: !118)
!10931 = !DILocation(line: 0, scope: !10819, inlinedAt: !10932)
!10932 = distinct !DILocation(line: 251, column: 25, scope: !10927)
!10933 = !DILocation(line: 55, column: 2, scope: !10828, inlinedAt: !10934)
!10934 = distinct !DILocation(line: 145, column: 10, scope: !10819, inlinedAt: !10932)
!10935 = !DILocation(line: 0, scope: !10828, inlinedAt: !10934)
!10936 = !DILocation(line: 148, column: 2, scope: !10836, inlinedAt: !10932)
!10937 = !DILocation(line: 148, column: 2, scope: !10837, inlinedAt: !10932)
!10938 = !DILocation(line: 148, column: 2, scope: !10840, inlinedAt: !10932)
!10939 = !DILocation(line: 160, column: 2, scope: !10819, inlinedAt: !10932)
!10940 = !DILocation(line: 0, scope: !10927)
!10941 = !DILocation(line: 252, column: 17, scope: !10927)
!10942 = !DILocation(line: 252, column: 29, scope: !10927)
!10943 = !DILocation(line: 0, scope: !10877, inlinedAt: !10944)
!10944 = distinct !DILocation(line: 254, column: 2, scope: !10927)
!10945 = !DILocation(line: 194, column: 2, scope: !10885, inlinedAt: !10944)
!10946 = !DILocation(line: 194, column: 2, scope: !10886, inlinedAt: !10944)
!10947 = !DILocation(line: 194, column: 2, scope: !10889, inlinedAt: !10944)
!10948 = !DILocation(line: 252, column: 27, scope: !10927)
!10949 = !DILocation(line: 0, scope: !10891, inlinedAt: !10950)
!10950 = distinct !DILocation(line: 215, column: 2, scope: !10877, inlinedAt: !10944)
!10951 = !DILocation(line: 95, column: 2, scope: !10891, inlinedAt: !10950)
!10952 = !DILocation(line: 255, column: 2, scope: !10927)
!10953 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1659, file: !1659, line: 258, type: !2982, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1581, retainedNodes: !2048)
!10954 = !DILocation(line: 260, column: 6, scope: !10955)
!10955 = distinct !DILexicalBlock(scope: !10953, file: !1659, line: 260, column: 6)
!10956 = !DILocation(line: 260, column: 16, scope: !10955)
!10957 = !DILocation(line: 260, column: 6, scope: !10953)
!10958 = !DILocation(line: 261, column: 17, scope: !10959)
!10959 = distinct !DILexicalBlock(scope: !10955, file: !1659, line: 260, column: 34)
!10960 = !DILocation(line: 262, column: 2, scope: !10959)
!10961 = !DILocation(line: 263, column: 1, scope: !10953)
!10962 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1659, file: !1659, line: 265, type: !2982, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1581, retainedNodes: !2048)
!10963 = !DILocation(line: 267, column: 16, scope: !10962)
!10964 = !DILocation(line: 268, column: 1, scope: !10962)
!10965 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !10966, file: !10966, line: 9, type: !10967, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2789, retainedNodes: !10990)
!10966 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10967 = !DISubroutineType(types: !10968)
!10968 = !{!119, !10969, !185, !10989}
!10969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10970, size: 32)
!10970 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10971)
!10971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1512, line: 60, size: 64, elements: !10972)
!10972 = !{!10973, !10988}
!10973 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !10971, file: !1512, line: 69, baseType: !10974, size: 32)
!10974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10975, size: 32)
!10975 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10976)
!10976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1512, line: 50, size: 64, elements: !10977)
!10977 = !{!10978, !10986, !10987}
!10978 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !10976, file: !1512, line: 52, baseType: !10979, size: 32)
!10979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10980, size: 32)
!10980 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10981)
!10981 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1523, line: 37, baseType: !10982)
!10982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1523, line: 32, size: 64, elements: !10983)
!10983 = !{!10984, !10985}
!10984 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10982, file: !1523, line: 34, baseType: !118, size: 32)
!10985 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10982, file: !1523, line: 36, baseType: !118, size: 32, offset: 32)
!10986 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !10976, file: !1512, line: 54, baseType: !185, size: 8, offset: 32)
!10987 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10976, file: !1512, line: 56, baseType: !185, size: 8, offset: 40)
!10988 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !10971, file: !1512, line: 71, baseType: !185, size: 8, offset: 32)
!10989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10974, size: 32)
!10990 = !{!10991, !10992, !10993}
!10991 = !DILocalVariable(name: "config", arg: 1, scope: !10965, file: !10966, line: 9, type: !10969)
!10992 = !DILocalVariable(name: "id", arg: 2, scope: !10965, file: !10966, line: 9, type: !185)
!10993 = !DILocalVariable(name: "state", arg: 3, scope: !10965, file: !10966, line: 10, type: !10989)
!10994 = !DILocation(line: 0, scope: !10965)
!10995 = !DILocation(line: 12, column: 20, scope: !10965)
!10996 = !DILocation(line: 13, column: 27, scope: !10965)
!10997 = !DILocation(line: 13, column: 42, scope: !10965)
!10998 = !DILocation(line: 13, column: 19, scope: !10965)
!10999 = !DILocation(line: 13, column: 16, scope: !10965)
!11000 = !DILocation(line: 13, column: 2, scope: !10965)
!11001 = distinct !{!11001, !11000, !11002}
!11002 = !DILocation(line: 19, column: 2, scope: !10965)
!11003 = !DILocation(line: 14, column: 23, scope: !11004)
!11004 = distinct !DILexicalBlock(scope: !11005, file: !10966, line: 14, column: 7)
!11005 = distinct !DILexicalBlock(scope: !10965, file: !10966, line: 13, column: 54)
!11006 = !DILocation(line: 14, column: 10, scope: !11004)
!11007 = !DILocation(line: 18, column: 11, scope: !11005)
!11008 = !DILocation(line: 14, column: 7, scope: !11005)
!11009 = !DILocation(line: 22, column: 1, scope: !10965)
!11010 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1778, file: !1778, line: 193, type: !11011, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11020)
!11011 = !DISubroutineType(types: !11012)
!11012 = !{!119, !11013, !185, !22}
!11013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11014, size: 32)
!11014 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11015)
!11015 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1523, line: 37, baseType: !11016)
!11016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1523, line: 32, size: 64, elements: !11017)
!11017 = !{!11018, !11019}
!11018 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !11016, file: !1523, line: 34, baseType: !118, size: 32)
!11019 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !11016, file: !1523, line: 36, baseType: !118, size: 32, offset: 32)
!11020 = !{!11021, !11022, !11023, !11024, !11025, !11026, !11027, !11028, !11030}
!11021 = !DILocalVariable(name: "pins", arg: 1, scope: !11010, file: !1778, line: 193, type: !11013)
!11022 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !11010, file: !1778, line: 193, type: !185)
!11023 = !DILocalVariable(name: "reg", arg: 3, scope: !11010, file: !1778, line: 194, type: !22)
!11024 = !DILocalVariable(name: "pin", scope: !11010, file: !1778, line: 196, type: !118)
!11025 = !DILocalVariable(name: "mux", scope: !11010, file: !1778, line: 196, type: !118)
!11026 = !DILocalVariable(name: "pin_cgf", scope: !11010, file: !1778, line: 197, type: !118)
!11027 = !DILocalVariable(name: "ret", scope: !11010, file: !1778, line: 198, type: !119)
!11028 = !DILocalVariable(name: "i", scope: !11029, file: !1778, line: 209, type: !185)
!11029 = distinct !DILexicalBlock(scope: !11010, file: !1778, line: 209, column: 2)
!11030 = !DILocalVariable(name: "gpio_out", scope: !11031, file: !1778, line: 239, type: !118)
!11031 = distinct !DILexicalBlock(scope: !11032, file: !1778, line: 238, column: 55)
!11032 = distinct !DILexicalBlock(scope: !11033, file: !1778, line: 238, column: 14)
!11033 = distinct !DILexicalBlock(scope: !11034, file: !1778, line: 236, column: 14)
!11034 = distinct !DILexicalBlock(scope: !11035, file: !1778, line: 234, column: 7)
!11035 = distinct !DILexicalBlock(scope: !11036, file: !1778, line: 209, column: 41)
!11036 = distinct !DILexicalBlock(scope: !11029, file: !1778, line: 209, column: 2)
!11037 = !DILocation(line: 0, scope: !11010)
!11038 = !DILocation(line: 0, scope: !11029)
!11039 = !DILocation(line: 209, column: 25, scope: !11036)
!11040 = !DILocation(line: 209, column: 2, scope: !11029)
!11041 = distinct !{!11041, !11040, !11042}
!11042 = !DILocation(line: 259, column: 2, scope: !11029)
!11043 = !DILocation(line: 210, column: 17, scope: !11035)
!11044 = !DILocation(line: 234, column: 7, scope: !11034)
!11045 = !DILocation(line: 234, column: 33, scope: !11034)
!11046 = !DILocation(line: 234, column: 7, scope: !11035)
!11047 = !DILocation(line: 235, column: 22, scope: !11048)
!11048 = distinct !DILexicalBlock(scope: !11034, file: !1778, line: 234, column: 49)
!11049 = !DILocation(line: 235, column: 29, scope: !11048)
!11050 = !DILocation(line: 236, column: 3, scope: !11048)
!11051 = !DILocation(line: 236, column: 14, scope: !11034)
!11052 = !DILocation(line: 239, column: 32, scope: !11031)
!11053 = !DILocation(line: 0, scope: !11031)
!11054 = !DILocation(line: 241, column: 8, scope: !11031)
!11055 = !DILocation(line: 246, column: 3, scope: !11031)
!11056 = !DILocation(line: 252, column: 9, scope: !11035)
!11057 = !DILocation(line: 255, column: 9, scope: !11035)
!11058 = !DILocation(line: 256, column: 11, scope: !11059)
!11059 = distinct !DILexicalBlock(scope: !11035, file: !1778, line: 256, column: 7)
!11060 = !DILocation(line: 209, column: 37, scope: !11036)
!11061 = !DILocation(line: 256, column: 7, scope: !11035)
!11062 = !DILocation(line: 262, column: 1, scope: !11010)
!11063 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1778, file: !1778, line: 176, type: !11064, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11066)
!11064 = !DISubroutineType(types: !11065)
!11065 = !{!119, !118, !118, !118}
!11066 = !{!11067, !11068, !11069, !11070}
!11067 = !DILocalVariable(name: "pin", arg: 1, scope: !11063, file: !1778, line: 176, type: !118)
!11068 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !11063, file: !1778, line: 176, type: !118)
!11069 = !DILocalVariable(name: "pin_func", arg: 3, scope: !11063, file: !1778, line: 176, type: !118)
!11070 = !DILocalVariable(name: "port_device", scope: !11063, file: !1778, line: 178, type: !1708)
!11071 = !DILocation(line: 0, scope: !11063)
!11072 = !DILocation(line: 180, column: 22, scope: !11073)
!11073 = distinct !DILexicalBlock(scope: !11063, file: !1778, line: 180, column: 6)
!11074 = !DILocation(line: 180, column: 6, scope: !11063)
!11075 = !DILocation(line: 180, column: 6, scope: !11073)
!11076 = !DILocation(line: 184, column: 16, scope: !11063)
!11077 = !DILocation(line: 186, column: 19, scope: !11078)
!11078 = distinct !DILexicalBlock(scope: !11063, file: !1778, line: 186, column: 6)
!11079 = !DILocation(line: 186, column: 28, scope: !11078)
!11080 = !DILocation(line: 186, column: 33, scope: !11078)
!11081 = !DILocation(line: 186, column: 6, scope: !11063)
!11082 = !DILocation(line: 190, column: 43, scope: !11063)
!11083 = !DILocation(line: 190, column: 9, scope: !11063)
!11084 = !DILocation(line: 190, column: 2, scope: !11063)
!11085 = !DILocation(line: 191, column: 1, scope: !11063)
!11086 = distinct !DISubprogram(name: "device_is_ready", scope: !8990, file: !8990, line: 47, type: !11087, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11089)
!11087 = !DISubroutineType(types: !11088)
!11088 = !{!345, !1708}
!11089 = !{!11090}
!11090 = !DILocalVariable(name: "dev", arg: 1, scope: !11086, file: !8990, line: 47, type: !1708)
!11091 = !DILocation(line: 0, scope: !11086)
!11092 = !DILocation(line: 55, column: 2, scope: !11093)
!11093 = distinct !DILexicalBlock(scope: !11086, file: !8990, line: 55, column: 2)
!11094 = !{i64 2149265630}
!11095 = !DILocation(line: 56, column: 9, scope: !11086)
!11096 = !DILocation(line: 56, column: 2, scope: !11086)
!11097 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !334, file: !334, line: 730, type: !11087, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11098)
!11098 = !{!11099}
!11099 = !DILocalVariable(name: "dev", arg: 1, scope: !11097, file: !334, line: 730, type: !1708)
!11100 = !DILocation(line: 0, scope: !11097)
!11101 = !DILocation(line: 732, column: 9, scope: !11097)
!11102 = !DILocation(line: 732, column: 2, scope: !11097)
!11103 = distinct !DISubprogram(name: "SystemInit", scope: !1828, file: !1828, line: 167, type: !2982, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !2048)
!11104 = !DILocation(line: 182, column: 1, scope: !11103)
!11105 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1828, file: !1828, line: 220, type: !2982, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !11106)
!11106 = !{!11107, !11108, !11109, !11110, !11111}
!11107 = !DILocalVariable(name: "tmp", scope: !11105, file: !1828, line: 222, type: !118)
!11108 = !DILocalVariable(name: "pllvco", scope: !11105, file: !1828, line: 222, type: !118)
!11109 = !DILocalVariable(name: "pllp", scope: !11105, file: !1828, line: 222, type: !118)
!11110 = !DILocalVariable(name: "pllsource", scope: !11105, file: !1828, line: 222, type: !118)
!11111 = !DILocalVariable(name: "pllm", scope: !11105, file: !1828, line: 222, type: !118)
!11112 = !DILocation(line: 0, scope: !11105)
!11113 = !DILocation(line: 225, column: 14, scope: !11105)
!11114 = !DILocation(line: 225, column: 19, scope: !11105)
!11115 = !DILocation(line: 227, column: 3, scope: !11105)
!11116 = !DILocation(line: 240, column: 25, scope: !11117)
!11117 = distinct !DILexicalBlock(scope: !11105, file: !1828, line: 228, column: 3)
!11118 = !DILocation(line: 241, column: 19, scope: !11117)
!11119 = !DILocation(line: 241, column: 27, scope: !11117)
!11120 = !DILocation(line: 0, scope: !11121)
!11121 = distinct !DILexicalBlock(scope: !11117, file: !1828, line: 243, column: 11)
!11122 = !DILocation(line: 254, column: 22, scope: !11117)
!11123 = !DILocation(line: 254, column: 62, scope: !11117)
!11124 = !DILocation(line: 255, column: 31, scope: !11117)
!11125 = !DILocation(line: 256, column: 7, scope: !11117)
!11126 = !DILocation(line: 0, scope: !11117)
!11127 = !DILocation(line: 263, column: 30, scope: !11105)
!11128 = !DILocation(line: 263, column: 52, scope: !11105)
!11129 = !DILocation(line: 263, column: 9, scope: !11105)
!11130 = !DILocation(line: 265, column: 19, scope: !11105)
!11131 = !DILocation(line: 266, column: 1, scope: !11105)
!11132 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !11133, file: !11133, line: 200, type: !11134, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2791, retainedNodes: !2048)
!11133 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11134 = !DISubroutineType(types: !11135)
!11135 = !{!11136}
!11136 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !2795, line: 44, baseType: !2794)
!11137 = !DILocation(line: 202, column: 3, scope: !11132)
!11138 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !11133, file: !11133, line: 219, type: !11139, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2791, retainedNodes: !11163)
!11139 = !DISubroutineType(types: !11140)
!11140 = !{!11136, !11141}
!11141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11142, size: 32)
!11142 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !11143, line: 70, baseType: !11144)
!11143 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11144 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11143, line: 49, size: 384, elements: !11145)
!11145 = !{!11146, !11147, !11148, !11149, !11150, !11151, !11152}
!11146 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !11144, file: !11143, line: 51, baseType: !118, size: 32)
!11147 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !11144, file: !11143, line: 54, baseType: !118, size: 32, offset: 32)
!11148 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !11144, file: !11143, line: 57, baseType: !118, size: 32, offset: 64)
!11149 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !11144, file: !11143, line: 60, baseType: !118, size: 32, offset: 96)
!11150 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !11144, file: !11143, line: 63, baseType: !118, size: 32, offset: 128)
!11151 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !11144, file: !11143, line: 66, baseType: !118, size: 32, offset: 160)
!11152 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !11144, file: !11143, line: 69, baseType: !11153, size: 192, offset: 192)
!11153 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !11154, line: 73, baseType: !11155)
!11154 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11155 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11154, line: 45, size: 192, elements: !11156)
!11156 = !{!11157, !11158, !11159, !11160, !11161, !11162}
!11157 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !11155, file: !11154, line: 47, baseType: !118, size: 32)
!11158 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !11155, file: !11154, line: 50, baseType: !118, size: 32, offset: 32)
!11159 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !11155, file: !11154, line: 53, baseType: !118, size: 32, offset: 64)
!11160 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !11155, file: !11154, line: 56, baseType: !118, size: 32, offset: 96)
!11161 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !11155, file: !11154, line: 60, baseType: !118, size: 32, offset: 128)
!11162 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !11155, file: !11154, line: 63, baseType: !118, size: 32, offset: 160)
!11163 = !{!11164, !11165, !11166, !11167, !11171}
!11164 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11138, file: !11133, line: 219, type: !11141)
!11165 = !DILocalVariable(name: "tickstart", scope: !11138, file: !11133, line: 221, type: !118)
!11166 = !DILocalVariable(name: "pll_config", scope: !11138, file: !11133, line: 221, type: !118)
!11167 = !DILocalVariable(name: "pwrclkchanged", scope: !11168, file: !11133, line: 391, type: !11170)
!11168 = distinct !DILexicalBlock(scope: !11169, file: !11133, line: 390, column: 3)
!11169 = distinct !DILexicalBlock(scope: !11138, file: !11133, line: 389, column: 6)
!11170 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !811, line: 188, baseType: !2801)
!11171 = !DILocalVariable(name: "tmpreg", scope: !11172, file: !11133, line: 400, type: !314)
!11172 = distinct !DILexicalBlock(scope: !11173, file: !11133, line: 400, column: 7)
!11173 = distinct !DILexicalBlock(scope: !11174, file: !11133, line: 399, column: 5)
!11174 = distinct !DILexicalBlock(scope: !11168, file: !11133, line: 398, column: 8)
!11175 = !DILocation(line: 0, scope: !11138)
!11176 = !DILocation(line: 224, column: 24, scope: !11177)
!11177 = distinct !DILexicalBlock(scope: !11138, file: !11133, line: 224, column: 6)
!11178 = !DILocation(line: 224, column: 6, scope: !11138)
!11179 = !DILocation(line: 232, column: 27, scope: !11180)
!11180 = distinct !DILexicalBlock(scope: !11138, file: !11133, line: 232, column: 6)
!11181 = !DILocation(line: 232, column: 43, scope: !11180)
!11182 = !DILocation(line: 232, column: 69, scope: !11180)
!11183 = !DILocation(line: 232, column: 6, scope: !11138)
!11184 = !DILocation(line: 237, column: 9, scope: !11185)
!11185 = distinct !DILexicalBlock(scope: !11186, file: !11133, line: 237, column: 8)
!11186 = distinct !DILexicalBlock(scope: !11180, file: !11133, line: 233, column: 3)
!11187 = !DILocation(line: 237, column: 39, scope: !11185)
!11188 = !DILocation(line: 237, column: 60, scope: !11185)
!11189 = !DILocation(line: 238, column: 9, scope: !11185)
!11190 = !DILocation(line: 238, column: 39, scope: !11185)
!11191 = !DILocation(line: 238, column: 60, scope: !11185)
!11192 = !DILocation(line: 238, column: 70, scope: !11185)
!11193 = !DILocation(line: 238, column: 78, scope: !11185)
!11194 = !DILocation(line: 238, column: 100, scope: !11185)
!11195 = !DILocation(line: 237, column: 8, scope: !11186)
!11196 = !DILocation(line: 240, column: 11, scope: !11197)
!11197 = distinct !DILexicalBlock(scope: !11198, file: !11133, line: 240, column: 10)
!11198 = distinct !DILexicalBlock(scope: !11185, file: !11133, line: 239, column: 5)
!11199 = !DILocation(line: 240, column: 57, scope: !11197)
!11200 = !DILocation(line: 240, column: 80, scope: !11197)
!11201 = !DILocation(line: 240, column: 89, scope: !11197)
!11202 = !DILocation(line: 240, column: 10, scope: !11198)
!11203 = !DILocation(line: 248, column: 7, scope: !11204)
!11204 = distinct !DILexicalBlock(scope: !11205, file: !11133, line: 248, column: 7)
!11205 = distinct !DILexicalBlock(scope: !11206, file: !11133, line: 248, column: 7)
!11206 = distinct !DILexicalBlock(scope: !11185, file: !11133, line: 246, column: 5)
!11207 = !DILocation(line: 248, column: 7, scope: !11205)
!11208 = !DILocation(line: 248, column: 7, scope: !11209)
!11209 = distinct !DILexicalBlock(scope: !11204, file: !11133, line: 248, column: 7)
!11210 = !DILocation(line: 248, column: 7, scope: !11211)
!11211 = distinct !DILexicalBlock(scope: !11212, file: !11133, line: 248, column: 7)
!11212 = distinct !DILexicalBlock(scope: !11204, file: !11133, line: 248, column: 7)
!11213 = !DILocation(line: 248, column: 7, scope: !11214)
!11214 = distinct !DILexicalBlock(scope: !11212, file: !11133, line: 248, column: 7)
!11215 = !DILocation(line: 0, scope: !11204)
!11216 = !DILocation(line: 251, column: 30, scope: !11217)
!11217 = distinct !DILexicalBlock(scope: !11206, file: !11133, line: 251, column: 10)
!11218 = !DILocation(line: 251, column: 40, scope: !11217)
!11219 = !DILocation(line: 0, scope: !11217)
!11220 = !DILocation(line: 251, column: 10, scope: !11206)
!11221 = !DILocation(line: 257, column: 15, scope: !11222)
!11222 = distinct !DILexicalBlock(scope: !11217, file: !11133, line: 252, column: 7)
!11223 = !DILocation(line: 257, column: 51, scope: !11222)
!11224 = !DILocation(line: 257, column: 9, scope: !11222)
!11225 = !DILocation(line: 259, column: 15, scope: !11226)
!11226 = distinct !DILexicalBlock(scope: !11227, file: !11133, line: 259, column: 14)
!11227 = distinct !DILexicalBlock(scope: !11222, file: !11133, line: 258, column: 9)
!11228 = !DILocation(line: 259, column: 29, scope: !11226)
!11229 = !DILocation(line: 259, column: 43, scope: !11226)
!11230 = !DILocation(line: 259, column: 14, scope: !11227)
!11231 = distinct !{!11231, !11224, !11232}
!11232 = !DILocation(line: 263, column: 9, scope: !11222)
!11233 = !DILocation(line: 271, column: 15, scope: !11234)
!11234 = distinct !DILexicalBlock(scope: !11217, file: !11133, line: 266, column: 7)
!11235 = !DILocation(line: 271, column: 9, scope: !11234)
!11236 = !DILocation(line: 273, column: 15, scope: !11237)
!11237 = distinct !DILexicalBlock(scope: !11238, file: !11133, line: 273, column: 14)
!11238 = distinct !DILexicalBlock(scope: !11234, file: !11133, line: 272, column: 9)
!11239 = !DILocation(line: 273, column: 29, scope: !11237)
!11240 = !DILocation(line: 273, column: 43, scope: !11237)
!11241 = !DILocation(line: 273, column: 14, scope: !11238)
!11242 = distinct !{!11242, !11235, !11243}
!11243 = !DILocation(line: 277, column: 9, scope: !11234)
!11244 = !DILocation(line: 282, column: 27, scope: !11245)
!11245 = distinct !DILexicalBlock(scope: !11138, file: !11133, line: 282, column: 6)
!11246 = !DILocation(line: 282, column: 43, scope: !11245)
!11247 = !DILocation(line: 282, column: 69, scope: !11245)
!11248 = !DILocation(line: 282, column: 6, scope: !11138)
!11249 = !DILocation(line: 289, column: 9, scope: !11250)
!11250 = distinct !DILexicalBlock(scope: !11251, file: !11133, line: 289, column: 8)
!11251 = distinct !DILexicalBlock(scope: !11245, file: !11133, line: 283, column: 3)
!11252 = !DILocation(line: 289, column: 39, scope: !11250)
!11253 = !DILocation(line: 289, column: 60, scope: !11250)
!11254 = !DILocation(line: 290, column: 9, scope: !11250)
!11255 = !DILocation(line: 290, column: 39, scope: !11250)
!11256 = !DILocation(line: 290, column: 60, scope: !11250)
!11257 = !DILocation(line: 290, column: 70, scope: !11250)
!11258 = !DILocation(line: 290, column: 78, scope: !11250)
!11259 = !DILocation(line: 290, column: 100, scope: !11250)
!11260 = !DILocation(line: 289, column: 8, scope: !11251)
!11261 = !DILocation(line: 293, column: 11, scope: !11262)
!11262 = distinct !DILexicalBlock(scope: !11263, file: !11133, line: 293, column: 10)
!11263 = distinct !DILexicalBlock(scope: !11250, file: !11133, line: 291, column: 5)
!11264 = !DILocation(line: 293, column: 57, scope: !11262)
!11265 = !DILocation(line: 293, column: 80, scope: !11262)
!11266 = !DILocation(line: 293, column: 89, scope: !11262)
!11267 = !DILocation(line: 293, column: 10, scope: !11263)
!11268 = !DILocation(line: 307, column: 30, scope: !11269)
!11269 = distinct !DILexicalBlock(scope: !11270, file: !11133, line: 307, column: 10)
!11270 = distinct !DILexicalBlock(scope: !11250, file: !11133, line: 305, column: 5)
!11271 = !DILocation(line: 307, column: 39, scope: !11269)
!11272 = !DILocation(line: 307, column: 10, scope: !11270)
!11273 = !DILocation(line: 310, column: 9, scope: !11274)
!11274 = distinct !DILexicalBlock(scope: !11269, file: !11133, line: 308, column: 7)
!11275 = !DILocation(line: 313, column: 21, scope: !11274)
!11276 = !DILocation(line: 316, column: 9, scope: !11274)
!11277 = !DILocation(line: 316, column: 15, scope: !11274)
!11278 = !DILocation(line: 316, column: 51, scope: !11274)
!11279 = !DILocation(line: 318, column: 15, scope: !11280)
!11280 = distinct !DILexicalBlock(scope: !11281, file: !11133, line: 318, column: 14)
!11281 = distinct !DILexicalBlock(scope: !11274, file: !11133, line: 317, column: 9)
!11282 = !DILocation(line: 318, column: 29, scope: !11280)
!11283 = !DILocation(line: 318, column: 43, scope: !11280)
!11284 = !DILocation(line: 318, column: 14, scope: !11281)
!11285 = distinct !{!11285, !11276, !11286}
!11286 = !DILocation(line: 322, column: 9, scope: !11274)
!11287 = !DILocation(line: 330, column: 9, scope: !11288)
!11288 = distinct !DILexicalBlock(scope: !11269, file: !11133, line: 328, column: 7)
!11289 = !DILocation(line: 333, column: 21, scope: !11288)
!11290 = !DILocation(line: 336, column: 9, scope: !11288)
!11291 = !DILocation(line: 336, column: 15, scope: !11288)
!11292 = !DILocation(line: 338, column: 15, scope: !11293)
!11293 = distinct !DILexicalBlock(scope: !11294, file: !11133, line: 338, column: 14)
!11294 = distinct !DILexicalBlock(scope: !11288, file: !11133, line: 337, column: 9)
!11295 = !DILocation(line: 338, column: 29, scope: !11293)
!11296 = !DILocation(line: 338, column: 43, scope: !11293)
!11297 = !DILocation(line: 338, column: 14, scope: !11294)
!11298 = distinct !{!11298, !11290, !11299}
!11299 = !DILocation(line: 342, column: 9, scope: !11288)
!11300 = !DILocation(line: 0, scope: !11250)
!11301 = !DILocation(line: 347, column: 27, scope: !11302)
!11302 = distinct !DILexicalBlock(scope: !11138, file: !11133, line: 347, column: 6)
!11303 = !DILocation(line: 347, column: 43, scope: !11302)
!11304 = !DILocation(line: 347, column: 69, scope: !11302)
!11305 = !DILocation(line: 347, column: 6, scope: !11138)
!11306 = !DILocation(line: 353, column: 28, scope: !11307)
!11307 = distinct !DILexicalBlock(scope: !11308, file: !11133, line: 353, column: 8)
!11308 = distinct !DILexicalBlock(scope: !11302, file: !11133, line: 348, column: 3)
!11309 = !DILocation(line: 353, column: 37, scope: !11307)
!11310 = !DILocation(line: 353, column: 8, scope: !11308)
!11311 = !DILocation(line: 356, column: 7, scope: !11312)
!11312 = distinct !DILexicalBlock(scope: !11307, file: !11133, line: 354, column: 5)
!11313 = !DILocation(line: 359, column: 19, scope: !11312)
!11314 = !DILocation(line: 362, column: 7, scope: !11312)
!11315 = !DILocation(line: 362, column: 13, scope: !11312)
!11316 = !DILocation(line: 362, column: 49, scope: !11312)
!11317 = !DILocation(line: 364, column: 13, scope: !11318)
!11318 = distinct !DILexicalBlock(scope: !11319, file: !11133, line: 364, column: 12)
!11319 = distinct !DILexicalBlock(scope: !11312, file: !11133, line: 363, column: 7)
!11320 = !DILocation(line: 364, column: 27, scope: !11318)
!11321 = !DILocation(line: 364, column: 41, scope: !11318)
!11322 = !DILocation(line: 364, column: 12, scope: !11319)
!11323 = distinct !{!11323, !11314, !11324}
!11324 = !DILocation(line: 368, column: 7, scope: !11312)
!11325 = !DILocation(line: 373, column: 7, scope: !11326)
!11326 = distinct !DILexicalBlock(scope: !11307, file: !11133, line: 371, column: 5)
!11327 = !DILocation(line: 376, column: 19, scope: !11326)
!11328 = !DILocation(line: 379, column: 7, scope: !11326)
!11329 = !DILocation(line: 379, column: 13, scope: !11326)
!11330 = !DILocation(line: 381, column: 13, scope: !11331)
!11331 = distinct !DILexicalBlock(scope: !11332, file: !11133, line: 381, column: 12)
!11332 = distinct !DILexicalBlock(scope: !11326, file: !11133, line: 380, column: 7)
!11333 = !DILocation(line: 381, column: 27, scope: !11331)
!11334 = !DILocation(line: 381, column: 41, scope: !11331)
!11335 = !DILocation(line: 381, column: 12, scope: !11332)
!11336 = distinct !{!11336, !11328, !11337}
!11337 = !DILocation(line: 385, column: 7, scope: !11326)
!11338 = !DILocation(line: 389, column: 27, scope: !11169)
!11339 = !DILocation(line: 389, column: 43, scope: !11169)
!11340 = !DILocation(line: 389, column: 69, scope: !11169)
!11341 = !DILocation(line: 389, column: 6, scope: !11138)
!11342 = !DILocation(line: 0, scope: !11168)
!11343 = !DILocation(line: 398, column: 8, scope: !11174)
!11344 = !DILocation(line: 398, column: 8, scope: !11168)
!11345 = !DILocation(line: 400, column: 7, scope: !11172)
!11346 = !DILocation(line: 400, column: 7, scope: !11173)
!11347 = !DILocation(line: 402, column: 5, scope: !11173)
!11348 = !DILocation(line: 404, column: 8, scope: !11349)
!11349 = distinct !DILexicalBlock(scope: !11168, file: !11133, line: 404, column: 8)
!11350 = !DILocation(line: 404, column: 8, scope: !11168)
!11351 = !DILocation(line: 407, column: 7, scope: !11352)
!11352 = distinct !DILexicalBlock(scope: !11349, file: !11133, line: 405, column: 5)
!11353 = !DILocation(line: 410, column: 19, scope: !11352)
!11354 = !DILocation(line: 412, column: 7, scope: !11352)
!11355 = !DILocation(line: 412, column: 13, scope: !11352)
!11356 = !DILocation(line: 414, column: 13, scope: !11357)
!11357 = distinct !DILexicalBlock(scope: !11358, file: !11133, line: 414, column: 12)
!11358 = distinct !DILexicalBlock(scope: !11352, file: !11133, line: 413, column: 7)
!11359 = !DILocation(line: 414, column: 27, scope: !11357)
!11360 = !DILocation(line: 414, column: 40, scope: !11357)
!11361 = !DILocation(line: 414, column: 12, scope: !11358)
!11362 = distinct !{!11362, !11354, !11363}
!11363 = !DILocation(line: 418, column: 7, scope: !11352)
!11364 = !DILocation(line: 422, column: 5, scope: !11365)
!11365 = distinct !DILexicalBlock(scope: !11366, file: !11133, line: 422, column: 5)
!11366 = distinct !DILexicalBlock(scope: !11168, file: !11133, line: 422, column: 5)
!11367 = !DILocation(line: 422, column: 5, scope: !11366)
!11368 = !DILocation(line: 422, column: 5, scope: !11369)
!11369 = distinct !DILexicalBlock(scope: !11365, file: !11133, line: 422, column: 5)
!11370 = !DILocation(line: 422, column: 5, scope: !11371)
!11371 = distinct !DILexicalBlock(scope: !11372, file: !11133, line: 422, column: 5)
!11372 = distinct !DILexicalBlock(scope: !11365, file: !11133, line: 422, column: 5)
!11373 = !DILocation(line: 422, column: 5, scope: !11374)
!11374 = distinct !DILexicalBlock(scope: !11372, file: !11133, line: 422, column: 5)
!11375 = !DILocation(line: 0, scope: !11365)
!11376 = !DILocation(line: 424, column: 28, scope: !11377)
!11377 = distinct !DILexicalBlock(scope: !11168, file: !11133, line: 424, column: 8)
!11378 = !DILocation(line: 424, column: 38, scope: !11377)
!11379 = !DILocation(line: 0, scope: !11377)
!11380 = !DILocation(line: 424, column: 8, scope: !11168)
!11381 = !DILocation(line: 430, column: 13, scope: !11382)
!11382 = distinct !DILexicalBlock(scope: !11377, file: !11133, line: 425, column: 5)
!11383 = !DILocation(line: 430, column: 49, scope: !11382)
!11384 = !DILocation(line: 430, column: 7, scope: !11382)
!11385 = !DILocation(line: 432, column: 13, scope: !11386)
!11386 = distinct !DILexicalBlock(scope: !11387, file: !11133, line: 432, column: 12)
!11387 = distinct !DILexicalBlock(scope: !11382, file: !11133, line: 431, column: 7)
!11388 = !DILocation(line: 432, column: 27, scope: !11386)
!11389 = !DILocation(line: 432, column: 41, scope: !11386)
!11390 = !DILocation(line: 432, column: 12, scope: !11387)
!11391 = distinct !{!11391, !11384, !11392}
!11392 = !DILocation(line: 436, column: 7, scope: !11382)
!11393 = !DILocation(line: 444, column: 13, scope: !11394)
!11394 = distinct !DILexicalBlock(scope: !11377, file: !11133, line: 439, column: 5)
!11395 = !DILocation(line: 444, column: 7, scope: !11394)
!11396 = !DILocation(line: 446, column: 13, scope: !11397)
!11397 = distinct !DILexicalBlock(scope: !11398, file: !11133, line: 446, column: 12)
!11398 = distinct !DILexicalBlock(scope: !11394, file: !11133, line: 445, column: 7)
!11399 = !DILocation(line: 446, column: 27, scope: !11397)
!11400 = !DILocation(line: 446, column: 41, scope: !11397)
!11401 = !DILocation(line: 446, column: 12, scope: !11398)
!11402 = distinct !{!11402, !11395, !11403}
!11403 = !DILocation(line: 450, column: 7, scope: !11394)
!11404 = !DILocation(line: 454, column: 8, scope: !11168)
!11405 = !DILocation(line: 456, column: 7, scope: !11406)
!11406 = distinct !DILexicalBlock(scope: !11407, file: !11133, line: 455, column: 5)
!11407 = distinct !DILexicalBlock(scope: !11168, file: !11133, line: 454, column: 8)
!11408 = !DILocation(line: 457, column: 5, scope: !11406)
!11409 = !DILocation(line: 462, column: 31, scope: !11410)
!11410 = distinct !DILexicalBlock(scope: !11138, file: !11133, line: 462, column: 7)
!11411 = !DILocation(line: 462, column: 41, scope: !11410)
!11412 = !DILocation(line: 462, column: 7, scope: !11138)
!11413 = !DILocation(line: 465, column: 8, scope: !11414)
!11414 = distinct !DILexicalBlock(scope: !11415, file: !11133, line: 465, column: 8)
!11415 = distinct !DILexicalBlock(scope: !11410, file: !11133, line: 463, column: 3)
!11416 = !DILocation(line: 465, column: 38, scope: !11414)
!11417 = !DILocation(line: 465, column: 8, scope: !11415)
!11418 = !DILocation(line: 467, column: 44, scope: !11419)
!11419 = distinct !DILexicalBlock(scope: !11420, file: !11133, line: 467, column: 10)
!11420 = distinct !DILexicalBlock(scope: !11414, file: !11133, line: 466, column: 5)
!11421 = !DILocation(line: 0, scope: !11419)
!11422 = !DILocation(line: 467, column: 10, scope: !11420)
!11423 = !DILocation(line: 483, column: 15, scope: !11424)
!11424 = distinct !DILexicalBlock(scope: !11419, file: !11133, line: 468, column: 7)
!11425 = !DILocation(line: 483, column: 9, scope: !11424)
!11426 = !DILocation(line: 485, column: 15, scope: !11427)
!11427 = distinct !DILexicalBlock(scope: !11428, file: !11133, line: 485, column: 14)
!11428 = distinct !DILexicalBlock(scope: !11424, file: !11133, line: 484, column: 9)
!11429 = !DILocation(line: 485, column: 29, scope: !11427)
!11430 = !DILocation(line: 485, column: 43, scope: !11427)
!11431 = !DILocation(line: 485, column: 14, scope: !11428)
!11432 = distinct !{!11432, !11425, !11433}
!11433 = !DILocation(line: 489, column: 9, scope: !11424)
!11434 = !DILocation(line: 492, column: 9, scope: !11424)
!11435 = !DILocation(line: 498, column: 9, scope: !11424)
!11436 = !DILocation(line: 501, column: 21, scope: !11424)
!11437 = !DILocation(line: 504, column: 9, scope: !11424)
!11438 = !DILocation(line: 504, column: 15, scope: !11424)
!11439 = !DILocation(line: 504, column: 51, scope: !11424)
!11440 = !DILocation(line: 506, column: 15, scope: !11441)
!11441 = distinct !DILexicalBlock(scope: !11442, file: !11133, line: 506, column: 14)
!11442 = distinct !DILexicalBlock(scope: !11424, file: !11133, line: 505, column: 9)
!11443 = !DILocation(line: 506, column: 29, scope: !11441)
!11444 = !DILocation(line: 506, column: 43, scope: !11441)
!11445 = !DILocation(line: 506, column: 14, scope: !11442)
!11446 = distinct !{!11446, !11437, !11447}
!11447 = !DILocation(line: 510, column: 9, scope: !11424)
!11448 = !DILocation(line: 521, column: 15, scope: !11449)
!11449 = distinct !DILexicalBlock(scope: !11419, file: !11133, line: 513, column: 7)
!11450 = !DILocation(line: 521, column: 9, scope: !11449)
!11451 = !DILocation(line: 523, column: 15, scope: !11452)
!11452 = distinct !DILexicalBlock(scope: !11453, file: !11133, line: 523, column: 14)
!11453 = distinct !DILexicalBlock(scope: !11449, file: !11133, line: 522, column: 9)
!11454 = !DILocation(line: 523, column: 29, scope: !11452)
!11455 = !DILocation(line: 523, column: 43, scope: !11452)
!11456 = !DILocation(line: 523, column: 14, scope: !11453)
!11457 = distinct !{!11457, !11450, !11458}
!11458 = !DILocation(line: 527, column: 9, scope: !11449)
!11459 = !DILocation(line: 533, column: 44, scope: !11460)
!11460 = distinct !DILexicalBlock(scope: !11461, file: !11133, line: 533, column: 10)
!11461 = distinct !DILexicalBlock(scope: !11414, file: !11133, line: 531, column: 5)
!11462 = !DILocation(line: 533, column: 10, scope: !11461)
!11463 = !DILocation(line: 540, column: 27, scope: !11464)
!11464 = distinct !DILexicalBlock(scope: !11460, file: !11133, line: 538, column: 7)
!11465 = !DILocation(line: 551, column: 14, scope: !11466)
!11466 = distinct !DILexicalBlock(scope: !11464, file: !11133, line: 550, column: 13)
!11467 = !DILocation(line: 551, column: 81, scope: !11466)
!11468 = !DILocation(line: 551, column: 55, scope: !11466)
!11469 = !DILocation(line: 551, column: 92, scope: !11466)
!11470 = !DILocation(line: 552, column: 14, scope: !11466)
!11471 = !DILocation(line: 552, column: 80, scope: !11466)
!11472 = !DILocation(line: 552, column: 53, scope: !11466)
!11473 = !DILocation(line: 552, column: 111, scope: !11466)
!11474 = !DILocation(line: 553, column: 14, scope: !11466)
!11475 = !DILocation(line: 553, column: 80, scope: !11466)
!11476 = !DILocation(line: 553, column: 86, scope: !11466)
!11477 = !DILocation(line: 553, column: 53, scope: !11466)
!11478 = !DILocation(line: 553, column: 111, scope: !11466)
!11479 = !DILocation(line: 554, column: 14, scope: !11466)
!11480 = !DILocation(line: 554, column: 82, scope: !11466)
!11481 = !DILocation(line: 554, column: 101, scope: !11466)
!11482 = !DILocation(line: 554, column: 53, scope: !11466)
!11483 = !DILocation(line: 554, column: 126, scope: !11466)
!11484 = !DILocation(line: 555, column: 14, scope: !11466)
!11485 = !DILocation(line: 555, column: 80, scope: !11466)
!11486 = !DILocation(line: 555, column: 85, scope: !11466)
!11487 = !DILocation(line: 555, column: 53, scope: !11466)
!11488 = !DILocation(line: 550, column: 13, scope: !11464)
!11489 = !DILocation(line: 563, column: 3, scope: !11138)
!11490 = !DILocation(line: 564, column: 1, scope: !11138)
!11491 = !DISubprogram(name: "HAL_GetTick", scope: !11492, file: !11492, line: 234, type: !3220, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2048)
!11492 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11493 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !11133, file: !11133, line: 591, type: !11494, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2791, retainedNodes: !11505)
!11494 = !DISubroutineType(types: !11495)
!11495 = !{!11136, !11496, !118}
!11496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11497, size: 32)
!11497 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !11143, line: 92, baseType: !11498)
!11498 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11143, line: 75, size: 160, elements: !11499)
!11499 = !{!11500, !11501, !11502, !11503, !11504}
!11500 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !11498, file: !11143, line: 77, baseType: !118, size: 32)
!11501 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !11498, file: !11143, line: 80, baseType: !118, size: 32, offset: 32)
!11502 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !11498, file: !11143, line: 83, baseType: !118, size: 32, offset: 64)
!11503 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !11498, file: !11143, line: 86, baseType: !118, size: 32, offset: 96)
!11504 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !11498, file: !11143, line: 89, baseType: !118, size: 32, offset: 128)
!11505 = !{!11506, !11507, !11508}
!11506 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !11493, file: !11133, line: 591, type: !11496)
!11507 = !DILocalVariable(name: "FLatency", arg: 2, scope: !11493, file: !11133, line: 591, type: !118)
!11508 = !DILocalVariable(name: "tickstart", scope: !11493, file: !11133, line: 593, type: !118)
!11509 = !DILocation(line: 0, scope: !11493)
!11510 = !DILocation(line: 596, column: 24, scope: !11511)
!11511 = distinct !DILexicalBlock(scope: !11493, file: !11133, line: 596, column: 6)
!11512 = !DILocation(line: 596, column: 6, scope: !11493)
!11513 = !DILocation(line: 610, column: 17, scope: !11514)
!11514 = distinct !DILexicalBlock(scope: !11493, file: !11133, line: 610, column: 6)
!11515 = !DILocation(line: 610, column: 15, scope: !11514)
!11516 = !DILocation(line: 610, column: 6, scope: !11493)
!11517 = !DILocation(line: 613, column: 5, scope: !11518)
!11518 = distinct !DILexicalBlock(scope: !11514, file: !11133, line: 611, column: 3)
!11519 = !DILocation(line: 617, column: 8, scope: !11520)
!11520 = distinct !DILexicalBlock(scope: !11518, file: !11133, line: 617, column: 8)
!11521 = !DILocation(line: 617, column: 34, scope: !11520)
!11522 = !DILocation(line: 617, column: 8, scope: !11518)
!11523 = !DILocation(line: 624, column: 27, scope: !11524)
!11524 = distinct !DILexicalBlock(scope: !11493, file: !11133, line: 624, column: 6)
!11525 = !DILocation(line: 624, column: 38, scope: !11524)
!11526 = !DILocation(line: 624, column: 60, scope: !11524)
!11527 = !DILocation(line: 624, column: 6, scope: !11493)
!11528 = !DILocation(line: 628, column: 40, scope: !11529)
!11529 = distinct !DILexicalBlock(scope: !11530, file: !11133, line: 628, column: 8)
!11530 = distinct !DILexicalBlock(scope: !11524, file: !11133, line: 625, column: 3)
!11531 = !DILocation(line: 628, column: 63, scope: !11529)
!11532 = !DILocation(line: 628, column: 8, scope: !11530)
!11533 = !DILocation(line: 630, column: 7, scope: !11534)
!11534 = distinct !DILexicalBlock(scope: !11529, file: !11133, line: 629, column: 5)
!11535 = !DILocation(line: 633, column: 29, scope: !11536)
!11536 = distinct !DILexicalBlock(scope: !11530, file: !11133, line: 633, column: 8)
!11537 = !DILocation(line: 631, column: 5, scope: !11534)
!11538 = !DILocation(line: 633, column: 40, scope: !11536)
!11539 = !DILocation(line: 633, column: 63, scope: !11536)
!11540 = !DILocation(line: 633, column: 8, scope: !11530)
!11541 = !DILocation(line: 635, column: 7, scope: !11542)
!11542 = distinct !DILexicalBlock(scope: !11536, file: !11133, line: 634, column: 5)
!11543 = !DILocation(line: 636, column: 5, scope: !11542)
!11544 = !DILocation(line: 639, column: 5, scope: !11530)
!11545 = !DILocation(line: 643, column: 27, scope: !11546)
!11546 = distinct !DILexicalBlock(scope: !11493, file: !11133, line: 643, column: 6)
!11547 = !DILocation(line: 640, column: 3, scope: !11530)
!11548 = !DILocation(line: 643, column: 38, scope: !11546)
!11549 = !DILocation(line: 643, column: 62, scope: !11546)
!11550 = !DILocation(line: 643, column: 6, scope: !11493)
!11551 = !DILocation(line: 648, column: 27, scope: !11552)
!11552 = distinct !DILexicalBlock(scope: !11553, file: !11133, line: 648, column: 8)
!11553 = distinct !DILexicalBlock(scope: !11546, file: !11133, line: 644, column: 3)
!11554 = !DILocation(line: 648, column: 8, scope: !11553)
!11555 = !DILocation(line: 651, column: 10, scope: !11556)
!11556 = distinct !DILexicalBlock(scope: !11557, file: !11133, line: 651, column: 10)
!11557 = distinct !DILexicalBlock(scope: !11552, file: !11133, line: 649, column: 5)
!11558 = !DILocation(line: 651, column: 46, scope: !11556)
!11559 = !DILocation(line: 651, column: 10, scope: !11557)
!11560 = !DILocation(line: 661, column: 10, scope: !11561)
!11561 = distinct !DILexicalBlock(scope: !11562, file: !11133, line: 661, column: 10)
!11562 = distinct !DILexicalBlock(scope: !11563, file: !11133, line: 659, column: 5)
!11563 = distinct !DILexicalBlock(scope: !11552, file: !11133, line: 657, column: 13)
!11564 = !DILocation(line: 661, column: 46, scope: !11561)
!11565 = !DILocation(line: 661, column: 10, scope: !11562)
!11566 = !DILocation(line: 670, column: 10, scope: !11567)
!11567 = distinct !DILexicalBlock(scope: !11568, file: !11133, line: 670, column: 10)
!11568 = distinct !DILexicalBlock(scope: !11563, file: !11133, line: 668, column: 5)
!11569 = !DILocation(line: 670, column: 46, scope: !11567)
!11570 = !DILocation(line: 670, column: 10, scope: !11568)
!11571 = !DILocation(line: 676, column: 5, scope: !11553)
!11572 = !DILocation(line: 679, column: 17, scope: !11553)
!11573 = !DILocation(line: 681, column: 5, scope: !11553)
!11574 = !DILocation(line: 681, column: 12, scope: !11553)
!11575 = !DILocation(line: 681, column: 65, scope: !11553)
!11576 = !DILocation(line: 681, column: 78, scope: !11553)
!11577 = !DILocation(line: 681, column: 42, scope: !11553)
!11578 = !DILocation(line: 683, column: 12, scope: !11579)
!11579 = distinct !DILexicalBlock(scope: !11580, file: !11133, line: 683, column: 11)
!11580 = distinct !DILexicalBlock(scope: !11553, file: !11133, line: 682, column: 5)
!11581 = !DILocation(line: 683, column: 26, scope: !11579)
!11582 = !DILocation(line: 683, column: 39, scope: !11579)
!11583 = !DILocation(line: 683, column: 11, scope: !11580)
!11584 = distinct !{!11584, !11573, !11585}
!11585 = !DILocation(line: 687, column: 5, scope: !11553)
!11586 = !DILocation(line: 691, column: 17, scope: !11587)
!11587 = distinct !DILexicalBlock(scope: !11493, file: !11133, line: 691, column: 6)
!11588 = !DILocation(line: 691, column: 15, scope: !11587)
!11589 = !DILocation(line: 691, column: 6, scope: !11493)
!11590 = !DILocation(line: 694, column: 5, scope: !11591)
!11591 = distinct !DILexicalBlock(scope: !11587, file: !11133, line: 692, column: 3)
!11592 = !DILocation(line: 698, column: 8, scope: !11593)
!11593 = distinct !DILexicalBlock(scope: !11591, file: !11133, line: 698, column: 8)
!11594 = !DILocation(line: 698, column: 34, scope: !11593)
!11595 = !DILocation(line: 698, column: 8, scope: !11591)
!11596 = !DILocation(line: 705, column: 27, scope: !11597)
!11597 = distinct !DILexicalBlock(scope: !11493, file: !11133, line: 705, column: 6)
!11598 = !DILocation(line: 705, column: 38, scope: !11597)
!11599 = !DILocation(line: 705, column: 61, scope: !11597)
!11600 = !DILocation(line: 705, column: 6, scope: !11493)
!11601 = !DILocation(line: 708, column: 5, scope: !11602)
!11602 = distinct !DILexicalBlock(scope: !11597, file: !11133, line: 706, column: 3)
!11603 = !DILocation(line: 712, column: 27, scope: !11604)
!11604 = distinct !DILexicalBlock(scope: !11493, file: !11133, line: 712, column: 6)
!11605 = !DILocation(line: 709, column: 3, scope: !11602)
!11606 = !DILocation(line: 712, column: 38, scope: !11604)
!11607 = !DILocation(line: 712, column: 61, scope: !11604)
!11608 = !DILocation(line: 712, column: 6, scope: !11493)
!11609 = !DILocation(line: 715, column: 5, scope: !11610)
!11610 = distinct !DILexicalBlock(scope: !11604, file: !11133, line: 713, column: 3)
!11611 = !DILocation(line: 716, column: 3, scope: !11610)
!11612 = !DILocation(line: 719, column: 21, scope: !11493)
!11613 = !DILocation(line: 719, column: 70, scope: !11493)
!11614 = !DILocation(line: 719, column: 91, scope: !11493)
!11615 = !DILocation(line: 719, column: 50, scope: !11493)
!11616 = !DILocation(line: 719, column: 47, scope: !11493)
!11617 = !DILocation(line: 719, column: 19, scope: !11493)
!11618 = !DILocation(line: 722, column: 17, scope: !11493)
!11619 = !DILocation(line: 722, column: 3, scope: !11493)
!11620 = !DILocation(line: 724, column: 3, scope: !11493)
!11621 = !DILocation(line: 725, column: 1, scope: !11493)
!11622 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !11133, file: !11133, line: 885, type: !3220, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2791, retainedNodes: !11623)
!11623 = !{!11624, !11625, !11626, !11627}
!11624 = !DILocalVariable(name: "pllm", scope: !11622, file: !11133, line: 887, type: !118)
!11625 = !DILocalVariable(name: "pllvco", scope: !11622, file: !11133, line: 887, type: !118)
!11626 = !DILocalVariable(name: "pllp", scope: !11622, file: !11133, line: 887, type: !118)
!11627 = !DILocalVariable(name: "sysclockfreq", scope: !11622, file: !11133, line: 888, type: !118)
!11628 = !DILocation(line: 0, scope: !11622)
!11629 = !DILocation(line: 891, column: 16, scope: !11622)
!11630 = !DILocation(line: 891, column: 21, scope: !11622)
!11631 = !DILocation(line: 891, column: 3, scope: !11622)
!11632 = !DILocation(line: 907, column: 19, scope: !11633)
!11633 = distinct !DILexicalBlock(scope: !11634, file: !11133, line: 904, column: 5)
!11634 = distinct !DILexicalBlock(scope: !11622, file: !11133, line: 892, column: 3)
!11635 = !DILocation(line: 907, column: 27, scope: !11633)
!11636 = !DILocation(line: 908, column: 10, scope: !11637)
!11637 = distinct !DILexicalBlock(scope: !11633, file: !11133, line: 908, column: 10)
!11638 = !DILocation(line: 0, scope: !11637)
!11639 = !DILocation(line: 918, column: 23, scope: !11633)
!11640 = !DILocation(line: 918, column: 82, scope: !11633)
!11641 = !DILocation(line: 920, column: 28, scope: !11633)
!11642 = !DILocation(line: 921, column: 7, scope: !11633)
!11643 = !DILocation(line: 0, scope: !11634)
!11644 = !DILocation(line: 929, column: 3, scope: !11622)
!11645 = !DISubprogram(name: "HAL_InitTick", scope: !11492, file: !11492, line: 223, type: !11646, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2048)
!11646 = !DISubroutineType(types: !11647)
!11647 = !{!11136, !118}
!11648 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !11133, file: !11133, line: 775, type: !11649, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2791, retainedNodes: !11651)
!11649 = !DISubroutineType(types: !11650)
!11650 = !{null, !118, !118, !118}
!11651 = !{!11652, !11653, !11654, !11655, !11665, !11669}
!11652 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !11648, file: !11133, line: 775, type: !118)
!11653 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !11648, file: !11133, line: 775, type: !118)
!11654 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !11648, file: !11133, line: 775, type: !118)
!11655 = !DILocalVariable(name: "GPIO_InitStruct", scope: !11648, file: !11133, line: 777, type: !11656)
!11656 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !11657, line: 62, baseType: !11658)
!11657 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11658 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11657, line: 46, size: 160, elements: !11659)
!11659 = !{!11660, !11661, !11662, !11663, !11664}
!11660 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !11658, file: !11657, line: 48, baseType: !118, size: 32)
!11661 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !11658, file: !11657, line: 51, baseType: !118, size: 32, offset: 32)
!11662 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !11658, file: !11657, line: 54, baseType: !118, size: 32, offset: 64)
!11663 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !11658, file: !11657, line: 57, baseType: !118, size: 32, offset: 96)
!11664 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !11658, file: !11657, line: 60, baseType: !118, size: 32, offset: 128)
!11665 = !DILocalVariable(name: "tmpreg", scope: !11666, file: !11133, line: 787, type: !314)
!11666 = distinct !DILexicalBlock(scope: !11667, file: !11133, line: 787, column: 5)
!11667 = distinct !DILexicalBlock(scope: !11668, file: !11133, line: 783, column: 3)
!11668 = distinct !DILexicalBlock(scope: !11648, file: !11133, line: 782, column: 6)
!11669 = !DILocalVariable(name: "tmpreg", scope: !11670, file: !11133, line: 811, type: !314)
!11670 = distinct !DILexicalBlock(scope: !11671, file: !11133, line: 811, column: 5)
!11671 = distinct !DILexicalBlock(scope: !11668, file: !11133, line: 807, column: 3)
!11672 = !DILocation(line: 0, scope: !11648)
!11673 = !DILocation(line: 777, column: 3, scope: !11648)
!11674 = !DILocation(line: 777, column: 20, scope: !11648)
!11675 = !DILocation(line: 782, column: 15, scope: !11668)
!11676 = !DILocation(line: 782, column: 6, scope: !11648)
!11677 = !DILocation(line: 787, column: 5, scope: !11666)
!11678 = !DILocation(line: 787, column: 5, scope: !11667)
!11679 = !DILocation(line: 790, column: 21, scope: !11667)
!11680 = !DILocation(line: 790, column: 25, scope: !11667)
!11681 = !DILocation(line: 791, column: 21, scope: !11667)
!11682 = !DILocation(line: 791, column: 26, scope: !11667)
!11683 = !DILocation(line: 792, column: 21, scope: !11667)
!11684 = !DILocation(line: 792, column: 27, scope: !11667)
!11685 = !DILocation(line: 793, column: 21, scope: !11667)
!11686 = !DILocation(line: 793, column: 26, scope: !11667)
!11687 = !DILocation(line: 794, column: 21, scope: !11667)
!11688 = !DILocation(line: 794, column: 31, scope: !11667)
!11689 = !DILocation(line: 795, column: 5, scope: !11667)
!11690 = !DILocation(line: 798, column: 5, scope: !11667)
!11691 = !DILocation(line: 804, column: 3, scope: !11667)
!11692 = !DILocation(line: 811, column: 5, scope: !11670)
!11693 = !DILocation(line: 811, column: 5, scope: !11671)
!11694 = !DILocation(line: 814, column: 21, scope: !11671)
!11695 = !DILocation(line: 814, column: 25, scope: !11671)
!11696 = !DILocation(line: 815, column: 21, scope: !11671)
!11697 = !DILocation(line: 815, column: 26, scope: !11671)
!11698 = !DILocation(line: 816, column: 21, scope: !11671)
!11699 = !DILocation(line: 816, column: 27, scope: !11671)
!11700 = !DILocation(line: 817, column: 21, scope: !11671)
!11701 = !DILocation(line: 817, column: 26, scope: !11671)
!11702 = !DILocation(line: 818, column: 21, scope: !11671)
!11703 = !DILocation(line: 818, column: 31, scope: !11671)
!11704 = !DILocation(line: 819, column: 5, scope: !11671)
!11705 = !DILocation(line: 822, column: 5, scope: !11671)
!11706 = !DILocation(line: 0, scope: !11668)
!11707 = !DILocation(line: 830, column: 1, scope: !11648)
!11708 = !DISubprogram(name: "HAL_GPIO_Init", scope: !11657, file: !11657, line: 224, type: !11709, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2048)
!11709 = !DISubroutineType(types: !11710)
!11710 = !{null, !2864, !11711}
!11711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11656, size: 32)
!11712 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !11133, file: !11133, line: 841, type: !2982, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2791, retainedNodes: !2048)
!11713 = !DILocation(line: 843, column: 38, scope: !11712)
!11714 = !DILocation(line: 844, column: 1, scope: !11712)
!11715 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !11133, file: !11133, line: 850, type: !2982, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2791, retainedNodes: !2048)
!11716 = !DILocation(line: 852, column: 38, scope: !11715)
!11717 = !DILocation(line: 853, column: 1, scope: !11715)
!11718 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !11133, file: !11133, line: 941, type: !3220, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2791, retainedNodes: !2048)
!11719 = !DILocation(line: 943, column: 10, scope: !11718)
!11720 = !DILocation(line: 943, column: 3, scope: !11718)
!11721 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !11133, file: !11133, line: 952, type: !3220, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2791, retainedNodes: !2048)
!11722 = !DILocation(line: 955, column: 11, scope: !11721)
!11723 = !DILocation(line: 955, column: 56, scope: !11721)
!11724 = !DILocation(line: 955, column: 78, scope: !11721)
!11725 = !DILocation(line: 955, column: 36, scope: !11721)
!11726 = !DILocation(line: 955, column: 33, scope: !11721)
!11727 = !DILocation(line: 955, column: 3, scope: !11721)
!11728 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !11133, file: !11133, line: 964, type: !3220, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2791, retainedNodes: !2048)
!11729 = !DILocation(line: 967, column: 11, scope: !11728)
!11730 = !DILocation(line: 967, column: 55, scope: !11728)
!11731 = !DILocation(line: 967, column: 77, scope: !11728)
!11732 = !DILocation(line: 967, column: 35, scope: !11728)
!11733 = !DILocation(line: 967, column: 32, scope: !11728)
!11734 = !DILocation(line: 967, column: 3, scope: !11728)
!11735 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !11133, file: !11133, line: 977, type: !11736, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2791, retainedNodes: !11738)
!11736 = !DISubroutineType(types: !11737)
!11737 = !{null, !11141}
!11738 = !{!11739}
!11739 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11735, file: !11133, line: 977, type: !11141)
!11740 = !DILocation(line: 0, scope: !11735)
!11741 = !DILocation(line: 980, column: 22, scope: !11735)
!11742 = !DILocation(line: 980, column: 37, scope: !11735)
!11743 = !DILocation(line: 983, column: 12, scope: !11744)
!11744 = distinct !DILexicalBlock(scope: !11735, file: !11133, line: 983, column: 6)
!11745 = !DILocation(line: 983, column: 15, scope: !11744)
!11746 = !DILocation(line: 983, column: 31, scope: !11744)
!11747 = !DILocation(line: 983, column: 6, scope: !11735)
!11748 = !DILocation(line: 985, column: 24, scope: !11749)
!11749 = distinct !DILexicalBlock(scope: !11744, file: !11133, line: 984, column: 3)
!11750 = !DILocation(line: 985, column: 33, scope: !11749)
!11751 = !DILocation(line: 986, column: 3, scope: !11749)
!11752 = !DILocation(line: 987, column: 17, scope: !11753)
!11753 = distinct !DILexicalBlock(scope: !11744, file: !11133, line: 987, column: 11)
!11754 = !DILocation(line: 987, column: 20, scope: !11753)
!11755 = !DILocation(line: 987, column: 35, scope: !11753)
!11756 = !DILocation(line: 0, scope: !11753)
!11757 = !DILocation(line: 987, column: 11, scope: !11744)
!11758 = !DILocation(line: 989, column: 33, scope: !11759)
!11759 = distinct !DILexicalBlock(scope: !11753, file: !11133, line: 988, column: 3)
!11760 = !DILocation(line: 990, column: 3, scope: !11759)
!11761 = !DILocation(line: 993, column: 33, scope: !11762)
!11762 = distinct !DILexicalBlock(scope: !11753, file: !11133, line: 992, column: 3)
!11763 = !DILocation(line: 997, column: 12, scope: !11764)
!11764 = distinct !DILexicalBlock(scope: !11735, file: !11133, line: 997, column: 6)
!11765 = !DILocation(line: 997, column: 15, scope: !11764)
!11766 = !DILocation(line: 1003, column: 24, scope: !11767)
!11767 = distinct !DILexicalBlock(scope: !11764, file: !11133, line: 1002, column: 3)
!11768 = !DILocation(line: 1003, column: 33, scope: !11767)
!11769 = !DILocation(line: 1006, column: 61, scope: !11735)
!11770 = !DILocation(line: 1006, column: 81, scope: !11735)
!11771 = !DILocation(line: 1006, column: 22, scope: !11735)
!11772 = !DILocation(line: 1006, column: 42, scope: !11735)
!11773 = !DILocation(line: 1009, column: 12, scope: !11774)
!11774 = distinct !DILexicalBlock(scope: !11735, file: !11133, line: 1009, column: 6)
!11775 = !DILocation(line: 1009, column: 17, scope: !11774)
!11776 = !DILocation(line: 1009, column: 35, scope: !11774)
!11777 = !DILocation(line: 1009, column: 6, scope: !11735)
!11778 = !DILocation(line: 1011, column: 24, scope: !11779)
!11779 = distinct !DILexicalBlock(scope: !11774, file: !11133, line: 1010, column: 3)
!11780 = !DILocation(line: 1011, column: 33, scope: !11779)
!11781 = !DILocation(line: 1012, column: 3, scope: !11779)
!11782 = !DILocation(line: 1013, column: 17, scope: !11783)
!11783 = distinct !DILexicalBlock(scope: !11774, file: !11133, line: 1013, column: 11)
!11784 = !DILocation(line: 1013, column: 22, scope: !11783)
!11785 = !DILocation(line: 1013, column: 39, scope: !11783)
!11786 = !DILocation(line: 0, scope: !11783)
!11787 = !DILocation(line: 1013, column: 11, scope: !11774)
!11788 = !DILocation(line: 1015, column: 33, scope: !11789)
!11789 = distinct !DILexicalBlock(scope: !11783, file: !11133, line: 1014, column: 3)
!11790 = !DILocation(line: 1016, column: 3, scope: !11789)
!11791 = !DILocation(line: 1019, column: 33, scope: !11792)
!11792 = distinct !DILexicalBlock(scope: !11783, file: !11133, line: 1018, column: 3)
!11793 = !DILocation(line: 1023, column: 12, scope: !11794)
!11794 = distinct !DILexicalBlock(scope: !11735, file: !11133, line: 1023, column: 6)
!11795 = !DILocation(line: 1023, column: 16, scope: !11794)
!11796 = !DILocation(line: 1029, column: 24, scope: !11797)
!11797 = distinct !DILexicalBlock(scope: !11794, file: !11133, line: 1028, column: 3)
!11798 = !DILocation(line: 1029, column: 33, scope: !11797)
!11799 = !DILocation(line: 1033, column: 12, scope: !11800)
!11800 = distinct !DILexicalBlock(scope: !11735, file: !11133, line: 1033, column: 6)
!11801 = !DILocation(line: 1033, column: 15, scope: !11800)
!11802 = !DILocation(line: 1033, column: 30, scope: !11800)
!11803 = !DILocation(line: 1033, column: 6, scope: !11735)
!11804 = !DILocation(line: 1039, column: 28, scope: !11805)
!11805 = distinct !DILexicalBlock(scope: !11800, file: !11133, line: 1038, column: 3)
!11806 = !DILocation(line: 1039, column: 37, scope: !11805)
!11807 = !DILocation(line: 1041, column: 54, scope: !11735)
!11808 = !DILocation(line: 1041, column: 62, scope: !11735)
!11809 = !DILocation(line: 1041, column: 26, scope: !11735)
!11810 = !DILocation(line: 1041, column: 36, scope: !11735)
!11811 = !DILocation(line: 1042, column: 49, scope: !11735)
!11812 = !DILocation(line: 1042, column: 57, scope: !11735)
!11813 = !DILocation(line: 1042, column: 26, scope: !11735)
!11814 = !DILocation(line: 1042, column: 31, scope: !11735)
!11815 = !DILocation(line: 1043, column: 50, scope: !11735)
!11816 = !DILocation(line: 1043, column: 78, scope: !11735)
!11817 = !DILocation(line: 1043, column: 26, scope: !11735)
!11818 = !DILocation(line: 1043, column: 31, scope: !11735)
!11819 = !DILocation(line: 1044, column: 52, scope: !11735)
!11820 = !DILocation(line: 1044, column: 102, scope: !11735)
!11821 = !DILocation(line: 1044, column: 109, scope: !11735)
!11822 = !DILocation(line: 1044, column: 26, scope: !11735)
!11823 = !DILocation(line: 1044, column: 31, scope: !11735)
!11824 = !DILocation(line: 1045, column: 50, scope: !11735)
!11825 = !DILocation(line: 1045, column: 78, scope: !11735)
!11826 = !DILocation(line: 1045, column: 26, scope: !11735)
!11827 = !DILocation(line: 1045, column: 31, scope: !11735)
!11828 = !DILocation(line: 1046, column: 1, scope: !11735)
!11829 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !11133, file: !11133, line: 1056, type: !11830, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2791, retainedNodes: !11832)
!11830 = !DISubroutineType(types: !11831)
!11831 = !{null, !11496, !867}
!11832 = !{!11833, !11834}
!11833 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !11829, file: !11133, line: 1056, type: !11496)
!11834 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !11829, file: !11133, line: 1056, type: !867)
!11835 = !DILocation(line: 0, scope: !11829)
!11836 = !DILocation(line: 1059, column: 22, scope: !11829)
!11837 = !DILocation(line: 1059, column: 32, scope: !11829)
!11838 = !DILocation(line: 1062, column: 53, scope: !11829)
!11839 = !DILocation(line: 1062, column: 58, scope: !11829)
!11840 = !DILocation(line: 1062, column: 22, scope: !11829)
!11841 = !DILocation(line: 1062, column: 35, scope: !11829)
!11842 = !DILocation(line: 1065, column: 54, scope: !11829)
!11843 = !DILocation(line: 1065, column: 59, scope: !11829)
!11844 = !DILocation(line: 1065, column: 22, scope: !11829)
!11845 = !DILocation(line: 1065, column: 36, scope: !11829)
!11846 = !DILocation(line: 1068, column: 55, scope: !11829)
!11847 = !DILocation(line: 1068, column: 60, scope: !11829)
!11848 = !DILocation(line: 1068, column: 22, scope: !11829)
!11849 = !DILocation(line: 1068, column: 37, scope: !11829)
!11850 = !DILocation(line: 1071, column: 56, scope: !11829)
!11851 = !DILocation(line: 1071, column: 79, scope: !11829)
!11852 = !DILocation(line: 1071, column: 22, scope: !11829)
!11853 = !DILocation(line: 1071, column: 37, scope: !11829)
!11854 = !DILocation(line: 1074, column: 34, scope: !11829)
!11855 = !DILocation(line: 1074, column: 38, scope: !11829)
!11856 = !DILocation(line: 1074, column: 14, scope: !11829)
!11857 = !DILocation(line: 1075, column: 1, scope: !11829)
!11858 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !11133, file: !11133, line: 1082, type: !2982, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2791, retainedNodes: !2048)
!11859 = !DILocation(line: 1085, column: 6, scope: !11860)
!11860 = distinct !DILexicalBlock(scope: !11858, file: !11133, line: 1085, column: 6)
!11861 = !DILocation(line: 1085, column: 6, scope: !11858)
!11862 = !DILocation(line: 1088, column: 5, scope: !11863)
!11863 = distinct !DILexicalBlock(scope: !11860, file: !11133, line: 1086, column: 3)
!11864 = !DILocation(line: 1091, column: 5, scope: !11863)
!11865 = !DILocation(line: 1092, column: 3, scope: !11863)
!11866 = !DILocation(line: 1093, column: 1, scope: !11858)
!11867 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !11133, file: !11133, line: 1099, type: !2982, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2791, retainedNodes: !2048)
!11868 = !DILocation(line: 1104, column: 1, scope: !11867)
!11869 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !11870, file: !11870, line: 257, type: !6429, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2877, retainedNodes: !11871)
!11870 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11871 = !{!11872}
!11872 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11869, file: !11870, line: 257, type: !118)
!11873 = !DILocation(line: 0, scope: !11869)
!11874 = !DILocation(line: 260, column: 3, scope: !11869)
!11875 = !DILocation(line: 261, column: 1, scope: !11869)
!11876 = distinct !DISubprogram(name: "LL_InitTick", scope: !11877, file: !11877, line: 260, type: !9492, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2877, retainedNodes: !11878)
!11877 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11878 = !{!11879, !11880}
!11879 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11876, file: !11877, line: 260, type: !118)
!11880 = !DILocalVariable(name: "Ticks", arg: 2, scope: !11876, file: !11877, line: 260, type: !118)
!11881 = !DILocation(line: 0, scope: !11876)
!11882 = !DILocation(line: 263, column: 46, scope: !11876)
!11883 = !DILocation(line: 263, column: 55, scope: !11876)
!11884 = !DILocation(line: 263, column: 18, scope: !11876)
!11885 = !DILocation(line: 264, column: 18, scope: !11876)
!11886 = !DILocation(line: 265, column: 18, scope: !11876)
!11887 = !DILocation(line: 267, column: 1, scope: !11876)
!11888 = distinct !DISubprogram(name: "LL_mDelay", scope: !11870, file: !11870, line: 273, type: !6429, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2877, retainedNodes: !11889)
!11889 = !{!11890, !11891}
!11890 = !DILocalVariable(name: "Delay", arg: 1, scope: !11888, file: !11870, line: 273, type: !118)
!11891 = !DILocalVariable(name: "tmp", scope: !11888, file: !11870, line: 275, type: !314)
!11892 = !DILocation(line: 0, scope: !11888)
!11893 = !DILocation(line: 275, column: 3, scope: !11888)
!11894 = !DILocation(line: 275, column: 18, scope: !11888)
!11895 = !DILocation(line: 275, column: 33, scope: !11888)
!11896 = !DILocation(line: 277, column: 10, scope: !11888)
!11897 = !DILocation(line: 280, column: 12, scope: !11898)
!11898 = distinct !DILexicalBlock(scope: !11888, file: !11870, line: 280, column: 6)
!11899 = !DILocation(line: 285, column: 3, scope: !11888)
!11900 = !DILocation(line: 287, column: 18, scope: !11901)
!11901 = distinct !DILexicalBlock(scope: !11902, file: !11870, line: 287, column: 8)
!11902 = distinct !DILexicalBlock(scope: !11888, file: !11870, line: 286, column: 3)
!11903 = !DILocation(line: 292, column: 1, scope: !11888)
!11904 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !11870, file: !11870, line: 323, type: !6429, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2877, retainedNodes: !11905)
!11905 = !{!11906}
!11906 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11904, file: !11870, line: 323, type: !118)
!11907 = !DILocation(line: 0, scope: !11904)
!11908 = !DILocation(line: 326, column: 19, scope: !11904)
!11909 = !DILocation(line: 327, column: 1, scope: !11904)
!11910 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !11870, file: !11870, line: 338, type: !11911, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2877, retainedNodes: !11914)
!11911 = !DISubroutineType(types: !11912)
!11912 = !{!11913, !118}
!11913 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !811, line: 201, baseType: !810)
!11914 = !{!11915, !11916, !11917, !11918, !11919}
!11915 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !11910, file: !11870, line: 338, type: !118)
!11916 = !DILocalVariable(name: "timeout", scope: !11910, file: !11870, line: 340, type: !118)
!11917 = !DILocalVariable(name: "getlatency", scope: !11910, file: !11870, line: 341, type: !118)
!11918 = !DILocalVariable(name: "latency", scope: !11910, file: !11870, line: 342, type: !118)
!11919 = !DILocalVariable(name: "status", scope: !11910, file: !11870, line: 343, type: !11913)
!11920 = !DILocation(line: 0, scope: !11910)
!11921 = !DILocation(line: 347, column: 21, scope: !11922)
!11922 = distinct !DILexicalBlock(scope: !11910, file: !11870, line: 347, column: 6)
!11923 = !DILocation(line: 347, column: 6, scope: !11910)
!11924 = !DILocation(line: 353, column: 8, scope: !11925)
!11925 = distinct !DILexicalBlock(scope: !11926, file: !11870, line: 353, column: 8)
!11926 = distinct !DILexicalBlock(scope: !11922, file: !11870, line: 352, column: 3)
!11927 = !DILocation(line: 387, column: 8, scope: !11928)
!11928 = distinct !DILexicalBlock(scope: !11926, file: !11870, line: 387, column: 8)
!11929 = !DILocation(line: 387, column: 40, scope: !11928)
!11930 = !DILocation(line: 387, column: 8, scope: !11926)
!11931 = !DILocation(line: 407, column: 26, scope: !11932)
!11932 = distinct !DILexicalBlock(scope: !11933, file: !11870, line: 407, column: 10)
!11933 = distinct !DILexicalBlock(scope: !11928, file: !11870, line: 388, column: 5)
!11934 = !DILocation(line: 407, column: 55, scope: !11932)
!11935 = !DILocation(line: 413, column: 28, scope: !11936)
!11936 = distinct !DILexicalBlock(scope: !11937, file: !11870, line: 413, column: 12)
!11937 = distinct !DILexicalBlock(scope: !11932, file: !11870, line: 412, column: 7)
!11938 = !DILocation(line: 413, column: 57, scope: !11936)
!11939 = !DILocation(line: 420, column: 8, scope: !11940)
!11940 = distinct !DILexicalBlock(scope: !11926, file: !11870, line: 420, column: 8)
!11941 = !DILocation(line: 420, column: 40, scope: !11940)
!11942 = !DILocation(line: 420, column: 8, scope: !11926)
!11943 = !DILocation(line: 429, column: 26, scope: !11944)
!11944 = distinct !DILexicalBlock(scope: !11945, file: !11870, line: 429, column: 10)
!11945 = distinct !DILexicalBlock(scope: !11940, file: !11870, line: 421, column: 5)
!11946 = !DILocation(line: 429, column: 55, scope: !11944)
!11947 = !DILocation(line: 435, column: 28, scope: !11948)
!11948 = distinct !DILexicalBlock(scope: !11949, file: !11870, line: 435, column: 12)
!11949 = distinct !DILexicalBlock(scope: !11944, file: !11870, line: 434, column: 7)
!11950 = !DILocation(line: 435, column: 57, scope: !11948)
!11951 = !DILocation(line: 0, scope: !11926)
!11952 = !DILocation(line: 444, column: 5, scope: !11926)
!11953 = !DILocation(line: 448, column: 5, scope: !11926)
!11954 = !DILocation(line: 451, column: 18, scope: !11955)
!11955 = distinct !DILexicalBlock(scope: !11926, file: !11870, line: 449, column: 5)
!11956 = !DILocation(line: 452, column: 12, scope: !11955)
!11957 = !DILocation(line: 453, column: 26, scope: !11926)
!11958 = !DILocation(line: 453, column: 38, scope: !11926)
!11959 = !DILocation(line: 453, column: 5, scope: !11955)
!11960 = distinct !{!11960, !11953, !11961}
!11961 = !DILocation(line: 453, column: 54, scope: !11926)
!11962 = !DILocation(line: 0, scope: !11922)
!11963 = !DILocation(line: 464, column: 3, scope: !11910)
!11964 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !11965, file: !11965, line: 519, type: !3220, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2877, retainedNodes: !2048)
!11965 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11966 = !DILocation(line: 521, column: 21, scope: !11964)
!11967 = !DILocation(line: 521, column: 3, scope: !11964)
!11968 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !6034, file: !6034, line: 1543, type: !6429, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2877, retainedNodes: !11969)
!11969 = !{!11970}
!11970 = !DILocalVariable(name: "Latency", arg: 1, scope: !11968, file: !6034, line: 1543, type: !118)
!11971 = !DILocation(line: 0, scope: !11968)
!11972 = !DILocation(line: 1545, column: 3, scope: !11968)
!11973 = !DILocation(line: 1546, column: 1, scope: !11968)
!11974 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !6034, file: !6034, line: 1569, type: !3220, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2877, retainedNodes: !2048)
!11975 = !DILocation(line: 1571, column: 21, scope: !11974)
!11976 = !DILocation(line: 1571, column: 3, scope: !11974)
!11977 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !11870, file: !11870, line: 483, type: !11978, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2877, retainedNodes: !11994)
!11978 = !DISubroutineType(types: !11979)
!11979 = !{!11913, !11980, !11987}
!11980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11981, size: 32)
!11981 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !11877, line: 114, baseType: !11982)
!11982 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11877, line: 94, size: 96, elements: !11983)
!11983 = !{!11984, !11985, !11986}
!11984 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !11982, file: !11877, line: 96, baseType: !118, size: 32)
!11985 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !11982, file: !11877, line: 102, baseType: !118, size: 32, offset: 32)
!11986 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !11982, file: !11877, line: 109, baseType: !118, size: 32, offset: 64)
!11987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11988, size: 32)
!11988 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !11877, line: 139, baseType: !11989)
!11989 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11877, line: 119, size: 96, elements: !11990)
!11990 = !{!11991, !11992, !11993}
!11991 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !11989, file: !11877, line: 121, baseType: !118, size: 32)
!11992 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !11989, file: !11877, line: 127, baseType: !118, size: 32, offset: 32)
!11993 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !11989, file: !11877, line: 133, baseType: !118, size: 32, offset: 64)
!11994 = !{!11995, !11996, !11997, !11998}
!11995 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !11977, file: !11870, line: 483, type: !11980)
!11996 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !11977, file: !11870, line: 484, type: !11987)
!11997 = !DILocalVariable(name: "status", scope: !11977, file: !11870, line: 486, type: !11913)
!11998 = !DILocalVariable(name: "pllfreq", scope: !11977, file: !11870, line: 487, type: !118)
!11999 = !DILocation(line: 0, scope: !11977)
!12000 = !DILocation(line: 490, column: 6, scope: !12001)
!12001 = distinct !DILexicalBlock(scope: !11977, file: !11870, line: 490, column: 6)
!12002 = !DILocation(line: 490, column: 25, scope: !12001)
!12003 = !DILocation(line: 490, column: 6, scope: !11977)
!12004 = !DILocation(line: 493, column: 15, scope: !12005)
!12005 = distinct !DILexicalBlock(scope: !12001, file: !11870, line: 491, column: 3)
!12006 = !DILocation(line: 496, column: 8, scope: !12007)
!12007 = distinct !DILexicalBlock(scope: !12005, file: !11870, line: 496, column: 8)
!12008 = !DILocation(line: 496, column: 29, scope: !12007)
!12009 = !DILocation(line: 496, column: 8, scope: !12005)
!12010 = !DILocation(line: 498, column: 7, scope: !12011)
!12011 = distinct !DILexicalBlock(scope: !12007, file: !11870, line: 497, column: 5)
!12012 = !DILocation(line: 499, column: 7, scope: !12011)
!12013 = !DILocation(line: 499, column: 14, scope: !12011)
!12014 = !DILocation(line: 499, column: 35, scope: !12011)
!12015 = distinct !{!12015, !12012, !12016}
!12016 = !DILocation(line: 502, column: 7, scope: !12011)
!12017 = !DILocation(line: 506, column: 76, scope: !12005)
!12018 = !DILocation(line: 506, column: 103, scope: !12005)
!12019 = !DILocation(line: 507, column: 54, scope: !12005)
!12020 = !DILocation(line: 506, column: 5, scope: !12005)
!12021 = !DILocation(line: 510, column: 14, scope: !12005)
!12022 = !DILocation(line: 511, column: 3, scope: !12005)
!12023 = !DILocation(line: 0, scope: !12001)
!12024 = !DILocation(line: 518, column: 3, scope: !11977)
!12025 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !11870, file: !11870, line: 642, type: !12026, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2877, retainedNodes: !12028)
!12026 = !DISubroutineType(types: !12027)
!12027 = !{!11913}
!12028 = !{!12029}
!12029 = !DILocalVariable(name: "status", scope: !12025, file: !11870, line: 644, type: !11913)
!12030 = !DILocation(line: 0, scope: !12025)
!12031 = !DILocation(line: 647, column: 6, scope: !12032)
!12032 = distinct !DILexicalBlock(scope: !12025, file: !11870, line: 647, column: 6)
!12033 = !DILocation(line: 647, column: 27, scope: !12032)
!12034 = !DILocation(line: 663, column: 6, scope: !12035)
!12035 = distinct !DILexicalBlock(scope: !12025, file: !11870, line: 663, column: 6)
!12036 = !DILocation(line: 663, column: 30, scope: !12035)
!12037 = !DILocation(line: 663, column: 6, scope: !12025)
!12038 = !DILocation(line: 669, column: 3, scope: !12025)
!12039 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !11870, file: !11870, line: 611, type: !12040, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2877, retainedNodes: !12042)
!12040 = !DISubroutineType(types: !12041)
!12041 = !{!118, !118, !11980}
!12042 = !{!12043, !12044, !12045}
!12043 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !12039, file: !11870, line: 611, type: !118)
!12044 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !12039, file: !11870, line: 611, type: !11980)
!12045 = !DILocalVariable(name: "pllfreq", scope: !12039, file: !11870, line: 613, type: !118)
!12046 = !DILocation(line: 0, scope: !12039)
!12047 = !DILocation(line: 622, column: 56, scope: !12039)
!12048 = !DILocation(line: 622, column: 61, scope: !12039)
!12049 = !DILocation(line: 622, column: 32, scope: !12039)
!12050 = !DILocation(line: 626, column: 45, scope: !12039)
!12051 = !DILocation(line: 626, column: 50, scope: !12039)
!12052 = !DILocation(line: 626, column: 21, scope: !12039)
!12053 = !DILocation(line: 630, column: 47, scope: !12039)
!12054 = !DILocation(line: 630, column: 82, scope: !12039)
!12055 = !DILocation(line: 630, column: 21, scope: !12039)
!12056 = !DILocation(line: 633, column: 3, scope: !12039)
!12057 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8818, file: !8818, line: 3007, type: !3220, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2877, retainedNodes: !2048)
!12058 = !DILocation(line: 3009, column: 11, scope: !12057)
!12059 = !DILocation(line: 3009, column: 44, scope: !12057)
!12060 = !DILocation(line: 3009, column: 3, scope: !12057)
!12061 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8818, file: !8818, line: 2987, type: !2982, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2877, retainedNodes: !2048)
!12062 = !DILocation(line: 2989, column: 3, scope: !12061)
!12063 = !DILocation(line: 2990, column: 1, scope: !12061)
!12064 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8818, file: !8818, line: 4304, type: !8952, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2877, retainedNodes: !12065)
!12065 = !{!12066, !12067, !12068, !12069}
!12066 = !DILocalVariable(name: "Source", arg: 1, scope: !12064, file: !8818, line: 4304, type: !118)
!12067 = !DILocalVariable(name: "PLLM", arg: 2, scope: !12064, file: !8818, line: 4304, type: !118)
!12068 = !DILocalVariable(name: "PLLN", arg: 3, scope: !12064, file: !8818, line: 4304, type: !118)
!12069 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !12064, file: !8818, line: 4304, type: !118)
!12070 = !DILocation(line: 0, scope: !12064)
!12071 = !DILocation(line: 4306, column: 3, scope: !12064)
!12072 = !DILocation(line: 4308, column: 3, scope: !12064)
!12073 = !DILocation(line: 4312, column: 1, scope: !12064)
!12074 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !11870, file: !11870, line: 681, type: !12075, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2877, retainedNodes: !12077)
!12075 = !DISubroutineType(types: !12076)
!12076 = !{!11913, !118, !11987}
!12077 = !{!12078, !12079, !12080, !12081}
!12078 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !12074, file: !11870, line: 681, type: !118)
!12079 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12074, file: !11870, line: 681, type: !11987)
!12080 = !DILocalVariable(name: "status", scope: !12074, file: !11870, line: 683, type: !11913)
!12081 = !DILocalVariable(name: "hclk_frequency", scope: !12074, file: !11870, line: 684, type: !118)
!12082 = !DILocation(line: 0, scope: !12074)
!12083 = !DILocation(line: 691, column: 20, scope: !12074)
!12084 = !DILocation(line: 694, column: 6, scope: !12085)
!12085 = distinct !DILexicalBlock(scope: !12074, file: !11870, line: 694, column: 6)
!12086 = !DILocation(line: 694, column: 22, scope: !12085)
!12087 = !DILocation(line: 694, column: 6, scope: !12074)
!12088 = !DILocation(line: 697, column: 14, scope: !12089)
!12089 = distinct !DILexicalBlock(scope: !12085, file: !11870, line: 695, column: 3)
!12090 = !DILocation(line: 701, column: 13, scope: !12091)
!12091 = distinct !DILexicalBlock(scope: !12074, file: !11870, line: 701, column: 6)
!12092 = !DILocation(line: 701, column: 6, scope: !12074)
!12093 = !DILocation(line: 704, column: 5, scope: !12094)
!12094 = distinct !DILexicalBlock(scope: !12091, file: !11870, line: 702, column: 3)
!12095 = !DILocation(line: 705, column: 5, scope: !12094)
!12096 = !DILocation(line: 705, column: 12, scope: !12094)
!12097 = !DILocation(line: 705, column: 33, scope: !12094)
!12098 = distinct !{!12098, !12095, !12099}
!12099 = !DILocation(line: 708, column: 5, scope: !12094)
!12100 = !DILocation(line: 711, column: 49, scope: !12094)
!12101 = !DILocation(line: 711, column: 5, scope: !12094)
!12102 = !DILocation(line: 712, column: 5, scope: !12094)
!12103 = !DILocation(line: 713, column: 5, scope: !12094)
!12104 = !DILocation(line: 713, column: 12, scope: !12094)
!12105 = !DILocation(line: 713, column: 37, scope: !12094)
!12106 = distinct !{!12106, !12103, !12107}
!12107 = !DILocation(line: 716, column: 5, scope: !12094)
!12108 = !DILocation(line: 719, column: 50, scope: !12094)
!12109 = !DILocation(line: 719, column: 5, scope: !12094)
!12110 = !DILocation(line: 720, column: 50, scope: !12094)
!12111 = !DILocation(line: 720, column: 5, scope: !12094)
!12112 = !DILocation(line: 721, column: 3, scope: !12094)
!12113 = !DILocation(line: 724, column: 6, scope: !12114)
!12114 = distinct !DILexicalBlock(scope: !12074, file: !11870, line: 724, column: 6)
!12115 = !DILocation(line: 724, column: 22, scope: !12114)
!12116 = !DILocation(line: 724, column: 6, scope: !12074)
!12117 = !DILocation(line: 727, column: 14, scope: !12118)
!12118 = distinct !DILexicalBlock(scope: !12114, file: !11870, line: 725, column: 3)
!12119 = !DILocation(line: 728, column: 3, scope: !12118)
!12120 = !DILocation(line: 731, column: 13, scope: !12121)
!12121 = distinct !DILexicalBlock(scope: !12074, file: !11870, line: 731, column: 6)
!12122 = !DILocation(line: 731, column: 6, scope: !12074)
!12123 = !DILocation(line: 733, column: 5, scope: !12124)
!12124 = distinct !DILexicalBlock(scope: !12121, file: !11870, line: 732, column: 3)
!12125 = !DILocation(line: 734, column: 3, scope: !12124)
!12126 = !DILocation(line: 736, column: 3, scope: !12074)
!12127 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8818, file: !8818, line: 4184, type: !2982, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2877, retainedNodes: !2048)
!12128 = !DILocation(line: 4186, column: 3, scope: !12127)
!12129 = !DILocation(line: 4187, column: 1, scope: !12127)
!12130 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8818, file: !8818, line: 4205, type: !3220, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2877, retainedNodes: !2048)
!12131 = !DILocation(line: 4207, column: 11, scope: !12130)
!12132 = !DILocation(line: 4207, column: 44, scope: !12130)
!12133 = !DILocation(line: 4207, column: 3, scope: !12130)
!12134 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8818, file: !8818, line: 3224, type: !6429, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2877, retainedNodes: !12135)
!12135 = !{!12136}
!12136 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12134, file: !8818, line: 3224, type: !118)
!12137 = !DILocation(line: 0, scope: !12134)
!12138 = !DILocation(line: 3226, column: 3, scope: !12134)
!12139 = !DILocation(line: 3227, column: 1, scope: !12134)
!12140 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8818, file: !8818, line: 3188, type: !6429, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2877, retainedNodes: !12141)
!12141 = !{!12142}
!12142 = !DILocalVariable(name: "Source", arg: 1, scope: !12140, file: !8818, line: 3188, type: !118)
!12143 = !DILocation(line: 0, scope: !12140)
!12144 = !DILocation(line: 3190, column: 3, scope: !12140)
!12145 = !DILocation(line: 3191, column: 1, scope: !12140)
!12146 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8818, file: !8818, line: 3204, type: !3220, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2877, retainedNodes: !2048)
!12147 = !DILocation(line: 3206, column: 21, scope: !12146)
!12148 = !DILocation(line: 3206, column: 3, scope: !12146)
!12149 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8818, file: !8818, line: 3240, type: !6429, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2877, retainedNodes: !12150)
!12150 = !{!12151}
!12151 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12149, file: !8818, line: 3240, type: !118)
!12152 = !DILocation(line: 0, scope: !12149)
!12153 = !DILocation(line: 3242, column: 3, scope: !12149)
!12154 = !DILocation(line: 3243, column: 1, scope: !12149)
!12155 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8818, file: !8818, line: 3256, type: !6429, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2877, retainedNodes: !12156)
!12156 = !{!12157}
!12157 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12155, file: !8818, line: 3256, type: !118)
!12158 = !DILocation(line: 0, scope: !12155)
!12159 = !DILocation(line: 3258, column: 3, scope: !12155)
!12160 = !DILocation(line: 3259, column: 1, scope: !12155)
!12161 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !8818, file: !8818, line: 5153, type: !3220, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2877, retainedNodes: !2048)
!12162 = !DILocation(line: 5155, column: 11, scope: !12161)
!12163 = !DILocation(line: 5155, column: 47, scope: !12161)
!12164 = !DILocation(line: 5155, column: 3, scope: !12161)
!12165 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !11870, file: !11870, line: 540, type: !12166, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2877, retainedNodes: !12168)
!12166 = !DISubroutineType(types: !12167)
!12167 = !{!11913, !118, !118, !11980, !11987}
!12168 = !{!12169, !12170, !12171, !12172, !12173, !12174}
!12169 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !12165, file: !11870, line: 540, type: !118)
!12170 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !12165, file: !11870, line: 540, type: !118)
!12171 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !12165, file: !11870, line: 541, type: !11980)
!12172 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !12165, file: !11870, line: 541, type: !11987)
!12173 = !DILocalVariable(name: "status", scope: !12165, file: !11870, line: 543, type: !11913)
!12174 = !DILocalVariable(name: "pllfreq", scope: !12165, file: !11870, line: 544, type: !118)
!12175 = !DILocation(line: 0, scope: !12165)
!12176 = !DILocation(line: 551, column: 6, scope: !12177)
!12177 = distinct !DILexicalBlock(scope: !12165, file: !11870, line: 551, column: 6)
!12178 = !DILocation(line: 551, column: 25, scope: !12177)
!12179 = !DILocation(line: 551, column: 6, scope: !12165)
!12180 = !DILocation(line: 554, column: 15, scope: !12181)
!12181 = distinct !DILexicalBlock(scope: !12177, file: !11870, line: 552, column: 3)
!12182 = !DILocation(line: 557, column: 8, scope: !12183)
!12183 = distinct !DILexicalBlock(scope: !12181, file: !11870, line: 557, column: 8)
!12184 = !DILocation(line: 557, column: 29, scope: !12183)
!12185 = !DILocation(line: 557, column: 8, scope: !12181)
!12186 = !DILocation(line: 560, column: 20, scope: !12187)
!12187 = distinct !DILexicalBlock(scope: !12188, file: !11870, line: 560, column: 10)
!12188 = distinct !DILexicalBlock(scope: !12183, file: !11870, line: 558, column: 5)
!12189 = !DILocation(line: 560, column: 10, scope: !12188)
!12190 = !DILocation(line: 562, column: 9, scope: !12191)
!12191 = distinct !DILexicalBlock(scope: !12187, file: !11870, line: 561, column: 7)
!12192 = !DILocation(line: 563, column: 7, scope: !12191)
!12193 = !DILocation(line: 566, column: 9, scope: !12194)
!12194 = distinct !DILexicalBlock(scope: !12187, file: !11870, line: 565, column: 7)
!12195 = !DILocation(line: 570, column: 7, scope: !12188)
!12196 = !DILocation(line: 571, column: 7, scope: !12188)
!12197 = !DILocation(line: 571, column: 14, scope: !12188)
!12198 = !DILocation(line: 571, column: 35, scope: !12188)
!12199 = distinct !{!12199, !12196, !12200}
!12200 = !DILocation(line: 574, column: 7, scope: !12188)
!12201 = !DILocation(line: 578, column: 76, scope: !12181)
!12202 = !DILocation(line: 578, column: 103, scope: !12181)
!12203 = !DILocation(line: 579, column: 54, scope: !12181)
!12204 = !DILocation(line: 578, column: 5, scope: !12181)
!12205 = !DILocation(line: 582, column: 14, scope: !12181)
!12206 = !DILocation(line: 583, column: 3, scope: !12181)
!12207 = !DILocation(line: 0, scope: !12177)
!12208 = !DILocation(line: 590, column: 3, scope: !12165)
!12209 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8818, file: !8818, line: 2969, type: !3220, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2877, retainedNodes: !2048)
!12210 = !DILocation(line: 2971, column: 11, scope: !12209)
!12211 = !DILocation(line: 2971, column: 44, scope: !12209)
!12212 = !DILocation(line: 2971, column: 3, scope: !12209)
!12213 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !8818, file: !8818, line: 2929, type: !2982, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2877, retainedNodes: !2048)
!12214 = !DILocation(line: 2931, column: 3, scope: !12213)
!12215 = !DILocation(line: 2932, column: 1, scope: !12213)
!12216 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8818, file: !8818, line: 2939, type: !2982, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2877, retainedNodes: !2048)
!12217 = !DILocation(line: 2941, column: 3, scope: !12216)
!12218 = !DILocation(line: 2942, column: 1, scope: !12216)
!12219 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8818, file: !8818, line: 2949, type: !2982, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2877, retainedNodes: !2048)
!12220 = !DILocation(line: 2951, column: 3, scope: !12219)
!12221 = !DILocation(line: 2952, column: 1, scope: !12219)
!12222 = distinct !DISubprogram(name: "z_device_state_init", scope: !12223, file: !12223, line: 23, type: !2982, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2942, retainedNodes: !12224)
!12223 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12224 = !{!12225}
!12225 = !DILocalVariable(name: "dev", scope: !12222, file: !12223, line: 25, type: !12226)
!12226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12227, size: 32)
!12227 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12228)
!12228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !12229)
!12229 = !{!12230, !12231, !12232, !12233, !12239, !12240}
!12230 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12228, file: !334, line: 380, baseType: !278, size: 32)
!12231 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !12228, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!12232 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !12228, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!12233 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !12228, file: !334, line: 386, baseType: !12234, size: 32, offset: 96)
!12234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12235, size: 32)
!12235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !12236)
!12236 = !{!12237, !12238}
!12237 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !12235, file: !334, line: 359, baseType: !185, size: 8)
!12238 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !12235, file: !334, line: 364, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!12239 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12228, file: !334, line: 388, baseType: !113, size: 32, offset: 128)
!12240 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !12228, file: !334, line: 396, baseType: !348, size: 32, offset: 160)
!12241 = !DILocation(line: 0, scope: !12222)
!12242 = !DILocation(line: 31, column: 1, scope: !12222)
!12243 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !12223, file: !12223, line: 33, type: !12244, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2942, retainedNodes: !12246)
!12244 = !DISubroutineType(types: !12245)
!12245 = !{!12226, !278}
!12246 = !{!12247, !12248}
!12247 = !DILocalVariable(name: "name", arg: 1, scope: !12243, file: !12223, line: 33, type: !278)
!12248 = !DILocalVariable(name: "dev", scope: !12243, file: !12223, line: 35, type: !12226)
!12249 = !DILocation(line: 0, scope: !12243)
!12250 = !DILocation(line: 40, column: 12, scope: !12251)
!12251 = distinct !DILexicalBlock(scope: !12243, file: !12223, line: 40, column: 6)
!12252 = !DILocation(line: 40, column: 21, scope: !12251)
!12253 = !DILocation(line: 40, column: 25, scope: !12251)
!12254 = !DILocation(line: 40, column: 33, scope: !12251)
!12255 = !DILocation(line: 40, column: 6, scope: !12243)
!12256 = !DILocation(line: 55, column: 2, scope: !12257)
!12257 = distinct !DILexicalBlock(scope: !12243, file: !12223, line: 55, column: 2)
!12258 = !DILocation(line: 50, column: 7, scope: !12259)
!12259 = distinct !DILexicalBlock(scope: !12260, file: !12223, line: 50, column: 7)
!12260 = distinct !DILexicalBlock(scope: !12261, file: !12223, line: 49, column: 57)
!12261 = distinct !DILexicalBlock(scope: !12262, file: !12223, line: 49, column: 2)
!12262 = distinct !DILexicalBlock(scope: !12243, file: !12223, line: 49, column: 2)
!12263 = !DILocation(line: 50, column: 30, scope: !12259)
!12264 = !DILocation(line: 50, column: 39, scope: !12259)
!12265 = !DILocation(line: 50, column: 44, scope: !12259)
!12266 = !DILocation(line: 50, column: 7, scope: !12260)
!12267 = !DILocation(line: 49, column: 53, scope: !12261)
!12268 = !DILocation(line: 49, column: 33, scope: !12261)
!12269 = !DILocation(line: 49, column: 2, scope: !12262)
!12270 = distinct !{!12270, !12269, !12271}
!12271 = !DILocation(line: 53, column: 2, scope: !12262)
!12272 = !DILocation(line: 56, column: 7, scope: !12273)
!12273 = distinct !DILexicalBlock(scope: !12274, file: !12223, line: 56, column: 7)
!12274 = distinct !DILexicalBlock(scope: !12275, file: !12223, line: 55, column: 57)
!12275 = distinct !DILexicalBlock(scope: !12257, file: !12223, line: 55, column: 2)
!12276 = !DILocation(line: 56, column: 30, scope: !12273)
!12277 = !DILocation(line: 56, column: 52, scope: !12273)
!12278 = !DILocation(line: 56, column: 34, scope: !12273)
!12279 = !DILocation(line: 56, column: 58, scope: !12273)
!12280 = !DILocation(line: 56, column: 7, scope: !12274)
!12281 = !DILocation(line: 55, column: 53, scope: !12275)
!12282 = !DILocation(line: 55, column: 33, scope: !12275)
!12283 = distinct !{!12283, !12256, !12284}
!12284 = !DILocation(line: 59, column: 2, scope: !12257)
!12285 = !DILocation(line: 62, column: 1, scope: !12243)
!12286 = distinct !DISubprogram(name: "z_device_is_ready", scope: !12223, file: !12223, line: 93, type: !12287, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2942, retainedNodes: !12289)
!12287 = !DISubroutineType(types: !12288)
!12288 = !{!345, !12226}
!12289 = !{!12290}
!12290 = !DILocalVariable(name: "dev", arg: 1, scope: !12286, file: !12223, line: 93, type: !12226)
!12291 = !DILocation(line: 0, scope: !12286)
!12292 = !DILocation(line: 99, column: 10, scope: !12293)
!12293 = distinct !DILexicalBlock(scope: !12286, file: !12223, line: 99, column: 6)
!12294 = !DILocation(line: 99, column: 6, scope: !12286)
!12295 = !DILocation(line: 103, column: 14, scope: !12286)
!12296 = !DILocation(line: 103, column: 21, scope: !12286)
!12297 = !DILocation(line: 103, column: 33, scope: !12286)
!12298 = !DILocation(line: 103, column: 49, scope: !12286)
!12299 = !DILocation(line: 103, column: 58, scope: !12286)
!12300 = !DILocation(line: 104, column: 1, scope: !12286)
!12301 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !12223, file: !12223, line: 87, type: !12302, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2942, retainedNodes: !12305)
!12302 = !DISubroutineType(types: !12303)
!12303 = !{!239, !12304}
!12304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12226, size: 32)
!12305 = !{!12306}
!12306 = !DILocalVariable(name: "devices", arg: 1, scope: !12301, file: !12223, line: 87, type: !12304)
!12307 = !DILocation(line: 0, scope: !12301)
!12308 = !DILocation(line: 89, column: 11, scope: !12301)
!12309 = !DILocation(line: 90, column: 2, scope: !12301)
!12310 = distinct !DISubprogram(name: "device_required_foreach", scope: !12223, file: !12223, line: 125, type: !12311, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2942, retainedNodes: !12317)
!12311 = !DISubroutineType(types: !12312)
!12312 = !{!119, !12226, !12313, !113}
!12313 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !334, line: 471, baseType: !12314)
!12314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12315, size: 32)
!12315 = !DISubroutineType(types: !12316)
!12316 = !{!119, !12226, !113}
!12317 = !{!12318, !12319, !12320, !12321, !12322}
!12318 = !DILocalVariable(name: "dev", arg: 1, scope: !12310, file: !12223, line: 125, type: !12226)
!12319 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !12310, file: !12223, line: 126, type: !12313)
!12320 = !DILocalVariable(name: "context", arg: 3, scope: !12310, file: !12223, line: 127, type: !113)
!12321 = !DILocalVariable(name: "handle_count", scope: !12310, file: !12223, line: 129, type: !239)
!12322 = !DILocalVariable(name: "handles", scope: !12310, file: !12223, line: 130, type: !348)
!12323 = !DILocation(line: 0, scope: !12310)
!12324 = !DILocation(line: 129, column: 2, scope: !12310)
!12325 = !DILocation(line: 129, column: 9, scope: !12310)
!12326 = !DILocation(line: 130, column: 35, scope: !12310)
!12327 = !DILocation(line: 132, column: 33, scope: !12310)
!12328 = !DILocation(line: 132, column: 9, scope: !12310)
!12329 = !DILocation(line: 133, column: 1, scope: !12310)
!12330 = !DILocation(line: 132, column: 2, scope: !12310)
!12331 = distinct !DISubprogram(name: "device_required_handles_get", scope: !334, file: !334, line: 493, type: !12332, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2942, retainedNodes: !12334)
!12332 = !DISubroutineType(types: !12333)
!12333 = !{!348, !12226, !2429}
!12334 = !{!12335, !12336, !12337, !12338}
!12335 = !DILocalVariable(name: "dev", arg: 1, scope: !12331, file: !334, line: 493, type: !12226)
!12336 = !DILocalVariable(name: "count", arg: 2, scope: !12331, file: !334, line: 493, type: !2429)
!12337 = !DILocalVariable(name: "rv", scope: !12331, file: !334, line: 495, type: !348)
!12338 = !DILocalVariable(name: "i", scope: !12339, file: !334, line: 498, type: !239)
!12339 = distinct !DILexicalBlock(scope: !12340, file: !334, line: 497, column: 18)
!12340 = distinct !DILexicalBlock(scope: !12331, file: !334, line: 497, column: 6)
!12341 = !DILocation(line: 0, scope: !12331)
!12342 = !DILocation(line: 495, column: 35, scope: !12331)
!12343 = !DILocation(line: 497, column: 9, scope: !12340)
!12344 = !DILocation(line: 497, column: 6, scope: !12331)
!12345 = !DILocation(line: 0, scope: !12339)
!12346 = !DILocation(line: 500, column: 11, scope: !12339)
!12347 = !DILocation(line: 500, column: 40, scope: !12339)
!12348 = !DILocation(line: 502, column: 4, scope: !12349)
!12349 = distinct !DILexicalBlock(scope: !12339, file: !334, line: 501, column: 40)
!12350 = distinct !{!12350, !12351, !12352}
!12351 = !DILocation(line: 500, column: 3, scope: !12339)
!12352 = !DILocation(line: 503, column: 3, scope: !12339)
!12353 = !DILocation(line: 504, column: 10, scope: !12339)
!12354 = !DILocation(line: 505, column: 2, scope: !12339)
!12355 = !DILocation(line: 507, column: 2, scope: !12331)
!12356 = distinct !DISubprogram(name: "device_visitor", scope: !12223, file: !12223, line: 106, type: !12357, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2942, retainedNodes: !12359)
!12357 = !DISubroutineType(types: !12358)
!12358 = !{!119, !348, !239, !12313, !113}
!12359 = !{!12360, !12361, !12362, !12363, !12364, !12366, !12369, !12370}
!12360 = !DILocalVariable(name: "handles", arg: 1, scope: !12356, file: !12223, line: 106, type: !348)
!12361 = !DILocalVariable(name: "handle_count", arg: 2, scope: !12356, file: !12223, line: 107, type: !239)
!12362 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !12356, file: !12223, line: 108, type: !12313)
!12363 = !DILocalVariable(name: "context", arg: 4, scope: !12356, file: !12223, line: 109, type: !113)
!12364 = !DILocalVariable(name: "i", scope: !12365, file: !12223, line: 112, type: !239)
!12365 = distinct !DILexicalBlock(scope: !12356, file: !12223, line: 112, column: 2)
!12366 = !DILocalVariable(name: "dh", scope: !12367, file: !12223, line: 113, type: !350)
!12367 = distinct !DILexicalBlock(scope: !12368, file: !12223, line: 112, column: 44)
!12368 = distinct !DILexicalBlock(scope: !12365, file: !12223, line: 112, column: 2)
!12369 = !DILocalVariable(name: "rdev", scope: !12367, file: !12223, line: 114, type: !12226)
!12370 = !DILocalVariable(name: "rc", scope: !12367, file: !12223, line: 115, type: !119)
!12371 = !DILocation(line: 0, scope: !12356)
!12372 = !DILocation(line: 0, scope: !12365)
!12373 = !DILocation(line: 112, column: 23, scope: !12368)
!12374 = !DILocation(line: 112, column: 2, scope: !12365)
!12375 = distinct !{!12375, !12374, !12376}
!12376 = !DILocation(line: 120, column: 2, scope: !12365)
!12377 = !DILocation(line: 113, column: 24, scope: !12367)
!12378 = !DILocation(line: 0, scope: !12367)
!12379 = !DILocation(line: 114, column: 31, scope: !12367)
!12380 = !DILocation(line: 115, column: 12, scope: !12367)
!12381 = !DILocation(line: 117, column: 10, scope: !12382)
!12382 = distinct !DILexicalBlock(scope: !12367, file: !12223, line: 117, column: 7)
!12383 = !DILocation(line: 112, column: 39, scope: !12368)
!12384 = !DILocation(line: 123, column: 1, scope: !12356)
!12385 = distinct !DISubprogram(name: "device_from_handle", scope: !334, file: !334, line: 439, type: !12386, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2942, retainedNodes: !12388)
!12386 = !DISubroutineType(types: !12387)
!12387 = !{!12226, !350}
!12388 = !{!12389, !12390, !12391}
!12389 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !12385, file: !334, line: 439, type: !350)
!12390 = !DILocalVariable(name: "dev", scope: !12385, file: !334, line: 443, type: !12226)
!12391 = !DILocalVariable(name: "numdev", scope: !12385, file: !334, line: 444, type: !239)
!12392 = !DILocation(line: 0, scope: !12385)
!12393 = !DILocation(line: 446, column: 7, scope: !12394)
!12394 = distinct !DILexicalBlock(scope: !12385, file: !334, line: 446, column: 6)
!12395 = !DILocation(line: 446, column: 18, scope: !12394)
!12396 = !DILocation(line: 446, column: 23, scope: !12394)
!12397 = !DILocation(line: 450, column: 2, scope: !12385)
!12398 = distinct !DISubprogram(name: "device_supported_foreach", scope: !12223, file: !12223, line: 135, type: !12311, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2942, retainedNodes: !12399)
!12399 = !{!12400, !12401, !12402, !12403, !12404}
!12400 = !DILocalVariable(name: "dev", arg: 1, scope: !12398, file: !12223, line: 135, type: !12226)
!12401 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !12398, file: !12223, line: 136, type: !12313)
!12402 = !DILocalVariable(name: "context", arg: 3, scope: !12398, file: !12223, line: 137, type: !113)
!12403 = !DILocalVariable(name: "handle_count", scope: !12398, file: !12223, line: 139, type: !239)
!12404 = !DILocalVariable(name: "handles", scope: !12398, file: !12223, line: 140, type: !348)
!12405 = !DILocation(line: 0, scope: !12398)
!12406 = !DILocation(line: 139, column: 2, scope: !12398)
!12407 = !DILocation(line: 139, column: 9, scope: !12398)
!12408 = !DILocation(line: 140, column: 35, scope: !12398)
!12409 = !DILocation(line: 142, column: 33, scope: !12398)
!12410 = !DILocation(line: 142, column: 9, scope: !12398)
!12411 = !DILocation(line: 143, column: 1, scope: !12398)
!12412 = !DILocation(line: 142, column: 2, scope: !12398)
!12413 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !334, file: !334, line: 573, type: !12332, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2942, retainedNodes: !12414)
!12414 = !{!12415, !12416, !12417, !12418, !12419}
!12415 = !DILocalVariable(name: "dev", arg: 1, scope: !12413, file: !334, line: 573, type: !12226)
!12416 = !DILocalVariable(name: "count", arg: 2, scope: !12413, file: !334, line: 573, type: !2429)
!12417 = !DILocalVariable(name: "rv", scope: !12413, file: !334, line: 575, type: !348)
!12418 = !DILocalVariable(name: "region", scope: !12413, file: !334, line: 576, type: !239)
!12419 = !DILocalVariable(name: "i", scope: !12413, file: !334, line: 577, type: !239)
!12420 = !DILocation(line: 0, scope: !12413)
!12421 = !DILocation(line: 575, column: 35, scope: !12413)
!12422 = !DILocation(line: 579, column: 9, scope: !12423)
!12423 = distinct !DILexicalBlock(scope: !12413, file: !334, line: 579, column: 6)
!12424 = !DILocation(line: 579, column: 6, scope: !12413)
!12425 = !DILocation(line: 582, column: 8, scope: !12426)
!12426 = distinct !DILexicalBlock(scope: !12427, file: !334, line: 582, column: 8)
!12427 = distinct !DILexicalBlock(scope: !12428, file: !334, line: 581, column: 23)
!12428 = distinct !DILexicalBlock(scope: !12423, file: !334, line: 579, column: 18)
!12429 = !DILocation(line: 582, column: 12, scope: !12426)
!12430 = !DILocation(line: 585, column: 6, scope: !12427)
!12431 = !DILocation(line: 0, scope: !12428)
!12432 = !DILocation(line: 581, column: 17, scope: !12428)
!12433 = !DILocation(line: 581, column: 3, scope: !12428)
!12434 = !DILocation(line: 588, column: 10, scope: !12428)
!12435 = !DILocation(line: 588, column: 16, scope: !12428)
!12436 = !DILocation(line: 589, column: 4, scope: !12437)
!12437 = distinct !DILexicalBlock(scope: !12428, file: !334, line: 588, column: 39)
!12438 = !DILocation(line: 588, column: 3, scope: !12428)
!12439 = distinct !{!12439, !12438, !12440}
!12440 = !DILocation(line: 590, column: 3, scope: !12428)
!12441 = !DILocation(line: 591, column: 10, scope: !12428)
!12442 = !DILocation(line: 592, column: 2, scope: !12428)
!12443 = !DILocation(line: 575, column: 25, scope: !12413)
!12444 = !DILocation(line: 594, column: 2, scope: !12413)
!12445 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1839, file: !1839, line: 49, type: !12446, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1836, retainedNodes: !2048)
!12446 = !DISubroutineType(types: !12447)
!12447 = !{!280}
!12448 = !DILocation(line: 51, column: 10, scope: !12445)
!12449 = !DILocation(line: 51, column: 20, scope: !12445)
!12450 = !DILocation(line: 51, column: 2, scope: !12445)
!12451 = distinct !DISubprogram(name: "coredump", scope: !2949, file: !2949, line: 209, type: !12452, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2945, retainedNodes: !12601)
!12452 = !DISubroutineType(types: !12453)
!12453 = !{null, !32, !12454, !12498}
!12454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12455, size: 32)
!12455 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12456)
!12456 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2559, line: 141, baseType: !12457)
!12457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2559, line: 97, size: 256, elements: !12458)
!12458 = !{!12459}
!12459 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !12457, file: !2559, line: 107, baseType: !12460, size: 256)
!12460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2559, line: 98, size: 256, elements: !12461)
!12461 = !{!12462, !12467, !12472, !12477, !12482, !12487, !12492, !12497}
!12462 = !DIDerivedType(tag: DW_TAG_member, scope: !12460, file: !2559, line: 99, baseType: !12463, size: 32)
!12463 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12460, file: !2559, line: 99, size: 32, elements: !12464)
!12464 = !{!12465, !12466}
!12465 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !12463, file: !2559, line: 99, baseType: !118, size: 32)
!12466 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !12463, file: !2559, line: 99, baseType: !118, size: 32)
!12467 = !DIDerivedType(tag: DW_TAG_member, scope: !12460, file: !2559, line: 100, baseType: !12468, size: 32, offset: 32)
!12468 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12460, file: !2559, line: 100, size: 32, elements: !12469)
!12469 = !{!12470, !12471}
!12470 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !12468, file: !2559, line: 100, baseType: !118, size: 32)
!12471 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !12468, file: !2559, line: 100, baseType: !118, size: 32)
!12472 = !DIDerivedType(tag: DW_TAG_member, scope: !12460, file: !2559, line: 101, baseType: !12473, size: 32, offset: 64)
!12473 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12460, file: !2559, line: 101, size: 32, elements: !12474)
!12474 = !{!12475, !12476}
!12475 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !12473, file: !2559, line: 101, baseType: !118, size: 32)
!12476 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !12473, file: !2559, line: 101, baseType: !118, size: 32)
!12477 = !DIDerivedType(tag: DW_TAG_member, scope: !12460, file: !2559, line: 102, baseType: !12478, size: 32, offset: 96)
!12478 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12460, file: !2559, line: 102, size: 32, elements: !12479)
!12479 = !{!12480, !12481}
!12480 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !12478, file: !2559, line: 102, baseType: !118, size: 32)
!12481 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !12478, file: !2559, line: 102, baseType: !118, size: 32)
!12482 = !DIDerivedType(tag: DW_TAG_member, scope: !12460, file: !2559, line: 103, baseType: !12483, size: 32, offset: 128)
!12483 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12460, file: !2559, line: 103, size: 32, elements: !12484)
!12484 = !{!12485, !12486}
!12485 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !12483, file: !2559, line: 103, baseType: !118, size: 32)
!12486 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !12483, file: !2559, line: 103, baseType: !118, size: 32)
!12487 = !DIDerivedType(tag: DW_TAG_member, scope: !12460, file: !2559, line: 104, baseType: !12488, size: 32, offset: 160)
!12488 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12460, file: !2559, line: 104, size: 32, elements: !12489)
!12489 = !{!12490, !12491}
!12490 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !12488, file: !2559, line: 104, baseType: !118, size: 32)
!12491 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !12488, file: !2559, line: 104, baseType: !118, size: 32)
!12492 = !DIDerivedType(tag: DW_TAG_member, scope: !12460, file: !2559, line: 105, baseType: !12493, size: 32, offset: 192)
!12493 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12460, file: !2559, line: 105, size: 32, elements: !12494)
!12494 = !{!12495, !12496}
!12495 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !12493, file: !2559, line: 105, baseType: !118, size: 32)
!12496 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !12493, file: !2559, line: 105, baseType: !118, size: 32)
!12497 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !12460, file: !2559, line: 106, baseType: !118, size: 32, offset: 224)
!12498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12499, size: 32)
!12499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !143, line: 245, size: 1280, elements: !12500)
!12500 = !{!12501, !12559, !12571, !12572, !12573, !12574, !12575, !12581, !12596}
!12501 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !12499, file: !143, line: 247, baseType: !12502, size: 384)
!12502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !143, line: 57, size: 384, elements: !12503)
!12503 = !{!12504, !12528, !12535, !12536, !12537, !12546, !12547, !12548}
!12504 = !DIDerivedType(tag: DW_TAG_member, scope: !12502, file: !143, line: 60, baseType: !12505, size: 64)
!12505 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12502, file: !143, line: 60, size: 64, elements: !12506)
!12506 = !{!12507, !12522}
!12507 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !12505, file: !143, line: 61, baseType: !12508, size: 64)
!12508 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !153, line: 49, baseType: !12509)
!12509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !153, line: 37, size: 64, elements: !12510)
!12510 = !{!12511, !12517}
!12511 = !DIDerivedType(tag: DW_TAG_member, scope: !12509, file: !153, line: 38, baseType: !12512, size: 32)
!12512 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12509, file: !153, line: 38, size: 32, elements: !12513)
!12513 = !{!12514, !12516}
!12514 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !12512, file: !153, line: 39, baseType: !12515, size: 32)
!12515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12509, size: 32)
!12516 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !12512, file: !153, line: 40, baseType: !12515, size: 32)
!12517 = !DIDerivedType(tag: DW_TAG_member, scope: !12509, file: !153, line: 42, baseType: !12518, size: 32, offset: 32)
!12518 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12509, file: !153, line: 42, size: 32, elements: !12519)
!12519 = !{!12520, !12521}
!12520 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !12518, file: !153, line: 43, baseType: !12515, size: 32)
!12521 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !12518, file: !153, line: 44, baseType: !12515, size: 32)
!12522 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !12505, file: !143, line: 62, baseType: !12523, size: 64)
!12523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !169, line: 49, size: 64, elements: !12524)
!12524 = !{!12525}
!12525 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !12523, file: !169, line: 50, baseType: !12526, size: 64)
!12526 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12527, size: 64, elements: !174)
!12527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12523, size: 32)
!12528 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !12502, file: !143, line: 68, baseType: !12529, size: 32, offset: 64)
!12529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12530, size: 32)
!12530 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !179, line: 233, baseType: !12531)
!12531 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !179, line: 231, size: 64, elements: !12532)
!12532 = !{!12533}
!12533 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !12531, file: !179, line: 232, baseType: !12534, size: 64)
!12534 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !153, line: 48, baseType: !12509)
!12535 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !12502, file: !143, line: 71, baseType: !185, size: 8, offset: 96)
!12536 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !12502, file: !143, line: 74, baseType: !185, size: 8, offset: 104)
!12537 = !DIDerivedType(tag: DW_TAG_member, scope: !12502, file: !143, line: 90, baseType: !12538, size: 16, offset: 112)
!12538 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12502, file: !143, line: 90, size: 16, elements: !12539)
!12539 = !{!12540, !12545}
!12540 = !DIDerivedType(tag: DW_TAG_member, scope: !12538, file: !143, line: 91, baseType: !12541, size: 16)
!12541 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !12538, file: !143, line: 91, size: 16, elements: !12542)
!12542 = !{!12543, !12544}
!12543 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !12541, file: !143, line: 96, baseType: !195, size: 8)
!12544 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !12541, file: !143, line: 97, baseType: !185, size: 8, offset: 8)
!12545 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !12538, file: !143, line: 100, baseType: !199, size: 16)
!12546 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !12502, file: !143, line: 107, baseType: !118, size: 32, offset: 128)
!12547 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !12502, file: !143, line: 127, baseType: !113, size: 32, offset: 160)
!12548 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !12502, file: !143, line: 131, baseType: !12549, size: 192, offset: 192)
!12549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !179, line: 244, size: 192, elements: !12550)
!12550 = !{!12551, !12552, !12558}
!12551 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !12549, file: !179, line: 245, baseType: !12508, size: 64)
!12552 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !12549, file: !179, line: 246, baseType: !12553, size: 32, offset: 64)
!12553 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !179, line: 242, baseType: !12554)
!12554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12555, size: 32)
!12555 = !DISubroutineType(types: !12556)
!12556 = !{null, !12557}
!12557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12549, size: 32)
!12558 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !12549, file: !179, line: 249, baseType: !116, size: 64, offset: 128)
!12559 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !12499, file: !143, line: 250, baseType: !12560, size: 288, offset: 384)
!12560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !216, line: 25, size: 288, elements: !12561)
!12561 = !{!12562, !12563, !12564, !12565, !12566, !12567, !12568, !12569, !12570}
!12562 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !12560, file: !216, line: 26, baseType: !118, size: 32)
!12563 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !12560, file: !216, line: 27, baseType: !118, size: 32, offset: 32)
!12564 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !12560, file: !216, line: 28, baseType: !118, size: 32, offset: 64)
!12565 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !12560, file: !216, line: 29, baseType: !118, size: 32, offset: 96)
!12566 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !12560, file: !216, line: 30, baseType: !118, size: 32, offset: 128)
!12567 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !12560, file: !216, line: 31, baseType: !118, size: 32, offset: 160)
!12568 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !12560, file: !216, line: 32, baseType: !118, size: 32, offset: 192)
!12569 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !12560, file: !216, line: 33, baseType: !118, size: 32, offset: 224)
!12570 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !12560, file: !216, line: 34, baseType: !118, size: 32, offset: 256)
!12571 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !12499, file: !143, line: 253, baseType: !113, size: 32, offset: 672)
!12572 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !12499, file: !143, line: 256, baseType: !12530, size: 64, offset: 704)
!12573 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12499, file: !143, line: 279, baseType: !230, size: 256, offset: 768)
!12574 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !12499, file: !143, line: 294, baseType: !119, size: 32, offset: 1024)
!12575 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !12499, file: !143, line: 300, baseType: !12576, size: 96, offset: 1056)
!12576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !143, line: 149, size: 96, elements: !12577)
!12577 = !{!12578, !12579, !12580}
!12578 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !12576, file: !143, line: 153, baseType: !22, size: 32)
!12579 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !12576, file: !143, line: 162, baseType: !239, size: 32, offset: 32)
!12580 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !12576, file: !143, line: 168, baseType: !239, size: 32, offset: 64)
!12581 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !12499, file: !143, line: 325, baseType: !12582, size: 32, offset: 1152)
!12582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12583, size: 32)
!12583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !245, line: 5073, size: 192, elements: !12584)
!12584 = !{!12585, !12591, !12592}
!12585 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12583, file: !245, line: 5074, baseType: !12586, size: 96)
!12586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !249, line: 56, size: 96, elements: !12587)
!12587 = !{!12588, !12589, !12590}
!12588 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12586, file: !249, line: 57, baseType: !252, size: 32)
!12589 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !12586, file: !249, line: 58, baseType: !113, size: 32, offset: 32)
!12590 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !12586, file: !249, line: 59, baseType: !239, size: 32, offset: 64)
!12591 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !12583, file: !245, line: 5075, baseType: !12530, size: 64, offset: 96)
!12592 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !12583, file: !245, line: 5076, baseType: !12593, size: 32, offset: 160)
!12593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !12594)
!12594 = !{!12595}
!12595 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !12593, file: !259, line: 52, baseType: !22, size: 32)
!12596 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !12499, file: !143, line: 343, baseType: !12597, size: 64, offset: 1184)
!12597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !216, line: 60, size: 64, elements: !12598)
!12598 = !{!12599, !12600}
!12599 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !12597, file: !216, line: 63, baseType: !118, size: 32)
!12600 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !12597, file: !216, line: 66, baseType: !118, size: 32, offset: 32)
!12601 = !{!12602, !12603, !12604}
!12602 = !DILocalVariable(name: "reason", arg: 1, scope: !12451, file: !2949, line: 209, type: !32)
!12603 = !DILocalVariable(name: "esf", arg: 2, scope: !12451, file: !2949, line: 209, type: !12454)
!12604 = !DILocalVariable(name: "thread", arg: 3, scope: !12451, file: !2949, line: 210, type: !12498)
!12605 = !DILocation(line: 0, scope: !12451)
!12606 = !DILocation(line: 212, column: 1, scope: !12451)
!12607 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !2949, file: !2949, line: 214, type: !12608, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2945, retainedNodes: !12610)
!12608 = !DISubroutineType(types: !12609)
!12609 = !{null, !22, !22}
!12610 = !{!12611, !12612}
!12611 = !DILocalVariable(name: "start_addr", arg: 1, scope: !12607, file: !2949, line: 214, type: !22)
!12612 = !DILocalVariable(name: "end_addr", arg: 2, scope: !12607, file: !2949, line: 214, type: !22)
!12613 = !DILocation(line: 0, scope: !12607)
!12614 = !DILocation(line: 216, column: 1, scope: !12607)
!12615 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !2949, file: !2949, line: 218, type: !12616, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2945, retainedNodes: !12618)
!12616 = !DISubroutineType(types: !12617)
!12617 = !{null, !284, !239}
!12618 = !{!12619, !12620}
!12619 = !DILocalVariable(name: "buf", arg: 1, scope: !12615, file: !2949, line: 218, type: !284)
!12620 = !DILocalVariable(name: "buflen", arg: 2, scope: !12615, file: !2949, line: 218, type: !239)
!12621 = !DILocation(line: 0, scope: !12615)
!12622 = !DILocation(line: 220, column: 1, scope: !12615)
!12623 = distinct !DISubprogram(name: "coredump_query", scope: !2949, file: !2949, line: 222, type: !12624, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2945, retainedNodes: !12626)
!12624 = !DISubroutineType(types: !12625)
!12625 = !{!119, !2948, !113}
!12626 = !{!12627, !12628}
!12627 = !DILocalVariable(name: "query_id", arg: 1, scope: !12623, file: !2949, line: 222, type: !2948)
!12628 = !DILocalVariable(name: "arg", arg: 2, scope: !12623, file: !2949, line: 222, type: !113)
!12629 = !DILocation(line: 0, scope: !12623)
!12630 = !DILocation(line: 224, column: 2, scope: !12623)
!12631 = distinct !DISubprogram(name: "coredump_cmd", scope: !2949, file: !2949, line: 227, type: !12632, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2945, retainedNodes: !12634)
!12632 = !DISubroutineType(types: !12633)
!12633 = !{!119, !2955, !113}
!12634 = !{!12635, !12636}
!12635 = !DILocalVariable(name: "query_id", arg: 1, scope: !12631, file: !2949, line: 227, type: !2955)
!12636 = !DILocalVariable(name: "arg", arg: 2, scope: !12631, file: !2949, line: 227, type: !113)
!12637 = !DILocation(line: 0, scope: !12631)
!12638 = !DILocation(line: 229, column: 2, scope: !12631)
!12639 = distinct !DISubprogram(name: "arch_system_halt", scope: !12640, file: !12640, line: 23, type: !6024, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2945, retainedNodes: !12641)
!12640 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12641 = !{!12642}
!12642 = !DILocalVariable(name: "reason", arg: 1, scope: !12639, file: !12640, line: 23, type: !32)
!12643 = !DILocation(line: 0, scope: !12639)
!12644 = !DILocation(line: 55, column: 2, scope: !12645, inlinedAt: !12649)
!12645 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6013, file: !6013, line: 42, type: !6014, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2945, retainedNodes: !12646)
!12646 = !{!12647, !12648}
!12647 = !DILocalVariable(name: "key", scope: !12645, file: !6013, line: 44, type: !32)
!12648 = !DILocalVariable(name: "tmp", scope: !12645, file: !6013, line: 53, type: !32)
!12649 = distinct !DILocation(line: 31, column: 8, scope: !12639)
!12650 = !{i64 2042640}
!12651 = !DILocation(line: 0, scope: !12645, inlinedAt: !12649)
!12652 = !DILocation(line: 32, column: 2, scope: !12639)
!12653 = !DILocation(line: 32, column: 2, scope: !12654)
!12654 = distinct !DILexicalBlock(scope: !12655, file: !12640, line: 32, column: 2)
!12655 = distinct !DILexicalBlock(scope: !12639, file: !12640, line: 32, column: 2)
!12656 = distinct !{!12656, !12657, !12658}
!12657 = !DILocation(line: 32, column: 2, scope: !12655)
!12658 = !DILocation(line: 34, column: 2, scope: !12655)
!12659 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !12640, file: !12640, line: 39, type: !12660, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2945, retainedNodes: !12662)
!12660 = !DISubroutineType(types: !12661)
!12661 = !{null, !32, !12454}
!12662 = !{!12663, !12664}
!12663 = !DILocalVariable(name: "reason", arg: 1, scope: !12659, file: !12640, line: 39, type: !32)
!12664 = !DILocalVariable(name: "esf", arg: 2, scope: !12659, file: !12640, line: 40, type: !12454)
!12665 = !DILocation(line: 0, scope: !12659)
!12666 = !DILocation(line: 45, column: 2, scope: !12667)
!12667 = distinct !DILexicalBlock(scope: !12668, file: !12640, line: 45, column: 2)
!12668 = distinct !DILexicalBlock(scope: !12669, file: !12640, line: 45, column: 2)
!12669 = distinct !DILexicalBlock(scope: !12670, file: !12640, line: 45, column: 2)
!12670 = distinct !DILexicalBlock(scope: !12659, file: !12640, line: 45, column: 2)
!12671 = !DILocation(line: 46, column: 2, scope: !12659)
!12672 = distinct !DISubprogram(name: "k_fatal_halt", scope: !12640, file: !12640, line: 81, type: !6024, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2945, retainedNodes: !12673)
!12673 = !{!12674}
!12674 = !DILocalVariable(name: "reason", arg: 1, scope: !12672, file: !12640, line: 81, type: !32)
!12675 = !DILocation(line: 0, scope: !12672)
!12676 = !DILocation(line: 83, column: 2, scope: !12672)
!12677 = distinct !DISubprogram(name: "z_fatal_error", scope: !12640, file: !12640, line: 96, type: !12660, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2945, retainedNodes: !12678)
!12678 = !{!12679, !12680, !12681, !12682}
!12679 = !DILocalVariable(name: "reason", arg: 1, scope: !12677, file: !12640, line: 96, type: !32)
!12680 = !DILocalVariable(name: "esf", arg: 2, scope: !12677, file: !12640, line: 96, type: !12454)
!12681 = !DILocalVariable(name: "key", scope: !12677, file: !12640, line: 102, type: !32)
!12682 = !DILocalVariable(name: "thread", scope: !12677, file: !12640, line: 103, type: !12498)
!12683 = !DILocation(line: 0, scope: !12677)
!12684 = !DILocation(line: 55, column: 2, scope: !12645, inlinedAt: !12685)
!12685 = distinct !DILocation(line: 102, column: 21, scope: !12677)
!12686 = !DILocation(line: 0, scope: !12645, inlinedAt: !12685)
!12687 = !DILocation(line: 104, column: 4, scope: !12677)
!12688 = !DILocation(line: 109, column: 2, scope: !12689)
!12689 = distinct !DILexicalBlock(scope: !12690, file: !12640, line: 109, column: 2)
!12690 = distinct !DILexicalBlock(scope: !12691, file: !12640, line: 109, column: 2)
!12691 = distinct !DILexicalBlock(scope: !12692, file: !12640, line: 109, column: 2)
!12692 = distinct !DILexicalBlock(scope: !12677, file: !12640, line: 109, column: 2)
!12693 = !DILocation(line: 119, column: 11, scope: !12694)
!12694 = distinct !DILexicalBlock(scope: !12677, file: !12640, line: 119, column: 6)
!12695 = !DILocation(line: 119, column: 20, scope: !12694)
!12696 = !DILocalVariable(name: "esf", arg: 1, scope: !12697, file: !7384, line: 71, type: !12454)
!12697 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !7384, file: !7384, line: 71, type: !12698, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2945, retainedNodes: !12700)
!12698 = !DISubroutineType(types: !12699)
!12699 = !{!345, !12454}
!12700 = !{!12696}
!12701 = !DILocation(line: 0, scope: !12697, inlinedAt: !12702)
!12702 = distinct !DILocation(line: 119, column: 23, scope: !12694)
!12703 = !DILocation(line: 73, column: 21, scope: !12697, inlinedAt: !12702)
!12704 = !DILocation(line: 73, column: 26, scope: !12697, inlinedAt: !12702)
!12705 = !DILocation(line: 73, column: 9, scope: !12697, inlinedAt: !12702)
!12706 = !DILocation(line: 119, column: 6, scope: !12677)
!12707 = !DILocation(line: 120, column: 3, scope: !12708)
!12708 = distinct !DILexicalBlock(scope: !12709, file: !12640, line: 120, column: 3)
!12709 = distinct !DILexicalBlock(scope: !12710, file: !12640, line: 120, column: 3)
!12710 = distinct !DILexicalBlock(scope: !12711, file: !12640, line: 120, column: 3)
!12711 = distinct !DILexicalBlock(scope: !12712, file: !12640, line: 120, column: 3)
!12712 = distinct !DILexicalBlock(scope: !12694, file: !12640, line: 119, column: 57)
!12713 = !DILocation(line: 121, column: 2, scope: !12712)
!12714 = !DILocation(line: 124, column: 2, scope: !12715)
!12715 = distinct !DILexicalBlock(scope: !12716, file: !12640, line: 124, column: 2)
!12716 = distinct !DILexicalBlock(scope: !12717, file: !12640, line: 124, column: 2)
!12717 = distinct !DILexicalBlock(scope: !12718, file: !12640, line: 124, column: 2)
!12718 = distinct !DILexicalBlock(scope: !12677, file: !12640, line: 124, column: 2)
!12719 = !DILocation(line: 131, column: 2, scope: !12677)
!12720 = !DILocation(line: 0, scope: !12697, inlinedAt: !12721)
!12721 = distinct !DILocation(line: 163, column: 24, scope: !12722)
!12722 = distinct !DILexicalBlock(scope: !12723, file: !12640, line: 163, column: 7)
!12723 = distinct !DILexicalBlock(scope: !12724, file: !12640, line: 160, column: 9)
!12724 = distinct !DILexicalBlock(scope: !12677, file: !12640, line: 146, column: 6)
!12725 = !DILocation(line: 73, column: 21, scope: !12697, inlinedAt: !12721)
!12726 = !DILocation(line: 73, column: 26, scope: !12697, inlinedAt: !12721)
!12727 = !DILocation(line: 73, column: 9, scope: !12697, inlinedAt: !12721)
!12728 = !DILocation(line: 163, column: 7, scope: !12723)
!12729 = !DILocalVariable(name: "key", arg: 1, scope: !12730, file: !6013, line: 84, type: !32)
!12730 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6013, file: !6013, line: 84, type: !6024, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2945, retainedNodes: !12731)
!12731 = !{!12729}
!12732 = !DILocation(line: 0, scope: !12730, inlinedAt: !12733)
!12733 = distinct !DILocation(line: 171, column: 4, scope: !12734)
!12734 = distinct !DILexicalBlock(scope: !12722, file: !12640, line: 163, column: 58)
!12735 = !DILocation(line: 95, column: 2, scope: !12730, inlinedAt: !12733)
!12736 = !{i64 2043457}
!12737 = !DILocation(line: 172, column: 4, scope: !12734)
!12738 = !DILocation(line: 163, column: 21, scope: !12722)
!12739 = !DILocation(line: 178, column: 15, scope: !12740)
!12740 = distinct !DILexicalBlock(scope: !12741, file: !12640, line: 178, column: 8)
!12741 = distinct !DILexicalBlock(scope: !12722, file: !12640, line: 174, column: 10)
!12742 = !DILocation(line: 0, scope: !12730, inlinedAt: !12743)
!12743 = distinct !DILocation(line: 179, column: 5, scope: !12744)
!12744 = distinct !DILexicalBlock(scope: !12740, file: !12640, line: 178, column: 38)
!12745 = !DILocation(line: 0, scope: !12730, inlinedAt: !12746)
!12746 = distinct !DILocation(line: 186, column: 2, scope: !12677)
!12747 = !DILocation(line: 178, column: 8, scope: !12741)
!12748 = !DILocation(line: 189, column: 3, scope: !12749)
!12749 = distinct !DILexicalBlock(scope: !12750, file: !12640, line: 188, column: 41)
!12750 = distinct !DILexicalBlock(scope: !12677, file: !12640, line: 188, column: 6)
!12751 = !DILocation(line: 191, column: 1, scope: !12677)
!12752 = distinct !DISubprogram(name: "k_current_get", scope: !245, file: !245, line: 530, type: !12753, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2945, retainedNodes: !2048)
!12753 = !DISubroutineType(types: !12754)
!12754 = !{!12755}
!12755 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !143, line: 347, baseType: !12498)
!12756 = !DILocation(line: 535, column: 9, scope: !12752)
!12757 = !DILocation(line: 535, column: 2, scope: !12752)
!12758 = distinct !DISubprogram(name: "reason_to_str", scope: !12640, file: !12640, line: 62, type: !12759, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2945, retainedNodes: !12761)
!12759 = !DISubroutineType(types: !12760)
!12760 = !{!278, !32}
!12761 = !{!12762}
!12762 = !DILocalVariable(name: "reason", arg: 1, scope: !12758, file: !12640, line: 62, type: !32)
!12763 = !DILocation(line: 0, scope: !12758)
!12764 = !DILocation(line: 64, column: 2, scope: !12758)
!12765 = !DILocation(line: 0, scope: !12766)
!12766 = distinct !DILexicalBlock(scope: !12758, file: !12640, line: 64, column: 18)
!12767 = !DILocation(line: 78, column: 1, scope: !12758)
!12768 = distinct !DISubprogram(name: "thread_name_get", scope: !12640, file: !12640, line: 51, type: !12769, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2945, retainedNodes: !12771)
!12769 = !DISubroutineType(types: !12770)
!12770 = !{!278, !12498}
!12771 = !{!12772, !12773}
!12772 = !DILocalVariable(name: "thread", arg: 1, scope: !12768, file: !12640, line: 51, type: !12498)
!12773 = !DILocalVariable(name: "thread_name", scope: !12768, file: !12640, line: 53, type: !278)
!12774 = !DILocation(line: 0, scope: !12768)
!12775 = !DILocation(line: 53, column: 36, scope: !12768)
!12776 = !DILocation(line: 53, column: 28, scope: !12768)
!12777 = !DILocation(line: 53, column: 47, scope: !12768)
!12778 = !DILocation(line: 55, column: 19, scope: !12779)
!12779 = distinct !DILexicalBlock(scope: !12768, file: !12640, line: 55, column: 6)
!12780 = !DILocation(line: 55, column: 28, scope: !12779)
!12781 = !DILocation(line: 55, column: 32, scope: !12779)
!12782 = !DILocation(line: 55, column: 47, scope: !12779)
!12783 = !DILocation(line: 55, column: 6, scope: !12768)
!12784 = !DILocation(line: 57, column: 2, scope: !12785)
!12785 = distinct !DILexicalBlock(scope: !12779, file: !12640, line: 55, column: 57)
!12786 = !DILocation(line: 59, column: 2, scope: !12768)
!12787 = distinct !DISubprogram(name: "k_thread_abort", scope: !3233, file: !3233, line: 188, type: !12788, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2945, retainedNodes: !12790)
!12788 = !DISubroutineType(types: !12789)
!12789 = !{null, !12755}
!12790 = !{!12791}
!12791 = !DILocalVariable(name: "thread", arg: 1, scope: !12787, file: !3233, line: 188, type: !12755)
!12792 = !DILocation(line: 0, scope: !12787)
!12793 = !DILocation(line: 197, column: 2, scope: !12794)
!12794 = distinct !DILexicalBlock(scope: !12787, file: !3233, line: 197, column: 2)
!12795 = !{i64 2154158961}
!12796 = !DILocation(line: 198, column: 2, scope: !12787)
!12797 = !DILocation(line: 199, column: 1, scope: !12787)
!12798 = distinct !DISubprogram(name: "z_current_get", scope: !3233, file: !3233, line: 173, type: !12753, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2945, retainedNodes: !2048)
!12799 = !DILocation(line: 180, column: 2, scope: !12800)
!12800 = distinct !DILexicalBlock(scope: !12798, file: !3233, line: 180, column: 2)
!12801 = !{i64 2154158893}
!12802 = !DILocation(line: 181, column: 9, scope: !12798)
!12803 = !DILocation(line: 181, column: 2, scope: !12798)
!12804 = distinct !DISubprogram(name: "z_early_memset", scope: !1847, file: !1847, line: 108, type: !12805, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1843, retainedNodes: !12807)
!12805 = !DISubroutineType(types: !12806)
!12806 = !{null, !113, !119, !239}
!12807 = !{!12808, !12809, !12810}
!12808 = !DILocalVariable(name: "dst", arg: 1, scope: !12804, file: !1847, line: 108, type: !113)
!12809 = !DILocalVariable(name: "c", arg: 2, scope: !12804, file: !1847, line: 108, type: !119)
!12810 = !DILocalVariable(name: "n", arg: 3, scope: !12804, file: !1847, line: 108, type: !239)
!12811 = !DILocation(line: 0, scope: !12804)
!12812 = !DILocation(line: 110, column: 9, scope: !12804)
!12813 = !DILocation(line: 111, column: 1, scope: !12804)
!12814 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1847, file: !1847, line: 121, type: !12815, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1843, retainedNodes: !12817)
!12815 = !DISubroutineType(types: !12816)
!12816 = !{null, !113, !13, !239}
!12817 = !{!12818, !12819, !12820}
!12818 = !DILocalVariable(name: "dst", arg: 1, scope: !12814, file: !1847, line: 121, type: !113)
!12819 = !DILocalVariable(name: "src", arg: 2, scope: !12814, file: !1847, line: 121, type: !13)
!12820 = !DILocalVariable(name: "n", arg: 3, scope: !12814, file: !1847, line: 121, type: !239)
!12821 = !DILocation(line: 0, scope: !12814)
!12822 = !DILocation(line: 123, column: 9, scope: !12814)
!12823 = !DILocation(line: 124, column: 1, scope: !12814)
!12824 = distinct !DISubprogram(name: "z_bss_zero", scope: !1847, file: !1847, line: 132, type: !2982, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1843, retainedNodes: !2048)
!12825 = !DILocation(line: 143, column: 2, scope: !12824)
!12826 = !DILocation(line: 168, column: 1, scope: !12824)
!12827 = distinct !DISubprogram(name: "z_init_cpu", scope: !1847, file: !1847, line: 372, type: !8418, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1843, retainedNodes: !12828)
!12828 = !{!12829}
!12829 = !DILocalVariable(name: "id", arg: 1, scope: !12827, file: !1847, line: 372, type: !119)
!12830 = !DILocation(line: 0, scope: !12827)
!12831 = !DILocation(line: 374, column: 2, scope: !12827)
!12832 = !DILocation(line: 375, column: 34, scope: !12827)
!12833 = !DILocation(line: 375, column: 19, scope: !12827)
!12834 = !DILocation(line: 375, column: 31, scope: !12827)
!12835 = !DILocation(line: 376, column: 24, scope: !12827)
!12836 = !DILocation(line: 376, column: 19, scope: !12827)
!12837 = !DILocation(line: 376, column: 22, scope: !12827)
!12838 = !DILocation(line: 378, column: 26, scope: !12827)
!12839 = !DILocation(line: 378, column: 4, scope: !12827)
!12840 = !DILocation(line: 378, column: 50, scope: !12827)
!12841 = !DILocation(line: 377, column: 19, scope: !12827)
!12842 = !DILocation(line: 377, column: 29, scope: !12827)
!12843 = !DILocation(line: 384, column: 1, scope: !12827)
!12844 = distinct !DISubprogram(name: "init_idle_thread", scope: !1847, file: !1847, line: 343, type: !8418, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1843, retainedNodes: !12845)
!12845 = !{!12846, !12847, !12848, !12851}
!12846 = !DILocalVariable(name: "i", arg: 1, scope: !12844, file: !1847, line: 343, type: !119)
!12847 = !DILocalVariable(name: "thread", scope: !12844, file: !1847, line: 345, type: !1939)
!12848 = !DILocalVariable(name: "stack", scope: !12844, file: !1847, line: 346, type: !12849)
!12849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12850, size: 32)
!12850 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !109, line: 44, baseType: !2057)
!12851 = !DILocalVariable(name: "tname", scope: !12844, file: !1847, line: 354, type: !106)
!12852 = !DILocation(line: 0, scope: !12844)
!12853 = !DILocation(line: 345, column: 29, scope: !12844)
!12854 = !DILocation(line: 346, column: 28, scope: !12844)
!12855 = !DILocation(line: 362, column: 37, scope: !12844)
!12856 = !DILocation(line: 362, column: 36, scope: !12844)
!12857 = !DILocation(line: 361, column: 2, scope: !12844)
!12858 = !DILocation(line: 365, column: 2, scope: !12844)
!12859 = !DILocation(line: 370, column: 1, scope: !12844)
!12860 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !128, file: !128, line: 331, type: !12861, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1843, retainedNodes: !12863)
!12861 = !DISubroutineType(types: !12862)
!12862 = !{!106, !12849}
!12863 = !{!12864}
!12864 = !DILocalVariable(name: "sym", arg: 1, scope: !12860, file: !128, line: 331, type: !12849)
!12865 = !DILocation(line: 0, scope: !12860)
!12866 = !DILocation(line: 333, column: 21, scope: !12860)
!12867 = !DILocation(line: 333, column: 2, scope: !12860)
!12868 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12869, file: !12869, line: 155, type: !12870, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1843, retainedNodes: !12872)
!12869 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12870 = !DISubroutineType(types: !12871)
!12871 = !{null, !1939}
!12872 = !{!12873}
!12873 = !DILocalVariable(name: "thread", arg: 1, scope: !12868, file: !12869, line: 155, type: !1939)
!12874 = !DILocation(line: 0, scope: !12868)
!12875 = !DILocation(line: 157, column: 15, scope: !12868)
!12876 = !DILocation(line: 157, column: 28, scope: !12868)
!12877 = !DILocation(line: 158, column: 1, scope: !12868)
!12878 = distinct !DISubprogram(name: "z_cstart", scope: !1847, file: !1847, line: 501, type: !2982, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1843, retainedNodes: !12879)
!12879 = !{!12880}
!12880 = !DILocalVariable(name: "dummy_thread", scope: !12878, file: !1847, line: 518, type: !1940)
!12881 = !DILocation(line: 507, column: 2, scope: !12878)
!12882 = !DILocation(line: 43, column: 14, scope: !12883, inlinedAt: !12887)
!12883 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !12884, file: !12884, line: 40, type: !2982, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1843, retainedNodes: !12885)
!12884 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12885 = !{!12886}
!12886 = !DILocalVariable(name: "msp", scope: !12883, file: !12884, line: 42, type: !118)
!12887 = distinct !DILocation(line: 44, column: 2, scope: !12888, inlinedAt: !12890)
!12888 = distinct !DISubprogram(name: "arch_kernel_init", scope: !12889, file: !12889, line: 42, type: !2982, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1843, retainedNodes: !2048)
!12889 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12890 = distinct !DILocation(line: 510, column: 2, scope: !12878)
!12891 = !DILocation(line: 43, column: 3, scope: !12883, inlinedAt: !12887)
!12892 = !DILocation(line: 43, column: 60, scope: !12883, inlinedAt: !12887)
!12893 = !DILocation(line: 0, scope: !12883, inlinedAt: !12887)
!12894 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !12895, file: !6334, line: 1153, type: !118)
!12895 = distinct !DISubprogram(name: "__set_MSP", scope: !6334, file: !6334, line: 1153, type: !6429, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1843, retainedNodes: !12896)
!12896 = !{!12894}
!12897 = !DILocation(line: 0, scope: !12895, inlinedAt: !12898)
!12898 = distinct !DILocation(line: 46, column: 2, scope: !12883, inlinedAt: !12887)
!12899 = !DILocation(line: 1155, column: 3, scope: !12895, inlinedAt: !12898)
!12900 = !{i64 2936720}
!12901 = !DILocation(line: 62, column: 11, scope: !12883, inlinedAt: !12887)
!12902 = !DILocation(line: 102, column: 2, scope: !12903, inlinedAt: !12904)
!12903 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !7384, file: !7384, line: 97, type: !2982, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1843, retainedNodes: !2048)
!12904 = distinct !DILocation(line: 45, column: 2, scope: !12888, inlinedAt: !12890)
!12905 = !DILocation(line: 108, column: 2, scope: !12903, inlinedAt: !12904)
!12906 = !DILocation(line: 112, column: 2, scope: !12903, inlinedAt: !12904)
!12907 = !DILocation(line: 113, column: 2, scope: !12903, inlinedAt: !12904)
!12908 = !DILocation(line: 114, column: 2, scope: !12903, inlinedAt: !12904)
!12909 = !DILocation(line: 116, column: 2, scope: !12903, inlinedAt: !12904)
!12910 = !DILocation(line: 123, column: 13, scope: !12903, inlinedAt: !12904)
!12911 = !DILocation(line: 46, column: 2, scope: !12888, inlinedAt: !12890)
!12912 = !DILocation(line: 47, column: 2, scope: !12888, inlinedAt: !12890)
!12913 = !DILocation(line: 174, column: 12, scope: !12914, inlinedAt: !12915)
!12914 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !7384, file: !7384, line: 169, type: !2982, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1843, retainedNodes: !2048)
!12915 = distinct !DILocation(line: 48, column: 2, scope: !12888, inlinedAt: !12890)
!12916 = !DILocation(line: 179, column: 12, scope: !12914, inlinedAt: !12915)
!12917 = !DILocation(line: 50, column: 2, scope: !12888, inlinedAt: !12890)
!12918 = !DILocation(line: 57, column: 2, scope: !12888, inlinedAt: !12890)
!12919 = !DILocation(line: 518, column: 2, scope: !12878)
!12920 = !DILocation(line: 518, column: 18, scope: !12878)
!12921 = !DILocation(line: 520, column: 2, scope: !12878)
!12922 = !DILocation(line: 523, column: 2, scope: !12878)
!12923 = !DILocation(line: 526, column: 2, scope: !12878)
!12924 = !DILocation(line: 527, column: 2, scope: !12878)
!12925 = !DILocation(line: 543, column: 24, scope: !12878)
!12926 = !DILocation(line: 543, column: 2, scope: !12878)
!12927 = !DILocation(line: 0, scope: !2081)
!12928 = !DILocation(line: 246, column: 15, scope: !2099)
!12929 = !DILocation(line: 246, column: 36, scope: !2098)
!12930 = !DILocation(line: 246, column: 2, scope: !2099)
!12931 = !DILocation(line: 247, column: 37, scope: !2097)
!12932 = !DILocation(line: 0, scope: !2097)
!12933 = !DILocation(line: 248, column: 19, scope: !2097)
!12934 = !DILocation(line: 248, column: 12, scope: !2097)
!12935 = !DILocation(line: 250, column: 11, scope: !12936)
!12936 = distinct !DILexicalBlock(scope: !2097, file: !1847, line: 250, column: 7)
!12937 = !DILocation(line: 250, column: 7, scope: !2097)
!12938 = !DILocation(line: 254, column: 11, scope: !12939)
!12939 = distinct !DILexicalBlock(scope: !12940, file: !1847, line: 254, column: 8)
!12940 = distinct !DILexicalBlock(scope: !12936, file: !1847, line: 250, column: 20)
!12941 = !DILocation(line: 254, column: 8, scope: !12940)
!12942 = !DILocation(line: 255, column: 9, scope: !12943)
!12943 = distinct !DILexicalBlock(scope: !12939, file: !1847, line: 254, column: 17)
!12944 = !DILocation(line: 258, column: 9, scope: !12943)
!12945 = !DILocation(line: 261, column: 28, scope: !12943)
!12946 = !DILocation(line: 261, column: 10, scope: !12943)
!12947 = !DILocation(line: 261, column: 17, scope: !12943)
!12948 = !DILocation(line: 261, column: 26, scope: !12943)
!12949 = !DILocation(line: 262, column: 4, scope: !12943)
!12950 = !DILocation(line: 263, column: 9, scope: !12940)
!12951 = !DILocation(line: 263, column: 16, scope: !12940)
!12952 = !DILocation(line: 263, column: 28, scope: !12940)
!12953 = !DILocation(line: 264, column: 3, scope: !12940)
!12954 = !DILocation(line: 246, column: 60, scope: !2098)
!12955 = distinct !{!12955, !12930, !12956}
!12956 = !DILocation(line: 265, column: 2, scope: !2099)
!12957 = !DILocation(line: 266, column: 1, scope: !2081)
!12958 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !533, file: !533, line: 1814, type: !6374, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1843, retainedNodes: !12959)
!12959 = !{!12960, !12961}
!12960 = !DILocalVariable(name: "IRQn", arg: 1, scope: !12958, file: !533, line: 1814, type: !768)
!12961 = !DILocalVariable(name: "priority", arg: 2, scope: !12958, file: !533, line: 1814, type: !118)
!12962 = !DILocation(line: 0, scope: !12958)
!12963 = !DILocation(line: 1822, column: 48, scope: !12964)
!12964 = distinct !DILexicalBlock(scope: !12965, file: !533, line: 1821, column: 3)
!12965 = distinct !DILexicalBlock(scope: !12958, file: !533, line: 1816, column: 7)
!12966 = !DILocation(line: 1822, column: 32, scope: !12964)
!12967 = !DILocation(line: 1822, column: 40, scope: !12964)
!12968 = !DILocation(line: 1822, column: 5, scope: !12964)
!12969 = !DILocation(line: 1822, column: 46, scope: !12964)
!12970 = !DILocation(line: 1824, column: 1, scope: !12958)
!12971 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !12889, file: !12889, line: 32, type: !2982, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2048)
!12972 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !12973, file: !12973, line: 215, type: !12870, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1843, retainedNodes: !12974)
!12973 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12974 = !{!12975}
!12975 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !12972, file: !12973, line: 215, type: !1939)
!12976 = !DILocation(line: 0, scope: !12972)
!12977 = !DILocation(line: 217, column: 21, scope: !12972)
!12978 = !DILocation(line: 217, column: 34, scope: !12972)
!12979 = !DILocation(line: 221, column: 21, scope: !12972)
!12980 = !DILocation(line: 221, column: 34, scope: !12972)
!12981 = !DILocation(line: 223, column: 27, scope: !12972)
!12982 = !DILocation(line: 223, column: 33, scope: !12972)
!12983 = !DILocation(line: 224, column: 27, scope: !12972)
!12984 = !DILocation(line: 224, column: 32, scope: !12972)
!12985 = !DILocation(line: 232, column: 16, scope: !12972)
!12986 = !DILocation(line: 232, column: 30, scope: !12972)
!12987 = !DILocation(line: 239, column: 24, scope: !12972)
!12988 = !DILocation(line: 240, column: 1, scope: !12972)
!12989 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1847, file: !1847, line: 399, type: !12990, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1843, retainedNodes: !12992)
!12990 = !DISubroutineType(types: !12991)
!12991 = !{!106}
!12992 = !{!12993}
!12993 = !DILocalVariable(name: "stack_ptr", scope: !12989, file: !1847, line: 401, type: !106)
!12994 = !DILocation(line: 404, column: 2, scope: !12989)
!12995 = !DILocation(line: 416, column: 24, scope: !12989)
!12996 = !DILocation(line: 418, column: 14, scope: !12989)
!12997 = !DILocation(line: 0, scope: !12989)
!12998 = !DILocation(line: 423, column: 2, scope: !12989)
!12999 = !DILocation(line: 424, column: 2, scope: !12989)
!13000 = !DILocation(line: 426, column: 2, scope: !12989)
!13001 = !DILocation(line: 428, column: 2, scope: !12989)
!13002 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1847, file: !1847, line: 432, type: !13003, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1843, retainedNodes: !13005)
!13003 = !DISubroutineType(types: !13004)
!13004 = !{null, !106}
!13005 = !{!13006}
!13006 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !13002, file: !1847, line: 432, type: !106)
!13007 = !DILocation(line: 0, scope: !13002)
!13008 = !DILocation(line: 435, column: 2, scope: !13002)
!13009 = !DILocation(line: 445, column: 2, scope: !13002)
!13010 = distinct !DISubprogram(name: "bg_thread_main", scope: !1847, file: !1847, line: 277, type: !111, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1843, retainedNodes: !13011)
!13011 = !{!13012, !13013, !13014}
!13012 = !DILocalVariable(name: "unused1", arg: 1, scope: !13010, file: !1847, line: 277, type: !113)
!13013 = !DILocalVariable(name: "unused2", arg: 2, scope: !13010, file: !1847, line: 277, type: !113)
!13014 = !DILocalVariable(name: "unused3", arg: 3, scope: !13010, file: !1847, line: 277, type: !113)
!13015 = !DILocation(line: 0, scope: !13010)
!13016 = !DILocation(line: 291, column: 20, scope: !13010)
!13017 = !DILocation(line: 293, column: 2, scope: !13010)
!13018 = !DILocation(line: 297, column: 2, scope: !13010)
!13019 = !DILocation(line: 305, column: 2, scope: !13010)
!13020 = !DILocation(line: 307, column: 2, scope: !13010)
!13021 = !DILocation(line: 330, column: 8, scope: !13010)
!13022 = !DILocation(line: 333, column: 34, scope: !13010)
!13023 = !DILocation(line: 339, column: 1, scope: !13010)
!13024 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2110, file: !2110, line: 45, type: !13025, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !13033)
!13025 = !DISubroutineType(types: !13026)
!13026 = !{null, !13027, !113}
!13027 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !245, line: 103, baseType: !13028)
!13028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13029, size: 32)
!13029 = !DISubroutineType(types: !13030)
!13030 = !{null, !13031, !113}
!13031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13032, size: 32)
!13032 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2115)
!13033 = !{!13034, !13035}
!13034 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13024, file: !2110, line: 45, type: !13027)
!13035 = !DILocalVariable(name: "user_data", arg: 2, scope: !13024, file: !2110, line: 45, type: !113)
!13036 = !DILocation(line: 0, scope: !13024)
!13037 = !DILocation(line: 71, column: 1, scope: !13024)
!13038 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2110, file: !2110, line: 73, type: !13025, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !13039)
!13039 = !{!13040, !13041}
!13040 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13038, file: !2110, line: 73, type: !13027)
!13041 = !DILocalVariable(name: "user_data", arg: 2, scope: !13038, file: !2110, line: 73, type: !113)
!13042 = !DILocation(line: 0, scope: !13038)
!13043 = !DILocation(line: 95, column: 1, scope: !13038)
!13044 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2110, file: !2110, line: 97, type: !7385, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !2048)
!13045 = !DILocation(line: 1031, column: 3, scope: !13046, inlinedAt: !13049)
!13046 = distinct !DISubprogram(name: "__get_IPSR", scope: !6334, file: !6334, line: 1027, type: !3220, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !13047)
!13047 = !{!13048}
!13048 = !DILocalVariable(name: "result", scope: !13046, file: !6334, line: 1029, type: !118)
!13049 = distinct !DILocation(line: 48, column: 10, scope: !13050, inlinedAt: !13051)
!13050 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7384, file: !7384, line: 46, type: !7385, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !2048)
!13051 = distinct !DILocation(line: 99, column: 9, scope: !13044)
!13052 = !{i64 2942371}
!13053 = !DILocation(line: 0, scope: !13046, inlinedAt: !13049)
!13054 = !DILocation(line: 48, column: 9, scope: !13050, inlinedAt: !13051)
!13055 = !DILocation(line: 99, column: 2, scope: !13044)
!13056 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2110, file: !2110, line: 106, type: !2982, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !2048)
!13057 = !DILocation(line: 108, column: 2, scope: !13056)
!13058 = !DILocation(line: 108, column: 17, scope: !13056)
!13059 = !DILocation(line: 108, column: 30, scope: !13056)
!13060 = !DILocation(line: 109, column: 1, scope: !13056)
!13061 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2110, file: !2110, line: 116, type: !2982, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !2048)
!13062 = !DILocation(line: 118, column: 2, scope: !13061)
!13063 = !DILocation(line: 118, column: 17, scope: !13061)
!13064 = !DILocation(line: 118, column: 30, scope: !13061)
!13065 = !DILocation(line: 119, column: 1, scope: !13061)
!13066 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2110, file: !2110, line: 126, type: !7385, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !2048)
!13067 = !DILocation(line: 128, column: 10, scope: !13066)
!13068 = !DILocation(line: 128, column: 25, scope: !13066)
!13069 = !DILocation(line: 128, column: 38, scope: !13066)
!13070 = !DILocation(line: 128, column: 53, scope: !13066)
!13071 = !DILocation(line: 128, column: 2, scope: !13066)
!13072 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2110, file: !2110, line: 187, type: !13073, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !13075)
!13073 = !DISubroutineType(types: !13074)
!13074 = !{!119, !2114, !278}
!13075 = !{!13076, !13077}
!13076 = !DILocalVariable(name: "thread", arg: 1, scope: !13072, file: !2110, line: 187, type: !2114)
!13077 = !DILocalVariable(name: "value", arg: 2, scope: !13072, file: !2110, line: 187, type: !278)
!13078 = !DILocation(line: 0, scope: !13072)
!13079 = !DILocation(line: 190, column: 13, scope: !13080)
!13080 = distinct !DILexicalBlock(scope: !13072, file: !2110, line: 190, column: 6)
!13081 = !DILocation(line: 190, column: 6, scope: !13072)
!13082 = !DILocation(line: 194, column: 10, scope: !13072)
!13083 = !DILocation(line: 194, column: 2, scope: !13072)
!13084 = !DILocation(line: 195, column: 2, scope: !13072)
!13085 = !DILocation(line: 195, column: 47, scope: !13072)
!13086 = !DILocation(line: 199, column: 2, scope: !13072)
!13087 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2110, file: !2110, line: 238, type: !13088, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !13090)
!13088 = !DISubroutineType(types: !13089)
!13089 = !{!278, !2114}
!13090 = !{!13091}
!13091 = !DILocalVariable(name: "thread", arg: 1, scope: !13087, file: !2110, line: 238, type: !2114)
!13092 = !DILocation(line: 0, scope: !13087)
!13093 = !DILocation(line: 241, column: 23, scope: !13087)
!13094 = !DILocation(line: 241, column: 2, scope: !13087)
!13095 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2110, file: !2110, line: 248, type: !13096, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !13098)
!13096 = !DISubroutineType(types: !13097)
!13097 = !{!119, !2113, !106, !239}
!13098 = !{!13099, !13100, !13101}
!13099 = !DILocalVariable(name: "thread", arg: 1, scope: !13095, file: !2110, line: 248, type: !2113)
!13100 = !DILocalVariable(name: "buf", arg: 2, scope: !13095, file: !2110, line: 248, type: !106)
!13101 = !DILocalVariable(name: "size", arg: 3, scope: !13095, file: !2110, line: 248, type: !239)
!13102 = !DILocation(line: 0, scope: !13095)
!13103 = !DILocation(line: 251, column: 15, scope: !13095)
!13104 = !DILocation(line: 251, column: 2, scope: !13095)
!13105 = !DILocation(line: 252, column: 2, scope: !13095)
!13106 = !DILocation(line: 0, scope: !2109)
!13107 = !DILocation(line: 281, column: 11, scope: !13108)
!13108 = distinct !DILexicalBlock(scope: !2109, file: !2110, line: 281, column: 6)
!13109 = !DILocation(line: 281, column: 20, scope: !13108)
!13110 = !DILocation(line: 275, column: 45, scope: !2109)
!13111 = !DILocation(line: 285, column: 10, scope: !2109)
!13112 = !DILocation(line: 0, scope: !2233)
!13113 = !DILocation(line: 293, column: 39, scope: !13114)
!13114 = distinct !DILexicalBlock(scope: !2233, file: !2110, line: 293, column: 2)
!13115 = !DILocation(line: 293, column: 2, scope: !2233)
!13116 = !DILocation(line: 273, column: 14, scope: !2109)
!13117 = !DILocation(line: 309, column: 2, scope: !2109)
!13118 = !DILocation(line: 309, column: 11, scope: !2109)
!13119 = !DILocation(line: 311, column: 2, scope: !2109)
!13120 = !DILocation(line: 293, column: 26, scope: !13114)
!13121 = !DILocation(line: 294, column: 9, scope: !13122)
!13122 = distinct !DILexicalBlock(scope: !13114, file: !2110, line: 293, column: 54)
!13123 = !DILocation(line: 295, column: 21, scope: !13124)
!13124 = distinct !DILexicalBlock(scope: !13122, file: !2110, line: 295, column: 7)
!13125 = !DILocation(line: 295, column: 28, scope: !13124)
!13126 = !DILocation(line: 295, column: 7, scope: !13122)
!13127 = !DILocation(line: 299, column: 25, scope: !13122)
!13128 = !DILocation(line: 299, column: 41, scope: !13122)
!13129 = !DILocation(line: 300, column: 7, scope: !13122)
!13130 = !DILocation(line: 300, column: 26, scope: !13122)
!13131 = !DILocation(line: 299, column: 10, scope: !13122)
!13132 = !DILocation(line: 299, column: 7, scope: !13122)
!13133 = !DILocation(line: 302, column: 16, scope: !13122)
!13134 = !DILocation(line: 304, column: 20, scope: !13135)
!13135 = distinct !DILexicalBlock(scope: !13122, file: !2110, line: 304, column: 7)
!13136 = !DILocation(line: 304, column: 7, scope: !13122)
!13137 = !DILocation(line: 305, column: 26, scope: !13138)
!13138 = distinct !DILexicalBlock(scope: !13135, file: !2110, line: 304, column: 26)
!13139 = !DILocation(line: 305, column: 42, scope: !13138)
!13140 = !DILocation(line: 305, column: 11, scope: !13138)
!13141 = !DILocation(line: 305, column: 8, scope: !13138)
!13142 = !DILocation(line: 306, column: 3, scope: !13138)
!13143 = !DILocation(line: 293, column: 50, scope: !13114)
!13144 = !DILocation(line: 312, column: 1, scope: !2109)
!13145 = distinct !DISubprogram(name: "copy_bytes", scope: !2110, file: !2110, line: 261, type: !13146, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !13148)
!13146 = !DISubroutineType(types: !13147)
!13147 = !{!239, !106, !239, !278, !239}
!13148 = !{!13149, !13150, !13151, !13152, !13153}
!13149 = !DILocalVariable(name: "dest", arg: 1, scope: !13145, file: !2110, line: 261, type: !106)
!13150 = !DILocalVariable(name: "dest_size", arg: 2, scope: !13145, file: !2110, line: 261, type: !239)
!13151 = !DILocalVariable(name: "src", arg: 3, scope: !13145, file: !2110, line: 261, type: !278)
!13152 = !DILocalVariable(name: "src_size", arg: 4, scope: !13145, file: !2110, line: 261, type: !239)
!13153 = !DILocalVariable(name: "bytes_to_copy", scope: !13145, file: !2110, line: 263, type: !239)
!13154 = !DILocation(line: 0, scope: !13145)
!13155 = !DILocation(line: 265, column: 18, scope: !13145)
!13156 = !DILocation(line: 266, column: 2, scope: !13145)
!13157 = !DILocation(line: 268, column: 2, scope: !13145)
!13158 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2110, file: !2110, line: 383, type: !13159, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !13161)
!13159 = !DISubroutineType(types: !13160)
!13160 = !{null, !2114}
!13161 = !{!13162}
!13162 = !DILocalVariable(name: "thread", arg: 1, scope: !13158, file: !2110, line: 383, type: !2114)
!13163 = !DILocation(line: 0, scope: !13158)
!13164 = !DILocation(line: 387, column: 2, scope: !13158)
!13165 = !DILocation(line: 388, column: 1, scope: !13158)
!13166 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2110, file: !2110, line: 528, type: !13167, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !13174)
!13167 = !DISubroutineType(types: !13168)
!13168 = !{!106, !2114, !13169, !239, !108, !113, !113, !113, !119, !118, !278}
!13169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13170, size: 32)
!13170 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !109, line: 44, baseType: !13171)
!13171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !128, line: 47, size: 8, elements: !13172)
!13172 = !{!13173}
!13173 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13171, file: !128, line: 48, baseType: !107, size: 8)
!13174 = !{!13175, !13176, !13177, !13178, !13179, !13180, !13181, !13182, !13183, !13184, !13185}
!13175 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13166, file: !2110, line: 528, type: !2114)
!13176 = !DILocalVariable(name: "stack", arg: 2, scope: !13166, file: !2110, line: 529, type: !13169)
!13177 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13166, file: !2110, line: 529, type: !239)
!13178 = !DILocalVariable(name: "entry", arg: 4, scope: !13166, file: !2110, line: 530, type: !108)
!13179 = !DILocalVariable(name: "p1", arg: 5, scope: !13166, file: !2110, line: 531, type: !113)
!13180 = !DILocalVariable(name: "p2", arg: 6, scope: !13166, file: !2110, line: 531, type: !113)
!13181 = !DILocalVariable(name: "p3", arg: 7, scope: !13166, file: !2110, line: 531, type: !113)
!13182 = !DILocalVariable(name: "prio", arg: 8, scope: !13166, file: !2110, line: 532, type: !119)
!13183 = !DILocalVariable(name: "options", arg: 9, scope: !13166, file: !2110, line: 532, type: !118)
!13184 = !DILocalVariable(name: "name", arg: 10, scope: !13166, file: !2110, line: 532, type: !278)
!13185 = !DILocalVariable(name: "stack_ptr", scope: !13166, file: !2110, line: 534, type: !106)
!13186 = !DILocation(line: 0, scope: !13166)
!13187 = !DILocation(line: 536, column: 2, scope: !13188)
!13188 = distinct !DILexicalBlock(scope: !13189, file: !2110, line: 536, column: 2)
!13189 = distinct !DILexicalBlock(scope: !13190, file: !2110, line: 536, column: 2)
!13190 = distinct !DILexicalBlock(scope: !13166, file: !2110, line: 536, column: 2)
!13191 = !DILocation(line: 536, column: 2, scope: !13192)
!13192 = distinct !DILexicalBlock(scope: !13188, file: !2110, line: 536, column: 2)
!13193 = !DILocation(line: 550, column: 28, scope: !13166)
!13194 = !DILocation(line: 550, column: 2, scope: !13166)
!13195 = !DILocation(line: 553, column: 34, scope: !13166)
!13196 = !DILocation(line: 553, column: 2, scope: !13166)
!13197 = !DILocation(line: 554, column: 14, scope: !13166)
!13198 = !DILocation(line: 564, column: 2, scope: !13166)
!13199 = !DILocation(line: 567, column: 14, scope: !13166)
!13200 = !DILocation(line: 567, column: 24, scope: !13166)
!13201 = !DILocation(line: 594, column: 11, scope: !13202)
!13202 = distinct !DILexicalBlock(scope: !13166, file: !2110, line: 594, column: 6)
!13203 = !DILocation(line: 0, scope: !13202)
!13204 = !DILocation(line: 594, column: 6, scope: !13166)
!13205 = !DILocation(line: 595, column: 3, scope: !13206)
!13206 = distinct !DILexicalBlock(scope: !13202, file: !2110, line: 594, column: 20)
!13207 = !DILocation(line: 598, column: 3, scope: !13206)
!13208 = !DILocation(line: 598, column: 52, scope: !13206)
!13209 = !DILocation(line: 599, column: 2, scope: !13206)
!13210 = !DILocation(line: 600, column: 23, scope: !13211)
!13211 = distinct !DILexicalBlock(scope: !13202, file: !2110, line: 599, column: 9)
!13212 = !DILocation(line: 612, column: 7, scope: !13213)
!13213 = distinct !DILexicalBlock(scope: !13166, file: !2110, line: 612, column: 6)
!13214 = !DILocation(line: 612, column: 6, scope: !13166)
!13215 = !DILocation(line: 627, column: 40, scope: !13166)
!13216 = !DILocation(line: 637, column: 2, scope: !13166)
!13217 = !DILocation(line: 613, column: 15, scope: !13218)
!13218 = distinct !DILexicalBlock(scope: !13213, file: !2110, line: 612, column: 17)
!13219 = !DILocation(line: 613, column: 29, scope: !13218)
!13220 = !DILocation(line: 638, column: 1, scope: !13166)
!13221 = distinct !DISubprogram(name: "z_is_idle_thread_entry", scope: !12869, file: !12869, line: 78, type: !13222, scopeLine: 79, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !13224)
!13222 = !DISubroutineType(types: !13223)
!13223 = !{!345, !113}
!13224 = !{!13225}
!13225 = !DILocalVariable(name: "entry_point", arg: 1, scope: !13221, file: !12869, line: 78, type: !113)
!13226 = !DILocation(line: 0, scope: !13221)
!13227 = !DILocation(line: 80, column: 21, scope: !13221)
!13228 = !DILocation(line: 80, column: 2, scope: !13221)
!13229 = distinct !DISubprogram(name: "z_waitq_init", scope: !13230, file: !13230, line: 47, type: !13231, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !13233)
!13230 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13231 = !DISubroutineType(types: !13232)
!13232 = !{null, !2145}
!13233 = !{!13234}
!13234 = !DILocalVariable(name: "w", arg: 1, scope: !13229, file: !13230, line: 47, type: !2145)
!13235 = !DILocation(line: 0, scope: !13229)
!13236 = !DILocation(line: 49, column: 21, scope: !13229)
!13237 = !DILocation(line: 49, column: 2, scope: !13229)
!13238 = !DILocation(line: 50, column: 1, scope: !13229)
!13239 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2110, file: !2110, line: 791, type: !13240, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !13243)
!13240 = !DISubroutineType(types: !13241)
!13241 = !{null, !13242, !119, !118, !32}
!13242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2118, size: 32)
!13243 = !{!13244, !13245, !13246, !13247}
!13244 = !DILocalVariable(name: "thread_base", arg: 1, scope: !13239, file: !2110, line: 791, type: !13242)
!13245 = !DILocalVariable(name: "priority", arg: 2, scope: !13239, file: !2110, line: 791, type: !119)
!13246 = !DILocalVariable(name: "initial_state", arg: 3, scope: !13239, file: !2110, line: 792, type: !118)
!13247 = !DILocalVariable(name: "options", arg: 4, scope: !13239, file: !2110, line: 792, type: !32)
!13248 = !DILocation(line: 0, scope: !13239)
!13249 = !DILocation(line: 795, column: 15, scope: !13239)
!13250 = !DILocation(line: 795, column: 25, scope: !13239)
!13251 = !DILocation(line: 796, column: 30, scope: !13239)
!13252 = !DILocation(line: 796, column: 15, scope: !13239)
!13253 = !DILocation(line: 796, column: 28, scope: !13239)
!13254 = !DILocation(line: 797, column: 30, scope: !13239)
!13255 = !DILocation(line: 797, column: 15, scope: !13239)
!13256 = !DILocation(line: 797, column: 28, scope: !13239)
!13257 = !DILocation(line: 799, column: 22, scope: !13239)
!13258 = !DILocation(line: 799, column: 15, scope: !13239)
!13259 = !DILocation(line: 799, column: 20, scope: !13239)
!13260 = !DILocation(line: 801, column: 15, scope: !13239)
!13261 = !DILocation(line: 801, column: 28, scope: !13239)
!13262 = !DILocation(line: 814, column: 2, scope: !13239)
!13263 = !DILocation(line: 815, column: 1, scope: !13239)
!13264 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2110, file: !2110, line: 449, type: !13265, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !13267)
!13265 = !DISubroutineType(types: !13266)
!13266 = !{!106, !2114, !13169, !239}
!13267 = !{!13268, !13269, !13270, !13271, !13272, !13273, !13274, !13275}
!13268 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13264, file: !2110, line: 449, type: !2114)
!13269 = !DILocalVariable(name: "stack", arg: 2, scope: !13264, file: !2110, line: 450, type: !13169)
!13270 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13264, file: !2110, line: 450, type: !239)
!13271 = !DILocalVariable(name: "stack_obj_size", scope: !13264, file: !2110, line: 452, type: !239)
!13272 = !DILocalVariable(name: "stack_buf_size", scope: !13264, file: !2110, line: 452, type: !239)
!13273 = !DILocalVariable(name: "stack_ptr", scope: !13264, file: !2110, line: 453, type: !106)
!13274 = !DILocalVariable(name: "stack_buf_start", scope: !13264, file: !2110, line: 453, type: !106)
!13275 = !DILocalVariable(name: "delta", scope: !13264, file: !2110, line: 454, type: !239)
!13276 = !DILocation(line: 0, scope: !13264)
!13277 = !DILocation(line: 465, column: 20, scope: !13278)
!13278 = distinct !DILexicalBlock(scope: !13264, file: !2110, line: 463, column: 2)
!13279 = !DILocation(line: 466, column: 21, scope: !13278)
!13280 = !DILocation(line: 473, column: 28, scope: !13264)
!13281 = !DILocation(line: 514, column: 33, scope: !13264)
!13282 = !DILocation(line: 514, column: 25, scope: !13264)
!13283 = !DILocation(line: 514, column: 31, scope: !13264)
!13284 = !DILocation(line: 515, column: 25, scope: !13264)
!13285 = !DILocation(line: 515, column: 30, scope: !13264)
!13286 = !DILocation(line: 516, column: 25, scope: !13264)
!13287 = !DILocation(line: 516, column: 31, scope: !13264)
!13288 = !DILocation(line: 520, column: 2, scope: !13264)
!13289 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !128, file: !128, line: 331, type: !13290, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !13292)
!13290 = !DISubroutineType(types: !13291)
!13291 = !{!106, !13169}
!13292 = !{!13293}
!13293 = !DILocalVariable(name: "sym", arg: 1, scope: !13289, file: !128, line: 331, type: !13169)
!13294 = !DILocation(line: 0, scope: !13289)
!13295 = !DILocation(line: 333, column: 21, scope: !13289)
!13296 = !DILocation(line: 333, column: 2, scope: !13289)
!13297 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !13298, file: !13298, line: 40, type: !13299, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !13301)
!13298 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13299 = !DISubroutineType(types: !13300)
!13300 = !{null, !13242}
!13301 = !{!13302}
!13302 = !DILocalVariable(name: "thread_base", arg: 1, scope: !13297, file: !13298, line: 40, type: !13242)
!13303 = !DILocation(line: 0, scope: !13297)
!13304 = !DILocation(line: 42, column: 31, scope: !13297)
!13305 = !DILocation(line: 42, column: 2, scope: !13297)
!13306 = !DILocation(line: 43, column: 1, scope: !13297)
!13307 = distinct !DISubprogram(name: "z_init_timeout", scope: !13298, file: !13298, line: 25, type: !2171, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !13308)
!13308 = !{!13309}
!13309 = !DILocalVariable(name: "to", arg: 1, scope: !13307, file: !13298, line: 25, type: !2173)
!13310 = !DILocation(line: 0, scope: !13307)
!13311 = !DILocation(line: 27, column: 22, scope: !13307)
!13312 = !DILocation(line: 27, column: 2, scope: !13307)
!13313 = !DILocation(line: 28, column: 1, scope: !13307)
!13314 = distinct !DISubprogram(name: "sys_dnode_init", scope: !153, file: !153, line: 211, type: !13315, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !13317)
!13315 = !DISubroutineType(types: !13316)
!13316 = !{null, !2220}
!13317 = !{!13318}
!13318 = !DILocalVariable(name: "node", arg: 1, scope: !13314, file: !153, line: 211, type: !2220)
!13319 = !DILocation(line: 0, scope: !13314)
!13320 = !DILocation(line: 213, column: 8, scope: !13314)
!13321 = !DILocation(line: 213, column: 13, scope: !13314)
!13322 = !DILocation(line: 214, column: 8, scope: !13314)
!13323 = !DILocation(line: 214, column: 13, scope: !13314)
!13324 = !DILocation(line: 215, column: 1, scope: !13314)
!13325 = distinct !DISubprogram(name: "sys_dlist_init", scope: !153, file: !153, line: 197, type: !13326, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !13329)
!13326 = !DISubroutineType(types: !13327)
!13327 = !{null, !13328}
!13328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2150, size: 32)
!13329 = !{!13330}
!13330 = !DILocalVariable(name: "list", arg: 1, scope: !13325, file: !153, line: 197, type: !13328)
!13331 = !DILocation(line: 0, scope: !13325)
!13332 = !DILocation(line: 199, column: 8, scope: !13325)
!13333 = !DILocation(line: 199, column: 13, scope: !13325)
!13334 = !DILocation(line: 200, column: 8, scope: !13325)
!13335 = !DILocation(line: 200, column: 13, scope: !13325)
!13336 = !DILocation(line: 201, column: 1, scope: !13325)
!13337 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2110, file: !2110, line: 641, type: !13338, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !13344)
!13338 = !DISubroutineType(types: !13339)
!13339 = !{!2113, !2114, !13169, !239, !108, !113, !113, !113, !119, !118, !13340}
!13340 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !115, line: 67, baseType: !13341)
!13341 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !115, line: 65, size: 64, elements: !13342)
!13342 = !{!13343}
!13343 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13341, file: !115, line: 66, baseType: !114, size: 64)
!13344 = !{!13345, !13346, !13347, !13348, !13349, !13350, !13351, !13352, !13353, !13354}
!13345 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13337, file: !2110, line: 641, type: !2114)
!13346 = !DILocalVariable(name: "stack", arg: 2, scope: !13337, file: !2110, line: 642, type: !13169)
!13347 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13337, file: !2110, line: 643, type: !239)
!13348 = !DILocalVariable(name: "entry", arg: 4, scope: !13337, file: !2110, line: 643, type: !108)
!13349 = !DILocalVariable(name: "p1", arg: 5, scope: !13337, file: !2110, line: 644, type: !113)
!13350 = !DILocalVariable(name: "p2", arg: 6, scope: !13337, file: !2110, line: 644, type: !113)
!13351 = !DILocalVariable(name: "p3", arg: 7, scope: !13337, file: !2110, line: 644, type: !113)
!13352 = !DILocalVariable(name: "prio", arg: 8, scope: !13337, file: !2110, line: 645, type: !119)
!13353 = !DILocalVariable(name: "options", arg: 9, scope: !13337, file: !2110, line: 645, type: !118)
!13354 = !DILocalVariable(name: "delay", arg: 10, scope: !13337, file: !2110, line: 645, type: !13340)
!13355 = !DILocation(line: 0, scope: !13337)
!13356 = !DILocation(line: 1031, column: 3, scope: !13046, inlinedAt: !13357)
!13357 = distinct !DILocation(line: 48, column: 10, scope: !13050, inlinedAt: !13358)
!13358 = distinct !DILocation(line: 647, column: 2, scope: !13359)
!13359 = distinct !DILexicalBlock(scope: !13360, file: !2110, line: 647, column: 2)
!13360 = distinct !DILexicalBlock(scope: !13337, file: !2110, line: 647, column: 2)
!13361 = !DILocation(line: 0, scope: !13046, inlinedAt: !13357)
!13362 = !DILocation(line: 48, column: 9, scope: !13050, inlinedAt: !13358)
!13363 = !DILocation(line: 647, column: 2, scope: !13360)
!13364 = !DILocation(line: 647, column: 2, scope: !13365)
!13365 = distinct !DILexicalBlock(scope: !13359, file: !2110, line: 647, column: 2)
!13366 = !DILocation(line: 649, column: 2, scope: !13337)
!13367 = !DILocation(line: 652, column: 7, scope: !13368)
!13368 = distinct !DILexicalBlock(scope: !13337, file: !2110, line: 652, column: 6)
!13369 = !DILocation(line: 652, column: 6, scope: !13337)
!13370 = !DILocation(line: 653, column: 3, scope: !13371)
!13371 = distinct !DILexicalBlock(scope: !13368, file: !2110, line: 652, column: 39)
!13372 = !DILocation(line: 654, column: 2, scope: !13371)
!13373 = !DILocation(line: 656, column: 2, scope: !13337)
!13374 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2110, file: !2110, line: 401, type: !13375, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !13377)
!13375 = !DISubroutineType(types: !13376)
!13376 = !{null, !2114, !13340}
!13377 = !{!13378, !13379}
!13378 = !DILocalVariable(name: "thread", arg: 1, scope: !13374, file: !2110, line: 401, type: !2114)
!13379 = !DILocalVariable(name: "delay", arg: 2, scope: !13374, file: !2110, line: 401, type: !13340)
!13380 = !DILocation(line: 0, scope: !13374)
!13381 = !DILocation(line: 404, column: 6, scope: !13382)
!13382 = distinct !DILexicalBlock(scope: !13374, file: !2110, line: 404, column: 6)
!13383 = !DILocation(line: 404, column: 6, scope: !13374)
!13384 = !DILocation(line: 405, column: 3, scope: !13385)
!13385 = distinct !DILexicalBlock(scope: !13382, file: !2110, line: 404, column: 38)
!13386 = !DILocation(line: 406, column: 2, scope: !13385)
!13387 = !DILocation(line: 407, column: 3, scope: !13388)
!13388 = distinct !DILexicalBlock(scope: !13382, file: !2110, line: 406, column: 9)
!13389 = !DILocation(line: 413, column: 1, scope: !13374)
!13390 = distinct !DISubprogram(name: "k_thread_start", scope: !3233, file: !3233, line: 205, type: !13391, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !13393)
!13391 = !DISubroutineType(types: !13392)
!13392 = !{null, !2113}
!13393 = !{!13394}
!13394 = !DILocalVariable(name: "thread", arg: 1, scope: !13390, file: !3233, line: 205, type: !2113)
!13395 = !DILocation(line: 0, scope: !13390)
!13396 = !DILocation(line: 214, column: 2, scope: !13397)
!13397 = distinct !DILexicalBlock(scope: !13390, file: !3233, line: 214, column: 2)
!13398 = !{i64 2154184185}
!13399 = !DILocation(line: 215, column: 2, scope: !13390)
!13400 = !DILocation(line: 216, column: 1, scope: !13390)
!13401 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !13298, file: !13298, line: 47, type: !13375, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !13402)
!13402 = !{!13403, !13404}
!13403 = !DILocalVariable(name: "thread", arg: 1, scope: !13401, file: !13298, line: 47, type: !2114)
!13404 = !DILocalVariable(name: "ticks", arg: 2, scope: !13401, file: !13298, line: 47, type: !13340)
!13405 = !DILocation(line: 0, scope: !13401)
!13406 = !DILocation(line: 49, column: 30, scope: !13401)
!13407 = !DILocation(line: 49, column: 2, scope: !13401)
!13408 = !DILocation(line: 50, column: 1, scope: !13401)
!13409 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2110, file: !2110, line: 748, type: !2982, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !13410)
!13410 = !{!13411, !13429}
!13411 = !DILocalVariable(name: "thread_data", scope: !13412, file: !2110, line: 750, type: !13413)
!13412 = distinct !DILexicalBlock(scope: !13409, file: !2110, line: 750, column: 2)
!13413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13414, size: 32)
!13414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !245, line: 620, size: 384, elements: !13415)
!13415 = !{!13416, !13417, !13418, !13419, !13420, !13421, !13422, !13423, !13424, !13425, !13426, !13428}
!13416 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !13414, file: !245, line: 621, baseType: !2114, size: 32)
!13417 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !13414, file: !245, line: 622, baseType: !13169, size: 32, offset: 32)
!13418 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !13414, file: !245, line: 623, baseType: !32, size: 32, offset: 64)
!13419 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !13414, file: !245, line: 624, baseType: !108, size: 32, offset: 96)
!13420 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !13414, file: !245, line: 625, baseType: !113, size: 32, offset: 128)
!13421 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !13414, file: !245, line: 626, baseType: !113, size: 32, offset: 160)
!13422 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !13414, file: !245, line: 627, baseType: !113, size: 32, offset: 192)
!13423 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !13414, file: !245, line: 628, baseType: !119, size: 32, offset: 224)
!13424 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !13414, file: !245, line: 629, baseType: !118, size: 32, offset: 256)
!13425 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !13414, file: !245, line: 630, baseType: !742, size: 32, offset: 288)
!13426 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !13414, file: !245, line: 631, baseType: !13427, size: 32, offset: 320)
!13427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2982, size: 32)
!13428 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !13414, file: !245, line: 632, baseType: !278, size: 32, offset: 352)
!13429 = !DILocalVariable(name: "thread_data", scope: !13430, file: !2110, line: 781, type: !13413)
!13430 = distinct !DILexicalBlock(scope: !13409, file: !2110, line: 781, column: 2)
!13431 = !DILocation(line: 0, scope: !13412)
!13432 = !DILocation(line: 750, column: 2, scope: !13433)
!13433 = distinct !DILexicalBlock(scope: !13434, file: !2110, line: 750, column: 2)
!13434 = distinct !DILexicalBlock(scope: !13435, file: !2110, line: 750, column: 2)
!13435 = distinct !DILexicalBlock(scope: !13412, file: !2110, line: 750, column: 2)
!13436 = !DILocation(line: 750, column: 2, scope: !13437)
!13437 = distinct !DILexicalBlock(scope: !13438, file: !2110, line: 750, column: 2)
!13438 = distinct !DILexicalBlock(scope: !13433, file: !2110, line: 750, column: 2)
!13439 = !DILocation(line: 750, column: 2, scope: !13434)
!13440 = !DILocation(line: 750, column: 2, scope: !13412)
!13441 = !DILocation(line: 780, column: 2, scope: !13409)
!13442 = !DILocation(line: 0, scope: !13430)
!13443 = !DILocation(line: 781, column: 2, scope: !13444)
!13444 = distinct !DILexicalBlock(scope: !13445, file: !2110, line: 781, column: 2)
!13445 = distinct !DILexicalBlock(scope: !13446, file: !2110, line: 781, column: 2)
!13446 = distinct !DILexicalBlock(scope: !13430, file: !2110, line: 781, column: 2)
!13447 = !DILocation(line: 752, column: 17, scope: !13448)
!13448 = distinct !DILexicalBlock(scope: !13435, file: !2110, line: 750, column: 38)
!13449 = !DILocation(line: 753, column: 17, scope: !13448)
!13450 = !DILocation(line: 754, column: 17, scope: !13448)
!13451 = !DILocation(line: 755, column: 17, scope: !13448)
!13452 = !DILocation(line: 756, column: 17, scope: !13448)
!13453 = !DILocation(line: 757, column: 17, scope: !13448)
!13454 = !DILocation(line: 758, column: 17, scope: !13448)
!13455 = !DILocation(line: 759, column: 17, scope: !13448)
!13456 = !DILocation(line: 760, column: 17, scope: !13448)
!13457 = !DILocation(line: 761, column: 17, scope: !13448)
!13458 = !DILocation(line: 751, column: 3, scope: !13448)
!13459 = !DILocation(line: 763, column: 16, scope: !13448)
!13460 = !DILocation(line: 763, column: 29, scope: !13448)
!13461 = !DILocation(line: 763, column: 39, scope: !13448)
!13462 = !DILocation(line: 750, column: 2, scope: !13435)
!13463 = !DILocation(line: 750, column: 2, scope: !13438)
!13464 = distinct !{!13464, !13440, !13465}
!13465 = !DILocation(line: 764, column: 2, scope: !13412)
!13466 = !DILocation(line: 781, column: 2, scope: !13467)
!13467 = distinct !DILexicalBlock(scope: !13468, file: !2110, line: 781, column: 2)
!13468 = distinct !DILexicalBlock(scope: !13444, file: !2110, line: 781, column: 2)
!13469 = !DILocation(line: 781, column: 2, scope: !13445)
!13470 = !DILocation(line: 781, column: 2, scope: !13430)
!13471 = !DILocation(line: 787, column: 2, scope: !13409)
!13472 = !DILocation(line: 788, column: 1, scope: !13409)
!13473 = !DILocation(line: 782, column: 20, scope: !13474)
!13474 = distinct !DILexicalBlock(scope: !13475, file: !2110, line: 782, column: 7)
!13475 = distinct !DILexicalBlock(scope: !13446, file: !2110, line: 781, column: 38)
!13476 = !DILocation(line: 782, column: 31, scope: !13474)
!13477 = !DILocation(line: 782, column: 7, scope: !13475)
!13478 = !DILocation(line: 783, column: 37, scope: !13479)
!13479 = distinct !DILexicalBlock(scope: !13474, file: !2110, line: 782, column: 51)
!13480 = !DILocation(line: 784, column: 10, scope: !13479)
!13481 = !DILocation(line: 783, column: 4, scope: !13479)
!13482 = !DILocation(line: 785, column: 3, scope: !13479)
!13483 = !DILocation(line: 781, column: 2, scope: !13446)
!13484 = !DILocation(line: 781, column: 2, scope: !13468)
!13485 = distinct !{!13485, !13470, !13486}
!13486 = !DILocation(line: 786, column: 2, scope: !13430)
!13487 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3225, file: !3225, line: 403, type: !3226, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !13488)
!13488 = !{!13489}
!13489 = !DILocalVariable(name: "t", arg: 1, scope: !13487, file: !3225, line: 403, type: !120)
!13490 = !DILocation(line: 0, scope: !13487)
!13491 = !DILocalVariable(name: "t", arg: 1, scope: !13492, file: !3225, line: 102, type: !120)
!13492 = distinct !DISubprogram(name: "z_tmcvt", scope: !3225, file: !3225, line: 102, type: !3278, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !13493)
!13493 = !{!13491, !13494, !13495, !13496, !13497, !13498, !13499, !13500, !13501, !13502, !13503}
!13494 = !DILocalVariable(name: "from_hz", arg: 2, scope: !13492, file: !3225, line: 102, type: !118)
!13495 = !DILocalVariable(name: "to_hz", arg: 3, scope: !13492, file: !3225, line: 103, type: !118)
!13496 = !DILocalVariable(name: "const_hz", arg: 4, scope: !13492, file: !3225, line: 103, type: !345)
!13497 = !DILocalVariable(name: "result32", arg: 5, scope: !13492, file: !3225, line: 104, type: !345)
!13498 = !DILocalVariable(name: "round_up", arg: 6, scope: !13492, file: !3225, line: 104, type: !345)
!13499 = !DILocalVariable(name: "round_off", arg: 7, scope: !13492, file: !3225, line: 105, type: !345)
!13500 = !DILocalVariable(name: "mul_ratio", scope: !13492, file: !3225, line: 107, type: !345)
!13501 = !DILocalVariable(name: "div_ratio", scope: !13492, file: !3225, line: 109, type: !345)
!13502 = !DILocalVariable(name: "off", scope: !13492, file: !3225, line: 116, type: !120)
!13503 = !DILocalVariable(name: "rdivisor", scope: !13504, file: !3225, line: 119, type: !118)
!13504 = distinct !DILexicalBlock(scope: !13505, file: !3225, line: 118, column: 18)
!13505 = distinct !DILexicalBlock(scope: !13492, file: !3225, line: 118, column: 6)
!13506 = !DILocation(line: 0, scope: !13492, inlinedAt: !13507)
!13507 = distinct !DILocation(line: 406, column: 9, scope: !13487)
!13508 = !DILocation(line: 145, column: 13, scope: !13509, inlinedAt: !13507)
!13509 = distinct !DILexicalBlock(scope: !13510, file: !3225, line: 144, column: 10)
!13510 = distinct !DILexicalBlock(scope: !13511, file: !3225, line: 142, column: 7)
!13511 = distinct !DILexicalBlock(scope: !13512, file: !3225, line: 141, column: 24)
!13512 = distinct !DILexicalBlock(scope: !13513, file: !3225, line: 141, column: 13)
!13513 = distinct !DILexicalBlock(scope: !13492, file: !3225, line: 134, column: 6)
!13514 = !DILocation(line: 406, column: 2, scope: !13487)
!13515 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2110, file: !2110, line: 817, type: !4405, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !13516)
!13516 = !{!13517, !13518, !13519, !13520}
!13517 = !DILocalVariable(name: "entry", arg: 1, scope: !13515, file: !2110, line: 817, type: !108)
!13518 = !DILocalVariable(name: "p1", arg: 2, scope: !13515, file: !2110, line: 818, type: !113)
!13519 = !DILocalVariable(name: "p2", arg: 3, scope: !13515, file: !2110, line: 818, type: !113)
!13520 = !DILocalVariable(name: "p3", arg: 4, scope: !13515, file: !2110, line: 818, type: !113)
!13521 = !DILocation(line: 0, scope: !13515)
!13522 = !DILocation(line: 822, column: 2, scope: !13515)
!13523 = !DILocation(line: 822, column: 17, scope: !13515)
!13524 = !DILocation(line: 822, column: 30, scope: !13515)
!13525 = !DILocation(line: 823, column: 2, scope: !13515)
!13526 = !DILocation(line: 845, column: 2, scope: !13515)
!13527 = distinct !DISubprogram(name: "z_spin_lock_valid", scope: !2110, file: !2110, line: 853, type: !13528, scopeLine: 854, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !13531)
!13528 = !DISubroutineType(types: !13529)
!13529 = !{!345, !13530}
!13530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2209, size: 32)
!13531 = !{!13532, !13533}
!13532 = !DILocalVariable(name: "l", arg: 1, scope: !13527, file: !2110, line: 853, type: !13530)
!13533 = !DILocalVariable(name: "thread_cpu", scope: !13527, file: !2110, line: 855, type: !22)
!13534 = !DILocation(line: 0, scope: !13527)
!13535 = !DILocation(line: 855, column: 28, scope: !13527)
!13536 = !DILocation(line: 857, column: 17, scope: !13537)
!13537 = distinct !DILexicalBlock(scope: !13527, file: !2110, line: 857, column: 6)
!13538 = !DILocation(line: 857, column: 6, scope: !13527)
!13539 = !DILocation(line: 858, column: 19, scope: !13540)
!13540 = distinct !DILexicalBlock(scope: !13541, file: !2110, line: 858, column: 7)
!13541 = distinct !DILexicalBlock(scope: !13537, file: !2110, line: 857, column: 24)
!13542 = !DILocation(line: 858, column: 42, scope: !13540)
!13543 = !DILocation(line: 858, column: 28, scope: !13540)
!13544 = !DILocation(line: 858, column: 25, scope: !13540)
!13545 = !DILocation(line: 858, column: 7, scope: !13541)
!13546 = !DILocation(line: 862, column: 2, scope: !13527)
!13547 = !DILocation(line: 863, column: 1, scope: !13527)
!13548 = distinct !DISubprogram(name: "z_spin_unlock_valid", scope: !2110, file: !2110, line: 865, type: !13528, scopeLine: 866, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !13549)
!13549 = !{!13550}
!13550 = !DILocalVariable(name: "l", arg: 1, scope: !13548, file: !2110, line: 865, type: !13530)
!13551 = !DILocation(line: 0, scope: !13548)
!13552 = !DILocation(line: 867, column: 9, scope: !13553)
!13553 = distinct !DILexicalBlock(scope: !13548, file: !2110, line: 867, column: 6)
!13554 = !DILocation(line: 867, column: 38, scope: !13553)
!13555 = !DILocation(line: 867, column: 24, scope: !13553)
!13556 = !DILocation(line: 867, column: 54, scope: !13553)
!13557 = !DILocation(line: 867, column: 43, scope: !13553)
!13558 = !DILocation(line: 867, column: 41, scope: !13553)
!13559 = !DILocation(line: 867, column: 20, scope: !13553)
!13560 = !DILocation(line: 867, column: 6, scope: !13548)
!13561 = !DILocation(line: 870, column: 16, scope: !13548)
!13562 = !DILocation(line: 871, column: 2, scope: !13548)
!13563 = !DILocation(line: 872, column: 1, scope: !13548)
!13564 = distinct !DISubprogram(name: "z_spin_lock_set_owner", scope: !2110, file: !2110, line: 874, type: !13565, scopeLine: 875, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !13567)
!13565 = !DISubroutineType(types: !13566)
!13566 = !{null, !13530}
!13567 = !{!13568}
!13568 = !DILocalVariable(name: "l", arg: 1, scope: !13564, file: !2110, line: 874, type: !13530)
!13569 = !DILocation(line: 0, scope: !13564)
!13570 = !DILocation(line: 876, column: 32, scope: !13564)
!13571 = !DILocation(line: 876, column: 18, scope: !13564)
!13572 = !DILocation(line: 876, column: 48, scope: !13564)
!13573 = !DILocation(line: 876, column: 37, scope: !13564)
!13574 = !DILocation(line: 876, column: 35, scope: !13564)
!13575 = !DILocation(line: 876, column: 5, scope: !13564)
!13576 = !DILocation(line: 876, column: 16, scope: !13564)
!13577 = !DILocation(line: 877, column: 1, scope: !13564)
!13578 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2110, file: !2110, line: 888, type: !13579, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !13581)
!13579 = !DISubroutineType(types: !13580)
!13580 = !{!119, !2114}
!13581 = !{!13582}
!13582 = !DILocalVariable(name: "thread", arg: 1, scope: !13578, file: !2110, line: 888, type: !2114)
!13583 = !DILocation(line: 0, scope: !13578)
!13584 = !DILocation(line: 893, column: 2, scope: !13578)
!13585 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2110, file: !2110, line: 897, type: !13586, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !13588)
!13586 = !DISubroutineType(types: !13587)
!13587 = !{!119, !2114, !32}
!13588 = !{!13589, !13590}
!13589 = !DILocalVariable(name: "thread", arg: 1, scope: !13585, file: !2110, line: 897, type: !2114)
!13590 = !DILocalVariable(name: "options", arg: 2, scope: !13585, file: !2110, line: 897, type: !32)
!13591 = !DILocation(line: 0, scope: !13585)
!13592 = !DILocation(line: 902, column: 2, scope: !13585)
!13593 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2110, file: !2110, line: 1072, type: !13594, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !13599)
!13594 = !DISubroutineType(types: !13595)
!13595 = !{!119, !2113, !13596}
!13596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13597, size: 32)
!13597 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !143, line: 234, baseType: !13598)
!13598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !143, line: 192, elements: !2048)
!13599 = !{!13600, !13601}
!13600 = !DILocalVariable(name: "thread", arg: 1, scope: !13593, file: !2110, line: 1072, type: !2113)
!13601 = !DILocalVariable(name: "stats", arg: 2, scope: !13593, file: !2110, line: 1073, type: !13596)
!13602 = !DILocation(line: 0, scope: !13593)
!13603 = !DILocation(line: 1075, column: 14, scope: !13604)
!13604 = distinct !DILexicalBlock(scope: !13593, file: !2110, line: 1075, column: 6)
!13605 = !DILocation(line: 1075, column: 23, scope: !13604)
!13606 = !DILocation(line: 1086, column: 1, scope: !13593)
!13607 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2110, file: !2110, line: 1088, type: !13608, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !13610)
!13608 = !DISubroutineType(types: !13609)
!13609 = !{!119, !13596}
!13610 = !{!13611}
!13611 = !DILocalVariable(name: "stats", arg: 1, scope: !13607, file: !2110, line: 1088, type: !13596)
!13612 = !DILocation(line: 0, scope: !13607)
!13613 = !DILocation(line: 1094, column: 12, scope: !13614)
!13614 = distinct !DILexicalBlock(scope: !13607, file: !2110, line: 1094, column: 6)
!13615 = !DILocation(line: 1120, column: 1, scope: !13607)
!13616 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !13617, file: !13617, line: 20, type: !2982, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2963, retainedNodes: !2048)
!13617 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13618 = !DILocation(line: 30, column: 2, scope: !13616)
!13619 = !DILocation(line: 31, column: 1, scope: !13616)
!13620 = distinct !DISubprogram(name: "idle", scope: !13617, file: !13617, line: 33, type: !111, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2963, retainedNodes: !13621)
!13621 = !{!13622, !13623, !13624}
!13622 = !DILocalVariable(name: "unused1", arg: 1, scope: !13620, file: !13617, line: 33, type: !113)
!13623 = !DILocalVariable(name: "unused2", arg: 2, scope: !13620, file: !13617, line: 33, type: !113)
!13624 = !DILocalVariable(name: "unused3", arg: 3, scope: !13620, file: !13617, line: 33, type: !113)
!13625 = !DILocation(line: 0, scope: !13620)
!13626 = !DILocation(line: 39, column: 2, scope: !13627)
!13627 = distinct !DILexicalBlock(scope: !13628, file: !13617, line: 39, column: 2)
!13628 = distinct !DILexicalBlock(scope: !13620, file: !13617, line: 39, column: 2)
!13629 = !DILocation(line: 39, column: 2, scope: !13628)
!13630 = !DILocation(line: 39, column: 2, scope: !13631)
!13631 = distinct !DILexicalBlock(scope: !13627, file: !13617, line: 39, column: 2)
!13632 = !DILocation(line: 55, column: 2, scope: !13633, inlinedAt: !13637)
!13633 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6013, file: !6013, line: 42, type: !6014, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2963, retainedNodes: !13634)
!13634 = !{!13635, !13636}
!13635 = !DILocalVariable(name: "key", scope: !13633, file: !6013, line: 44, type: !32)
!13636 = !DILocalVariable(name: "tmp", scope: !13633, file: !6013, line: 53, type: !32)
!13637 = distinct !DILocation(line: 62, column: 10, scope: !13638)
!13638 = distinct !DILexicalBlock(scope: !13620, file: !13617, line: 41, column: 15)
!13639 = !{i64 2040982}
!13640 = !DILocation(line: 0, scope: !13633, inlinedAt: !13637)
!13641 = !DILocation(line: 86, column: 3, scope: !13638)
!13642 = !DILocation(line: 41, column: 2, scope: !13620)
!13643 = distinct !{!13643, !13642, !13644}
!13644 = !DILocation(line: 105, column: 2, scope: !13620)
!13645 = distinct !DISubprogram(name: "k_cpu_idle", scope: !245, file: !245, line: 5627, type: !2982, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2963, retainedNodes: !2048)
!13646 = !DILocation(line: 5629, column: 2, scope: !13645)
!13647 = !DILocation(line: 5630, column: 1, scope: !13645)
!13648 = !DISubprogram(name: "arch_cpu_idle", scope: !109, file: !109, line: 167, type: !2982, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2048)
!13649 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2348, file: !2348, line: 93, type: !13650, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !13652)
!13650 = !DISubroutineType(types: !13651)
!13651 = !{!742, !2240, !2240}
!13652 = !{!13653, !13654, !13655, !13656}
!13653 = !DILocalVariable(name: "thread_1", arg: 1, scope: !13649, file: !2348, line: 93, type: !2240)
!13654 = !DILocalVariable(name: "thread_2", arg: 2, scope: !13649, file: !2348, line: 94, type: !2240)
!13655 = !DILocalVariable(name: "b1", scope: !13649, file: !2348, line: 97, type: !742)
!13656 = !DILocalVariable(name: "b2", scope: !13649, file: !2348, line: 98, type: !742)
!13657 = !DILocation(line: 0, scope: !13649)
!13658 = !DILocation(line: 97, column: 30, scope: !13649)
!13659 = !DILocation(line: 98, column: 30, scope: !13649)
!13660 = !DILocation(line: 100, column: 9, scope: !13661)
!13661 = distinct !DILexicalBlock(scope: !13649, file: !2348, line: 100, column: 6)
!13662 = !DILocation(line: 100, column: 6, scope: !13649)
!13663 = !DILocation(line: 125, column: 1, scope: !13649)
!13664 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2348, file: !2348, line: 428, type: !13665, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !13667)
!13665 = !DISubroutineType(types: !13666)
!13666 = !{null, !2240}
!13667 = !{!13668}
!13668 = !DILocalVariable(name: "curr", arg: 1, scope: !13664, file: !2348, line: 428, type: !2240)
!13669 = !DILocation(line: 0, scope: !13664)
!13670 = !DILocation(line: 434, column: 6, scope: !13671)
!13671 = distinct !DILexicalBlock(scope: !13664, file: !2348, line: 434, column: 6)
!13672 = !DILocation(line: 434, column: 23, scope: !13671)
!13673 = !DILocation(line: 434, column: 6, scope: !13664)
!13674 = !DILocation(line: 435, column: 50, scope: !13675)
!13675 = distinct !DILexicalBlock(scope: !13671, file: !2348, line: 434, column: 29)
!13676 = !DILocation(line: 435, column: 48, scope: !13675)
!13677 = !DILocation(line: 435, column: 29, scope: !13675)
!13678 = !DILocation(line: 436, column: 24, scope: !13675)
!13679 = !DILocation(line: 436, column: 3, scope: !13675)
!13680 = !DILocation(line: 437, column: 2, scope: !13675)
!13681 = !DILocation(line: 438, column: 1, scope: !13664)
!13682 = distinct !DISubprogram(name: "slice_time", scope: !2348, file: !2348, line: 407, type: !13683, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !13685)
!13683 = !DISubroutineType(types: !13684)
!13684 = !{!119, !2240}
!13685 = !{!13686, !13687}
!13686 = !DILocalVariable(name: "curr", arg: 1, scope: !13682, file: !2348, line: 407, type: !2240)
!13687 = !DILocalVariable(name: "ret", scope: !13682, file: !2348, line: 409, type: !119)
!13688 = !DILocation(line: 0, scope: !13682)
!13689 = !DILocation(line: 409, column: 12, scope: !13682)
!13690 = !DILocation(line: 416, column: 2, scope: !13682)
!13691 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2348, file: !2348, line: 440, type: !13692, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !13694)
!13692 = !DISubroutineType(types: !13693)
!13693 = !{null, !742, !119}
!13694 = !{!13695, !13696, !13697, !13703}
!13695 = !DILocalVariable(name: "slice", arg: 1, scope: !13691, file: !2348, line: 440, type: !742)
!13696 = !DILocalVariable(name: "prio", arg: 2, scope: !13691, file: !2348, line: 440, type: !119)
!13697 = !DILocalVariable(name: "__i", scope: !13698, file: !2348, line: 442, type: !13699)
!13698 = distinct !DILexicalBlock(scope: !13691, file: !2348, line: 442, column: 2)
!13699 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !259, line: 106, baseType: !13700)
!13700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !259, line: 32, size: 32, elements: !13701)
!13701 = !{!13702}
!13702 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13700, file: !259, line: 33, baseType: !119, size: 32)
!13703 = !DILocalVariable(name: "__key", scope: !13698, file: !2348, line: 442, type: !13699)
!13704 = !DILocation(line: 0, scope: !13691)
!13705 = !DILocation(line: 0, scope: !13698)
!13706 = !DILocalVariable(name: "l", arg: 1, scope: !13707, file: !259, line: 136, type: !13710)
!13707 = distinct !DISubprogram(name: "k_spin_lock", scope: !259, file: !259, line: 136, type: !13708, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !13711)
!13708 = !DISubroutineType(types: !13709)
!13709 = !{!13699, !13710}
!13710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2335, size: 32)
!13711 = !{!13706, !13712}
!13712 = !DILocalVariable(name: "k", scope: !13707, file: !259, line: 139, type: !13699)
!13713 = !DILocation(line: 0, scope: !13707, inlinedAt: !13714)
!13714 = distinct !DILocation(line: 442, column: 2, scope: !13698)
!13715 = !DILocation(line: 55, column: 2, scope: !13716, inlinedAt: !13720)
!13716 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6013, file: !6013, line: 42, type: !6014, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !13717)
!13717 = !{!13718, !13719}
!13718 = !DILocalVariable(name: "key", scope: !13716, file: !6013, line: 44, type: !32)
!13719 = !DILocalVariable(name: "tmp", scope: !13716, file: !6013, line: 53, type: !32)
!13720 = distinct !DILocation(line: 145, column: 10, scope: !13707, inlinedAt: !13714)
!13721 = !{i64 2084953}
!13722 = !DILocation(line: 0, scope: !13716, inlinedAt: !13720)
!13723 = !DILocation(line: 148, column: 2, scope: !13724, inlinedAt: !13714)
!13724 = distinct !DILexicalBlock(scope: !13725, file: !259, line: 148, column: 2)
!13725 = distinct !DILexicalBlock(scope: !13707, file: !259, line: 148, column: 2)
!13726 = !DILocation(line: 148, column: 2, scope: !13725, inlinedAt: !13714)
!13727 = !DILocation(line: 148, column: 2, scope: !13728, inlinedAt: !13714)
!13728 = distinct !DILexicalBlock(scope: !13724, file: !259, line: 148, column: 2)
!13729 = !DILocation(line: 160, column: 2, scope: !13707, inlinedAt: !13714)
!13730 = !DILocation(line: 443, column: 29, scope: !13731)
!13731 = distinct !DILexicalBlock(scope: !13732, file: !2348, line: 442, column: 26)
!13732 = distinct !DILexicalBlock(scope: !13698, file: !2348, line: 442, column: 2)
!13733 = !DILocation(line: 444, column: 17, scope: !13731)
!13734 = !DILocation(line: 445, column: 51, scope: !13735)
!13735 = distinct !DILexicalBlock(scope: !13731, file: !2348, line: 445, column: 7)
!13736 = !DILocation(line: 445, column: 7, scope: !13731)
!13737 = !DILocation(line: 0, scope: !13731)
!13738 = !DILocation(line: 451, column: 18, scope: !13731)
!13739 = !DILocation(line: 452, column: 3, scope: !13731)
!13740 = !DILocalVariable(name: "key", arg: 2, scope: !13741, file: !259, line: 190, type: !13699)
!13741 = distinct !DISubprogram(name: "k_spin_unlock", scope: !259, file: !259, line: 189, type: !13742, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !13744)
!13742 = !DISubroutineType(types: !13743)
!13743 = !{null, !13710, !13699}
!13744 = !{!13745, !13740}
!13745 = !DILocalVariable(name: "l", arg: 1, scope: !13741, file: !259, line: 189, type: !13710)
!13746 = !DILocation(line: 0, scope: !13741, inlinedAt: !13747)
!13747 = distinct !DILocation(line: 442, column: 2, scope: !13732)
!13748 = !DILocation(line: 194, column: 2, scope: !13749, inlinedAt: !13747)
!13749 = distinct !DILexicalBlock(scope: !13750, file: !259, line: 194, column: 2)
!13750 = distinct !DILexicalBlock(scope: !13741, file: !259, line: 194, column: 2)
!13751 = !DILocation(line: 194, column: 2, scope: !13750, inlinedAt: !13747)
!13752 = !DILocation(line: 194, column: 2, scope: !13753, inlinedAt: !13747)
!13753 = distinct !DILexicalBlock(scope: !13749, file: !259, line: 194, column: 2)
!13754 = !DILocalVariable(name: "key", arg: 1, scope: !13755, file: !6013, line: 84, type: !32)
!13755 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6013, file: !6013, line: 84, type: !6024, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !13756)
!13756 = !{!13754}
!13757 = !DILocation(line: 0, scope: !13755, inlinedAt: !13758)
!13758 = distinct !DILocation(line: 215, column: 2, scope: !13741, inlinedAt: !13747)
!13759 = !DILocation(line: 95, column: 2, scope: !13755, inlinedAt: !13758)
!13760 = !{i64 2085770}
!13761 = !DILocation(line: 454, column: 1, scope: !13691)
!13762 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !3225, file: !3225, line: 389, type: !7619, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !13763)
!13763 = !{!13764}
!13764 = !DILocalVariable(name: "t", arg: 1, scope: !13762, file: !3225, line: 389, type: !118)
!13765 = !DILocation(line: 0, scope: !13762)
!13766 = !DILocalVariable(name: "t", arg: 1, scope: !13767, file: !3225, line: 102, type: !120)
!13767 = distinct !DISubprogram(name: "z_tmcvt", scope: !3225, file: !3225, line: 102, type: !3278, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !13768)
!13768 = !{!13766, !13769, !13770, !13771, !13772, !13773, !13774, !13775, !13776, !13777, !13778}
!13769 = !DILocalVariable(name: "from_hz", arg: 2, scope: !13767, file: !3225, line: 102, type: !118)
!13770 = !DILocalVariable(name: "to_hz", arg: 3, scope: !13767, file: !3225, line: 103, type: !118)
!13771 = !DILocalVariable(name: "const_hz", arg: 4, scope: !13767, file: !3225, line: 103, type: !345)
!13772 = !DILocalVariable(name: "result32", arg: 5, scope: !13767, file: !3225, line: 104, type: !345)
!13773 = !DILocalVariable(name: "round_up", arg: 6, scope: !13767, file: !3225, line: 104, type: !345)
!13774 = !DILocalVariable(name: "round_off", arg: 7, scope: !13767, file: !3225, line: 105, type: !345)
!13775 = !DILocalVariable(name: "mul_ratio", scope: !13767, file: !3225, line: 107, type: !345)
!13776 = !DILocalVariable(name: "div_ratio", scope: !13767, file: !3225, line: 109, type: !345)
!13777 = !DILocalVariable(name: "off", scope: !13767, file: !3225, line: 116, type: !120)
!13778 = !DILocalVariable(name: "rdivisor", scope: !13779, file: !3225, line: 119, type: !118)
!13779 = distinct !DILexicalBlock(scope: !13780, file: !3225, line: 118, column: 18)
!13780 = distinct !DILexicalBlock(scope: !13767, file: !3225, line: 118, column: 6)
!13781 = !DILocation(line: 0, scope: !13767, inlinedAt: !13782)
!13782 = distinct !DILocation(line: 392, column: 9, scope: !13762)
!13783 = !DILocation(line: 143, column: 25, scope: !13784, inlinedAt: !13782)
!13784 = distinct !DILexicalBlock(scope: !13785, file: !3225, line: 142, column: 17)
!13785 = distinct !DILexicalBlock(scope: !13786, file: !3225, line: 142, column: 7)
!13786 = distinct !DILexicalBlock(scope: !13787, file: !3225, line: 141, column: 24)
!13787 = distinct !DILexicalBlock(scope: !13788, file: !3225, line: 141, column: 13)
!13788 = distinct !DILexicalBlock(scope: !13767, file: !3225, line: 134, column: 6)
!13789 = !DILocation(line: 392, column: 2, scope: !13762)
!13790 = distinct !DISubprogram(name: "z_time_slice", scope: !2348, file: !2348, line: 502, type: !8418, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !13791)
!13791 = !{!13792, !13793}
!13792 = !DILocalVariable(name: "ticks", arg: 1, scope: !13790, file: !2348, line: 502, type: !119)
!13793 = !DILocalVariable(name: "key", scope: !13790, file: !2348, line: 511, type: !13699)
!13794 = !DILocation(line: 0, scope: !13790)
!13795 = !DILocation(line: 0, scope: !13707, inlinedAt: !13796)
!13796 = distinct !DILocation(line: 511, column: 25, scope: !13790)
!13797 = !DILocation(line: 55, column: 2, scope: !13716, inlinedAt: !13798)
!13798 = distinct !DILocation(line: 145, column: 10, scope: !13707, inlinedAt: !13796)
!13799 = !DILocation(line: 0, scope: !13716, inlinedAt: !13798)
!13800 = !DILocation(line: 148, column: 2, scope: !13724, inlinedAt: !13796)
!13801 = !DILocation(line: 148, column: 2, scope: !13725, inlinedAt: !13796)
!13802 = !DILocation(line: 148, column: 2, scope: !13728, inlinedAt: !13796)
!13803 = !DILocation(line: 160, column: 2, scope: !13707, inlinedAt: !13796)
!13804 = !DILocation(line: 514, column: 6, scope: !13805)
!13805 = distinct !DILexicalBlock(scope: !13790, file: !2348, line: 514, column: 6)
!13806 = !DILocation(line: 514, column: 25, scope: !13805)
!13807 = !DILocation(line: 514, column: 22, scope: !13805)
!13808 = !DILocation(line: 514, column: 6, scope: !13790)
!13809 = !DILocation(line: 515, column: 3, scope: !13810)
!13810 = distinct !DILexicalBlock(scope: !13805, file: !2348, line: 514, column: 35)
!13811 = !DILocation(line: 0, scope: !13741, inlinedAt: !13812)
!13812 = distinct !DILocation(line: 516, column: 3, scope: !13810)
!13813 = !DILocation(line: 194, column: 2, scope: !13749, inlinedAt: !13812)
!13814 = !DILocation(line: 194, column: 2, scope: !13750, inlinedAt: !13812)
!13815 = !DILocation(line: 194, column: 2, scope: !13753, inlinedAt: !13812)
!13816 = !DILocation(line: 0, scope: !13755, inlinedAt: !13817)
!13817 = distinct !DILocation(line: 215, column: 2, scope: !13741, inlinedAt: !13812)
!13818 = !DILocation(line: 95, column: 2, scope: !13755, inlinedAt: !13817)
!13819 = !DILocation(line: 517, column: 3, scope: !13810)
!13820 = !DILocation(line: 519, column: 18, scope: !13790)
!13821 = !DILocation(line: 522, column: 6, scope: !13822)
!13822 = distinct !DILexicalBlock(scope: !13790, file: !2348, line: 522, column: 6)
!13823 = !DILocation(line: 522, column: 27, scope: !13822)
!13824 = !DILocation(line: 522, column: 30, scope: !13822)
!13825 = !DILocation(line: 522, column: 6, scope: !13790)
!13826 = !DILocation(line: 523, column: 30, scope: !13827)
!13827 = distinct !DILexicalBlock(scope: !13828, file: !2348, line: 523, column: 7)
!13828 = distinct !DILexicalBlock(scope: !13822, file: !2348, line: 522, column: 51)
!13829 = !DILocation(line: 523, column: 13, scope: !13827)
!13830 = !DILocation(line: 523, column: 7, scope: !13828)
!13831 = !DILocation(line: 530, column: 10, scope: !13832)
!13832 = distinct !DILexicalBlock(scope: !13827, file: !2348, line: 523, column: 43)
!13833 = !DILocation(line: 531, column: 3, scope: !13832)
!13834 = !DILocation(line: 532, column: 30, scope: !13835)
!13835 = distinct !DILexicalBlock(scope: !13827, file: !2348, line: 531, column: 10)
!13836 = !DILocation(line: 535, column: 29, scope: !13837)
!13837 = distinct !DILexicalBlock(scope: !13822, file: !2348, line: 534, column: 9)
!13838 = !DILocation(line: 0, scope: !13741, inlinedAt: !13839)
!13839 = distinct !DILocation(line: 537, column: 2, scope: !13790)
!13840 = !DILocation(line: 194, column: 2, scope: !13749, inlinedAt: !13839)
!13841 = !DILocation(line: 194, column: 2, scope: !13750, inlinedAt: !13839)
!13842 = !DILocation(line: 194, column: 2, scope: !13753, inlinedAt: !13839)
!13843 = !DILocation(line: 0, scope: !13755, inlinedAt: !13844)
!13844 = distinct !DILocation(line: 215, column: 2, scope: !13741, inlinedAt: !13839)
!13845 = !DILocation(line: 95, column: 2, scope: !13755, inlinedAt: !13844)
!13846 = !DILocation(line: 538, column: 1, scope: !13790)
!13847 = distinct !DISubprogram(name: "sliceable", scope: !2348, file: !2348, line: 468, type: !13848, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !13850)
!13848 = !DISubroutineType(types: !13849)
!13849 = !{!345, !2240}
!13850 = !{!13851, !13852}
!13851 = !DILocalVariable(name: "thread", arg: 1, scope: !13847, file: !2348, line: 468, type: !2240)
!13852 = !DILocalVariable(name: "ret", scope: !13847, file: !2348, line: 470, type: !345)
!13853 = !DILocation(line: 0, scope: !13847)
!13854 = !DILocation(line: 470, column: 13, scope: !13847)
!13855 = !DILocation(line: 471, column: 3, scope: !13847)
!13856 = !DILocation(line: 471, column: 7, scope: !13847)
!13857 = !DILocation(line: 472, column: 3, scope: !13847)
!13858 = !DILocation(line: 472, column: 37, scope: !13847)
!13859 = !DILocation(line: 472, column: 24, scope: !13847)
!13860 = !DILocation(line: 472, column: 43, scope: !13847)
!13861 = !DILocation(line: 472, column: 7, scope: !13847)
!13862 = !DILocation(line: 473, column: 3, scope: !13847)
!13863 = !DILocation(line: 473, column: 7, scope: !13847)
!13864 = !DILocation(line: 473, column: 6, scope: !13847)
!13865 = !DILocation(line: 479, column: 2, scope: !13847)
!13866 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2348, file: !2348, line: 482, type: !13867, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !13869)
!13867 = !DISubroutineType(types: !13868)
!13868 = !{!13699, !13699}
!13869 = !{!13870, !13871}
!13870 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !13866, file: !2348, line: 482, type: !13699)
!13871 = !DILocalVariable(name: "curr", scope: !13866, file: !2348, line: 484, type: !2240)
!13872 = !DILocation(line: 0, scope: !13866)
!13873 = !DILocation(line: 484, column: 26, scope: !13866)
!13874 = !DILocation(line: 493, column: 7, scope: !13875)
!13875 = distinct !DILexicalBlock(scope: !13866, file: !2348, line: 493, column: 6)
!13876 = !DILocation(line: 493, column: 6, scope: !13866)
!13877 = !DILocation(line: 494, column: 3, scope: !13878)
!13878 = distinct !DILexicalBlock(scope: !13875, file: !2348, line: 493, column: 49)
!13879 = !DILocation(line: 495, column: 2, scope: !13878)
!13880 = !DILocation(line: 496, column: 2, scope: !13866)
!13881 = !DILocation(line: 499, column: 1, scope: !13866)
!13882 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !12869, file: !12869, line: 106, type: !13848, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !13883)
!13883 = !{!13884, !13885}
!13884 = !DILocalVariable(name: "thread", arg: 1, scope: !13882, file: !12869, line: 106, type: !2240)
!13885 = !DILocalVariable(name: "state", scope: !13882, file: !12869, line: 108, type: !185)
!13886 = !DILocation(line: 0, scope: !13882)
!13887 = !DILocation(line: 108, column: 31, scope: !13882)
!13888 = !DILocation(line: 110, column: 16, scope: !13882)
!13889 = !DILocation(line: 111, column: 41, scope: !13882)
!13890 = !DILocation(line: 110, column: 2, scope: !13882)
!13891 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2348, file: !2348, line: 393, type: !13665, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !13892)
!13892 = !{!13893}
!13893 = !DILocalVariable(name: "thread", arg: 1, scope: !13891, file: !2348, line: 393, type: !2240)
!13894 = !DILocation(line: 0, scope: !13891)
!13895 = !DILocation(line: 395, column: 6, scope: !13896)
!13896 = distinct !DILexicalBlock(scope: !13891, file: !2348, line: 395, column: 6)
!13897 = !DILocation(line: 395, column: 6, scope: !13891)
!13898 = !DILocalVariable(name: "thread", arg: 1, scope: !13899, file: !2348, line: 264, type: !2240)
!13899 = distinct !DISubprogram(name: "dequeue_thread", scope: !2348, file: !2348, line: 264, type: !13665, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !13900)
!13900 = !{!13898}
!13901 = !DILocation(line: 0, scope: !13899, inlinedAt: !13902)
!13902 = distinct !DILocation(line: 396, column: 3, scope: !13903)
!13903 = distinct !DILexicalBlock(scope: !13896, file: !2348, line: 395, column: 34)
!13904 = !DILocation(line: 266, column: 15, scope: !13899, inlinedAt: !13902)
!13905 = !DILocation(line: 266, column: 28, scope: !13899, inlinedAt: !13902)
!13906 = !DILocalVariable(name: "thread", arg: 1, scope: !13907, file: !2348, line: 232, type: !2240)
!13907 = distinct !DISubprogram(name: "runq_remove", scope: !2348, file: !2348, line: 232, type: !13665, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !13908)
!13908 = !{!13906}
!13909 = !DILocation(line: 0, scope: !13907, inlinedAt: !13910)
!13910 = distinct !DILocation(line: 268, column: 3, scope: !13911, inlinedAt: !13902)
!13911 = distinct !DILexicalBlock(scope: !13912, file: !2348, line: 267, column: 35)
!13912 = distinct !DILexicalBlock(scope: !13899, file: !2348, line: 267, column: 6)
!13913 = !DILocation(line: 234, column: 2, scope: !13907, inlinedAt: !13910)
!13914 = !DILocation(line: 397, column: 2, scope: !13903)
!13915 = !DILocalVariable(name: "thread", arg: 1, scope: !13916, file: !2348, line: 250, type: !2240)
!13916 = distinct !DISubprogram(name: "queue_thread", scope: !2348, file: !2348, line: 250, type: !13665, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !13917)
!13917 = !{!13915}
!13918 = !DILocation(line: 0, scope: !13916, inlinedAt: !13919)
!13919 = distinct !DILocation(line: 398, column: 2, scope: !13891)
!13920 = !DILocation(line: 252, column: 15, scope: !13916, inlinedAt: !13919)
!13921 = !DILocation(line: 252, column: 28, scope: !13916, inlinedAt: !13919)
!13922 = !DILocalVariable(name: "thread", arg: 1, scope: !13923, file: !2348, line: 227, type: !2240)
!13923 = distinct !DISubprogram(name: "runq_add", scope: !2348, file: !2348, line: 227, type: !13665, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !13924)
!13924 = !{!13922}
!13925 = !DILocation(line: 0, scope: !13923, inlinedAt: !13926)
!13926 = distinct !DILocation(line: 254, column: 3, scope: !13927, inlinedAt: !13919)
!13927 = distinct !DILexicalBlock(scope: !13928, file: !2348, line: 253, column: 35)
!13928 = distinct !DILexicalBlock(scope: !13916, file: !2348, line: 253, column: 6)
!13929 = !DILocalVariable(name: "pq", arg: 1, scope: !13930, file: !2348, line: 181, type: !13933)
!13930 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2348, file: !2348, line: 181, type: !13931, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !13934)
!13931 = !DISubroutineType(types: !13932)
!13932 = !{null, !13933, !2240}
!13933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2276, size: 32)
!13934 = !{!13929, !13935, !13936}
!13935 = !DILocalVariable(name: "thread", arg: 2, scope: !13930, file: !2348, line: 182, type: !2240)
!13936 = !DILocalVariable(name: "t", scope: !13930, file: !2348, line: 184, type: !2240)
!13937 = !DILocation(line: 0, scope: !13930, inlinedAt: !13938)
!13938 = distinct !DILocation(line: 229, column: 2, scope: !13923, inlinedAt: !13926)
!13939 = !DILocation(line: 186, column: 2, scope: !13940, inlinedAt: !13938)
!13940 = distinct !DILexicalBlock(scope: !13941, file: !2348, line: 186, column: 2)
!13941 = distinct !DILexicalBlock(scope: !13930, file: !2348, line: 186, column: 2)
!13942 = !DILocation(line: 186, column: 2, scope: !13941, inlinedAt: !13938)
!13943 = !DILocation(line: 186, column: 2, scope: !13944, inlinedAt: !13938)
!13944 = distinct !DILexicalBlock(scope: !13940, file: !2348, line: 186, column: 2)
!13945 = !DILocation(line: 188, column: 2, scope: !13946, inlinedAt: !13938)
!13946 = distinct !DILexicalBlock(scope: !13930, file: !2348, line: 188, column: 2)
!13947 = !DILocation(line: 188, column: 2, scope: !13948, inlinedAt: !13938)
!13948 = distinct !DILexicalBlock(scope: !13946, file: !2348, line: 188, column: 2)
!13949 = !DILocation(line: 0, scope: !13946, inlinedAt: !13938)
!13950 = !DILocation(line: 189, column: 7, scope: !13951, inlinedAt: !13938)
!13951 = distinct !DILexicalBlock(scope: !13952, file: !2348, line: 189, column: 7)
!13952 = distinct !DILexicalBlock(scope: !13948, file: !2348, line: 188, column: 56)
!13953 = !DILocation(line: 189, column: 35, scope: !13951, inlinedAt: !13938)
!13954 = !DILocation(line: 189, column: 7, scope: !13952, inlinedAt: !13938)
!13955 = !DILocation(line: 191, column: 21, scope: !13956, inlinedAt: !13938)
!13956 = distinct !DILexicalBlock(scope: !13951, file: !2348, line: 189, column: 40)
!13957 = !DILocation(line: 190, column: 4, scope: !13956, inlinedAt: !13938)
!13958 = !DILocation(line: 192, column: 4, scope: !13956, inlinedAt: !13938)
!13959 = distinct !{!13959, !13945, !13960}
!13960 = !DILocation(line: 194, column: 2, scope: !13946, inlinedAt: !13938)
!13961 = !DILocation(line: 196, column: 37, scope: !13930, inlinedAt: !13938)
!13962 = !DILocation(line: 196, column: 2, scope: !13930, inlinedAt: !13938)
!13963 = !DILocation(line: 197, column: 1, scope: !13930, inlinedAt: !13938)
!13964 = !DILocation(line: 399, column: 25, scope: !13891)
!13965 = !DILocation(line: 399, column: 22, scope: !13891)
!13966 = !DILocation(line: 399, column: 2, scope: !13891)
!13967 = !DILocation(line: 400, column: 1, scope: !13891)
!13968 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !12869, file: !12869, line: 136, type: !13848, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !13969)
!13969 = !{!13970}
!13970 = !DILocalVariable(name: "thread", arg: 1, scope: !13968, file: !12869, line: 136, type: !2240)
!13971 = !DILocation(line: 0, scope: !13968)
!13972 = !DILocation(line: 138, column: 9, scope: !13968)
!13973 = !DILocation(line: 138, column: 2, scope: !13968)
!13974 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2348, file: !2348, line: 1137, type: !13931, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !13975)
!13975 = !{!13976, !13977}
!13976 = !DILocalVariable(name: "pq", arg: 1, scope: !13974, file: !2348, line: 1137, type: !13933)
!13977 = !DILocalVariable(name: "thread", arg: 2, scope: !13974, file: !2348, line: 1137, type: !2240)
!13978 = !DILocation(line: 0, scope: !13974)
!13979 = !DILocation(line: 1139, column: 2, scope: !13980)
!13980 = distinct !DILexicalBlock(scope: !13981, file: !2348, line: 1139, column: 2)
!13981 = distinct !DILexicalBlock(scope: !13974, file: !2348, line: 1139, column: 2)
!13982 = !DILocation(line: 1139, column: 2, scope: !13981)
!13983 = !DILocation(line: 1139, column: 2, scope: !13984)
!13984 = distinct !DILexicalBlock(scope: !13980, file: !2348, line: 1139, column: 2)
!13985 = !DILocation(line: 1141, column: 33, scope: !13974)
!13986 = !DILocation(line: 1141, column: 2, scope: !13974)
!13987 = !DILocation(line: 1142, column: 1, scope: !13974)
!13988 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !12869, file: !12869, line: 83, type: !13848, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !13989)
!13989 = !{!13990}
!13990 = !DILocalVariable(name: "thread", arg: 1, scope: !13988, file: !12869, line: 83, type: !2240)
!13991 = !DILocation(line: 0, scope: !13988)
!13992 = !DILocation(line: 89, column: 16, scope: !13988)
!13993 = !DILocation(line: 89, column: 2, scope: !13988)
!13994 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !153, file: !153, line: 294, type: !13995, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !13997)
!13995 = !DISubroutineType(types: !13996)
!13996 = !{!2344, !13933}
!13997 = !{!13998}
!13998 = !DILocalVariable(name: "list", arg: 1, scope: !13994, file: !153, line: 294, type: !13933)
!13999 = !DILocation(line: 0, scope: !13994)
!14000 = !DILocation(line: 296, column: 9, scope: !13994)
!14001 = !DILocation(line: 296, column: 49, scope: !13994)
!14002 = !DILocation(line: 296, column: 2, scope: !13994)
!14003 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !153, file: !153, line: 443, type: !14004, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !14006)
!14004 = !DISubroutineType(types: !14005)
!14005 = !{null, !2344, !2344}
!14006 = !{!14007, !14008, !14009}
!14007 = !DILocalVariable(name: "successor", arg: 1, scope: !14003, file: !153, line: 443, type: !2344)
!14008 = !DILocalVariable(name: "node", arg: 2, scope: !14003, file: !153, line: 443, type: !2344)
!14009 = !DILocalVariable(name: "prev", scope: !14003, file: !153, line: 445, type: !14010)
!14010 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2344)
!14011 = !DILocation(line: 0, scope: !14003)
!14012 = !DILocation(line: 445, column: 39, scope: !14003)
!14013 = !DILocation(line: 447, column: 8, scope: !14003)
!14014 = !DILocation(line: 447, column: 13, scope: !14003)
!14015 = !DILocation(line: 448, column: 8, scope: !14003)
!14016 = !DILocation(line: 448, column: 13, scope: !14003)
!14017 = !DILocation(line: 449, column: 8, scope: !14003)
!14018 = !DILocation(line: 449, column: 13, scope: !14003)
!14019 = !DILocation(line: 450, column: 18, scope: !14003)
!14020 = !DILocation(line: 451, column: 1, scope: !14003)
!14021 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !153, file: !153, line: 341, type: !14022, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !14024)
!14022 = !DISubroutineType(types: !14023)
!14023 = !{!2344, !13933, !2344}
!14024 = !{!14025, !14026}
!14025 = !DILocalVariable(name: "list", arg: 1, scope: !14021, file: !153, line: 341, type: !13933)
!14026 = !DILocalVariable(name: "node", arg: 2, scope: !14021, file: !153, line: 342, type: !2344)
!14027 = !DILocation(line: 0, scope: !14021)
!14028 = !DILocation(line: 344, column: 15, scope: !14021)
!14029 = !DILocation(line: 344, column: 9, scope: !14021)
!14030 = !DILocation(line: 344, column: 26, scope: !14021)
!14031 = !DILocation(line: 344, column: 2, scope: !14021)
!14032 = distinct !DISubprogram(name: "sys_dlist_append", scope: !153, file: !153, line: 404, type: !14033, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !14035)
!14033 = !DISubroutineType(types: !14034)
!14034 = !{null, !13933, !2344}
!14035 = !{!14036, !14037, !14038}
!14036 = !DILocalVariable(name: "list", arg: 1, scope: !14032, file: !153, line: 404, type: !13933)
!14037 = !DILocalVariable(name: "node", arg: 2, scope: !14032, file: !153, line: 404, type: !2344)
!14038 = !DILocalVariable(name: "tail", scope: !14032, file: !153, line: 406, type: !14010)
!14039 = !DILocation(line: 0, scope: !14032)
!14040 = !DILocation(line: 406, column: 34, scope: !14032)
!14041 = !DILocation(line: 408, column: 8, scope: !14032)
!14042 = !DILocation(line: 408, column: 13, scope: !14032)
!14043 = !DILocation(line: 409, column: 8, scope: !14032)
!14044 = !DILocation(line: 409, column: 13, scope: !14032)
!14045 = !DILocation(line: 411, column: 8, scope: !14032)
!14046 = !DILocation(line: 411, column: 13, scope: !14032)
!14047 = !DILocation(line: 412, column: 13, scope: !14032)
!14048 = !DILocation(line: 413, column: 1, scope: !14032)
!14049 = distinct !DISubprogram(name: "update_cache", scope: !2348, file: !2348, line: 559, type: !8418, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !14050)
!14050 = !{!14051, !14052}
!14051 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !14049, file: !2348, line: 559, type: !119)
!14052 = !DILocalVariable(name: "thread", scope: !14049, file: !2348, line: 562, type: !2240)
!14053 = !DILocation(line: 0, scope: !14049)
!14054 = !DILocation(line: 239, column: 9, scope: !14055, inlinedAt: !14058)
!14055 = distinct !DISubprogram(name: "runq_best", scope: !2348, file: !2348, line: 237, type: !14056, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !2048)
!14056 = !DISubroutineType(types: !14057)
!14057 = !{!2240}
!14058 = distinct !DILocation(line: 314, column: 28, scope: !14059, inlinedAt: !14062)
!14059 = distinct !DISubprogram(name: "next_up", scope: !2348, file: !2348, line: 312, type: !14056, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !14060)
!14060 = !{!14061}
!14061 = !DILocalVariable(name: "thread", scope: !14059, file: !2348, line: 314, type: !2240)
!14062 = distinct !DILocation(line: 562, column: 28, scope: !14049)
!14063 = !DILocation(line: 0, scope: !14059, inlinedAt: !14062)
!14064 = !DILocation(line: 340, column: 17, scope: !14059, inlinedAt: !14062)
!14065 = !DILocation(line: 340, column: 9, scope: !14059, inlinedAt: !14062)
!14066 = !DILocalVariable(name: "thread", arg: 1, scope: !14067, file: !2348, line: 127, type: !2240)
!14067 = distinct !DISubprogram(name: "should_preempt", scope: !2348, file: !2348, line: 127, type: !14068, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !14070)
!14068 = !DISubroutineType(types: !14069)
!14069 = !{!345, !2240, !119}
!14070 = !{!14066, !14071}
!14071 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !14067, file: !2348, line: 128, type: !119)
!14072 = !DILocation(line: 0, scope: !14067, inlinedAt: !14073)
!14073 = distinct !DILocation(line: 564, column: 6, scope: !14074)
!14074 = distinct !DILexicalBlock(scope: !14049, file: !2348, line: 564, column: 6)
!14075 = !DILocation(line: 133, column: 17, scope: !14076, inlinedAt: !14073)
!14076 = distinct !DILexicalBlock(scope: !14067, file: !2348, line: 133, column: 6)
!14077 = !DILocation(line: 0, scope: !14074)
!14078 = !DILocation(line: 133, column: 6, scope: !14067, inlinedAt: !14073)
!14079 = !DILocation(line: 137, column: 2, scope: !14080, inlinedAt: !14073)
!14080 = distinct !DILexicalBlock(scope: !14081, file: !2348, line: 137, column: 2)
!14081 = distinct !DILexicalBlock(scope: !14067, file: !2348, line: 137, column: 2)
!14082 = !DILocation(line: 137, column: 2, scope: !14081, inlinedAt: !14073)
!14083 = !DILocation(line: 137, column: 2, scope: !14084, inlinedAt: !14073)
!14084 = distinct !DILexicalBlock(scope: !14080, file: !2348, line: 137, column: 2)
!14085 = !DILocation(line: 140, column: 6, scope: !14086, inlinedAt: !14073)
!14086 = distinct !DILexicalBlock(scope: !14067, file: !2348, line: 140, column: 6)
!14087 = !DILocation(line: 140, column: 6, scope: !14067, inlinedAt: !14073)
!14088 = !DILocation(line: 150, column: 9, scope: !14089, inlinedAt: !14073)
!14089 = distinct !DILexicalBlock(scope: !14067, file: !2348, line: 149, column: 6)
!14090 = !DILocation(line: 149, column: 6, scope: !14067, inlinedAt: !14073)
!14091 = !DILocation(line: 157, column: 6, scope: !14092, inlinedAt: !14073)
!14092 = distinct !DILexicalBlock(scope: !14067, file: !2348, line: 157, column: 6)
!14093 = !DILocation(line: 564, column: 6, scope: !14049)
!14094 = !DILocation(line: 566, column: 14, scope: !14095)
!14095 = distinct !DILexicalBlock(scope: !14096, file: !2348, line: 566, column: 7)
!14096 = distinct !DILexicalBlock(scope: !14074, file: !2348, line: 564, column: 42)
!14097 = !DILocation(line: 566, column: 7, scope: !14096)
!14098 = !DILocation(line: 567, column: 4, scope: !14099)
!14099 = distinct !DILexicalBlock(scope: !14095, file: !2348, line: 566, column: 27)
!14100 = !DILocation(line: 568, column: 3, scope: !14099)
!14101 = !DILocation(line: 585, column: 1, scope: !14049)
!14102 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2348, file: !2348, line: 1144, type: !14103, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !14105)
!14103 = !DISubroutineType(types: !14104)
!14104 = !{!2240, !13933}
!14105 = !{!14106, !14107, !14108}
!14106 = !DILocalVariable(name: "pq", arg: 1, scope: !14102, file: !2348, line: 1144, type: !13933)
!14107 = !DILocalVariable(name: "thread", scope: !14102, file: !2348, line: 1146, type: !2240)
!14108 = !DILocalVariable(name: "n", scope: !14102, file: !2348, line: 1147, type: !2344)
!14109 = !DILocation(line: 0, scope: !14102)
!14110 = !DILocation(line: 1147, column: 19, scope: !14102)
!14111 = !DILocation(line: 1152, column: 2, scope: !14102)
!14112 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !12869, file: !12869, line: 115, type: !13848, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !14113)
!14113 = !{!14114}
!14114 = !DILocalVariable(name: "thread", arg: 1, scope: !14112, file: !12869, line: 115, type: !2240)
!14115 = !DILocation(line: 0, scope: !14112)
!14116 = !DILocation(line: 117, column: 46, scope: !14112)
!14117 = !DILocation(line: 117, column: 10, scope: !14112)
!14118 = !DILocation(line: 117, column: 9, scope: !14112)
!14119 = !DILocation(line: 117, column: 2, scope: !14112)
!14120 = distinct !DISubprogram(name: "is_preempt", scope: !2348, file: !2348, line: 62, type: !13683, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !14121)
!14121 = !{!14122}
!14122 = !DILocalVariable(name: "thread", arg: 1, scope: !14120, file: !2348, line: 62, type: !2240)
!14123 = !DILocation(line: 0, scope: !14120)
!14124 = !DILocation(line: 65, column: 22, scope: !14120)
!14125 = !DILocation(line: 65, column: 30, scope: !14120)
!14126 = !DILocation(line: 65, column: 2, scope: !14120)
!14127 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !13298, file: !13298, line: 35, type: !14128, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !14132)
!14128 = !DISubroutineType(types: !14129)
!14129 = !{!345, !14130}
!14130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14131, size: 32)
!14131 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2291)
!14132 = !{!14133}
!14133 = !DILocalVariable(name: "to", arg: 1, scope: !14127, file: !13298, line: 35, type: !14130)
!14134 = !DILocation(line: 0, scope: !14127)
!14135 = !DILocation(line: 37, column: 35, scope: !14127)
!14136 = !DILocation(line: 37, column: 10, scope: !14127)
!14137 = !DILocation(line: 37, column: 9, scope: !14127)
!14138 = !DILocation(line: 37, column: 2, scope: !14127)
!14139 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !153, file: !153, line: 225, type: !14140, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !14144)
!14140 = !DISubroutineType(types: !14141)
!14141 = !{!345, !14142}
!14142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14143, size: 32)
!14143 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2250)
!14144 = !{!14145}
!14145 = !DILocalVariable(name: "node", arg: 1, scope: !14139, file: !153, line: 225, type: !14142)
!14146 = !DILocation(line: 0, scope: !14139)
!14147 = !DILocation(line: 227, column: 15, scope: !14139)
!14148 = !DILocation(line: 227, column: 20, scope: !14139)
!14149 = !DILocation(line: 227, column: 2, scope: !14139)
!14150 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !153, file: !153, line: 325, type: !14022, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !14151)
!14151 = !{!14152, !14153}
!14152 = !DILocalVariable(name: "list", arg: 1, scope: !14150, file: !153, line: 325, type: !13933)
!14153 = !DILocalVariable(name: "node", arg: 2, scope: !14150, file: !153, line: 326, type: !2344)
!14154 = !DILocation(line: 0, scope: !14150)
!14155 = !DILocation(line: 328, column: 24, scope: !14150)
!14156 = !DILocation(line: 328, column: 15, scope: !14150)
!14157 = !DILocation(line: 328, column: 9, scope: !14150)
!14158 = !DILocation(line: 328, column: 45, scope: !14150)
!14159 = !DILocation(line: 328, column: 2, scope: !14150)
!14160 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !153, file: !153, line: 266, type: !14161, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !14163)
!14161 = !DISubroutineType(types: !14162)
!14162 = !{!345, !13933}
!14163 = !{!14164}
!14164 = !DILocalVariable(name: "list", arg: 1, scope: !14160, file: !153, line: 266, type: !13933)
!14165 = !DILocation(line: 0, scope: !14160)
!14166 = !DILocation(line: 268, column: 15, scope: !14160)
!14167 = !DILocation(line: 268, column: 20, scope: !14160)
!14168 = !DILocation(line: 268, column: 2, scope: !14160)
!14169 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !153, file: !153, line: 496, type: !14170, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !14172)
!14170 = !DISubroutineType(types: !14171)
!14171 = !{null, !2344}
!14172 = !{!14173, !14174, !14175}
!14173 = !DILocalVariable(name: "node", arg: 1, scope: !14169, file: !153, line: 496, type: !2344)
!14174 = !DILocalVariable(name: "prev", scope: !14169, file: !153, line: 498, type: !14010)
!14175 = !DILocalVariable(name: "next", scope: !14169, file: !153, line: 499, type: !14010)
!14176 = !DILocation(line: 0, scope: !14169)
!14177 = !DILocation(line: 498, column: 34, scope: !14169)
!14178 = !DILocation(line: 499, column: 34, scope: !14169)
!14179 = !DILocation(line: 501, column: 8, scope: !14169)
!14180 = !DILocation(line: 501, column: 13, scope: !14169)
!14181 = !DILocation(line: 502, column: 8, scope: !14169)
!14182 = !DILocation(line: 502, column: 13, scope: !14169)
!14183 = !DILocation(line: 503, column: 2, scope: !14169)
!14184 = !DILocation(line: 504, column: 1, scope: !14169)
!14185 = distinct !DISubprogram(name: "sys_dnode_init", scope: !153, file: !153, line: 211, type: !14170, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !14186)
!14186 = !{!14187}
!14187 = !DILocalVariable(name: "node", arg: 1, scope: !14185, file: !153, line: 211, type: !2344)
!14188 = !DILocation(line: 0, scope: !14185)
!14189 = !DILocation(line: 213, column: 8, scope: !14185)
!14190 = !DILocation(line: 213, column: 13, scope: !14185)
!14191 = !DILocation(line: 214, column: 8, scope: !14185)
!14192 = !DILocation(line: 214, column: 13, scope: !14185)
!14193 = !DILocation(line: 215, column: 1, scope: !14185)
!14194 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !12869, file: !12869, line: 131, type: !14195, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !14197)
!14195 = !DISubroutineType(types: !14196)
!14196 = !{!345, !2240, !118}
!14197 = !{!14198, !14199}
!14198 = !DILocalVariable(name: "thread", arg: 1, scope: !14194, file: !12869, line: 131, type: !2240)
!14199 = !DILocalVariable(name: "state", arg: 2, scope: !14194, file: !12869, line: 131, type: !118)
!14200 = !DILocation(line: 0, scope: !14194)
!14201 = !DILocation(line: 133, column: 23, scope: !14194)
!14202 = !DILocation(line: 133, column: 10, scope: !14194)
!14203 = !DILocation(line: 133, column: 36, scope: !14194)
!14204 = !DILocation(line: 133, column: 45, scope: !14194)
!14205 = !DILocation(line: 133, column: 2, scope: !14194)
!14206 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !12869, file: !12869, line: 211, type: !14207, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !14209)
!14207 = !DISubroutineType(types: !14208)
!14208 = !{!345, !119, !119}
!14209 = !{!14210, !14211}
!14210 = !DILocalVariable(name: "prio", arg: 1, scope: !14206, file: !12869, line: 211, type: !119)
!14211 = !DILocalVariable(name: "test_prio", arg: 2, scope: !14206, file: !12869, line: 211, type: !119)
!14212 = !DILocation(line: 0, scope: !14206)
!14213 = !DILocation(line: 213, column: 9, scope: !14206)
!14214 = !DILocation(line: 213, column: 2, scope: !14206)
!14215 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !12869, file: !12869, line: 206, type: !14207, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !14216)
!14216 = !{!14217, !14218}
!14217 = !DILocalVariable(name: "prio1", arg: 1, scope: !14215, file: !12869, line: 206, type: !119)
!14218 = !DILocalVariable(name: "prio2", arg: 2, scope: !14215, file: !12869, line: 206, type: !119)
!14219 = !DILocation(line: 0, scope: !14215)
!14220 = !DILocation(line: 208, column: 15, scope: !14215)
!14221 = !DILocation(line: 208, column: 2, scope: !14215)
!14222 = distinct !DISubprogram(name: "z_ready_thread", scope: !2348, file: !2348, line: 635, type: !13665, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !14223)
!14223 = !{!14224, !14225, !14227}
!14224 = !DILocalVariable(name: "thread", arg: 1, scope: !14222, file: !2348, line: 635, type: !2240)
!14225 = !DILocalVariable(name: "__i", scope: !14226, file: !2348, line: 637, type: !13699)
!14226 = distinct !DILexicalBlock(scope: !14222, file: !2348, line: 637, column: 2)
!14227 = !DILocalVariable(name: "__key", scope: !14226, file: !2348, line: 637, type: !13699)
!14228 = !DILocation(line: 0, scope: !14222)
!14229 = !DILocation(line: 0, scope: !14226)
!14230 = !DILocation(line: 0, scope: !13707, inlinedAt: !14231)
!14231 = distinct !DILocation(line: 637, column: 2, scope: !14226)
!14232 = !DILocation(line: 55, column: 2, scope: !13716, inlinedAt: !14233)
!14233 = distinct !DILocation(line: 145, column: 10, scope: !13707, inlinedAt: !14231)
!14234 = !DILocation(line: 0, scope: !13716, inlinedAt: !14233)
!14235 = !DILocation(line: 148, column: 2, scope: !13724, inlinedAt: !14231)
!14236 = !DILocation(line: 148, column: 2, scope: !13725, inlinedAt: !14231)
!14237 = !DILocation(line: 148, column: 2, scope: !13728, inlinedAt: !14231)
!14238 = !DILocation(line: 160, column: 2, scope: !13707, inlinedAt: !14231)
!14239 = !DILocation(line: 639, column: 4, scope: !14240)
!14240 = distinct !DILexicalBlock(scope: !14241, file: !2348, line: 638, column: 41)
!14241 = distinct !DILexicalBlock(scope: !14242, file: !2348, line: 638, column: 7)
!14242 = distinct !DILexicalBlock(scope: !14243, file: !2348, line: 637, column: 26)
!14243 = distinct !DILexicalBlock(scope: !14226, file: !2348, line: 637, column: 2)
!14244 = !DILocation(line: 0, scope: !13741, inlinedAt: !14245)
!14245 = distinct !DILocation(line: 637, column: 2, scope: !14243)
!14246 = !DILocation(line: 194, column: 2, scope: !13749, inlinedAt: !14245)
!14247 = !DILocation(line: 194, column: 2, scope: !13750, inlinedAt: !14245)
!14248 = !DILocation(line: 194, column: 2, scope: !13753, inlinedAt: !14245)
!14249 = !DILocation(line: 0, scope: !13755, inlinedAt: !14250)
!14250 = distinct !DILocation(line: 215, column: 2, scope: !13741, inlinedAt: !14245)
!14251 = !DILocation(line: 95, column: 2, scope: !13755, inlinedAt: !14250)
!14252 = !DILocation(line: 642, column: 1, scope: !14222)
!14253 = distinct !DISubprogram(name: "ready_thread", scope: !2348, file: !2348, line: 617, type: !13665, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !14254)
!14254 = !{!14255}
!14255 = !DILocalVariable(name: "thread", arg: 1, scope: !14253, file: !2348, line: 617, type: !2240)
!14256 = !DILocation(line: 0, scope: !14253)
!14257 = !DILocation(line: 626, column: 7, scope: !14258)
!14258 = distinct !DILexicalBlock(scope: !14253, file: !2348, line: 626, column: 6)
!14259 = !DILocation(line: 626, column: 34, scope: !14258)
!14260 = !DILocation(line: 626, column: 37, scope: !14258)
!14261 = !DILocation(line: 626, column: 6, scope: !14253)
!14262 = !DILocation(line: 0, scope: !13916, inlinedAt: !14263)
!14263 = distinct !DILocation(line: 629, column: 3, scope: !14264)
!14264 = distinct !DILexicalBlock(scope: !14258, file: !2348, line: 626, column: 64)
!14265 = !DILocation(line: 252, column: 15, scope: !13916, inlinedAt: !14263)
!14266 = !DILocation(line: 252, column: 28, scope: !13916, inlinedAt: !14263)
!14267 = !DILocation(line: 0, scope: !13923, inlinedAt: !14268)
!14268 = distinct !DILocation(line: 254, column: 3, scope: !13927, inlinedAt: !14263)
!14269 = !DILocation(line: 0, scope: !13930, inlinedAt: !14270)
!14270 = distinct !DILocation(line: 229, column: 2, scope: !13923, inlinedAt: !14268)
!14271 = !DILocation(line: 186, column: 2, scope: !13940, inlinedAt: !14270)
!14272 = !DILocation(line: 186, column: 2, scope: !13941, inlinedAt: !14270)
!14273 = !DILocation(line: 186, column: 2, scope: !13944, inlinedAt: !14270)
!14274 = !DILocation(line: 188, column: 2, scope: !13946, inlinedAt: !14270)
!14275 = !DILocation(line: 188, column: 2, scope: !13948, inlinedAt: !14270)
!14276 = !DILocation(line: 0, scope: !13946, inlinedAt: !14270)
!14277 = !DILocation(line: 189, column: 7, scope: !13951, inlinedAt: !14270)
!14278 = !DILocation(line: 189, column: 35, scope: !13951, inlinedAt: !14270)
!14279 = !DILocation(line: 189, column: 7, scope: !13952, inlinedAt: !14270)
!14280 = !DILocation(line: 191, column: 21, scope: !13956, inlinedAt: !14270)
!14281 = !DILocation(line: 190, column: 4, scope: !13956, inlinedAt: !14270)
!14282 = !DILocation(line: 192, column: 4, scope: !13956, inlinedAt: !14270)
!14283 = distinct !{!14283, !14274, !14284}
!14284 = !DILocation(line: 194, column: 2, scope: !13946, inlinedAt: !14270)
!14285 = !DILocation(line: 196, column: 37, scope: !13930, inlinedAt: !14270)
!14286 = !DILocation(line: 196, column: 2, scope: !13930, inlinedAt: !14270)
!14287 = !DILocation(line: 197, column: 1, scope: !13930, inlinedAt: !14270)
!14288 = !DILocation(line: 630, column: 3, scope: !14264)
!14289 = !DILocation(line: 632, column: 2, scope: !14264)
!14290 = !DILocation(line: 633, column: 1, scope: !14253)
!14291 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !12869, file: !12869, line: 120, type: !13848, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !14292)
!14292 = !{!14293}
!14293 = !DILocalVariable(name: "thread", arg: 1, scope: !14291, file: !12869, line: 120, type: !2240)
!14294 = !DILocation(line: 0, scope: !14291)
!14295 = !DILocation(line: 122, column: 12, scope: !14291)
!14296 = !DILocation(line: 122, column: 62, scope: !14291)
!14297 = !DILocation(line: 123, column: 4, scope: !14291)
!14298 = !DILocation(line: 122, column: 2, scope: !14291)
!14299 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2348, file: !2348, line: 644, type: !13665, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !14300)
!14300 = !{!14301, !14302, !14304}
!14301 = !DILocalVariable(name: "thread", arg: 1, scope: !14299, file: !2348, line: 644, type: !2240)
!14302 = !DILocalVariable(name: "__i", scope: !14303, file: !2348, line: 646, type: !13699)
!14303 = distinct !DILexicalBlock(scope: !14299, file: !2348, line: 646, column: 2)
!14304 = !DILocalVariable(name: "__key", scope: !14303, file: !2348, line: 646, type: !13699)
!14305 = !DILocation(line: 0, scope: !14299)
!14306 = !DILocation(line: 0, scope: !14303)
!14307 = !DILocation(line: 0, scope: !13707, inlinedAt: !14308)
!14308 = distinct !DILocation(line: 646, column: 2, scope: !14303)
!14309 = !DILocation(line: 55, column: 2, scope: !13716, inlinedAt: !14310)
!14310 = distinct !DILocation(line: 145, column: 10, scope: !13707, inlinedAt: !14308)
!14311 = !DILocation(line: 0, scope: !13716, inlinedAt: !14310)
!14312 = !DILocation(line: 148, column: 2, scope: !13724, inlinedAt: !14308)
!14313 = !DILocation(line: 148, column: 2, scope: !13725, inlinedAt: !14308)
!14314 = !DILocation(line: 148, column: 2, scope: !13728, inlinedAt: !14308)
!14315 = !DILocation(line: 160, column: 2, scope: !13707, inlinedAt: !14308)
!14316 = !DILocation(line: 647, column: 3, scope: !14317)
!14317 = distinct !DILexicalBlock(scope: !14318, file: !2348, line: 646, column: 26)
!14318 = distinct !DILexicalBlock(scope: !14303, file: !2348, line: 646, column: 2)
!14319 = !DILocation(line: 0, scope: !13741, inlinedAt: !14320)
!14320 = distinct !DILocation(line: 646, column: 2, scope: !14318)
!14321 = !DILocation(line: 194, column: 2, scope: !13749, inlinedAt: !14320)
!14322 = !DILocation(line: 194, column: 2, scope: !13750, inlinedAt: !14320)
!14323 = !DILocation(line: 194, column: 2, scope: !13753, inlinedAt: !14320)
!14324 = !DILocation(line: 0, scope: !13755, inlinedAt: !14325)
!14325 = distinct !DILocation(line: 215, column: 2, scope: !13741, inlinedAt: !14320)
!14326 = !DILocation(line: 95, column: 2, scope: !13755, inlinedAt: !14325)
!14327 = !DILocation(line: 649, column: 1, scope: !14299)
!14328 = distinct !DISubprogram(name: "z_sched_start", scope: !2348, file: !2348, line: 651, type: !13665, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !14329)
!14329 = !{!14330, !14331}
!14330 = !DILocalVariable(name: "thread", arg: 1, scope: !14328, file: !2348, line: 651, type: !2240)
!14331 = !DILocalVariable(name: "key", scope: !14328, file: !2348, line: 653, type: !13699)
!14332 = !DILocation(line: 0, scope: !14328)
!14333 = !DILocation(line: 0, scope: !13707, inlinedAt: !14334)
!14334 = distinct !DILocation(line: 653, column: 25, scope: !14328)
!14335 = !DILocation(line: 55, column: 2, scope: !13716, inlinedAt: !14336)
!14336 = distinct !DILocation(line: 145, column: 10, scope: !13707, inlinedAt: !14334)
!14337 = !DILocation(line: 0, scope: !13716, inlinedAt: !14336)
!14338 = !DILocation(line: 148, column: 2, scope: !13724, inlinedAt: !14334)
!14339 = !DILocation(line: 148, column: 2, scope: !13725, inlinedAt: !14334)
!14340 = !DILocation(line: 148, column: 2, scope: !13728, inlinedAt: !14334)
!14341 = !DILocation(line: 160, column: 2, scope: !13707, inlinedAt: !14334)
!14342 = !DILocation(line: 655, column: 6, scope: !14343)
!14343 = distinct !DILexicalBlock(scope: !14328, file: !2348, line: 655, column: 6)
!14344 = !DILocation(line: 655, column: 6, scope: !14328)
!14345 = !DILocation(line: 0, scope: !13741, inlinedAt: !14346)
!14346 = distinct !DILocation(line: 656, column: 3, scope: !14347)
!14347 = distinct !DILexicalBlock(scope: !14343, file: !2348, line: 655, column: 36)
!14348 = !DILocation(line: 194, column: 2, scope: !13749, inlinedAt: !14346)
!14349 = !DILocation(line: 194, column: 2, scope: !13750, inlinedAt: !14346)
!14350 = !DILocation(line: 194, column: 2, scope: !13753, inlinedAt: !14346)
!14351 = !DILocation(line: 0, scope: !13755, inlinedAt: !14352)
!14352 = distinct !DILocation(line: 215, column: 2, scope: !13741, inlinedAt: !14346)
!14353 = !DILocation(line: 95, column: 2, scope: !13755, inlinedAt: !14352)
!14354 = !DILocation(line: 657, column: 3, scope: !14347)
!14355 = !DILocation(line: 660, column: 2, scope: !14328)
!14356 = !DILocation(line: 661, column: 2, scope: !14328)
!14357 = !DILocation(line: 662, column: 2, scope: !14328)
!14358 = !DILocation(line: 663, column: 1, scope: !14328)
!14359 = distinct !DISubprogram(name: "z_has_thread_started", scope: !12869, file: !12869, line: 126, type: !13848, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !14360)
!14360 = !{!14361}
!14361 = !DILocalVariable(name: "thread", arg: 1, scope: !14359, file: !12869, line: 126, type: !2240)
!14362 = !DILocation(line: 0, scope: !14359)
!14363 = !DILocation(line: 128, column: 23, scope: !14359)
!14364 = !DILocation(line: 128, column: 36, scope: !14359)
!14365 = !DILocation(line: 128, column: 56, scope: !14359)
!14366 = !DILocation(line: 128, column: 2, scope: !14359)
!14367 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12869, file: !12869, line: 155, type: !13665, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !14368)
!14368 = !{!14369}
!14369 = !DILocalVariable(name: "thread", arg: 1, scope: !14367, file: !12869, line: 155, type: !2240)
!14370 = !DILocation(line: 0, scope: !14367)
!14371 = !DILocation(line: 157, column: 15, scope: !14367)
!14372 = !DILocation(line: 157, column: 28, scope: !14367)
!14373 = !DILocation(line: 158, column: 1, scope: !14367)
!14374 = distinct !DISubprogram(name: "z_reschedule", scope: !2348, file: !2348, line: 967, type: !13742, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !14375)
!14375 = !{!14376, !14377}
!14376 = !DILocalVariable(name: "lock", arg: 1, scope: !14374, file: !2348, line: 967, type: !13710)
!14377 = !DILocalVariable(name: "key", arg: 2, scope: !14374, file: !2348, line: 967, type: !13699)
!14378 = !DILocation(line: 0, scope: !14374)
!14379 = !DILocation(line: 969, column: 6, scope: !14380)
!14380 = distinct !DILexicalBlock(scope: !14374, file: !2348, line: 969, column: 6)
!14381 = !DILocation(line: 969, column: 23, scope: !14380)
!14382 = !DILocation(line: 969, column: 26, scope: !14380)
!14383 = !DILocation(line: 969, column: 6, scope: !14374)
!14384 = !DILocalVariable(name: "key", arg: 2, scope: !14385, file: !12973, line: 193, type: !13699)
!14385 = distinct !DISubprogram(name: "z_swap", scope: !12973, file: !12973, line: 193, type: !14386, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !14388)
!14386 = !DISubroutineType(types: !14387)
!14387 = !{!119, !13710, !13699}
!14388 = !{!14389, !14384}
!14389 = !DILocalVariable(name: "lock", arg: 1, scope: !14385, file: !12973, line: 193, type: !13710)
!14390 = !DILocation(line: 0, scope: !14385, inlinedAt: !14391)
!14391 = distinct !DILocation(line: 970, column: 3, scope: !14392)
!14392 = distinct !DILexicalBlock(scope: !14380, file: !2348, line: 969, column: 39)
!14393 = !DILocalVariable(name: "l", arg: 1, scope: !14394, file: !259, line: 221, type: !13710)
!14394 = distinct !DISubprogram(name: "k_spin_release", scope: !259, file: !259, line: 221, type: !14395, scopeLine: 222, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !14397)
!14395 = !DISubroutineType(types: !14396)
!14396 = !{null, !13710}
!14397 = !{!14393}
!14398 = !DILocation(line: 0, scope: !14394, inlinedAt: !14399)
!14399 = distinct !DILocation(line: 195, column: 2, scope: !14385, inlinedAt: !14391)
!14400 = !DILocation(line: 225, column: 2, scope: !14401, inlinedAt: !14399)
!14401 = distinct !DILexicalBlock(scope: !14402, file: !259, line: 225, column: 2)
!14402 = distinct !DILexicalBlock(scope: !14394, file: !259, line: 225, column: 2)
!14403 = !DILocation(line: 225, column: 2, scope: !14402, inlinedAt: !14399)
!14404 = !DILocation(line: 225, column: 2, scope: !14405, inlinedAt: !14399)
!14405 = distinct !DILexicalBlock(scope: !14401, file: !259, line: 225, column: 2)
!14406 = !DILocation(line: 196, column: 9, scope: !14385, inlinedAt: !14391)
!14407 = !DILocation(line: 971, column: 2, scope: !14392)
!14408 = !DILocation(line: 0, scope: !13741, inlinedAt: !14409)
!14409 = distinct !DILocation(line: 972, column: 3, scope: !14410)
!14410 = distinct !DILexicalBlock(scope: !14380, file: !2348, line: 971, column: 9)
!14411 = !DILocation(line: 194, column: 2, scope: !13749, inlinedAt: !14409)
!14412 = !DILocation(line: 194, column: 2, scope: !13750, inlinedAt: !14409)
!14413 = !DILocation(line: 194, column: 2, scope: !13753, inlinedAt: !14409)
!14414 = !DILocation(line: 0, scope: !13755, inlinedAt: !14415)
!14415 = distinct !DILocation(line: 215, column: 2, scope: !13741, inlinedAt: !14409)
!14416 = !DILocation(line: 95, column: 2, scope: !13755, inlinedAt: !14415)
!14417 = !DILocation(line: 975, column: 1, scope: !14374)
!14418 = distinct !DISubprogram(name: "resched", scope: !2348, file: !2348, line: 940, type: !14419, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !14421)
!14419 = !DISubroutineType(types: !14420)
!14420 = !{!345, !118}
!14421 = !{!14422}
!14422 = !DILocalVariable(name: "key", arg: 1, scope: !14418, file: !2348, line: 940, type: !118)
!14423 = !DILocation(line: 0, scope: !14418)
!14424 = !DILocalVariable(name: "key", arg: 1, scope: !14425, file: !6013, line: 112, type: !32)
!14425 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !6013, file: !6013, line: 112, type: !14426, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !14428)
!14426 = !DISubroutineType(types: !14427)
!14427 = !{!345, !32}
!14428 = !{!14424}
!14429 = !DILocation(line: 0, scope: !14425, inlinedAt: !14430)
!14430 = distinct !DILocation(line: 946, column: 9, scope: !14418)
!14431 = !DILocation(line: 115, column: 13, scope: !14425, inlinedAt: !14430)
!14432 = !DILocation(line: 946, column: 32, scope: !14418)
!14433 = !DILocation(line: 1031, column: 3, scope: !14434, inlinedAt: !14437)
!14434 = distinct !DISubprogram(name: "__get_IPSR", scope: !6334, file: !6334, line: 1027, type: !3220, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !14435)
!14435 = !{!14436}
!14436 = !DILocalVariable(name: "result", scope: !14434, file: !6334, line: 1029, type: !118)
!14437 = distinct !DILocation(line: 48, column: 10, scope: !14438, inlinedAt: !14439)
!14438 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7384, file: !7384, line: 46, type: !7385, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !2048)
!14439 = distinct !DILocation(line: 946, column: 36, scope: !14418)
!14440 = !{i64 2959528}
!14441 = !DILocation(line: 0, scope: !14434, inlinedAt: !14437)
!14442 = !DILocation(line: 48, column: 9, scope: !14438, inlinedAt: !14439)
!14443 = !DILocation(line: 946, column: 2, scope: !14418)
!14444 = distinct !DISubprogram(name: "need_swap", scope: !2348, file: !2348, line: 953, type: !7385, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !14445)
!14445 = !{!14446}
!14446 = !DILocalVariable(name: "new_thread", scope: !14444, file: !2348, line: 959, type: !2240)
!14447 = !DILocation(line: 962, column: 31, scope: !14444)
!14448 = !DILocation(line: 0, scope: !14444)
!14449 = !DILocation(line: 963, column: 23, scope: !14444)
!14450 = !DILocation(line: 963, column: 20, scope: !14444)
!14451 = !DILocation(line: 963, column: 2, scope: !14444)
!14452 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !12973, file: !12973, line: 181, type: !6344, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !14453)
!14453 = !{!14454, !14455}
!14454 = !DILocalVariable(name: "key", arg: 1, scope: !14452, file: !12973, line: 181, type: !32)
!14455 = !DILocalVariable(name: "ret", scope: !14452, file: !12973, line: 183, type: !119)
!14456 = !DILocation(line: 0, scope: !14452)
!14457 = !DILocation(line: 185, column: 8, scope: !14452)
!14458 = !DILocation(line: 186, column: 2, scope: !14452)
!14459 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2348, file: !2348, line: 665, type: !13665, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !14460)
!14460 = !{!14461, !14462, !14464}
!14461 = !DILocalVariable(name: "thread", arg: 1, scope: !14459, file: !2348, line: 665, type: !2240)
!14462 = !DILocalVariable(name: "__i", scope: !14463, file: !2348, line: 671, type: !13699)
!14463 = distinct !DILexicalBlock(scope: !14459, file: !2348, line: 671, column: 2)
!14464 = !DILocalVariable(name: "__key", scope: !14463, file: !2348, line: 671, type: !13699)
!14465 = !DILocation(line: 0, scope: !14459)
!14466 = !DILocation(line: 669, column: 8, scope: !14459)
!14467 = !DILocation(line: 0, scope: !14463)
!14468 = !DILocation(line: 0, scope: !13707, inlinedAt: !14469)
!14469 = distinct !DILocation(line: 671, column: 2, scope: !14463)
!14470 = !DILocation(line: 55, column: 2, scope: !13716, inlinedAt: !14471)
!14471 = distinct !DILocation(line: 145, column: 10, scope: !13707, inlinedAt: !14469)
!14472 = !DILocation(line: 0, scope: !13716, inlinedAt: !14471)
!14473 = !DILocation(line: 148, column: 2, scope: !13724, inlinedAt: !14469)
!14474 = !DILocation(line: 148, column: 2, scope: !13725, inlinedAt: !14469)
!14475 = !DILocation(line: 148, column: 2, scope: !13728, inlinedAt: !14469)
!14476 = !DILocation(line: 160, column: 2, scope: !13707, inlinedAt: !14469)
!14477 = !DILocation(line: 672, column: 7, scope: !14478)
!14478 = distinct !DILexicalBlock(scope: !14479, file: !2348, line: 672, column: 7)
!14479 = distinct !DILexicalBlock(scope: !14480, file: !2348, line: 671, column: 26)
!14480 = distinct !DILexicalBlock(scope: !14463, file: !2348, line: 671, column: 2)
!14481 = !DILocation(line: 672, column: 7, scope: !14479)
!14482 = !DILocation(line: 0, scope: !13899, inlinedAt: !14483)
!14483 = distinct !DILocation(line: 673, column: 4, scope: !14484)
!14484 = distinct !DILexicalBlock(scope: !14478, file: !2348, line: 672, column: 35)
!14485 = !DILocation(line: 266, column: 15, scope: !13899, inlinedAt: !14483)
!14486 = !DILocation(line: 266, column: 28, scope: !13899, inlinedAt: !14483)
!14487 = !DILocation(line: 0, scope: !13907, inlinedAt: !14488)
!14488 = distinct !DILocation(line: 268, column: 3, scope: !13911, inlinedAt: !14483)
!14489 = !DILocation(line: 234, column: 2, scope: !13907, inlinedAt: !14488)
!14490 = !DILocation(line: 674, column: 3, scope: !14484)
!14491 = !DILocation(line: 675, column: 3, scope: !14479)
!14492 = !DILocation(line: 676, column: 26, scope: !14479)
!14493 = !DILocation(line: 676, column: 23, scope: !14479)
!14494 = !DILocation(line: 676, column: 3, scope: !14479)
!14495 = !DILocation(line: 0, scope: !13741, inlinedAt: !14496)
!14496 = distinct !DILocation(line: 671, column: 2, scope: !14480)
!14497 = !DILocation(line: 194, column: 2, scope: !13749, inlinedAt: !14496)
!14498 = !DILocation(line: 194, column: 2, scope: !13750, inlinedAt: !14496)
!14499 = !DILocation(line: 194, column: 2, scope: !13753, inlinedAt: !14496)
!14500 = !DILocation(line: 0, scope: !13755, inlinedAt: !14501)
!14501 = distinct !DILocation(line: 215, column: 2, scope: !13741, inlinedAt: !14496)
!14502 = !DILocation(line: 95, column: 2, scope: !13755, inlinedAt: !14501)
!14503 = !DILocation(line: 679, column: 16, scope: !14504)
!14504 = distinct !DILexicalBlock(scope: !14459, file: !2348, line: 679, column: 6)
!14505 = !DILocation(line: 679, column: 13, scope: !14504)
!14506 = !DILocation(line: 679, column: 6, scope: !14459)
!14507 = !DILocation(line: 680, column: 3, scope: !14508)
!14508 = distinct !DILexicalBlock(scope: !14504, file: !2348, line: 679, column: 26)
!14509 = !DILocation(line: 681, column: 2, scope: !14508)
!14510 = !DILocation(line: 684, column: 1, scope: !14459)
!14511 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !13298, file: !13298, line: 52, type: !13683, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !14512)
!14512 = !{!14513}
!14513 = !DILocalVariable(name: "thread", arg: 1, scope: !14511, file: !13298, line: 52, type: !2240)
!14514 = !DILocation(line: 0, scope: !14511)
!14515 = !DILocation(line: 54, column: 39, scope: !14511)
!14516 = !DILocation(line: 54, column: 9, scope: !14511)
!14517 = !DILocation(line: 54, column: 2, scope: !14511)
!14518 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !12869, file: !12869, line: 141, type: !13665, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !14519)
!14519 = !{!14520}
!14520 = !DILocalVariable(name: "thread", arg: 1, scope: !14518, file: !12869, line: 141, type: !2240)
!14521 = !DILocation(line: 0, scope: !14518)
!14522 = !DILocation(line: 143, column: 15, scope: !14518)
!14523 = !DILocation(line: 143, column: 28, scope: !14518)
!14524 = !DILocation(line: 146, column: 1, scope: !14518)
!14525 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !12869, file: !12869, line: 73, type: !2982, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !2048)
!14526 = !DILocation(line: 55, column: 2, scope: !13716, inlinedAt: !14527)
!14527 = distinct !DILocation(line: 75, column: 30, scope: !14525)
!14528 = !DILocation(line: 0, scope: !13716, inlinedAt: !14527)
!14529 = !DILocation(line: 75, column: 9, scope: !14525)
!14530 = !DILocation(line: 76, column: 1, scope: !14525)
!14531 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2348, file: !2348, line: 977, type: !6429, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !14532)
!14532 = !{!14533}
!14533 = !DILocalVariable(name: "key", arg: 1, scope: !14531, file: !2348, line: 977, type: !118)
!14534 = !DILocation(line: 0, scope: !14531)
!14535 = !DILocation(line: 979, column: 6, scope: !14536)
!14536 = distinct !DILexicalBlock(scope: !14531, file: !2348, line: 979, column: 6)
!14537 = !DILocation(line: 979, column: 6, scope: !14531)
!14538 = !DILocation(line: 980, column: 3, scope: !14539)
!14539 = distinct !DILexicalBlock(scope: !14536, file: !2348, line: 979, column: 20)
!14540 = !DILocation(line: 981, column: 2, scope: !14539)
!14541 = !DILocation(line: 0, scope: !13755, inlinedAt: !14542)
!14542 = distinct !DILocation(line: 982, column: 3, scope: !14543)
!14543 = distinct !DILexicalBlock(scope: !14536, file: !2348, line: 981, column: 9)
!14544 = !DILocation(line: 95, column: 2, scope: !13755, inlinedAt: !14542)
!14545 = !DILocation(line: 985, column: 1, scope: !14531)
!14546 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2348, file: !2348, line: 695, type: !13665, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !14547)
!14547 = !{!14548, !14549}
!14548 = !DILocalVariable(name: "thread", arg: 1, scope: !14546, file: !2348, line: 695, type: !2240)
!14549 = !DILocalVariable(name: "key", scope: !14546, file: !2348, line: 699, type: !13699)
!14550 = !DILocation(line: 0, scope: !14546)
!14551 = !DILocation(line: 0, scope: !13707, inlinedAt: !14552)
!14552 = distinct !DILocation(line: 699, column: 25, scope: !14546)
!14553 = !DILocation(line: 55, column: 2, scope: !13716, inlinedAt: !14554)
!14554 = distinct !DILocation(line: 145, column: 10, scope: !13707, inlinedAt: !14552)
!14555 = !DILocation(line: 0, scope: !13716, inlinedAt: !14554)
!14556 = !DILocation(line: 148, column: 2, scope: !13724, inlinedAt: !14552)
!14557 = !DILocation(line: 148, column: 2, scope: !13725, inlinedAt: !14552)
!14558 = !DILocation(line: 148, column: 2, scope: !13728, inlinedAt: !14552)
!14559 = !DILocation(line: 160, column: 2, scope: !13707, inlinedAt: !14552)
!14560 = !DILocation(line: 702, column: 7, scope: !14561)
!14561 = distinct !DILexicalBlock(scope: !14546, file: !2348, line: 702, column: 6)
!14562 = !DILocation(line: 702, column: 6, scope: !14546)
!14563 = !DILocation(line: 0, scope: !13741, inlinedAt: !14564)
!14564 = distinct !DILocation(line: 703, column: 3, scope: !14565)
!14565 = distinct !DILexicalBlock(scope: !14561, file: !2348, line: 702, column: 38)
!14566 = !DILocation(line: 194, column: 2, scope: !13749, inlinedAt: !14564)
!14567 = !DILocation(line: 194, column: 2, scope: !13750, inlinedAt: !14564)
!14568 = !DILocation(line: 194, column: 2, scope: !13753, inlinedAt: !14564)
!14569 = !DILocation(line: 0, scope: !13755, inlinedAt: !14570)
!14570 = distinct !DILocation(line: 215, column: 2, scope: !13741, inlinedAt: !14564)
!14571 = !DILocation(line: 95, column: 2, scope: !13755, inlinedAt: !14570)
!14572 = !DILocation(line: 704, column: 3, scope: !14565)
!14573 = !DILocation(line: 707, column: 2, scope: !14546)
!14574 = !DILocation(line: 708, column: 2, scope: !14546)
!14575 = !DILocation(line: 710, column: 2, scope: !14546)
!14576 = !DILocation(line: 713, column: 1, scope: !14546)
!14577 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !12869, file: !12869, line: 96, type: !13848, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !14578)
!14578 = !{!14579}
!14579 = !DILocalVariable(name: "thread", arg: 1, scope: !14577, file: !12869, line: 96, type: !2240)
!14580 = !DILocation(line: 0, scope: !14577)
!14581 = !DILocation(line: 98, column: 23, scope: !14577)
!14582 = !DILocation(line: 98, column: 36, scope: !14577)
!14583 = !DILocation(line: 98, column: 57, scope: !14577)
!14584 = !DILocation(line: 98, column: 2, scope: !14577)
!14585 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !12869, file: !12869, line: 148, type: !13665, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !14586)
!14586 = !{!14587}
!14587 = !DILocalVariable(name: "thread", arg: 1, scope: !14585, file: !12869, line: 148, type: !2240)
!14588 = !DILocation(line: 0, scope: !14585)
!14589 = !DILocation(line: 150, column: 15, scope: !14585)
!14590 = !DILocation(line: 150, column: 28, scope: !14585)
!14591 = !DILocation(line: 153, column: 1, scope: !14585)
!14592 = distinct !DISubprogram(name: "z_pend_thread", scope: !2348, file: !2348, line: 770, type: !14593, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !14599)
!14593 = !DISubroutineType(types: !14594)
!14594 = !{null, !2240, !2271, !14595}
!14595 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !115, line: 67, baseType: !14596)
!14596 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !115, line: 65, size: 64, elements: !14597)
!14597 = !{!14598}
!14598 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14596, file: !115, line: 66, baseType: !114, size: 64)
!14599 = !{!14600, !14601, !14602, !14603, !14605}
!14600 = !DILocalVariable(name: "thread", arg: 1, scope: !14592, file: !2348, line: 770, type: !2240)
!14601 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14592, file: !2348, line: 770, type: !2271)
!14602 = !DILocalVariable(name: "timeout", arg: 3, scope: !14592, file: !2348, line: 771, type: !14595)
!14603 = !DILocalVariable(name: "__i", scope: !14604, file: !2348, line: 774, type: !13699)
!14604 = distinct !DILexicalBlock(scope: !14592, file: !2348, line: 774, column: 2)
!14605 = !DILocalVariable(name: "__key", scope: !14604, file: !2348, line: 774, type: !13699)
!14606 = !DILocation(line: 0, scope: !14592)
!14607 = !DILocation(line: 773, column: 2, scope: !14608)
!14608 = distinct !DILexicalBlock(scope: !14609, file: !2348, line: 773, column: 2)
!14609 = distinct !DILexicalBlock(scope: !14592, file: !2348, line: 773, column: 2)
!14610 = !DILocation(line: 773, column: 2, scope: !14609)
!14611 = !DILocation(line: 773, column: 2, scope: !14612)
!14612 = distinct !DILexicalBlock(scope: !14608, file: !2348, line: 773, column: 2)
!14613 = !DILocation(line: 0, scope: !14604)
!14614 = !DILocation(line: 0, scope: !13707, inlinedAt: !14615)
!14615 = distinct !DILocation(line: 774, column: 2, scope: !14604)
!14616 = !DILocation(line: 55, column: 2, scope: !13716, inlinedAt: !14617)
!14617 = distinct !DILocation(line: 145, column: 10, scope: !13707, inlinedAt: !14615)
!14618 = !DILocation(line: 0, scope: !13716, inlinedAt: !14617)
!14619 = !DILocation(line: 148, column: 2, scope: !13724, inlinedAt: !14615)
!14620 = !DILocation(line: 148, column: 2, scope: !13725, inlinedAt: !14615)
!14621 = !DILocation(line: 148, column: 2, scope: !13728, inlinedAt: !14615)
!14622 = !DILocation(line: 160, column: 2, scope: !13707, inlinedAt: !14615)
!14623 = !DILocation(line: 775, column: 3, scope: !14624)
!14624 = distinct !DILexicalBlock(scope: !14625, file: !2348, line: 774, column: 26)
!14625 = distinct !DILexicalBlock(scope: !14604, file: !2348, line: 774, column: 2)
!14626 = !DILocation(line: 0, scope: !13741, inlinedAt: !14627)
!14627 = distinct !DILocation(line: 774, column: 2, scope: !14625)
!14628 = !DILocation(line: 194, column: 2, scope: !13749, inlinedAt: !14627)
!14629 = !DILocation(line: 194, column: 2, scope: !13750, inlinedAt: !14627)
!14630 = !DILocation(line: 194, column: 2, scope: !13753, inlinedAt: !14627)
!14631 = !DILocation(line: 0, scope: !13755, inlinedAt: !14632)
!14632 = distinct !DILocation(line: 215, column: 2, scope: !13741, inlinedAt: !14627)
!14633 = !DILocation(line: 95, column: 2, scope: !13755, inlinedAt: !14632)
!14634 = !DILocation(line: 777, column: 1, scope: !14592)
!14635 = distinct !DISubprogram(name: "is_thread_dummy", scope: !2348, file: !2348, line: 79, type: !13848, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !14636)
!14636 = !{!14637}
!14637 = !DILocalVariable(name: "thread", arg: 1, scope: !14635, file: !2348, line: 79, type: !2240)
!14638 = !DILocation(line: 0, scope: !14635)
!14639 = !DILocation(line: 81, column: 23, scope: !14635)
!14640 = !DILocation(line: 81, column: 36, scope: !14635)
!14641 = !DILocation(line: 81, column: 53, scope: !14635)
!14642 = !DILocation(line: 81, column: 2, scope: !14635)
!14643 = distinct !DISubprogram(name: "pend_locked", scope: !2348, file: !2348, line: 760, type: !14593, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !14644)
!14644 = !{!14645, !14646, !14647}
!14645 = !DILocalVariable(name: "thread", arg: 1, scope: !14643, file: !2348, line: 760, type: !2240)
!14646 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14643, file: !2348, line: 760, type: !2271)
!14647 = !DILocalVariable(name: "timeout", arg: 3, scope: !14643, file: !2348, line: 761, type: !14595)
!14648 = !DILocation(line: 0, scope: !14643)
!14649 = !DILocation(line: 766, column: 2, scope: !14643)
!14650 = !DILocation(line: 767, column: 2, scope: !14643)
!14651 = !DILocation(line: 768, column: 1, scope: !14643)
!14652 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2348, file: !2348, line: 740, type: !14653, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !14655)
!14653 = !DISubroutineType(types: !14654)
!14654 = !{null, !2240, !2271}
!14655 = !{!14656, !14657}
!14656 = !DILocalVariable(name: "thread", arg: 1, scope: !14652, file: !2348, line: 740, type: !2240)
!14657 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14652, file: !2348, line: 740, type: !2271)
!14658 = !DILocation(line: 0, scope: !14652)
!14659 = !DILocation(line: 742, column: 2, scope: !14652)
!14660 = !DILocation(line: 743, column: 2, scope: !14652)
!14661 = !DILocation(line: 747, column: 13, scope: !14662)
!14662 = distinct !DILexicalBlock(scope: !14652, file: !2348, line: 747, column: 6)
!14663 = !DILocation(line: 747, column: 6, scope: !14652)
!14664 = !DILocation(line: 748, column: 16, scope: !14665)
!14665 = distinct !DILexicalBlock(scope: !14662, file: !2348, line: 747, column: 22)
!14666 = !DILocation(line: 748, column: 26, scope: !14665)
!14667 = !DILocation(line: 749, column: 28, scope: !14665)
!14668 = !DILocation(line: 0, scope: !13930, inlinedAt: !14669)
!14669 = distinct !DILocation(line: 749, column: 3, scope: !14665)
!14670 = !DILocation(line: 186, column: 2, scope: !13940, inlinedAt: !14669)
!14671 = !DILocation(line: 186, column: 2, scope: !13941, inlinedAt: !14669)
!14672 = !DILocation(line: 186, column: 2, scope: !13944, inlinedAt: !14669)
!14673 = !DILocation(line: 188, column: 2, scope: !13946, inlinedAt: !14669)
!14674 = !DILocation(line: 188, column: 2, scope: !13948, inlinedAt: !14669)
!14675 = !DILocation(line: 0, scope: !13946, inlinedAt: !14669)
!14676 = !DILocation(line: 189, column: 7, scope: !13951, inlinedAt: !14669)
!14677 = !DILocation(line: 189, column: 35, scope: !13951, inlinedAt: !14669)
!14678 = !DILocation(line: 189, column: 7, scope: !13952, inlinedAt: !14669)
!14679 = !DILocation(line: 191, column: 21, scope: !13956, inlinedAt: !14669)
!14680 = !DILocation(line: 190, column: 4, scope: !13956, inlinedAt: !14669)
!14681 = !DILocation(line: 192, column: 4, scope: !13956, inlinedAt: !14669)
!14682 = distinct !{!14682, !14673, !14683}
!14683 = !DILocation(line: 194, column: 2, scope: !13946, inlinedAt: !14669)
!14684 = !DILocation(line: 196, column: 37, scope: !13930, inlinedAt: !14669)
!14685 = !DILocation(line: 196, column: 2, scope: !13930, inlinedAt: !14669)
!14686 = !DILocation(line: 197, column: 1, scope: !13930, inlinedAt: !14669)
!14687 = !DILocation(line: 751, column: 1, scope: !14652)
!14688 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2348, file: !2348, line: 753, type: !14689, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !14691)
!14689 = !DISubroutineType(types: !14690)
!14690 = !{null, !2240, !14595}
!14691 = !{!14692, !14693}
!14692 = !DILocalVariable(name: "thread", arg: 1, scope: !14688, file: !2348, line: 753, type: !2240)
!14693 = !DILocalVariable(name: "timeout", arg: 2, scope: !14688, file: !2348, line: 753, type: !14595)
!14694 = !DILocation(line: 0, scope: !14688)
!14695 = !DILocation(line: 755, column: 7, scope: !14696)
!14696 = distinct !DILexicalBlock(scope: !14688, file: !2348, line: 755, column: 6)
!14697 = !DILocation(line: 755, column: 6, scope: !14688)
!14698 = !DILocation(line: 756, column: 3, scope: !14699)
!14699 = distinct !DILexicalBlock(scope: !14696, file: !2348, line: 755, column: 41)
!14700 = !DILocation(line: 757, column: 2, scope: !14699)
!14701 = !DILocation(line: 758, column: 1, scope: !14688)
!14702 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !13298, file: !13298, line: 47, type: !14689, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !14703)
!14703 = !{!14704, !14705}
!14704 = !DILocalVariable(name: "thread", arg: 1, scope: !14702, file: !13298, line: 47, type: !2240)
!14705 = !DILocalVariable(name: "ticks", arg: 2, scope: !14702, file: !13298, line: 47, type: !14595)
!14706 = !DILocation(line: 0, scope: !14702)
!14707 = !DILocation(line: 49, column: 30, scope: !14702)
!14708 = !DILocation(line: 49, column: 2, scope: !14702)
!14709 = !DILocation(line: 50, column: 1, scope: !14702)
!14710 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2348, file: !2348, line: 795, type: !2297, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !14711)
!14711 = !{!14712, !14713, !14714, !14716, !14717}
!14712 = !DILocalVariable(name: "timeout", arg: 1, scope: !14710, file: !2348, line: 795, type: !2299)
!14713 = !DILocalVariable(name: "thread", scope: !14710, file: !2348, line: 797, type: !2240)
!14714 = !DILocalVariable(name: "__i", scope: !14715, file: !2348, line: 800, type: !13699)
!14715 = distinct !DILexicalBlock(scope: !14710, file: !2348, line: 800, column: 2)
!14716 = !DILocalVariable(name: "__key", scope: !14715, file: !2348, line: 800, type: !13699)
!14717 = !DILocalVariable(name: "killed", scope: !14718, file: !2348, line: 801, type: !345)
!14718 = distinct !DILexicalBlock(scope: !14719, file: !2348, line: 800, column: 26)
!14719 = distinct !DILexicalBlock(scope: !14715, file: !2348, line: 800, column: 2)
!14720 = !DILocation(line: 0, scope: !14710)
!14721 = !DILocation(line: 797, column: 28, scope: !14710)
!14722 = !DILocation(line: 0, scope: !14715)
!14723 = !DILocation(line: 0, scope: !13707, inlinedAt: !14724)
!14724 = distinct !DILocation(line: 800, column: 2, scope: !14715)
!14725 = !DILocation(line: 55, column: 2, scope: !13716, inlinedAt: !14726)
!14726 = distinct !DILocation(line: 145, column: 10, scope: !13707, inlinedAt: !14724)
!14727 = !DILocation(line: 0, scope: !13716, inlinedAt: !14726)
!14728 = !DILocation(line: 148, column: 2, scope: !13724, inlinedAt: !14724)
!14729 = !DILocation(line: 148, column: 2, scope: !13725, inlinedAt: !14724)
!14730 = !DILocation(line: 148, column: 2, scope: !13728, inlinedAt: !14724)
!14731 = !DILocation(line: 160, column: 2, scope: !13707, inlinedAt: !14724)
!14732 = !DILocation(line: 801, column: 27, scope: !14718)
!14733 = !DILocation(line: 801, column: 32, scope: !14718)
!14734 = !DILocation(line: 801, column: 61, scope: !14718)
!14735 = !DILocation(line: 0, scope: !14718)
!14736 = !DILocation(line: 804, column: 7, scope: !14718)
!14737 = !DILocation(line: 805, column: 21, scope: !14738)
!14738 = distinct !DILexicalBlock(scope: !14739, file: !2348, line: 805, column: 8)
!14739 = distinct !DILexicalBlock(scope: !14740, file: !2348, line: 804, column: 16)
!14740 = distinct !DILexicalBlock(scope: !14718, file: !2348, line: 804, column: 7)
!14741 = !DILocation(line: 805, column: 31, scope: !14738)
!14742 = !DILocation(line: 805, column: 8, scope: !14739)
!14743 = !DILocation(line: 806, column: 5, scope: !14744)
!14744 = distinct !DILexicalBlock(scope: !14738, file: !2348, line: 805, column: 40)
!14745 = !DILocation(line: 807, column: 4, scope: !14744)
!14746 = !DILocation(line: 808, column: 4, scope: !14739)
!14747 = !DILocation(line: 809, column: 4, scope: !14739)
!14748 = !DILocation(line: 810, column: 4, scope: !14739)
!14749 = !DILocation(line: 811, column: 3, scope: !14739)
!14750 = !DILocation(line: 0, scope: !13741, inlinedAt: !14751)
!14751 = distinct !DILocation(line: 800, column: 2, scope: !14719)
!14752 = !DILocation(line: 194, column: 2, scope: !13749, inlinedAt: !14751)
!14753 = !DILocation(line: 194, column: 2, scope: !13750, inlinedAt: !14751)
!14754 = !DILocation(line: 194, column: 2, scope: !13753, inlinedAt: !14751)
!14755 = !DILocation(line: 0, scope: !13755, inlinedAt: !14756)
!14756 = distinct !DILocation(line: 215, column: 2, scope: !13741, inlinedAt: !14751)
!14757 = !DILocation(line: 95, column: 2, scope: !13755, inlinedAt: !14756)
!14758 = !DILocation(line: 813, column: 1, scope: !14710)
!14759 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2348, file: !2348, line: 779, type: !13665, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !14760)
!14760 = !{!14761}
!14761 = !DILocalVariable(name: "thread", arg: 1, scope: !14759, file: !2348, line: 779, type: !2240)
!14762 = !DILocation(line: 0, scope: !14759)
!14763 = !DILocation(line: 781, column: 21, scope: !14759)
!14764 = !DILocation(line: 781, column: 2, scope: !14759)
!14765 = !DILocation(line: 782, column: 2, scope: !14759)
!14766 = !DILocation(line: 783, column: 15, scope: !14759)
!14767 = !DILocation(line: 783, column: 25, scope: !14759)
!14768 = !DILocation(line: 784, column: 1, scope: !14759)
!14769 = distinct !DISubprogram(name: "pended_on_thread", scope: !2348, file: !2348, line: 724, type: !14770, scopeLine: 725, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !14772)
!14770 = !DISubroutineType(types: !14771)
!14771 = !{!2271, !2240}
!14772 = !{!14773}
!14773 = !DILocalVariable(name: "thread", arg: 1, scope: !14769, file: !2348, line: 724, type: !2240)
!14774 = !DILocation(line: 0, scope: !14769)
!14775 = !DILocation(line: 726, column: 2, scope: !14776)
!14776 = distinct !DILexicalBlock(scope: !14777, file: !2348, line: 726, column: 2)
!14777 = distinct !DILexicalBlock(scope: !14769, file: !2348, line: 726, column: 2)
!14778 = !DILocation(line: 726, column: 2, scope: !14777)
!14779 = !DILocation(line: 726, column: 2, scope: !14780)
!14780 = distinct !DILexicalBlock(scope: !14776, file: !2348, line: 726, column: 2)
!14781 = !DILocation(line: 728, column: 2, scope: !14769)
!14782 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !12869, file: !12869, line: 165, type: !13665, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !14783)
!14783 = !{!14784}
!14784 = !DILocalVariable(name: "thread", arg: 1, scope: !14782, file: !12869, line: 165, type: !2240)
!14785 = !DILocation(line: 0, scope: !14782)
!14786 = !DILocation(line: 167, column: 15, scope: !14782)
!14787 = !DILocation(line: 167, column: 28, scope: !14782)
!14788 = !DILocation(line: 168, column: 1, scope: !14782)
!14789 = distinct !DISubprogram(name: "unready_thread", scope: !2348, file: !2348, line: 731, type: !13665, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !14790)
!14790 = !{!14791}
!14791 = !DILocalVariable(name: "thread", arg: 1, scope: !14789, file: !2348, line: 731, type: !2240)
!14792 = !DILocation(line: 0, scope: !14789)
!14793 = !DILocation(line: 733, column: 6, scope: !14794)
!14794 = distinct !DILexicalBlock(scope: !14789, file: !2348, line: 733, column: 6)
!14795 = !DILocation(line: 733, column: 6, scope: !14789)
!14796 = !DILocation(line: 0, scope: !13899, inlinedAt: !14797)
!14797 = distinct !DILocation(line: 734, column: 3, scope: !14798)
!14798 = distinct !DILexicalBlock(scope: !14794, file: !2348, line: 733, column: 34)
!14799 = !DILocation(line: 266, column: 15, scope: !13899, inlinedAt: !14797)
!14800 = !DILocation(line: 266, column: 28, scope: !13899, inlinedAt: !14797)
!14801 = !DILocation(line: 0, scope: !13907, inlinedAt: !14802)
!14802 = distinct !DILocation(line: 268, column: 3, scope: !13911, inlinedAt: !14797)
!14803 = !DILocation(line: 234, column: 2, scope: !13907, inlinedAt: !14802)
!14804 = !DILocation(line: 735, column: 2, scope: !14798)
!14805 = !DILocation(line: 736, column: 25, scope: !14789)
!14806 = !DILocation(line: 736, column: 22, scope: !14789)
!14807 = !DILocation(line: 736, column: 2, scope: !14789)
!14808 = !DILocation(line: 737, column: 1, scope: !14789)
!14809 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !12869, file: !12869, line: 160, type: !13665, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !14810)
!14810 = !{!14811}
!14811 = !DILocalVariable(name: "thread", arg: 1, scope: !14809, file: !12869, line: 160, type: !2240)
!14812 = !DILocation(line: 0, scope: !14809)
!14813 = !DILocation(line: 162, column: 15, scope: !14809)
!14814 = !DILocation(line: 162, column: 28, scope: !14809)
!14815 = !DILocation(line: 163, column: 1, scope: !14809)
!14816 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2348, file: !2348, line: 786, type: !13665, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !14817)
!14817 = !{!14818, !14819, !14821}
!14818 = !DILocalVariable(name: "thread", arg: 1, scope: !14816, file: !2348, line: 786, type: !2240)
!14819 = !DILocalVariable(name: "__i", scope: !14820, file: !2348, line: 788, type: !13699)
!14820 = distinct !DILexicalBlock(scope: !14816, file: !2348, line: 788, column: 2)
!14821 = !DILocalVariable(name: "__key", scope: !14820, file: !2348, line: 788, type: !13699)
!14822 = !DILocation(line: 0, scope: !14816)
!14823 = !DILocation(line: 0, scope: !14820)
!14824 = !DILocation(line: 0, scope: !13707, inlinedAt: !14825)
!14825 = distinct !DILocation(line: 788, column: 2, scope: !14820)
!14826 = !DILocation(line: 55, column: 2, scope: !13716, inlinedAt: !14827)
!14827 = distinct !DILocation(line: 145, column: 10, scope: !13707, inlinedAt: !14825)
!14828 = !DILocation(line: 0, scope: !13716, inlinedAt: !14827)
!14829 = !DILocation(line: 148, column: 2, scope: !13724, inlinedAt: !14825)
!14830 = !DILocation(line: 148, column: 2, scope: !13725, inlinedAt: !14825)
!14831 = !DILocation(line: 148, column: 2, scope: !13728, inlinedAt: !14825)
!14832 = !DILocation(line: 160, column: 2, scope: !13707, inlinedAt: !14825)
!14833 = !DILocation(line: 789, column: 3, scope: !14834)
!14834 = distinct !DILexicalBlock(scope: !14835, file: !2348, line: 788, column: 26)
!14835 = distinct !DILexicalBlock(scope: !14820, file: !2348, line: 788, column: 2)
!14836 = !DILocation(line: 0, scope: !13741, inlinedAt: !14837)
!14837 = distinct !DILocation(line: 788, column: 2, scope: !14835)
!14838 = !DILocation(line: 194, column: 2, scope: !13749, inlinedAt: !14837)
!14839 = !DILocation(line: 194, column: 2, scope: !13750, inlinedAt: !14837)
!14840 = !DILocation(line: 194, column: 2, scope: !13753, inlinedAt: !14837)
!14841 = !DILocation(line: 0, scope: !13755, inlinedAt: !14842)
!14842 = distinct !DILocation(line: 215, column: 2, scope: !13741, inlinedAt: !14837)
!14843 = !DILocation(line: 95, column: 2, scope: !13755, inlinedAt: !14842)
!14844 = !DILocation(line: 791, column: 1, scope: !14816)
!14845 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2348, file: !2348, line: 816, type: !14846, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !14848)
!14846 = !DISubroutineType(types: !14847)
!14847 = !{!119, !118, !2271, !14595}
!14848 = !{!14849, !14850, !14851, !14852, !14853, !14855}
!14849 = !DILocalVariable(name: "key", arg: 1, scope: !14845, file: !2348, line: 816, type: !118)
!14850 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14845, file: !2348, line: 816, type: !2271)
!14851 = !DILocalVariable(name: "timeout", arg: 3, scope: !14845, file: !2348, line: 816, type: !14595)
!14852 = !DILocalVariable(name: "ret", scope: !14845, file: !2348, line: 828, type: !119)
!14853 = !DILocalVariable(name: "__i", scope: !14854, file: !2348, line: 829, type: !13699)
!14854 = distinct !DILexicalBlock(scope: !14845, file: !2348, line: 829, column: 2)
!14855 = !DILocalVariable(name: "__key", scope: !14854, file: !2348, line: 829, type: !13699)
!14856 = !DILocation(line: 0, scope: !14845)
!14857 = !DILocation(line: 823, column: 14, scope: !14845)
!14858 = !DILocation(line: 823, column: 2, scope: !14845)
!14859 = !DILocation(line: 826, column: 20, scope: !14845)
!14860 = !DILocation(line: 826, column: 18, scope: !14845)
!14861 = !DILocation(line: 828, column: 12, scope: !14845)
!14862 = !DILocation(line: 0, scope: !14854)
!14863 = !DILocation(line: 0, scope: !13707, inlinedAt: !14864)
!14864 = distinct !DILocation(line: 829, column: 2, scope: !14854)
!14865 = !DILocation(line: 55, column: 2, scope: !13716, inlinedAt: !14866)
!14866 = distinct !DILocation(line: 145, column: 10, scope: !13707, inlinedAt: !14864)
!14867 = !DILocation(line: 0, scope: !13716, inlinedAt: !14866)
!14868 = !DILocation(line: 148, column: 2, scope: !13724, inlinedAt: !14864)
!14869 = !DILocation(line: 148, column: 2, scope: !13725, inlinedAt: !14864)
!14870 = !DILocation(line: 148, column: 2, scope: !13728, inlinedAt: !14864)
!14871 = !DILocation(line: 160, column: 2, scope: !13707, inlinedAt: !14864)
!14872 = !DILocation(line: 830, column: 7, scope: !14873)
!14873 = distinct !DILexicalBlock(scope: !14874, file: !2348, line: 830, column: 7)
!14874 = distinct !DILexicalBlock(scope: !14875, file: !2348, line: 829, column: 26)
!14875 = distinct !DILexicalBlock(scope: !14854, file: !2348, line: 829, column: 2)
!14876 = !DILocation(line: 830, column: 26, scope: !14873)
!14877 = !DILocation(line: 830, column: 23, scope: !14873)
!14878 = !DILocation(line: 830, column: 7, scope: !14874)
!14879 = !DILocation(line: 831, column: 20, scope: !14880)
!14880 = distinct !DILexicalBlock(scope: !14873, file: !2348, line: 830, column: 36)
!14881 = !DILocation(line: 832, column: 3, scope: !14880)
!14882 = !DILocation(line: 0, scope: !13741, inlinedAt: !14883)
!14883 = distinct !DILocation(line: 829, column: 2, scope: !14875)
!14884 = !DILocation(line: 194, column: 2, scope: !13749, inlinedAt: !14883)
!14885 = !DILocation(line: 194, column: 2, scope: !13750, inlinedAt: !14883)
!14886 = !DILocation(line: 194, column: 2, scope: !13753, inlinedAt: !14883)
!14887 = !DILocation(line: 0, scope: !13755, inlinedAt: !14888)
!14888 = distinct !DILocation(line: 215, column: 2, scope: !13741, inlinedAt: !14883)
!14889 = !DILocation(line: 95, column: 2, scope: !13755, inlinedAt: !14888)
!14890 = !DILocation(line: 834, column: 2, scope: !14845)
!14891 = distinct !DISubprogram(name: "z_pend_curr", scope: !2348, file: !2348, line: 840, type: !14892, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !14894)
!14892 = !DISubroutineType(types: !14893)
!14893 = !{!119, !13710, !13699, !2271, !14595}
!14894 = !{!14895, !14896, !14897, !14898}
!14895 = !DILocalVariable(name: "lock", arg: 1, scope: !14891, file: !2348, line: 840, type: !13710)
!14896 = !DILocalVariable(name: "key", arg: 2, scope: !14891, file: !2348, line: 840, type: !13699)
!14897 = !DILocalVariable(name: "wait_q", arg: 3, scope: !14891, file: !2348, line: 841, type: !2271)
!14898 = !DILocalVariable(name: "timeout", arg: 4, scope: !14891, file: !2348, line: 841, type: !14595)
!14899 = !DILocation(line: 0, scope: !14891)
!14900 = !DILocation(line: 844, column: 20, scope: !14891)
!14901 = !DILocation(line: 844, column: 18, scope: !14891)
!14902 = !DILocation(line: 846, column: 2, scope: !14903)
!14903 = distinct !DILexicalBlock(scope: !14904, file: !2348, line: 846, column: 2)
!14904 = distinct !DILexicalBlock(scope: !14891, file: !2348, line: 846, column: 2)
!14905 = !DILocation(line: 846, column: 2, scope: !14904)
!14906 = !DILocation(line: 846, column: 2, scope: !14907)
!14907 = distinct !DILexicalBlock(scope: !14903, file: !2348, line: 846, column: 2)
!14908 = !DILocation(line: 0, scope: !13707, inlinedAt: !14909)
!14909 = distinct !DILocation(line: 856, column: 9, scope: !14891)
!14910 = !DILocation(line: 55, column: 2, scope: !13716, inlinedAt: !14911)
!14911 = distinct !DILocation(line: 145, column: 10, scope: !13707, inlinedAt: !14909)
!14912 = !DILocation(line: 0, scope: !13716, inlinedAt: !14911)
!14913 = !DILocation(line: 148, column: 2, scope: !13724, inlinedAt: !14909)
!14914 = !DILocation(line: 148, column: 2, scope: !13725, inlinedAt: !14909)
!14915 = !DILocation(line: 148, column: 2, scope: !13728, inlinedAt: !14909)
!14916 = !DILocation(line: 160, column: 2, scope: !13707, inlinedAt: !14909)
!14917 = !DILocation(line: 857, column: 14, scope: !14891)
!14918 = !DILocation(line: 857, column: 2, scope: !14891)
!14919 = !DILocation(line: 0, scope: !14394, inlinedAt: !14920)
!14920 = distinct !DILocation(line: 858, column: 2, scope: !14891)
!14921 = !DILocation(line: 225, column: 2, scope: !14401, inlinedAt: !14920)
!14922 = !DILocation(line: 225, column: 2, scope: !14402, inlinedAt: !14920)
!14923 = !DILocation(line: 225, column: 2, scope: !14405, inlinedAt: !14920)
!14924 = !DILocation(line: 0, scope: !14385, inlinedAt: !14925)
!14925 = distinct !DILocation(line: 859, column: 9, scope: !14891)
!14926 = !DILocation(line: 0, scope: !14394, inlinedAt: !14927)
!14927 = distinct !DILocation(line: 195, column: 2, scope: !14385, inlinedAt: !14925)
!14928 = !DILocation(line: 225, column: 2, scope: !14401, inlinedAt: !14927)
!14929 = !DILocation(line: 225, column: 2, scope: !14402, inlinedAt: !14927)
!14930 = !DILocation(line: 225, column: 2, scope: !14405, inlinedAt: !14927)
!14931 = !DILocation(line: 196, column: 9, scope: !14385, inlinedAt: !14925)
!14932 = !DILocation(line: 859, column: 2, scope: !14891)
!14933 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2348, file: !2348, line: 862, type: !14934, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !14936)
!14934 = !DISubroutineType(types: !14935)
!14935 = !{!2240, !2271}
!14936 = !{!14937, !14938, !14939, !14941}
!14937 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14933, file: !2348, line: 862, type: !2271)
!14938 = !DILocalVariable(name: "thread", scope: !14933, file: !2348, line: 864, type: !2240)
!14939 = !DILocalVariable(name: "__i", scope: !14940, file: !2348, line: 866, type: !13699)
!14940 = distinct !DILexicalBlock(scope: !14933, file: !2348, line: 866, column: 2)
!14941 = !DILocalVariable(name: "__key", scope: !14940, file: !2348, line: 866, type: !13699)
!14942 = !DILocation(line: 0, scope: !14933)
!14943 = !DILocation(line: 0, scope: !14940)
!14944 = !DILocation(line: 0, scope: !13707, inlinedAt: !14945)
!14945 = distinct !DILocation(line: 866, column: 2, scope: !14940)
!14946 = !DILocation(line: 55, column: 2, scope: !13716, inlinedAt: !14947)
!14947 = distinct !DILocation(line: 145, column: 10, scope: !13707, inlinedAt: !14945)
!14948 = !DILocation(line: 0, scope: !13716, inlinedAt: !14947)
!14949 = !DILocation(line: 148, column: 2, scope: !13724, inlinedAt: !14945)
!14950 = !DILocation(line: 148, column: 2, scope: !13725, inlinedAt: !14945)
!14951 = !DILocation(line: 148, column: 2, scope: !13728, inlinedAt: !14945)
!14952 = !DILocation(line: 160, column: 2, scope: !13707, inlinedAt: !14945)
!14953 = !DILocation(line: 867, column: 12, scope: !14954)
!14954 = distinct !DILexicalBlock(scope: !14955, file: !2348, line: 866, column: 26)
!14955 = distinct !DILexicalBlock(scope: !14940, file: !2348, line: 866, column: 2)
!14956 = !DILocation(line: 869, column: 14, scope: !14957)
!14957 = distinct !DILexicalBlock(scope: !14954, file: !2348, line: 869, column: 7)
!14958 = !DILocation(line: 869, column: 7, scope: !14954)
!14959 = !DILocation(line: 870, column: 4, scope: !14960)
!14960 = distinct !DILexicalBlock(scope: !14957, file: !2348, line: 869, column: 23)
!14961 = !DILocation(line: 871, column: 3, scope: !14960)
!14962 = !DILocation(line: 0, scope: !13741, inlinedAt: !14963)
!14963 = distinct !DILocation(line: 866, column: 2, scope: !14955)
!14964 = !DILocation(line: 194, column: 2, scope: !13749, inlinedAt: !14963)
!14965 = !DILocation(line: 194, column: 2, scope: !13750, inlinedAt: !14963)
!14966 = !DILocation(line: 194, column: 2, scope: !13753, inlinedAt: !14963)
!14967 = !DILocation(line: 0, scope: !13755, inlinedAt: !14968)
!14968 = distinct !DILocation(line: 215, column: 2, scope: !13741, inlinedAt: !14963)
!14969 = !DILocation(line: 95, column: 2, scope: !13755, inlinedAt: !14968)
!14970 = !DILocation(line: 874, column: 2, scope: !14933)
!14971 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2348, file: !2348, line: 877, type: !14934, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !14972)
!14972 = !{!14973, !14974, !14975, !14977}
!14973 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14971, file: !2348, line: 877, type: !2271)
!14974 = !DILocalVariable(name: "thread", scope: !14971, file: !2348, line: 879, type: !2240)
!14975 = !DILocalVariable(name: "__i", scope: !14976, file: !2348, line: 881, type: !13699)
!14976 = distinct !DILexicalBlock(scope: !14971, file: !2348, line: 881, column: 2)
!14977 = !DILocalVariable(name: "__key", scope: !14976, file: !2348, line: 881, type: !13699)
!14978 = !DILocation(line: 0, scope: !14971)
!14979 = !DILocation(line: 0, scope: !14976)
!14980 = !DILocation(line: 0, scope: !13707, inlinedAt: !14981)
!14981 = distinct !DILocation(line: 881, column: 2, scope: !14976)
!14982 = !DILocation(line: 55, column: 2, scope: !13716, inlinedAt: !14983)
!14983 = distinct !DILocation(line: 145, column: 10, scope: !13707, inlinedAt: !14981)
!14984 = !DILocation(line: 0, scope: !13716, inlinedAt: !14983)
!14985 = !DILocation(line: 148, column: 2, scope: !13724, inlinedAt: !14981)
!14986 = !DILocation(line: 148, column: 2, scope: !13725, inlinedAt: !14981)
!14987 = !DILocation(line: 148, column: 2, scope: !13728, inlinedAt: !14981)
!14988 = !DILocation(line: 160, column: 2, scope: !13707, inlinedAt: !14981)
!14989 = !DILocation(line: 882, column: 12, scope: !14990)
!14990 = distinct !DILexicalBlock(scope: !14991, file: !2348, line: 881, column: 26)
!14991 = distinct !DILexicalBlock(scope: !14976, file: !2348, line: 881, column: 2)
!14992 = !DILocation(line: 884, column: 14, scope: !14993)
!14993 = distinct !DILexicalBlock(scope: !14990, file: !2348, line: 884, column: 7)
!14994 = !DILocation(line: 884, column: 7, scope: !14990)
!14995 = !DILocation(line: 885, column: 4, scope: !14996)
!14996 = distinct !DILexicalBlock(scope: !14993, file: !2348, line: 884, column: 23)
!14997 = !DILocation(line: 886, column: 10, scope: !14996)
!14998 = !DILocation(line: 887, column: 3, scope: !14996)
!14999 = !DILocation(line: 0, scope: !13741, inlinedAt: !15000)
!15000 = distinct !DILocation(line: 881, column: 2, scope: !14991)
!15001 = !DILocation(line: 194, column: 2, scope: !13749, inlinedAt: !15000)
!15002 = !DILocation(line: 194, column: 2, scope: !13750, inlinedAt: !15000)
!15003 = !DILocation(line: 194, column: 2, scope: !13753, inlinedAt: !15000)
!15004 = !DILocation(line: 0, scope: !13755, inlinedAt: !15005)
!15005 = distinct !DILocation(line: 215, column: 2, scope: !13741, inlinedAt: !15000)
!15006 = !DILocation(line: 95, column: 2, scope: !13755, inlinedAt: !15005)
!15007 = !DILocation(line: 890, column: 2, scope: !14971)
!15008 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2348, file: !2348, line: 893, type: !13665, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !15009)
!15009 = !{!15010}
!15010 = !DILocalVariable(name: "thread", arg: 1, scope: !15008, file: !2348, line: 893, type: !2240)
!15011 = !DILocation(line: 0, scope: !15008)
!15012 = !DILocation(line: 0, scope: !14816, inlinedAt: !15013)
!15013 = distinct !DILocation(line: 895, column: 2, scope: !15008)
!15014 = !DILocation(line: 0, scope: !14820, inlinedAt: !15013)
!15015 = !DILocation(line: 0, scope: !13707, inlinedAt: !15016)
!15016 = distinct !DILocation(line: 788, column: 2, scope: !14820, inlinedAt: !15013)
!15017 = !DILocation(line: 55, column: 2, scope: !13716, inlinedAt: !15018)
!15018 = distinct !DILocation(line: 145, column: 10, scope: !13707, inlinedAt: !15016)
!15019 = !DILocation(line: 0, scope: !13716, inlinedAt: !15018)
!15020 = !DILocation(line: 148, column: 2, scope: !13724, inlinedAt: !15016)
!15021 = !DILocation(line: 148, column: 2, scope: !13725, inlinedAt: !15016)
!15022 = !DILocation(line: 148, column: 2, scope: !13728, inlinedAt: !15016)
!15023 = !DILocation(line: 160, column: 2, scope: !13707, inlinedAt: !15016)
!15024 = !DILocation(line: 789, column: 3, scope: !14834, inlinedAt: !15013)
!15025 = !DILocation(line: 0, scope: !13741, inlinedAt: !15026)
!15026 = distinct !DILocation(line: 788, column: 2, scope: !14835, inlinedAt: !15013)
!15027 = !DILocation(line: 194, column: 2, scope: !13749, inlinedAt: !15026)
!15028 = !DILocation(line: 194, column: 2, scope: !13750, inlinedAt: !15026)
!15029 = !DILocation(line: 194, column: 2, scope: !13753, inlinedAt: !15026)
!15030 = !DILocation(line: 0, scope: !13755, inlinedAt: !15031)
!15031 = distinct !DILocation(line: 215, column: 2, scope: !13741, inlinedAt: !15026)
!15032 = !DILocation(line: 95, column: 2, scope: !13755, inlinedAt: !15031)
!15033 = !DILocation(line: 896, column: 8, scope: !15008)
!15034 = !DILocation(line: 897, column: 1, scope: !15008)
!15035 = distinct !DISubprogram(name: "z_set_prio", scope: !2348, file: !2348, line: 902, type: !14068, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !15036)
!15036 = !{!15037, !15038, !15039, !15040, !15042}
!15037 = !DILocalVariable(name: "thread", arg: 1, scope: !15035, file: !2348, line: 902, type: !2240)
!15038 = !DILocalVariable(name: "prio", arg: 2, scope: !15035, file: !2348, line: 902, type: !119)
!15039 = !DILocalVariable(name: "need_sched", scope: !15035, file: !2348, line: 904, type: !345)
!15040 = !DILocalVariable(name: "__i", scope: !15041, file: !2348, line: 906, type: !13699)
!15041 = distinct !DILexicalBlock(scope: !15035, file: !2348, line: 906, column: 2)
!15042 = !DILocalVariable(name: "__key", scope: !15041, file: !2348, line: 906, type: !13699)
!15043 = !DILocation(line: 0, scope: !15035)
!15044 = !DILocation(line: 0, scope: !15041)
!15045 = !DILocation(line: 0, scope: !13707, inlinedAt: !15046)
!15046 = distinct !DILocation(line: 906, column: 2, scope: !15041)
!15047 = !DILocation(line: 55, column: 2, scope: !13716, inlinedAt: !15048)
!15048 = distinct !DILocation(line: 145, column: 10, scope: !13707, inlinedAt: !15046)
!15049 = !DILocation(line: 0, scope: !13716, inlinedAt: !15048)
!15050 = !DILocation(line: 148, column: 2, scope: !13724, inlinedAt: !15046)
!15051 = !DILocation(line: 148, column: 2, scope: !13725, inlinedAt: !15046)
!15052 = !DILocation(line: 148, column: 2, scope: !13728, inlinedAt: !15046)
!15053 = !DILocation(line: 160, column: 2, scope: !13707, inlinedAt: !15046)
!15054 = !DILocation(line: 907, column: 16, scope: !15055)
!15055 = distinct !DILexicalBlock(scope: !15056, file: !2348, line: 906, column: 26)
!15056 = distinct !DILexicalBlock(scope: !15041, file: !2348, line: 906, column: 2)
!15057 = !DILocation(line: 909, column: 7, scope: !15055)
!15058 = !DILocation(line: 0, scope: !13899, inlinedAt: !15059)
!15059 = distinct !DILocation(line: 912, column: 5, scope: !15060)
!15060 = distinct !DILexicalBlock(scope: !15061, file: !2348, line: 911, column: 63)
!15061 = distinct !DILexicalBlock(scope: !15062, file: !2348, line: 911, column: 8)
!15062 = distinct !DILexicalBlock(scope: !15063, file: !2348, line: 909, column: 19)
!15063 = distinct !DILexicalBlock(scope: !15055, file: !2348, line: 909, column: 7)
!15064 = !DILocation(line: 266, column: 28, scope: !13899, inlinedAt: !15059)
!15065 = !DILocation(line: 0, scope: !13907, inlinedAt: !15066)
!15066 = distinct !DILocation(line: 268, column: 3, scope: !13911, inlinedAt: !15059)
!15067 = !DILocation(line: 234, column: 2, scope: !13907, inlinedAt: !15066)
!15068 = !DILocation(line: 913, column: 23, scope: !15060)
!15069 = !DILocation(line: 0, scope: !13916, inlinedAt: !15070)
!15070 = distinct !DILocation(line: 914, column: 5, scope: !15060)
!15071 = !DILocation(line: 252, column: 28, scope: !13916, inlinedAt: !15070)
!15072 = !DILocation(line: 0, scope: !13923, inlinedAt: !15073)
!15073 = distinct !DILocation(line: 254, column: 3, scope: !13927, inlinedAt: !15070)
!15074 = !DILocation(line: 0, scope: !13930, inlinedAt: !15075)
!15075 = distinct !DILocation(line: 229, column: 2, scope: !13923, inlinedAt: !15073)
!15076 = !DILocation(line: 186, column: 2, scope: !13940, inlinedAt: !15075)
!15077 = !DILocation(line: 186, column: 2, scope: !13941, inlinedAt: !15075)
!15078 = !DILocation(line: 186, column: 2, scope: !13944, inlinedAt: !15075)
!15079 = !DILocation(line: 188, column: 2, scope: !13946, inlinedAt: !15075)
!15080 = !DILocation(line: 188, column: 2, scope: !13948, inlinedAt: !15075)
!15081 = !DILocation(line: 0, scope: !13946, inlinedAt: !15075)
!15082 = !DILocation(line: 189, column: 7, scope: !13951, inlinedAt: !15075)
!15083 = !DILocation(line: 189, column: 35, scope: !13951, inlinedAt: !15075)
!15084 = !DILocation(line: 189, column: 7, scope: !13952, inlinedAt: !15075)
!15085 = !DILocation(line: 190, column: 4, scope: !13956, inlinedAt: !15075)
!15086 = !DILocation(line: 192, column: 4, scope: !13956, inlinedAt: !15075)
!15087 = distinct !{!15087, !15079, !15088}
!15088 = !DILocation(line: 194, column: 2, scope: !13946, inlinedAt: !15075)
!15089 = !DILocation(line: 196, column: 2, scope: !13930, inlinedAt: !15075)
!15090 = !DILocation(line: 197, column: 1, scope: !13930, inlinedAt: !15075)
!15091 = !DILocation(line: 918, column: 4, scope: !15062)
!15092 = !DILocation(line: 919, column: 3, scope: !15062)
!15093 = !DILocation(line: 920, column: 22, scope: !15094)
!15094 = distinct !DILexicalBlock(scope: !15063, file: !2348, line: 919, column: 10)
!15095 = !DILocation(line: 0, scope: !13741, inlinedAt: !15096)
!15096 = distinct !DILocation(line: 906, column: 2, scope: !15056)
!15097 = !DILocation(line: 194, column: 2, scope: !13749, inlinedAt: !15096)
!15098 = !DILocation(line: 194, column: 2, scope: !13750, inlinedAt: !15096)
!15099 = !DILocation(line: 194, column: 2, scope: !13753, inlinedAt: !15096)
!15100 = !DILocation(line: 0, scope: !13755, inlinedAt: !15101)
!15101 = distinct !DILocation(line: 215, column: 2, scope: !13741, inlinedAt: !15096)
!15102 = !DILocation(line: 95, column: 2, scope: !13755, inlinedAt: !15101)
!15103 = !DILocation(line: 926, column: 2, scope: !15035)
!15104 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2348, file: !2348, line: 929, type: !15105, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !15107)
!15105 = !DISubroutineType(types: !15106)
!15106 = !{null, !2240, !119}
!15107 = !{!15108, !15109, !15110}
!15108 = !DILocalVariable(name: "thread", arg: 1, scope: !15104, file: !2348, line: 929, type: !2240)
!15109 = !DILocalVariable(name: "prio", arg: 2, scope: !15104, file: !2348, line: 929, type: !119)
!15110 = !DILocalVariable(name: "need_sched", scope: !15104, file: !2348, line: 931, type: !345)
!15111 = !DILocation(line: 0, scope: !15104)
!15112 = !DILocation(line: 931, column: 20, scope: !15104)
!15113 = !DILocation(line: 935, column: 17, scope: !15114)
!15114 = distinct !DILexicalBlock(scope: !15104, file: !2348, line: 935, column: 6)
!15115 = !DILocation(line: 935, column: 20, scope: !15114)
!15116 = !DILocation(line: 935, column: 35, scope: !15114)
!15117 = !DILocation(line: 935, column: 48, scope: !15114)
!15118 = !DILocation(line: 935, column: 6, scope: !15104)
!15119 = !DILocation(line: 936, column: 3, scope: !15120)
!15120 = distinct !DILexicalBlock(scope: !15114, file: !2348, line: 935, column: 55)
!15121 = !DILocation(line: 937, column: 2, scope: !15120)
!15122 = !DILocation(line: 938, column: 1, scope: !15104)
!15123 = distinct !DISubprogram(name: "k_sched_lock", scope: !2348, file: !2348, line: 987, type: !2982, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !15124)
!15124 = !{!15125, !15127}
!15125 = !DILocalVariable(name: "__i", scope: !15126, file: !2348, line: 989, type: !13699)
!15126 = distinct !DILexicalBlock(scope: !15123, file: !2348, line: 989, column: 2)
!15127 = !DILocalVariable(name: "__key", scope: !15126, file: !2348, line: 989, type: !13699)
!15128 = !DILocation(line: 0, scope: !15126)
!15129 = !DILocation(line: 0, scope: !13707, inlinedAt: !15130)
!15130 = distinct !DILocation(line: 989, column: 2, scope: !15126)
!15131 = !DILocation(line: 55, column: 2, scope: !13716, inlinedAt: !15132)
!15132 = distinct !DILocation(line: 145, column: 10, scope: !13707, inlinedAt: !15130)
!15133 = !DILocation(line: 0, scope: !13716, inlinedAt: !15132)
!15134 = !DILocation(line: 148, column: 2, scope: !13724, inlinedAt: !15130)
!15135 = !DILocation(line: 148, column: 2, scope: !13725, inlinedAt: !15130)
!15136 = !DILocation(line: 148, column: 2, scope: !13728, inlinedAt: !15130)
!15137 = !DILocation(line: 160, column: 2, scope: !13707, inlinedAt: !15130)
!15138 = !DILocation(line: 992, column: 3, scope: !15139)
!15139 = distinct !DILexicalBlock(scope: !15140, file: !2348, line: 989, column: 26)
!15140 = distinct !DILexicalBlock(scope: !15126, file: !2348, line: 989, column: 2)
!15141 = !DILocation(line: 0, scope: !13741, inlinedAt: !15142)
!15142 = distinct !DILocation(line: 989, column: 2, scope: !15140)
!15143 = !DILocation(line: 194, column: 2, scope: !13749, inlinedAt: !15142)
!15144 = !DILocation(line: 194, column: 2, scope: !13750, inlinedAt: !15142)
!15145 = !DILocation(line: 194, column: 2, scope: !13753, inlinedAt: !15142)
!15146 = !DILocation(line: 0, scope: !13755, inlinedAt: !15147)
!15147 = distinct !DILocation(line: 215, column: 2, scope: !13741, inlinedAt: !15142)
!15148 = !DILocation(line: 95, column: 2, scope: !13755, inlinedAt: !15147)
!15149 = !DILocation(line: 994, column: 1, scope: !15123)
!15150 = distinct !DISubprogram(name: "z_sched_lock", scope: !12869, file: !12869, line: 251, type: !2982, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !2048)
!15151 = !DILocation(line: 1031, column: 3, scope: !14434, inlinedAt: !15152)
!15152 = distinct !DILocation(line: 48, column: 10, scope: !14438, inlinedAt: !15153)
!15153 = distinct !DILocation(line: 253, column: 2, scope: !15154)
!15154 = distinct !DILexicalBlock(scope: !15155, file: !12869, line: 253, column: 2)
!15155 = distinct !DILexicalBlock(scope: !15150, file: !12869, line: 253, column: 2)
!15156 = !DILocation(line: 0, scope: !14434, inlinedAt: !15152)
!15157 = !DILocation(line: 48, column: 9, scope: !14438, inlinedAt: !15153)
!15158 = !DILocation(line: 253, column: 2, scope: !15155)
!15159 = !DILocation(line: 253, column: 2, scope: !15160)
!15160 = distinct !DILexicalBlock(scope: !15154, file: !12869, line: 253, column: 2)
!15161 = !DILocation(line: 254, column: 2, scope: !15162)
!15162 = distinct !DILexicalBlock(scope: !15163, file: !12869, line: 254, column: 2)
!15163 = distinct !DILexicalBlock(scope: !15150, file: !12869, line: 254, column: 2)
!15164 = !DILocation(line: 254, column: 2, scope: !15163)
!15165 = !DILocation(line: 254, column: 2, scope: !15166)
!15166 = distinct !DILexicalBlock(scope: !15162, file: !12869, line: 254, column: 2)
!15167 = !DILocation(line: 256, column: 2, scope: !15150)
!15168 = !DILocation(line: 258, column: 2, scope: !15169)
!15169 = distinct !DILexicalBlock(scope: !15150, file: !12869, line: 258, column: 2)
!15170 = !{i64 2154285592}
!15171 = !DILocation(line: 259, column: 1, scope: !15150)
!15172 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2348, file: !2348, line: 996, type: !2982, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !15173)
!15173 = !{!15174, !15176}
!15174 = !DILocalVariable(name: "__i", scope: !15175, file: !2348, line: 998, type: !13699)
!15175 = distinct !DILexicalBlock(scope: !15172, file: !2348, line: 998, column: 2)
!15176 = !DILocalVariable(name: "__key", scope: !15175, file: !2348, line: 998, type: !13699)
!15177 = !DILocation(line: 0, scope: !15175)
!15178 = !DILocation(line: 0, scope: !13707, inlinedAt: !15179)
!15179 = distinct !DILocation(line: 998, column: 2, scope: !15175)
!15180 = !DILocation(line: 55, column: 2, scope: !13716, inlinedAt: !15181)
!15181 = distinct !DILocation(line: 145, column: 10, scope: !13707, inlinedAt: !15179)
!15182 = !DILocation(line: 0, scope: !13716, inlinedAt: !15181)
!15183 = !DILocation(line: 148, column: 2, scope: !13724, inlinedAt: !15179)
!15184 = !DILocation(line: 148, column: 2, scope: !13725, inlinedAt: !15179)
!15185 = !DILocation(line: 148, column: 2, scope: !13728, inlinedAt: !15179)
!15186 = !DILocation(line: 160, column: 2, scope: !13707, inlinedAt: !15179)
!15187 = !DILocation(line: 999, column: 3, scope: !15188)
!15188 = distinct !DILexicalBlock(scope: !15189, file: !2348, line: 999, column: 3)
!15189 = distinct !DILexicalBlock(scope: !15190, file: !2348, line: 999, column: 3)
!15190 = distinct !DILexicalBlock(scope: !15191, file: !2348, line: 998, column: 26)
!15191 = distinct !DILexicalBlock(scope: !15175, file: !2348, line: 998, column: 2)
!15192 = !DILocation(line: 999, column: 3, scope: !15189)
!15193 = !DILocation(line: 999, column: 3, scope: !15194)
!15194 = distinct !DILexicalBlock(scope: !15188, file: !2348, line: 999, column: 3)
!15195 = !DILocation(line: 1031, column: 3, scope: !14434, inlinedAt: !15196)
!15196 = distinct !DILocation(line: 48, column: 10, scope: !14438, inlinedAt: !15197)
!15197 = distinct !DILocation(line: 1000, column: 3, scope: !15198)
!15198 = distinct !DILexicalBlock(scope: !15199, file: !2348, line: 1000, column: 3)
!15199 = distinct !DILexicalBlock(scope: !15190, file: !2348, line: 1000, column: 3)
!15200 = !DILocation(line: 0, scope: !14434, inlinedAt: !15196)
!15201 = !DILocation(line: 48, column: 9, scope: !14438, inlinedAt: !15197)
!15202 = !DILocation(line: 1000, column: 3, scope: !15199)
!15203 = !DILocation(line: 1000, column: 3, scope: !15204)
!15204 = distinct !DILexicalBlock(scope: !15198, file: !2348, line: 1000, column: 3)
!15205 = !DILocation(line: 1002, column: 5, scope: !15190)
!15206 = !DILocation(line: 1002, column: 20, scope: !15190)
!15207 = !DILocation(line: 1002, column: 3, scope: !15190)
!15208 = !DILocation(line: 1003, column: 3, scope: !15190)
!15209 = !DILocation(line: 0, scope: !13741, inlinedAt: !15210)
!15210 = distinct !DILocation(line: 998, column: 2, scope: !15191)
!15211 = !DILocation(line: 194, column: 2, scope: !13749, inlinedAt: !15210)
!15212 = !DILocation(line: 194, column: 2, scope: !13750, inlinedAt: !15210)
!15213 = !DILocation(line: 194, column: 2, scope: !13753, inlinedAt: !15210)
!15214 = !DILocation(line: 0, scope: !13755, inlinedAt: !15215)
!15215 = distinct !DILocation(line: 215, column: 2, scope: !13741, inlinedAt: !15210)
!15216 = !DILocation(line: 95, column: 2, scope: !13755, inlinedAt: !15215)
!15217 = !DILocation(line: 1011, column: 2, scope: !15172)
!15218 = !DILocation(line: 1012, column: 1, scope: !15172)
!15219 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2348, file: !2348, line: 1014, type: !14056, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !2048)
!15220 = !DILocation(line: 1028, column: 25, scope: !15219)
!15221 = !DILocation(line: 1028, column: 2, scope: !15219)
!15222 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2348, file: !2348, line: 1155, type: !15223, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !15225)
!15223 = !DISubroutineType(types: !15224)
!15224 = !{!345, !2269, !2269}
!15225 = !{!15226, !15227, !15228, !15229, !15230}
!15226 = !DILocalVariable(name: "a", arg: 1, scope: !15222, file: !2348, line: 1155, type: !2269)
!15227 = !DILocalVariable(name: "b", arg: 2, scope: !15222, file: !2348, line: 1155, type: !2269)
!15228 = !DILocalVariable(name: "thread_a", scope: !15222, file: !2348, line: 1157, type: !2240)
!15229 = !DILocalVariable(name: "thread_b", scope: !15222, file: !2348, line: 1157, type: !2240)
!15230 = !DILocalVariable(name: "cmp", scope: !15222, file: !2348, line: 1158, type: !742)
!15231 = !DILocation(line: 0, scope: !15222)
!15232 = !DILocation(line: 1160, column: 13, scope: !15222)
!15233 = !DILocation(line: 1161, column: 13, scope: !15222)
!15234 = !DILocation(line: 1163, column: 8, scope: !15222)
!15235 = !DILocation(line: 1165, column: 10, scope: !15236)
!15236 = distinct !DILexicalBlock(scope: !15222, file: !2348, line: 1165, column: 6)
!15237 = !DILocation(line: 1165, column: 6, scope: !15222)
!15238 = !DILocation(line: 1167, column: 17, scope: !15239)
!15239 = distinct !DILexicalBlock(scope: !15236, file: !2348, line: 1167, column: 13)
!15240 = !DILocation(line: 1167, column: 13, scope: !15236)
!15241 = !DILocation(line: 1170, column: 25, scope: !15242)
!15242 = distinct !DILexicalBlock(scope: !15239, file: !2348, line: 1169, column: 9)
!15243 = !DILocation(line: 1170, column: 52, scope: !15242)
!15244 = !DILocation(line: 1170, column: 35, scope: !15242)
!15245 = !DILocation(line: 1170, column: 3, scope: !15242)
!15246 = !DILocation(line: 0, scope: !15236)
!15247 = !DILocation(line: 1173, column: 1, scope: !15222)
!15248 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2348, file: !2348, line: 1175, type: !15249, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !15264)
!15249 = !DISubroutineType(types: !15250)
!15250 = !{null, !15251, !2240}
!15251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15252, size: 32)
!15252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !15253, line: 37, size: 128, elements: !15254)
!15253 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15254 = !{!15255, !15263}
!15255 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !15252, file: !15253, line: 38, baseType: !15256, size: 96)
!15256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !169, line: 83, size: 96, elements: !15257)
!15257 = !{!15258, !15259, !15262}
!15258 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !15256, file: !169, line: 84, baseType: !2269, size: 32)
!15259 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !15256, file: !169, line: 85, baseType: !15260, size: 32, offset: 32)
!15260 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !169, line: 81, baseType: !15261)
!15261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15223, size: 32)
!15262 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !15256, file: !169, line: 86, baseType: !119, size: 32, offset: 64)
!15263 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !15252, file: !15253, line: 39, baseType: !119, size: 32, offset: 96)
!15264 = !{!15265, !15266, !15267, !15268, !15277}
!15265 = !DILocalVariable(name: "pq", arg: 1, scope: !15248, file: !2348, line: 1175, type: !15251)
!15266 = !DILocalVariable(name: "thread", arg: 2, scope: !15248, file: !2348, line: 1175, type: !2240)
!15267 = !DILocalVariable(name: "t", scope: !15248, file: !2348, line: 1177, type: !2240)
!15268 = !DILocalVariable(name: "__f", scope: !15269, file: !2348, line: 1190, type: !15272)
!15269 = distinct !DILexicalBlock(scope: !15270, file: !2348, line: 1190, column: 3)
!15270 = distinct !DILexicalBlock(scope: !15271, file: !2348, line: 1189, column: 27)
!15271 = distinct !DILexicalBlock(scope: !15248, file: !2348, line: 1189, column: 6)
!15272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !169, line: 155, size: 96, elements: !15273)
!15273 = !{!15274, !15275, !15276}
!15274 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !15272, file: !169, line: 156, baseType: !2343, size: 32)
!15275 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !15272, file: !169, line: 157, baseType: !284, size: 32, offset: 32)
!15276 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !15272, file: !169, line: 158, baseType: !742, size: 32, offset: 64)
!15277 = !DILocalVariable(name: "n", scope: !15278, file: !2348, line: 1190, type: !2269)
!15278 = distinct !DILexicalBlock(scope: !15279, file: !2348, line: 1190, column: 3)
!15279 = distinct !DILexicalBlock(scope: !15269, file: !2348, line: 1190, column: 3)
!15280 = !DILocation(line: 0, scope: !15248)
!15281 = !DILocation(line: 1179, column: 2, scope: !15282)
!15282 = distinct !DILexicalBlock(scope: !15283, file: !2348, line: 1179, column: 2)
!15283 = distinct !DILexicalBlock(scope: !15248, file: !2348, line: 1179, column: 2)
!15284 = !DILocation(line: 1179, column: 2, scope: !15283)
!15285 = !DILocation(line: 1179, column: 2, scope: !15286)
!15286 = distinct !DILexicalBlock(scope: !15282, file: !2348, line: 1179, column: 2)
!15287 = !DILocation(line: 1181, column: 31, scope: !15248)
!15288 = !DILocation(line: 1181, column: 45, scope: !15248)
!15289 = !DILocation(line: 1181, column: 15, scope: !15248)
!15290 = !DILocation(line: 1181, column: 25, scope: !15248)
!15291 = !DILocation(line: 1189, column: 11, scope: !15271)
!15292 = !DILocation(line: 1189, column: 7, scope: !15271)
!15293 = !DILocation(line: 1189, column: 6, scope: !15248)
!15294 = !DILocation(line: 1190, column: 3, scope: !15269)
!15295 = !DILocation(line: 1190, column: 3, scope: !15278)
!15296 = !DILocation(line: 0, scope: !15278)
!15297 = !DILocation(line: 1190, column: 3, scope: !15279)
!15298 = !DILocation(line: 1193, column: 2, scope: !15270)
!15299 = !DILocation(line: 1191, column: 42, scope: !15300)
!15300 = distinct !DILexicalBlock(scope: !15279, file: !2348, line: 1190, column: 54)
!15301 = !DILocation(line: 1191, column: 12, scope: !15300)
!15302 = !DILocation(line: 1191, column: 22, scope: !15300)
!15303 = distinct !{!15303, !15294, !15304}
!15304 = !DILocation(line: 1192, column: 3, scope: !15269)
!15305 = !DILocation(line: 1195, column: 17, scope: !15248)
!15306 = !DILocation(line: 1195, column: 37, scope: !15248)
!15307 = !DILocation(line: 1195, column: 2, scope: !15248)
!15308 = !DILocation(line: 1196, column: 1, scope: !15248)
!15309 = !DISubprogram(name: "z_rb_foreach_next", scope: !169, file: !169, line: 176, type: !15310, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2048)
!15310 = !DISubroutineType(types: !15311)
!15311 = !{!2269, !15312, !15313}
!15312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15256, size: 32)
!15313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15272, size: 32)
!15314 = !DISubprogram(name: "rb_insert", scope: !169, file: !169, line: 105, type: !15315, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2048)
!15315 = !DISubroutineType(types: !15316)
!15316 = !{null, !15312, !2269}
!15317 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2348, file: !2348, line: 1198, type: !15249, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !15318)
!15318 = !{!15319, !15320}
!15319 = !DILocalVariable(name: "pq", arg: 1, scope: !15317, file: !2348, line: 1198, type: !15251)
!15320 = !DILocalVariable(name: "thread", arg: 2, scope: !15317, file: !2348, line: 1198, type: !2240)
!15321 = !DILocation(line: 0, scope: !15317)
!15322 = !DILocation(line: 1200, column: 2, scope: !15323)
!15323 = distinct !DILexicalBlock(scope: !15324, file: !2348, line: 1200, column: 2)
!15324 = distinct !DILexicalBlock(scope: !15317, file: !2348, line: 1200, column: 2)
!15325 = !DILocation(line: 1200, column: 2, scope: !15324)
!15326 = !DILocation(line: 1200, column: 2, scope: !15327)
!15327 = distinct !DILexicalBlock(scope: !15323, file: !2348, line: 1200, column: 2)
!15328 = !DILocation(line: 1202, column: 17, scope: !15317)
!15329 = !DILocation(line: 1202, column: 37, scope: !15317)
!15330 = !DILocation(line: 1202, column: 2, scope: !15317)
!15331 = !DILocation(line: 1204, column: 16, scope: !15332)
!15332 = distinct !DILexicalBlock(scope: !15317, file: !2348, line: 1204, column: 6)
!15333 = !DILocation(line: 1204, column: 7, scope: !15332)
!15334 = !DILocation(line: 1204, column: 6, scope: !15317)
!15335 = !DILocation(line: 1205, column: 7, scope: !15336)
!15336 = distinct !DILexicalBlock(scope: !15332, file: !2348, line: 1204, column: 22)
!15337 = !DILocation(line: 1205, column: 22, scope: !15336)
!15338 = !DILocation(line: 1206, column: 2, scope: !15336)
!15339 = !DILocation(line: 1207, column: 1, scope: !15317)
!15340 = !DISubprogram(name: "rb_remove", scope: !169, file: !169, line: 110, type: !15315, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2048)
!15341 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2348, file: !2348, line: 1209, type: !15342, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !15344)
!15342 = !DISubroutineType(types: !15343)
!15343 = !{!2240, !15251}
!15344 = !{!15345, !15346, !15347}
!15345 = !DILocalVariable(name: "pq", arg: 1, scope: !15341, file: !2348, line: 1209, type: !15251)
!15346 = !DILocalVariable(name: "thread", scope: !15341, file: !2348, line: 1211, type: !2240)
!15347 = !DILocalVariable(name: "n", scope: !15341, file: !2348, line: 1212, type: !2269)
!15348 = !DILocation(line: 0, scope: !15341)
!15349 = !DILocation(line: 1212, column: 37, scope: !15341)
!15350 = !DILocation(line: 1212, column: 21, scope: !15341)
!15351 = !DILocation(line: 1217, column: 2, scope: !15341)
!15352 = distinct !DISubprogram(name: "rb_get_min", scope: !169, file: !169, line: 115, type: !15353, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !15355)
!15353 = !DISubroutineType(types: !15354)
!15354 = !{!2269, !15312}
!15355 = !{!15356}
!15356 = !DILocalVariable(name: "tree", arg: 1, scope: !15352, file: !169, line: 115, type: !15312)
!15357 = !DILocation(line: 0, scope: !15352)
!15358 = !DILocation(line: 117, column: 9, scope: !15352)
!15359 = !DILocation(line: 117, column: 2, scope: !15352)
!15360 = !DISubprogram(name: "z_rb_get_minmax", scope: !169, file: !169, line: 100, type: !15361, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2048)
!15361 = !DISubroutineType(types: !15362)
!15362 = !{!2269, !15312, !185}
!15363 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2348, file: !2348, line: 1246, type: !15364, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !15372)
!15364 = !DISubroutineType(types: !15365)
!15365 = !{!2240, !15366}
!15366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15367, size: 32)
!15367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !15253, line: 53, size: 2080, elements: !15368)
!15368 = !{!15369, !15371}
!15369 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !15367, file: !15253, line: 54, baseType: !15370, size: 2048)
!15370 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2276, size: 2048, elements: !231)
!15371 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !15367, file: !15253, line: 55, baseType: !32, size: 32, offset: 2048)
!15372 = !{!15373, !15374, !15375, !15376}
!15373 = !DILocalVariable(name: "pq", arg: 1, scope: !15363, file: !2348, line: 1246, type: !15366)
!15374 = !DILocalVariable(name: "thread", scope: !15363, file: !2348, line: 1252, type: !2240)
!15375 = !DILocalVariable(name: "l", scope: !15363, file: !2348, line: 1253, type: !13933)
!15376 = !DILocalVariable(name: "n", scope: !15363, file: !2348, line: 1254, type: !2344)
!15377 = !DILocation(line: 0, scope: !15363)
!15378 = !DILocation(line: 1248, column: 11, scope: !15379)
!15379 = distinct !DILexicalBlock(scope: !15363, file: !2348, line: 1248, column: 6)
!15380 = !DILocation(line: 1248, column: 7, scope: !15379)
!15381 = !DILocation(line: 1248, column: 6, scope: !15363)
!15382 = !DILocation(line: 1253, column: 31, scope: !15363)
!15383 = !DILocation(line: 1253, column: 20, scope: !15363)
!15384 = !DILocation(line: 1254, column: 19, scope: !15363)
!15385 = !DILocation(line: 1260, column: 1, scope: !15363)
!15386 = distinct !DISubprogram(name: "z_unpend_all", scope: !2348, file: !2348, line: 1262, type: !15387, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !15389)
!15387 = !DISubroutineType(types: !15388)
!15388 = !{!119, !2271}
!15389 = !{!15390, !15391, !15392}
!15390 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15386, file: !2348, line: 1262, type: !2271)
!15391 = !DILocalVariable(name: "need_sched", scope: !15386, file: !2348, line: 1264, type: !119)
!15392 = !DILocalVariable(name: "thread", scope: !15386, file: !2348, line: 1265, type: !2240)
!15393 = !DILocation(line: 0, scope: !15386)
!15394 = !DILocation(line: 1267, column: 19, scope: !15386)
!15395 = !DILocation(line: 1267, column: 41, scope: !15386)
!15396 = !DILocation(line: 1267, column: 2, scope: !15386)
!15397 = !DILocation(line: 1268, column: 3, scope: !15398)
!15398 = distinct !DILexicalBlock(scope: !15386, file: !2348, line: 1267, column: 50)
!15399 = !DILocation(line: 1269, column: 3, scope: !15398)
!15400 = distinct !{!15400, !15396, !15401}
!15401 = !DILocation(line: 1271, column: 2, scope: !15386)
!15402 = !DILocation(line: 1273, column: 2, scope: !15386)
!15403 = distinct !DISubprogram(name: "z_waitq_head", scope: !13230, file: !13230, line: 52, type: !14934, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !15404)
!15404 = !{!15405}
!15405 = !DILocalVariable(name: "w", arg: 1, scope: !15403, file: !13230, line: 52, type: !2271)
!15406 = !DILocation(line: 0, scope: !15403)
!15407 = !DILocation(line: 54, column: 52, scope: !15403)
!15408 = !DILocation(line: 54, column: 28, scope: !15403)
!15409 = !DILocation(line: 54, column: 9, scope: !15403)
!15410 = !DILocation(line: 54, column: 2, scope: !15403)
!15411 = distinct !DISubprogram(name: "init_ready_q", scope: !2348, file: !2348, line: 1276, type: !15412, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !15419)
!15412 = !DISubroutineType(types: !15413)
!15413 = !{null, !15414}
!15414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15415, size: 32)
!15415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !179, line: 83, size: 96, elements: !15416)
!15416 = !{!15417, !15418}
!15417 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !15415, file: !179, line: 86, baseType: !2240, size: 32)
!15418 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !15415, file: !179, line: 90, baseType: !2276, size: 64, offset: 32)
!15419 = !{!15420}
!15420 = !DILocalVariable(name: "rq", arg: 1, scope: !15411, file: !2348, line: 1276, type: !15414)
!15421 = !DILocation(line: 0, scope: !15411)
!15422 = !DILocation(line: 1289, column: 22, scope: !15411)
!15423 = !DILocation(line: 1289, column: 2, scope: !15411)
!15424 = !DILocation(line: 1291, column: 1, scope: !15411)
!15425 = distinct !DISubprogram(name: "sys_dlist_init", scope: !153, file: !153, line: 197, type: !15426, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !15428)
!15426 = !DISubroutineType(types: !15427)
!15427 = !{null, !13933}
!15428 = !{!15429}
!15429 = !DILocalVariable(name: "list", arg: 1, scope: !15425, file: !153, line: 197, type: !13933)
!15430 = !DILocation(line: 0, scope: !15425)
!15431 = !DILocation(line: 199, column: 8, scope: !15425)
!15432 = !DILocation(line: 199, column: 13, scope: !15425)
!15433 = !DILocation(line: 200, column: 8, scope: !15425)
!15434 = !DILocation(line: 200, column: 13, scope: !15425)
!15435 = !DILocation(line: 201, column: 1, scope: !15425)
!15436 = distinct !DISubprogram(name: "z_sched_init", scope: !2348, file: !2348, line: 1293, type: !2982, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !2048)
!15437 = !DILocation(line: 1302, column: 2, scope: !15436)
!15438 = !DILocation(line: 1306, column: 2, scope: !15436)
!15439 = !DILocation(line: 1309, column: 1, scope: !15436)
!15440 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2348, file: !2348, line: 1311, type: !15441, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !15444)
!15441 = !DISubroutineType(types: !15442)
!15442 = !{!119, !15443}
!15443 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !143, line: 347, baseType: !2240)
!15444 = !{!15445}
!15445 = !DILocalVariable(name: "thread", arg: 1, scope: !15440, file: !2348, line: 1311, type: !15443)
!15446 = !DILocation(line: 0, scope: !15440)
!15447 = !DILocation(line: 1313, column: 22, scope: !15440)
!15448 = !DILocation(line: 1313, column: 9, scope: !15440)
!15449 = !DILocation(line: 1313, column: 2, scope: !15440)
!15450 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2348, file: !2348, line: 1325, type: !15451, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !15453)
!15451 = !DISubroutineType(types: !15452)
!15452 = !{null, !15443, !119}
!15453 = !{!15454, !15455, !15456}
!15454 = !DILocalVariable(name: "thread", arg: 1, scope: !15450, file: !2348, line: 1325, type: !15443)
!15455 = !DILocalVariable(name: "prio", arg: 2, scope: !15450, file: !2348, line: 1325, type: !119)
!15456 = !DILocalVariable(name: "th", scope: !15450, file: !2348, line: 1334, type: !2240)
!15457 = !DILocation(line: 0, scope: !15450)
!15458 = !DILocation(line: 1331, column: 2, scope: !15459)
!15459 = distinct !DILexicalBlock(scope: !15460, file: !2348, line: 1331, column: 2)
!15460 = distinct !DILexicalBlock(scope: !15461, file: !2348, line: 1331, column: 2)
!15461 = distinct !DILexicalBlock(scope: !15450, file: !2348, line: 1331, column: 2)
!15462 = !DILocation(line: 1331, column: 2, scope: !15463)
!15463 = distinct !DILexicalBlock(scope: !15459, file: !2348, line: 1331, column: 2)
!15464 = !DILocation(line: 1031, column: 3, scope: !14434, inlinedAt: !15465)
!15465 = distinct !DILocation(line: 48, column: 10, scope: !14438, inlinedAt: !15466)
!15466 = distinct !DILocation(line: 1332, column: 2, scope: !15467)
!15467 = distinct !DILexicalBlock(scope: !15468, file: !2348, line: 1332, column: 2)
!15468 = distinct !DILexicalBlock(scope: !15450, file: !2348, line: 1332, column: 2)
!15469 = !DILocation(line: 0, scope: !14434, inlinedAt: !15465)
!15470 = !DILocation(line: 48, column: 9, scope: !14438, inlinedAt: !15466)
!15471 = !DILocation(line: 1332, column: 2, scope: !15468)
!15472 = !DILocation(line: 1332, column: 2, scope: !15473)
!15473 = distinct !DILexicalBlock(scope: !15467, file: !2348, line: 1332, column: 2)
!15474 = !DILocation(line: 1336, column: 2, scope: !15450)
!15475 = !DILocation(line: 1337, column: 1, scope: !15450)
!15476 = distinct !DISubprogram(name: "k_can_yield", scope: !2348, file: !2348, line: 1384, type: !7385, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !2048)
!15477 = !DILocation(line: 1386, column: 11, scope: !15476)
!15478 = !DILocation(line: 1386, column: 29, scope: !15476)
!15479 = !DILocation(line: 1386, column: 32, scope: !15476)
!15480 = !DILocation(line: 1386, column: 46, scope: !15476)
!15481 = !DILocation(line: 1387, column: 28, scope: !15476)
!15482 = !DILocation(line: 1387, column: 4, scope: !15476)
!15483 = !DILocation(line: 1386, column: 2, scope: !15476)
!15484 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !245, file: !245, line: 989, type: !7385, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !2048)
!15485 = !DILocation(line: 993, column: 10, scope: !15484)
!15486 = !DILocation(line: 993, column: 2, scope: !15484)
!15487 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2348, file: !2348, line: 1390, type: !2982, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !15488)
!15488 = !{!15489}
!15489 = !DILocalVariable(name: "key", scope: !15487, file: !2348, line: 1396, type: !13699)
!15490 = !DILocation(line: 1031, column: 3, scope: !14434, inlinedAt: !15491)
!15491 = distinct !DILocation(line: 48, column: 10, scope: !14438, inlinedAt: !15492)
!15492 = distinct !DILocation(line: 1392, column: 2, scope: !15493)
!15493 = distinct !DILexicalBlock(scope: !15494, file: !2348, line: 1392, column: 2)
!15494 = distinct !DILexicalBlock(scope: !15487, file: !2348, line: 1392, column: 2)
!15495 = !DILocation(line: 0, scope: !14434, inlinedAt: !15491)
!15496 = !DILocation(line: 48, column: 9, scope: !14438, inlinedAt: !15492)
!15497 = !DILocation(line: 1392, column: 2, scope: !15494)
!15498 = !DILocation(line: 1392, column: 2, scope: !15499)
!15499 = distinct !DILexicalBlock(scope: !15493, file: !2348, line: 1392, column: 2)
!15500 = !DILocation(line: 0, scope: !13707, inlinedAt: !15501)
!15501 = distinct !DILocation(line: 1396, column: 25, scope: !15487)
!15502 = !DILocation(line: 55, column: 2, scope: !13716, inlinedAt: !15503)
!15503 = distinct !DILocation(line: 145, column: 10, scope: !13707, inlinedAt: !15501)
!15504 = !DILocation(line: 0, scope: !13716, inlinedAt: !15503)
!15505 = !DILocation(line: 148, column: 2, scope: !13724, inlinedAt: !15501)
!15506 = !DILocation(line: 148, column: 2, scope: !13725, inlinedAt: !15501)
!15507 = !DILocation(line: 148, column: 2, scope: !13728, inlinedAt: !15501)
!15508 = !DILocation(line: 160, column: 2, scope: !13707, inlinedAt: !15501)
!15509 = !DILocation(line: 0, scope: !15487)
!15510 = !DILocation(line: 1400, column: 18, scope: !15511)
!15511 = distinct !DILexicalBlock(scope: !15512, file: !2348, line: 1399, column: 36)
!15512 = distinct !DILexicalBlock(scope: !15487, file: !2348, line: 1398, column: 6)
!15513 = !DILocation(line: 0, scope: !13899, inlinedAt: !15514)
!15514 = distinct !DILocation(line: 1400, column: 3, scope: !15511)
!15515 = !DILocation(line: 266, column: 15, scope: !13899, inlinedAt: !15514)
!15516 = !DILocation(line: 266, column: 28, scope: !13899, inlinedAt: !15514)
!15517 = !DILocation(line: 0, scope: !13907, inlinedAt: !15518)
!15518 = distinct !DILocation(line: 268, column: 3, scope: !13911, inlinedAt: !15514)
!15519 = !DILocation(line: 234, column: 2, scope: !13907, inlinedAt: !15518)
!15520 = !DILocation(line: 1402, column: 15, scope: !15487)
!15521 = !DILocation(line: 0, scope: !13916, inlinedAt: !15522)
!15522 = distinct !DILocation(line: 1402, column: 2, scope: !15487)
!15523 = !DILocation(line: 252, column: 15, scope: !13916, inlinedAt: !15522)
!15524 = !DILocation(line: 252, column: 28, scope: !13916, inlinedAt: !15522)
!15525 = !DILocation(line: 0, scope: !13923, inlinedAt: !15526)
!15526 = distinct !DILocation(line: 254, column: 3, scope: !13927, inlinedAt: !15522)
!15527 = !DILocation(line: 0, scope: !13930, inlinedAt: !15528)
!15528 = distinct !DILocation(line: 229, column: 2, scope: !13923, inlinedAt: !15526)
!15529 = !DILocation(line: 186, column: 2, scope: !13940, inlinedAt: !15528)
!15530 = !DILocation(line: 186, column: 2, scope: !13941, inlinedAt: !15528)
!15531 = !DILocation(line: 186, column: 2, scope: !13944, inlinedAt: !15528)
!15532 = !DILocation(line: 188, column: 2, scope: !13946, inlinedAt: !15528)
!15533 = !DILocation(line: 188, column: 2, scope: !13948, inlinedAt: !15528)
!15534 = !DILocation(line: 0, scope: !13946, inlinedAt: !15528)
!15535 = !DILocation(line: 189, column: 7, scope: !13951, inlinedAt: !15528)
!15536 = !DILocation(line: 189, column: 35, scope: !13951, inlinedAt: !15528)
!15537 = !DILocation(line: 189, column: 7, scope: !13952, inlinedAt: !15528)
!15538 = !DILocation(line: 191, column: 21, scope: !13956, inlinedAt: !15528)
!15539 = !DILocation(line: 190, column: 4, scope: !13956, inlinedAt: !15528)
!15540 = !DILocation(line: 192, column: 4, scope: !13956, inlinedAt: !15528)
!15541 = distinct !{!15541, !15532, !15542}
!15542 = !DILocation(line: 194, column: 2, scope: !13946, inlinedAt: !15528)
!15543 = !DILocation(line: 196, column: 37, scope: !13930, inlinedAt: !15528)
!15544 = !DILocation(line: 196, column: 2, scope: !13930, inlinedAt: !15528)
!15545 = !DILocation(line: 197, column: 1, scope: !13930, inlinedAt: !15528)
!15546 = !DILocation(line: 1403, column: 2, scope: !15487)
!15547 = !DILocation(line: 0, scope: !14385, inlinedAt: !15548)
!15548 = distinct !DILocation(line: 1404, column: 2, scope: !15487)
!15549 = !DILocation(line: 0, scope: !14394, inlinedAt: !15550)
!15550 = distinct !DILocation(line: 195, column: 2, scope: !14385, inlinedAt: !15548)
!15551 = !DILocation(line: 225, column: 2, scope: !14401, inlinedAt: !15550)
!15552 = !DILocation(line: 225, column: 2, scope: !14402, inlinedAt: !15550)
!15553 = !DILocation(line: 225, column: 2, scope: !14405, inlinedAt: !15550)
!15554 = !DILocation(line: 196, column: 9, scope: !14385, inlinedAt: !15548)
!15555 = !DILocation(line: 1405, column: 1, scope: !15487)
!15556 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2348, file: !2348, line: 1459, type: !15557, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !15559)
!15557 = !DISubroutineType(types: !15558)
!15558 = !{!742, !14595}
!15559 = !{!15560, !15561, !15562}
!15560 = !DILocalVariable(name: "timeout", arg: 1, scope: !15556, file: !2348, line: 1459, type: !14595)
!15561 = !DILocalVariable(name: "ticks", scope: !15556, file: !2348, line: 1461, type: !114)
!15562 = !DILocalVariable(name: "ret", scope: !15556, file: !2348, line: 1480, type: !742)
!15563 = !DILocation(line: 0, scope: !15556)
!15564 = !DILocation(line: 1031, column: 3, scope: !14434, inlinedAt: !15565)
!15565 = distinct !DILocation(line: 48, column: 10, scope: !14438, inlinedAt: !15566)
!15566 = distinct !DILocation(line: 1463, column: 2, scope: !15567)
!15567 = distinct !DILexicalBlock(scope: !15568, file: !2348, line: 1463, column: 2)
!15568 = distinct !DILexicalBlock(scope: !15556, file: !2348, line: 1463, column: 2)
!15569 = !DILocation(line: 0, scope: !14434, inlinedAt: !15565)
!15570 = !DILocation(line: 48, column: 9, scope: !14438, inlinedAt: !15566)
!15571 = !DILocation(line: 1463, column: 2, scope: !15568)
!15572 = !DILocation(line: 1463, column: 2, scope: !15573)
!15573 = distinct !DILexicalBlock(scope: !15567, file: !2348, line: 1463, column: 2)
!15574 = !DILocation(line: 1468, column: 6, scope: !15575)
!15575 = distinct !DILexicalBlock(scope: !15556, file: !2348, line: 1468, column: 6)
!15576 = !DILocation(line: 1468, column: 6, scope: !15556)
!15577 = !DILocation(line: 1469, column: 20, scope: !15578)
!15578 = distinct !DILexicalBlock(scope: !15575, file: !2348, line: 1468, column: 40)
!15579 = !DILocation(line: 1469, column: 3, scope: !15578)
!15580 = !DILocation(line: 1473, column: 3, scope: !15578)
!15581 = !DILocation(line: 1478, column: 10, scope: !15556)
!15582 = !DILocation(line: 1480, column: 16, scope: !15556)
!15583 = !DILocation(line: 1485, column: 1, scope: !15556)
!15584 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3233, file: !3233, line: 310, type: !15585, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !15587)
!15585 = !DISubroutineType(types: !15586)
!15586 = !{null, !15443}
!15587 = !{!15588}
!15588 = !DILocalVariable(name: "thread", arg: 1, scope: !15584, file: !3233, line: 310, type: !15443)
!15589 = !DILocation(line: 0, scope: !15584)
!15590 = !DILocation(line: 319, column: 2, scope: !15591)
!15591 = distinct !DILexicalBlock(scope: !15584, file: !3233, line: 319, column: 2)
!15592 = !{i64 2154201750}
!15593 = !DILocation(line: 320, column: 2, scope: !15584)
!15594 = !DILocation(line: 321, column: 1, scope: !15584)
!15595 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2348, file: !2348, line: 1415, type: !15596, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !15598)
!15596 = !DISubroutineType(types: !15597)
!15597 = !{!742, !114}
!15598 = !{!15599, !15600, !15601, !15602}
!15599 = !DILocalVariable(name: "ticks", arg: 1, scope: !15595, file: !2348, line: 1415, type: !114)
!15600 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !15595, file: !2348, line: 1418, type: !118)
!15601 = !DILocalVariable(name: "timeout", scope: !15595, file: !2348, line: 1430, type: !14595)
!15602 = !DILocalVariable(name: "key", scope: !15595, file: !2348, line: 1437, type: !13699)
!15603 = !DILocation(line: 0, scope: !15595)
!15604 = !DILocation(line: 1031, column: 3, scope: !14434, inlinedAt: !15605)
!15605 = distinct !DILocation(line: 48, column: 10, scope: !14438, inlinedAt: !15606)
!15606 = distinct !DILocation(line: 1420, column: 2, scope: !15607)
!15607 = distinct !DILexicalBlock(scope: !15608, file: !2348, line: 1420, column: 2)
!15608 = distinct !DILexicalBlock(scope: !15595, file: !2348, line: 1420, column: 2)
!15609 = !DILocation(line: 0, scope: !14434, inlinedAt: !15605)
!15610 = !DILocation(line: 48, column: 9, scope: !14438, inlinedAt: !15606)
!15611 = !DILocation(line: 1420, column: 2, scope: !15608)
!15612 = !DILocation(line: 1420, column: 2, scope: !15613)
!15613 = distinct !DILexicalBlock(scope: !15607, file: !2348, line: 1420, column: 2)
!15614 = !DILocation(line: 1425, column: 12, scope: !15615)
!15615 = distinct !DILexicalBlock(scope: !15595, file: !2348, line: 1425, column: 6)
!15616 = !DILocation(line: 1425, column: 6, scope: !15595)
!15617 = !DILocation(line: 1426, column: 3, scope: !15618)
!15618 = distinct !DILexicalBlock(scope: !15615, file: !2348, line: 1425, column: 18)
!15619 = !DILocation(line: 1427, column: 3, scope: !15618)
!15620 = !DILocation(line: 1431, column: 24, scope: !15621)
!15621 = distinct !DILexicalBlock(scope: !15595, file: !2348, line: 1431, column: 6)
!15622 = !DILocation(line: 1431, column: 6, scope: !15595)
!15623 = !DILocation(line: 1432, column: 35, scope: !15624)
!15624 = distinct !DILexicalBlock(scope: !15621, file: !2348, line: 1431, column: 30)
!15625 = !DILocation(line: 1432, column: 27, scope: !15624)
!15626 = !DILocation(line: 1433, column: 2, scope: !15624)
!15627 = !DILocation(line: 1434, column: 27, scope: !15628)
!15628 = distinct !DILexicalBlock(scope: !15621, file: !2348, line: 1433, column: 9)
!15629 = !DILocation(line: 0, scope: !15621)
!15630 = !DILocation(line: 0, scope: !13707, inlinedAt: !15631)
!15631 = distinct !DILocation(line: 1437, column: 25, scope: !15595)
!15632 = !DILocation(line: 55, column: 2, scope: !13716, inlinedAt: !15633)
!15633 = distinct !DILocation(line: 145, column: 10, scope: !13707, inlinedAt: !15631)
!15634 = !DILocation(line: 0, scope: !13716, inlinedAt: !15633)
!15635 = !DILocation(line: 148, column: 2, scope: !13724, inlinedAt: !15631)
!15636 = !DILocation(line: 148, column: 2, scope: !13725, inlinedAt: !15631)
!15637 = !DILocation(line: 148, column: 2, scope: !13728, inlinedAt: !15631)
!15638 = !DILocation(line: 160, column: 2, scope: !13707, inlinedAt: !15631)
!15639 = !DILocation(line: 1440, column: 20, scope: !15595)
!15640 = !DILocation(line: 1440, column: 18, scope: !15595)
!15641 = !DILocation(line: 1442, column: 2, scope: !15595)
!15642 = !DILocation(line: 1443, column: 23, scope: !15595)
!15643 = !DILocation(line: 1443, column: 2, scope: !15595)
!15644 = !DILocation(line: 1444, column: 29, scope: !15595)
!15645 = !DILocation(line: 1444, column: 2, scope: !15595)
!15646 = !DILocation(line: 0, scope: !14385, inlinedAt: !15647)
!15647 = distinct !DILocation(line: 1446, column: 8, scope: !15595)
!15648 = !DILocation(line: 0, scope: !14394, inlinedAt: !15649)
!15649 = distinct !DILocation(line: 195, column: 2, scope: !14385, inlinedAt: !15647)
!15650 = !DILocation(line: 225, column: 2, scope: !14401, inlinedAt: !15649)
!15651 = !DILocation(line: 225, column: 2, scope: !14402, inlinedAt: !15649)
!15652 = !DILocation(line: 225, column: 2, scope: !14405, inlinedAt: !15649)
!15653 = !DILocation(line: 196, column: 9, scope: !14385, inlinedAt: !15647)
!15654 = !DILocation(line: 1448, column: 2, scope: !15655)
!15655 = distinct !DILexicalBlock(scope: !15656, file: !2348, line: 1448, column: 2)
!15656 = distinct !DILexicalBlock(scope: !15595, file: !2348, line: 1448, column: 2)
!15657 = !DILocation(line: 1448, column: 2, scope: !15656)
!15658 = !DILocation(line: 1448, column: 2, scope: !15659)
!15659 = distinct !DILexicalBlock(scope: !15655, file: !2348, line: 1448, column: 2)
!15660 = !DILocation(line: 1450, column: 10, scope: !15595)
!15661 = !DILocation(line: 1450, column: 45, scope: !15595)
!15662 = !DILocation(line: 1450, column: 43, scope: !15595)
!15663 = !DILocation(line: 1451, column: 6, scope: !15595)
!15664 = !DILocation(line: 1457, column: 1, scope: !15595)
!15665 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !3225, file: !3225, line: 1103, type: !3226, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !15666)
!15666 = !{!15667}
!15667 = !DILocalVariable(name: "t", arg: 1, scope: !15665, file: !3225, line: 1103, type: !120)
!15668 = !DILocation(line: 0, scope: !15665)
!15669 = !DILocation(line: 0, scope: !13767, inlinedAt: !15670)
!15670 = distinct !DILocation(line: 1106, column: 9, scope: !15665)
!15671 = !DILocation(line: 139, column: 13, scope: !15672, inlinedAt: !15670)
!15672 = distinct !DILexicalBlock(scope: !15673, file: !3225, line: 138, column: 10)
!15673 = distinct !DILexicalBlock(scope: !15674, file: !3225, line: 136, column: 7)
!15674 = distinct !DILexicalBlock(scope: !13788, file: !3225, line: 134, column: 17)
!15675 = !DILocation(line: 1106, column: 2, scope: !15665)
!15676 = distinct !DISubprogram(name: "k_yield", scope: !3233, file: !3233, line: 140, type: !2982, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !2048)
!15677 = !DILocation(line: 148, column: 2, scope: !15678)
!15678 = distinct !DILexicalBlock(scope: !15676, file: !3233, line: 148, column: 2)
!15679 = !{i64 2154201070}
!15680 = !DILocation(line: 149, column: 2, scope: !15676)
!15681 = !DILocation(line: 150, column: 1, scope: !15676)
!15682 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2348, file: !2348, line: 1495, type: !15683, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !15685)
!15683 = !DISubroutineType(types: !15684)
!15684 = !{!742, !119}
!15685 = !{!15686, !15687}
!15686 = !DILocalVariable(name: "us", arg: 1, scope: !15682, file: !2348, line: 1495, type: !119)
!15687 = !DILocalVariable(name: "ticks", scope: !15682, file: !2348, line: 1497, type: !742)
!15688 = !DILocation(line: 0, scope: !15682)
!15689 = !DILocation(line: 1501, column: 31, scope: !15682)
!15690 = !DILocation(line: 1501, column: 10, scope: !15682)
!15691 = !DILocation(line: 1502, column: 23, scope: !15682)
!15692 = !DILocation(line: 1502, column: 10, scope: !15682)
!15693 = !DILocation(line: 1506, column: 31, scope: !15682)
!15694 = !DILocation(line: 1506, column: 9, scope: !15682)
!15695 = !DILocation(line: 1506, column: 2, scope: !15682)
!15696 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !3225, file: !3225, line: 571, type: !3226, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !15697)
!15697 = !{!15698}
!15698 = !DILocalVariable(name: "t", arg: 1, scope: !15696, file: !3225, line: 571, type: !120)
!15699 = !DILocation(line: 0, scope: !15696)
!15700 = !DILocation(line: 0, scope: !13767, inlinedAt: !15701)
!15701 = distinct !DILocation(line: 574, column: 9, scope: !15696)
!15702 = !DILocation(line: 135, column: 5, scope: !15674, inlinedAt: !15701)
!15703 = !DILocation(line: 139, column: 13, scope: !15672, inlinedAt: !15701)
!15704 = !DILocation(line: 574, column: 2, scope: !15696)
!15705 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !3225, file: !3225, line: 1187, type: !3226, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !15706)
!15706 = !{!15707}
!15707 = !DILocalVariable(name: "t", arg: 1, scope: !15705, file: !3225, line: 1187, type: !120)
!15708 = !DILocation(line: 0, scope: !15705)
!15709 = !DILocation(line: 0, scope: !13767, inlinedAt: !15710)
!15710 = distinct !DILocation(line: 1190, column: 9, scope: !15705)
!15711 = !DILocation(line: 145, column: 13, scope: !15712, inlinedAt: !15710)
!15712 = distinct !DILexicalBlock(scope: !13785, file: !3225, line: 144, column: 10)
!15713 = !DILocation(line: 1190, column: 2, scope: !15705)
!15714 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2348, file: !2348, line: 1517, type: !15585, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !15715)
!15715 = !{!15716}
!15716 = !DILocalVariable(name: "thread", arg: 1, scope: !15714, file: !2348, line: 1517, type: !15443)
!15717 = !DILocation(line: 0, scope: !15714)
!15718 = !DILocation(line: 1521, column: 6, scope: !15719)
!15719 = distinct !DILexicalBlock(scope: !15714, file: !2348, line: 1521, column: 6)
!15720 = !DILocation(line: 1521, column: 6, scope: !15714)
!15721 = !DILocation(line: 1525, column: 6, scope: !15722)
!15722 = distinct !DILexicalBlock(scope: !15714, file: !2348, line: 1525, column: 6)
!15723 = !DILocation(line: 1525, column: 37, scope: !15722)
!15724 = !DILocation(line: 1525, column: 6, scope: !15714)
!15725 = !DILocation(line: 1527, column: 20, scope: !15726)
!15726 = distinct !DILexicalBlock(scope: !15727, file: !2348, line: 1527, column: 7)
!15727 = distinct !DILexicalBlock(scope: !15722, file: !2348, line: 1525, column: 42)
!15728 = !DILocation(line: 1527, column: 33, scope: !15726)
!15729 = !DILocation(line: 1527, column: 7, scope: !15727)
!15730 = !DILocation(line: 1532, column: 2, scope: !15714)
!15731 = !DILocation(line: 1533, column: 2, scope: !15714)
!15732 = !DILocation(line: 1031, column: 3, scope: !14434, inlinedAt: !15733)
!15733 = distinct !DILocation(line: 48, column: 10, scope: !14438, inlinedAt: !15734)
!15734 = distinct !DILocation(line: 1537, column: 7, scope: !15735)
!15735 = distinct !DILexicalBlock(scope: !15714, file: !2348, line: 1537, column: 6)
!15736 = !DILocation(line: 0, scope: !14434, inlinedAt: !15733)
!15737 = !DILocation(line: 48, column: 9, scope: !14438, inlinedAt: !15734)
!15738 = !DILocation(line: 1537, column: 6, scope: !15714)
!15739 = !DILocation(line: 1538, column: 3, scope: !15740)
!15740 = distinct !DILexicalBlock(scope: !15735, file: !2348, line: 1537, column: 25)
!15741 = !DILocation(line: 1539, column: 2, scope: !15740)
!15742 = !DILocation(line: 1540, column: 1, scope: !15714)
!15743 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !12869, file: !12869, line: 101, type: !13848, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !15744)
!15744 = !{!15745}
!15745 = !DILocalVariable(name: "thread", arg: 1, scope: !15743, file: !12869, line: 101, type: !2240)
!15746 = !DILocation(line: 0, scope: !15743)
!15747 = !DILocation(line: 103, column: 23, scope: !15743)
!15748 = !DILocation(line: 103, column: 36, scope: !15743)
!15749 = !DILocation(line: 103, column: 55, scope: !15743)
!15750 = !DILocation(line: 103, column: 2, scope: !15743)
!15751 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2348, file: !2348, line: 1567, type: !15752, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !15754)
!15752 = !DISubroutineType(types: !15753)
!15753 = !{!15443}
!15754 = !{!15755}
!15755 = !DILocalVariable(name: "ret", scope: !15751, file: !2348, line: 1577, type: !15443)
!15756 = !DILocation(line: 1577, column: 30, scope: !15751)
!15757 = !DILocation(line: 0, scope: !15751)
!15758 = !DILocation(line: 1582, column: 2, scope: !15751)
!15759 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2348, file: !2348, line: 1593, type: !7688, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !2048)
!15760 = !DILocation(line: 1031, column: 3, scope: !14434, inlinedAt: !15761)
!15761 = distinct !DILocation(line: 48, column: 10, scope: !14438, inlinedAt: !15762)
!15762 = distinct !DILocation(line: 1595, column: 10, scope: !15759)
!15763 = !DILocation(line: 0, scope: !14434, inlinedAt: !15761)
!15764 = !DILocation(line: 48, column: 9, scope: !14438, inlinedAt: !15762)
!15765 = !DILocation(line: 1595, column: 27, scope: !15759)
!15766 = !DILocation(line: 1595, column: 41, scope: !15759)
!15767 = !DILocation(line: 1595, column: 30, scope: !15759)
!15768 = !DILocation(line: 1595, column: 2, scope: !15759)
!15769 = distinct !DISubprogram(name: "z_thread_abort", scope: !2348, file: !2348, line: 1725, type: !13665, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !15770)
!15770 = !{!15771, !15772}
!15771 = !DILocalVariable(name: "thread", arg: 1, scope: !15769, file: !2348, line: 1725, type: !2240)
!15772 = !DILocalVariable(name: "key", scope: !15769, file: !2348, line: 1727, type: !13699)
!15773 = !DILocation(line: 0, scope: !15769)
!15774 = !DILocation(line: 0, scope: !13707, inlinedAt: !15775)
!15775 = distinct !DILocation(line: 1727, column: 25, scope: !15769)
!15776 = !DILocation(line: 55, column: 2, scope: !13716, inlinedAt: !15777)
!15777 = distinct !DILocation(line: 145, column: 10, scope: !13707, inlinedAt: !15775)
!15778 = !DILocation(line: 0, scope: !13716, inlinedAt: !15777)
!15779 = !DILocation(line: 148, column: 2, scope: !13724, inlinedAt: !15775)
!15780 = !DILocation(line: 148, column: 2, scope: !13725, inlinedAt: !15775)
!15781 = !DILocation(line: 148, column: 2, scope: !13728, inlinedAt: !15775)
!15782 = !DILocation(line: 160, column: 2, scope: !13707, inlinedAt: !15775)
!15783 = !DILocation(line: 1729, column: 20, scope: !15784)
!15784 = distinct !DILexicalBlock(scope: !15769, file: !2348, line: 1729, column: 6)
!15785 = !DILocation(line: 1729, column: 33, scope: !15784)
!15786 = !DILocation(line: 1729, column: 48, scope: !15784)
!15787 = !DILocation(line: 1729, column: 6, scope: !15769)
!15788 = !DILocation(line: 0, scope: !13741, inlinedAt: !15789)
!15789 = distinct !DILocation(line: 1730, column: 3, scope: !15790)
!15790 = distinct !DILexicalBlock(scope: !15784, file: !2348, line: 1729, column: 54)
!15791 = !DILocation(line: 194, column: 2, scope: !13749, inlinedAt: !15789)
!15792 = !DILocation(line: 194, column: 2, scope: !13750, inlinedAt: !15789)
!15793 = !DILocation(line: 194, column: 2, scope: !13753, inlinedAt: !15789)
!15794 = !DILocation(line: 0, scope: !13755, inlinedAt: !15795)
!15795 = distinct !DILocation(line: 215, column: 2, scope: !13741, inlinedAt: !15789)
!15796 = !DILocation(line: 95, column: 2, scope: !13755, inlinedAt: !15795)
!15797 = !DILocation(line: 1731, column: 3, scope: !15798)
!15798 = distinct !DILexicalBlock(scope: !15799, file: !2348, line: 1731, column: 3)
!15799 = distinct !DILexicalBlock(scope: !15800, file: !2348, line: 1731, column: 3)
!15800 = distinct !DILexicalBlock(scope: !15790, file: !2348, line: 1731, column: 3)
!15801 = !DILocation(line: 1736, column: 20, scope: !15802)
!15802 = distinct !DILexicalBlock(scope: !15769, file: !2348, line: 1736, column: 6)
!15803 = !DILocation(line: 1736, column: 33, scope: !15802)
!15804 = !DILocation(line: 1736, column: 49, scope: !15802)
!15805 = !DILocation(line: 1736, column: 6, scope: !15769)
!15806 = !DILocation(line: 0, scope: !13741, inlinedAt: !15807)
!15807 = distinct !DILocation(line: 1737, column: 3, scope: !15808)
!15808 = distinct !DILexicalBlock(scope: !15802, file: !2348, line: 1736, column: 56)
!15809 = !DILocation(line: 194, column: 2, scope: !13749, inlinedAt: !15807)
!15810 = !DILocation(line: 194, column: 2, scope: !13750, inlinedAt: !15807)
!15811 = !DILocation(line: 194, column: 2, scope: !13753, inlinedAt: !15807)
!15812 = !DILocation(line: 0, scope: !13755, inlinedAt: !15813)
!15813 = distinct !DILocation(line: 215, column: 2, scope: !13741, inlinedAt: !15807)
!15814 = !DILocation(line: 95, column: 2, scope: !13755, inlinedAt: !15813)
!15815 = !DILocation(line: 1738, column: 3, scope: !15808)
!15816 = !DILocation(line: 1775, column: 2, scope: !15769)
!15817 = !DILocation(line: 1776, column: 16, scope: !15818)
!15818 = distinct !DILexicalBlock(scope: !15769, file: !2348, line: 1776, column: 6)
!15819 = !DILocation(line: 1776, column: 13, scope: !15818)
!15820 = !DILocation(line: 1776, column: 25, scope: !15818)
!15821 = !DILocation(line: 1031, column: 3, scope: !14434, inlinedAt: !15822)
!15822 = distinct !DILocation(line: 48, column: 10, scope: !14438, inlinedAt: !15823)
!15823 = distinct !DILocation(line: 1776, column: 29, scope: !15818)
!15824 = !DILocation(line: 0, scope: !14434, inlinedAt: !15822)
!15825 = !DILocation(line: 48, column: 9, scope: !14438, inlinedAt: !15823)
!15826 = !DILocation(line: 1776, column: 6, scope: !15769)
!15827 = !DILocation(line: 0, scope: !14385, inlinedAt: !15828)
!15828 = distinct !DILocation(line: 1777, column: 3, scope: !15829)
!15829 = distinct !DILexicalBlock(scope: !15818, file: !2348, line: 1776, column: 47)
!15830 = !DILocation(line: 0, scope: !14394, inlinedAt: !15831)
!15831 = distinct !DILocation(line: 195, column: 2, scope: !14385, inlinedAt: !15828)
!15832 = !DILocation(line: 225, column: 2, scope: !14401, inlinedAt: !15831)
!15833 = !DILocation(line: 225, column: 2, scope: !14402, inlinedAt: !15831)
!15834 = !DILocation(line: 225, column: 2, scope: !14405, inlinedAt: !15831)
!15835 = !DILocation(line: 196, column: 9, scope: !14385, inlinedAt: !15828)
!15836 = !DILocation(line: 1778, column: 3, scope: !15837)
!15837 = distinct !DILexicalBlock(scope: !15838, file: !2348, line: 1778, column: 3)
!15838 = distinct !DILexicalBlock(scope: !15839, file: !2348, line: 1778, column: 3)
!15839 = distinct !DILexicalBlock(scope: !15829, file: !2348, line: 1778, column: 3)
!15840 = !DILocation(line: 0, scope: !13741, inlinedAt: !15841)
!15841 = distinct !DILocation(line: 1780, column: 2, scope: !15769)
!15842 = !DILocation(line: 194, column: 2, scope: !13749, inlinedAt: !15841)
!15843 = !DILocation(line: 194, column: 2, scope: !13750, inlinedAt: !15841)
!15844 = !DILocation(line: 194, column: 2, scope: !13753, inlinedAt: !15841)
!15845 = !DILocation(line: 0, scope: !13755, inlinedAt: !15846)
!15846 = distinct !DILocation(line: 215, column: 2, scope: !13741, inlinedAt: !15841)
!15847 = !DILocation(line: 95, column: 2, scope: !13755, inlinedAt: !15846)
!15848 = !DILocation(line: 1781, column: 1, scope: !15769)
!15849 = distinct !DISubprogram(name: "end_thread", scope: !2348, file: !2348, line: 1690, type: !13665, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !15850)
!15850 = !{!15851}
!15851 = !DILocalVariable(name: "thread", arg: 1, scope: !15849, file: !2348, line: 1690, type: !2240)
!15852 = !DILocation(line: 0, scope: !15849)
!15853 = !DILocation(line: 1695, column: 20, scope: !15854)
!15854 = distinct !DILexicalBlock(scope: !15849, file: !2348, line: 1695, column: 6)
!15855 = !DILocation(line: 1695, column: 33, scope: !15854)
!15856 = !DILocation(line: 1695, column: 49, scope: !15854)
!15857 = !DILocation(line: 1695, column: 6, scope: !15849)
!15858 = !DILocation(line: 1697, column: 29, scope: !15859)
!15859 = distinct !DILexicalBlock(scope: !15854, file: !2348, line: 1695, column: 56)
!15860 = !DILocation(line: 1698, column: 7, scope: !15861)
!15861 = distinct !DILexicalBlock(scope: !15859, file: !2348, line: 1698, column: 7)
!15862 = !DILocation(line: 1698, column: 7, scope: !15859)
!15863 = !DILocation(line: 0, scope: !13899, inlinedAt: !15864)
!15864 = distinct !DILocation(line: 1699, column: 4, scope: !15865)
!15865 = distinct !DILexicalBlock(scope: !15861, file: !2348, line: 1698, column: 35)
!15866 = !DILocation(line: 266, column: 28, scope: !13899, inlinedAt: !15864)
!15867 = !DILocation(line: 0, scope: !13907, inlinedAt: !15868)
!15868 = distinct !DILocation(line: 268, column: 3, scope: !13911, inlinedAt: !15864)
!15869 = !DILocation(line: 234, column: 2, scope: !13907, inlinedAt: !15868)
!15870 = !DILocation(line: 1700, column: 3, scope: !15865)
!15871 = !DILocation(line: 1701, column: 20, scope: !15872)
!15872 = distinct !DILexicalBlock(scope: !15859, file: !2348, line: 1701, column: 7)
!15873 = !DILocation(line: 1701, column: 30, scope: !15872)
!15874 = !DILocation(line: 1701, column: 7, scope: !15859)
!15875 = !DILocation(line: 1702, column: 4, scope: !15876)
!15876 = distinct !DILexicalBlock(scope: !15872, file: !2348, line: 1701, column: 39)
!15877 = !DILocation(line: 1703, column: 3, scope: !15876)
!15878 = !DILocation(line: 1704, column: 9, scope: !15859)
!15879 = !DILocation(line: 1705, column: 23, scope: !15859)
!15880 = !DILocation(line: 1705, column: 3, scope: !15859)
!15881 = !DILocation(line: 1706, column: 3, scope: !15859)
!15882 = !DILocation(line: 1722, column: 2, scope: !15859)
!15883 = !DILocation(line: 1723, column: 1, scope: !15849)
!15884 = distinct !DISubprogram(name: "unpend_all", scope: !2348, file: !2348, line: 1674, type: !15885, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !15887)
!15885 = !DISubroutineType(types: !15886)
!15886 = !{null, !2271}
!15887 = !{!15888, !15889}
!15888 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15884, file: !2348, line: 1674, type: !2271)
!15889 = !DILocalVariable(name: "thread", scope: !15884, file: !2348, line: 1676, type: !2240)
!15890 = !DILocation(line: 0, scope: !15884)
!15891 = !DILocation(line: 1678, column: 19, scope: !15884)
!15892 = !DILocation(line: 1678, column: 41, scope: !15884)
!15893 = !DILocation(line: 1678, column: 2, scope: !15884)
!15894 = !DILocation(line: 1679, column: 3, scope: !15895)
!15895 = distinct !DILexicalBlock(scope: !15884, file: !2348, line: 1678, column: 50)
!15896 = !DILocation(line: 1680, column: 9, scope: !15895)
!15897 = !DILocalVariable(name: "thread", arg: 1, scope: !15898, file: !12889, line: 65, type: !2240)
!15898 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12889, file: !12889, line: 65, type: !15899, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !15901)
!15899 = !DISubroutineType(types: !15900)
!15900 = !{null, !2240, !32}
!15901 = !{!15897, !15902}
!15902 = !DILocalVariable(name: "value", arg: 2, scope: !15898, file: !12889, line: 65, type: !32)
!15903 = !DILocation(line: 0, scope: !15898, inlinedAt: !15904)
!15904 = distinct !DILocation(line: 1681, column: 3, scope: !15895)
!15905 = !DILocation(line: 67, column: 15, scope: !15898, inlinedAt: !15904)
!15906 = !DILocation(line: 67, column: 33, scope: !15898, inlinedAt: !15904)
!15907 = !DILocation(line: 1682, column: 3, scope: !15895)
!15908 = distinct !{!15908, !15893, !15909}
!15909 = !DILocation(line: 1683, column: 2, scope: !15884)
!15910 = !DILocation(line: 1684, column: 1, scope: !15884)
!15911 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2348, file: !2348, line: 1794, type: !15912, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !15914)
!15912 = !DISubroutineType(types: !15913)
!15913 = !{!119, !2240, !14595}
!15914 = !{!15915, !15916, !15917, !15918}
!15915 = !DILocalVariable(name: "thread", arg: 1, scope: !15911, file: !2348, line: 1794, type: !2240)
!15916 = !DILocalVariable(name: "timeout", arg: 2, scope: !15911, file: !2348, line: 1794, type: !14595)
!15917 = !DILocalVariable(name: "key", scope: !15911, file: !2348, line: 1796, type: !13699)
!15918 = !DILocalVariable(name: "ret", scope: !15911, file: !2348, line: 1797, type: !119)
!15919 = !DILocation(line: 0, scope: !15911)
!15920 = !DILocation(line: 0, scope: !13707, inlinedAt: !15921)
!15921 = distinct !DILocation(line: 1796, column: 25, scope: !15911)
!15922 = !DILocation(line: 55, column: 2, scope: !13716, inlinedAt: !15923)
!15923 = distinct !DILocation(line: 145, column: 10, scope: !13707, inlinedAt: !15921)
!15924 = !DILocation(line: 0, scope: !13716, inlinedAt: !15923)
!15925 = !DILocation(line: 148, column: 2, scope: !13724, inlinedAt: !15921)
!15926 = !DILocation(line: 148, column: 2, scope: !13725, inlinedAt: !15921)
!15927 = !DILocation(line: 148, column: 2, scope: !13728, inlinedAt: !15921)
!15928 = !DILocation(line: 160, column: 2, scope: !13707, inlinedAt: !15921)
!15929 = !DILocation(line: 1801, column: 20, scope: !15930)
!15930 = distinct !DILexicalBlock(scope: !15911, file: !2348, line: 1801, column: 6)
!15931 = !DILocation(line: 1801, column: 33, scope: !15930)
!15932 = !DILocation(line: 1801, column: 49, scope: !15930)
!15933 = !DILocation(line: 1801, column: 6, scope: !15911)
!15934 = !DILocation(line: 1803, column: 13, scope: !15935)
!15935 = distinct !DILexicalBlock(scope: !15930, file: !2348, line: 1803, column: 13)
!15936 = !DILocation(line: 1803, column: 13, scope: !15930)
!15937 = !DILocation(line: 1805, column: 24, scope: !15938)
!15938 = distinct !DILexicalBlock(scope: !15935, file: !2348, line: 1805, column: 13)
!15939 = !DILocation(line: 1805, column: 21, scope: !15938)
!15940 = !DILocation(line: 1805, column: 34, scope: !15938)
!15941 = !DILocation(line: 1806, column: 20, scope: !15938)
!15942 = !DILocation(line: 1806, column: 44, scope: !15938)
!15943 = !DILocation(line: 1806, column: 30, scope: !15938)
!15944 = !DILocation(line: 1805, column: 13, scope: !15935)
!15945 = !DILocation(line: 1031, column: 3, scope: !14434, inlinedAt: !15946)
!15946 = distinct !DILocation(line: 48, column: 10, scope: !14438, inlinedAt: !15947)
!15947 = distinct !DILocation(line: 1809, column: 3, scope: !15948)
!15948 = distinct !DILexicalBlock(scope: !15949, file: !2348, line: 1809, column: 3)
!15949 = distinct !DILexicalBlock(scope: !15950, file: !2348, line: 1809, column: 3)
!15950 = distinct !DILexicalBlock(scope: !15938, file: !2348, line: 1808, column: 9)
!15951 = !DILocation(line: 0, scope: !14434, inlinedAt: !15946)
!15952 = !DILocation(line: 48, column: 9, scope: !14438, inlinedAt: !15947)
!15953 = !DILocation(line: 1809, column: 3, scope: !15949)
!15954 = !DILocation(line: 1809, column: 3, scope: !15955)
!15955 = distinct !DILexicalBlock(scope: !15948, file: !2348, line: 1809, column: 3)
!15956 = !DILocation(line: 1810, column: 23, scope: !15950)
!15957 = !DILocation(line: 1810, column: 42, scope: !15950)
!15958 = !DILocation(line: 1810, column: 3, scope: !15950)
!15959 = !DILocation(line: 1811, column: 22, scope: !15950)
!15960 = !DILocation(line: 1811, column: 3, scope: !15950)
!15961 = !DILocation(line: 0, scope: !14385, inlinedAt: !15962)
!15962 = distinct !DILocation(line: 1814, column: 9, scope: !15950)
!15963 = !DILocation(line: 0, scope: !14394, inlinedAt: !15964)
!15964 = distinct !DILocation(line: 195, column: 2, scope: !14385, inlinedAt: !15962)
!15965 = !DILocation(line: 225, column: 2, scope: !14401, inlinedAt: !15964)
!15966 = !DILocation(line: 225, column: 2, scope: !14402, inlinedAt: !15964)
!15967 = !DILocation(line: 225, column: 2, scope: !14405, inlinedAt: !15964)
!15968 = !DILocation(line: 196, column: 9, scope: !14385, inlinedAt: !15962)
!15969 = !DILocation(line: 1817, column: 3, scope: !15950)
!15970 = !DILocation(line: 0, scope: !15930)
!15971 = !DILocation(line: 0, scope: !13741, inlinedAt: !15972)
!15972 = distinct !DILocation(line: 1822, column: 2, scope: !15911)
!15973 = !DILocation(line: 194, column: 2, scope: !13749, inlinedAt: !15972)
!15974 = !DILocation(line: 194, column: 2, scope: !13750, inlinedAt: !15972)
!15975 = !DILocation(line: 194, column: 2, scope: !13753, inlinedAt: !15972)
!15976 = !DILocation(line: 0, scope: !13755, inlinedAt: !15977)
!15977 = distinct !DILocation(line: 215, column: 2, scope: !13741, inlinedAt: !15972)
!15978 = !DILocation(line: 95, column: 2, scope: !13755, inlinedAt: !15977)
!15979 = !DILocation(line: 1823, column: 2, scope: !15911)
!15980 = !DILocation(line: 1824, column: 1, scope: !15911)
!15981 = distinct !DISubprogram(name: "z_sched_wake", scope: !2348, file: !2348, line: 1882, type: !15982, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !15984)
!15982 = !DISubroutineType(types: !15983)
!15983 = !{!345, !2271, !119, !113}
!15984 = !{!15985, !15986, !15987, !15988, !15989, !15990, !15992}
!15985 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15981, file: !2348, line: 1882, type: !2271)
!15986 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !15981, file: !2348, line: 1882, type: !119)
!15987 = !DILocalVariable(name: "swap_data", arg: 3, scope: !15981, file: !2348, line: 1882, type: !113)
!15988 = !DILocalVariable(name: "thread", scope: !15981, file: !2348, line: 1884, type: !2240)
!15989 = !DILocalVariable(name: "ret", scope: !15981, file: !2348, line: 1885, type: !345)
!15990 = !DILocalVariable(name: "__i", scope: !15991, file: !2348, line: 1887, type: !13699)
!15991 = distinct !DILexicalBlock(scope: !15981, file: !2348, line: 1887, column: 2)
!15992 = !DILocalVariable(name: "__key", scope: !15991, file: !2348, line: 1887, type: !13699)
!15993 = !DILocation(line: 0, scope: !15981)
!15994 = !DILocation(line: 0, scope: !15991)
!15995 = !DILocation(line: 0, scope: !13707, inlinedAt: !15996)
!15996 = distinct !DILocation(line: 1887, column: 2, scope: !15991)
!15997 = !DILocation(line: 55, column: 2, scope: !13716, inlinedAt: !15998)
!15998 = distinct !DILocation(line: 145, column: 10, scope: !13707, inlinedAt: !15996)
!15999 = !DILocation(line: 0, scope: !13716, inlinedAt: !15998)
!16000 = !DILocation(line: 148, column: 2, scope: !13724, inlinedAt: !15996)
!16001 = !DILocation(line: 148, column: 2, scope: !13725, inlinedAt: !15996)
!16002 = !DILocation(line: 148, column: 2, scope: !13728, inlinedAt: !15996)
!16003 = !DILocation(line: 160, column: 2, scope: !13707, inlinedAt: !15996)
!16004 = !DILocation(line: 1888, column: 12, scope: !16005)
!16005 = distinct !DILexicalBlock(scope: !16006, file: !2348, line: 1887, column: 26)
!16006 = distinct !DILexicalBlock(scope: !15991, file: !2348, line: 1887, column: 2)
!16007 = !DILocation(line: 1890, column: 14, scope: !16008)
!16008 = distinct !DILexicalBlock(scope: !16005, file: !2348, line: 1890, column: 7)
!16009 = !DILocation(line: 1890, column: 7, scope: !16005)
!16010 = !DILocalVariable(name: "thread", arg: 1, scope: !16011, file: !16012, line: 134, type: !2240)
!16011 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !16012, file: !16012, line: 134, type: !16013, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !16015)
!16012 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16013 = !DISubroutineType(types: !16014)
!16014 = !{null, !2240, !32, !113}
!16015 = !{!16010, !16016, !16017}
!16016 = !DILocalVariable(name: "value", arg: 2, scope: !16011, file: !16012, line: 135, type: !32)
!16017 = !DILocalVariable(name: "data", arg: 3, scope: !16011, file: !16012, line: 136, type: !113)
!16018 = !DILocation(line: 0, scope: !16011, inlinedAt: !16019)
!16019 = distinct !DILocation(line: 1891, column: 4, scope: !16020)
!16020 = distinct !DILexicalBlock(scope: !16008, file: !2348, line: 1890, column: 23)
!16021 = !DILocation(line: 0, scope: !15898, inlinedAt: !16022)
!16022 = distinct !DILocation(line: 138, column: 2, scope: !16011, inlinedAt: !16019)
!16023 = !DILocation(line: 67, column: 15, scope: !15898, inlinedAt: !16022)
!16024 = !DILocation(line: 67, column: 33, scope: !15898, inlinedAt: !16022)
!16025 = !DILocation(line: 139, column: 15, scope: !16011, inlinedAt: !16019)
!16026 = !DILocation(line: 139, column: 25, scope: !16011, inlinedAt: !16019)
!16027 = !DILocation(line: 1894, column: 4, scope: !16020)
!16028 = !DILocation(line: 1895, column: 10, scope: !16020)
!16029 = !DILocation(line: 1896, column: 4, scope: !16020)
!16030 = !DILocation(line: 1898, column: 3, scope: !16020)
!16031 = !DILocation(line: 0, scope: !13741, inlinedAt: !16032)
!16032 = distinct !DILocation(line: 1887, column: 2, scope: !16006)
!16033 = !DILocation(line: 194, column: 2, scope: !13749, inlinedAt: !16032)
!16034 = !DILocation(line: 194, column: 2, scope: !13750, inlinedAt: !16032)
!16035 = !DILocation(line: 194, column: 2, scope: !13753, inlinedAt: !16032)
!16036 = !DILocation(line: 0, scope: !13755, inlinedAt: !16037)
!16037 = distinct !DILocation(line: 215, column: 2, scope: !13741, inlinedAt: !16032)
!16038 = !DILocation(line: 95, column: 2, scope: !13755, inlinedAt: !16037)
!16039 = !DILocation(line: 1901, column: 2, scope: !15981)
!16040 = distinct !DISubprogram(name: "z_sched_wait", scope: !2348, file: !2348, line: 1904, type: !16041, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !16044)
!16041 = !DISubroutineType(types: !16042)
!16042 = !{!119, !13710, !13699, !2271, !14595, !16043}
!16043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !113, size: 32)
!16044 = !{!16045, !16046, !16047, !16048, !16049, !16050}
!16045 = !DILocalVariable(name: "lock", arg: 1, scope: !16040, file: !2348, line: 1904, type: !13710)
!16046 = !DILocalVariable(name: "key", arg: 2, scope: !16040, file: !2348, line: 1904, type: !13699)
!16047 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16040, file: !2348, line: 1905, type: !2271)
!16048 = !DILocalVariable(name: "timeout", arg: 4, scope: !16040, file: !2348, line: 1905, type: !14595)
!16049 = !DILocalVariable(name: "data", arg: 5, scope: !16040, file: !2348, line: 1905, type: !16043)
!16050 = !DILocalVariable(name: "ret", scope: !16040, file: !2348, line: 1907, type: !119)
!16051 = !DILocation(line: 0, scope: !16040)
!16052 = !DILocation(line: 1907, column: 12, scope: !16040)
!16053 = !DILocation(line: 1909, column: 11, scope: !16054)
!16054 = distinct !DILexicalBlock(scope: !16040, file: !2348, line: 1909, column: 6)
!16055 = !DILocation(line: 1909, column: 6, scope: !16040)
!16056 = !DILocation(line: 1910, column: 11, scope: !16057)
!16057 = distinct !DILexicalBlock(scope: !16054, file: !2348, line: 1909, column: 20)
!16058 = !DILocation(line: 1910, column: 26, scope: !16057)
!16059 = !DILocation(line: 1910, column: 9, scope: !16057)
!16060 = !DILocation(line: 1911, column: 2, scope: !16057)
!16061 = !DILocation(line: 1912, column: 2, scope: !16040)
!16062 = distinct !DISubprogram(name: "z_data_copy", scope: !16063, file: !16063, line: 22, type: !2982, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2965, retainedNodes: !2048)
!16063 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16064 = !DILocation(line: 24, column: 2, scope: !16062)
!16065 = !DILocation(line: 27, column: 2, scope: !16062)
!16066 = !DILocation(line: 71, column: 1, scope: !16062)
!16067 = distinct !DISubprogram(name: "z_add_timeout", scope: !2385, file: !2385, line: 88, type: !16068, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !16074)
!16068 = !DISubroutineType(types: !16069)
!16069 = !{null, !2358, !2377, !16070}
!16070 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !115, line: 67, baseType: !16071)
!16071 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !115, line: 65, size: 64, elements: !16072)
!16072 = !{!16073}
!16073 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16071, file: !115, line: 66, baseType: !114, size: 64)
!16074 = !{!16075, !16076, !16077, !16078, !16084, !16085, !16088, !16091}
!16075 = !DILocalVariable(name: "to", arg: 1, scope: !16067, file: !2385, line: 88, type: !2358)
!16076 = !DILocalVariable(name: "fn", arg: 2, scope: !16067, file: !2385, line: 88, type: !2377)
!16077 = !DILocalVariable(name: "timeout", arg: 3, scope: !16067, file: !2385, line: 89, type: !16070)
!16078 = !DILocalVariable(name: "__i", scope: !16079, file: !2385, line: 102, type: !16080)
!16079 = distinct !DILexicalBlock(scope: !16067, file: !2385, line: 102, column: 2)
!16080 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !259, line: 106, baseType: !16081)
!16081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !259, line: 32, size: 32, elements: !16082)
!16082 = !{!16083}
!16083 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16081, file: !259, line: 33, baseType: !119, size: 32)
!16084 = !DILocalVariable(name: "__key", scope: !16079, file: !2385, line: 102, type: !16080)
!16085 = !DILocalVariable(name: "t", scope: !16086, file: !2385, line: 103, type: !2358)
!16086 = distinct !DILexicalBlock(scope: !16087, file: !2385, line: 102, column: 24)
!16087 = distinct !DILexicalBlock(scope: !16079, file: !2385, line: 102, column: 2)
!16088 = !DILocalVariable(name: "ticks", scope: !16089, file: !2385, line: 107, type: !114)
!16089 = distinct !DILexicalBlock(scope: !16090, file: !2385, line: 106, column: 39)
!16090 = distinct !DILexicalBlock(scope: !16086, file: !2385, line: 105, column: 7)
!16091 = !DILocalVariable(name: "next_time", scope: !16092, file: !2385, line: 137, type: !742)
!16092 = distinct !DILexicalBlock(scope: !16093, file: !2385, line: 127, column: 22)
!16093 = distinct !DILexicalBlock(scope: !16086, file: !2385, line: 127, column: 7)
!16094 = !DILocation(line: 0, scope: !16067)
!16095 = !DILocation(line: 91, column: 6, scope: !16096)
!16096 = distinct !DILexicalBlock(scope: !16067, file: !2385, line: 91, column: 6)
!16097 = !DILocation(line: 91, column: 6, scope: !16067)
!16098 = !DILocation(line: 99, column: 2, scope: !16099)
!16099 = distinct !DILexicalBlock(scope: !16100, file: !2385, line: 99, column: 2)
!16100 = distinct !DILexicalBlock(scope: !16067, file: !2385, line: 99, column: 2)
!16101 = !DILocation(line: 99, column: 2, scope: !16100)
!16102 = !DILocation(line: 99, column: 2, scope: !16103)
!16103 = distinct !DILexicalBlock(scope: !16099, file: !2385, line: 99, column: 2)
!16104 = !DILocation(line: 100, column: 6, scope: !16067)
!16105 = !DILocation(line: 100, column: 9, scope: !16067)
!16106 = !DILocation(line: 0, scope: !16079)
!16107 = !DILocalVariable(name: "l", arg: 1, scope: !16108, file: !259, line: 136, type: !16111)
!16108 = distinct !DISubprogram(name: "k_spin_lock", scope: !259, file: !259, line: 136, type: !16109, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !16112)
!16109 = !DISubroutineType(types: !16110)
!16110 = !{!16080, !16111}
!16111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2391, size: 32)
!16112 = !{!16107, !16113}
!16113 = !DILocalVariable(name: "k", scope: !16108, file: !259, line: 139, type: !16080)
!16114 = !DILocation(line: 0, scope: !16108, inlinedAt: !16115)
!16115 = distinct !DILocation(line: 102, column: 2, scope: !16079)
!16116 = !DILocation(line: 55, column: 2, scope: !16117, inlinedAt: !16121)
!16117 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6013, file: !6013, line: 42, type: !6014, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !16118)
!16118 = !{!16119, !16120}
!16119 = !DILocalVariable(name: "key", scope: !16117, file: !6013, line: 44, type: !32)
!16120 = !DILocalVariable(name: "tmp", scope: !16117, file: !6013, line: 53, type: !32)
!16121 = distinct !DILocation(line: 145, column: 10, scope: !16108, inlinedAt: !16115)
!16122 = !{i64 2046495}
!16123 = !DILocation(line: 0, scope: !16117, inlinedAt: !16121)
!16124 = !DILocation(line: 148, column: 2, scope: !16125, inlinedAt: !16115)
!16125 = distinct !DILexicalBlock(scope: !16126, file: !259, line: 148, column: 2)
!16126 = distinct !DILexicalBlock(scope: !16108, file: !259, line: 148, column: 2)
!16127 = !DILocation(line: 148, column: 2, scope: !16126, inlinedAt: !16115)
!16128 = !DILocation(line: 148, column: 2, scope: !16129, inlinedAt: !16115)
!16129 = distinct !DILexicalBlock(scope: !16125, file: !259, line: 148, column: 2)
!16130 = !DILocation(line: 160, column: 2, scope: !16108, inlinedAt: !16115)
!16131 = !DILocation(line: 106, column: 33, scope: !16090)
!16132 = !DILocation(line: 105, column: 7, scope: !16086)
!16133 = !DILocation(line: 107, column: 50, scope: !16089)
!16134 = !DILocation(line: 107, column: 48, scope: !16089)
!16135 = !DILocation(line: 0, scope: !16089)
!16136 = !DILocation(line: 109, column: 17, scope: !16089)
!16137 = !DILocation(line: 110, column: 3, scope: !16089)
!16138 = !DILocation(line: 111, column: 31, scope: !16139)
!16139 = distinct !DILexicalBlock(scope: !16090, file: !2385, line: 110, column: 10)
!16140 = !DILocation(line: 111, column: 37, scope: !16139)
!16141 = !DILocation(line: 111, column: 35, scope: !16139)
!16142 = !DILocation(line: 0, scope: !16090)
!16143 = !DILocation(line: 109, column: 8, scope: !16089)
!16144 = !DILocation(line: 109, column: 15, scope: !16089)
!16145 = !DILocation(line: 114, column: 12, scope: !16146)
!16146 = distinct !DILexicalBlock(scope: !16086, file: !2385, line: 114, column: 3)
!16147 = !DILocation(line: 0, scope: !16086)
!16148 = !DILocation(line: 114, column: 3, scope: !16146)
!16149 = !DILocation(line: 115, column: 24, scope: !16150)
!16150 = distinct !DILexicalBlock(scope: !16151, file: !2385, line: 115, column: 8)
!16151 = distinct !DILexicalBlock(scope: !16152, file: !2385, line: 114, column: 45)
!16152 = distinct !DILexicalBlock(scope: !16146, file: !2385, line: 114, column: 3)
!16153 = !DILocation(line: 115, column: 11, scope: !16150)
!16154 = !DILocation(line: 115, column: 18, scope: !16150)
!16155 = !DILocation(line: 115, column: 8, scope: !16151)
!16156 = !DILocation(line: 116, column: 15, scope: !16157)
!16157 = distinct !DILexicalBlock(scope: !16150, file: !2385, line: 115, column: 32)
!16158 = !DILocation(line: 117, column: 26, scope: !16157)
!16159 = !DILocation(line: 117, column: 5, scope: !16157)
!16160 = !DILocation(line: 123, column: 7, scope: !16086)
!16161 = !DILocation(line: 120, column: 15, scope: !16151)
!16162 = !DILocation(line: 114, column: 36, scope: !16152)
!16163 = distinct !{!16163, !16148, !16164}
!16164 = !DILocation(line: 121, column: 3, scope: !16146)
!16165 = !DILocation(line: 124, column: 4, scope: !16166)
!16166 = distinct !DILexicalBlock(scope: !16167, file: !2385, line: 123, column: 18)
!16167 = distinct !DILexicalBlock(scope: !16086, file: !2385, line: 123, column: 7)
!16168 = !DILocation(line: 125, column: 3, scope: !16166)
!16169 = !DILocation(line: 127, column: 13, scope: !16093)
!16170 = !DILocation(line: 127, column: 10, scope: !16093)
!16171 = !DILocation(line: 127, column: 7, scope: !16086)
!16172 = !DILocation(line: 137, column: 24, scope: !16092)
!16173 = !DILocation(line: 0, scope: !16092)
!16174 = !DILocation(line: 139, column: 18, scope: !16175)
!16175 = distinct !DILexicalBlock(scope: !16092, file: !2385, line: 139, column: 8)
!16176 = !DILocation(line: 139, column: 23, scope: !16175)
!16177 = !DILocation(line: 141, column: 5, scope: !16178)
!16178 = distinct !DILexicalBlock(scope: !16175, file: !2385, line: 140, column: 48)
!16179 = !DILocation(line: 142, column: 4, scope: !16178)
!16180 = !DILocalVariable(name: "key", arg: 2, scope: !16181, file: !259, line: 190, type: !16080)
!16181 = distinct !DISubprogram(name: "k_spin_unlock", scope: !259, file: !259, line: 189, type: !16182, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !16184)
!16182 = !DISubroutineType(types: !16183)
!16183 = !{null, !16111, !16080}
!16184 = !{!16185, !16180}
!16185 = !DILocalVariable(name: "l", arg: 1, scope: !16181, file: !259, line: 189, type: !16111)
!16186 = !DILocation(line: 0, scope: !16181, inlinedAt: !16187)
!16187 = distinct !DILocation(line: 102, column: 2, scope: !16087)
!16188 = !DILocation(line: 194, column: 2, scope: !16189, inlinedAt: !16187)
!16189 = distinct !DILexicalBlock(scope: !16190, file: !259, line: 194, column: 2)
!16190 = distinct !DILexicalBlock(scope: !16181, file: !259, line: 194, column: 2)
!16191 = !DILocation(line: 194, column: 2, scope: !16190, inlinedAt: !16187)
!16192 = !DILocation(line: 194, column: 2, scope: !16193, inlinedAt: !16187)
!16193 = distinct !DILexicalBlock(scope: !16189, file: !259, line: 194, column: 2)
!16194 = !DILocalVariable(name: "key", arg: 1, scope: !16195, file: !6013, line: 84, type: !32)
!16195 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6013, file: !6013, line: 84, type: !6024, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !16196)
!16196 = !{!16194}
!16197 = !DILocation(line: 0, scope: !16195, inlinedAt: !16198)
!16198 = distinct !DILocation(line: 215, column: 2, scope: !16181, inlinedAt: !16187)
!16199 = !DILocation(line: 95, column: 2, scope: !16195, inlinedAt: !16198)
!16200 = !{i64 2047312}
!16201 = !DILocation(line: 148, column: 1, scope: !16067)
!16202 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !153, file: !153, line: 225, type: !16203, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !16207)
!16203 = !DISubroutineType(types: !16204)
!16204 = !{!345, !16205}
!16205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16206, size: 32)
!16206 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2362)
!16207 = !{!16208}
!16208 = !DILocalVariable(name: "node", arg: 1, scope: !16202, file: !153, line: 225, type: !16205)
!16209 = !DILocation(line: 0, scope: !16202)
!16210 = !DILocation(line: 227, column: 15, scope: !16202)
!16211 = !DILocation(line: 227, column: 20, scope: !16202)
!16212 = !DILocation(line: 227, column: 2, scope: !16202)
!16213 = distinct !DISubprogram(name: "elapsed", scope: !2385, file: !2385, line: 62, type: !16214, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !2048)
!16214 = !DISubroutineType(types: !16215)
!16215 = !{!742}
!16216 = !DILocation(line: 64, column: 9, scope: !16213)
!16217 = !DILocation(line: 64, column: 28, scope: !16213)
!16218 = !DILocation(line: 64, column: 35, scope: !16213)
!16219 = !DILocation(line: 64, column: 2, scope: !16213)
!16220 = distinct !DISubprogram(name: "first", scope: !2385, file: !2385, line: 39, type: !16221, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !16223)
!16221 = !DISubroutineType(types: !16222)
!16222 = !{!2358}
!16223 = !{!16224}
!16224 = !DILocalVariable(name: "t", scope: !16220, file: !2385, line: 41, type: !16225)
!16225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2362, size: 32)
!16226 = !DILocation(line: 41, column: 19, scope: !16220)
!16227 = !DILocation(line: 0, scope: !16220)
!16228 = !DILocation(line: 43, column: 9, scope: !16220)
!16229 = !DILocation(line: 43, column: 2, scope: !16220)
!16230 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !153, file: !153, line: 443, type: !16231, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !16233)
!16231 = !DISubroutineType(types: !16232)
!16232 = !{null, !16225, !16225}
!16233 = !{!16234, !16235, !16236}
!16234 = !DILocalVariable(name: "successor", arg: 1, scope: !16230, file: !153, line: 443, type: !16225)
!16235 = !DILocalVariable(name: "node", arg: 2, scope: !16230, file: !153, line: 443, type: !16225)
!16236 = !DILocalVariable(name: "prev", scope: !16230, file: !153, line: 445, type: !16237)
!16237 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16225)
!16238 = !DILocation(line: 0, scope: !16230)
!16239 = !DILocation(line: 445, column: 39, scope: !16230)
!16240 = !DILocation(line: 447, column: 8, scope: !16230)
!16241 = !DILocation(line: 447, column: 13, scope: !16230)
!16242 = !DILocation(line: 448, column: 8, scope: !16230)
!16243 = !DILocation(line: 448, column: 13, scope: !16230)
!16244 = !DILocation(line: 449, column: 8, scope: !16230)
!16245 = !DILocation(line: 449, column: 13, scope: !16230)
!16246 = !DILocation(line: 450, column: 18, scope: !16230)
!16247 = !DILocation(line: 451, column: 1, scope: !16230)
!16248 = distinct !DISubprogram(name: "next", scope: !2385, file: !2385, line: 46, type: !16249, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !16251)
!16249 = !DISubroutineType(types: !16250)
!16250 = !{!2358, !2358}
!16251 = !{!16252, !16253}
!16252 = !DILocalVariable(name: "t", arg: 1, scope: !16248, file: !2385, line: 46, type: !2358)
!16253 = !DILocalVariable(name: "n", scope: !16248, file: !2385, line: 48, type: !16225)
!16254 = !DILocation(line: 0, scope: !16248)
!16255 = !DILocation(line: 48, column: 58, scope: !16248)
!16256 = !DILocation(line: 48, column: 19, scope: !16248)
!16257 = !DILocation(line: 50, column: 9, scope: !16248)
!16258 = !DILocation(line: 50, column: 2, scope: !16248)
!16259 = distinct !DISubprogram(name: "sys_dlist_append", scope: !153, file: !153, line: 404, type: !16260, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !16263)
!16260 = !DISubroutineType(types: !16261)
!16261 = !{null, !16262, !16225}
!16262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2390, size: 32)
!16263 = !{!16264, !16265, !16266}
!16264 = !DILocalVariable(name: "list", arg: 1, scope: !16259, file: !153, line: 404, type: !16262)
!16265 = !DILocalVariable(name: "node", arg: 2, scope: !16259, file: !153, line: 404, type: !16225)
!16266 = !DILocalVariable(name: "tail", scope: !16259, file: !153, line: 406, type: !16237)
!16267 = !DILocation(line: 0, scope: !16259)
!16268 = !DILocation(line: 406, column: 34, scope: !16259)
!16269 = !DILocation(line: 408, column: 8, scope: !16259)
!16270 = !DILocation(line: 408, column: 13, scope: !16259)
!16271 = !DILocation(line: 409, column: 8, scope: !16259)
!16272 = !DILocation(line: 409, column: 13, scope: !16259)
!16273 = !DILocation(line: 411, column: 8, scope: !16259)
!16274 = !DILocation(line: 411, column: 13, scope: !16259)
!16275 = !DILocation(line: 412, column: 13, scope: !16259)
!16276 = !DILocation(line: 413, column: 1, scope: !16259)
!16277 = distinct !DISubprogram(name: "next_timeout", scope: !2385, file: !2385, line: 67, type: !16214, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !16278)
!16278 = !{!16279, !16280, !16281}
!16279 = !DILocalVariable(name: "to", scope: !16277, file: !2385, line: 69, type: !2358)
!16280 = !DILocalVariable(name: "ticks_elapsed", scope: !16277, file: !2385, line: 70, type: !742)
!16281 = !DILocalVariable(name: "ret", scope: !16277, file: !2385, line: 71, type: !742)
!16282 = !DILocation(line: 69, column: 24, scope: !16277)
!16283 = !DILocation(line: 0, scope: !16277)
!16284 = !DILocation(line: 70, column: 26, scope: !16277)
!16285 = !DILocation(line: 73, column: 10, scope: !16286)
!16286 = distinct !DILexicalBlock(scope: !16277, file: !2385, line: 73, column: 6)
!16287 = !DILocation(line: 73, column: 19, scope: !16286)
!16288 = !DILocation(line: 74, column: 21, scope: !16286)
!16289 = !DILocation(line: 74, column: 30, scope: !16286)
!16290 = !DILocation(line: 74, column: 28, scope: !16286)
!16291 = !DILocation(line: 74, column: 45, scope: !16286)
!16292 = !DILocation(line: 73, column: 6, scope: !16277)
!16293 = !DILocation(line: 77, column: 9, scope: !16294)
!16294 = distinct !DILexicalBlock(scope: !16286, file: !2385, line: 76, column: 9)
!16295 = !DILocation(line: 0, scope: !16286)
!16296 = !DILocation(line: 81, column: 20, scope: !16297)
!16297 = distinct !DILexicalBlock(scope: !16277, file: !2385, line: 81, column: 6)
!16298 = !DILocation(line: 81, column: 6, scope: !16297)
!16299 = !DILocation(line: 81, column: 32, scope: !16297)
!16300 = !DILocation(line: 85, column: 2, scope: !16277)
!16301 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !153, file: !153, line: 341, type: !16302, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !16304)
!16302 = !DISubroutineType(types: !16303)
!16303 = !{!16225, !16262, !16225}
!16304 = !{!16305, !16306}
!16305 = !DILocalVariable(name: "list", arg: 1, scope: !16301, file: !153, line: 341, type: !16262)
!16306 = !DILocalVariable(name: "node", arg: 2, scope: !16301, file: !153, line: 342, type: !16225)
!16307 = !DILocation(line: 0, scope: !16301)
!16308 = !DILocation(line: 344, column: 15, scope: !16301)
!16309 = !DILocation(line: 344, column: 9, scope: !16301)
!16310 = !DILocation(line: 344, column: 26, scope: !16301)
!16311 = !DILocation(line: 344, column: 2, scope: !16301)
!16312 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !153, file: !153, line: 325, type: !16302, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !16313)
!16313 = !{!16314, !16315}
!16314 = !DILocalVariable(name: "list", arg: 1, scope: !16312, file: !153, line: 325, type: !16262)
!16315 = !DILocalVariable(name: "node", arg: 2, scope: !16312, file: !153, line: 326, type: !16225)
!16316 = !DILocation(line: 0, scope: !16312)
!16317 = !DILocation(line: 328, column: 24, scope: !16312)
!16318 = !DILocation(line: 328, column: 15, scope: !16312)
!16319 = !DILocation(line: 328, column: 9, scope: !16312)
!16320 = !DILocation(line: 328, column: 45, scope: !16312)
!16321 = !DILocation(line: 328, column: 2, scope: !16312)
!16322 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !153, file: !153, line: 294, type: !16323, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !16325)
!16323 = !DISubroutineType(types: !16324)
!16324 = !{!16225, !16262}
!16325 = !{!16326}
!16326 = !DILocalVariable(name: "list", arg: 1, scope: !16322, file: !153, line: 294, type: !16262)
!16327 = !DILocation(line: 0, scope: !16322)
!16328 = !DILocation(line: 296, column: 9, scope: !16322)
!16329 = !DILocation(line: 296, column: 2, scope: !16322)
!16330 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !153, file: !153, line: 266, type: !16331, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !16333)
!16331 = !DISubroutineType(types: !16332)
!16332 = !{!345, !16262}
!16333 = !{!16334}
!16334 = !DILocalVariable(name: "list", arg: 1, scope: !16330, file: !153, line: 266, type: !16262)
!16335 = !DILocation(line: 0, scope: !16330)
!16336 = !DILocation(line: 268, column: 15, scope: !16330)
!16337 = !DILocation(line: 268, column: 20, scope: !16330)
!16338 = !DILocation(line: 268, column: 2, scope: !16330)
!16339 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2385, file: !2385, line: 150, type: !16340, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !16342)
!16340 = !DISubroutineType(types: !16341)
!16341 = !{!119, !2358}
!16342 = !{!16343, !16344, !16345, !16347}
!16343 = !DILocalVariable(name: "to", arg: 1, scope: !16339, file: !2385, line: 150, type: !2358)
!16344 = !DILocalVariable(name: "ret", scope: !16339, file: !2385, line: 152, type: !119)
!16345 = !DILocalVariable(name: "__i", scope: !16346, file: !2385, line: 154, type: !16080)
!16346 = distinct !DILexicalBlock(scope: !16339, file: !2385, line: 154, column: 2)
!16347 = !DILocalVariable(name: "__key", scope: !16346, file: !2385, line: 154, type: !16080)
!16348 = !DILocation(line: 0, scope: !16339)
!16349 = !DILocation(line: 0, scope: !16346)
!16350 = !DILocation(line: 0, scope: !16108, inlinedAt: !16351)
!16351 = distinct !DILocation(line: 154, column: 2, scope: !16346)
!16352 = !DILocation(line: 55, column: 2, scope: !16117, inlinedAt: !16353)
!16353 = distinct !DILocation(line: 145, column: 10, scope: !16108, inlinedAt: !16351)
!16354 = !DILocation(line: 0, scope: !16117, inlinedAt: !16353)
!16355 = !DILocation(line: 148, column: 2, scope: !16125, inlinedAt: !16351)
!16356 = !DILocation(line: 148, column: 2, scope: !16126, inlinedAt: !16351)
!16357 = !DILocation(line: 148, column: 2, scope: !16129, inlinedAt: !16351)
!16358 = !DILocation(line: 160, column: 2, scope: !16108, inlinedAt: !16351)
!16359 = !DILocation(line: 155, column: 7, scope: !16360)
!16360 = distinct !DILexicalBlock(scope: !16361, file: !2385, line: 155, column: 7)
!16361 = distinct !DILexicalBlock(scope: !16362, file: !2385, line: 154, column: 24)
!16362 = distinct !DILexicalBlock(scope: !16346, file: !2385, line: 154, column: 2)
!16363 = !DILocation(line: 155, column: 7, scope: !16361)
!16364 = !DILocation(line: 156, column: 4, scope: !16365)
!16365 = distinct !DILexicalBlock(scope: !16360, file: !2385, line: 155, column: 39)
!16366 = !DILocation(line: 158, column: 3, scope: !16365)
!16367 = !DILocation(line: 0, scope: !16181, inlinedAt: !16368)
!16368 = distinct !DILocation(line: 154, column: 2, scope: !16362)
!16369 = !DILocation(line: 194, column: 2, scope: !16189, inlinedAt: !16368)
!16370 = !DILocation(line: 194, column: 2, scope: !16190, inlinedAt: !16368)
!16371 = !DILocation(line: 194, column: 2, scope: !16193, inlinedAt: !16368)
!16372 = !DILocation(line: 0, scope: !16195, inlinedAt: !16373)
!16373 = distinct !DILocation(line: 215, column: 2, scope: !16181, inlinedAt: !16368)
!16374 = !DILocation(line: 95, column: 2, scope: !16195, inlinedAt: !16373)
!16375 = !DILocation(line: 161, column: 2, scope: !16339)
!16376 = distinct !DISubprogram(name: "remove_timeout", scope: !2385, file: !2385, line: 53, type: !2379, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !16377)
!16377 = !{!16378}
!16378 = !DILocalVariable(name: "t", arg: 1, scope: !16376, file: !2385, line: 53, type: !2358)
!16379 = !DILocation(line: 0, scope: !16376)
!16380 = !DILocation(line: 55, column: 6, scope: !16381)
!16381 = distinct !DILexicalBlock(scope: !16376, file: !2385, line: 55, column: 6)
!16382 = !DILocation(line: 55, column: 14, scope: !16381)
!16383 = !DILocation(line: 55, column: 6, scope: !16376)
!16384 = !DILocation(line: 56, column: 25, scope: !16385)
!16385 = distinct !DILexicalBlock(scope: !16381, file: !2385, line: 55, column: 23)
!16386 = !DILocation(line: 56, column: 12, scope: !16385)
!16387 = !DILocation(line: 56, column: 19, scope: !16385)
!16388 = !DILocation(line: 57, column: 2, scope: !16385)
!16389 = !DILocation(line: 59, column: 23, scope: !16376)
!16390 = !DILocation(line: 59, column: 2, scope: !16376)
!16391 = !DILocation(line: 60, column: 1, scope: !16376)
!16392 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !153, file: !153, line: 496, type: !16393, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !16395)
!16393 = !DISubroutineType(types: !16394)
!16394 = !{null, !16225}
!16395 = !{!16396, !16397, !16398}
!16396 = !DILocalVariable(name: "node", arg: 1, scope: !16392, file: !153, line: 496, type: !16225)
!16397 = !DILocalVariable(name: "prev", scope: !16392, file: !153, line: 498, type: !16237)
!16398 = !DILocalVariable(name: "next", scope: !16392, file: !153, line: 499, type: !16237)
!16399 = !DILocation(line: 0, scope: !16392)
!16400 = !DILocation(line: 498, column: 34, scope: !16392)
!16401 = !DILocation(line: 499, column: 34, scope: !16392)
!16402 = !DILocation(line: 501, column: 8, scope: !16392)
!16403 = !DILocation(line: 501, column: 13, scope: !16392)
!16404 = !DILocation(line: 502, column: 8, scope: !16392)
!16405 = !DILocation(line: 502, column: 13, scope: !16392)
!16406 = !DILocation(line: 503, column: 2, scope: !16392)
!16407 = !DILocation(line: 504, column: 1, scope: !16392)
!16408 = distinct !DISubprogram(name: "sys_dnode_init", scope: !153, file: !153, line: 211, type: !16393, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !16409)
!16409 = !{!16410}
!16410 = !DILocalVariable(name: "node", arg: 1, scope: !16408, file: !153, line: 211, type: !16225)
!16411 = !DILocation(line: 0, scope: !16408)
!16412 = !DILocation(line: 213, column: 8, scope: !16408)
!16413 = !DILocation(line: 213, column: 13, scope: !16408)
!16414 = !DILocation(line: 214, column: 8, scope: !16408)
!16415 = !DILocation(line: 214, column: 13, scope: !16408)
!16416 = !DILocation(line: 215, column: 1, scope: !16408)
!16417 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2385, file: !2385, line: 183, type: !16418, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !16422)
!16418 = !DISubroutineType(types: !16419)
!16419 = !{!114, !16420}
!16420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16421, size: 32)
!16421 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2359)
!16422 = !{!16423, !16424, !16425, !16427}
!16423 = !DILocalVariable(name: "timeout", arg: 1, scope: !16417, file: !2385, line: 183, type: !16420)
!16424 = !DILocalVariable(name: "ticks", scope: !16417, file: !2385, line: 185, type: !114)
!16425 = !DILocalVariable(name: "__i", scope: !16426, file: !2385, line: 187, type: !16080)
!16426 = distinct !DILexicalBlock(scope: !16417, file: !2385, line: 187, column: 2)
!16427 = !DILocalVariable(name: "__key", scope: !16426, file: !2385, line: 187, type: !16080)
!16428 = !DILocation(line: 0, scope: !16417)
!16429 = !DILocation(line: 0, scope: !16426)
!16430 = !DILocation(line: 0, scope: !16108, inlinedAt: !16431)
!16431 = distinct !DILocation(line: 187, column: 2, scope: !16426)
!16432 = !DILocation(line: 55, column: 2, scope: !16117, inlinedAt: !16433)
!16433 = distinct !DILocation(line: 145, column: 10, scope: !16108, inlinedAt: !16431)
!16434 = !DILocation(line: 0, scope: !16117, inlinedAt: !16433)
!16435 = !DILocation(line: 148, column: 2, scope: !16125, inlinedAt: !16431)
!16436 = !DILocation(line: 148, column: 2, scope: !16126, inlinedAt: !16431)
!16437 = !DILocation(line: 148, column: 2, scope: !16129, inlinedAt: !16431)
!16438 = !DILocation(line: 160, column: 2, scope: !16108, inlinedAt: !16431)
!16439 = !DILocation(line: 188, column: 11, scope: !16440)
!16440 = distinct !DILexicalBlock(scope: !16441, file: !2385, line: 187, column: 24)
!16441 = distinct !DILexicalBlock(scope: !16426, file: !2385, line: 187, column: 2)
!16442 = !DILocation(line: 0, scope: !16181, inlinedAt: !16443)
!16443 = distinct !DILocation(line: 187, column: 2, scope: !16441)
!16444 = !DILocation(line: 194, column: 2, scope: !16189, inlinedAt: !16443)
!16445 = !DILocation(line: 194, column: 2, scope: !16190, inlinedAt: !16443)
!16446 = !DILocation(line: 194, column: 2, scope: !16193, inlinedAt: !16443)
!16447 = !DILocation(line: 0, scope: !16195, inlinedAt: !16448)
!16448 = distinct !DILocation(line: 215, column: 2, scope: !16181, inlinedAt: !16443)
!16449 = !DILocation(line: 95, column: 2, scope: !16195, inlinedAt: !16448)
!16450 = !DILocation(line: 191, column: 2, scope: !16417)
!16451 = distinct !DISubprogram(name: "timeout_rem", scope: !2385, file: !2385, line: 165, type: !16418, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !16452)
!16452 = !{!16453, !16454, !16455}
!16453 = !DILocalVariable(name: "timeout", arg: 1, scope: !16451, file: !2385, line: 165, type: !16420)
!16454 = !DILocalVariable(name: "ticks", scope: !16451, file: !2385, line: 167, type: !114)
!16455 = !DILocalVariable(name: "t", scope: !16456, file: !2385, line: 173, type: !2358)
!16456 = distinct !DILexicalBlock(scope: !16451, file: !2385, line: 173, column: 2)
!16457 = !DILocation(line: 0, scope: !16451)
!16458 = !DILocation(line: 169, column: 6, scope: !16459)
!16459 = distinct !DILexicalBlock(scope: !16451, file: !2385, line: 169, column: 6)
!16460 = !DILocation(line: 169, column: 6, scope: !16451)
!16461 = !DILocation(line: 173, column: 28, scope: !16456)
!16462 = !DILocation(line: 0, scope: !16456)
!16463 = !DILocation(line: 173, column: 39, scope: !16464)
!16464 = distinct !DILexicalBlock(scope: !16456, file: !2385, line: 173, column: 2)
!16465 = !DILocation(line: 173, column: 2, scope: !16456)
!16466 = !DILocation(line: 174, column: 15, scope: !16467)
!16467 = distinct !DILexicalBlock(scope: !16464, file: !2385, line: 173, column: 61)
!16468 = !DILocation(line: 174, column: 9, scope: !16467)
!16469 = !DILocation(line: 175, column: 15, scope: !16470)
!16470 = distinct !DILexicalBlock(scope: !16467, file: !2385, line: 175, column: 7)
!16471 = !DILocation(line: 175, column: 7, scope: !16467)
!16472 = !DILocation(line: 173, column: 52, scope: !16464)
!16473 = distinct !{!16473, !16465, !16474}
!16474 = !DILocation(line: 178, column: 2, scope: !16456)
!16475 = !DILocation(line: 180, column: 17, scope: !16451)
!16476 = !DILocation(line: 180, column: 15, scope: !16451)
!16477 = !DILocation(line: 180, column: 2, scope: !16451)
!16478 = !DILocation(line: 181, column: 1, scope: !16451)
!16479 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !13298, file: !13298, line: 35, type: !16480, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !16482)
!16480 = !DISubroutineType(types: !16481)
!16481 = !{!345, !16420}
!16482 = !{!16483}
!16483 = !DILocalVariable(name: "to", arg: 1, scope: !16479, file: !13298, line: 35, type: !16420)
!16484 = !DILocation(line: 0, scope: !16479)
!16485 = !DILocation(line: 37, column: 35, scope: !16479)
!16486 = !DILocation(line: 37, column: 10, scope: !16479)
!16487 = !DILocation(line: 37, column: 9, scope: !16479)
!16488 = !DILocation(line: 37, column: 2, scope: !16479)
!16489 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2385, file: !2385, line: 194, type: !16418, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !16490)
!16490 = !{!16491, !16492, !16493, !16495}
!16491 = !DILocalVariable(name: "timeout", arg: 1, scope: !16489, file: !2385, line: 194, type: !16420)
!16492 = !DILocalVariable(name: "ticks", scope: !16489, file: !2385, line: 196, type: !114)
!16493 = !DILocalVariable(name: "__i", scope: !16494, file: !2385, line: 198, type: !16080)
!16494 = distinct !DILexicalBlock(scope: !16489, file: !2385, line: 198, column: 2)
!16495 = !DILocalVariable(name: "__key", scope: !16494, file: !2385, line: 198, type: !16080)
!16496 = !DILocation(line: 0, scope: !16489)
!16497 = !DILocation(line: 0, scope: !16494)
!16498 = !DILocation(line: 0, scope: !16108, inlinedAt: !16499)
!16499 = distinct !DILocation(line: 198, column: 2, scope: !16494)
!16500 = !DILocation(line: 55, column: 2, scope: !16117, inlinedAt: !16501)
!16501 = distinct !DILocation(line: 145, column: 10, scope: !16108, inlinedAt: !16499)
!16502 = !DILocation(line: 0, scope: !16117, inlinedAt: !16501)
!16503 = !DILocation(line: 148, column: 2, scope: !16125, inlinedAt: !16499)
!16504 = !DILocation(line: 148, column: 2, scope: !16126, inlinedAt: !16499)
!16505 = !DILocation(line: 148, column: 2, scope: !16129, inlinedAt: !16499)
!16506 = !DILocation(line: 160, column: 2, scope: !16108, inlinedAt: !16499)
!16507 = !DILocation(line: 199, column: 11, scope: !16508)
!16508 = distinct !DILexicalBlock(scope: !16509, file: !2385, line: 198, column: 24)
!16509 = distinct !DILexicalBlock(scope: !16494, file: !2385, line: 198, column: 2)
!16510 = !DILocation(line: 199, column: 23, scope: !16508)
!16511 = !DILocation(line: 0, scope: !16181, inlinedAt: !16512)
!16512 = distinct !DILocation(line: 198, column: 2, scope: !16509)
!16513 = !DILocation(line: 194, column: 2, scope: !16189, inlinedAt: !16512)
!16514 = !DILocation(line: 194, column: 2, scope: !16190, inlinedAt: !16512)
!16515 = !DILocation(line: 194, column: 2, scope: !16193, inlinedAt: !16512)
!16516 = !DILocation(line: 0, scope: !16195, inlinedAt: !16517)
!16517 = distinct !DILocation(line: 215, column: 2, scope: !16181, inlinedAt: !16512)
!16518 = !DILocation(line: 95, column: 2, scope: !16195, inlinedAt: !16517)
!16519 = !DILocation(line: 199, column: 21, scope: !16508)
!16520 = !DILocation(line: 202, column: 2, scope: !16489)
!16521 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2385, file: !2385, line: 205, type: !16214, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !16522)
!16522 = !{!16523, !16524, !16526}
!16523 = !DILocalVariable(name: "ret", scope: !16521, file: !2385, line: 207, type: !742)
!16524 = !DILocalVariable(name: "__i", scope: !16525, file: !2385, line: 209, type: !16080)
!16525 = distinct !DILexicalBlock(scope: !16521, file: !2385, line: 209, column: 2)
!16526 = !DILocalVariable(name: "__key", scope: !16525, file: !2385, line: 209, type: !16080)
!16527 = !DILocation(line: 0, scope: !16521)
!16528 = !DILocation(line: 0, scope: !16525)
!16529 = !DILocation(line: 0, scope: !16108, inlinedAt: !16530)
!16530 = distinct !DILocation(line: 209, column: 2, scope: !16525)
!16531 = !DILocation(line: 55, column: 2, scope: !16117, inlinedAt: !16532)
!16532 = distinct !DILocation(line: 145, column: 10, scope: !16108, inlinedAt: !16530)
!16533 = !DILocation(line: 0, scope: !16117, inlinedAt: !16532)
!16534 = !DILocation(line: 148, column: 2, scope: !16125, inlinedAt: !16530)
!16535 = !DILocation(line: 148, column: 2, scope: !16126, inlinedAt: !16530)
!16536 = !DILocation(line: 148, column: 2, scope: !16129, inlinedAt: !16530)
!16537 = !DILocation(line: 160, column: 2, scope: !16108, inlinedAt: !16530)
!16538 = !DILocation(line: 210, column: 9, scope: !16539)
!16539 = distinct !DILexicalBlock(scope: !16540, file: !2385, line: 209, column: 24)
!16540 = distinct !DILexicalBlock(scope: !16525, file: !2385, line: 209, column: 2)
!16541 = !DILocation(line: 0, scope: !16181, inlinedAt: !16542)
!16542 = distinct !DILocation(line: 209, column: 2, scope: !16540)
!16543 = !DILocation(line: 194, column: 2, scope: !16189, inlinedAt: !16542)
!16544 = !DILocation(line: 194, column: 2, scope: !16190, inlinedAt: !16542)
!16545 = !DILocation(line: 194, column: 2, scope: !16193, inlinedAt: !16542)
!16546 = !DILocation(line: 0, scope: !16195, inlinedAt: !16547)
!16547 = distinct !DILocation(line: 215, column: 2, scope: !16181, inlinedAt: !16542)
!16548 = !DILocation(line: 95, column: 2, scope: !16195, inlinedAt: !16547)
!16549 = !DILocation(line: 212, column: 2, scope: !16521)
!16550 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2385, file: !2385, line: 215, type: !10792, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !16551)
!16551 = !{!16552, !16553, !16554, !16556, !16557, !16560, !16561}
!16552 = !DILocalVariable(name: "ticks", arg: 1, scope: !16550, file: !2385, line: 215, type: !742)
!16553 = !DILocalVariable(name: "is_idle", arg: 2, scope: !16550, file: !2385, line: 215, type: !345)
!16554 = !DILocalVariable(name: "__i", scope: !16555, file: !2385, line: 217, type: !16080)
!16555 = distinct !DILexicalBlock(scope: !16550, file: !2385, line: 217, column: 2)
!16556 = !DILocalVariable(name: "__key", scope: !16555, file: !2385, line: 217, type: !16080)
!16557 = !DILocalVariable(name: "next_to", scope: !16558, file: !2385, line: 218, type: !119)
!16558 = distinct !DILexicalBlock(scope: !16559, file: !2385, line: 217, column: 24)
!16559 = distinct !DILexicalBlock(scope: !16555, file: !2385, line: 217, column: 2)
!16560 = !DILocalVariable(name: "sooner", scope: !16558, file: !2385, line: 219, type: !345)
!16561 = !DILocalVariable(name: "imminent", scope: !16558, file: !2385, line: 221, type: !345)
!16562 = !DILocation(line: 0, scope: !16550)
!16563 = !DILocation(line: 0, scope: !16555)
!16564 = !DILocation(line: 0, scope: !16108, inlinedAt: !16565)
!16565 = distinct !DILocation(line: 217, column: 2, scope: !16555)
!16566 = !DILocation(line: 55, column: 2, scope: !16117, inlinedAt: !16567)
!16567 = distinct !DILocation(line: 145, column: 10, scope: !16108, inlinedAt: !16565)
!16568 = !DILocation(line: 0, scope: !16117, inlinedAt: !16567)
!16569 = !DILocation(line: 148, column: 2, scope: !16125, inlinedAt: !16565)
!16570 = !DILocation(line: 148, column: 2, scope: !16126, inlinedAt: !16565)
!16571 = !DILocation(line: 148, column: 2, scope: !16129, inlinedAt: !16565)
!16572 = !DILocation(line: 160, column: 2, scope: !16108, inlinedAt: !16565)
!16573 = !DILocation(line: 218, column: 17, scope: !16558)
!16574 = !DILocation(line: 0, scope: !16558)
!16575 = !DILocation(line: 221, column: 27, scope: !16558)
!16576 = !DILocation(line: 233, column: 17, scope: !16577)
!16577 = distinct !DILexicalBlock(scope: !16558, file: !2385, line: 233, column: 7)
!16578 = !DILocation(line: 234, column: 26, scope: !16579)
!16579 = distinct !DILexicalBlock(scope: !16577, file: !2385, line: 233, column: 56)
!16580 = !DILocation(line: 234, column: 4, scope: !16579)
!16581 = !DILocation(line: 235, column: 3, scope: !16579)
!16582 = !DILocation(line: 0, scope: !16181, inlinedAt: !16583)
!16583 = distinct !DILocation(line: 217, column: 2, scope: !16559)
!16584 = !DILocation(line: 194, column: 2, scope: !16189, inlinedAt: !16583)
!16585 = !DILocation(line: 194, column: 2, scope: !16190, inlinedAt: !16583)
!16586 = !DILocation(line: 194, column: 2, scope: !16193, inlinedAt: !16583)
!16587 = !DILocation(line: 0, scope: !16195, inlinedAt: !16588)
!16588 = distinct !DILocation(line: 215, column: 2, scope: !16181, inlinedAt: !16583)
!16589 = !DILocation(line: 95, column: 2, scope: !16195, inlinedAt: !16588)
!16590 = !DILocation(line: 237, column: 1, scope: !16550)
!16591 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2385, file: !2385, line: 239, type: !16592, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !16594)
!16592 = !DISubroutineType(types: !16593)
!16593 = !{null, !742}
!16594 = !{!16595, !16596, !16597, !16599}
!16595 = !DILocalVariable(name: "ticks", arg: 1, scope: !16591, file: !2385, line: 239, type: !742)
!16596 = !DILocalVariable(name: "key", scope: !16591, file: !2385, line: 245, type: !16080)
!16597 = !DILocalVariable(name: "t", scope: !16598, file: !2385, line: 262, type: !2358)
!16598 = distinct !DILexicalBlock(scope: !16591, file: !2385, line: 261, column: 67)
!16599 = !DILocalVariable(name: "dt", scope: !16598, file: !2385, line: 263, type: !119)
!16600 = !DILocation(line: 0, scope: !16591)
!16601 = !DILocation(line: 242, column: 2, scope: !16591)
!16602 = !DILocation(line: 0, scope: !16108, inlinedAt: !16603)
!16603 = distinct !DILocation(line: 245, column: 25, scope: !16591)
!16604 = !DILocation(line: 55, column: 2, scope: !16117, inlinedAt: !16605)
!16605 = distinct !DILocation(line: 145, column: 10, scope: !16108, inlinedAt: !16603)
!16606 = !DILocation(line: 0, scope: !16117, inlinedAt: !16605)
!16607 = !DILocation(line: 148, column: 2, scope: !16125, inlinedAt: !16603)
!16608 = !DILocation(line: 148, column: 2, scope: !16126, inlinedAt: !16603)
!16609 = !DILocation(line: 148, column: 2, scope: !16129, inlinedAt: !16603)
!16610 = !DILocation(line: 160, column: 2, scope: !16108, inlinedAt: !16603)
!16611 = !DILocation(line: 261, column: 9, scope: !16591)
!16612 = !DILocation(line: 261, column: 17, scope: !16591)
!16613 = !DILocation(line: 261, column: 25, scope: !16591)
!16614 = !DILocation(line: 261, column: 37, scope: !16591)
!16615 = !DILocation(line: 261, column: 47, scope: !16591)
!16616 = !DILocation(line: 261, column: 44, scope: !16591)
!16617 = !DILocation(line: 261, column: 2, scope: !16591)
!16618 = !DILocation(line: 0, scope: !16598)
!16619 = !DILocation(line: 263, column: 12, scope: !16598)
!16620 = !DILocation(line: 265, column: 16, scope: !16598)
!16621 = !DILocation(line: 265, column: 13, scope: !16598)
!16622 = !DILocation(line: 266, column: 13, scope: !16598)
!16623 = !DILocation(line: 267, column: 3, scope: !16598)
!16624 = !DILocation(line: 0, scope: !16181, inlinedAt: !16625)
!16625 = distinct !DILocation(line: 269, column: 3, scope: !16598)
!16626 = !DILocation(line: 194, column: 2, scope: !16189, inlinedAt: !16625)
!16627 = !DILocation(line: 194, column: 2, scope: !16190, inlinedAt: !16625)
!16628 = !DILocation(line: 194, column: 2, scope: !16193, inlinedAt: !16625)
!16629 = !DILocation(line: 0, scope: !16195, inlinedAt: !16630)
!16630 = distinct !DILocation(line: 215, column: 2, scope: !16181, inlinedAt: !16625)
!16631 = !DILocation(line: 95, column: 2, scope: !16195, inlinedAt: !16630)
!16632 = !DILocation(line: 270, column: 6, scope: !16598)
!16633 = !DILocation(line: 270, column: 3, scope: !16598)
!16634 = !DILocation(line: 0, scope: !16108, inlinedAt: !16635)
!16635 = distinct !DILocation(line: 271, column: 9, scope: !16598)
!16636 = !DILocation(line: 55, column: 2, scope: !16117, inlinedAt: !16637)
!16637 = distinct !DILocation(line: 145, column: 10, scope: !16108, inlinedAt: !16635)
!16638 = !DILocation(line: 0, scope: !16117, inlinedAt: !16637)
!16639 = !DILocation(line: 148, column: 2, scope: !16125, inlinedAt: !16635)
!16640 = !DILocation(line: 148, column: 2, scope: !16126, inlinedAt: !16635)
!16641 = !DILocation(line: 148, column: 2, scope: !16129, inlinedAt: !16635)
!16642 = !DILocation(line: 160, column: 2, scope: !16108, inlinedAt: !16635)
!16643 = !DILocation(line: 272, column: 22, scope: !16598)
!16644 = distinct !{!16644, !16617, !16645}
!16645 = !DILocation(line: 273, column: 2, scope: !16591)
!16646 = !DILocation(line: 276, column: 19, scope: !16647)
!16647 = distinct !DILexicalBlock(scope: !16648, file: !2385, line: 275, column: 23)
!16648 = distinct !DILexicalBlock(scope: !16591, file: !2385, line: 275, column: 6)
!16649 = !DILocation(line: 277, column: 2, scope: !16647)
!16650 = !DILocation(line: 279, column: 15, scope: !16591)
!16651 = !DILocation(line: 279, column: 12, scope: !16591)
!16652 = !DILocation(line: 280, column: 21, scope: !16591)
!16653 = !DILocation(line: 282, column: 24, scope: !16591)
!16654 = !DILocation(line: 282, column: 2, scope: !16591)
!16655 = !DILocation(line: 0, scope: !16181, inlinedAt: !16656)
!16656 = distinct !DILocation(line: 284, column: 2, scope: !16591)
!16657 = !DILocation(line: 194, column: 2, scope: !16189, inlinedAt: !16656)
!16658 = !DILocation(line: 194, column: 2, scope: !16190, inlinedAt: !16656)
!16659 = !DILocation(line: 194, column: 2, scope: !16193, inlinedAt: !16656)
!16660 = !DILocation(line: 0, scope: !16195, inlinedAt: !16661)
!16661 = distinct !DILocation(line: 215, column: 2, scope: !16181, inlinedAt: !16656)
!16662 = !DILocation(line: 95, column: 2, scope: !16195, inlinedAt: !16661)
!16663 = !DILocation(line: 285, column: 1, scope: !16591)
!16664 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2385, file: !2385, line: 287, type: !16665, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !16667)
!16665 = !DISubroutineType(types: !16666)
!16666 = !{!116}
!16667 = !{!16668, !16669, !16671}
!16668 = !DILocalVariable(name: "t", scope: !16664, file: !2385, line: 289, type: !120)
!16669 = !DILocalVariable(name: "__i", scope: !16670, file: !2385, line: 291, type: !16080)
!16670 = distinct !DILexicalBlock(scope: !16664, file: !2385, line: 291, column: 2)
!16671 = !DILocalVariable(name: "__key", scope: !16670, file: !2385, line: 291, type: !16080)
!16672 = !DILocation(line: 0, scope: !16664)
!16673 = !DILocation(line: 0, scope: !16670)
!16674 = !DILocation(line: 0, scope: !16108, inlinedAt: !16675)
!16675 = distinct !DILocation(line: 291, column: 2, scope: !16670)
!16676 = !DILocation(line: 55, column: 2, scope: !16117, inlinedAt: !16677)
!16677 = distinct !DILocation(line: 145, column: 10, scope: !16108, inlinedAt: !16675)
!16678 = !DILocation(line: 0, scope: !16117, inlinedAt: !16677)
!16679 = !DILocation(line: 148, column: 2, scope: !16125, inlinedAt: !16675)
!16680 = !DILocation(line: 148, column: 2, scope: !16126, inlinedAt: !16675)
!16681 = !DILocation(line: 148, column: 2, scope: !16129, inlinedAt: !16675)
!16682 = !DILocation(line: 160, column: 2, scope: !16108, inlinedAt: !16675)
!16683 = !DILocation(line: 292, column: 7, scope: !16684)
!16684 = distinct !DILexicalBlock(scope: !16685, file: !2385, line: 291, column: 24)
!16685 = distinct !DILexicalBlock(scope: !16670, file: !2385, line: 291, column: 2)
!16686 = !DILocation(line: 292, column: 19, scope: !16684)
!16687 = !DILocation(line: 0, scope: !16181, inlinedAt: !16688)
!16688 = distinct !DILocation(line: 291, column: 2, scope: !16685)
!16689 = !DILocation(line: 194, column: 2, scope: !16189, inlinedAt: !16688)
!16690 = !DILocation(line: 194, column: 2, scope: !16190, inlinedAt: !16688)
!16691 = !DILocation(line: 194, column: 2, scope: !16193, inlinedAt: !16688)
!16692 = !DILocation(line: 0, scope: !16195, inlinedAt: !16693)
!16693 = distinct !DILocation(line: 215, column: 2, scope: !16181, inlinedAt: !16688)
!16694 = !DILocation(line: 95, column: 2, scope: !16195, inlinedAt: !16693)
!16695 = !DILocation(line: 292, column: 17, scope: !16684)
!16696 = !DILocation(line: 294, column: 2, scope: !16664)
!16697 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2385, file: !2385, line: 297, type: !3220, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !2048)
!16698 = !DILocation(line: 300, column: 19, scope: !16697)
!16699 = !DILocation(line: 300, column: 9, scope: !16697)
!16700 = !DILocation(line: 300, column: 2, scope: !16697)
!16701 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2385, file: !2385, line: 306, type: !16665, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !2048)
!16702 = !DILocation(line: 308, column: 9, scope: !16701)
!16703 = !DILocation(line: 308, column: 2, scope: !16701)
!16704 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2385, file: !2385, line: 319, type: !6429, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !16705)
!16705 = !{!16706, !16707, !16708, !16709}
!16706 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !16704, file: !2385, line: 319, type: !118)
!16707 = !DILocalVariable(name: "start_cycles", scope: !16704, file: !2385, line: 328, type: !118)
!16708 = !DILocalVariable(name: "cycles_to_wait", scope: !16704, file: !2385, line: 331, type: !118)
!16709 = !DILocalVariable(name: "current_cycles", scope: !16710, file: !2385, line: 338, type: !118)
!16710 = distinct !DILexicalBlock(scope: !16711, file: !2385, line: 337, column: 11)
!16711 = distinct !DILexicalBlock(scope: !16712, file: !2385, line: 337, column: 2)
!16712 = distinct !DILexicalBlock(scope: !16704, file: !2385, line: 337, column: 2)
!16713 = !DILocation(line: 0, scope: !16704)
!16714 = !DILocation(line: 322, column: 19, scope: !16715)
!16715 = distinct !DILexicalBlock(scope: !16704, file: !2385, line: 322, column: 6)
!16716 = !DILocation(line: 322, column: 6, scope: !16704)
!16717 = !DILocation(line: 328, column: 26, scope: !16704)
!16718 = !DILocation(line: 333, column: 43, scope: !16704)
!16719 = !DILocation(line: 337, column: 2, scope: !16704)
!16720 = !DILocation(line: 338, column: 29, scope: !16710)
!16721 = !DILocation(line: 0, scope: !16710)
!16722 = !DILocation(line: 341, column: 23, scope: !16723)
!16723 = distinct !DILexicalBlock(scope: !16710, file: !2385, line: 341, column: 7)
!16724 = !DILocation(line: 341, column: 39, scope: !16723)
!16725 = !DILocation(line: 349, column: 1, scope: !16704)
!16726 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !245, file: !245, line: 1675, type: !3220, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !2048)
!16727 = !DILocation(line: 1677, column: 9, scope: !16726)
!16728 = !DILocation(line: 1677, column: 2, scope: !16726)
!16729 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !3308, file: !3308, line: 24, type: !3220, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !2048)
!16730 = !DILocation(line: 26, column: 9, scope: !16729)
!16731 = !DILocation(line: 26, column: 2, scope: !16729)
!16732 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2385, file: !2385, line: 364, type: !16733, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2355, retainedNodes: !16735)
!16733 = !DISubroutineType(types: !16734)
!16734 = !{!120, !16070}
!16735 = !{!16736, !16737}
!16736 = !DILocalVariable(name: "timeout", arg: 1, scope: !16732, file: !2385, line: 364, type: !16070)
!16737 = !DILocalVariable(name: "dt", scope: !16732, file: !2385, line: 366, type: !114)
!16738 = !DILocation(line: 0, scope: !16732)
!16739 = !DILocation(line: 368, column: 6, scope: !16732)
!16740 = !DILocation(line: 371, column: 10, scope: !16741)
!16741 = distinct !DILexicalBlock(scope: !16742, file: !2385, line: 370, column: 47)
!16742 = distinct !DILexicalBlock(scope: !16743, file: !2385, line: 370, column: 13)
!16743 = distinct !DILexicalBlock(scope: !16732, file: !2385, line: 368, column: 6)
!16744 = !DILocation(line: 371, column: 3, scope: !16741)
!16745 = !DILocation(line: 376, column: 58, scope: !16746)
!16746 = distinct !DILexicalBlock(scope: !16747, file: !2385, line: 376, column: 7)
!16747 = distinct !DILexicalBlock(scope: !16742, file: !2385, line: 372, column: 9)
!16748 = !DILocation(line: 376, column: 7, scope: !16747)
!16749 = !DILocation(line: 376, column: 43, scope: !16746)
!16750 = !DILocation(line: 377, column: 4, scope: !16751)
!16751 = distinct !DILexicalBlock(scope: !16746, file: !2385, line: 376, column: 64)
!16752 = !DILocation(line: 379, column: 10, scope: !16747)
!16753 = !DILocation(line: 379, column: 33, scope: !16747)
!16754 = !DILocation(line: 379, column: 31, scope: !16747)
!16755 = !DILocation(line: 379, column: 3, scope: !16747)
!16756 = !DILocation(line: 0, scope: !16743)
!16757 = !DILocation(line: 381, column: 1, scope: !16732)
!16758 = distinct !DISubprogram(name: "boot_banner", scope: !16759, file: !16759, line: 26, type: !2982, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2968, retainedNodes: !2048)
!16759 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16760 = !DILocation(line: 34, column: 2, scope: !16758)
!16761 = !DILocation(line: 36, column: 1, scope: !16758)
