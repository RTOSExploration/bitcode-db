; ModuleID = 'build/96b_carbon/sys_heap/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type { [2 x i32], i32, i32, i32, i32, i32, [0 x %struct.z_heap_bucket] }
%struct.z_heap_bucket = type { i32 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.z_heap_bucket }
%struct.arm_mpu_region = type { i32, i8*, %struct.z_heap_bucket }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.z_heap_bucket, i32*, i32, %struct._thread_arch }
%struct._thread_arch = type { i32, i32 }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.z_heap_bucket, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, i32, %struct.sys_memory_stats, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon = type { %struct._dnode }
%struct.sys_memory_stats = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.k_spinlock = type {}
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.str_context = type { i8*, i32, i32 }
%struct.chunk_unit_t = type { [8 x i8] }
%struct.z_heap_stress_result = type { i32, i32, i32, i64 }
%struct.z_heap_stress_rec = type { i8* (i8*, i32)*, void (i8*, i8*)*, i8*, i32, %struct.z_heap_stress_block*, i32, i32, i32, i32 }
%struct.z_heap_stress_block = type { i8*, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.z_heap_bucket, %struct.z_heap_bucket }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %struct.z_heap_bucket*, %struct.z_heap_bucket* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32, i32, i32 }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [85 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [85 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231268 to i8*), void (i8*)* inttoptr (i32 134229403 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231268 to i8*), void (i8*)* inttoptr (i32 134229383 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231268 to i8*), void (i8*)* inttoptr (i32 134229373 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231268 to i8*), void (i8*)* inttoptr (i32 134229473 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231268 to i8*), void (i8*)* inttoptr (i32 134229463 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231268 to i8*), void (i8*)* inttoptr (i32 134229453 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231268 to i8*), void (i8*)* inttoptr (i32 134229443 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231268 to i8*), void (i8*)* inttoptr (i32 134229433 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231268 to i8*), void (i8*)* inttoptr (i32 134229423 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231268 to i8*), void (i8*)* inttoptr (i32 134229413 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231268 to i8*), void (i8*)* inttoptr (i32 134229393 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@.str = private unnamed_addr constant [21 x i8] c"System heap sample\0A\0A\00", align 1
@heap = internal global %struct.sys_heap zeroinitializer, align 4, !dbg !25
@heap_mem = internal global [256 x i8] zeroinitializer, align 1, !dbg !105
@.str.1 = private unnamed_addr constant [58 x i8] c"allocated %zu, free %zu, max allocated %zu, heap size %u\0A\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !122
@.str.24 = private unnamed_addr constant [45 x i8] c"Heap at %p contains %d units in %d buckets\0A\0A\00", align 1
@.str.1.25 = private unnamed_addr constant [187 x i8] c"  bucket#    min units        total      largest      largest\0A             threshold       chunks      (units)      (bytes)\0A  -----------------------------------------------------------\0A\00", align 1
@.str.2 = private unnamed_addr constant [26 x i8] c"%9d %12d %12d %12d %12zd\0A\00", align 1
@.str.3 = private unnamed_addr constant [14 x i8] c"\0AChunk dump:\0A\00", align 1
@.str.4 = private unnamed_addr constant [46 x i8] c"chunk %4d: [%c] size=%-4d left=%-4d right=%d\0A\00", align 1
@.str.5 = private unnamed_addr constant [72 x i8] c"\0A%zd free bytes, %zd allocated bytes, overhead = %zd bytes (%zd.%zd%%)\0A\00", align 1
@rand32.state = internal unnamed_addr global i64 123456789, align 8, !dbg !131
@.str.28 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@llvm.compiler.used = appending global [41 x i8*] [i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_39 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_20 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_23 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_25 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_72 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_73 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_74 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_75 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_76 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_20 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_23 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_25 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_72 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_73 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_74 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_75 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_76 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_44 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_47 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_50 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_44 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_47 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_50 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*)], section "llvm.metadata"
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !165
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !220
@_vector_start = external dso_local global [0 x i8], align 1
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.z_heap_bucket { i32 101384192 } }], align 4, !dbg !249
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !255
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !395
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !431
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.51, i32 0, i32 0), %struct.z_heap_bucket { i32 117571620 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.52, i32 0, i32 0), %struct.z_heap_bucket { i32 285933600 } }], align 4, !dbg !441
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !446
@.str.51 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.52 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !466
@__devicehdl_dts_ord_39 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !638
@.str.53 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_39 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !599
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !582
@__device_dts_ord_39 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.53, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_39, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_39, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !555
@__init___device_dts_ord_39 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_39 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !571
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !601
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !615
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !617
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !619
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !621
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !623
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !625
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !627
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !629
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !631
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !633
@__devicehdl_dts_ord_9 = dso_local constant [14 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 13, i16 32767], section ".__device_handles_pass2", align 2, !dbg !643
@.str.55 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !674
@__devstate_dts_ord_9 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !770
@__init___device_dts_ord_9 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_9 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !759
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !811
@__devicehdl_dts_ord_25 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !663
@.str.64 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !877
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1157
@__devstate_dts_ord_25 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1127
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1113
@__init___device_dts_ord_25 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_25 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1055
@__devicehdl_dts_ord_20 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !661
@.str.1.65 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1159
@__devstate_dts_ord_20 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1131
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1129
@__init___device_dts_ord_20 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_20 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1069
@__devicehdl_dts_ord_72 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !659
@.str.2.66 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1172
@__devstate_dts_ord_72 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1135
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1133
@__init___device_dts_ord_72 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_72 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1078
@__devicehdl_dts_ord_23 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !657
@.str.3.67 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1174
@__devstate_dts_ord_23 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1139
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1137
@__init___device_dts_ord_23 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_23 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1087
@__devicehdl_dts_ord_73 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !655
@.str.4.68 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1176
@__devstate_dts_ord_73 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1143
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1141
@__init___device_dts_ord_73 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_73 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1093
@__devicehdl_dts_ord_74 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !653
@.str.5.69 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1178
@__devstate_dts_ord_74 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1147
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1145
@__init___device_dts_ord_74 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_74 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1099
@__devicehdl_dts_ord_75 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !651
@.str.6 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1180
@__devstate_dts_ord_75 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1151
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1149
@__init___device_dts_ord_75 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_75 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1105
@__devicehdl_dts_ord_76 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !649
@.str.7 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1182
@__devstate_dts_ord_76 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1155
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1153
@__init___device_dts_ord_76 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_76 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1111
@__devicehdl_dts_ord_47 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !669
@.str.75 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_47 }, align 4, !dbg !1184
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1391
@__devstate_dts_ord_47 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1348
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1393
@__device_dts_ord_47 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.75, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_47, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_47, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1327
@__init___device_dts_ord_47 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_47 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1329
@__devicehdl_dts_ord_44 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !667
@.str.1.76 = private unnamed_addr constant [16 x i8] c"serial@40004400\00", align 1
@uart_stm32_cfg_1 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073759232 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_1, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_44 }, align 4, !dbg !1400
@__devstate_dts_ord_44 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1350
@uart_stm32_data_1 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1425
@__device_dts_ord_44 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.76, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_1 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_44, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_1 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_44, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1338
@__init___device_dts_ord_44 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_44 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1340
@__devicehdl_dts_ord_50 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !665
@.str.2.77 = private unnamed_addr constant [16 x i8] c"serial@40011400\00", align 1
@uart_stm32_cfg_2 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073812480 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_2, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_50 }, align 4, !dbg !1427
@__devstate_dts_ord_50 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1352
@uart_stm32_data_2 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1437
@__device_dts_ord_50 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2.77, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_2 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_50, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_2 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_50, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1344
@__init___device_dts_ord_50 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_50 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1346
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1354
@__pinctrl_dev_config__device_dts_ord_47 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_47, i32 0, i32 0), i8 1 }, align 4, !dbg !1362
@__pinctrl_states__device_dts_ord_47 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_47, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1385
@__pinctrl_state_pins_0__device_dts_ord_47 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1388
@__device_dts_ord_9 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.55, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_9, i8* null, i16* getelementptr inbounds ([14 x i16], [14 x i16]* @__devicehdl_dts_ord_9, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !743
@pclken_1 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 131072 }], align 4, !dbg !1417
@__pinctrl_dev_config__device_dts_ord_44 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_44, i32 0, i32 0), i8 1 }, align 4, !dbg !1419
@__pinctrl_states__device_dts_ord_44 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_44, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1421
@__pinctrl_state_pins_0__device_dts_ord_44 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 71, i32 512 }, %struct._thread_arch { i32 103, i32 0 }], align 4, !dbg !1423
@pclken_2 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 32 }], align 4, !dbg !1429
@__pinctrl_dev_config__device_dts_ord_50 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_50, i32 0, i32 0), i8 1 }, align 4, !dbg !1431
@__pinctrl_states__device_dts_ord_50 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_50, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1433
@__pinctrl_state_pins_0__device_dts_ord_50 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1224, i32 512 }, %struct._thread_arch { i32 1256, i32 0 }], align 4, !dbg !1435
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1439
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1550
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1552
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1548
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1519
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_25, %struct.device* @__device_dts_ord_20, %struct.device* @__device_dts_ord_72, %struct.device* @__device_dts_ord_23, %struct.device* @__device_dts_ord_73, %struct.device* @__device_dts_ord_74, %struct.device* @__device_dts_ord_75, %struct.device* @__device_dts_ord_76, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1554
@__device_dts_ord_25 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.64, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_25, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_25, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1053
@__device_dts_ord_20 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.65, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_20, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_20, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1067
@__device_dts_ord_72 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.66, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_72, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_72, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1076
@__device_dts_ord_23 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.67, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_23, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_23, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1085
@__device_dts_ord_73 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.68, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_73, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_73, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1091
@__device_dts_ord_74 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.69, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_74, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_74, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1097
@__device_dts_ord_75 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_75, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_75, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1103
@__device_dts_ord_76 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_76, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_76, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1109
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1644
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1686
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1689
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1696
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !1703
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !1913
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !1922
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !1929
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !1934
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.127 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.129, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.130, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.131, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.132, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.133, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.134, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.128, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.135, i32 0, i32 0)], align 4, !dbg !1960
@.str.129 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.130 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.131 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.132 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.133 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.134 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.128 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.135 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2072
@.str.8 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !2085
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2193
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2196
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2198
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1927
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !1924
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2200
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2236
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !1791
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2234
@.str.188 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !2846 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #24, !dbg !2850, !srcloc !2851
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #24, !dbg !2852, !srcloc !2853
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #24, !dbg !2854, !srcloc !2855
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #24, !dbg !2856, !srcloc !2857
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #24, !dbg !2858, !srcloc !2859
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #24, !dbg !2860, !srcloc !2861
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #24, !dbg !2862, !srcloc !2863
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #24, !dbg !2864, !srcloc !2865
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #24, !dbg !2866, !srcloc !2867
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #24, !dbg !2868, !srcloc !2869
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #24, !dbg !2870, !srcloc !2871
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #24, !dbg !2872, !srcloc !2873
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #24, !dbg !2874, !srcloc !2875
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #24, !dbg !2876, !srcloc !2877
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #24, !dbg !2878, !srcloc !2879
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #24, !dbg !2880, !srcloc !2881
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #24, !dbg !2882, !srcloc !2883
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #24, !dbg !2884, !srcloc !2885
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #24, !dbg !2886, !srcloc !2887
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #24, !dbg !2888, !srcloc !2889
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #24, !dbg !2890, !srcloc !2891
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #24, !dbg !2892, !srcloc !2893
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #24, !dbg !2894, !srcloc !2895
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #24, !dbg !2896, !srcloc !2897
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #24, !dbg !2898, !srcloc !2899
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #24, !dbg !2900, !srcloc !2901
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #24, !dbg !2902, !srcloc !2903
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #24, !dbg !2904, !srcloc !2907
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #24, !dbg !2908, !srcloc !2909
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #24, !dbg !2910, !srcloc !2911
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #24, !dbg !2912, !srcloc !2913
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #24, !dbg !2914, !srcloc !2915
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #24, !dbg !2916, !srcloc !2917
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #24, !dbg !2918, !srcloc !2919
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #24, !dbg !2920, !srcloc !2921
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #24, !dbg !2922, !srcloc !2923
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #24, !dbg !2924, !srcloc !2925
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #24, !dbg !2926, !srcloc !2927
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #24, !dbg !2928, !srcloc !2929
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #24, !dbg !2930, !srcloc !2931
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #24, !dbg !2932, !srcloc !2933
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #24, !dbg !2934, !srcloc !2935
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #24, !dbg !2936, !srcloc !2937
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #24, !dbg !2938, !srcloc !2939
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #24, !dbg !2940, !srcloc !2941
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #24, !dbg !2942, !srcloc !2943
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #24, !dbg !2944, !srcloc !2945
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #24, !dbg !2946, !srcloc !2947
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #24, !dbg !2948, !srcloc !2949
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #24, !dbg !2950, !srcloc !2951
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #24, !dbg !2952, !srcloc !2953
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #24, !dbg !2954, !srcloc !2955
  ret void, !dbg !2956
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !2959 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i32 0, i32 0)) #25, !dbg !2962
  tail call void @sys_heap_init(%struct.sys_heap* noundef nonnull @heap, i8* noundef getelementptr inbounds ([256 x i8], [256 x i8]* @heap_mem, i32 0, i32 0), i32 noundef 256) #25, !dbg !2963
  tail call void @print_sys_memory_stats() #26, !dbg !2964
  %1 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull @heap, i32 noundef 150) #25, !dbg !2965
  call void @llvm.dbg.value(metadata i8* %1, metadata !2961, metadata !DIExpression()), !dbg !2966
  tail call void @print_sys_memory_stats() #26, !dbg !2967
  %2 = tail call i8* @sys_heap_aligned_realloc(%struct.sys_heap* noundef nonnull @heap, i8* noundef %1, i32 noundef 0, i32 noundef 100) #25, !dbg !2968
  call void @llvm.dbg.value(metadata i8* %2, metadata !2961, metadata !DIExpression()), !dbg !2966
  tail call void @print_sys_memory_stats() #26, !dbg !2969
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull @heap, i8* noundef %2) #25, !dbg !2970
  tail call void @print_sys_memory_stats() #26, !dbg !2971
  ret void, !dbg !2972
}

; Function Attrs: noinline nounwind optsize
define dso_local void @print_sys_memory_stats() local_unnamed_addr #1 !dbg !2973 {
  %1 = alloca %struct.sys_memory_stats, align 4
  %2 = bitcast %struct.sys_memory_stats* %1 to i8*, !dbg !2982
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %2) #24, !dbg !2982
  call void @llvm.dbg.declare(metadata %struct.sys_memory_stats* %1, metadata !2975, metadata !DIExpression()), !dbg !2983
  %3 = call i32 @sys_heap_runtime_stats_get(%struct.sys_heap* noundef nonnull @heap, %struct.sys_memory_stats* noundef nonnull %1) #25, !dbg !2984
  %4 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 1, !dbg !2985
  %5 = load i32, i32* %4, align 4, !dbg !2985
  %6 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 0, !dbg !2986
  %7 = load i32, i32* %6, align 4, !dbg !2986
  %8 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 2, !dbg !2987
  %9 = load i32, i32* %8, align 4, !dbg !2987
  call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i32 0, i32 0), i32 noundef %5, i32 noundef %7, i32 noundef %9, i32 noundef 256) #25, !dbg !2988
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %2) #24, !dbg !2989
  ret void, !dbg !2989
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !2990 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2992, metadata !DIExpression()), !dbg !2993
  ret i32 0, !dbg !2994
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !2995 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !2999, metadata !DIExpression()), !dbg !3000
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !3001
  ret void, !dbg !3002
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #5 !dbg !3003 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !3006
  ret i8* %1, !dbg !3007
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !3008 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3020, metadata !DIExpression()), !dbg !3029
  call void @llvm.dbg.value(metadata i8* %0, metadata !3019, metadata !DIExpression()), !dbg !3029
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #26, !dbg !3030
  ret void, !dbg !3032
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !3033 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3037, metadata !DIExpression()), !dbg !3039
  call void @llvm.dbg.value(metadata i8* %1, metadata !3038, metadata !DIExpression()), !dbg !3039
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3040
  %4 = tail call i32 %3(i32 noundef %0) #25, !dbg !3040
  ret i32 %4, !dbg !3041
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !3042 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3054, metadata !DIExpression()), !dbg !3055
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3051, metadata !DIExpression()), !dbg !3055
  call void @llvm.dbg.value(metadata i8* %1, metadata !3052, metadata !DIExpression()), !dbg !3055
  call void @llvm.dbg.value(metadata i8* %2, metadata !3053, metadata !DIExpression()), !dbg !3055
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #25, !dbg !3056
  ret void, !dbg !3057
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !3058 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3062, metadata !DIExpression()), !dbg !3065
  call void @llvm.dbg.value(metadata i32 %1, metadata !3063, metadata !DIExpression()), !dbg !3065
  call void @llvm.dbg.value(metadata i32 0, metadata !3064, metadata !DIExpression()), !dbg !3065
  %3 = icmp eq i32 %1, 0, !dbg !3066
  br i1 %3, label %13, label %4, !dbg !3069

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3064, metadata !DIExpression()), !dbg !3065
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3070
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !3072
  %8 = load i8, i8* %7, align 1, !dbg !3072
  %9 = zext i8 %8 to i32, !dbg !3072
  %10 = tail call i32 %6(i32 noundef %9) #25, !dbg !3070
  %11 = add nuw i32 %5, 1, !dbg !3073
  call void @llvm.dbg.value(metadata i32 %11, metadata !3064, metadata !DIExpression()), !dbg !3065
  %12 = icmp eq i32 %11, %1, !dbg !3066
  br i1 %12, label %13, label %4, !dbg !3069, !llvm.loop !3074

13:                                               ; preds = %4, %2
  ret void, !dbg !3076
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !3077 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3081, metadata !DIExpression()), !dbg !3083
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !3084
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #24, !dbg !3084
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !3082, metadata !DIExpression()), !dbg !3085
  call void @llvm.va_start(i8* nonnull %3), !dbg !3086
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !3087
  %5 = load i32, i32* %4, align 4, !dbg !3087
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !3087
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #26, !dbg !3087
  call void @llvm.va_end(i8* nonnull %3), !dbg !3088
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #24, !dbg !3089
  ret void, !dbg !3089
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #6

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !3090 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3094, metadata !DIExpression()), !dbg !3099
  call void @llvm.dbg.value(metadata i32 %1, metadata !3095, metadata !DIExpression()), !dbg !3099
  call void @llvm.dbg.value(metadata i8* %2, metadata !3096, metadata !DIExpression()), !dbg !3099
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !3100
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !3100
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !3097, metadata !DIExpression()), !dbg !3101
  call void @llvm.va_start(i8* nonnull %5), !dbg !3102
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !3103
  %7 = load i32, i32* %6, align 4, !dbg !3103
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !3103
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #26, !dbg !3103
  call void @llvm.dbg.value(metadata i32 %9, metadata !3098, metadata !DIExpression()), !dbg !3099
  call void @llvm.va_end(i8* nonnull %5), !dbg !3104
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !3105
  ret i32 %9, !dbg !3106
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !3107 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3114, metadata !DIExpression()), !dbg !3121
  call void @llvm.dbg.value(metadata i8* %0, metadata !3111, metadata !DIExpression()), !dbg !3121
  call void @llvm.dbg.value(metadata i32 %1, metadata !3112, metadata !DIExpression()), !dbg !3121
  call void @llvm.dbg.value(metadata i8* %2, metadata !3113, metadata !DIExpression()), !dbg !3121
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !3122
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #24, !dbg !3122
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !3115, metadata !DIExpression()), !dbg !3123
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !3124
  store i8* %0, i8** %7, align 4, !dbg !3124
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !3124
  store i32 %1, i32* %8, align 4, !dbg !3124
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !3124
  store i32 0, i32* %9, align 4, !dbg !3124
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #26, !dbg !3125
  %10 = load i32, i32* %9, align 4, !dbg !3126
  %11 = load i32, i32* %8, align 4, !dbg !3128
  %12 = icmp slt i32 %10, %11, !dbg !3129
  br i1 %12, label %13, label %15, !dbg !3130

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !3131
  store i8 0, i8* %14, align 1, !dbg !3133
  br label %15, !dbg !3134

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #24, !dbg !3135
  ret i32 %10, !dbg !3136
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #7 !dbg !3137 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3142, metadata !DIExpression()), !dbg !3144
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !3143, metadata !DIExpression()), !dbg !3144
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !3145
  %4 = load i8*, i8** %3, align 4, !dbg !3145
  %5 = icmp eq i8* %4, null, !dbg !3147
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !3148
  br i1 %5, label %12, label %8, !dbg !3149

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !3150
  %10 = load i32, i32* %9, align 4, !dbg !3150
  %11 = icmp slt i32 %7, %10, !dbg !3151
  br i1 %11, label %15, label %12, !dbg !3152

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !3153
  %14 = add nsw i32 %7, 1, !dbg !3155
  store i32 %14, i32* %13, align 4, !dbg !3155
  br label %25, !dbg !3156

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !3157
  %17 = icmp eq i32 %7, %16, !dbg !3159
  br i1 %17, label %18, label %21, !dbg !3160

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !3161
  store i32 %19, i32* %6, align 4, !dbg !3161
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3163
  store i8 0, i8* %20, align 1, !dbg !3164
  br label %25, !dbg !3165

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !3166
  %23 = add nsw i32 %7, 1, !dbg !3168
  store i32 %23, i32* %6, align 4, !dbg !3168
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3169
  store i8 %22, i8* %24, align 1, !dbg !3170
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !3171
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #8 !dbg !3172 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !3182, metadata !DIExpression()), !dbg !3186
  call void @llvm.dbg.value(metadata i8* %1, metadata !3183, metadata !DIExpression()), !dbg !3186
  call void @llvm.dbg.value(metadata i8* %2, metadata !3184, metadata !DIExpression()), !dbg !3186
  call void @llvm.dbg.value(metadata i8* %3, metadata !3185, metadata !DIExpression()), !dbg !3186
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #25, !dbg !3187
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #27, !dbg !3188
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #26, !dbg !3189
  unreachable, !dbg !3190
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #9 !dbg !3191 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #27, !dbg !3295
  ret %struct.k_thread* %1, !dbg !3296
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3297 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3302, metadata !DIExpression()), !dbg !3303
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !3304, !srcloc !3306
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !3307
  ret void, !dbg !3308
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #9 !dbg !3309 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !3310, !srcloc !3312
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !3313
  ret %struct.k_thread* %1, !dbg !3314
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define dso_local void @sys_heap_free(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #10 !dbg !3315 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3326, metadata !DIExpression()), !dbg !3330
  call void @llvm.dbg.value(metadata i8* %1, metadata !3327, metadata !DIExpression()), !dbg !3330
  %3 = icmp eq i8* %1, null, !dbg !3331
  br i1 %3, label %13, label %4, !dbg !3333

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3334
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !3334
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !3328, metadata !DIExpression()), !dbg !3330
  %7 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !3335, !range !3336
  call void @llvm.dbg.value(metadata i32 %7, metadata !3329, metadata !DIExpression()), !dbg !3330
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %7, i1 noundef zeroext false) #26, !dbg !3337
  %8 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %7) #26, !dbg !3338, !range !3339
  %9 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %8) #26, !dbg !3340
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %6, i32 0, i32 4, !dbg !3341
  %11 = load i32, i32* %10, align 4, !dbg !3342
  %12 = sub i32 %11, %9, !dbg !3342
  store i32 %12, i32* %10, align 4, !dbg !3342
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #26, !dbg !3343
  br label %13

13:                                               ; preds = %2, %4
  ret void, !dbg !3344
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !3345 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3349, metadata !DIExpression()), !dbg !3353
  call void @llvm.dbg.value(metadata i8* %1, metadata !3350, metadata !DIExpression()), !dbg !3353
  call void @llvm.dbg.value(metadata i8* %1, metadata !3351, metadata !DIExpression()), !dbg !3353
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3354
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !3352, metadata !DIExpression()), !dbg !3353
  %4 = getelementptr inbounds i8, i8* %1, i32 -4, !dbg !3355
  %5 = ptrtoint i8* %4 to i32, !dbg !3356
  %6 = ptrtoint %struct.chunk_unit_t* %3 to i32, !dbg !3356
  %7 = sub i32 %5, %6, !dbg !3356
  %8 = lshr i32 %7, 3, !dbg !3357
  ret i32 %8, !dbg !3358
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #7 !dbg !3359 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3363, metadata !DIExpression()), !dbg !3368
  call void @llvm.dbg.value(metadata i32 %1, metadata !3364, metadata !DIExpression()), !dbg !3368
  call void @llvm.dbg.value(metadata i1 %2, metadata !3365, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3368
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3369
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !3366, metadata !DIExpression()), !dbg !3368
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3367, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3368
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !3370
  %6 = bitcast i8* %5 to i16*, !dbg !3370
  %7 = load i16, i16* %6, align 2, !dbg !3370
  %8 = and i16 %7, -2, !dbg !3374
  %9 = zext i1 %2 to i16, !dbg !3374
  %10 = or i16 %8, %9, !dbg !3374
  store i16 %10, i16* %6, align 2, !dbg !3370
  ret void, !dbg !3375
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3376 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3381, metadata !DIExpression()), !dbg !3383
  call void @llvm.dbg.value(metadata i32 %1, metadata !3382, metadata !DIExpression()), !dbg !3383
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !3384
  %4 = lshr i32 %3, 1, !dbg !3385
  ret i32 %4, !dbg !3386
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !3387 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3391, metadata !DIExpression()), !dbg !3393
  call void @llvm.dbg.value(metadata i32 %1, metadata !3392, metadata !DIExpression()), !dbg !3393
  %3 = shl i32 %1, 3, !dbg !3394
  %4 = add i32 %3, -4, !dbg !3395
  ret i32 %4, !dbg !3396
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3397 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3401, metadata !DIExpression()), !dbg !3403
  call void @llvm.dbg.value(metadata i32 %1, metadata !3402, metadata !DIExpression()), !dbg !3403
  %3 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3404
  %4 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3406
  br i1 %4, label %7, label %5, !dbg !3407

5:                                                ; preds = %2
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3408
  %6 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3410
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !3411
  br label %7, !dbg !3412

7:                                                ; preds = %5, %2
  %8 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3413, !range !3415
  %9 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !3416
  br i1 %9, label %13, label %10, !dbg !3417

10:                                               ; preds = %7
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !3418
  %11 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3420, !range !3415
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %11, i32 noundef %1) #26, !dbg !3421
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3422
  call void @llvm.dbg.value(metadata i32 %12, metadata !3402, metadata !DIExpression()), !dbg !3403
  br label %13, !dbg !3423

13:                                               ; preds = %10, %7
  %14 = phi i32 [ %1, %7 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !3402, metadata !DIExpression()), !dbg !3403
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %14) #26, !dbg !3424
  ret void, !dbg !3425
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3426 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3430, metadata !DIExpression()), !dbg !3432
  call void @llvm.dbg.value(metadata i32 %1, metadata !3431, metadata !DIExpression()), !dbg !3432
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3433
  %4 = add i32 %3, %1, !dbg !3434
  ret i32 %4, !dbg !3435
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3436 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3440, metadata !DIExpression()), !dbg !3442
  call void @llvm.dbg.value(metadata i32 %1, metadata !3441, metadata !DIExpression()), !dbg !3442
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !3443
  %4 = and i32 %3, 1, !dbg !3444
  %5 = icmp ne i32 %4, 0, !dbg !3443
  ret i1 %5, !dbg !3445
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3446 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3448, metadata !DIExpression()), !dbg !3453
  call void @llvm.dbg.value(metadata i32 %1, metadata !3449, metadata !DIExpression()), !dbg !3453
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3454, !range !3339
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3455
  call void @llvm.dbg.value(metadata i32 %4, metadata !3450, metadata !DIExpression()), !dbg !3456
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !3457
  ret void, !dbg !3458
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !3459 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3463, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i32 %1, metadata !3464, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i32 %2, metadata !3465, metadata !DIExpression()), !dbg !3467
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3468
  %5 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !3469
  %6 = add i32 %5, %4, !dbg !3470
  call void @llvm.dbg.value(metadata i32 %6, metadata !3466, metadata !DIExpression()), !dbg !3467
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !3471
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !3472
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !3473
  ret void, !dbg !3474
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3475 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3477, metadata !DIExpression()), !dbg !3479
  call void @llvm.dbg.value(metadata i32 %1, metadata !3478, metadata !DIExpression()), !dbg !3479
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #26, !dbg !3480
  %4 = sub i32 %1, %3, !dbg !3481
  ret i32 %4, !dbg !3482
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3483 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3485, metadata !DIExpression()), !dbg !3490
  call void @llvm.dbg.value(metadata i32 %1, metadata !3486, metadata !DIExpression()), !dbg !3490
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3491, !range !3339
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3492
  call void @llvm.dbg.value(metadata i32 %4, metadata !3487, metadata !DIExpression()), !dbg !3493
  tail call fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !3494
  ret void, !dbg !3495
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #9 !dbg !3496 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3500, metadata !DIExpression()), !dbg !3503
  call void @llvm.dbg.value(metadata i32 %1, metadata !3501, metadata !DIExpression()), !dbg !3503
  %3 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %0) #26, !dbg !3504
  %4 = add i32 %1, 1, !dbg !3505
  %5 = sub i32 %4, %3, !dbg !3506
  call void @llvm.dbg.value(metadata i32 %5, metadata !3502, metadata !DIExpression()), !dbg !3503
  %6 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 false), !dbg !3507, !range !3508
  %7 = sub nsw i32 31, %6, !dbg !3509
  ret i32 %7, !dbg !3510
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !3511 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3515, metadata !DIExpression()), !dbg !3524
  call void @llvm.dbg.value(metadata i32 %1, metadata !3516, metadata !DIExpression()), !dbg !3524
  call void @llvm.dbg.value(metadata i32 %2, metadata !3517, metadata !DIExpression()), !dbg !3524
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %2), metadata !3518, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 28, DW_OP_stack_value)), !dbg !3524
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 6, i32 %2, i32 0, !dbg !3525
  %5 = load i32, i32* %4, align 4, !dbg !3525
  %6 = icmp eq i32 %5, 0, !dbg !3526
  br i1 %6, label %7, label %12, !dbg !3527

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !3528
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !3530
  %10 = load i32, i32* %9, align 4, !dbg !3531
  %11 = or i32 %10, %8, !dbg !3531
  store i32 %11, i32* %9, align 4, !dbg !3531
  store i32 %1, i32* %4, align 4, !dbg !3532
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !3533
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !3534
  br label %14, !dbg !3535

12:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %5, metadata !3520, metadata !DIExpression()), !dbg !3536
  %13 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5) #26, !dbg !3537, !range !3538
  call void @llvm.dbg.value(metadata i32 %13, metadata !3523, metadata !DIExpression()), !dbg !3536
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %13) #26, !dbg !3539
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %5) #26, !dbg !3540
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %13, i32 noundef %1) #26, !dbg !3541
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5, i32 noundef %1) #26, !dbg !3542
  br label %14

14:                                               ; preds = %12, %7
  %15 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #26, !dbg !3543, !range !3339
  %16 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef nonnull %0, i32 noundef %15) #26, !dbg !3544
  %17 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, !dbg !3545
  %18 = load i32, i32* %17, align 4, !dbg !3546
  %19 = add i32 %18, %16, !dbg !3546
  store i32 %19, i32* %17, align 4, !dbg !3546
  ret void, !dbg !3547
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3548 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3550, metadata !DIExpression()), !dbg !3553
  call void @llvm.dbg.value(metadata i32 %1, metadata !3551, metadata !DIExpression()), !dbg !3553
  call void @llvm.dbg.value(metadata i32 %2, metadata !3552, metadata !DIExpression()), !dbg !3553
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2, i32 noundef %2) #26, !dbg !3554
  ret void, !dbg !3555
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3556 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3558, metadata !DIExpression()), !dbg !3561
  call void @llvm.dbg.value(metadata i32 %1, metadata !3559, metadata !DIExpression()), !dbg !3561
  call void @llvm.dbg.value(metadata i32 %2, metadata !3560, metadata !DIExpression()), !dbg !3561
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3, i32 noundef %2) #26, !dbg !3562
  ret void, !dbg !3563
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !3564 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3566, metadata !DIExpression()), !dbg !3568
  call void @llvm.dbg.value(metadata i32 %1, metadata !3567, metadata !DIExpression()), !dbg !3568
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #26, !dbg !3569
  ret i32 %3, !dbg !3570
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #5 !dbg !3571 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3575, metadata !DIExpression()), !dbg !3580
  call void @llvm.dbg.value(metadata i32 %1, metadata !3576, metadata !DIExpression()), !dbg !3580
  call void @llvm.dbg.value(metadata i32 %2, metadata !3577, metadata !DIExpression()), !dbg !3580
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3581
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !3578, metadata !DIExpression()), !dbg !3580
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3579, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3580
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3579, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3580
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !3582
  call void @llvm.dbg.value(metadata i8* %5, metadata !3579, metadata !DIExpression()), !dbg !3580
  %6 = bitcast i8* %5 to i16*, !dbg !3583
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !3586
  %8 = load i16, i16* %7, align 2, !dbg !3586
  %9 = zext i16 %8 to i32, !dbg !3586
  ret i32 %9, !dbg !3587
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef readnone %0) unnamed_addr #11 !dbg !3588 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3592, metadata !DIExpression()), !dbg !3593
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !3594
  ret %struct.chunk_unit_t* %2, !dbg !3595
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @chunk_set(%struct.z_heap* noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #4 !dbg !3596 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3600, metadata !DIExpression()), !dbg !3606
  call void @llvm.dbg.value(metadata i32 %1, metadata !3601, metadata !DIExpression()), !dbg !3606
  call void @llvm.dbg.value(metadata i32 %2, metadata !3602, metadata !DIExpression()), !dbg !3606
  call void @llvm.dbg.value(metadata i32 %3, metadata !3603, metadata !DIExpression()), !dbg !3606
  %5 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3607
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %5, metadata !3604, metadata !DIExpression()), !dbg !3606
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %5, i32 %1), metadata !3605, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3606
  %6 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %5, i32 %1, i32 0, i32 0, !dbg !3608
  call void @llvm.dbg.value(metadata i8* %6, metadata !3605, metadata !DIExpression()), !dbg !3606
  %7 = trunc i32 %3 to i16, !dbg !3609
  %8 = bitcast i8* %6 to i16*, !dbg !3612
  %9 = getelementptr inbounds i16, i16* %8, i32 %2, !dbg !3613
  store i16 %7, i16* %9, align 2, !dbg !3614
  ret void, !dbg !3615
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @min_chunk_size(%struct.z_heap* nocapture noundef readnone %0) unnamed_addr #11 !dbg !3616 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3620, metadata !DIExpression()), !dbg !3621
  %2 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %0, i32 noundef 1) #26, !dbg !3622
  ret i32 %2, !dbg !3623
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bytes_to_chunksz(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !3624 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3628, metadata !DIExpression()), !dbg !3630
  call void @llvm.dbg.value(metadata i32 %1, metadata !3629, metadata !DIExpression()), !dbg !3630
  %3 = add i32 %1, 4, !dbg !3631
  %4 = tail call fastcc i32 @chunksz(i32 noundef %3) #26, !dbg !3632
  ret i32 %4, !dbg !3633
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz(i32 noundef %0) unnamed_addr #11 !dbg !3634 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3638, metadata !DIExpression()), !dbg !3639
  %2 = add i32 %0, 7, !dbg !3640
  %3 = lshr i32 %2, 3, !dbg !3641
  ret i32 %3, !dbg !3642
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3643 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3647, metadata !DIExpression()), !dbg !3650
  call void @llvm.dbg.value(metadata i32 %1, metadata !3648, metadata !DIExpression()), !dbg !3650
  call void @llvm.dbg.value(metadata i32 %2, metadata !3649, metadata !DIExpression()), !dbg !3650
  %4 = shl i32 %2, 1, !dbg !3651
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1, i32 noundef %4) #26, !dbg !3652
  ret void, !dbg !3653
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3654 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3656, metadata !DIExpression()), !dbg !3659
  call void @llvm.dbg.value(metadata i32 %1, metadata !3657, metadata !DIExpression()), !dbg !3659
  call void @llvm.dbg.value(metadata i32 %2, metadata !3658, metadata !DIExpression()), !dbg !3659
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef %2) #26, !dbg !3660
  ret void, !dbg !3661
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !3662 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3664, metadata !DIExpression()), !dbg !3672
  call void @llvm.dbg.value(metadata i32 %1, metadata !3665, metadata !DIExpression()), !dbg !3672
  call void @llvm.dbg.value(metadata i32 %2, metadata !3666, metadata !DIExpression()), !dbg !3672
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 6, i32 %2, !dbg !3673
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %4, metadata !3667, metadata !DIExpression()), !dbg !3672
  %5 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3674
  %6 = icmp eq i32 %5, %1, !dbg !3675
  br i1 %6, label %7, label %14, !dbg !3676

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !3677
  %9 = xor i32 %8, -1, !dbg !3679
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !3680
  %11 = load i32, i32* %10, align 4, !dbg !3681
  %12 = and i32 %11, %9, !dbg !3681
  store i32 %12, i32* %10, align 4, !dbg !3681
  %13 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !3682
  store i32 0, i32* %13, align 4, !dbg !3683
  br label %17, !dbg !3684

14:                                               ; preds = %3
  %15 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3685
  call void @llvm.dbg.value(metadata i32 %15, metadata !3668, metadata !DIExpression()), !dbg !3686
  call void @llvm.dbg.value(metadata i32 %5, metadata !3671, metadata !DIExpression()), !dbg !3686
  %16 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !3687
  store i32 %5, i32* %16, align 4, !dbg !3688
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %15, i32 noundef %5) #26, !dbg !3689
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %5, i32 noundef %15) #26, !dbg !3690
  br label %17

17:                                               ; preds = %14, %7
  %18 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #26, !dbg !3691, !range !3339
  %19 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef nonnull %0, i32 noundef %18) #26, !dbg !3692
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, !dbg !3693
  %21 = load i32, i32* %20, align 4, !dbg !3694
  %22 = sub i32 %21, %19, !dbg !3694
  store i32 %22, i32* %20, align 4, !dbg !3694
  ret void, !dbg !3695
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !3696 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3698, metadata !DIExpression()), !dbg !3700
  call void @llvm.dbg.value(metadata i32 %1, metadata !3699, metadata !DIExpression()), !dbg !3700
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #26, !dbg !3701
  ret i32 %3, !dbg !3702
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @sys_heap_usable_size(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #5 !dbg !3703 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3707, metadata !DIExpression()), !dbg !3714
  call void @llvm.dbg.value(metadata i8* %1, metadata !3708, metadata !DIExpression()), !dbg !3714
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3715
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !3715
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !3709, metadata !DIExpression()), !dbg !3714
  %5 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %4, i8* noundef %1) #26, !dbg !3716
  call void @llvm.dbg.value(metadata i32 %5, metadata !3710, metadata !DIExpression()), !dbg !3714
  %6 = ptrtoint i8* %1 to i32, !dbg !3717
  call void @llvm.dbg.value(metadata i32 %6, metadata !3711, metadata !DIExpression()), !dbg !3714
  %7 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %4) #26, !dbg !3718
  %8 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %7, i32 %5, !dbg !3718
  %9 = ptrtoint %struct.chunk_unit_t* %8 to i32, !dbg !3719
  call void @llvm.dbg.value(metadata i32 %9, metadata !3712, metadata !DIExpression()), !dbg !3714
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %5) #26, !dbg !3720
  %11 = shl i32 %10, 3, !dbg !3721
  call void @llvm.dbg.value(metadata i32 %11, metadata !3713, metadata !DIExpression()), !dbg !3714
  %12 = sub i32 %9, %6, !dbg !3722
  %13 = add i32 %12, %11, !dbg !3723
  ret i32 %13, !dbg !3724
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 !dbg !3725 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3729, metadata !DIExpression()), !dbg !3735
  call void @llvm.dbg.value(metadata i32 %1, metadata !3730, metadata !DIExpression()), !dbg !3735
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3736
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !3736
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !3731, metadata !DIExpression()), !dbg !3735
  %5 = icmp eq i32 %1, 0, !dbg !3737
  br i1 %5, label %21, label %6, !dbg !3739

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !3740
  br i1 %7, label %21, label %8, !dbg !3741

8:                                                ; preds = %6
  %9 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !3742, !range !3336
  call void @llvm.dbg.value(metadata i32 %9, metadata !3733, metadata !DIExpression()), !dbg !3735
  %10 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %4, i32 noundef %9) #26, !dbg !3743
  call void @llvm.dbg.value(metadata i32 %10, metadata !3734, metadata !DIExpression()), !dbg !3735
  %11 = icmp eq i32 %10, 0, !dbg !3744
  br i1 %11, label %21, label %12, !dbg !3746

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !3747
  %14 = icmp ugt i32 %13, %9, !dbg !3749
  br i1 %14, label %15, label %17, !dbg !3750

15:                                               ; preds = %12
  %16 = add i32 %10, %9, !dbg !3751
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %4, i32 noundef %10, i32 noundef %16) #26, !dbg !3753
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %4, i32 noundef %16) #26, !dbg !3754
  br label %17, !dbg !3755

17:                                               ; preds = %15, %12
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %4, i32 noundef %10, i1 noundef zeroext true) #26, !dbg !3756
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !3757
  call void @llvm.dbg.value(metadata i8* %18, metadata !3732, metadata !DIExpression()), !dbg !3735
  %19 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !3758, !range !3339
  %20 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %4, i32 noundef %19) #26, !dbg !3759, !range !3760
  tail call fastcc void @increase_allocated_bytes(%struct.z_heap* noundef %4, i32 noundef %20) #26, !dbg !3761
  br label %21, !dbg !3762

21:                                               ; preds = %17, %8, %2, %6
  %22 = phi i8* [ null, %6 ], [ null, %2 ], [ %18, %17 ], [ null, %8 ], !dbg !3735
  ret i8* %22, !dbg !3763
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @size_too_big(%struct.z_heap* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !3764 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3768, metadata !DIExpression()), !dbg !3770
  call void @llvm.dbg.value(metadata i32 %1, metadata !3769, metadata !DIExpression()), !dbg !3770
  %3 = lshr i32 %1, 3, !dbg !3771
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !3772
  %5 = load i32, i32* %4, align 4, !dbg !3772
  %6 = icmp uge i32 %3, %5, !dbg !3773
  ret i1 %6, !dbg !3774
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @alloc_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !3775 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3779, metadata !DIExpression()), !dbg !3794
  call void @llvm.dbg.value(metadata i32 %1, metadata !3780, metadata !DIExpression()), !dbg !3794
  %3 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3795
  call void @llvm.dbg.value(metadata i32 %3, metadata !3781, metadata !DIExpression()), !dbg !3794
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %3), metadata !3782, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 28, DW_OP_stack_value)), !dbg !3794
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 6, i32 %3, i32 0, !dbg !3796
  %5 = load i32, i32* %4, align 4, !dbg !3796
  %6 = icmp eq i32 %5, 0, !dbg !3797
  br i1 %6, label %19, label %7, !dbg !3798

7:                                                ; preds = %2, %13
  %8 = phi i32 [ %14, %13 ], [ %5, %2 ], !dbg !3799
  %9 = phi i32 [ %15, %13 ], [ 3, %2 ], !dbg !3800
  call void @llvm.dbg.value(metadata i32 %9, metadata !3786, metadata !DIExpression()), !dbg !3800
  call void @llvm.dbg.value(metadata i32 %8, metadata !3787, metadata !DIExpression()), !dbg !3801
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !3802
  %11 = icmp ult i32 %10, %1, !dbg !3804
  br i1 %11, label %13, label %12, !dbg !3805

12:                                               ; preds = %7
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %8, i32 noundef %3) #26, !dbg !3806
  br label %30

13:                                               ; preds = %7
  %14 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !3808
  store i32 %14, i32* %4, align 4, !dbg !3809
  %15 = add nsw i32 %9, -1, !dbg !3810
  call void @llvm.dbg.value(metadata i32 %15, metadata !3786, metadata !DIExpression()), !dbg !3800
  %16 = icmp eq i32 %15, 0, !dbg !3810
  %17 = icmp eq i32 %14, %5
  %18 = select i1 %16, i1 true, i1 %17, !dbg !3811
  br i1 %18, label %19, label %7, !dbg !3811, !llvm.loop !3812

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !3815
  %21 = load i32, i32* %20, align 4, !dbg !3815
  %22 = add nsw i32 %3, 1, !dbg !3816
  %23 = shl nsw i32 -1, %22, !dbg !3816
  %24 = and i32 %21, %23, !dbg !3817
  call void @llvm.dbg.value(metadata i32 %24, metadata !3789, metadata !DIExpression()), !dbg !3794
  %25 = icmp eq i32 %24, 0, !dbg !3818
  br i1 %25, label %30, label %26, !dbg !3819

26:                                               ; preds = %19
  %27 = tail call i32 @llvm.cttz.i32(i32 %24, i1 true), !dbg !3820, !range !3508
  call void @llvm.dbg.value(metadata i32 %27, metadata !3790, metadata !DIExpression()), !dbg !3821
  %28 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 6, i32 %27, i32 0, !dbg !3822
  %29 = load i32, i32* %28, align 4, !dbg !3822
  call void @llvm.dbg.value(metadata i32 %29, metadata !3793, metadata !DIExpression()), !dbg !3821
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %29, i32 noundef %27) #26, !dbg !3823
  br label %30

30:                                               ; preds = %12, %26, %19
  %31 = phi i32 [ %29, %26 ], [ 0, %19 ], [ %8, %12 ], !dbg !3794
  ret i32 %31, !dbg !3824
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @split_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !3825 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3827, metadata !DIExpression()), !dbg !3833
  call void @llvm.dbg.value(metadata i32 %1, metadata !3828, metadata !DIExpression()), !dbg !3833
  call void @llvm.dbg.value(metadata i32 %2, metadata !3829, metadata !DIExpression()), !dbg !3833
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3834
  call void @llvm.dbg.value(metadata i32 %4, metadata !3830, metadata !DIExpression()), !dbg !3833
  %5 = sub i32 %2, %1, !dbg !3835
  call void @llvm.dbg.value(metadata i32 %5, metadata !3831, metadata !DIExpression()), !dbg !3833
  %6 = sub i32 %4, %5, !dbg !3836
  call void @llvm.dbg.value(metadata i32 %6, metadata !3832, metadata !DIExpression()), !dbg !3833
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %5) #26, !dbg !3837
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %6) #26, !dbg !3838
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %5) #26, !dbg !3839
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !3840
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !3841
  ret void, !dbg !3842
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @chunk_mem(%struct.z_heap* noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !3843 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3847, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i32 %1, metadata !3848, metadata !DIExpression()), !dbg !3851
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3852
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !3849, metadata !DIExpression()), !dbg !3851
  %4 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %3, i32 %1, i32 0, i32 4, !dbg !3853
  call void @llvm.dbg.value(metadata i8* %4, metadata !3850, metadata !DIExpression()), !dbg !3851
  ret i8* %4, !dbg !3854
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @increase_allocated_bytes(%struct.z_heap* nocapture noundef %0, i32 noundef %1) unnamed_addr #7 !dbg !3855 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3859, metadata !DIExpression()), !dbg !3861
  call void @llvm.dbg.value(metadata i32 %1, metadata !3860, metadata !DIExpression()), !dbg !3861
  %3 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 4, !dbg !3862
  %4 = load i32, i32* %3, align 4, !dbg !3863
  %5 = add i32 %4, %1, !dbg !3863
  store i32 %5, i32* %3, align 4, !dbg !3863
  %6 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 5, !dbg !3864
  %7 = load i32, i32* %6, align 4, !dbg !3864
  %8 = icmp ugt i32 %7, %5, !dbg !3864
  %9 = select i1 %8, i32 %7, i32 %5, !dbg !3864
  store i32 %9, i32* %6, align 4, !dbg !3865
  ret void, !dbg !3866
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_aligned_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !3867 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3871, metadata !DIExpression()), !dbg !3883
  call void @llvm.dbg.value(metadata i32 %1, metadata !3872, metadata !DIExpression()), !dbg !3883
  call void @llvm.dbg.value(metadata i32 %2, metadata !3873, metadata !DIExpression()), !dbg !3883
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3884
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !3884
  call void @llvm.dbg.value(metadata %struct.z_heap* %5, metadata !3874, metadata !DIExpression()), !dbg !3883
  %6 = sub i32 0, %1, !dbg !3885
  %7 = and i32 %6, %1, !dbg !3886
  call void @llvm.dbg.value(metadata i32 %7, metadata !3876, metadata !DIExpression()), !dbg !3883
  %8 = icmp eq i32 %7, %1, !dbg !3887
  br i1 %8, label %13, label %9, !dbg !3889

9:                                                ; preds = %3
  %10 = sub i32 %1, %7, !dbg !3890
  call void @llvm.dbg.value(metadata i32 %10, metadata !3872, metadata !DIExpression()), !dbg !3883
  %11 = icmp ult i32 %7, 4, !dbg !3892
  %12 = select i1 %11, i32 %7, i32 4, !dbg !3892
  br label %17, !dbg !3892

13:                                               ; preds = %3
  %14 = icmp ult i32 %1, 5, !dbg !3893
  br i1 %14, label %15, label %17, !dbg !3896

15:                                               ; preds = %13
  %16 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2) #26, !dbg !3897
  br label %59, !dbg !3899

17:                                               ; preds = %9, %13
  %18 = phi i32 [ 0, %13 ], [ %7, %9 ], !dbg !3883
  %19 = phi i32 [ 4, %13 ], [ %12, %9 ], !dbg !3900
  %20 = phi i32 [ %1, %13 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !3872, metadata !DIExpression()), !dbg !3883
  call void @llvm.dbg.value(metadata i32 %19, metadata !3875, metadata !DIExpression()), !dbg !3883
  call void @llvm.dbg.value(metadata i32 %18, metadata !3876, metadata !DIExpression()), !dbg !3883
  %21 = icmp eq i32 %2, 0, !dbg !3901
  br i1 %21, label %59, label %22, !dbg !3903

22:                                               ; preds = %17
  %23 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %5, i32 noundef %2) #26, !dbg !3904
  br i1 %23, label %59, label %24, !dbg !3905

24:                                               ; preds = %22
  %25 = sub i32 %2, %19, !dbg !3906
  %26 = add i32 %25, %20, !dbg !3907
  %27 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %5, i32 noundef %26) #26, !dbg !3908, !range !3336
  call void @llvm.dbg.value(metadata i32 %27, metadata !3877, metadata !DIExpression()), !dbg !3883
  %28 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %5, i32 noundef %27) #26, !dbg !3909
  call void @llvm.dbg.value(metadata i32 %28, metadata !3878, metadata !DIExpression()), !dbg !3883
  %29 = icmp eq i32 %28, 0, !dbg !3910
  br i1 %29, label %59, label %30, !dbg !3912

30:                                               ; preds = %24
  %31 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %5, i32 noundef %28) #26, !dbg !3913
  call void @llvm.dbg.value(metadata i8* %31, metadata !3879, metadata !DIExpression()), !dbg !3883
  %32 = getelementptr inbounds i8, i8* %31, i32 %18, !dbg !3914
  %33 = ptrtoint i8* %32 to i32, !dbg !3914
  %34 = add i32 %20, -1, !dbg !3914
  %35 = add i32 %34, %33, !dbg !3914
  %36 = sub i32 0, %20, !dbg !3914
  %37 = and i32 %35, %36, !dbg !3914
  %38 = inttoptr i32 %37 to i8*, !dbg !3915
  %39 = sub i32 0, %18, !dbg !3916
  %40 = getelementptr inbounds i8, i8* %38, i32 %39, !dbg !3916
  call void @llvm.dbg.value(metadata i8* %40, metadata !3879, metadata !DIExpression()), !dbg !3883
  %41 = getelementptr inbounds i8, i8* %40, i32 %2, !dbg !3917
  %42 = ptrtoint i8* %41 to i32, !dbg !3917
  %43 = add i32 %42, 7, !dbg !3917
  %44 = and i32 %43, -8, !dbg !3917
  call void @llvm.dbg.value(metadata i32 %44, metadata !3880, metadata !DIExpression()), !dbg !3883
  %45 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %5, i8* noundef %40) #26, !dbg !3918
  call void @llvm.dbg.value(metadata i32 %45, metadata !3881, metadata !DIExpression()), !dbg !3883
  %46 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %5) #26, !dbg !3919
  %47 = ptrtoint %struct.chunk_unit_t* %46 to i32, !dbg !3920
  %48 = sub i32 %44, %47, !dbg !3920
  %49 = ashr exact i32 %48, 3, !dbg !3920
  call void @llvm.dbg.value(metadata i32 %49, metadata !3882, metadata !DIExpression()), !dbg !3883
  %50 = icmp ugt i32 %45, %28, !dbg !3921
  br i1 %50, label %51, label %52, !dbg !3923

51:                                               ; preds = %30
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %28, i32 noundef %45) #26, !dbg !3924
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %28) #26, !dbg !3926
  br label %52, !dbg !3927

52:                                               ; preds = %51, %30
  %53 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %5, i32 noundef %45) #26, !dbg !3928
  %54 = icmp ugt i32 %53, %49, !dbg !3930
  br i1 %54, label %55, label %56, !dbg !3931

55:                                               ; preds = %52
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %45, i32 noundef %49) #26, !dbg !3932
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %49) #26, !dbg !3934
  br label %56, !dbg !3935

56:                                               ; preds = %55, %52
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %5, i32 noundef %45, i1 noundef zeroext true) #26, !dbg !3936
  %57 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %5, i32 noundef %45) #26, !dbg !3937, !range !3339
  %58 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %5, i32 noundef %57) #26, !dbg !3938, !range !3760
  tail call fastcc void @increase_allocated_bytes(%struct.z_heap* noundef %5, i32 noundef %58) #26, !dbg !3939
  br label %59

59:                                               ; preds = %56, %24, %17, %22, %15
  %60 = phi i8* [ %16, %15 ], [ null, %22 ], [ null, %17 ], [ %40, %56 ], [ null, %24 ], !dbg !3883
  ret i8* %60, !dbg !3940
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_realloc(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !3941 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3945, metadata !DIExpression()), !dbg !3964
  call void @llvm.dbg.value(metadata i8* %1, metadata !3946, metadata !DIExpression()), !dbg !3964
  call void @llvm.dbg.value(metadata i32 %2, metadata !3947, metadata !DIExpression()), !dbg !3964
  call void @llvm.dbg.value(metadata i32 %3, metadata !3948, metadata !DIExpression()), !dbg !3964
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3965
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !3965
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !3949, metadata !DIExpression()), !dbg !3964
  %7 = icmp eq i8* %1, null, !dbg !3966
  br i1 %7, label %8, label %10, !dbg !3968

8:                                                ; preds = %4
  %9 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !3969
  br label %65, !dbg !3971

10:                                               ; preds = %4
  %11 = icmp eq i32 %3, 0, !dbg !3972
  br i1 %11, label %12, label %13, !dbg !3974

12:                                               ; preds = %10
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !3975
  br label %65, !dbg !3977

13:                                               ; preds = %10
  %14 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %6, i32 noundef %3) #26, !dbg !3978
  br i1 %14, label %65, label %15, !dbg !3980

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !3981, !range !3336
  call void @llvm.dbg.value(metadata i32 %16, metadata !3950, metadata !DIExpression()), !dbg !3964
  %17 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !3982
  call void @llvm.dbg.value(metadata i32 %17, metadata !3951, metadata !DIExpression()), !dbg !3964
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !3983
  %19 = ptrtoint i8* %1 to i32, !dbg !3984
  %20 = ptrtoint i8* %18 to i32, !dbg !3984
  %21 = sub i32 %19, %20, !dbg !3984
  call void @llvm.dbg.value(metadata i32 %21, metadata !3952, metadata !DIExpression()), !dbg !3964
  %22 = add i32 %21, %3, !dbg !3985
  %23 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %6, i32 noundef %22) #26, !dbg !3986
  call void @llvm.dbg.value(metadata i32 %23, metadata !3953, metadata !DIExpression()), !dbg !3964
  %24 = icmp eq i32 %2, 0, !dbg !3987
  br i1 %24, label %29, label %25, !dbg !3988

25:                                               ; preds = %15
  %26 = add i32 %2, -1, !dbg !3989
  %27 = and i32 %26, %19, !dbg !3990
  %28 = icmp eq i32 %27, 0, !dbg !3990
  br i1 %28, label %29, label %55, !dbg !3991

29:                                               ; preds = %25, %15
  %30 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !3992
  %31 = icmp eq i32 %23, %30, !dbg !3993
  br i1 %31, label %65, label %32, !dbg !3994

32:                                               ; preds = %29
  %33 = icmp ult i32 %23, %30, !dbg !3995
  br i1 %33, label %34, label %41, !dbg !3996

34:                                               ; preds = %32
  %35 = sub i32 %23, %30, !dbg !3997
  %36 = shl i32 %35, 3, !dbg !3999
  %37 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %6, i32 0, i32 4, !dbg !4000
  %38 = load i32, i32* %37, align 4, !dbg !4001
  %39 = add i32 %38, %36, !dbg !4001
  store i32 %39, i32* %37, align 4, !dbg !4001
  %40 = add i32 %23, %16, !dbg !4002
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %40) #26, !dbg !4003
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #26, !dbg !4004
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %40) #26, !dbg !4005
  br label %65, !dbg !4006

41:                                               ; preds = %32
  %42 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4007
  br i1 %42, label %55, label %43, !dbg !4008

43:                                               ; preds = %41
  %44 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4009
  %45 = add i32 %44, %30, !dbg !4010
  %46 = icmp ult i32 %45, %23, !dbg !4011
  br i1 %46, label %55, label %47, !dbg !4012

47:                                               ; preds = %43
  %48 = sub i32 %23, %30, !dbg !4013
  call void @llvm.dbg.value(metadata i32 %48, metadata !3954, metadata !DIExpression()), !dbg !4014
  %49 = shl i32 %48, 3, !dbg !4015
  tail call fastcc void @increase_allocated_bytes(%struct.z_heap* noundef %6, i32 noundef %49) #26, !dbg !4016
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4017
  %50 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4018
  %51 = icmp ult i32 %48, %50, !dbg !4020
  br i1 %51, label %52, label %54, !dbg !4021

52:                                               ; preds = %47
  %53 = add i32 %48, %17, !dbg !4022
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %17, i32 noundef %53) #26, !dbg !4024
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %6, i32 noundef %53) #26, !dbg !4025
  br label %54, !dbg !4026

54:                                               ; preds = %52, %47
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %17) #26, !dbg !4027
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #26, !dbg !4028
  br label %65

55:                                               ; preds = %43, %41, %25
  %56 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !4029
  call void @llvm.dbg.value(metadata i8* %56, metadata !3960, metadata !DIExpression()), !dbg !3964
  %57 = icmp eq i8* %56, null, !dbg !4030
  br i1 %57, label %65, label %58, !dbg !4031

58:                                               ; preds = %55
  %59 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4032, !range !3339
  %60 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %59) #26, !dbg !4033
  %61 = sub i32 %60, %21, !dbg !4034
  call void @llvm.dbg.value(metadata i32 %61, metadata !3961, metadata !DIExpression()), !dbg !4035
  %62 = icmp ult i32 %61, %3, !dbg !4036
  %63 = select i1 %62, i32 %61, i32 %3, !dbg !4036
  %64 = tail call i8* @memcpy(i8* noundef nonnull %56, i8* noundef nonnull %1, i32 noundef %63) #25, !dbg !4037
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !4038
  br label %65, !dbg !4039

65:                                               ; preds = %34, %54, %29, %58, %55, %13, %12, %8
  %66 = phi i8* [ %9, %8 ], [ null, %12 ], [ null, %13 ], [ %1, %34 ], [ %1, %54 ], [ %1, %29 ], [ %56, %58 ], [ null, %55 ], !dbg !3964
  ret i8* %66, !dbg !4040
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local void @sys_heap_init(%struct.sys_heap* nocapture noundef writeonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !4041 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4045, metadata !DIExpression()), !dbg !4056
  call void @llvm.dbg.value(metadata i8* %1, metadata !4046, metadata !DIExpression()), !dbg !4056
  call void @llvm.dbg.value(metadata i32 %2, metadata !4047, metadata !DIExpression()), !dbg !4056
  %4 = add i32 %2, -4, !dbg !4057
  call void @llvm.dbg.value(metadata i32 %4, metadata !4047, metadata !DIExpression()), !dbg !4056
  %5 = ptrtoint i8* %1 to i32, !dbg !4058
  %6 = add i32 %5, 7, !dbg !4058
  %7 = and i32 %6, -8, !dbg !4058
  call void @llvm.dbg.value(metadata i32 %7, metadata !4048, metadata !DIExpression()), !dbg !4056
  %8 = getelementptr inbounds i8, i8* %1, i32 %4, !dbg !4059
  %9 = ptrtoint i8* %8 to i32, !dbg !4059
  %10 = and i32 %9, -8, !dbg !4059
  call void @llvm.dbg.value(metadata i32 %10, metadata !4049, metadata !DIExpression()), !dbg !4056
  %11 = sub i32 %10, %7, !dbg !4060
  %12 = lshr exact i32 %11, 3, !dbg !4061
  call void @llvm.dbg.value(metadata i32 %12, metadata !4050, metadata !DIExpression()), !dbg !4056
  %13 = inttoptr i32 %7 to %struct.z_heap*, !dbg !4062
  call void @llvm.dbg.value(metadata %struct.z_heap* %13, metadata !4051, metadata !DIExpression()), !dbg !4056
  %14 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4063
  store %struct.z_heap* %13, %struct.z_heap** %14, align 4, !dbg !4064
  %15 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 1, !dbg !4065
  store i32 %12, i32* %15, align 8, !dbg !4066
  %16 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 2, !dbg !4067
  store i32 0, i32* %16, align 4, !dbg !4068
  %17 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 3, !dbg !4069
  store i32 0, i32* %17, align 8, !dbg !4070
  %18 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 4, !dbg !4071
  store i32 0, i32* %18, align 4, !dbg !4072
  %19 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 5, !dbg !4073
  store i32 0, i32* %19, align 8, !dbg !4074
  %20 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %13, i32 noundef %12) #26, !dbg !4075
  call void @llvm.dbg.value(metadata i32 %20, metadata !4052, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4056
  %21 = shl i32 %20, 2, !dbg !4076
  %22 = add i32 %21, 32, !dbg !4077
  %23 = tail call fastcc i32 @chunksz(i32 noundef %22) #26, !dbg !4078
  call void @llvm.dbg.value(metadata i32 %23, metadata !4053, metadata !DIExpression()), !dbg !4056
  call void @llvm.dbg.value(metadata i32 0, metadata !4054, metadata !DIExpression()), !dbg !4079
  %24 = icmp slt i32 %20, 0, !dbg !4080
  br i1 %24, label %25, label %27, !dbg !4082

25:                                               ; preds = %27, %3
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef %23) #26, !dbg !4083
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef 0) #26, !dbg !4084
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i1 noundef zeroext true) #26, !dbg !4085
  %26 = sub i32 %12, %23, !dbg !4086
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %23, i32 noundef %26) #26, !dbg !4087
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %23, i32 noundef %23) #26, !dbg !4088
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef 0) #26, !dbg !4089
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef %26) #26, !dbg !4090
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i1 noundef zeroext true) #26, !dbg !4091
  tail call fastcc void @free_list_add(%struct.z_heap* noundef nonnull %13, i32 noundef %23) #26, !dbg !4092
  ret void, !dbg !4093

27:                                               ; preds = %3, %27
  %28 = phi i32 [ %30, %27 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %28, metadata !4054, metadata !DIExpression()), !dbg !4079
  %29 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 6, i32 %28, i32 0, !dbg !4094
  store i32 0, i32* %29, align 4, !dbg !4096
  %30 = add nuw i32 %28, 1, !dbg !4097
  call void @llvm.dbg.value(metadata i32 %30, metadata !4054, metadata !DIExpression()), !dbg !4079
  %31 = icmp eq i32 %28, %20, !dbg !4080
  br i1 %31, label %25, label %27, !dbg !4082, !llvm.loop !4098
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local zeroext i1 @sys_heap_validate(%struct.sys_heap* noundef %0) local_unnamed_addr #12 !dbg !4100 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.sys_memory_stats, align 4
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4124, metadata !DIExpression()), !dbg !4150
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4151
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !4151
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !4125, metadata !DIExpression()), !dbg !4150
  %7 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef %6, i32 noundef 0) #26, !dbg !4152
  call void @llvm.dbg.value(metadata i32 %7, metadata !4126, metadata !DIExpression()), !dbg !4150
  %8 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %6, i32 0, i32 1
  %9 = load i32, i32* %8, align 4
  call void @llvm.dbg.value(metadata i32 %7, metadata !4126, metadata !DIExpression()), !dbg !4150
  %10 = icmp ult i32 %7, %9, !dbg !4154
  br i1 %10, label %11, label %17, !dbg !4156

11:                                               ; preds = %1, %14
  %12 = phi i32 [ %15, %14 ], [ %7, %1 ]
  call void @llvm.dbg.value(metadata i32 %12, metadata !4126, metadata !DIExpression()), !dbg !4150
  %13 = tail call fastcc zeroext i1 @valid_chunk(%struct.z_heap* noundef nonnull %6, i32 noundef %12) #26, !dbg !4157
  br i1 %13, label %14, label %138, !dbg !4160

14:                                               ; preds = %11
  %15 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef %6, i32 noundef %12) #26, !dbg !4161
  call void @llvm.dbg.value(metadata i32 %15, metadata !4126, metadata !DIExpression()), !dbg !4150
  %16 = icmp ult i32 %15, %9, !dbg !4154
  br i1 %16, label %11, label %17, !dbg !4156, !llvm.loop !4162

17:                                               ; preds = %14, %1
  %18 = phi i32 [ %7, %1 ], [ %15, %14 ], !dbg !4164
  %19 = icmp eq i32 %18, %9, !dbg !4165
  br i1 %19, label %20, label %138, !dbg !4167

20:                                               ; preds = %17
  %21 = bitcast i32* %2 to i8*, !dbg !4168
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21) #24, !dbg !4168
  %22 = bitcast i32* %3 to i8*, !dbg !4168
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %22) #24, !dbg !4168
  %23 = bitcast %struct.sys_memory_stats* %4 to i8*, !dbg !4169
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %23) #24, !dbg !4169
  call void @llvm.dbg.declare(metadata %struct.sys_memory_stats* %4, metadata !4129, metadata !DIExpression()), !dbg !4170
  call void @llvm.dbg.value(metadata i32* %2, metadata !4127, metadata !DIExpression(DW_OP_deref)), !dbg !4150
  call void @llvm.dbg.value(metadata i32* %3, metadata !4128, metadata !DIExpression(DW_OP_deref)), !dbg !4150
  call fastcc void @get_alloc_info(%struct.z_heap* noundef nonnull %6, i32* noundef nonnull %2, i32* noundef nonnull %3) #26, !dbg !4171
  %24 = call i32 @sys_heap_runtime_stats_get(%struct.sys_heap* noundef %0, %struct.sys_memory_stats* noundef nonnull %4) #26, !dbg !4172
  %25 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %4, i32 0, i32 1, !dbg !4173
  %26 = load i32, i32* %25, align 4, !dbg !4173
  %27 = load i32, i32* %2, align 4, !dbg !4175
  call void @llvm.dbg.value(metadata i32 %27, metadata !4127, metadata !DIExpression()), !dbg !4150
  %28 = icmp eq i32 %26, %27, !dbg !4176
  br i1 %28, label %29, label %136, !dbg !4177

29:                                               ; preds = %20
  %30 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %4, i32 0, i32 0, !dbg !4178
  %31 = load i32, i32* %30, align 4, !dbg !4178
  %32 = load i32, i32* %3, align 4, !dbg !4179
  call void @llvm.dbg.value(metadata i32 %32, metadata !4128, metadata !DIExpression()), !dbg !4150
  %33 = icmp eq i32 %31, %32, !dbg !4180
  br i1 %33, label %34, label %136, !dbg !4181

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 0, metadata !4135, metadata !DIExpression()), !dbg !4182
  %35 = load i32, i32* %8, align 4, !dbg !4183
  %36 = call fastcc i32 @bucket_idx.14(%struct.z_heap* noundef nonnull %6, i32 noundef %35) #26, !dbg !4184
  %37 = icmp slt i32 %36, 0, !dbg !4185
  br i1 %37, label %84, label %38, !dbg !4186

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %6, i32 0, i32 2
  br label %40, !dbg !4186

40:                                               ; preds = %38, %79
  %41 = phi i32 [ 0, %38 ], [ %80, %79 ]
  call void @llvm.dbg.value(metadata i32 %41, metadata !4135, metadata !DIExpression()), !dbg !4182
  %42 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %6, i32 0, i32 6, i32 %41, i32 0, !dbg !4187
  %43 = load i32, i32* %42, align 4, !dbg !4187
  call void @llvm.dbg.value(metadata i32 %43, metadata !4137, metadata !DIExpression()), !dbg !4188
  call void @llvm.dbg.value(metadata i32 0, metadata !4140, metadata !DIExpression()), !dbg !4188
  call void @llvm.dbg.value(metadata i32 %43, metadata !4126, metadata !DIExpression()), !dbg !4150
  %44 = icmp eq i32 %43, 0, !dbg !4189
  br i1 %44, label %45, label %50, !dbg !4192

45:                                               ; preds = %40
  %46 = load i32, i32* %39, align 4, !dbg !4193
  %47 = shl nuw i32 1, %41, !dbg !4194
  %48 = and i32 %46, %47, !dbg !4195
  %49 = icmp eq i32 %48, 0, !dbg !4196
  call void @llvm.dbg.value(metadata i1 %71, metadata !4141, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4188
  call void @llvm.dbg.value(metadata i1 %72, metadata !4142, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4188
  br i1 %49, label %76, label %136, !dbg !4197

50:                                               ; preds = %40, %63
  %51 = phi i32 [ %65, %63 ], [ %43, %40 ]
  %52 = phi i32 [ %64, %63 ], [ 0, %40 ]
  call void @llvm.dbg.value(metadata i32 %51, metadata !4126, metadata !DIExpression()), !dbg !4150
  call void @llvm.dbg.value(metadata i32 %52, metadata !4140, metadata !DIExpression()), !dbg !4188
  %53 = icmp eq i32 %52, 0, !dbg !4198
  %54 = icmp ne i32 %51, %43, !dbg !4199
  %55 = select i1 %53, i1 true, i1 %54, !dbg !4199
  br i1 %55, label %61, label %56, !dbg !4200

56:                                               ; preds = %50
  %57 = load i32, i32* %39, align 4, !dbg !4193
  %58 = shl nuw i32 1, %41, !dbg !4194
  %59 = and i32 %57, %58, !dbg !4195
  %60 = icmp eq i32 %59, 0, !dbg !4196
  call void @llvm.dbg.value(metadata i1 %71, metadata !4141, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4188
  call void @llvm.dbg.value(metadata i1 %72, metadata !4142, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4188
  br i1 %60, label %136, label %74, !dbg !4197

61:                                               ; preds = %50
  %62 = call fastcc zeroext i1 @valid_chunk(%struct.z_heap* noundef %6, i32 noundef %51) #26, !dbg !4201
  br i1 %62, label %63, label %136, !dbg !4204

63:                                               ; preds = %61
  call fastcc void @set_chunk_used.15(%struct.z_heap* noundef %6, i32 noundef %51, i1 noundef zeroext true) #26, !dbg !4205
  %64 = add i32 %52, 1, !dbg !4206
  call void @llvm.dbg.value(metadata i32 %64, metadata !4140, metadata !DIExpression()), !dbg !4188
  %65 = call fastcc i32 @next_free_chunk.16(%struct.z_heap* noundef %6, i32 noundef %51) #26, !dbg !4207
  call void @llvm.dbg.value(metadata i32 %65, metadata !4126, metadata !DIExpression()), !dbg !4150
  %66 = icmp eq i32 %65, 0, !dbg !4189
  br i1 %66, label %67, label %50, !dbg !4192, !llvm.loop !4208

67:                                               ; preds = %63
  %68 = load i32, i32* %39, align 4, !dbg !4193
  %69 = shl nuw i32 1, %41, !dbg !4194
  %70 = and i32 %68, %69, !dbg !4195
  %71 = icmp eq i32 %70, 0, !dbg !4196
  call void @llvm.dbg.value(metadata i1 %71, metadata !4141, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4188
  %72 = icmp ne i32 %64, 0, !dbg !4210
  call void @llvm.dbg.value(metadata i1 %72, metadata !4142, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4188
  %73 = xor i1 %72, %71, !dbg !4211
  br i1 %73, label %74, label %136, !dbg !4197

74:                                               ; preds = %56, %67
  %75 = phi i1 [ %71, %67 ], [ %60, %56 ]
  br i1 %75, label %76, label %79, !dbg !4213

76:                                               ; preds = %45, %74
  %77 = load i32, i32* %42, align 4, !dbg !4215
  %78 = icmp eq i32 %77, 0, !dbg !4216
  br i1 %78, label %79, label %136, !dbg !4217

79:                                               ; preds = %76, %74
  %80 = add nuw nsw i32 %41, 1, !dbg !4218
  call void @llvm.dbg.value(metadata i32 %80, metadata !4135, metadata !DIExpression()), !dbg !4182
  %81 = load i32, i32* %8, align 4, !dbg !4183
  %82 = call fastcc i32 @bucket_idx.14(%struct.z_heap* noundef nonnull %6, i32 noundef %81) #26, !dbg !4184
  %83 = icmp slt i32 %41, %82, !dbg !4185
  br i1 %83, label %40, label %84, !dbg !4186, !llvm.loop !4219

84:                                               ; preds = %79, %34
  %85 = phi i32 [ %35, %34 ], [ %81, %79 ], !dbg !4221
  call void @llvm.dbg.value(metadata i32 0, metadata !4143, metadata !DIExpression()), !dbg !4150
  %86 = call fastcc i32 @right_chunk.11(%struct.z_heap* noundef nonnull %6, i32 noundef 0) #26, !dbg !4224
  call void @llvm.dbg.value(metadata i32 %86, metadata !4126, metadata !DIExpression()), !dbg !4150
  %87 = icmp ult i32 %86, %85, !dbg !4225
  br i1 %87, label %88, label %99, !dbg !4226

88:                                               ; preds = %84, %95
  %89 = phi i32 [ %90, %95 ], [ 0, %84 ]
  %90 = phi i32 [ %96, %95 ], [ %86, %84 ]
  call void @llvm.dbg.value(metadata i32 %89, metadata !4143, metadata !DIExpression()), !dbg !4150
  call void @llvm.dbg.value(metadata i32 %90, metadata !4126, metadata !DIExpression()), !dbg !4150
  %91 = call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef nonnull %6, i32 noundef %90) #26, !dbg !4227
  br i1 %91, label %92, label %136, !dbg !4230

92:                                               ; preds = %88
  %93 = call fastcc i32 @left_chunk.18(%struct.z_heap* noundef nonnull %6, i32 noundef %90) #26, !dbg !4231
  %94 = icmp eq i32 %93, %89, !dbg !4233
  br i1 %94, label %95, label %136, !dbg !4234

95:                                               ; preds = %92
  call void @llvm.dbg.value(metadata i32 %90, metadata !4143, metadata !DIExpression()), !dbg !4150
  call fastcc void @set_chunk_used.15(%struct.z_heap* noundef %6, i32 noundef %90, i1 noundef zeroext false) #26, !dbg !4235
  %96 = call fastcc i32 @right_chunk.11(%struct.z_heap* noundef %6, i32 noundef %90) #26, !dbg !4236
  call void @llvm.dbg.value(metadata i32 %96, metadata !4126, metadata !DIExpression()), !dbg !4150
  %97 = load i32, i32* %8, align 4, !dbg !4221
  %98 = icmp ult i32 %96, %97, !dbg !4225
  br i1 %98, label %88, label %99, !dbg !4226, !llvm.loop !4237

99:                                               ; preds = %95, %84
  %100 = phi i32 [ %86, %84 ], [ %96, %95 ], !dbg !4239
  %101 = phi i32 [ %85, %84 ], [ %97, %95 ], !dbg !4221
  %102 = icmp eq i32 %100, %101, !dbg !4240
  br i1 %102, label %103, label %136, !dbg !4242

103:                                              ; preds = %99
  call void @llvm.dbg.value(metadata i32 0, metadata !4144, metadata !DIExpression()), !dbg !4243
  %104 = call fastcc i32 @bucket_idx.14(%struct.z_heap* noundef nonnull %6, i32 noundef %100) #26, !dbg !4244
  %105 = icmp slt i32 %104, 0, !dbg !4245
  br i1 %105, label %125, label %106, !dbg !4246

106:                                              ; preds = %103, %120
  %107 = phi i32 [ %121, %120 ], [ %100, %103 ]
  %108 = phi i32 [ %122, %120 ], [ 0, %103 ]
  call void @llvm.dbg.value(metadata i32 %108, metadata !4144, metadata !DIExpression()), !dbg !4243
  %109 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %6, i32 0, i32 6, i32 %108, i32 0, !dbg !4247
  %110 = load i32, i32* %109, align 4, !dbg !4247
  call void @llvm.dbg.value(metadata i32 %110, metadata !4146, metadata !DIExpression()), !dbg !4248
  call void @llvm.dbg.value(metadata i32 0, metadata !4149, metadata !DIExpression()), !dbg !4248
  %111 = icmp eq i32 %110, 0, !dbg !4249
  br i1 %111, label %120, label %112, !dbg !4251

112:                                              ; preds = %106, %115
  %113 = phi i32 [ %116, %115 ], [ %110, %106 ]
  call void @llvm.dbg.value(metadata i32 poison, metadata !4149, metadata !DIExpression()), !dbg !4248
  call void @llvm.dbg.value(metadata i32 %113, metadata !4126, metadata !DIExpression()), !dbg !4150
  %114 = call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef %6, i32 noundef %113) #26, !dbg !4252
  br i1 %114, label %136, label %115, !dbg !4257

115:                                              ; preds = %112
  call fastcc void @set_chunk_used.15(%struct.z_heap* noundef %6, i32 noundef %113, i1 noundef zeroext true) #26, !dbg !4258
  call void @llvm.dbg.value(metadata i32 poison, metadata !4149, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4248
  %116 = call fastcc i32 @next_free_chunk.16(%struct.z_heap* noundef %6, i32 noundef %113) #26, !dbg !4259
  call void @llvm.dbg.value(metadata i32 %116, metadata !4126, metadata !DIExpression()), !dbg !4150
  %117 = icmp eq i32 %116, %110, !dbg !4260
  br i1 %117, label %118, label %112, !dbg !4261, !llvm.loop !4262

118:                                              ; preds = %115
  %119 = load i32, i32* %8, align 4, !dbg !4264
  br label %120, !dbg !4265

120:                                              ; preds = %118, %106
  %121 = phi i32 [ %119, %118 ], [ %107, %106 ], !dbg !4264
  %122 = add nuw nsw i32 %108, 1, !dbg !4265
  call void @llvm.dbg.value(metadata i32 %122, metadata !4144, metadata !DIExpression()), !dbg !4243
  %123 = call fastcc i32 @bucket_idx.14(%struct.z_heap* noundef nonnull %6, i32 noundef %121) #26, !dbg !4244
  %124 = icmp slt i32 %108, %123, !dbg !4245
  br i1 %124, label %106, label %125, !dbg !4246, !llvm.loop !4266

125:                                              ; preds = %120, %103
  %126 = phi i32 [ %100, %103 ], [ %121, %120 ], !dbg !4268
  %127 = call fastcc i32 @right_chunk.11(%struct.z_heap* noundef nonnull %6, i32 noundef 0) #26, !dbg !4271
  call void @llvm.dbg.value(metadata i32 %127, metadata !4126, metadata !DIExpression()), !dbg !4150
  %128 = icmp ult i32 %127, %126, !dbg !4272
  br i1 %128, label %129, label %136, !dbg !4273

129:                                              ; preds = %125, %129
  %130 = phi i32 [ %133, %129 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i32 %130, metadata !4126, metadata !DIExpression()), !dbg !4150
  %131 = call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef nonnull %6, i32 noundef %130) #26, !dbg !4274
  %132 = xor i1 %131, true, !dbg !4276
  call fastcc void @set_chunk_used.15(%struct.z_heap* noundef nonnull %6, i32 noundef %130, i1 noundef zeroext %132) #26, !dbg !4277
  %133 = call fastcc i32 @right_chunk.11(%struct.z_heap* noundef nonnull %6, i32 noundef %130) #26, !dbg !4278
  call void @llvm.dbg.value(metadata i32 %133, metadata !4126, metadata !DIExpression()), !dbg !4150
  %134 = load i32, i32* %8, align 4, !dbg !4268
  %135 = icmp ult i32 %133, %134, !dbg !4272
  br i1 %135, label %129, label %136, !dbg !4273, !llvm.loop !4279

136:                                              ; preds = %76, %67, %45, %56, %61, %88, %92, %112, %129, %125, %99, %20, %29
  %137 = phi i1 [ false, %29 ], [ false, %20 ], [ false, %99 ], [ true, %125 ], [ true, %129 ], [ false, %112 ], [ false, %92 ], [ false, %88 ], [ false, %61 ], [ false, %56 ], [ false, %45 ], [ false, %67 ], [ false, %76 ], !dbg !4150
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %23) #24, !dbg !4281
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22) #24, !dbg !4281
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21) #24, !dbg !4281
  br label %138

138:                                              ; preds = %11, %17, %136
  %139 = phi i1 [ %137, %136 ], [ false, %17 ], [ false, %11 ], !dbg !4150
  ret i1 %139, !dbg !4281
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk.11(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !4282 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4286, metadata !DIExpression()), !dbg !4288
  call void @llvm.dbg.value(metadata i32 %1, metadata !4287, metadata !DIExpression()), !dbg !4288
  %3 = tail call fastcc i32 @chunk_size.21(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4289
  %4 = add i32 %3, %1, !dbg !4290
  ret i32 %4, !dbg !4291
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @valid_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !4292 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4296, metadata !DIExpression()), !dbg !4298
  call void @llvm.dbg.value(metadata i32 %1, metadata !4297, metadata !DIExpression()), !dbg !4298
  %3 = tail call fastcc i32 @chunk_size.21(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4299
  %4 = icmp eq i32 %3, 0, !dbg !4299
  br i1 %4, label %33, label %5, !dbg !4302

5:                                                ; preds = %2
  %6 = add i32 %3, %1, !dbg !4303
  %7 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !4303
  %8 = load i32, i32* %7, align 4, !dbg !4303
  %9 = icmp ugt i32 %6, %8, !dbg !4303
  br i1 %9, label %33, label %10, !dbg !4306

10:                                               ; preds = %5
  %11 = tail call fastcc zeroext i1 @in_bounds(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #26, !dbg !4307
  br i1 %11, label %12, label %33, !dbg !4310

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @left_chunk.18(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #26, !dbg !4311
  %14 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef nonnull %0, i32 noundef %13) #26, !dbg !4311
  %15 = icmp eq i32 %14, %1, !dbg !4311
  br i1 %15, label %16, label %33, !dbg !4314

16:                                               ; preds = %12
  %17 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #26, !dbg !4315
  %18 = tail call fastcc i32 @left_chunk.18(%struct.z_heap* noundef nonnull %0, i32 noundef %17) #26, !dbg !4315
  %19 = icmp eq i32 %18, %1, !dbg !4315
  br i1 %19, label %20, label %33, !dbg !4318

20:                                               ; preds = %16
  %21 = tail call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #26, !dbg !4319
  br i1 %21, label %32, label %22, !dbg !4321

22:                                               ; preds = %20
  %23 = tail call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef nonnull %0, i32 noundef %13) #26, !dbg !4322
  br i1 %23, label %24, label %33, !dbg !4326

24:                                               ; preds = %22
  %25 = tail call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef nonnull %0, i32 noundef %17) #26, !dbg !4327
  br i1 %25, label %26, label %33, !dbg !4330

26:                                               ; preds = %24
  %27 = tail call fastcc i32 @prev_free_chunk.23(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #26, !dbg !4331, !range !3538
  %28 = tail call fastcc zeroext i1 @in_bounds(%struct.z_heap* noundef nonnull %0, i32 noundef %27) #26, !dbg !4331
  br i1 %28, label %29, label %33, !dbg !4336

29:                                               ; preds = %26
  %30 = tail call fastcc i32 @next_free_chunk.16(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #26, !dbg !4337, !range !3538
  %31 = tail call fastcc zeroext i1 @in_bounds(%struct.z_heap* noundef nonnull %0, i32 noundef %30) #26, !dbg !4337
  br i1 %31, label %32, label %33, !dbg !4340

32:                                               ; preds = %20, %29
  br label %33, !dbg !4341

33:                                               ; preds = %29, %26, %24, %22, %16, %12, %10, %5, %2, %32
  %34 = phi i1 [ true, %32 ], [ false, %2 ], [ false, %5 ], [ false, %10 ], [ false, %12 ], [ false, %16 ], [ false, %22 ], [ false, %24 ], [ false, %26 ], [ false, %29 ], !dbg !4298
  ret i1 %34, !dbg !4342
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc void @get_alloc_info(%struct.z_heap* noundef %0, i32* nocapture noundef %1, i32* nocapture noundef %2) unnamed_addr #13 !dbg !4343 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4347, metadata !DIExpression()), !dbg !4351
  call void @llvm.dbg.value(metadata i32* %1, metadata !4348, metadata !DIExpression()), !dbg !4351
  call void @llvm.dbg.value(metadata i32* %2, metadata !4349, metadata !DIExpression()), !dbg !4351
  store i32 0, i32* %1, align 4, !dbg !4352
  store i32 0, i32* %2, align 4, !dbg !4353
  %4 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef %0, i32 noundef 0) #26, !dbg !4354
  call void @llvm.dbg.value(metadata i32 %4, metadata !4350, metadata !DIExpression()), !dbg !4351
  %5 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1
  call void @llvm.dbg.value(metadata i32 %4, metadata !4350, metadata !DIExpression()), !dbg !4351
  %6 = load i32, i32* %5, align 4, !dbg !4356
  %7 = icmp ult i32 %4, %6, !dbg !4358
  br i1 %7, label %8, label %19, !dbg !4359

8:                                                ; preds = %3, %8
  %9 = phi i32 [ %16, %8 ], [ %4, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !4350, metadata !DIExpression()), !dbg !4351
  %10 = tail call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef nonnull %0, i32 noundef %9) #26, !dbg !4360
  %11 = tail call fastcc i32 @chunk_size.21(%struct.z_heap* noundef nonnull %0, i32 noundef %9) #26, !dbg !4363, !range !3339
  %12 = tail call fastcc i32 @chunksz_to_bytes.22(%struct.z_heap* noundef nonnull %0, i32 noundef %11) #26, !dbg !4363
  %13 = select i1 %10, i32* %1, i32* %2, !dbg !4363
  %14 = load i32, i32* %13, align 4, !dbg !4363
  %15 = add i32 %14, %12, !dbg !4363
  store i32 %15, i32* %13, align 4, !dbg !4363
  %16 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef %0, i32 noundef %9) #26, !dbg !4364
  call void @llvm.dbg.value(metadata i32 %16, metadata !4350, metadata !DIExpression()), !dbg !4351
  %17 = load i32, i32* %5, align 4, !dbg !4356
  %18 = icmp ult i32 %16, %17, !dbg !4358
  br i1 %18, label %8, label %19, !dbg !4359, !llvm.loop !4365

19:                                               ; preds = %8, %3
  ret void, !dbg !4367
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @sys_heap_runtime_stats_get(%struct.sys_heap* noundef readonly %0, %struct.sys_memory_stats* noundef writeonly %1) local_unnamed_addr #7 !dbg !4368 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4373, metadata !DIExpression()), !dbg !4375
  call void @llvm.dbg.value(metadata %struct.sys_memory_stats* %1, metadata !4374, metadata !DIExpression()), !dbg !4375
  %3 = icmp eq %struct.sys_heap* %0, null, !dbg !4376
  %4 = icmp eq %struct.sys_memory_stats* %1, null
  %5 = or i1 %3, %4, !dbg !4378
  br i1 %5, label %20, label %6, !dbg !4378

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4379
  %8 = load %struct.z_heap*, %struct.z_heap** %7, align 4, !dbg !4379
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %8, i32 0, i32 3, !dbg !4380
  %10 = load i32, i32* %9, align 4, !dbg !4380
  %11 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 0, !dbg !4381
  store i32 %10, i32* %11, align 4, !dbg !4382
  %12 = load %struct.z_heap*, %struct.z_heap** %7, align 4, !dbg !4383
  %13 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %12, i32 0, i32 4, !dbg !4384
  %14 = load i32, i32* %13, align 4, !dbg !4384
  %15 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 1, !dbg !4385
  store i32 %14, i32* %15, align 4, !dbg !4386
  %16 = load %struct.z_heap*, %struct.z_heap** %7, align 4, !dbg !4387
  %17 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %16, i32 0, i32 5, !dbg !4388
  %18 = load i32, i32* %17, align 4, !dbg !4388
  %19 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 2, !dbg !4389
  store i32 %18, i32* %19, align 4, !dbg !4390
  br label %20, !dbg !4391

20:                                               ; preds = %2, %6
  %21 = phi i32 [ 0, %6 ], [ -22, %2 ], !dbg !4375
  ret i32 %21, !dbg !4392
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx.14(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #9 !dbg !4393 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4397, metadata !DIExpression()), !dbg !4400
  call void @llvm.dbg.value(metadata i32 %1, metadata !4398, metadata !DIExpression()), !dbg !4400
  call void @llvm.dbg.value(metadata i32 %1, metadata !4399, metadata !DIExpression()), !dbg !4400
  %3 = tail call i32 @llvm.ctlz.i32(i32 %1, i1 false), !dbg !4401, !range !3508
  %4 = sub nsw i32 31, %3, !dbg !4402
  ret i32 %4, !dbg !4403
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used.15(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #7 !dbg !4404 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4408, metadata !DIExpression()), !dbg !4413
  call void @llvm.dbg.value(metadata i32 %1, metadata !4409, metadata !DIExpression()), !dbg !4413
  call void @llvm.dbg.value(metadata i1 %2, metadata !4410, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4413
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf.20(%struct.z_heap* noundef %0) #26, !dbg !4414
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !4411, metadata !DIExpression()), !dbg !4413
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4412, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4413
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !4415
  %6 = bitcast i8* %5 to i16*, !dbg !4415
  %7 = load i16, i16* %6, align 2, !dbg !4415
  %8 = and i16 %7, -2, !dbg !4419
  %9 = zext i1 %2 to i16, !dbg !4419
  %10 = or i16 %8, %9, !dbg !4419
  store i16 %10, i16* %6, align 2, !dbg !4415
  ret void, !dbg !4420
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk.16(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4421 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4423, metadata !DIExpression()), !dbg !4425
  call void @llvm.dbg.value(metadata i32 %1, metadata !4424, metadata !DIExpression()), !dbg !4425
  %3 = tail call fastcc i32 @chunk_field.19(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #26, !dbg !4426
  ret i32 %3, !dbg !4427
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !4428 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4430, metadata !DIExpression()), !dbg !4432
  call void @llvm.dbg.value(metadata i32 %1, metadata !4431, metadata !DIExpression()), !dbg !4432
  %3 = tail call fastcc i32 @chunk_field.19(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !4433
  %4 = and i32 %3, 1, !dbg !4434
  %5 = icmp ne i32 %4, 0, !dbg !4433
  ret i1 %5, !dbg !4435
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk.18(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !4436 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4438, metadata !DIExpression()), !dbg !4440
  call void @llvm.dbg.value(metadata i32 %1, metadata !4439, metadata !DIExpression()), !dbg !4440
  %3 = tail call fastcc i32 @chunk_field.19(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #26, !dbg !4441
  %4 = sub i32 %1, %3, !dbg !4442
  ret i32 %4, !dbg !4443
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field.19(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #5 !dbg !4444 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4448, metadata !DIExpression()), !dbg !4453
  call void @llvm.dbg.value(metadata i32 %1, metadata !4449, metadata !DIExpression()), !dbg !4453
  call void @llvm.dbg.value(metadata i32 %2, metadata !4450, metadata !DIExpression()), !dbg !4453
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf.20(%struct.z_heap* noundef %0) #26, !dbg !4454
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !4451, metadata !DIExpression()), !dbg !4453
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4452, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4453
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4452, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4453
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !4455
  call void @llvm.dbg.value(metadata i8* %5, metadata !4452, metadata !DIExpression()), !dbg !4453
  %6 = bitcast i8* %5 to i16*, !dbg !4456
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !4459
  %8 = load i16, i16* %7, align 2, !dbg !4459
  %9 = zext i16 %8 to i32, !dbg !4459
  ret i32 %9, !dbg !4460
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf.20(%struct.z_heap* noundef readnone %0) unnamed_addr #11 !dbg !4461 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4465, metadata !DIExpression()), !dbg !4466
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !4467
  ret %struct.chunk_unit_t* %2, !dbg !4468
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size.21(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !4469 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4473, metadata !DIExpression()), !dbg !4475
  call void @llvm.dbg.value(metadata i32 %1, metadata !4474, metadata !DIExpression()), !dbg !4475
  %3 = tail call fastcc i32 @chunk_field.19(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !4476
  %4 = lshr i32 %3, 1, !dbg !4477
  ret i32 %4, !dbg !4478
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes.22(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4479 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4483, metadata !DIExpression()), !dbg !4485
  call void @llvm.dbg.value(metadata i32 %1, metadata !4484, metadata !DIExpression()), !dbg !4485
  %3 = shl i32 %1, 3, !dbg !4486
  %4 = add i32 %3, -4, !dbg !4487
  ret i32 %4, !dbg !4488
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @in_bounds(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4489 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4491, metadata !DIExpression()), !dbg !4493
  call void @llvm.dbg.value(metadata i32 %1, metadata !4492, metadata !DIExpression()), !dbg !4493
  %3 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef %0, i32 noundef 0) #26, !dbg !4494
  %4 = icmp ugt i32 %3, %1, !dbg !4494
  br i1 %4, label %12, label %5, !dbg !4497

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !4498
  %7 = load i32, i32* %6, align 4, !dbg !4498
  %8 = icmp ugt i32 %7, %1, !dbg !4498
  br i1 %8, label %9, label %12, !dbg !4501

9:                                                ; preds = %5
  %10 = tail call fastcc i32 @chunk_size.21(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #26, !dbg !4502
  %11 = icmp ult i32 %10, %7, !dbg !4502
  br label %12, !dbg !4493

12:                                               ; preds = %9, %5, %2
  %13 = phi i1 [ false, %2 ], [ false, %5 ], [ %11, %9 ], !dbg !4493
  ret i1 %13, !dbg !4505
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk.23(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4506 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4508, metadata !DIExpression()), !dbg !4510
  call void @llvm.dbg.value(metadata i32 %1, metadata !4509, metadata !DIExpression()), !dbg !4510
  %3 = tail call fastcc i32 @chunk_field.19(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #26, !dbg !4511
  ret i32 %3, !dbg !4512
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_heap_stress(i8* (i8*, i32)* noundef %0, void (i8*, i8*)* noundef %1, i8* noundef %2, i32 noundef %3, i32 noundef %4, i8* noundef %5, i32 noundef %6, i32 noundef %7, %struct.z_heap_stress_result* nocapture noundef %8) local_unnamed_addr #1 !dbg !4513 {
  %10 = alloca %struct.z_heap_stress_rec, align 4
  call void @llvm.dbg.value(metadata i8* (i8*, i32)* %0, metadata !4530, metadata !DIExpression()), !dbg !4568
  call void @llvm.dbg.value(metadata void (i8*, i8*)* %1, metadata !4531, metadata !DIExpression()), !dbg !4568
  call void @llvm.dbg.value(metadata i8* %2, metadata !4532, metadata !DIExpression()), !dbg !4568
  call void @llvm.dbg.value(metadata i32 %3, metadata !4533, metadata !DIExpression()), !dbg !4568
  call void @llvm.dbg.value(metadata i32 %4, metadata !4534, metadata !DIExpression()), !dbg !4568
  call void @llvm.dbg.value(metadata i8* %5, metadata !4535, metadata !DIExpression()), !dbg !4568
  call void @llvm.dbg.value(metadata i32 %6, metadata !4536, metadata !DIExpression()), !dbg !4568
  call void @llvm.dbg.value(metadata i32 %7, metadata !4537, metadata !DIExpression()), !dbg !4568
  call void @llvm.dbg.value(metadata %struct.z_heap_stress_result* %8, metadata !4538, metadata !DIExpression()), !dbg !4568
  %11 = bitcast %struct.z_heap_stress_rec* %10 to i8*, !dbg !4569
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %11) #24, !dbg !4569
  call void @llvm.dbg.declare(metadata %struct.z_heap_stress_rec* %10, metadata !4539, metadata !DIExpression()), !dbg !4570
  %12 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 0, !dbg !4571
  store i8* (i8*, i32)* %0, i8* (i8*, i32)** %12, align 4, !dbg !4571
  %13 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 1, !dbg !4571
  store void (i8*, i8*)* %1, void (i8*, i8*)** %13, align 4, !dbg !4571
  %14 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 2, !dbg !4571
  store i8* %2, i8** %14, align 4, !dbg !4571
  %15 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 3, !dbg !4571
  store i32 %3, i32* %15, align 4, !dbg !4571
  %16 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 4, !dbg !4571
  %17 = bitcast %struct.z_heap_stress_block** %16 to i8**, !dbg !4571
  store i8* %5, i8** %17, align 4, !dbg !4571
  %18 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 5, !dbg !4571
  %19 = lshr i32 %6, 3, !dbg !4572
  store i32 %19, i32* %18, align 4, !dbg !4571
  %20 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 6, !dbg !4571
  store i32 0, i32* %20, align 4, !dbg !4571
  %21 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 7, !dbg !4571
  store i32 0, i32* %21, align 4, !dbg !4571
  %22 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 8, !dbg !4571
  store i32 %7, i32* %22, align 4, !dbg !4571
  %23 = bitcast %struct.z_heap_stress_result* %8 to i8*, !dbg !4573
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %23, i8 0, i32 24, i1 false), !dbg !4573
  call void @llvm.dbg.value(metadata i32 0, metadata !4556, metadata !DIExpression()), !dbg !4574
  %24 = icmp eq i32 %4, 0, !dbg !4575
  %25 = bitcast i8* %5 to %struct.z_heap_stress_block*, !dbg !4576
  br i1 %24, label %31, label %26, !dbg !4576

26:                                               ; preds = %9
  %27 = getelementptr inbounds %struct.z_heap_stress_result, %struct.z_heap_stress_result* %8, i32 0, i32 2
  %28 = getelementptr inbounds %struct.z_heap_stress_result, %struct.z_heap_stress_result* %8, i32 0, i32 0
  %29 = getelementptr inbounds %struct.z_heap_stress_result, %struct.z_heap_stress_result* %8, i32 0, i32 1
  %30 = getelementptr inbounds %struct.z_heap_stress_result, %struct.z_heap_stress_result* %8, i32 0, i32 3
  br label %32, !dbg !4576

31:                                               ; preds = %65, %9
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %11) #24, !dbg !4577
  ret void, !dbg !4577

32:                                               ; preds = %26, %65
  %33 = phi i32 [ 0, %26 ], [ %66, %65 ]
  %34 = phi i32 [ 0, %26 ], [ %67, %65 ]
  %35 = phi i32 [ 0, %26 ], [ %71, %65 ]
  call void @llvm.dbg.value(metadata i32 %35, metadata !4556, metadata !DIExpression()), !dbg !4574
  %36 = call fastcc zeroext i1 @rand_alloc_choice(%struct.z_heap_stress_rec* noundef nonnull %10) #26, !dbg !4578
  br i1 %36, label %37, label %50, !dbg !4579

37:                                               ; preds = %32
  %38 = tail call fastcc i32 @rand_alloc_size() #26, !dbg !4580
  call void @llvm.dbg.value(metadata i32 %38, metadata !4558, metadata !DIExpression()), !dbg !4581
  %39 = tail call i8* %0(i8* noundef %2, i32 noundef %38) #25, !dbg !4582
  call void @llvm.dbg.value(metadata i8* %39, metadata !4563, metadata !DIExpression()), !dbg !4581
  %40 = load i32, i32* %28, align 8, !dbg !4583
  %41 = add i32 %40, 1, !dbg !4583
  store i32 %41, i32* %28, align 8, !dbg !4583
  %42 = icmp eq i8* %39, null, !dbg !4584
  br i1 %42, label %65, label %43, !dbg !4586

43:                                               ; preds = %37
  %44 = load i32, i32* %29, align 4, !dbg !4587
  %45 = add i32 %44, 1, !dbg !4587
  store i32 %45, i32* %29, align 4, !dbg !4587
  %46 = getelementptr inbounds %struct.z_heap_stress_block, %struct.z_heap_stress_block* %25, i32 %34, i32 0, !dbg !4589
  store i8* %39, i8** %46, align 4, !dbg !4590
  %47 = getelementptr inbounds %struct.z_heap_stress_block, %struct.z_heap_stress_block* %25, i32 %34, i32 1, !dbg !4591
  store i32 %38, i32* %47, align 4, !dbg !4592
  %48 = add i32 %34, 1, !dbg !4593
  store i32 %48, i32* %20, align 4, !dbg !4593
  %49 = add i32 %33, %38, !dbg !4594
  store i32 %49, i32* %21, align 4, !dbg !4594
  br label %65, !dbg !4595

50:                                               ; preds = %32
  %51 = call fastcc i32 @rand_free_choice(%struct.z_heap_stress_rec* noundef nonnull %10) #26, !dbg !4596
  call void @llvm.dbg.value(metadata i32 %51, metadata !4564, metadata !DIExpression()), !dbg !4597
  %52 = getelementptr inbounds %struct.z_heap_stress_block, %struct.z_heap_stress_block* %25, i32 %51, i32 0, !dbg !4598
  %53 = load i8*, i8** %52, align 4, !dbg !4598
  call void @llvm.dbg.value(metadata i8* %53, metadata !4566, metadata !DIExpression()), !dbg !4597
  %54 = getelementptr inbounds %struct.z_heap_stress_block, %struct.z_heap_stress_block* %25, i32 %51, i32 1, !dbg !4599
  %55 = load i32, i32* %54, align 4, !dbg !4599
  call void @llvm.dbg.value(metadata i32 %55, metadata !4567, metadata !DIExpression()), !dbg !4597
  %56 = load i32, i32* %27, align 8, !dbg !4600
  %57 = add i32 %56, 1, !dbg !4600
  store i32 %57, i32* %27, align 8, !dbg !4600
  %58 = getelementptr inbounds %struct.z_heap_stress_block, %struct.z_heap_stress_block* %25, i32 %51, !dbg !4601
  %59 = add i32 %34, -1, !dbg !4602
  %60 = getelementptr inbounds %struct.z_heap_stress_block, %struct.z_heap_stress_block* %25, i32 %59, !dbg !4603
  %61 = bitcast %struct.z_heap_stress_block* %60 to i64*, !dbg !4603
  %62 = bitcast %struct.z_heap_stress_block* %58 to i64*, !dbg !4603
  %63 = load i64, i64* %61, align 4, !dbg !4603
  store i64 %63, i64* %62, align 4, !dbg !4603
  store i32 %59, i32* %20, align 4, !dbg !4604
  %64 = sub i32 %33, %55, !dbg !4605
  store i32 %64, i32* %21, align 4, !dbg !4605
  tail call void %1(i8* noundef %2, i8* noundef %53) #25, !dbg !4606
  br label %65

65:                                               ; preds = %37, %43, %50
  %66 = phi i32 [ %33, %37 ], [ %49, %43 ], [ %64, %50 ], !dbg !4607
  %67 = phi i32 [ %34, %37 ], [ %48, %43 ], [ %59, %50 ]
  %68 = zext i32 %66 to i64, !dbg !4608
  %69 = load i64, i64* %30, align 8, !dbg !4609
  %70 = add i64 %69, %68, !dbg !4609
  store i64 %70, i64* %30, align 8, !dbg !4609
  %71 = add nuw i32 %35, 1, !dbg !4610
  call void @llvm.dbg.value(metadata i32 %71, metadata !4556, metadata !DIExpression()), !dbg !4574
  %72 = icmp eq i32 %71, %4, !dbg !4575
  br i1 %72, label %31, label %32, !dbg !4576, !llvm.loop !4611
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #14

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc zeroext i1 @rand_alloc_choice(%struct.z_heap_stress_rec* nocapture noundef readonly %0) unnamed_addr #7 !dbg !4613 {
  call void @llvm.dbg.value(metadata %struct.z_heap_stress_rec* %0, metadata !4618, metadata !DIExpression()), !dbg !4625
  %2 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %0, i32 0, i32 6, !dbg !4626
  %3 = load i32, i32* %2, align 4, !dbg !4626
  %4 = icmp eq i32 %3, 0, !dbg !4627
  br i1 %4, label %26, label %5, !dbg !4628

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %0, i32 0, i32 5, !dbg !4629
  %7 = load i32, i32* %6, align 4, !dbg !4629
  %8 = icmp ult i32 %3, %7, !dbg !4630
  br i1 %8, label %9, label %26, !dbg !4631

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %0, i32 0, i32 7, !dbg !4632
  %11 = load i32, i32* %10, align 4, !dbg !4632
  %12 = mul i32 %11, 100, !dbg !4633
  %13 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %0, i32 0, i32 3, !dbg !4634
  %14 = load i32, i32* %13, align 4, !dbg !4634
  %15 = udiv i32 %12, %14, !dbg !4635
  call void @llvm.dbg.value(metadata i32 %15, metadata !4619, metadata !DIExpression()), !dbg !4636
  %16 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %0, i32 0, i32 8, !dbg !4637
  %17 = load i32, i32* %16, align 4, !dbg !4637
  call void @llvm.dbg.value(metadata i32 undef, metadata !4623, metadata !DIExpression()), !dbg !4636
  call void @llvm.dbg.value(metadata i32 -1, metadata !4624, metadata !DIExpression()), !dbg !4636
  %18 = icmp ult i32 %15, %17, !dbg !4638
  br i1 %18, label %19, label %22, !dbg !4640

19:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %17, metadata !4623, metadata !DIExpression()), !dbg !4636
  %20 = udiv i32 -2147483648, %17, !dbg !4641
  %21 = mul i32 %20, %15, !dbg !4643
  call void @llvm.dbg.value(metadata i32 %21, metadata !4624, metadata !DIExpression()), !dbg !4636
  br label %22, !dbg !4644

22:                                               ; preds = %19, %9
  %23 = phi i32 [ %21, %19 ], [ -1, %9 ], !dbg !4636
  call void @llvm.dbg.value(metadata i32 %23, metadata !4624, metadata !DIExpression()), !dbg !4636
  %24 = tail call fastcc i32 @rand32() #26, !dbg !4645
  %25 = icmp ugt i32 %24, %23, !dbg !4646
  br label %26

26:                                               ; preds = %5, %1, %22
  %27 = phi i1 [ %25, %22 ], [ true, %1 ], [ false, %5 ], !dbg !4647
  ret i1 %27, !dbg !4648
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc i32 @rand_alloc_size() unnamed_addr #10 !dbg !4649 {
  call void @llvm.dbg.value(metadata %struct.z_heap_stress_rec* undef, metadata !4653, metadata !DIExpression()), !dbg !4655
  %1 = tail call fastcc i32 @rand32() #26, !dbg !4656
  %2 = tail call i32 @llvm.ctlz.i32(i32 %1, i1 false), !dbg !4657, !range !3508
  call void @llvm.dbg.value(metadata i32 %2, metadata !4654, metadata !DIExpression(DW_OP_plus_uconst, 4, DW_OP_stack_value)), !dbg !4655
  %3 = tail call fastcc i32 @rand32() #26, !dbg !4658
  %4 = shl i32 16, %2, !dbg !4659
  %5 = add i32 %4, -1, !dbg !4659
  %6 = and i32 %5, %3, !dbg !4660
  ret i32 %6, !dbg !4661
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @rand_free_choice(%struct.z_heap_stress_rec* nocapture noundef readonly %0) unnamed_addr #7 !dbg !4662 {
  call void @llvm.dbg.value(metadata %struct.z_heap_stress_rec* %0, metadata !4664, metadata !DIExpression()), !dbg !4665
  %2 = tail call fastcc i32 @rand32() #26, !dbg !4666
  %3 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %0, i32 0, i32 6, !dbg !4667
  %4 = load i32, i32* %3, align 4, !dbg !4667
  %5 = urem i32 %2, %4, !dbg !4668
  ret i32 %5, !dbg !4669
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @rand32() unnamed_addr #7 !dbg !133 {
  %1 = load i64, i64* @rand32.state, align 8, !dbg !4670
  %2 = mul i64 %1, 2862933555777941757, !dbg !4671
  %3 = add i64 %2, 3037000493, !dbg !4672
  store i64 %3, i64* @rand32.state, align 8, !dbg !4673
  %4 = lshr i64 %3, 32, !dbg !4674
  %5 = trunc i64 %4 to i32, !dbg !4675
  ret i32 %5, !dbg !4676
}

; Function Attrs: noinline nounwind optsize
define dso_local void @heap_print_info(%struct.z_heap* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !4677 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4681, metadata !DIExpression()), !dbg !4702
  call void @llvm.dbg.value(metadata i1 %1, metadata !4682, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4702
  %5 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !4703
  %6 = load i32, i32* %5, align 4, !dbg !4703
  %7 = tail call fastcc i32 @bucket_idx.14(%struct.z_heap* noundef %0, i32 noundef %6) #26, !dbg !4704
  %8 = add i32 %7, 1, !dbg !4705
  call void @llvm.dbg.value(metadata i32 %8, metadata !4684, metadata !DIExpression()), !dbg !4702
  %9 = bitcast i32* %3 to i8*, !dbg !4706
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #24, !dbg !4706
  %10 = bitcast i32* %4 to i8*, !dbg !4706
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #24, !dbg !4706
  %11 = tail call fastcc %struct.chunk_unit_t* @chunk_buf.20(%struct.z_heap* noundef %0) #26, !dbg !4707
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.24, i32 0, i32 0), %struct.chunk_unit_t* noundef %11, i32 noundef %6, i32 noundef %8) #25, !dbg !4708
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([187 x i8], [187 x i8]* @.str.1.25, i32 0, i32 0)) #25, !dbg !4709
  call void @llvm.dbg.value(metadata i32 0, metadata !4683, metadata !DIExpression()), !dbg !4702
  %12 = icmp slt i32 %7, 0, !dbg !4710
  br i1 %12, label %34, label %13, !dbg !4711

13:                                               ; preds = %2, %31
  %14 = phi i32 [ %32, %31 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !4683, metadata !DIExpression()), !dbg !4702
  %15 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 6, i32 %14, i32 0, !dbg !4712
  %16 = load i32, i32* %15, align 4, !dbg !4712
  call void @llvm.dbg.value(metadata i32 %16, metadata !4689, metadata !DIExpression()), !dbg !4713
  call void @llvm.dbg.value(metadata i32 0, metadata !4693, metadata !DIExpression()), !dbg !4713
  call void @llvm.dbg.value(metadata i32 0, metadata !4694, metadata !DIExpression()), !dbg !4713
  %17 = icmp eq i32 %16, 0, !dbg !4714
  br i1 %17, label %31, label %18, !dbg !4715

18:                                               ; preds = %13, %18
  %19 = phi i32 [ %25, %18 ], [ 0, %13 ], !dbg !4713
  %20 = phi i32 [ %22, %18 ], [ 0, %13 ], !dbg !4713
  %21 = phi i32 [ %26, %18 ], [ %16, %13 ], !dbg !4716
  call void @llvm.dbg.value(metadata i32 %21, metadata !4695, metadata !DIExpression()), !dbg !4716
  call void @llvm.dbg.value(metadata i32 %20, metadata !4694, metadata !DIExpression()), !dbg !4713
  call void @llvm.dbg.value(metadata i32 %19, metadata !4693, metadata !DIExpression()), !dbg !4713
  %22 = add nuw nsw i32 %20, 1, !dbg !4717
  call void @llvm.dbg.value(metadata i32 %22, metadata !4694, metadata !DIExpression()), !dbg !4713
  %23 = tail call fastcc i32 @chunk_size.21(%struct.z_heap* noundef %0, i32 noundef %21) #26, !dbg !4719
  %24 = icmp ugt i32 %19, %23, !dbg !4719
  %25 = select i1 %24, i32 %19, i32 %23, !dbg !4719
  call void @llvm.dbg.value(metadata i32 %25, metadata !4693, metadata !DIExpression()), !dbg !4713
  %26 = tail call fastcc i32 @next_free_chunk.16(%struct.z_heap* noundef %0, i32 noundef %21) #26, !dbg !4720
  call void @llvm.dbg.value(metadata i32 %26, metadata !4695, metadata !DIExpression()), !dbg !4716
  %27 = icmp eq i32 %26, %16, !dbg !4721
  br i1 %27, label %28, label %18, !dbg !4722, !llvm.loop !4723

28:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %22, metadata !4694, metadata !DIExpression()), !dbg !4713
  call void @llvm.dbg.value(metadata i32 %25, metadata !4693, metadata !DIExpression()), !dbg !4713
  %29 = shl nuw i32 1, %14, !dbg !4726
  %30 = tail call fastcc i32 @chunksz_to_bytes.22(%struct.z_heap* noundef %0, i32 noundef %25) #26, !dbg !4729, !range !3760
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2, i32 0, i32 0), i32 noundef %14, i32 noundef %29, i32 noundef %22, i32 noundef %25, i32 noundef %30) #25, !dbg !4730
  br label %31, !dbg !4731

31:                                               ; preds = %13, %28
  %32 = add nuw i32 %14, 1, !dbg !4732
  call void @llvm.dbg.value(metadata i32 %32, metadata !4683, metadata !DIExpression()), !dbg !4702
  %33 = icmp eq i32 %14, %7, !dbg !4710
  br i1 %33, label %34, label %13, !dbg !4711, !llvm.loop !4733

34:                                               ; preds = %31, %2
  br i1 %1, label %35, label %47, !dbg !4735

35:                                               ; preds = %34
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i32 0, i32 0)) #25, !dbg !4736
  call void @llvm.dbg.value(metadata i32 0, metadata !4698, metadata !DIExpression()), !dbg !4737
  br label %36, !dbg !4738

36:                                               ; preds = %45, %35
  %37 = phi i32 [ 0, %35 ], [ %46, %45 ], !dbg !4737
  call void @llvm.dbg.value(metadata i32 %37, metadata !4698, metadata !DIExpression()), !dbg !4737
  %38 = tail call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef %0, i32 noundef %37) #26, !dbg !4739
  %39 = select i1 %38, i32 42, i32 45, !dbg !4739
  %40 = tail call fastcc i32 @chunk_size.21(%struct.z_heap* noundef %0, i32 noundef %37) #26, !dbg !4742
  %41 = tail call fastcc i32 @left_chunk.18(%struct.z_heap* noundef %0, i32 noundef %37) #26, !dbg !4743
  %42 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef %0, i32 noundef %37) #26, !dbg !4744
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([46 x i8], [46 x i8]* @.str.4, i32 0, i32 0), i32 noundef %37, i32 noundef %39, i32 noundef %40, i32 noundef %41, i32 noundef %42) #25, !dbg !4745
  %43 = load i32, i32* %5, align 4, !dbg !4746
  %44 = icmp eq i32 %37, %43, !dbg !4748
  br i1 %44, label %47, label %45, !dbg !4749

45:                                               ; preds = %36
  %46 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef nonnull %0, i32 noundef %37) #26, !dbg !4750
  call void @llvm.dbg.value(metadata i32 %46, metadata !4698, metadata !DIExpression()), !dbg !4737
  br label %36, !dbg !4751, !llvm.loop !4752

47:                                               ; preds = %36, %34
  call void @llvm.dbg.value(metadata i32* %3, metadata !4685, metadata !DIExpression(DW_OP_deref)), !dbg !4702
  call void @llvm.dbg.value(metadata i32* %4, metadata !4686, metadata !DIExpression(DW_OP_deref)), !dbg !4702
  call fastcc void @get_alloc_info(%struct.z_heap* noundef %0, i32* noundef nonnull %4, i32* noundef nonnull %3) #26, !dbg !4755
  %48 = load i32, i32* %5, align 4, !dbg !4756
  %49 = shl i32 %48, 3, !dbg !4757
  %50 = or i32 %49, 4, !dbg !4758
  call void @llvm.dbg.value(metadata i32 %50, metadata !4687, metadata !DIExpression()), !dbg !4702
  %51 = load i32, i32* %3, align 4, !dbg !4759
  call void @llvm.dbg.value(metadata i32 %51, metadata !4685, metadata !DIExpression()), !dbg !4702
  %52 = load i32, i32* %4, align 4, !dbg !4760
  call void @llvm.dbg.value(metadata i32 %52, metadata !4686, metadata !DIExpression()), !dbg !4702
  %53 = add i32 %52, %51, !dbg !4761
  %54 = sub i32 %50, %53, !dbg !4761
  call void @llvm.dbg.value(metadata i32 %54, metadata !4688, metadata !DIExpression()), !dbg !4702
  %55 = mul i32 %54, 1000, !dbg !4762
  %56 = lshr exact i32 %50, 1, !dbg !4763
  %57 = add i32 %55, %56, !dbg !4764
  %58 = udiv i32 %57, %50, !dbg !4765
  %59 = freeze i32 %58
  %60 = udiv i32 %59, 10, !dbg !4766
  %61 = mul i32 %60, 10
  %62 = sub i32 %59, %61
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([72 x i8], [72 x i8]* @.str.5, i32 0, i32 0), i32 noundef %51, i32 noundef %52, i32 noundef %54, i32 noundef %60, i32 noundef %62) #25, !dbg !4767
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #24, !dbg !4768
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #24, !dbg !4768
  ret void, !dbg !4768
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_heap_print_info(%struct.sys_heap* nocapture noundef readonly %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !4769 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4773, metadata !DIExpression()), !dbg !4775
  call void @llvm.dbg.value(metadata i1 %1, metadata !4774, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4775
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4776
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !4776
  tail call void @heap_print_info(%struct.z_heap* noundef %4, i1 noundef zeroext %1) #26, !dbg !4777
  ret void, !dbg !4778
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @sys_heap_runtime_stats_reset_max(%struct.sys_heap* noundef readonly %0) local_unnamed_addr #7 !dbg !4779 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4783, metadata !DIExpression()), !dbg !4784
  %2 = icmp eq %struct.sys_heap* %0, null, !dbg !4785
  br i1 %2, label %9, label %3, !dbg !4787

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4788
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !4788
  %6 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %5, i32 0, i32 4, !dbg !4789
  %7 = load i32, i32* %6, align 4, !dbg !4789
  %8 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %5, i32 0, i32 5, !dbg !4790
  store i32 %7, i32* %8, align 4, !dbg !4791
  br label %9, !dbg !4792

9:                                                ; preds = %1, %3
  %10 = phi i32 [ 0, %3 ], [ -22, %1 ], !dbg !4784
  ret i32 %10, !dbg !4793
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4794 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4807, metadata !DIExpression()), !dbg !4935
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4804, metadata !DIExpression()), !dbg !4935
  call void @llvm.dbg.value(metadata i8* %1, metadata !4805, metadata !DIExpression()), !dbg !4935
  call void @llvm.dbg.value(metadata i8* %2, metadata !4806, metadata !DIExpression()), !dbg !4935
  call void @llvm.dbg.value(metadata i32 %4, metadata !4808, metadata !DIExpression()), !dbg !4935
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4936
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #24, !dbg !4936
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4809, metadata !DIExpression()), !dbg !4937
  call void @llvm.dbg.value(metadata i32 0, metadata !4813, metadata !DIExpression()), !dbg !4935
  call void @llvm.dbg.value(metadata i1 undef, metadata !4815, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4935
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4938

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4938

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4939
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4807, metadata !DIExpression()), !dbg !4935
  call void @llvm.dbg.value(metadata i8* %30, metadata !4806, metadata !DIExpression()), !dbg !4935
  call void @llvm.dbg.value(metadata i32 %29, metadata !4813, metadata !DIExpression()), !dbg !4935
  %31 = load i8, i8* %30, align 1, !dbg !4940
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4938

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4940
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4941
  call void @llvm.dbg.value(metadata i8* %34, metadata !4806, metadata !DIExpression()), !dbg !4935
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #25, !dbg !4941
  call void @llvm.dbg.value(metadata i32 %35, metadata !4817, metadata !DIExpression()), !dbg !4942
  %36 = icmp slt i32 %35, 0, !dbg !4943
  %37 = add i32 %29, 1, !dbg !4941
  call void @llvm.dbg.value(metadata i32 undef, metadata !4813, metadata !DIExpression()), !dbg !4935
  br i1 %36, label %365, label %28, !llvm.loop !4945

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #24, !dbg !4947
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4822, metadata !DIExpression()), !dbg !4948
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4948
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4867, metadata !DIExpression()), !dbg !4949
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4870, metadata !DIExpression()), !dbg !4949
  call void @llvm.dbg.value(metadata i8* %30, metadata !4873, metadata !DIExpression()), !dbg !4949
  call void @llvm.dbg.value(metadata i32 -1, metadata !4874, metadata !DIExpression()), !dbg !4949
  call void @llvm.dbg.value(metadata i32 -1, metadata !4875, metadata !DIExpression()), !dbg !4949
  call void @llvm.dbg.value(metadata i8* null, metadata !4876, metadata !DIExpression()), !dbg !4949
  call void @llvm.dbg.value(metadata i8* %14, metadata !4877, metadata !DIExpression()), !dbg !4949
  call void @llvm.dbg.value(metadata i8 0, metadata !4878, metadata !DIExpression()), !dbg !4949
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #26, !dbg !4950
  call void @llvm.dbg.value(metadata i8* %39, metadata !4806, metadata !DIExpression()), !dbg !4935
  %40 = load i24, i24* %15, align 8, !dbg !4951
  %41 = and i24 %40, 256, !dbg !4951
  %42 = icmp eq i24 %41, 0, !dbg !4951
  br i1 %42, label %51, label %43, !dbg !4953

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4954
  call void @llvm.dbg.value(metadata i8* %44, metadata !4807, metadata !DIExpression()), !dbg !4935
  %45 = bitcast i8* %27 to i32*, !dbg !4954
  %46 = load i32, i32* %45, align 4, !dbg !4954
  call void @llvm.dbg.value(metadata i32 %46, metadata !4874, metadata !DIExpression()), !dbg !4949
  %47 = icmp slt i32 %46, 0, !dbg !4956
  br i1 %47, label %48, label %56, !dbg !4958

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4959
  store i24 %49, i24* %15, align 8, !dbg !4959
  %50 = sub nsw i32 0, %46, !dbg !4961
  call void @llvm.dbg.value(metadata i32 %50, metadata !4874, metadata !DIExpression()), !dbg !4949
  br label %56, !dbg !4962

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4963
  %53 = icmp eq i24 %52, 0, !dbg !4963
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4965
  br label %56, !dbg !4965

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4966
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4949
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4807, metadata !DIExpression()), !dbg !4935
  call void @llvm.dbg.value(metadata i32 %58, metadata !4874, metadata !DIExpression()), !dbg !4949
  %60 = and i24 %57, 1024, !dbg !4966
  %61 = icmp eq i24 %60, 0, !dbg !4966
  br i1 %61, label %69, label %62, !dbg !4967

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4968
  call void @llvm.dbg.value(metadata i8* %63, metadata !4807, metadata !DIExpression()), !dbg !4935
  %64 = bitcast i8* %59 to i32*, !dbg !4968
  %65 = load i32, i32* %64, align 4, !dbg !4968
  call void @llvm.dbg.value(metadata i32 %65, metadata !4879, metadata !DIExpression()), !dbg !4969
  %66 = icmp slt i32 %65, 0, !dbg !4970
  br i1 %66, label %67, label %74, !dbg !4972

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4973
  store i24 %68, i24* %15, align 8, !dbg !4973
  br label %74, !dbg !4975

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4976
  %71 = icmp eq i24 %70, 0, !dbg !4976
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4978
  br label %74, !dbg !4978

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4979
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4949
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4949
  call void @llvm.dbg.value(metadata i8* %77, metadata !4807, metadata !DIExpression()), !dbg !4935
  call void @llvm.dbg.value(metadata i32 %76, metadata !4875, metadata !DIExpression()), !dbg !4949
  store i32 0, i32* %16, align 4, !dbg !4980
  store i32 0, i32* %17, align 8, !dbg !4981
  %78 = lshr i24 %75, 16, !dbg !4979
  call void @llvm.dbg.value(metadata i24 %78, metadata !4882, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4949
  %79 = lshr i24 %75, 11, !dbg !4982
  %80 = and i24 %79, 15, !dbg !4982
  %81 = zext i24 %80 to i32, !dbg !4982
  call void @llvm.dbg.value(metadata i32 %81, metadata !4883, metadata !DIExpression()), !dbg !4949
  %82 = trunc i24 %78 to i3, !dbg !4983
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4983

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4984

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4987
  call void @llvm.dbg.value(metadata i8* %85, metadata !4807, metadata !DIExpression()), !dbg !4935
  %86 = bitcast i8* %77 to i32*, !dbg !4987
  %87 = load i32, i32* %86, align 4, !dbg !4987
  %88 = sext i32 %87 to i64, !dbg !4987
  store i64 %88, i64* %20, align 8, !dbg !4989
  br label %115, !dbg !4990

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4991
  call void @llvm.dbg.value(metadata i8* %90, metadata !4807, metadata !DIExpression()), !dbg !4935
  %91 = bitcast i8* %77 to i32*, !dbg !4991
  %92 = load i32, i32* %91, align 4, !dbg !4991
  %93 = sext i32 %92 to i64, !dbg !4991
  store i64 %93, i64* %20, align 8, !dbg !4994
  br label %115, !dbg !4995

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4996
  %96 = add i32 %95, 7, !dbg !4996
  %97 = and i32 %96, -8, !dbg !4996
  %98 = inttoptr i32 %97 to i8*, !dbg !4996
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4996
  call void @llvm.dbg.value(metadata i8* %99, metadata !4807, metadata !DIExpression()), !dbg !4935
  %100 = inttoptr i32 %97 to i64*, !dbg !4996
  %101 = load i64, i64* %100, align 8, !dbg !4996
  store i64 %101, i64* %20, align 8, !dbg !4997
  br label %115, !dbg !4998

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4999
  %104 = add i32 %103, 7, !dbg !4999
  %105 = and i32 %104, -8, !dbg !4999
  %106 = inttoptr i32 %105 to i8*, !dbg !4999
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4999
  call void @llvm.dbg.value(metadata i8* %107, metadata !4807, metadata !DIExpression()), !dbg !4935
  %108 = inttoptr i32 %105 to i64*, !dbg !4999
  %109 = load i64, i64* %108, align 8, !dbg !4999
  store i64 %109, i64* %20, align 8, !dbg !5000
  br label %115, !dbg !5001

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5002
  call void @llvm.dbg.value(metadata i8* %111, metadata !4807, metadata !DIExpression()), !dbg !4935
  %112 = bitcast i8* %77 to i32*, !dbg !5002
  %113 = load i32, i32* %112, align 4, !dbg !5002
  %114 = sext i32 %113 to i64, !dbg !5003
  store i64 %114, i64* %20, align 8, !dbg !5004
  br label %115, !dbg !5005

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !5006
  call void @llvm.dbg.value(metadata i8* %117, metadata !4807, metadata !DIExpression()), !dbg !4935
  %118 = trunc i24 %79 to i4, !dbg !5007
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !5007

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !5008
  %121 = ashr exact i64 %120, 56, !dbg !5008
  store i64 %121, i64* %20, align 8, !dbg !5011
  br label %177, !dbg !5012

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !5013
  %124 = ashr exact i64 %123, 48, !dbg !5013
  store i64 %124, i64* %20, align 8, !dbg !5016
  br label %177, !dbg !5017

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !5018

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5021
  call void @llvm.dbg.value(metadata i8* %127, metadata !4807, metadata !DIExpression()), !dbg !4935
  %128 = bitcast i8* %77 to i32*, !dbg !5021
  %129 = load i32, i32* %128, align 4, !dbg !5021
  %130 = zext i32 %129 to i64, !dbg !5021
  store i64 %130, i64* %20, align 8, !dbg !5023
  br label %157, !dbg !5024

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5025
  call void @llvm.dbg.value(metadata i8* %132, metadata !4807, metadata !DIExpression()), !dbg !4935
  call void @llvm.dbg.value(metadata i8* %132, metadata !4807, metadata !DIExpression()), !dbg !4935
  %133 = bitcast i8* %77 to i32*, !dbg !5025
  %134 = load i32, i32* %133, align 4, !dbg !5025
  %135 = zext i32 %134 to i64, !dbg !5025
  store i64 %135, i64* %20, align 8, !dbg !5025
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !5027
  %138 = add i32 %137, 7, !dbg !5027
  %139 = and i32 %138, -8, !dbg !5027
  %140 = inttoptr i32 %139 to i8*, !dbg !5027
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !5027
  call void @llvm.dbg.value(metadata i8* %141, metadata !4807, metadata !DIExpression()), !dbg !4935
  %142 = inttoptr i32 %139 to i64*, !dbg !5027
  %143 = load i64, i64* %142, align 8, !dbg !5027
  store i64 %143, i64* %20, align 8, !dbg !5028
  br label %157, !dbg !5029

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !5030
  %146 = add i32 %145, 7, !dbg !5030
  %147 = and i32 %146, -8, !dbg !5030
  %148 = inttoptr i32 %147 to i8*, !dbg !5030
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !5030
  call void @llvm.dbg.value(metadata i8* %149, metadata !4807, metadata !DIExpression()), !dbg !4935
  %150 = inttoptr i32 %147 to i64*, !dbg !5030
  %151 = load i64, i64* %150, align 8, !dbg !5030
  store i64 %151, i64* %20, align 8, !dbg !5031
  br label %157, !dbg !5032

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5033
  call void @llvm.dbg.value(metadata i8* %153, metadata !4807, metadata !DIExpression()), !dbg !4935
  %154 = bitcast i8* %77 to i32*, !dbg !5033
  %155 = load i32, i32* %154, align 4, !dbg !5033
  %156 = zext i32 %155 to i64, !dbg !5034
  store i64 %156, i64* %20, align 8, !dbg !5035
  br label %157, !dbg !5036

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !5037
  call void @llvm.dbg.value(metadata i8* %159, metadata !4807, metadata !DIExpression()), !dbg !4935
  %160 = trunc i24 %79 to i4, !dbg !5038
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !5038

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !5039
  store i64 %162, i64* %20, align 8, !dbg !5042
  br label %177, !dbg !5043

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !5044
  store i64 %164, i64* %20, align 8, !dbg !5047
  br label %177, !dbg !5048

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !5049
  %167 = add i32 %166, 7, !dbg !5049
  %168 = and i32 %167, -8, !dbg !5049
  %169 = inttoptr i32 %168 to i8*, !dbg !5049
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !5049
  call void @llvm.dbg.value(metadata i8* %170, metadata !4807, metadata !DIExpression()), !dbg !4935
  call void @llvm.dbg.value(metadata i8* %170, metadata !4807, metadata !DIExpression()), !dbg !4935
  %171 = inttoptr i32 %168 to double*, !dbg !5049
  %172 = load double, double* %171, align 8, !dbg !5049
  store double %172, double* %19, align 8, !dbg !5049
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5053
  call void @llvm.dbg.value(metadata i8* %174, metadata !4807, metadata !DIExpression()), !dbg !4935
  %175 = bitcast i8* %77 to i8**, !dbg !5053
  %176 = load i8*, i8** %175, align 4, !dbg !5053
  store i8* %176, i8** %18, align 8, !dbg !5056
  br label %177, !dbg !5057

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4949
  call void @llvm.dbg.value(metadata i8* %178, metadata !4807, metadata !DIExpression()), !dbg !4935
  %179 = and i24 %75, 3, !dbg !5058
  %180 = icmp eq i24 %179, 0, !dbg !5058
  br i1 %180, label %185, label %181, !dbg !5058

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #26, !dbg !5059
  call void @llvm.dbg.value(metadata i32 %182, metadata !4884, metadata !DIExpression()), !dbg !5060
  %183 = icmp slt i32 %182, 0, !dbg !5061
  %184 = add i32 %182, %29, !dbg !5059
  call void @llvm.dbg.value(metadata i32 undef, metadata !4813, metadata !DIExpression()), !dbg !4935
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !5063
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !5064

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #25, !dbg !5065
  call void @llvm.dbg.value(metadata i32 %188, metadata !4888, metadata !DIExpression()), !dbg !5066
  %189 = icmp slt i32 %188, 0, !dbg !5067
  %190 = add i32 %29, 1, !dbg !5065
  call void @llvm.dbg.value(metadata i32 undef, metadata !4813, metadata !DIExpression()), !dbg !4935
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !5069
  call void @llvm.dbg.value(metadata i8* %192, metadata !4876, metadata !DIExpression()), !dbg !4949
  %193 = icmp sgt i32 %76, -1, !dbg !5070
  br i1 %193, label %194, label %196, !dbg !5072

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #25, !dbg !5073
  call void @llvm.dbg.value(metadata i32 %195, metadata !4891, metadata !DIExpression()), !dbg !5075
  br label %241, !dbg !5076

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #25, !dbg !5077
  call void @llvm.dbg.value(metadata i32 %197, metadata !4891, metadata !DIExpression()), !dbg !5075
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4876, metadata !DIExpression()), !dbg !4949
  %199 = load i64, i64* %20, align 8, !dbg !5079
  %200 = trunc i64 %199 to i8, !dbg !5080
  store i8 %200, i8* %10, align 1, !dbg !5081
  call void @llvm.dbg.value(metadata i8* %23, metadata !4877, metadata !DIExpression()), !dbg !4949
  br label %245, !dbg !5082

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !5083
  %203 = icmp eq i24 %202, 0, !dbg !5083
  %204 = trunc i24 %75 to i8, !dbg !5085
  %205 = shl i8 %204, 1, !dbg !5085
  %206 = and i8 %205, 32, !dbg !5085
  %207 = select i1 %203, i8 %206, i8 43, !dbg !5085
  call void @llvm.dbg.value(metadata i8 %207, metadata !4878, metadata !DIExpression()), !dbg !4949
  %208 = load i64, i64* %20, align 8, !dbg !5086
  call void @llvm.dbg.value(metadata i64 %208, metadata !4814, metadata !DIExpression()), !dbg !4935
  %209 = icmp slt i64 %208, 0, !dbg !5087
  br i1 %209, label %210, label %212, !dbg !5089

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4878, metadata !DIExpression()), !dbg !4949
  %211 = sub nsw i64 0, %208, !dbg !5090
  store i64 %211, i64* %20, align 8, !dbg !5092
  br label %212, !dbg !5093

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4949
  call void @llvm.dbg.value(metadata i8 %213, metadata !4878, metadata !DIExpression()), !dbg !4949
  %214 = load i64, i64* %20, align 8, !dbg !5094
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !5095
  call void @llvm.dbg.value(metadata i8* %215, metadata !4876, metadata !DIExpression()), !dbg !4949
  br label %216, !dbg !5096

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !5097
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !5098
  call void @llvm.dbg.value(metadata i8* %218, metadata !4876, metadata !DIExpression()), !dbg !4949
  call void @llvm.dbg.value(metadata i8 %217, metadata !4878, metadata !DIExpression()), !dbg !4949
  call void @llvm.dbg.label(metadata !4934), !dbg !5099
  %219 = icmp sgt i32 %76, -1, !dbg !5100
  br i1 %219, label %222, label %220, !dbg !5101

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !5102
  br label %245, !dbg !5101

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !5104
  %224 = sub i32 %22, %223, !dbg !5104
  call void @llvm.dbg.value(metadata i32 %224, metadata !4893, metadata !DIExpression()), !dbg !5105
  %225 = load i24, i24* %15, align 8, !dbg !5106
  %226 = and i24 %225, -65, !dbg !5106
  store i24 %226, i24* %15, align 8, !dbg !5106
  %227 = icmp ugt i32 %76, %224, !dbg !5107
  br i1 %227, label %228, label %245, !dbg !5109

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !5110
  store i32 %229, i32* %16, align 4, !dbg !5112
  br label %245, !dbg !5113

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !5114
  %232 = icmp eq i8* %231, null, !dbg !5116
  br i1 %232, label %245, label %233, !dbg !5117

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !5118
  %235 = zext i32 %234 to i64, !dbg !5118
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !5120
  call void @llvm.dbg.value(metadata i8* %236, metadata !4876, metadata !DIExpression()), !dbg !4949
  %237 = load i24, i24* %15, align 8, !dbg !5121
  %238 = or i24 %237, 1048576, !dbg !5121
  store i24 %238, i24* %15, align 8, !dbg !5121
  store i8 120, i8* %21, align 1, !dbg !5122
  br label %216, !dbg !5123

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !5124
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #26, !dbg !5127
  br label %363, !dbg !5128

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !5129
  call void @llvm.dbg.value(metadata i32 %242, metadata !4891, metadata !DIExpression()), !dbg !5075
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !5130
  call void @llvm.dbg.value(metadata i32 -1, metadata !4875, metadata !DIExpression()), !dbg !4949
  call void @llvm.dbg.value(metadata i32 %29, metadata !4813, metadata !DIExpression()), !dbg !4935
  call void @llvm.dbg.value(metadata i8* %192, metadata !4876, metadata !DIExpression()), !dbg !4949
  call void @llvm.dbg.value(metadata i8* %243, metadata !4877, metadata !DIExpression()), !dbg !4949
  call void @llvm.dbg.value(metadata i8 0, metadata !4878, metadata !DIExpression()), !dbg !4949
  %244 = icmp eq i8* %192, null, !dbg !5131
  br i1 %244, label %363, label %245, !dbg !5133, !llvm.loop !4945

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !5102
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4896, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4949
  call void @llvm.dbg.value(metadata i32 0, metadata !4897, metadata !DIExpression()), !dbg !4949
  %250 = zext i8 %249 to i32, !dbg !5134
  %251 = icmp eq i8 %249, 0, !dbg !5136
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4896, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4949
  call void @llvm.dbg.value(metadata i32 undef, metadata !4896, metadata !DIExpression()), !dbg !4949
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4896, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4949
  call void @llvm.dbg.value(metadata i32 undef, metadata !4896, metadata !DIExpression()), !dbg !4949
  %252 = icmp sgt i32 %58, 0, !dbg !5137
  br i1 %252, label %253, label %302, !dbg !5138

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !5102
  %255 = icmp eq i24 %254, 0, !dbg !5102
  %256 = ptrtoint i8* %248 to i32, !dbg !5139
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4896, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4949
  %257 = ptrtoint i8* %247 to i32, !dbg !5139
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4896, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4949
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4896, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4949
  %258 = xor i1 %251, true, !dbg !5140
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4896, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4949
  %259 = sext i1 %258 to i32, !dbg !5140
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4896, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4949
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4896, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4949
  %260 = lshr i24 %246, 19, !dbg !5141
  %261 = and i24 %260, 1, !dbg !5141
  %262 = select i1 %255, i24 %261, i24 2, !dbg !5141
  %263 = zext i24 %262 to i32, !dbg !5141
  %264 = add i32 %257, %259, !dbg !5141
  %265 = add i32 %256, %263, !dbg !5141
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4896, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4949
  %266 = and i24 %246, 4194304, !dbg !5142
  %267 = icmp eq i24 %266, 0, !dbg !5142
  %268 = load i32, i32* %16, align 4, !dbg !5144
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4896, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4949
  call void @llvm.dbg.value(metadata i32 undef, metadata !4896, metadata !DIExpression()), !dbg !4949
  %269 = load i32, i32* %17, align 8, !dbg !5145
  %270 = select i1 %267, i32 0, i32 %269, !dbg !5145
  call void @llvm.dbg.value(metadata i32 undef, metadata !4896, metadata !DIExpression()), !dbg !4949
  %271 = add i32 %264, %58, !dbg !5145
  %272 = add i32 %265, %268, !dbg !5145
  %273 = add i32 %272, %270, !dbg !5146
  %274 = sub i32 %271, %273, !dbg !5146
  call void @llvm.dbg.value(metadata i32 %274, metadata !4874, metadata !DIExpression()), !dbg !4949
  %275 = and i24 %246, 4, !dbg !5147
  %276 = icmp eq i24 %275, 0, !dbg !5147
  br i1 %276, label %277, label %302, !dbg !5148

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4898, metadata !DIExpression()), !dbg !5149
  %278 = and i24 %246, 64, !dbg !5150
  %279 = icmp eq i24 %278, 0, !dbg !5150
  %280 = select i1 %279, i1 true, i1 %251, !dbg !5151
  %281 = select i1 %279, i8 %249, i8 0, !dbg !5151
  %282 = select i1 %279, i32 32, i32 48, !dbg !5151
  br i1 %280, label %287, label %283, !dbg !5151

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #25, !dbg !5152
  call void @llvm.dbg.value(metadata i32 %284, metadata !4903, metadata !DIExpression()), !dbg !5153
  %285 = icmp slt i32 %284, 0, !dbg !5154
  %286 = add i32 %29, 1, !dbg !5152
  call void @llvm.dbg.value(metadata i32 undef, metadata !4813, metadata !DIExpression()), !dbg !4935
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4949
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4939
  call void @llvm.dbg.value(metadata i32 %290, metadata !4813, metadata !DIExpression()), !dbg !4935
  call void @llvm.dbg.value(metadata i8 undef, metadata !4898, metadata !DIExpression()), !dbg !5149
  call void @llvm.dbg.value(metadata i8 %288, metadata !4878, metadata !DIExpression()), !dbg !4949
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !5156
  %292 = add i32 %291, -1, !dbg !5156
  br label %293, !dbg !5156

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !5157
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4939
  call void @llvm.dbg.value(metadata i32 %295, metadata !4813, metadata !DIExpression()), !dbg !4935
  call void @llvm.dbg.value(metadata i32 %294, metadata !4874, metadata !DIExpression()), !dbg !4949
  call void @llvm.dbg.value(metadata i32 %294, metadata !4874, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4949
  %296 = icmp sgt i32 %294, 0, !dbg !5158
  br i1 %296, label %297, label %302, !dbg !5156

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !5159
  call void @llvm.dbg.value(metadata i32 %298, metadata !4874, metadata !DIExpression()), !dbg !4949
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #25, !dbg !5160
  call void @llvm.dbg.value(metadata i32 %299, metadata !4909, metadata !DIExpression()), !dbg !5161
  %300 = icmp slt i32 %299, 0, !dbg !5162
  %301 = add i32 %295, 1, !dbg !5160
  call void @llvm.dbg.value(metadata i32 undef, metadata !4813, metadata !DIExpression()), !dbg !4935
  br i1 %300, label %361, label %293, !llvm.loop !5164

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4949
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4949
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4939
  call void @llvm.dbg.value(metadata i32 %305, metadata !4813, metadata !DIExpression()), !dbg !4935
  call void @llvm.dbg.value(metadata i32 %304, metadata !4874, metadata !DIExpression()), !dbg !4949
  call void @llvm.dbg.value(metadata i8 %303, metadata !4878, metadata !DIExpression()), !dbg !4949
  %306 = icmp eq i8 %303, 0, !dbg !5166
  br i1 %306, label %312, label %307, !dbg !5167

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !5168
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #25, !dbg !5169
  call void @llvm.dbg.value(metadata i32 %309, metadata !4912, metadata !DIExpression()), !dbg !5170
  %310 = icmp slt i32 %309, 0, !dbg !5171
  %311 = add i32 %305, 1, !dbg !5169
  call void @llvm.dbg.value(metadata i32 undef, metadata !4813, metadata !DIExpression()), !dbg !4935
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4939
  call void @llvm.dbg.value(metadata i32 %313, metadata !4813, metadata !DIExpression()), !dbg !4935
  %314 = lshr i24 %246, 20, !dbg !5173
  %315 = lshr i24 %246, 19, !dbg !5174
  %316 = or i24 %314, %315, !dbg !5175
  %317 = and i24 %316, 1, !dbg !5175
  %318 = icmp eq i24 %317, 0, !dbg !5175
  br i1 %318, label %323, label %319, !dbg !5176

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !5177
  call void @llvm.dbg.value(metadata i32 %320, metadata !4916, metadata !DIExpression()), !dbg !5178
  %321 = icmp slt i32 %320, 0, !dbg !5179
  %322 = add i32 %313, 1, !dbg !5177
  call void @llvm.dbg.value(metadata i32 undef, metadata !4813, metadata !DIExpression()), !dbg !4935
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4939
  call void @llvm.dbg.value(metadata i32 %324, metadata !4813, metadata !DIExpression()), !dbg !4935
  %325 = and i24 %246, 1048576, !dbg !5181
  %326 = icmp eq i24 %325, 0, !dbg !5181
  br i1 %326, label %333, label %327, !dbg !5182

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !5183
  %329 = zext i8 %328 to i32, !dbg !5183
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #25, !dbg !5183
  call void @llvm.dbg.value(metadata i32 %330, metadata !4922, metadata !DIExpression()), !dbg !5184
  %331 = icmp slt i32 %330, 0, !dbg !5185
  %332 = add i32 %324, 1, !dbg !5183
  call void @llvm.dbg.value(metadata i32 undef, metadata !4813, metadata !DIExpression()), !dbg !4935
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4939
  call void @llvm.dbg.value(metadata i32 %334, metadata !4813, metadata !DIExpression()), !dbg !4935
  %335 = load i32, i32* %16, align 4, !dbg !5187
  call void @llvm.dbg.value(metadata i32 %335, metadata !4897, metadata !DIExpression()), !dbg !4949
  br label %336, !dbg !5188

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !5189
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4939
  call void @llvm.dbg.value(metadata i32 %338, metadata !4813, metadata !DIExpression()), !dbg !4935
  call void @llvm.dbg.value(metadata i32 %337, metadata !4897, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4949
  %339 = icmp sgt i32 %337, 0, !dbg !5190
  br i1 %339, label %340, label %345, !dbg !5188

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !5191
  call void @llvm.dbg.value(metadata i32 %341, metadata !4897, metadata !DIExpression()), !dbg !4949
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !5192
  call void @llvm.dbg.value(metadata i32 %342, metadata !4926, metadata !DIExpression()), !dbg !5193
  %343 = icmp slt i32 %342, 0, !dbg !5194
  %344 = add i32 %338, 1, !dbg !5192
  call void @llvm.dbg.value(metadata i32 undef, metadata !4813, metadata !DIExpression()), !dbg !4935
  br i1 %343, label %361, label %336, !llvm.loop !5196

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #26, !dbg !5198
  call void @llvm.dbg.value(metadata i32 %346, metadata !4929, metadata !DIExpression()), !dbg !5199
  %347 = icmp slt i32 %346, 0, !dbg !5200
  call void @llvm.dbg.value(metadata i32 undef, metadata !4813, metadata !DIExpression()), !dbg !4935
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !5198
  call void @llvm.dbg.value(metadata i32 %349, metadata !4813, metadata !DIExpression()), !dbg !4935
  call void @llvm.dbg.value(metadata i32 %304, metadata !4874, metadata !DIExpression()), !dbg !4949
  %350 = icmp sgt i32 %304, 0, !dbg !5202
  br i1 %350, label %351, label %363, !dbg !5203

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !5203
  %353 = add i32 %352, %338, !dbg !5203
  br label %354, !dbg !5203

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4813, metadata !DIExpression()), !dbg !4935
  call void @llvm.dbg.value(metadata i32 %355, metadata !4874, metadata !DIExpression()), !dbg !4949
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #25, !dbg !5204
  call void @llvm.dbg.value(metadata i32 %356, metadata !4931, metadata !DIExpression()), !dbg !5205
  %357 = icmp slt i32 %356, 0, !dbg !5206
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !5208
  call void @llvm.dbg.value(metadata i32 undef, metadata !4813, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4935
  call void @llvm.dbg.value(metadata i32 %359, metadata !4874, metadata !DIExpression()), !dbg !4949
  %360 = icmp sgt i32 %355, 1, !dbg !5202
  br i1 %360, label %354, label %363, !dbg !5203, !llvm.loop !5209

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4813, metadata !DIExpression()), !dbg !4935
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #24, !dbg !4946
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4939
  call void @llvm.dbg.value(metadata i32 %364, metadata !4813, metadata !DIExpression()), !dbg !4935
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #24, !dbg !4946
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4935
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #24, !dbg !5211
  ret i32 %366, !dbg !5211
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5212 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5216, metadata !DIExpression()), !dbg !5218
  call void @llvm.dbg.value(metadata i8* %1, metadata !5217, metadata !DIExpression()), !dbg !5218
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !5219
  store i24 0, i24* %3, align 4, !dbg !5219
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5219
  store i8 0, i8* %4, align 1, !dbg !5219
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5219
  store i32 0, i32* %5, align 4, !dbg !5219
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5219
  store i32 0, i32* %6, align 4, !dbg !5219
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5220
  call void @llvm.dbg.value(metadata i8* %7, metadata !5217, metadata !DIExpression()), !dbg !5218
  %8 = load i8, i8* %7, align 1, !dbg !5221
  %9 = icmp eq i8 %8, 37, !dbg !5223
  br i1 %9, label %10, label %12, !dbg !5224

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5225
  call void @llvm.dbg.value(metadata i8* %11, metadata !5217, metadata !DIExpression()), !dbg !5218
  store i8 37, i8* %4, align 1, !dbg !5227
  br label %18, !dbg !5228

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #26, !dbg !5229
  call void @llvm.dbg.value(metadata i8* %13, metadata !5217, metadata !DIExpression()), !dbg !5218
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #26, !dbg !5230
  call void @llvm.dbg.value(metadata i8* %14, metadata !5217, metadata !DIExpression()), !dbg !5218
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #26, !dbg !5231
  call void @llvm.dbg.value(metadata i8* %15, metadata !5217, metadata !DIExpression()), !dbg !5218
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #26, !dbg !5232
  call void @llvm.dbg.value(metadata i8* %16, metadata !5217, metadata !DIExpression()), !dbg !5218
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #26, !dbg !5233
  call void @llvm.dbg.value(metadata i8* %17, metadata !5217, metadata !DIExpression()), !dbg !5218
  br label %18, !dbg !5234

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !5218
  ret i8* %19, !dbg !5235
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !5236 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5240, metadata !DIExpression()), !dbg !5247
  call void @llvm.dbg.value(metadata i8* %1, metadata !5241, metadata !DIExpression()), !dbg !5247
  call void @llvm.dbg.value(metadata i8* %2, metadata !5242, metadata !DIExpression()), !dbg !5247
  call void @llvm.dbg.value(metadata i8* %3, metadata !5243, metadata !DIExpression()), !dbg !5247
  call void @llvm.dbg.value(metadata i32 0, metadata !5244, metadata !DIExpression()), !dbg !5247
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !5248

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !5249
  call void @llvm.dbg.value(metadata i32 %9, metadata !5244, metadata !DIExpression()), !dbg !5247
  call void @llvm.dbg.value(metadata i8* %8, metadata !5242, metadata !DIExpression()), !dbg !5247
  %10 = icmp ult i8* %8, %3, !dbg !5250
  br i1 %10, label %11, label %13, !dbg !5251

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !5252
  br label %17, !dbg !5251

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !5253

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !5254
  %16 = icmp eq i8 %15, 0, !dbg !5253
  br i1 %16, label %24, label %17, !dbg !5248

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !5252
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5255
  call void @llvm.dbg.value(metadata i8* %19, metadata !5242, metadata !DIExpression()), !dbg !5247
  %20 = zext i8 %18 to i32, !dbg !5256
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #25, !dbg !5257
  call void @llvm.dbg.value(metadata i32 %21, metadata !5245, metadata !DIExpression()), !dbg !5258
  %22 = icmp slt i32 %21, 0, !dbg !5259
  %23 = add i32 %9, 1, !dbg !5261
  call void @llvm.dbg.value(metadata i32 undef, metadata !5244, metadata !DIExpression()), !dbg !5247
  br i1 %22, label %24, label %7, !llvm.loop !5262

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !5247
  ret i32 %25, !dbg !5264
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #13 !dbg !5265 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !5269, metadata !DIExpression()), !dbg !5279
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !5270, metadata !DIExpression()), !dbg !5279
  call void @llvm.dbg.value(metadata i8* %2, metadata !5271, metadata !DIExpression()), !dbg !5279
  call void @llvm.dbg.value(metadata i8* %3, metadata !5272, metadata !DIExpression()), !dbg !5279
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !5280
  %6 = load i8, i8* %5, align 1, !dbg !5280
  %7 = zext i8 %6 to i32, !dbg !5281
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #26, !dbg !5282
  %9 = icmp eq i32 %8, 0, !dbg !5282
  call void @llvm.dbg.value(metadata i1 %9, metadata !5273, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5279
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #26, !dbg !5283
  call void @llvm.dbg.value(metadata i32 %10, metadata !5274, metadata !DIExpression()), !dbg !5279
  %11 = ptrtoint i8* %3 to i32, !dbg !5284
  %12 = ptrtoint i8* %2 to i32, !dbg !5284
  %13 = sub i32 %11, %12, !dbg !5284
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !5285
  call void @llvm.dbg.value(metadata i8* %14, metadata !5276, metadata !DIExpression()), !dbg !5279
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !5286

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !5279
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !5269, metadata !DIExpression()), !dbg !5279
  call void @llvm.dbg.value(metadata i8* %18, metadata !5276, metadata !DIExpression()), !dbg !5279
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !5287
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !5288
  call void @llvm.dbg.value(metadata i32 %25, metadata !5277, metadata !DIExpression()), !dbg !5289
  %26 = icmp ult i32 %25, 10, !dbg !5290
  %27 = select i1 %26, i32 48, i32 %16, !dbg !5291
  %28 = add i32 %27, %25, !dbg !5289
  %29 = trunc i32 %28 to i8, !dbg !5291
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !5292
  call void @llvm.dbg.value(metadata i8* %30, metadata !5276, metadata !DIExpression()), !dbg !5279
  store i8 %29, i8* %30, align 1, !dbg !5293
  call void @llvm.dbg.value(metadata i64 %22, metadata !5269, metadata !DIExpression()), !dbg !5279
  %31 = icmp uge i64 %19, %15, !dbg !5294
  %32 = icmp ugt i8* %30, %2, !dbg !5295
  %33 = and i1 %31, %32, !dbg !5295
  br i1 %33, label %17, label %34, !dbg !5296, !llvm.loop !5297

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !5299
  %36 = load i24, i24* %35, align 4, !dbg !5299
  %37 = and i24 %36, 32, !dbg !5299
  %38 = icmp eq i24 %37, 0, !dbg !5299
  br i1 %38, label %44, label %39, !dbg !5301

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !5302

40:                                               ; preds = %39
  br label %41, !dbg !5304

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !5308
  store i24 %43, i24* %35, align 4, !dbg !5308
  br label %44, !dbg !5309

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !5309
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #7 !dbg !5310 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5316, metadata !DIExpression()), !dbg !5319
  call void @llvm.dbg.value(metadata i8* %1, metadata !5317, metadata !DIExpression()), !dbg !5319
  call void @llvm.dbg.value(metadata i32 %2, metadata !5318, metadata !DIExpression()), !dbg !5319
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5320
  %5 = load i24, i24* %4, align 4, !dbg !5320
  %6 = lshr i24 %5, 11, !dbg !5320
  %7 = and i24 %6, 15, !dbg !5320
  %8 = zext i24 %7 to i32, !dbg !5320
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !5321

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !5322
  store i32 %2, i32* %10, align 4, !dbg !5324
  br label %28, !dbg !5325

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !5326
  store i8 %12, i8* %1, align 1, !dbg !5327
  br label %28, !dbg !5328

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !5329
  %15 = bitcast i8* %1 to i16*, !dbg !5330
  store i16 %14, i16* %15, align 2, !dbg !5331
  br label %28, !dbg !5332

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !5333
  store i32 %2, i32* %17, align 4, !dbg !5334
  br label %28, !dbg !5335

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !5336
  %20 = bitcast i8* %1 to i64*, !dbg !5337
  store i64 %19, i64* %20, align 8, !dbg !5338
  br label %28, !dbg !5339

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !5340
  %23 = bitcast i8* %1 to i64*, !dbg !5341
  store i64 %22, i64* %23, align 8, !dbg !5342
  br label %28, !dbg !5343

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !5344
  store i32 %2, i32* %25, align 4, !dbg !5345
  br label %28, !dbg !5346

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !5347
  store i32 %2, i32* %27, align 4, !dbg !5348
  br label %28, !dbg !5349

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !5350
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #11 !dbg !5351 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5354, metadata !DIExpression()), !dbg !5355
  %2 = add i32 %0, -65, !dbg !5356
  %3 = icmp ult i32 %2, 26, !dbg !5357
  %4 = zext i1 %3 to i32, !dbg !5357
  ret i32 %4, !dbg !5358
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #11 !dbg !5359 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5363, metadata !DIExpression()), !dbg !5364
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !5365

2:                                                ; preds = %1
  br label %4, !dbg !5366

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5368

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5369
  ret i32 %5, !dbg !5370
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #13 !dbg !5371 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5373, metadata !DIExpression()), !dbg !5376
  call void @llvm.dbg.value(metadata i8* %1, metadata !5374, metadata !DIExpression()), !dbg !5376
  call void @llvm.dbg.value(metadata i8 1, metadata !5375, metadata !DIExpression()), !dbg !5376
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5377

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5375, metadata !DIExpression()), !dbg !5376
  call void @llvm.dbg.value(metadata i8* %5, metadata !5374, metadata !DIExpression()), !dbg !5376
  %6 = load i8, i8* %5, align 1, !dbg !5378
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5380

7:                                                ; preds = %4
  br label %11, !dbg !5381

8:                                                ; preds = %4
  br label %11, !dbg !5383

9:                                                ; preds = %4
  br label %11, !dbg !5384

10:                                               ; preds = %4
  br label %11, !dbg !5385

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5386
  %14 = or i24 %13, %12, !dbg !5386
  store i24 %14, i24* %3, align 4, !dbg !5386
  call void @llvm.dbg.value(metadata i8 poison, metadata !5375, metadata !DIExpression()), !dbg !5376
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5374, metadata !DIExpression()), !dbg !5376
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5375, metadata !DIExpression()), !dbg !5376
  call void @llvm.dbg.value(metadata i8* %15, metadata !5374, metadata !DIExpression()), !dbg !5376
  %17 = load i24, i24* %3, align 4, !dbg !5387
  %18 = and i24 %17, 68, !dbg !5389
  %19 = icmp eq i24 %18, 68, !dbg !5389
  br i1 %19, label %20, label %22, !dbg !5389

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5390
  store i24 %21, i24* %3, align 4, !dbg !5390
  br label %22, !dbg !5392

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5393
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5394 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5396, metadata !DIExpression()), !dbg !5400
  call void @llvm.dbg.value(metadata i8* %1, metadata !5397, metadata !DIExpression()), !dbg !5400
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5401
  %5 = load i24, i24* %4, align 4, !dbg !5402
  %6 = or i24 %5, 128, !dbg !5402
  store i24 %6, i24* %4, align 4, !dbg !5402
  call void @llvm.dbg.value(metadata i8* %1, metadata !5397, metadata !DIExpression()), !dbg !5400
  %7 = load i8, i8* %1, align 1, !dbg !5403
  %8 = icmp eq i8 %7, 42, !dbg !5405
  br i1 %8, label %9, label %12, !dbg !5406

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5407
  store i24 %10, i24* %4, align 4, !dbg !5407
  call void @llvm.dbg.value(metadata i8* %1, metadata !5397, metadata !DIExpression()), !dbg !5400
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5409
  call void @llvm.dbg.value(metadata i8* %11, metadata !5397, metadata !DIExpression()), !dbg !5400
  store i8* %11, i8** %3, align 4, !dbg !5409
  br label %29, !dbg !5410

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5398, metadata !DIExpression()), !dbg !5400
  call void @llvm.dbg.value(metadata i8** %3, metadata !5397, metadata !DIExpression(DW_OP_deref)), !dbg !5400
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !5411
  call void @llvm.dbg.value(metadata i32 %13, metadata !5399, metadata !DIExpression()), !dbg !5400
  %14 = load i8*, i8** %3, align 4, !dbg !5412
  call void @llvm.dbg.value(metadata i8* %14, metadata !5397, metadata !DIExpression()), !dbg !5400
  %15 = icmp eq i8* %14, %1, !dbg !5414
  br i1 %15, label %29, label %16, !dbg !5415

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5416
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5418
  store i32 %13, i32* %18, align 4, !dbg !5419
  %19 = lshr i32 %13, 31, !dbg !5420
  %20 = lshr i24 %17, 1, !dbg !5421
  %21 = and i24 %20, 1, !dbg !5421
  %22 = zext i24 %21 to i32, !dbg !5421
  %23 = or i32 %19, %22, !dbg !5421
  %24 = trunc i32 %23 to i24, !dbg !5421
  %25 = shl nuw nsw i24 %24, 1, !dbg !5421
  %26 = and i24 %17, -131, !dbg !5421
  %27 = or i24 %26, 128, !dbg !5421
  %28 = or i24 %25, %27, !dbg !5421
  store i24 %28, i24* %4, align 4, !dbg !5421
  br label %29, !dbg !5422

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5400
  ret i8* %30, !dbg !5423
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5424 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5426, metadata !DIExpression()), !dbg !5429
  call void @llvm.dbg.value(metadata i8* %1, metadata !5427, metadata !DIExpression()), !dbg !5429
  %4 = load i8, i8* %1, align 1, !dbg !5430
  %5 = icmp eq i8 %4, 46, !dbg !5431
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5432
  %7 = load i24, i24* %6, align 4, !dbg !5433
  %8 = select i1 %5, i24 512, i24 0, !dbg !5433
  %9 = and i24 %7, -513, !dbg !5433
  %10 = or i24 %9, %8, !dbg !5433
  store i24 %10, i24* %6, align 4, !dbg !5433
  br i1 %5, label %11, label %32, !dbg !5434

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5427, metadata !DIExpression()), !dbg !5429
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5435
  call void @llvm.dbg.value(metadata i8* %12, metadata !5427, metadata !DIExpression()), !dbg !5429
  store i8* %12, i8** %3, align 4, !dbg !5435
  %13 = load i8, i8* %12, align 1, !dbg !5436
  %14 = icmp eq i8 %13, 42, !dbg !5438
  br i1 %14, label %15, label %18, !dbg !5439

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5440
  store i24 %16, i24* %6, align 4, !dbg !5440
  call void @llvm.dbg.value(metadata i8* %12, metadata !5427, metadata !DIExpression()), !dbg !5429
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5442
  call void @llvm.dbg.value(metadata i8* %17, metadata !5427, metadata !DIExpression()), !dbg !5429
  store i8* %17, i8** %3, align 4, !dbg !5442
  br label %32, !dbg !5443

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5427, metadata !DIExpression(DW_OP_deref)), !dbg !5429
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !5444
  call void @llvm.dbg.value(metadata i32 %19, metadata !5428, metadata !DIExpression()), !dbg !5429
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5445
  store i32 %19, i32* %20, align 4, !dbg !5446
  %21 = lshr i32 %19, 31, !dbg !5447
  %22 = load i24, i24* %6, align 4, !dbg !5448
  %23 = lshr i24 %22, 1, !dbg !5448
  %24 = and i24 %23, 1, !dbg !5448
  %25 = zext i24 %24 to i32, !dbg !5448
  %26 = or i32 %21, %25, !dbg !5448
  %27 = trunc i32 %26 to i24, !dbg !5448
  %28 = shl nuw nsw i24 %27, 1, !dbg !5448
  %29 = and i24 %22, -3, !dbg !5448
  %30 = or i24 %28, %29, !dbg !5448
  store i24 %30, i24* %6, align 4, !dbg !5448
  %31 = load i8*, i8** %3, align 4, !dbg !5449
  call void @llvm.dbg.value(metadata i8* %31, metadata !5427, metadata !DIExpression()), !dbg !5429
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5429
  ret i8* %33, !dbg !5450
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #7 !dbg !5451 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5453, metadata !DIExpression()), !dbg !5455
  call void @llvm.dbg.value(metadata i8* %1, metadata !5454, metadata !DIExpression()), !dbg !5455
  %3 = load i8, i8* %1, align 1, !dbg !5456
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5457

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5458
  call void @llvm.dbg.value(metadata i8* %5, metadata !5454, metadata !DIExpression()), !dbg !5455
  %6 = load i8, i8* %5, align 1, !dbg !5461
  %7 = icmp eq i8 %6, 104, !dbg !5462
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5463
  %9 = load i24, i24* %8, align 4, !dbg !5463
  %10 = and i24 %9, -30721, !dbg !5463
  br i1 %7, label %11, label %14, !dbg !5464

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5465
  store i24 %12, i24* %8, align 4, !dbg !5465
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5467
  call void @llvm.dbg.value(metadata i8* %13, metadata !5454, metadata !DIExpression()), !dbg !5455
  br label %56, !dbg !5468

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5469
  store i24 %15, i24* %8, align 4, !dbg !5469
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5471
  call void @llvm.dbg.value(metadata i8* %17, metadata !5454, metadata !DIExpression()), !dbg !5455
  %18 = load i8, i8* %17, align 1, !dbg !5473
  %19 = icmp eq i8 %18, 108, !dbg !5474
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5475
  %21 = load i24, i24* %20, align 4, !dbg !5475
  %22 = and i24 %21, -30721, !dbg !5475
  br i1 %19, label %23, label %26, !dbg !5476

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5477
  store i24 %24, i24* %20, align 4, !dbg !5477
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5479
  call void @llvm.dbg.value(metadata i8* %25, metadata !5454, metadata !DIExpression()), !dbg !5455
  br label %56, !dbg !5480

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5481
  store i24 %27, i24* %20, align 4, !dbg !5481
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5483
  %30 = load i24, i24* %29, align 4, !dbg !5484
  %31 = and i24 %30, -30721, !dbg !5484
  %32 = or i24 %31, 10240, !dbg !5484
  store i24 %32, i24* %29, align 4, !dbg !5484
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5485
  call void @llvm.dbg.value(metadata i8* %33, metadata !5454, metadata !DIExpression()), !dbg !5455
  br label %56, !dbg !5486

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5487
  %36 = load i24, i24* %35, align 4, !dbg !5488
  %37 = and i24 %36, -30721, !dbg !5488
  %38 = or i24 %37, 12288, !dbg !5488
  store i24 %38, i24* %35, align 4, !dbg !5488
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5489
  call void @llvm.dbg.value(metadata i8* %39, metadata !5454, metadata !DIExpression()), !dbg !5455
  br label %56, !dbg !5490

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5491
  %42 = load i24, i24* %41, align 4, !dbg !5492
  %43 = and i24 %42, -30721, !dbg !5492
  %44 = or i24 %43, 14336, !dbg !5492
  store i24 %44, i24* %41, align 4, !dbg !5492
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5493
  call void @llvm.dbg.value(metadata i8* %45, metadata !5454, metadata !DIExpression()), !dbg !5455
  br label %56, !dbg !5494

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5495
  %48 = load i24, i24* %47, align 4, !dbg !5496
  %49 = and i24 %48, -30723, !dbg !5496
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5497
  call void @llvm.dbg.value(metadata i8* %50, metadata !5454, metadata !DIExpression()), !dbg !5455
  %51 = or i24 %49, 16386, !dbg !5498
  store i24 %51, i24* %47, align 4, !dbg !5498
  br label %56, !dbg !5499

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5500
  %54 = load i24, i24* %53, align 4, !dbg !5501
  %55 = and i24 %54, -30721, !dbg !5501
  store i24 %55, i24* %53, align 4, !dbg !5501
  br label %56, !dbg !5502

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5454, metadata !DIExpression()), !dbg !5455
  ret i8* %57, !dbg !5503
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #7 !dbg !5504 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5506, metadata !DIExpression()), !dbg !5511
  call void @llvm.dbg.value(metadata i8* %1, metadata !5507, metadata !DIExpression()), !dbg !5511
  call void @llvm.dbg.value(metadata i8 0, metadata !5508, metadata !DIExpression()), !dbg !5511
  call void @llvm.dbg.value(metadata i8* %1, metadata !5507, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5511
  %3 = load i8, i8* %1, align 1, !dbg !5512
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5513
  store i8 %3, i8* %4, align 1, !dbg !5514
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5515

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5516

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5517
  %9 = load i24, i24* %8, align 4, !dbg !5517
  %10 = and i24 %9, -458753, !dbg !5517
  %11 = or i24 %10, %7, !dbg !5517
  call void @llvm.dbg.label(metadata !5509), !dbg !5518
  %12 = and i24 %9, 30720, !dbg !5519
  %13 = icmp eq i24 %12, 16384, !dbg !5519
  %14 = zext i1 %13 to i24, !dbg !5521
  %15 = or i24 %11, %14, !dbg !5521
  %16 = icmp eq i8 %3, 99, !dbg !5522
  br i1 %16, label %17, label %43, !dbg !5524

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5525
  %19 = icmp ne i24 %18, 0, !dbg !5525
  call void @llvm.dbg.value(metadata i1 %19, metadata !5508, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5511
  br label %43, !dbg !5527

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5528
  %22 = load i24, i24* %21, align 4, !dbg !5529
  %23 = and i24 %22, -458753, !dbg !5529
  %24 = or i24 %23, 262144, !dbg !5529
  call void @llvm.dbg.value(metadata i8 1, metadata !5508, metadata !DIExpression()), !dbg !5511
  br label %43, !dbg !5530

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5533
  %27 = load i24, i24* %26, align 4, !dbg !5534
  %28 = and i24 %27, -458753, !dbg !5534
  %29 = or i24 %28, 196608, !dbg !5534
  %30 = and i24 %27, 30720, !dbg !5535
  %31 = icmp eq i24 %30, 16384, !dbg !5535
  br label %43, !dbg !5537

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5538
  %34 = load i24, i24* %33, align 4, !dbg !5539
  %35 = and i24 %34, -458753, !dbg !5539
  %36 = or i24 %35, 196608, !dbg !5539
  %37 = and i24 %34, 30720, !dbg !5540
  %38 = icmp ne i24 %37, 0, !dbg !5540
  br label %43, !dbg !5542

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5543
  %41 = load i24, i24* %40, align 4, !dbg !5544
  %42 = or i24 %41, 1, !dbg !5544
  br label %43, !dbg !5545

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5546
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5547
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5548
  call void @llvm.dbg.value(metadata i8* %48, metadata !5507, metadata !DIExpression()), !dbg !5511
  call void @llvm.dbg.value(metadata i8 poison, metadata !5508, metadata !DIExpression()), !dbg !5511
  %49 = lshr i24 %44, 1, !dbg !5546
  %50 = and i24 %49, 1, !dbg !5546
  %51 = zext i24 %50 to i32, !dbg !5546
  %52 = or i32 %51, %47, !dbg !5546
  %53 = trunc i32 %52 to i24, !dbg !5546
  %54 = shl nuw nsw i24 %53, 1, !dbg !5546
  %55 = and i24 %44, -3, !dbg !5546
  %56 = or i24 %54, %55, !dbg !5546
  store i24 %56, i24* %46, align 4, !dbg !5546
  ret i8* %48, !dbg !5549
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #13 !dbg !5550 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5555, metadata !DIExpression()), !dbg !5558
  %2 = load i8*, i8** %0, align 4, !dbg !5559
  call void @llvm.dbg.value(metadata i8* %2, metadata !5556, metadata !DIExpression()), !dbg !5558
  call void @llvm.dbg.value(metadata i32 0, metadata !5557, metadata !DIExpression()), !dbg !5558
  %3 = load i8, i8* %2, align 1, !dbg !5560
  %4 = zext i8 %3 to i32, !dbg !5561
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #26, !dbg !5562
  %6 = icmp eq i32 %5, 0, !dbg !5563
  br i1 %6, label %19, label %7, !dbg !5563

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5557, metadata !DIExpression()), !dbg !5558
  call void @llvm.dbg.value(metadata i8* %10, metadata !5556, metadata !DIExpression()), !dbg !5558
  %11 = mul i32 %9, 10, !dbg !5564
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5566
  call void @llvm.dbg.value(metadata i8* %12, metadata !5556, metadata !DIExpression()), !dbg !5558
  %13 = add i32 %11, -48, !dbg !5567
  %14 = add i32 %13, %8, !dbg !5568
  call void @llvm.dbg.value(metadata i32 %14, metadata !5557, metadata !DIExpression()), !dbg !5558
  %15 = load i8, i8* %12, align 1, !dbg !5560
  %16 = zext i8 %15 to i32, !dbg !5561
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #26, !dbg !5562
  %18 = icmp eq i32 %17, 0, !dbg !5563
  br i1 %18, label %19, label %7, !dbg !5563, !llvm.loop !5569

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5558
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5558
  store i8* %20, i8** %0, align 4, !dbg !5571
  ret i32 %21, !dbg !5572
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #11 !dbg !5573 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5575, metadata !DIExpression()), !dbg !5576
  %2 = add i32 %0, -48, !dbg !5577
  %3 = icmp ult i32 %2, 10, !dbg !5578
  %4 = zext i1 %3 to i32, !dbg !5578
  ret i32 %4, !dbg !5579
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5580 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #24, !dbg !5582, !srcloc !5583
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #24, !dbg !5584, !srcloc !5585
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #24, !dbg !5586, !srcloc !5587
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #24, !dbg !5588, !srcloc !5589
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #24, !dbg !5590, !srcloc !5591
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,85\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #24, !dbg !5592, !srcloc !5593
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #24, !dbg !5594, !srcloc !5595
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #24, !dbg !5596, !srcloc !5597
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,512\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #24, !dbg !5598, !srcloc !5599
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #24, !dbg !5600, !srcloc !5601
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #24, !dbg !5602, !srcloc !5603
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #24, !dbg !5604, !srcloc !5605
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #24, !dbg !5606, !srcloc !5607
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #24, !dbg !5608, !srcloc !5609
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #24, !dbg !5610, !srcloc !5611
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #24, !dbg !5612, !srcloc !5613
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #24, !dbg !5614, !srcloc !5615
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #24, !dbg !5616, !srcloc !5617
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #24, !dbg !5618, !srcloc !5619
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #24, !dbg !5620, !srcloc !5621
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #24, !dbg !5622, !srcloc !5623
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #24, !dbg !5624, !srcloc !5625
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #24, !dbg !5626, !srcloc !5627
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #24, !dbg !5628, !srcloc !5629
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #24, !dbg !5630, !srcloc !5631
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #24, !dbg !5632, !srcloc !5633
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #24, !dbg !5634, !srcloc !5635
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #24, !dbg !5636, !srcloc !5637
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #24, !dbg !5638, !srcloc !5639
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_PARTITIONS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_PARTITIONS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_PARTITIONS_ENABLED,%object", ""() #24, !dbg !5640, !srcloc !5641
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #24, !dbg !5642, !srcloc !5643
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #24, !dbg !5644, !srcloc !5645
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED\0A\09.equ\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED,%object", ""() #24, !dbg !5646, !srcloc !5647
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #24, !dbg !5648, !srcloc !5649
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #24, !dbg !5650, !srcloc !5651
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #24, !dbg !5652, !srcloc !5653
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #24, !dbg !5654, !srcloc !5655
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #24, !dbg !5656, !srcloc !5657
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #24, !dbg !5658, !srcloc !5659
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #24, !dbg !5660, !srcloc !5661
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #24, !dbg !5662, !srcloc !5663
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,%object", ""() #24, !dbg !5664, !srcloc !5665
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #24, !dbg !5666, !srcloc !5667
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #24, !dbg !5668, !srcloc !5669
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #24, !dbg !5670, !srcloc !5671
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #24, !dbg !5672, !srcloc !5673
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #24, !dbg !5674, !srcloc !5675
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #24, !dbg !5676, !srcloc !5677
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #24, !dbg !5678, !srcloc !5679
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #24, !dbg !5680, !srcloc !5681
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #24, !dbg !5682, !srcloc !5683
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ZEPHYR_BT_HCI_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ZEPHYR_BT_HCI_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ZEPHYR_BT_HCI_SPI_ENABLED,%object", ""() #24, !dbg !5684, !srcloc !5685
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #24, !dbg !5686, !srcloc !5687
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #24, !dbg !5688, !srcloc !5689
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #24, !dbg !5690, !srcloc !5691
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #24, !dbg !5692, !srcloc !5693
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #24, !dbg !5694, !srcloc !5695
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #24, !dbg !5696, !srcloc !5697
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #24, !dbg !5698, !srcloc !5699
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #24, !dbg !5700, !srcloc !5701
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #24, !dbg !5702, !srcloc !5703
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #24, !dbg !5704, !srcloc !5705
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #24, !dbg !5706, !srcloc !5707
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #24, !dbg !5708, !srcloc !5709
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #24, !dbg !5710, !srcloc !5711
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #24, !dbg !5712, !srcloc !5713
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #24, !dbg !5714, !srcloc !5715
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #24, !dbg !5716, !srcloc !5717
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #24, !dbg !5718, !srcloc !5719
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #24, !dbg !5720, !srcloc !5721
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #24, !dbg !5722, !srcloc !5723
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #24, !dbg !5724, !srcloc !5725
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #24, !dbg !5726, !srcloc !5727
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #24, !dbg !5728, !srcloc !5729
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #24, !dbg !5730, !srcloc !5731
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #24, !dbg !5732, !srcloc !5733
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #24, !dbg !5734, !srcloc !5735
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #24, !dbg !5736, !srcloc !5737
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #24, !dbg !5738, !srcloc !5739
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #24, !dbg !5740, !srcloc !5741
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #24, !dbg !5742, !srcloc !5743
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #24, !dbg !5744, !srcloc !5745
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #24, !dbg !5746, !srcloc !5747
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #24, !dbg !5748, !srcloc !5749
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #24, !dbg !5750, !srcloc !5751
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_CARBON\0A\09.equ\09CONFIG_BOARD_96B_CARBON,1\0A\09.type\09CONFIG_BOARD_96B_CARBON,%object", ""() #24, !dbg !5752, !srcloc !5753
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #24, !dbg !5754, !srcloc !5755
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #24, !dbg !5756, !srcloc !5757
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #24, !dbg !5758, !srcloc !5759
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #24, !dbg !5760, !srcloc !5761
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #24, !dbg !5762, !srcloc !5763
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F401XE\0A\09.equ\09CONFIG_SOC_STM32F401XE,1\0A\09.type\09CONFIG_SOC_STM32F401XE,%object", ""() #24, !dbg !5764, !srcloc !5765
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #24, !dbg !5766, !srcloc !5767
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #24, !dbg !5768, !srcloc !5769
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #24, !dbg !5770, !srcloc !5771
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #24, !dbg !5772, !srcloc !5773
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #24, !dbg !5774, !srcloc !5775
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #24, !dbg !5776, !srcloc !5777
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #24, !dbg !5778, !srcloc !5779
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #24, !dbg !5780, !srcloc !5781
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #24, !dbg !5782, !srcloc !5783
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #24, !dbg !5784, !srcloc !5785
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #24, !dbg !5786, !srcloc !5787
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #24, !dbg !5788, !srcloc !5789
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #24, !dbg !5790, !srcloc !5791
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #24, !dbg !5792, !srcloc !5793
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #24, !dbg !5794, !srcloc !5795
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #24, !dbg !5796, !srcloc !5797
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #24, !dbg !5798, !srcloc !5799
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #24, !dbg !5800, !srcloc !5801
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #24, !dbg !5802, !srcloc !5803
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #24, !dbg !5804, !srcloc !5805
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #24, !dbg !5806, !srcloc !5807
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #24, !dbg !5808, !srcloc !5809
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #24, !dbg !5810, !srcloc !5811
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #24, !dbg !5812, !srcloc !5813
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #24, !dbg !5814, !srcloc !5815
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #24, !dbg !5816, !srcloc !5817
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #24, !dbg !5818, !srcloc !5819
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #24, !dbg !5820, !srcloc !5821
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #24, !dbg !5822, !srcloc !5823
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,96\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #24, !dbg !5824, !srcloc !5825
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #24, !dbg !5826, !srcloc !5827
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #24, !dbg !5828, !srcloc !5829
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #24, !dbg !5830, !srcloc !5831
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #24, !dbg !5832, !srcloc !5833
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #24, !dbg !5834, !srcloc !5835
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #24, !dbg !5836, !srcloc !5837
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #24, !dbg !5838, !srcloc !5839
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #24, !dbg !5840, !srcloc !5841
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #24, !dbg !5842, !srcloc !5843
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #24, !dbg !5844, !srcloc !5845
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #24, !dbg !5846, !srcloc !5847
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #24, !dbg !5848, !srcloc !5849
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #24, !dbg !5850, !srcloc !5851
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #24, !dbg !5852, !srcloc !5853
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #24, !dbg !5854, !srcloc !5855
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #24, !dbg !5856, !srcloc !5857
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #24, !dbg !5858, !srcloc !5859
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #24, !dbg !5860, !srcloc !5861
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #24, !dbg !5862, !srcloc !5863
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #24, !dbg !5864, !srcloc !5865
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #24, !dbg !5866, !srcloc !5867
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #24, !dbg !5868, !srcloc !5869
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #24, !dbg !5870, !srcloc !5871
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #24, !dbg !5872, !srcloc !5873
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #24, !dbg !5874, !srcloc !5875
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #24, !dbg !5876, !srcloc !5877
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #24, !dbg !5878, !srcloc !5879
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #24, !dbg !5880, !srcloc !5881
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #24, !dbg !5882, !srcloc !5883
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #24, !dbg !5884, !srcloc !5885
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #24, !dbg !5886, !srcloc !5887
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #24, !dbg !5888, !srcloc !5889
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #24, !dbg !5890, !srcloc !5891
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #24, !dbg !5892, !srcloc !5893
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #24, !dbg !5894, !srcloc !5895
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #24, !dbg !5896, !srcloc !5897
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #24, !dbg !5898, !srcloc !5899
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #24, !dbg !5900, !srcloc !5901
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #24, !dbg !5902, !srcloc !5903
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #24, !dbg !5904, !srcloc !5905
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #24, !dbg !5906, !srcloc !5907
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #24, !dbg !5908, !srcloc !5909
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #24, !dbg !5910, !srcloc !5911
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #24, !dbg !5912, !srcloc !5913
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #24, !dbg !5914, !srcloc !5915
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #24, !dbg !5916, !srcloc !5917
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #24, !dbg !5918, !srcloc !5919
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #24, !dbg !5920, !srcloc !5921
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #24, !dbg !5922, !srcloc !5923
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #24, !dbg !5924, !srcloc !5925
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #24, !dbg !5926, !srcloc !5927
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #24, !dbg !5928, !srcloc !5929
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #24, !dbg !5930, !srcloc !5931
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #24, !dbg !5932, !srcloc !5933
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #24, !dbg !5934, !srcloc !5935
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #24, !dbg !5936, !srcloc !5937
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #24, !dbg !5938, !srcloc !5939
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #24, !dbg !5940, !srcloc !5941
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #24, !dbg !5942, !srcloc !5943
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #24, !dbg !5944, !srcloc !5945
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #24, !dbg !5946, !srcloc !5947
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #24, !dbg !5948, !srcloc !5949
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #24, !dbg !5950, !srcloc !5951
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #24, !dbg !5952, !srcloc !5953
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #24, !dbg !5954, !srcloc !5955
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #24, !dbg !5956, !srcloc !5957
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #24, !dbg !5958, !srcloc !5959
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #24, !dbg !5960, !srcloc !5961
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #24, !dbg !5962, !srcloc !5963
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #24, !dbg !5964, !srcloc !5965
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #24, !dbg !5966, !srcloc !5967
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #24, !dbg !5968, !srcloc !5969
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #24, !dbg !5970, !srcloc !5971
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #24, !dbg !5972, !srcloc !5973
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #24, !dbg !5974, !srcloc !5975
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #24, !dbg !5976, !srcloc !5977
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #24, !dbg !5978, !srcloc !5979
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #24, !dbg !5980, !srcloc !5981
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #24, !dbg !5982, !srcloc !5983
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #24, !dbg !5984, !srcloc !5985
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #24, !dbg !5986, !srcloc !5987
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #24, !dbg !5988, !srcloc !5989
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #24, !dbg !5990, !srcloc !5991
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #24, !dbg !5992, !srcloc !5993
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #24, !dbg !5994, !srcloc !5995
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #24, !dbg !5996, !srcloc !5997
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #24, !dbg !5998, !srcloc !5999
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #24, !dbg !6000, !srcloc !6001
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #24, !dbg !6002, !srcloc !6003
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #24, !dbg !6004, !srcloc !6005
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #24, !dbg !6006, !srcloc !6007
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #24, !dbg !6008, !srcloc !6009
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #24, !dbg !6010, !srcloc !6011
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #24, !dbg !6012, !srcloc !6013
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #24, !dbg !6014, !srcloc !6015
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #24, !dbg !6016, !srcloc !6017
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #24, !dbg !6018, !srcloc !6019
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #24, !dbg !6020, !srcloc !6021
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,16000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #24, !dbg !6022, !srcloc !6023
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #24, !dbg !6024, !srcloc !6025
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #24, !dbg !6026, !srcloc !6027
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #24, !dbg !6028, !srcloc !6029
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #24, !dbg !6030, !srcloc !6031
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #24, !dbg !6032, !srcloc !6033
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #24, !dbg !6034, !srcloc !6035
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #24, !dbg !6036, !srcloc !6037
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #24, !dbg !6038, !srcloc !6039
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #24, !dbg !6040, !srcloc !6041
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #24, !dbg !6042, !srcloc !6043
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #24, !dbg !6044, !srcloc !6045
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #24, !dbg !6046, !srcloc !6047
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #24, !dbg !6048, !srcloc !6049
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #24, !dbg !6050, !srcloc !6051
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #24, !dbg !6052, !srcloc !6053
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #24, !dbg !6054, !srcloc !6055
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #24, !dbg !6056, !srcloc !6057
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #24, !dbg !6058, !srcloc !6059
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #24, !dbg !6060, !srcloc !6061
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #24, !dbg !6062, !srcloc !6063
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #24, !dbg !6064, !srcloc !6065
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #24, !dbg !6066, !srcloc !6067
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_RUNTIME_STATS\0A\09.equ\09CONFIG_SYS_HEAP_RUNTIME_STATS,1\0A\09.type\09CONFIG_SYS_HEAP_RUNTIME_STATS,%object", ""() #24, !dbg !6068, !srcloc !6069
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #24, !dbg !6070, !srcloc !6071
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #24, !dbg !6072, !srcloc !6073
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #24, !dbg !6074, !srcloc !6075
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #24, !dbg !6076, !srcloc !6077
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #24, !dbg !6078, !srcloc !6079
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #24, !dbg !6080, !srcloc !6081
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #24, !dbg !6082, !srcloc !6083
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #24, !dbg !6084, !srcloc !6085
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #24, !dbg !6086, !srcloc !6087
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #24, !dbg !6088, !srcloc !6089
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #24, !dbg !6090, !srcloc !6091
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #24, !dbg !6092, !srcloc !6093
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #24, !dbg !6094, !srcloc !6095
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #24, !dbg !6096, !srcloc !6097
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #24, !dbg !6098, !srcloc !6099
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #24, !dbg !6100, !srcloc !6101
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #24, !dbg !6102, !srcloc !6103
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #24, !dbg !6104, !srcloc !6105
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #24, !dbg !6106, !srcloc !6107
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #24, !dbg !6108, !srcloc !6109
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #24, !dbg !6110, !srcloc !6111
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #24, !dbg !6112, !srcloc !6113
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #24, !dbg !6114, !srcloc !6115
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #24, !dbg !6116, !srcloc !6117
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #24, !dbg !6118, !srcloc !6119
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #24, !dbg !6120, !srcloc !6121
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #24, !dbg !6122, !srcloc !6123
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #24, !dbg !6124, !srcloc !6125
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #24, !dbg !6126, !srcloc !6127
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #24, !dbg !6128, !srcloc !6129
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #24, !dbg !6130, !srcloc !6131
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #24, !dbg !6132, !srcloc !6133
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #24, !dbg !6134, !srcloc !6135
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #24, !dbg !6136, !srcloc !6137
  ret void, !dbg !6138
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !6139 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6141, metadata !DIExpression()), !dbg !6143
  tail call fastcc void @LL_FLASH_EnableInstCache() #26, !dbg !6144
  tail call fastcc void @LL_FLASH_EnableDataCache() #26, !dbg !6145
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !6146, !srcloc !6155
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !6146
  call void @llvm.dbg.value(metadata i32 %3, metadata !6152, metadata !DIExpression()) #24, !dbg !6156
  call void @llvm.dbg.value(metadata i32 undef, metadata !6153, metadata !DIExpression()) #24, !dbg !6156
  call void @llvm.dbg.value(metadata i32 %3, metadata !6142, metadata !DIExpression()), !dbg !6143
  call void @llvm.dbg.value(metadata i32 %3, metadata !6157, metadata !DIExpression()) #24, !dbg !6162
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !6164, !srcloc !6165
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !6166
  ret i32 0, !dbg !6167
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #15 !dbg !6168 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6170
  %2 = or i32 %1, 512, !dbg !6170
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6170
  ret void, !dbg !6171
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #15 !dbg !6172 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6173
  %2 = or i32 %1, 1024, !dbg !6173
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6173
  ret void, !dbg !6174
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #11 !dbg !6175 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6177, metadata !DIExpression()), !dbg !6178
  ret i32 0, !dbg !6179
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !6180 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6229, metadata !DIExpression()), !dbg !6231
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !6230, metadata !DIExpression()), !dbg !6231
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #25, !dbg !6232
  ret void, !dbg !6233
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !6234 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6251, metadata !DIExpression()), !dbg !6254
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !6252, metadata !DIExpression()), !dbg !6254
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6255
  %4 = load i32, i32* %3, align 4, !dbg !6255
  call void @llvm.dbg.value(metadata i32 %4, metadata !6253, metadata !DIExpression()), !dbg !6254
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #26, !dbg !6256
  ret void, !dbg !6257
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !6258 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6262, metadata !DIExpression()), !dbg !6265
  call void @llvm.dbg.value(metadata i8* %0, metadata !6263, metadata !DIExpression()), !dbg !6265
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !6266
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #24, !dbg !6266
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !6264, metadata !DIExpression()), !dbg !6267
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !6267
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !6268
  %5 = bitcast i8* %4 to i32*, !dbg !6268
  %6 = load i32, i32* %5, align 4, !dbg !6268
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !6269
  store i32 %6, i32* %7, align 4, !dbg !6270
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #26, !dbg !6271
  unreachable, !dbg !6272
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6273 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6276, metadata !DIExpression()), !dbg !6277
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #26, !dbg !6278
  ret void, !dbg !6279
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6280 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6284, metadata !DIExpression()), !dbg !6285
  %2 = icmp sgt i32 %0, -1, !dbg !6286
  br i1 %2, label %3, label %8, !dbg !6288

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6289, !srcloc !6291
  %4 = and i32 %0, 31, !dbg !6292
  %5 = shl nuw i32 1, %4, !dbg !6293
  %6 = lshr i32 %0, 5, !dbg !6294
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !6295
  store volatile i32 %5, i32* %7, align 4, !dbg !6296
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6297, !srcloc !6298
  br label %8, !dbg !6299

8:                                                ; preds = %3, %1
  ret void, !dbg !6300
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !6301 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6303, metadata !DIExpression()), !dbg !6304
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #26, !dbg !6305
  ret void, !dbg !6306
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6307 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6309, metadata !DIExpression()), !dbg !6310
  %2 = icmp sgt i32 %0, -1, !dbg !6311
  br i1 %2, label %3, label %8, !dbg !6313

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6314
  %5 = shl nuw i32 1, %4, !dbg !6316
  %6 = lshr i32 %0, 5, !dbg !6317
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !6318
  store volatile i32 %5, i32* %7, align 4, !dbg !6319
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !6320, !srcloc !6324
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !6325, !srcloc !6328
  br label %8, !dbg !6329

8:                                                ; preds = %3, %1
  ret void, !dbg !6330
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #16 !dbg !6331 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6335, metadata !DIExpression()), !dbg !6336
  %2 = lshr i32 %0, 5, !dbg !6337
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !6338
  %4 = load volatile i32, i32* %3, align 4, !dbg !6338
  %5 = and i32 %0, 31, !dbg !6339
  %6 = shl nuw i32 1, %5, !dbg !6339
  %7 = and i32 %4, %6, !dbg !6340
  ret i32 %7, !dbg !6341
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !6342 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6346, metadata !DIExpression()), !dbg !6349
  call void @llvm.dbg.value(metadata i32 %1, metadata !6347, metadata !DIExpression()), !dbg !6349
  call void @llvm.dbg.value(metadata i32 %2, metadata !6348, metadata !DIExpression()), !dbg !6349
  %4 = add i32 %1, 1, !dbg !6350
  call void @llvm.dbg.value(metadata i32 %4, metadata !6347, metadata !DIExpression()), !dbg !6349
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #26, !dbg !6353
  ret void, !dbg !6354
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !6355 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6359, metadata !DIExpression()), !dbg !6361
  call void @llvm.dbg.value(metadata i32 %1, metadata !6360, metadata !DIExpression()), !dbg !6361
  %3 = trunc i32 %1 to i8, !dbg !6362
  %4 = shl i8 %3, 4, !dbg !6362
  %5 = and i32 %0, 15, !dbg !6364
  %6 = add nsw i32 %5, -4, !dbg !6364
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6364
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6364
  %9 = icmp slt i32 %0, 0, !dbg !6364
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6364
  store volatile i8 %4, i8* %10, align 1, !dbg !6362
  ret void, !dbg !6365
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !6366 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6368, metadata !DIExpression()), !dbg !6369
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #25, !dbg !6370
  ret void, !dbg !6371
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6372 {
  tail call void @z_SysNmiOnReset() #25, !dbg !6374
  tail call void @z_arm_int_exit() #25, !dbg !6375
  ret void, !dbg !6376
}

; Function Attrs: optsize
declare !dbg !6377 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6378 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #8 !dbg !6380 {
  tail call fastcc void @relocate_vector_table() #26, !dbg !6382
  tail call fastcc void @z_arm_floating_point_init() #26, !dbg !6383
  tail call void @z_bss_zero() #25, !dbg !6384
  tail call void @z_data_copy() #25, !dbg !6385
  tail call void @z_arm_interrupt_init() #25, !dbg !6386
  tail call void @z_cstart() #28, !dbg !6387
  unreachable, !dbg !6387
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6388 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6389
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !6390, !srcloc !6393
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !6394, !srcloc !6397
  ret void, !dbg !6398
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !6399 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6400
  %2 = and i32 %1, -15728641, !dbg !6400
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6400
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #24, !dbg !6401, !srcloc !6406
  call void @llvm.dbg.value(metadata i32 %3, metadata !6404, metadata !DIExpression()) #24, !dbg !6407
  %4 = and i32 %3, -5, !dbg !6408
  call void @llvm.dbg.value(metadata i32 %4, metadata !6409, metadata !DIExpression()) #24, !dbg !6414
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #24, !dbg !6416, !srcloc !6417
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !6418, !srcloc !6397
  ret void, !dbg !6420
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6421 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6424, metadata !DIExpression()), !dbg !6425
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6426
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !6427
  store i32 %0, i32* %3, align 4, !dbg !6428
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6429
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !6430
  store i32 %4, i32* %5, align 4, !dbg !6431
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6432
  %7 = or i32 %6, 268435456, !dbg !6432
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6432
  call void @llvm.dbg.value(metadata i32 0, metadata !6433, metadata !DIExpression()) #24, !dbg !6436
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #24, !dbg !6438, !srcloc !6439
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6440
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !6441
  %10 = load i32, i32* %9, align 4, !dbg !6441
  ret i32 %10, !dbg !6442
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #4 !dbg !6443 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6553, metadata !DIExpression()), !dbg !6561
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !6554, metadata !DIExpression()), !dbg !6561
  call void @llvm.dbg.value(metadata i8* %2, metadata !6555, metadata !DIExpression()), !dbg !6561
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !6556, metadata !DIExpression()), !dbg !6561
  call void @llvm.dbg.value(metadata i8* %4, metadata !6557, metadata !DIExpression()), !dbg !6561
  call void @llvm.dbg.value(metadata i8* %5, metadata !6558, metadata !DIExpression()), !dbg !6561
  call void @llvm.dbg.value(metadata i8* %6, metadata !6559, metadata !DIExpression()), !dbg !6561
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !6562
  call void @llvm.dbg.value(metadata i8* %8, metadata !6560, metadata !DIExpression()), !dbg !6561
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !6563
  %10 = bitcast i8* %9 to i32*, !dbg !6563
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !6564
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !6565
  %12 = bitcast i8* %8 to i32*, !dbg !6566
  store i32 %11, i32* %12, align 4, !dbg !6567
  %13 = ptrtoint i8* %4 to i32, !dbg !6568
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !6569
  %15 = bitcast i8* %14 to i32*, !dbg !6569
  store i32 %13, i32* %15, align 4, !dbg !6570
  %16 = ptrtoint i8* %5 to i32, !dbg !6571
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !6572
  %18 = bitcast i8* %17 to i32*, !dbg !6572
  store i32 %16, i32* %18, align 4, !dbg !6573
  %19 = ptrtoint i8* %6 to i32, !dbg !6574
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !6575
  %21 = bitcast i8* %20 to i32*, !dbg !6575
  store i32 %19, i32* %21, align 4, !dbg !6576
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !6577
  %23 = bitcast i8* %22 to i32*, !dbg !6577
  store i32 16777216, i32* %23, align 4, !dbg !6578
  %24 = ptrtoint i8* %8 to i32, !dbg !6579
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !6580
  store i32 %24, i32* %25, align 8, !dbg !6581
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !6582
  store i32 0, i32* %26, align 4, !dbg !6583
  ret void, !dbg !6584
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !6585 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6590, metadata !DIExpression()), !dbg !6596
  call void @llvm.dbg.value(metadata i32 %1, metadata !6591, metadata !DIExpression()), !dbg !6596
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6597
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !6592, metadata !DIExpression()), !dbg !6596
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !6598
  br i1 %4, label %19, label %5, !dbg !6600

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !6595, metadata !DIExpression()), !dbg !6596
  %6 = icmp eq i32 %0, -22, !dbg !6601
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !6601
  %8 = load i32, i32* %7, align 4, !dbg !6601
  br i1 %6, label %16, label %9, !dbg !6603

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !6601
  %11 = icmp ule i32 %10, %0, !dbg !6601
  %12 = icmp ugt i32 %8, %0, !dbg !6601
  %13 = and i1 %12, %11, !dbg !6601
  %14 = icmp ugt i32 %8, %1, !dbg !6601
  %15 = and i1 %14, %13, !dbg !6601
  br i1 %15, label %18, label %19, !dbg !6601

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !6601
  br i1 %17, label %18, label %19, !dbg !6603

18:                                               ; preds = %9, %16
  br label %19, !dbg !6604

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !6596
  ret i32 %20, !dbg !6606
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #8 !dbg !6607 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6611, metadata !DIExpression()), !dbg !6614
  call void @llvm.dbg.value(metadata i8* %1, metadata !6612, metadata !DIExpression()), !dbg !6614
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !6613, metadata !DIExpression()), !dbg !6614
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6615
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #25, !dbg !6616
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #24, !dbg !6617, !srcloc !6618
  unreachable, !dbg !6619
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !6620 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6638, metadata !DIExpression()), !dbg !6648
  call void @llvm.dbg.value(metadata i32 %1, metadata !6639, metadata !DIExpression()), !dbg !6648
  call void @llvm.dbg.value(metadata i32 %2, metadata !6640, metadata !DIExpression()), !dbg !6648
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !6641, metadata !DIExpression()), !dbg !6648
  call void @llvm.dbg.value(metadata i32 0, metadata !6642, metadata !DIExpression()), !dbg !6648
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6649
  %9 = and i32 %8, 511, !dbg !6650
  call void @llvm.dbg.value(metadata i32 %9, metadata !6643, metadata !DIExpression()), !dbg !6648
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #24, !dbg !6651
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #24, !dbg !6651
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !6652
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #24, !dbg !6652
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !6647, metadata !DIExpression()), !dbg !6653
  call void @llvm.dbg.value(metadata i32 0, metadata !6654, metadata !DIExpression()) #24, !dbg !6657
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #24, !dbg !6659, !srcloc !6660
  call void @llvm.dbg.value(metadata i8* %6, metadata !6645, metadata !DIExpression(DW_OP_deref)), !dbg !6648
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #26, !dbg !6661
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !6646, metadata !DIExpression()), !dbg !6648
  call void @llvm.dbg.value(metadata i8* %5, metadata !6644, metadata !DIExpression(DW_OP_deref)), !dbg !6648
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #26, !dbg !6662
  call void @llvm.dbg.value(metadata i32 %12, metadata !6642, metadata !DIExpression()), !dbg !6648
  %13 = load i8, i8* %5, align 1, !dbg !6663, !range !6665
  call void @llvm.dbg.value(metadata i8 %13, metadata !6644, metadata !DIExpression()), !dbg !6648
  %14 = icmp eq i8 %13, 0, !dbg !6663
  br i1 %14, label %15, label %32, !dbg !6666

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !6667
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #25, !dbg !6668
  %18 = load i8, i8* %6, align 1, !dbg !6669, !range !6665
  call void @llvm.dbg.value(metadata i8 %18, metadata !6645, metadata !DIExpression()), !dbg !6648
  %19 = icmp eq i8 %18, 0, !dbg !6669
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !6671
  %21 = load i32, i32* %20, align 4, !dbg !6671
  br i1 %19, label %27, label %22, !dbg !6672

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !6673
  %24 = icmp eq i32 %23, 0, !dbg !6676
  br i1 %24, label %25, label %31, !dbg !6677

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !6678
  br label %29, !dbg !6680

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !6681
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !6671
  br label %31, !dbg !6683

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #25, !dbg !6683
  br label %32, !dbg !6684

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #24, !dbg !6684
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #24, !dbg !6684
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #24, !dbg !6684
  ret void, !dbg !6684
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #4 !dbg !6685 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6690, metadata !DIExpression()), !dbg !6696
  call void @llvm.dbg.value(metadata i32 %1, metadata !6691, metadata !DIExpression()), !dbg !6696
  call void @llvm.dbg.value(metadata i32 %2, metadata !6692, metadata !DIExpression()), !dbg !6696
  call void @llvm.dbg.value(metadata i8* %3, metadata !6693, metadata !DIExpression()), !dbg !6696
  call void @llvm.dbg.value(metadata i8 0, metadata !6694, metadata !DIExpression()), !dbg !6696
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !6695, metadata !DIExpression()), !dbg !6696
  store i8 0, i8* %3, align 1, !dbg !6697
  %5 = icmp ult i32 %2, -16777216, !dbg !6698
  %6 = and i32 %2, 12
  %7 = icmp eq i32 %6, 8
  %8 = or i1 %5, %7, !dbg !6700
  br i1 %8, label %16, label %9, !dbg !6700

9:                                                ; preds = %4
  %10 = and i32 %2, 8, !dbg !6701
  %11 = icmp eq i32 %10, 0, !dbg !6701
  br i1 %11, label %12, label %13, !dbg !6703

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %0, metadata !6695, metadata !DIExpression()), !dbg !6696
  store i8 1, i8* %3, align 1, !dbg !6706
  br label %13

13:                                               ; preds = %9, %12
  %14 = phi i32 [ %0, %12 ], [ %1, %9 ]
  %15 = inttoptr i32 %14 to %struct.__esf*, !dbg !6696
  call void @llvm.dbg.value(metadata %struct.__esf* %15, metadata !6695, metadata !DIExpression()), !dbg !6696
  br label %16, !dbg !6709

16:                                               ; preds = %4, %13
  %17 = phi %struct.__esf* [ %15, %13 ], [ null, %4 ], !dbg !6696
  ret %struct.__esf* %17, !dbg !6710
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !6711 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6715, metadata !DIExpression()), !dbg !6719
  call void @llvm.dbg.value(metadata i32 %1, metadata !6716, metadata !DIExpression()), !dbg !6719
  call void @llvm.dbg.value(metadata i8* %2, metadata !6717, metadata !DIExpression()), !dbg !6719
  call void @llvm.dbg.value(metadata i32 0, metadata !6718, metadata !DIExpression()), !dbg !6719
  store i8 0, i8* %2, align 1, !dbg !6720
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !6721

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #26, !dbg !6722
  call void @llvm.dbg.value(metadata i32 %5, metadata !6718, metadata !DIExpression()), !dbg !6719
  br label %11, !dbg !6724

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !6725
  call void @llvm.dbg.value(metadata i32 %7, metadata !6718, metadata !DIExpression()), !dbg !6719
  br label %11, !dbg !6726

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !6727
  call void @llvm.dbg.value(metadata i32 0, metadata !6718, metadata !DIExpression()), !dbg !6719
  br label %11, !dbg !6728

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #26, !dbg !6729
  call void @llvm.dbg.value(metadata i32 0, metadata !6718, metadata !DIExpression()), !dbg !6719
  br label %11, !dbg !6730

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #26, !dbg !6731
  br label %11, !dbg !6732

11:                                               ; preds = %4, %6, %8, %9, %10, %3
  %12 = phi i32 [ 0, %3 ], [ %5, %4 ], [ %7, %6 ], [ 0, %8 ], [ 0, %9 ], [ 0, %10 ]
  ret i32 %12, !dbg !6733
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6734 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6738, metadata !DIExpression()), !dbg !6741
  call void @llvm.dbg.value(metadata i8* %1, metadata !6739, metadata !DIExpression()), !dbg !6741
  call void @llvm.dbg.value(metadata i32 0, metadata !6740, metadata !DIExpression()), !dbg !6741
  store i8 0, i8* %1, align 1, !dbg !6742
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6743
  %4 = and i32 %3, 2, !dbg !6745
  %5 = icmp eq i32 %4, 0, !dbg !6746
  br i1 %5, label %6, label %33, !dbg !6747

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6748
  %8 = icmp sgt i32 %7, -1, !dbg !6750
  br i1 %8, label %9, label %33, !dbg !6751

9:                                                ; preds = %6
  %10 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6752
  %11 = and i32 %10, 1073741824, !dbg !6754
  %12 = icmp eq i32 %11, 0, !dbg !6755
  br i1 %12, label %33, label %13, !dbg !6756

13:                                               ; preds = %9
  %14 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #26, !dbg !6757
  br i1 %14, label %15, label %18, !dbg !6760

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6761
  %17 = load i32, i32* %16, align 4, !dbg !6761
  call void @llvm.dbg.value(metadata i32 %17, metadata !6740, metadata !DIExpression()), !dbg !6741
  br label %33, !dbg !6763

18:                                               ; preds = %13
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6764
  %20 = and i32 %19, 255, !dbg !6766
  %21 = icmp eq i32 %20, 0, !dbg !6767
  br i1 %21, label %24, label %22, !dbg !6768

22:                                               ; preds = %18
  %23 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !6769
  call void @llvm.dbg.value(metadata i32 %23, metadata !6740, metadata !DIExpression()), !dbg !6741
  br label %33, !dbg !6771

24:                                               ; preds = %18
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6772
  %26 = and i32 %25, 65280, !dbg !6774
  %27 = icmp eq i32 %26, 0, !dbg !6775
  br i1 %27, label %29, label %28, !dbg !6776

28:                                               ; preds = %24
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !6777
  call void @llvm.dbg.value(metadata i32 0, metadata !6740, metadata !DIExpression()), !dbg !6741
  br label %33, !dbg !6779

29:                                               ; preds = %24
  %30 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6780
  %31 = icmp ult i32 %30, 65536, !dbg !6782
  br i1 %31, label %33, label %32, !dbg !6783

32:                                               ; preds = %29
  tail call fastcc void @usage_fault() #26, !dbg !6784
  call void @llvm.dbg.value(metadata i32 0, metadata !6740, metadata !DIExpression()), !dbg !6741
  br label %33, !dbg !6786

33:                                               ; preds = %6, %9, %15, %28, %29, %32, %22, %2
  %34 = phi i32 [ 0, %2 ], [ 0, %6 ], [ %17, %15 ], [ %23, %22 ], [ 0, %28 ], [ 0, %32 ], [ 0, %29 ], [ 0, %9 ], !dbg !6741
  call void @llvm.dbg.value(metadata i32 %34, metadata !6740, metadata !DIExpression()), !dbg !6741
  ret i32 %34, !dbg !6787
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !6788 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6790, metadata !DIExpression()), !dbg !6803
  call void @llvm.dbg.value(metadata i32 %1, metadata !6791, metadata !DIExpression()), !dbg !6803
  call void @llvm.dbg.value(metadata i8* %2, metadata !6792, metadata !DIExpression()), !dbg !6803
  call void @llvm.dbg.value(metadata i32 0, metadata !6793, metadata !DIExpression()), !dbg !6803
  call void @llvm.dbg.value(metadata i32 -22, metadata !6794, metadata !DIExpression()), !dbg !6803
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6804
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6806
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6808
  %7 = and i32 %6, 2, !dbg !6809
  %8 = icmp eq i32 %7, 0, !dbg !6810
  br i1 %8, label %19, label %9, !dbg !6811

9:                                                ; preds = %3
  %10 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !6812
  call void @llvm.dbg.value(metadata i32 %10, metadata !6795, metadata !DIExpression()), !dbg !6813
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6814
  %12 = and i32 %11, 128, !dbg !6816
  %13 = icmp eq i32 %12, 0, !dbg !6817
  br i1 %13, label %19, label %14, !dbg !6818

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !6794, metadata !DIExpression()), !dbg !6803
  %15 = icmp eq i32 %1, 0, !dbg !6819
  br i1 %15, label %19, label %16, !dbg !6822

16:                                               ; preds = %14
  %17 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6823
  %18 = and i32 %17, -129, !dbg !6823
  store volatile i32 %18, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6823
  br label %19, !dbg !6825

19:                                               ; preds = %9, %16, %14, %3
  %20 = phi i32 [ -22, %3 ], [ %10, %16 ], [ %10, %14 ], [ -22, %9 ], !dbg !6803
  call void @llvm.dbg.value(metadata i32 %20, metadata !6794, metadata !DIExpression()), !dbg !6803
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6826
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6828
  %23 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6830
  %24 = and i32 %23, 16, !dbg !6831
  %25 = icmp eq i32 %24, 0, !dbg !6831
  br i1 %25, label %26, label %30, !dbg !6832

26:                                               ; preds = %19
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6833
  %28 = and i32 %27, 2, !dbg !6834
  %29 = icmp eq i32 %28, 0, !dbg !6834
  br i1 %29, label %39, label %30, !dbg !6835

30:                                               ; preds = %26, %19
  %31 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6836
  %32 = and i32 %31, 2048, !dbg !6837
  %33 = icmp eq i32 %32, 0, !dbg !6837
  br i1 %33, label %39, label %34, !dbg !6838

34:                                               ; preds = %30
  %35 = ptrtoint %struct.__esf* %0 to i32, !dbg !6839
  %36 = tail call i32 @z_check_thread_stack_fail(i32 noundef %20, i32 noundef %35) #25, !dbg !6840
  call void @llvm.dbg.value(metadata i32 %36, metadata !6798, metadata !DIExpression()), !dbg !6841
  %37 = icmp eq i32 %36, 0, !dbg !6842
  br i1 %37, label %39, label %38, !dbg !6844

38:                                               ; preds = %34
  call void @llvm.dbg.value(metadata i32 %36, metadata !6845, metadata !DIExpression()) #24, !dbg !6848
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %36) #24, !dbg !6851, !srcloc !6852
  call void @llvm.dbg.value(metadata i32 2, metadata !6793, metadata !DIExpression()), !dbg !6803
  br label %39, !dbg !6853

39:                                               ; preds = %38, %34, %30, %26
  %40 = phi i32 [ 0, %30 ], [ 0, %26 ], [ 2, %38 ], [ 0, %34 ], !dbg !6803
  call void @llvm.dbg.value(metadata i32 %40, metadata !6793, metadata !DIExpression()), !dbg !6803
  %41 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6854
  %42 = and i32 %41, 32, !dbg !6856
  %43 = icmp eq i32 %42, 0, !dbg !6857
  br i1 %43, label %47, label %44, !dbg !6858

44:                                               ; preds = %39
  %45 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6859
  %46 = and i32 %45, -8193, !dbg !6859
  store volatile i32 %46, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6859
  br label %47, !dbg !6861

47:                                               ; preds = %44, %39
  %48 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6862
  %49 = or i32 %48, 255, !dbg !6862
  store volatile i32 %49, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6862
  store i8 0, i8* %2, align 1, !dbg !6863
  ret i32 %40, !dbg !6864
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !6865 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6869, metadata !DIExpression()), !dbg !6876
  call void @llvm.dbg.value(metadata i32 %0, metadata !6870, metadata !DIExpression()), !dbg !6876
  call void @llvm.dbg.value(metadata i8* %1, metadata !6871, metadata !DIExpression()), !dbg !6876
  call void @llvm.dbg.value(metadata i32 0, metadata !6872, metadata !DIExpression()), !dbg !6876
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6877
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6879
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6881
  %6 = and i32 %5, 512, !dbg !6882
  %7 = icmp eq i32 %6, 0, !dbg !6882
  br i1 %7, label %18, label %8, !dbg !6883

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !6884
  call void @llvm.dbg.value(metadata i32 %9, metadata !6873, metadata !DIExpression()), !dbg !6885
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6886
  %11 = and i32 %10, 32768, !dbg !6888
  %12 = icmp ne i32 %11, 0, !dbg !6889
  %13 = icmp ne i32 %0, 0
  %14 = and i1 %13, %12, !dbg !6890
  br i1 %14, label %15, label %18, !dbg !6890

15:                                               ; preds = %8
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6891
  %17 = and i32 %16, -32769, !dbg !6891
  store volatile i32 %17, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6891
  br label %18, !dbg !6895

18:                                               ; preds = %8, %15, %2
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6896
  %20 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6898
  %21 = and i32 %20, 256, !dbg !6900
  %22 = icmp eq i32 %21, 0, !dbg !6901
  br i1 %22, label %23, label %25, !dbg !6902

23:                                               ; preds = %18
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6903
  br label %25

25:                                               ; preds = %18, %23
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6905
  %27 = or i32 %26, 65280, !dbg !6905
  store volatile i32 %27, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6905
  store i8 0, i8* %1, align 1, !dbg !6906
  ret void, !dbg !6907
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #15 !dbg !6908 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6914, metadata !DIExpression()), !dbg !6916
  call void @llvm.dbg.value(metadata i32 0, metadata !6915, metadata !DIExpression()), !dbg !6916
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6917
  %2 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6919
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6921
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6923
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6925
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6927
  %7 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6929
  %8 = or i32 %7, -65536, !dbg !6929
  store volatile i32 %8, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6929
  ret void, !dbg !6930
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !6931 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6935, metadata !DIExpression()), !dbg !6937
  call void @llvm.dbg.value(metadata i8* %0, metadata !6936, metadata !DIExpression()), !dbg !6937
  store i8 0, i8* %0, align 1, !dbg !6938
  ret void, !dbg !6939
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6940 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6944, metadata !DIExpression()), !dbg !6947
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !6948
  %3 = load i32, i32* %2, align 4, !dbg !6948
  %4 = inttoptr i32 %3 to i16*, !dbg !6949
  call void @llvm.dbg.value(metadata i16* %4, metadata !6945, metadata !DIExpression()), !dbg !6947
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6950
  %6 = or i32 %5, 256, !dbg !6950
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6950
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !6951, !srcloc !6954
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !6955, !srcloc !6958
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !6959
  %8 = load i16, i16* %7, align 2, !dbg !6960
  call void @llvm.dbg.value(metadata i16 %8, metadata !6946, metadata !DIExpression()), !dbg !6947
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6961
  %10 = and i32 %9, -257, !dbg !6961
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6961
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !6962, !srcloc !6954
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !6964, !srcloc !6958
  %11 = icmp eq i16 %8, -8446, !dbg !6966
  ret i1 %11, !dbg !6968
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #15 !dbg !6969 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6970
  %2 = or i32 %1, 16, !dbg !6970
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6970
  ret void, !dbg !6971
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #15 !dbg !6972 {
  call void @llvm.dbg.value(metadata i32 0, metadata !6975, metadata !DIExpression()), !dbg !6976
  br label %1, !dbg !6977

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !6975, metadata !DIExpression()), !dbg !6976
  tail call fastcc void @__NVIC_SetPriority.34(i32 noundef %2) #26, !dbg !6979
  %3 = add nuw nsw i32 %2, 1, !dbg !6982
  call void @llvm.dbg.value(metadata i32 %3, metadata !6975, metadata !DIExpression()), !dbg !6976
  %4 = icmp eq i32 %3, 85, !dbg !6983
  br i1 %4, label %5, label %1, !dbg !6977, !llvm.loop !6984

5:                                                ; preds = %1
  ret void, !dbg !6986
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.34(i32 noundef %0) unnamed_addr #15 !dbg !6987 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6989, metadata !DIExpression()), !dbg !6991
  call void @llvm.dbg.value(metadata i32 1, metadata !6990, metadata !DIExpression()), !dbg !6991
  %2 = and i32 %0, 15, !dbg !6992
  %3 = add nsw i32 %2, -4, !dbg !6992
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !6992
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6992
  %6 = icmp slt i32 %0, 0, !dbg !6992
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !6992
  store volatile i8 16, i8* %7, align 1, !dbg !6993
  ret void, !dbg !6995
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !6996 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7102, metadata !DIExpression()), !dbg !7103
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7104
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !7106
  br i1 %3, label %4, label %12, !dbg !7107

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !7108, !srcloc !7120
  call void @llvm.dbg.value(metadata i32 %5, metadata !7111, metadata !DIExpression()) #24, !dbg !7121
  %6 = icmp eq i32 %5, 0, !dbg !7122
  br i1 %6, label %12, label %7, !dbg !7123

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7124
  %9 = or i32 %8, 268435456, !dbg !7124
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7124
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7126
  %11 = and i32 %10, -32769, !dbg !7126
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7126
  br label %12, !dbg !7127

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !7128
  ret void, !dbg !7129
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !7130 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #25, !dbg !7131
  ret void, !dbg !7132
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !257 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !375, metadata !DIExpression()), !dbg !7133
  call void @llvm.dbg.value(metadata i8 0, metadata !376, metadata !DIExpression()), !dbg !7133
  call void @llvm.dbg.value(metadata i32 64, metadata !378, metadata !DIExpression()), !dbg !7133
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !7134
  %3 = load i32, i32* %2, align 4, !dbg !7134
  %4 = add i32 %3, -64, !dbg !7136
  call void @llvm.dbg.value(metadata i32 %4, metadata !377, metadata !DIExpression()), !dbg !7133
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !7137
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !7138
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !7139
  call void @llvm.dbg.value(metadata i8 1, metadata !376, metadata !DIExpression()), !dbg !7133
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #25, !dbg !7140
  ret void, !dbg !7141
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !7142 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7143
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !7144, !srcloc !7147
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !7148, !srcloc !7151
  ret void, !dbg !7152
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !7153 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #24, !dbg !7154, !srcloc !7157
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7158
  ret void, !dbg !7159
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #17 !dbg !7160 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7175, metadata !DIExpression()), !dbg !7179
  call void @llvm.dbg.value(metadata i8 %1, metadata !7176, metadata !DIExpression()), !dbg !7179
  call void @llvm.dbg.value(metadata i32 %2, metadata !7177, metadata !DIExpression()), !dbg !7179
  call void @llvm.dbg.value(metadata i32 %3, metadata !7178, metadata !DIExpression()), !dbg !7179
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !7180
  ret void, !dbg !7182
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #17 !dbg !7183 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7188, metadata !DIExpression()), !dbg !7193
  call void @llvm.dbg.value(metadata i8 %1, metadata !7189, metadata !DIExpression()), !dbg !7193
  call void @llvm.dbg.value(metadata i32 undef, metadata !7190, metadata !DIExpression()), !dbg !7193
  call void @llvm.dbg.value(metadata i32 undef, metadata !7191, metadata !DIExpression()), !dbg !7193
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7194
  call void @llvm.dbg.value(metadata i8 %3, metadata !7192, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7193
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #26, !dbg !7195
  call void @llvm.dbg.value(metadata i32 %4, metadata !7192, metadata !DIExpression()), !dbg !7193
  %5 = trunc i32 %4 to i8, !dbg !7196
  store i8 %5, i8* @static_regions_num, align 1, !dbg !7197
  ret void, !dbg !7198
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #17 !dbg !7199 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7203, metadata !DIExpression()), !dbg !7209
  call void @llvm.dbg.value(metadata i8 %1, metadata !7204, metadata !DIExpression()), !dbg !7209
  call void @llvm.dbg.value(metadata i8 %2, metadata !7205, metadata !DIExpression()), !dbg !7209
  call void @llvm.dbg.value(metadata i1 %3, metadata !7206, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7209
  %5 = zext i8 %2 to i32, !dbg !7210
  call void @llvm.dbg.value(metadata i32 %5, metadata !7208, metadata !DIExpression()), !dbg !7209
  call void @llvm.dbg.value(metadata i32 0, metadata !7207, metadata !DIExpression()), !dbg !7209
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !7208, metadata !DIExpression()), !dbg !7209
  call void @llvm.dbg.value(metadata i32 0, metadata !7207, metadata !DIExpression()), !dbg !7209
  %7 = icmp eq i8 %1, 0, !dbg !7211
  br i1 %7, label %29, label %8, !dbg !7214

8:                                                ; preds = %4, %25
  %9 = phi i32 [ %26, %25 ], [ %5, %4 ]
  %10 = phi i32 [ %27, %25 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7208, metadata !DIExpression()), !dbg !7209
  call void @llvm.dbg.value(metadata i32 %10, metadata !7207, metadata !DIExpression()), !dbg !7209
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !7215
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !7218
  %13 = load i32, i32* %12, align 4, !dbg !7218
  %14 = icmp eq i32 %13, 0, !dbg !7219
  br i1 %14, label %25, label %15, !dbg !7220

15:                                               ; preds = %8
  br i1 %3, label %16, label %19, !dbg !7221

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !7223
  %18 = icmp eq i32 %17, 0, !dbg !7223
  br i1 %18, label %29, label %19, !dbg !7224

19:                                               ; preds = %16, %15
  %20 = trunc i32 %9 to i8, !dbg !7225
  %21 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %20, %struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !7226
  call void @llvm.dbg.value(metadata i32 %21, metadata !7208, metadata !DIExpression()), !dbg !7209
  %22 = icmp eq i32 %21, -22, !dbg !7227
  br i1 %22, label %29, label %23, !dbg !7229

23:                                               ; preds = %19
  %24 = add nsw i32 %21, 1, !dbg !7230
  call void @llvm.dbg.value(metadata i32 %24, metadata !7208, metadata !DIExpression()), !dbg !7209
  br label %25, !dbg !7231

25:                                               ; preds = %8, %23
  %26 = phi i32 [ %9, %8 ], [ %24, %23 ], !dbg !7209
  call void @llvm.dbg.value(metadata i32 %26, metadata !7208, metadata !DIExpression()), !dbg !7209
  %27 = add nuw nsw i32 %10, 1, !dbg !7232
  call void @llvm.dbg.value(metadata i32 %27, metadata !7207, metadata !DIExpression()), !dbg !7209
  %28 = icmp eq i32 %27, %6, !dbg !7211
  br i1 %28, label %29, label %8, !dbg !7214, !llvm.loop !7233

29:                                               ; preds = %16, %19, %25, %4
  %30 = phi i32 [ %5, %4 ], [ %26, %25 ], [ -22, %19 ], [ -22, %16 ], !dbg !7209
  ret i32 %30, !dbg !7235
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #18 !dbg !7236 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7240, metadata !DIExpression()), !dbg !7242
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !7243
  %3 = load i32, i32* %2, align 4, !dbg !7243
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !7244, !range !3508
  %5 = icmp ult i32 %4, 2, !dbg !7244
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !7245
  br i1 %7, label %8, label %15, !dbg !7245

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !7246
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !7247
  %11 = load i32, i32* %10, align 4, !dbg !7247
  %12 = and i32 %11, %9, !dbg !7248
  %13 = icmp eq i32 %12, 0, !dbg !7249
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !7241, metadata !DIExpression()), !dbg !7242
  ret i32 %16, !dbg !7250
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #17 !dbg !7251 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !7255, metadata !DIExpression()), !dbg !7258
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !7256, metadata !DIExpression()), !dbg !7258
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !7259
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #24, !dbg !7259
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !7257, metadata !DIExpression()), !dbg !7260
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !7261
  %6 = load i32, i32* %5, align 4, !dbg !7261
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !7262
  store i32 %6, i32* %7, align 4, !dbg !7263
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !7264
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !7265
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !7266
  %11 = load i32, i32* %10, align 4, !dbg !7266
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* noundef nonnull %8, %struct.z_heap_bucket* noundef nonnull %9, i32 noundef %11) #26, !dbg !7267
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #26, !dbg !7268
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #24, !dbg !7269
  ret i32 %12, !dbg !7270
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* nocapture noundef writeonly %0, %struct.z_heap_bucket* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #10 !dbg !7271 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !7278, metadata !DIExpression()), !dbg !7282
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !7279, metadata !DIExpression()), !dbg !7282
  call void @llvm.dbg.value(metadata i32 undef, metadata !7280, metadata !DIExpression()), !dbg !7282
  call void @llvm.dbg.value(metadata i32 %2, metadata !7281, metadata !DIExpression()), !dbg !7282
  %4 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %1, i32 0, i32 0, !dbg !7283
  %5 = load i32, i32* %4, align 4, !dbg !7283
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #26, !dbg !7284
  %7 = or i32 %6, %5, !dbg !7285
  %8 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !7286
  store i32 %7, i32* %8, align 4, !dbg !7287
  ret void, !dbg !7288
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !7289 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7293, metadata !DIExpression()), !dbg !7295
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7294, metadata !DIExpression()), !dbg !7295
  %3 = zext i8 %0 to i32, !dbg !7296
  %4 = icmp ugt i8 %0, 7, !dbg !7298
  br i1 %4, label %6, label %5, !dbg !7299

5:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #26, !dbg !7300
  br label %6, !dbg !7301

6:                                                ; preds = %2, %5
  %7 = phi i32 [ %3, %5 ], [ -22, %2 ], !dbg !7295
  ret i32 %7, !dbg !7302
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !7303 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7307, metadata !DIExpression()), !dbg !7309
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7308, metadata !DIExpression()), !dbg !7309
  tail call fastcc void @set_region_number(i32 noundef %0) #26, !dbg !7310
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !7311
  %4 = load i32, i32* %3, align 4, !dbg !7311
  %5 = and i32 %4, -32, !dbg !7312
  %6 = or i32 %5, %0, !dbg !7313
  %7 = or i32 %6, 16, !dbg !7313
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7314
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !7315
  %9 = load i32, i32* %8, align 4, !dbg !7315
  %10 = or i32 %9, 1, !dbg !7316
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7317
  ret void, !dbg !7318
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #15 !dbg !7319 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7322, metadata !DIExpression()), !dbg !7323
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7324
  ret void, !dbg !7325
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #9 !dbg !7326 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7330, metadata !DIExpression()), !dbg !7331
  %2 = icmp ult i32 %0, 33, !dbg !7332
  br i1 %2, label %11, label %3, !dbg !7334

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !7335
  br i1 %4, label %11, label %5, !dbg !7337

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !7338
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !7339, !range !3508
  %8 = mul nsw i32 %7, -2, !dbg !7340
  %9 = add nsw i32 %8, 62, !dbg !7340
  %10 = and i32 %9, 62, !dbg !7341
  br label %11, !dbg !7342

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !7331
  ret i32 %12, !dbg !7343
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #17 !dbg !7344 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7348, metadata !DIExpression()), !dbg !7350
  call void @llvm.dbg.value(metadata i8 %1, metadata !7349, metadata !DIExpression()), !dbg !7350
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !7351
  ret void, !dbg !7353
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #17 !dbg !7354 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7358, metadata !DIExpression()), !dbg !7365
  call void @llvm.dbg.value(metadata i8 %1, metadata !7359, metadata !DIExpression()), !dbg !7365
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7366
  call void @llvm.dbg.value(metadata i8 %3, metadata !7360, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7365
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #26, !dbg !7367
  call void @llvm.dbg.value(metadata i32 %4, metadata !7360, metadata !DIExpression()), !dbg !7365
  %5 = icmp ne i32 %4, -22, !dbg !7368
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !7369
  call void @llvm.dbg.value(metadata i32 %4, metadata !7361, metadata !DIExpression()), !dbg !7370
  br i1 %7, label %8, label %12, !dbg !7369

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7361, metadata !DIExpression()), !dbg !7370
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #26, !dbg !7371
  %10 = add i32 %9, 1, !dbg !7374
  call void @llvm.dbg.value(metadata i32 %10, metadata !7361, metadata !DIExpression()), !dbg !7370
  %11 = icmp eq i32 %10, 8, !dbg !7375
  br i1 %11, label %12, label %8, !dbg !7376, !llvm.loop !7377

12:                                               ; preds = %8, %2
  ret void, !dbg !7379
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #15 !dbg !7380 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7383, metadata !DIExpression()), !dbg !7384
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7385
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7386
  ret void, !dbg !7387
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !7388 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !7393
  %2 = icmp ugt i32 %1, 8, !dbg !7395
  br i1 %2, label %14, label %3, !dbg !7396

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #26, !dbg !7397
  call void @llvm.dbg.value(metadata i32 0, metadata !7392, metadata !DIExpression()), !dbg !7398
  %4 = icmp eq i32 %1, 0, !dbg !7399
  br i1 %4, label %12, label %5, !dbg !7402

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !7402

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7392, metadata !DIExpression()), !dbg !7398
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !7403
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #26, !dbg !7405
  %10 = add nuw i32 %8, 1, !dbg !7406
  call void @llvm.dbg.value(metadata i32 %10, metadata !7392, metadata !DIExpression()), !dbg !7398
  %11 = icmp eq i32 %10, %1, !dbg !7399
  br i1 %11, label %12, label %7, !dbg !7402, !llvm.loop !7407

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !7409
  store i8 %13, i8* @static_regions_num, align 1, !dbg !7410
  tail call void @arm_core_mpu_enable() #26, !dbg !7411
  br label %14, !dbg !7412

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !7398
  ret i32 %15, !dbg !7413
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !7414 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7421, metadata !DIExpression()), !dbg !7424
  call void @llvm.dbg.value(metadata i8* %1, metadata !7422, metadata !DIExpression()), !dbg !7424
  call void @llvm.dbg.value(metadata i8* %0, metadata !7423, metadata !DIExpression()), !dbg !7424
  %3 = load i8, i8* %1, align 1, !dbg !7425
  %4 = icmp eq i8 %3, 0, !dbg !7426
  br i1 %4, label %13, label %5, !dbg !7427

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !7421, metadata !DIExpression()), !dbg !7424
  call void @llvm.dbg.value(metadata i8* %8, metadata !7422, metadata !DIExpression()), !dbg !7424
  store i8 %6, i8* %7, align 1, !dbg !7428
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7430
  call void @llvm.dbg.value(metadata i8* %9, metadata !7421, metadata !DIExpression()), !dbg !7424
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7431
  call void @llvm.dbg.value(metadata i8* %10, metadata !7422, metadata !DIExpression()), !dbg !7424
  %11 = load i8, i8* %10, align 1, !dbg !7425
  %12 = icmp eq i8 %11, 0, !dbg !7426
  br i1 %12, label %13, label %5, !dbg !7427, !llvm.loop !7432

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !7434
  ret i8* %0, !dbg !7435
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7436 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7440, metadata !DIExpression()), !dbg !7444
  call void @llvm.dbg.value(metadata i8* %1, metadata !7441, metadata !DIExpression()), !dbg !7444
  call void @llvm.dbg.value(metadata i32 %2, metadata !7442, metadata !DIExpression()), !dbg !7444
  call void @llvm.dbg.value(metadata i8* %0, metadata !7443, metadata !DIExpression()), !dbg !7444
  %4 = icmp eq i32 %2, 0, !dbg !7445
  br i1 %4, label %22, label %5, !dbg !7446

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7440, metadata !DIExpression()), !dbg !7444
  call void @llvm.dbg.value(metadata i32 %7, metadata !7442, metadata !DIExpression()), !dbg !7444
  call void @llvm.dbg.value(metadata i8* %8, metadata !7441, metadata !DIExpression()), !dbg !7444
  %9 = load i8, i8* %8, align 1, !dbg !7447
  %10 = icmp eq i8 %9, 0, !dbg !7448
  br i1 %10, label %16, label %11, !dbg !7449

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !7450
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7452
  call void @llvm.dbg.value(metadata i8* %12, metadata !7441, metadata !DIExpression()), !dbg !7444
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7453
  call void @llvm.dbg.value(metadata i8* %13, metadata !7440, metadata !DIExpression()), !dbg !7444
  %14 = add i32 %7, -1, !dbg !7454
  call void @llvm.dbg.value(metadata i32 %14, metadata !7442, metadata !DIExpression()), !dbg !7444
  %15 = icmp eq i32 %14, 0, !dbg !7445
  br i1 %15, label %22, label %5, !dbg !7446, !llvm.loop !7455

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !7440, metadata !DIExpression()), !dbg !7444
  call void @llvm.dbg.value(metadata i32 %18, metadata !7442, metadata !DIExpression()), !dbg !7444
  store i8 0, i8* %17, align 1, !dbg !7457
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7459
  call void @llvm.dbg.value(metadata i8* %19, metadata !7440, metadata !DIExpression()), !dbg !7444
  %20 = add i32 %18, -1, !dbg !7460
  call void @llvm.dbg.value(metadata i32 %20, metadata !7442, metadata !DIExpression()), !dbg !7444
  %21 = icmp eq i32 %20, 0, !dbg !7461
  br i1 %21, label %22, label %16, !dbg !7462, !llvm.loop !7463

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !7465
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7466 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7470, metadata !DIExpression()), !dbg !7473
  call void @llvm.dbg.value(metadata i32 %1, metadata !7471, metadata !DIExpression()), !dbg !7473
  call void @llvm.dbg.value(metadata i32 %1, metadata !7472, metadata !DIExpression()), !dbg !7473
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7474

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !7470, metadata !DIExpression()), !dbg !7473
  %6 = load i8, i8* %5, align 1, !dbg !7475
  %7 = icmp eq i8 %6, %3, !dbg !7476
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !7477
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7478
  call void @llvm.dbg.value(metadata i8* %10, metadata !7470, metadata !DIExpression()), !dbg !7473
  br i1 %9, label %11, label %4, !dbg !7477, !llvm.loop !7480

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !7482
  ret i8* %12, !dbg !7483
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7484 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7486, metadata !DIExpression()), !dbg !7489
  call void @llvm.dbg.value(metadata i32 %1, metadata !7487, metadata !DIExpression()), !dbg !7489
  call void @llvm.dbg.value(metadata i8* null, metadata !7488, metadata !DIExpression()), !dbg !7489
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7490

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !7489
  call void @llvm.dbg.value(metadata i8* %6, metadata !7488, metadata !DIExpression()), !dbg !7489
  call void @llvm.dbg.value(metadata i8* %5, metadata !7486, metadata !DIExpression()), !dbg !7489
  %7 = load i8, i8* %5, align 1, !dbg !7491
  %8 = icmp eq i8 %7, %3, !dbg !7494
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !7495
  call void @llvm.dbg.value(metadata i8* %9, metadata !7488, metadata !DIExpression()), !dbg !7489
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7496
  call void @llvm.dbg.value(metadata i8* %10, metadata !7486, metadata !DIExpression()), !dbg !7489
  %11 = icmp eq i8 %7, 0, !dbg !7497
  br i1 %11, label %12, label %4, !dbg !7497, !llvm.loop !7498

12:                                               ; preds = %4
  ret i8* %9, !dbg !7500
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #19 !dbg !7501 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7505, metadata !DIExpression()), !dbg !7507
  call void @llvm.dbg.value(metadata i32 0, metadata !7506, metadata !DIExpression()), !dbg !7507
  %2 = load i8, i8* %0, align 1, !dbg !7508
  %3 = icmp eq i8 %2, 0, !dbg !7509
  br i1 %3, label %11, label %4, !dbg !7510

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7506, metadata !DIExpression()), !dbg !7507
  call void @llvm.dbg.value(metadata i8* %6, metadata !7505, metadata !DIExpression()), !dbg !7507
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7511
  call void @llvm.dbg.value(metadata i8* %7, metadata !7505, metadata !DIExpression()), !dbg !7507
  %8 = add i32 %5, 1, !dbg !7513
  call void @llvm.dbg.value(metadata i32 %8, metadata !7506, metadata !DIExpression()), !dbg !7507
  %9 = load i8, i8* %7, align 1, !dbg !7508
  %10 = icmp eq i8 %9, 0, !dbg !7509
  br i1 %10, label %11, label %4, !dbg !7510, !llvm.loop !7514

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !7507
  ret i32 %12, !dbg !7516
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7517 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7521, metadata !DIExpression()), !dbg !7524
  call void @llvm.dbg.value(metadata i32 %1, metadata !7522, metadata !DIExpression()), !dbg !7524
  call void @llvm.dbg.value(metadata i32 0, metadata !7523, metadata !DIExpression()), !dbg !7524
  %3 = load i8, i8* %0, align 1, !dbg !7525
  %4 = icmp ne i8 %3, 0, !dbg !7526
  %5 = icmp ne i32 %1, 0, !dbg !7527
  %6 = and i1 %4, %5, !dbg !7527
  br i1 %6, label %7, label %16, !dbg !7528

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7523, metadata !DIExpression()), !dbg !7524
  call void @llvm.dbg.value(metadata i8* %9, metadata !7521, metadata !DIExpression()), !dbg !7524
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7529
  call void @llvm.dbg.value(metadata i8* %10, metadata !7521, metadata !DIExpression()), !dbg !7524
  %11 = add nuw i32 %8, 1, !dbg !7531
  call void @llvm.dbg.value(metadata i32 %11, metadata !7523, metadata !DIExpression()), !dbg !7524
  %12 = load i8, i8* %10, align 1, !dbg !7525
  %13 = icmp ne i8 %12, 0, !dbg !7526
  %14 = icmp ult i32 %11, %1, !dbg !7527
  %15 = select i1 %13, i1 %14, i1 false, !dbg !7527
  br i1 %15, label %7, label %16, !dbg !7528, !llvm.loop !7532

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !7524
  ret i32 %17, !dbg !7534
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #19 !dbg !7535 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7539, metadata !DIExpression()), !dbg !7541
  call void @llvm.dbg.value(metadata i8* %1, metadata !7540, metadata !DIExpression()), !dbg !7541
  %3 = load i8, i8* %0, align 1, !dbg !7542
  %4 = load i8, i8* %1, align 1, !dbg !7543
  %5 = icmp ne i8 %3, %4, !dbg !7544
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !7545
  br i1 %7, label %18, label %8, !dbg !7545

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7540, metadata !DIExpression()), !dbg !7541
  call void @llvm.dbg.value(metadata i8* %10, metadata !7539, metadata !DIExpression()), !dbg !7541
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7546
  call void @llvm.dbg.value(metadata i8* %11, metadata !7539, metadata !DIExpression()), !dbg !7541
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7548
  call void @llvm.dbg.value(metadata i8* %12, metadata !7540, metadata !DIExpression()), !dbg !7541
  %13 = load i8, i8* %11, align 1, !dbg !7542
  %14 = load i8, i8* %12, align 1, !dbg !7543
  %15 = icmp ne i8 %13, %14, !dbg !7544
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !7545
  br i1 %17, label %18, label %8, !dbg !7545, !llvm.loop !7549

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !7542
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !7543
  %21 = zext i8 %19 to i32, !dbg !7552
  %22 = zext i8 %20 to i32, !dbg !7553
  %23 = sub nsw i32 %21, %22, !dbg !7554
  ret i32 %23, !dbg !7555
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7556 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7560, metadata !DIExpression()), !dbg !7563
  call void @llvm.dbg.value(metadata i8* %1, metadata !7561, metadata !DIExpression()), !dbg !7563
  call void @llvm.dbg.value(metadata i32 %2, metadata !7562, metadata !DIExpression()), !dbg !7563
  %4 = icmp eq i32 %2, 0, !dbg !7564
  br i1 %4, label %23, label %5, !dbg !7564

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !7562, metadata !DIExpression()), !dbg !7563
  call void @llvm.dbg.value(metadata i8* %7, metadata !7561, metadata !DIExpression()), !dbg !7563
  call void @llvm.dbg.value(metadata i8* %8, metadata !7560, metadata !DIExpression()), !dbg !7563
  %9 = load i8, i8* %8, align 1, !dbg !7565
  %10 = load i8, i8* %7, align 1, !dbg !7566
  %11 = icmp ne i8 %9, %10, !dbg !7567
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !7568
  br i1 %13, label %19, label %14, !dbg !7568

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7569
  call void @llvm.dbg.value(metadata i8* %15, metadata !7560, metadata !DIExpression()), !dbg !7563
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7571
  call void @llvm.dbg.value(metadata i8* %16, metadata !7561, metadata !DIExpression()), !dbg !7563
  %17 = add i32 %6, -1, !dbg !7572
  call void @llvm.dbg.value(metadata i32 %17, metadata !7562, metadata !DIExpression()), !dbg !7563
  %18 = icmp eq i32 %17, 0, !dbg !7564
  br i1 %18, label %23, label %5, !dbg !7564, !llvm.loop !7573

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !7576
  %21 = zext i8 %10 to i32, !dbg !7577
  %22 = sub nsw i32 %20, %21, !dbg !7578
  br label %23, !dbg !7579

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !7579
  ret i32 %24, !dbg !7580
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #13 !dbg !7581 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7586, metadata !DIExpression()), !dbg !7591
  call void @llvm.dbg.value(metadata i8* %1, metadata !7587, metadata !DIExpression()), !dbg !7591
  call void @llvm.dbg.value(metadata i8** %2, metadata !7588, metadata !DIExpression()), !dbg !7591
  %4 = icmp eq i8* %0, null, !dbg !7592
  br i1 %4, label %5, label %7, !dbg !7592

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !7593
  br label %7, !dbg !7592

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !7592
  call void @llvm.dbg.value(metadata i8* %8, metadata !7589, metadata !DIExpression()), !dbg !7591
  %9 = load i8, i8* %8, align 1, !dbg !7594
  %10 = icmp eq i8 %9, 0, !dbg !7594
  br i1 %10, label %33, label %11, !dbg !7595

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7589, metadata !DIExpression()), !dbg !7591
  %14 = zext i8 %12 to i32, !dbg !7594
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #26, !dbg !7596
  %16 = icmp eq i8* %15, null, !dbg !7595
  br i1 %16, label %21, label %17, !dbg !7597

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7598
  call void @llvm.dbg.value(metadata i8* %18, metadata !7589, metadata !DIExpression()), !dbg !7591
  %19 = load i8, i8* %18, align 1, !dbg !7594
  %20 = icmp eq i8 %19, 0, !dbg !7594
  br i1 %20, label %33, label %11, !dbg !7595, !llvm.loop !7600

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !7590, metadata !DIExpression()), !dbg !7591
  %24 = zext i8 %22 to i32, !dbg !7602
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #26, !dbg !7603
  %26 = icmp eq i8* %25, null, !dbg !7604
  br i1 %26, label %27, label %31, !dbg !7605

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7606
  call void @llvm.dbg.value(metadata i8* %28, metadata !7590, metadata !DIExpression()), !dbg !7591
  %29 = load i8, i8* %28, align 1, !dbg !7602
  %30 = icmp eq i8 %29, 0, !dbg !7602
  br i1 %30, label %33, label %21, !dbg !7608, !llvm.loop !7609

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !7611
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7614
  br label %33, !dbg !7615

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !7591
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !7591
  store i8* %34, i8** %2, align 4, !dbg !7591
  ret i8* %35, !dbg !7616
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !7617 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7619, metadata !DIExpression()), !dbg !7621
  call void @llvm.dbg.value(metadata i8* %1, metadata !7620, metadata !DIExpression()), !dbg !7621
  %3 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !7622
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7623
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #26, !dbg !7624
  ret i8* %0, !dbg !7625
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7626 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7628, metadata !DIExpression()), !dbg !7633
  call void @llvm.dbg.value(metadata i8* %1, metadata !7629, metadata !DIExpression()), !dbg !7633
  call void @llvm.dbg.value(metadata i32 %2, metadata !7630, metadata !DIExpression()), !dbg !7633
  call void @llvm.dbg.value(metadata i8* %0, metadata !7631, metadata !DIExpression()), !dbg !7633
  %4 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !7634
  call void @llvm.dbg.value(metadata i32 %4, metadata !7632, metadata !DIExpression()), !dbg !7633
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !7635
  call void @llvm.dbg.value(metadata i8* %5, metadata !7628, metadata !DIExpression()), !dbg !7633
  call void @llvm.dbg.value(metadata i8* %1, metadata !7629, metadata !DIExpression()), !dbg !7633
  call void @llvm.dbg.value(metadata i32 %2, metadata !7630, metadata !DIExpression()), !dbg !7633
  call void @llvm.dbg.value(metadata i32 %2, metadata !7630, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7633
  %6 = icmp eq i32 %2, 0, !dbg !7636
  br i1 %6, label %18, label %7, !dbg !7637

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !7638
  call void @llvm.dbg.value(metadata i8* %9, metadata !7628, metadata !DIExpression()), !dbg !7633
  call void @llvm.dbg.value(metadata i8* %10, metadata !7629, metadata !DIExpression()), !dbg !7633
  %12 = load i8, i8* %10, align 1, !dbg !7639
  %13 = icmp eq i8 %12, 0, !dbg !7640
  br i1 %13, label %18, label %14, !dbg !7641

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7642
  call void @llvm.dbg.value(metadata i8* %15, metadata !7629, metadata !DIExpression()), !dbg !7633
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7644
  call void @llvm.dbg.value(metadata i8* %16, metadata !7628, metadata !DIExpression()), !dbg !7633
  store i8 %12, i8* %9, align 1, !dbg !7645
  call void @llvm.dbg.value(metadata i32 %11, metadata !7630, metadata !DIExpression()), !dbg !7633
  call void @llvm.dbg.value(metadata i32 %11, metadata !7630, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7633
  %17 = icmp eq i32 %11, 0, !dbg !7636
  br i1 %17, label %18, label %7, !dbg !7637, !llvm.loop !7646

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !7633
  store i8 0, i8* %19, align 1, !dbg !7648
  ret i8* %0, !dbg !7649
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7650 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7654, metadata !DIExpression()), !dbg !7659
  call void @llvm.dbg.value(metadata i8* %1, metadata !7655, metadata !DIExpression()), !dbg !7659
  call void @llvm.dbg.value(metadata i32 %2, metadata !7656, metadata !DIExpression()), !dbg !7659
  call void @llvm.dbg.value(metadata i8* %0, metadata !7657, metadata !DIExpression()), !dbg !7659
  call void @llvm.dbg.value(metadata i8* %1, metadata !7658, metadata !DIExpression()), !dbg !7659
  %4 = icmp eq i32 %2, 0, !dbg !7660
  br i1 %4, label %31, label %5, !dbg !7662

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7658, metadata !DIExpression()), !dbg !7659
  call void @llvm.dbg.value(metadata i8* %0, metadata !7657, metadata !DIExpression()), !dbg !7659
  call void @llvm.dbg.value(metadata i32 %2, metadata !7656, metadata !DIExpression()), !dbg !7659
  %6 = add i32 %2, -1, !dbg !7663
  call void @llvm.dbg.value(metadata i32 %6, metadata !7656, metadata !DIExpression()), !dbg !7659
  %7 = icmp eq i32 %6, 0, !dbg !7664
  br i1 %7, label %23, label %8, !dbg !7665

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !7666
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !7666
  br label %11, !dbg !7666

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7658, metadata !DIExpression()), !dbg !7659
  call void @llvm.dbg.value(metadata i8* %14, metadata !7657, metadata !DIExpression()), !dbg !7659
  %15 = load i8, i8* %14, align 1, !dbg !7667
  %16 = load i8, i8* %13, align 1, !dbg !7668
  %17 = icmp eq i8 %15, %16, !dbg !7669
  br i1 %17, label %18, label %23, !dbg !7666

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !7670
  call void @llvm.dbg.value(metadata i8* %19, metadata !7657, metadata !DIExpression()), !dbg !7659
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7672
  call void @llvm.dbg.value(metadata i8* %20, metadata !7658, metadata !DIExpression()), !dbg !7659
  call void @llvm.dbg.value(metadata i32 %12, metadata !7656, metadata !DIExpression()), !dbg !7659
  %21 = add i32 %12, -1, !dbg !7663
  call void @llvm.dbg.value(metadata i32 %21, metadata !7656, metadata !DIExpression()), !dbg !7659
  %22 = icmp eq i32 %21, 0, !dbg !7664
  br i1 %22, label %23, label %11, !dbg !7665, !llvm.loop !7673

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !7659
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !7659
  %26 = load i8, i8* %24, align 1, !dbg !7675
  %27 = zext i8 %26 to i32, !dbg !7675
  %28 = load i8, i8* %25, align 1, !dbg !7676
  %29 = zext i8 %28 to i32, !dbg !7676
  %30 = sub nsw i32 %27, %29, !dbg !7677
  br label %31, !dbg !7678

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !7659
  ret i32 %32, !dbg !7679
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7680 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7684, metadata !DIExpression()), !dbg !7689
  call void @llvm.dbg.value(metadata i8* %1, metadata !7685, metadata !DIExpression()), !dbg !7689
  call void @llvm.dbg.value(metadata i32 %2, metadata !7686, metadata !DIExpression()), !dbg !7689
  call void @llvm.dbg.value(metadata i8* %0, metadata !7687, metadata !DIExpression()), !dbg !7689
  call void @llvm.dbg.value(metadata i8* %1, metadata !7688, metadata !DIExpression()), !dbg !7689
  %4 = ptrtoint i8* %0 to i32, !dbg !7690
  %5 = ptrtoint i8* %1 to i32, !dbg !7690
  %6 = sub i32 %4, %5, !dbg !7690
  %7 = icmp ult i32 %6, %2, !dbg !7692
  br i1 %7, label %10, label %8, !dbg !7693

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7688, metadata !DIExpression()), !dbg !7689
  call void @llvm.dbg.value(metadata i8* %0, metadata !7687, metadata !DIExpression()), !dbg !7689
  call void @llvm.dbg.value(metadata i32 %2, metadata !7686, metadata !DIExpression()), !dbg !7689
  %9 = icmp eq i32 %2, 0, !dbg !7694
  br i1 %9, label %26, label %17, !dbg !7696

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !7686, metadata !DIExpression()), !dbg !7689
  %12 = add i32 %11, -1, !dbg !7697
  call void @llvm.dbg.value(metadata i32 %12, metadata !7686, metadata !DIExpression()), !dbg !7689
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !7700
  %14 = load i8, i8* %13, align 1, !dbg !7700
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !7701
  store i8 %14, i8* %15, align 1, !dbg !7702
  %16 = icmp eq i32 %12, 0, !dbg !7703
  br i1 %16, label %26, label %10, !dbg !7704, !llvm.loop !7705

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !7688, metadata !DIExpression()), !dbg !7689
  call void @llvm.dbg.value(metadata i8* %19, metadata !7687, metadata !DIExpression()), !dbg !7689
  call void @llvm.dbg.value(metadata i32 %20, metadata !7686, metadata !DIExpression()), !dbg !7689
  %21 = load i8, i8* %18, align 1, !dbg !7707
  store i8 %21, i8* %19, align 1, !dbg !7709
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !7710
  call void @llvm.dbg.value(metadata i8* %22, metadata !7687, metadata !DIExpression()), !dbg !7689
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !7711
  call void @llvm.dbg.value(metadata i8* %23, metadata !7688, metadata !DIExpression()), !dbg !7689
  %24 = add i32 %20, -1, !dbg !7712
  call void @llvm.dbg.value(metadata i32 %24, metadata !7686, metadata !DIExpression()), !dbg !7689
  %25 = icmp eq i32 %24, 0, !dbg !7694
  br i1 %25, label %26, label %17, !dbg !7696, !llvm.loop !7713

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !7715
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7716 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7722, metadata !DIExpression()), !dbg !7727
  call void @llvm.dbg.value(metadata i8* %1, metadata !7723, metadata !DIExpression()), !dbg !7727
  call void @llvm.dbg.value(metadata i32 %2, metadata !7724, metadata !DIExpression()), !dbg !7727
  call void @llvm.dbg.value(metadata i8* %0, metadata !7725, metadata !DIExpression()), !dbg !7727
  call void @llvm.dbg.value(metadata i8* %1, metadata !7726, metadata !DIExpression()), !dbg !7727
  %4 = icmp eq i32 %2, 0, !dbg !7728
  br i1 %4, label %14, label %5, !dbg !7729

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7726, metadata !DIExpression()), !dbg !7727
  call void @llvm.dbg.value(metadata i8* %7, metadata !7725, metadata !DIExpression()), !dbg !7727
  call void @llvm.dbg.value(metadata i32 %8, metadata !7724, metadata !DIExpression()), !dbg !7727
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7730
  call void @llvm.dbg.value(metadata i8* %9, metadata !7726, metadata !DIExpression()), !dbg !7727
  %10 = load i8, i8* %6, align 1, !dbg !7732
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7733
  call void @llvm.dbg.value(metadata i8* %11, metadata !7725, metadata !DIExpression()), !dbg !7727
  store i8 %10, i8* %7, align 1, !dbg !7734
  %12 = add i32 %8, -1, !dbg !7735
  call void @llvm.dbg.value(metadata i32 %12, metadata !7724, metadata !DIExpression()), !dbg !7727
  %13 = icmp eq i32 %12, 0, !dbg !7728
  br i1 %13, label %14, label %5, !dbg !7729, !llvm.loop !7736

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !7738
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #20 !dbg !7739 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7743, metadata !DIExpression()), !dbg !7748
  call void @llvm.dbg.value(metadata i32 %1, metadata !7744, metadata !DIExpression()), !dbg !7748
  call void @llvm.dbg.value(metadata i32 %2, metadata !7745, metadata !DIExpression()), !dbg !7748
  call void @llvm.dbg.value(metadata i8* %0, metadata !7746, metadata !DIExpression()), !dbg !7748
  %4 = trunc i32 %1 to i8, !dbg !7749
  call void @llvm.dbg.value(metadata i8 %4, metadata !7747, metadata !DIExpression()), !dbg !7748
  call void @llvm.dbg.value(metadata i32 %2, metadata !7745, metadata !DIExpression()), !dbg !7748
  call void @llvm.dbg.value(metadata i8* %0, metadata !7746, metadata !DIExpression()), !dbg !7748
  %5 = icmp eq i32 %2, 0, !dbg !7750
  br i1 %5, label %12, label %6, !dbg !7751

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !7745, metadata !DIExpression()), !dbg !7748
  call void @llvm.dbg.value(metadata i8* %8, metadata !7746, metadata !DIExpression()), !dbg !7748
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7752
  call void @llvm.dbg.value(metadata i8* %9, metadata !7746, metadata !DIExpression()), !dbg !7748
  store i8 %4, i8* %8, align 1, !dbg !7754
  %10 = add i32 %7, -1, !dbg !7755
  call void @llvm.dbg.value(metadata i32 %10, metadata !7745, metadata !DIExpression()), !dbg !7748
  %11 = icmp eq i32 %10, 0, !dbg !7750
  br i1 %11, label %12, label %6, !dbg !7751, !llvm.loop !7756

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !7758
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7759 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7763, metadata !DIExpression()), !dbg !7769
  call void @llvm.dbg.value(metadata i32 %1, metadata !7764, metadata !DIExpression()), !dbg !7769
  call void @llvm.dbg.value(metadata i32 %2, metadata !7765, metadata !DIExpression()), !dbg !7769
  %4 = icmp eq i32 %2, 0, !dbg !7770
  br i1 %4, label %17, label %5, !dbg !7771

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !7772

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !7773
  call void @llvm.dbg.value(metadata i8* %9, metadata !7766, metadata !DIExpression()), !dbg !7773
  call void @llvm.dbg.value(metadata i32 %8, metadata !7765, metadata !DIExpression()), !dbg !7769
  call void @llvm.dbg.value(metadata i8* %9, metadata !7766, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7773
  %10 = load i8, i8* %9, align 1, !dbg !7774
  %11 = icmp eq i8 %10, %6, !dbg !7777
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !7778
  call void @llvm.dbg.value(metadata i8* %12, metadata !7766, metadata !DIExpression()), !dbg !7773
  call void @llvm.dbg.value(metadata i32 %13, metadata !7765, metadata !DIExpression()), !dbg !7769
  br i1 %15, label %16, label %7, !dbg !7778, !llvm.loop !7779

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !7781

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !7769
  ret i8* %19, !dbg !7782
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !7783 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !7785, metadata !DIExpression()), !dbg !7786
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !7787
  ret void, !dbg !7788
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #11 !dbg !7789 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7791, metadata !DIExpression()), !dbg !7792
  ret i32 -1, !dbg !7793
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !7794 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7798, metadata !DIExpression()), !dbg !7800
  call void @llvm.dbg.value(metadata i32* %1, metadata !7799, metadata !DIExpression()), !dbg !7800
  %3 = ptrtoint i32* %1 to i32, !dbg !7801
  %4 = and i32 %3, -2, !dbg !7801
  %5 = icmp eq i32 %4, 2, !dbg !7801
  br i1 %5, label %6, label %9, !dbg !7801

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !7802
  %8 = tail call i32 %7(i32 noundef %0) #25, !dbg !7802
  br label %9, !dbg !7803

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !7803
  ret i32 %10, !dbg !7804
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !7805 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7807, metadata !DIExpression()), !dbg !7809
  call void @llvm.dbg.value(metadata i32* %1, metadata !7808, metadata !DIExpression()), !dbg !7809
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !7810
  ret i32 %3, !dbg !7811
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !7812 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7815, metadata !DIExpression()), !dbg !7817
  call void @llvm.dbg.value(metadata i32* %1, metadata !7816, metadata !DIExpression()), !dbg !7817
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !7818, !srcloc !7820
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !7821
  ret i32 %3, !dbg !7822
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !7823 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7828, metadata !DIExpression()), !dbg !7832
  call void @llvm.dbg.value(metadata i32* %1, metadata !7829, metadata !DIExpression()), !dbg !7832
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !7833
  call void @llvm.dbg.value(metadata i32 %3, metadata !7830, metadata !DIExpression()), !dbg !7832
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #26, !dbg !7834
  call void @llvm.dbg.value(metadata i32 %4, metadata !7831, metadata !DIExpression()), !dbg !7832
  %5 = icmp ne i32 %3, %4, !dbg !7835
  %6 = sext i1 %5 to i32, !dbg !7836
  ret i32 %6, !dbg !7837
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !7838 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7842, metadata !DIExpression()), !dbg !7846
  call void @llvm.dbg.value(metadata i32 %1, metadata !7843, metadata !DIExpression()), !dbg !7846
  call void @llvm.dbg.value(metadata i32 %2, metadata !7844, metadata !DIExpression()), !dbg !7846
  call void @llvm.dbg.value(metadata i32* %3, metadata !7845, metadata !DIExpression()), !dbg !7846
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !7847
  ret i32 %5, !dbg !7848
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !7849 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7851, metadata !DIExpression()), !dbg !7855
  call void @llvm.dbg.value(metadata i32 %1, metadata !7852, metadata !DIExpression()), !dbg !7855
  call void @llvm.dbg.value(metadata i32 %2, metadata !7853, metadata !DIExpression()), !dbg !7855
  call void @llvm.dbg.value(metadata i32* %3, metadata !7854, metadata !DIExpression()), !dbg !7855
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !7856, !srcloc !7858
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !7859
  ret i32 %5, !dbg !7860
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !7861 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7863, metadata !DIExpression()), !dbg !7871
  call void @llvm.dbg.value(metadata i32 %1, metadata !7864, metadata !DIExpression()), !dbg !7871
  call void @llvm.dbg.value(metadata i32 %2, metadata !7865, metadata !DIExpression()), !dbg !7871
  call void @llvm.dbg.value(metadata i32* %3, metadata !7866, metadata !DIExpression()), !dbg !7871
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !7872
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !7874
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !7874
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !7874
  br i1 %11, label %33, label %12, !dbg !7874

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !7871
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !7871
  call void @llvm.dbg.value(metadata i8* %14, metadata !7869, metadata !DIExpression()), !dbg !7871
  call void @llvm.dbg.value(metadata i32 %13, metadata !7867, metadata !DIExpression()), !dbg !7871
  call void @llvm.dbg.value(metadata i32 %1, metadata !7868, metadata !DIExpression()), !dbg !7871
  br label %15, !dbg !7875

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !7877
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !7871
  call void @llvm.dbg.value(metadata i8* %17, metadata !7869, metadata !DIExpression()), !dbg !7871
  call void @llvm.dbg.value(metadata i32 %16, metadata !7868, metadata !DIExpression()), !dbg !7871
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !7878
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7881
  call void @llvm.dbg.value(metadata i8* %19, metadata !7869, metadata !DIExpression()), !dbg !7871
  %20 = load i8, i8* %17, align 1, !dbg !7882
  %21 = zext i8 %20 to i32, !dbg !7883
  %22 = tail call i32 %18(i32 noundef %21) #25, !dbg !7878
  %23 = icmp eq i32 %22, -1, !dbg !7884
  br i1 %23, label %30, label %24, !dbg !7885

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !7886
  call void @llvm.dbg.value(metadata i32 %25, metadata !7868, metadata !DIExpression()), !dbg !7871
  %26 = icmp eq i32 %25, 0, !dbg !7887
  br i1 %26, label %27, label %15, !dbg !7888, !llvm.loop !7889

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !7891
  call void @llvm.dbg.value(metadata i32 %28, metadata !7867, metadata !DIExpression()), !dbg !7871
  %29 = icmp eq i32 %28, 0, !dbg !7892
  br i1 %29, label %30, label %12, !dbg !7893, !llvm.loop !7894

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !7871
  call void @llvm.dbg.value(metadata i32 %31, metadata !7867, metadata !DIExpression()), !dbg !7871
  call void @llvm.dbg.label(metadata !7870), !dbg !7897
  %32 = sub i32 %2, %31, !dbg !7898
  br label %33, !dbg !7899

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !7871
  ret i32 %34, !dbg !7900
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !7901 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7905, metadata !DIExpression()), !dbg !7906
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !7907
  %3 = icmp eq i32 %2, -1, !dbg !7909
  br i1 %3, label %8, label %4, !dbg !7910

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !7911
  %6 = icmp eq i32 %5, -1, !dbg !7912
  %7 = sext i1 %6 to i32, !dbg !7911
  br label %8, !dbg !7913

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !7906
  ret i32 %9, !dbg !7914
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !7915 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7917, metadata !DIExpression()), !dbg !7918
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #26, !dbg !7919
  ret void, !dbg !7920
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !7921 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7925, metadata !DIExpression()), !dbg !7931
  call void @llvm.dbg.value(metadata i32 %1, metadata !7926, metadata !DIExpression()), !dbg !7931
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !7927, metadata !DIExpression()), !dbg !7931
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !7932
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !7932
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !7932
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !7928, metadata !DIExpression()), !dbg !7931
  call void @llvm.dbg.value(metadata i32 %0, metadata !7930, metadata !DIExpression()), !dbg !7931
  %7 = icmp slt i32 %0, %1, !dbg !7933
  br i1 %7, label %8, label %22, !dbg !7936

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7930, metadata !DIExpression()), !dbg !7931
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #26, !dbg !7937
  %11 = icmp eq i32 %10, 0, !dbg !7937
  br i1 %11, label %19, label %12, !dbg !7940

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #26, !dbg !7941
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !7943
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !7943
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !7945
  br i1 %15, label %19, label %16, !dbg !7946

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !7947
  %18 = load i8*, i8** %17, align 4, !dbg !7947
  tail call void %14(i32 noundef %9, i8* noundef %18) #25, !dbg !7948
  br label %19, !dbg !7949

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !7950
  call void @llvm.dbg.value(metadata i32 %20, metadata !7930, metadata !DIExpression()), !dbg !7931
  %21 = icmp eq i32 %20, %1, !dbg !7933
  br i1 %21, label %22, label %8, !dbg !7936, !llvm.loop !7951

22:                                               ; preds = %19, %3
  ret void, !dbg !7953
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #16 !dbg !7954 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7956, metadata !DIExpression()), !dbg !7957
  %2 = shl nuw i32 1, %0, !dbg !7958
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #26, !dbg !7961
  ret i32 %3, !dbg !7962
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #15 !dbg !7963 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7967, metadata !DIExpression()), !dbg !7968
  %2 = shl nuw i32 1, %0, !dbg !7969
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #26, !dbg !7972
  ret void, !dbg !7973
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7974 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7977, metadata !DIExpression()), !dbg !7978
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !7979
  ret void, !dbg !7980
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #16 !dbg !7981 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7983, metadata !DIExpression()), !dbg !7984
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !7985
  %3 = and i32 %2, %0, !dbg !7985
  %4 = icmp eq i32 %3, %0, !dbg !7986
  %5 = zext i1 %4 to i32, !dbg !7986
  ret i32 %5, !dbg !7987
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !7988 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7990, metadata !DIExpression()), !dbg !7991
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #26, !dbg !7992
  ret void, !dbg !7993
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !7994 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7996, metadata !DIExpression()), !dbg !7997
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #26, !dbg !7998
  ret void, !dbg !7999
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !8000 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8002, metadata !DIExpression()), !dbg !8003
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #26, !dbg !8004
  ret void, !dbg !8005
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !8006 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8008, metadata !DIExpression()), !dbg !8009
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #26, !dbg !8010
  ret void, !dbg !8011
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !8012 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8014, metadata !DIExpression()), !dbg !8015
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #26, !dbg !8016
  ret void, !dbg !8017
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !8018 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8020, metadata !DIExpression()), !dbg !8021
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #26, !dbg !8022
  ret void, !dbg !8023
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !8024 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8026, metadata !DIExpression()), !dbg !8027
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #26, !dbg !8028
  ret void, !dbg !8029
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !8030 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8032, metadata !DIExpression()), !dbg !8033
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #26, !dbg !8034
  ret void, !dbg !8035
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !8036 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8038, metadata !DIExpression()), !dbg !8039
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #26, !dbg !8040
  ret void, !dbg !8041
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !8042 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8044, metadata !DIExpression()), !dbg !8045
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #26, !dbg !8046
  ret void, !dbg !8047
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8048 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8050, metadata !DIExpression()), !dbg !8051
  tail call fastcc void @__stm32_exti_connect_irqs() #26, !dbg !8052
  ret i32 0, !dbg !8053
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !603 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !607, metadata !DIExpression()), !dbg !8054
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #25, !dbg !8055
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #25, !dbg !8057
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #25, !dbg !8059
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #25, !dbg !8061
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #25, !dbg !8063
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #25, !dbg !8065
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #25, !dbg !8067
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #25, !dbg !8069
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #25, !dbg !8071
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #25, !dbg !8073
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #25, !dbg !8075
  ret void, !dbg !8077
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !8078 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8080, metadata !DIExpression()), !dbg !8082
  call void @llvm.dbg.value(metadata i32 0, metadata !8081, metadata !DIExpression()), !dbg !8082
  %2 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !8083
  %3 = load i32, i32* %2, align 4, !dbg !8083
  call void @llvm.dbg.value(metadata i32 %3, metadata !8081, metadata !DIExpression()), !dbg !8082
  %4 = shl nuw i32 1, %0, !dbg !8084
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #26, !dbg !8085
  tail call void @arch_irq_enable(i32 noundef %3) #25, !dbg !8086
  ret void, !dbg !8087
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8088 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8090, metadata !DIExpression()), !dbg !8091
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8092
  %3 = or i32 %2, %0, !dbg !8092
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8092
  ret void, !dbg !8093
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #15 !dbg !8094 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8096, metadata !DIExpression()), !dbg !8097
  %2 = icmp slt i32 %0, 32, !dbg !8098
  br i1 %2, label %3, label %5, !dbg !8100

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !8101
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #26, !dbg !8103
  br label %5, !dbg !8104

5:                                                ; preds = %1, %3
  ret void, !dbg !8105
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8106 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8108, metadata !DIExpression()), !dbg !8109
  %2 = xor i32 %0, -1, !dbg !8110
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8110
  %4 = and i32 %3, %2, !dbg !8110
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8110
  ret void, !dbg !8111
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #15 !dbg !8112 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8116, metadata !DIExpression()), !dbg !8118
  call void @llvm.dbg.value(metadata i32 %1, metadata !8117, metadata !DIExpression()), !dbg !8118
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !8119

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !8120
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #26, !dbg !8122
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #26, !dbg !8123
  br label %11, !dbg !8124

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !8125
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #26, !dbg !8126
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #26, !dbg !8127
  br label %11, !dbg !8128

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !8129
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #26, !dbg !8130
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #26, !dbg !8131
  br label %11, !dbg !8132

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !8133
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #26, !dbg !8134
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #26, !dbg !8135
  br label %11, !dbg !8136

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !8137
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8138 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8140, metadata !DIExpression()), !dbg !8141
  %2 = xor i32 %0, -1, !dbg !8142
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8142
  %4 = and i32 %3, %2, !dbg !8142
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8142
  ret void, !dbg !8143
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8144 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8146, metadata !DIExpression()), !dbg !8147
  %2 = xor i32 %0, -1, !dbg !8148
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8148
  %4 = and i32 %3, %2, !dbg !8148
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8148
  ret void, !dbg !8149
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8150 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8152, metadata !DIExpression()), !dbg !8153
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8154
  %3 = or i32 %2, %0, !dbg !8154
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8154
  ret void, !dbg !8155
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8156 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8158, metadata !DIExpression()), !dbg !8159
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8160
  %3 = or i32 %2, %0, !dbg !8160
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8160
  ret void, !dbg !8161
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #7 !dbg !8162 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8166, metadata !DIExpression()), !dbg !8172
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !8167, metadata !DIExpression()), !dbg !8172
  call void @llvm.dbg.value(metadata i8* %2, metadata !8168, metadata !DIExpression()), !dbg !8172
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_39, metadata !8169, metadata !DIExpression()), !dbg !8172
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8171, metadata !DIExpression()), !dbg !8172
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8173
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !8173
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !8175
  br i1 %6, label %7, label %9, !dbg !8176

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !8177
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8178
  store i8* %2, i8** %8, align 4, !dbg !8179
  br label %9, !dbg !8180

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !8172
  ret i32 %10, !dbg !8181
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #4 !dbg !8182 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8184, metadata !DIExpression()), !dbg !8187
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_39, metadata !8185, metadata !DIExpression()), !dbg !8187
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8186, metadata !DIExpression()), !dbg !8187
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8188
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !8189
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8190
  store i8* null, i8** %3, align 4, !dbg !8191
  ret void, !dbg !8192
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !8193 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8195, metadata !DIExpression()), !dbg !8200
  call void @llvm.dbg.value(metadata i8* %1, metadata !8196, metadata !DIExpression()), !dbg !8200
  call void @llvm.dbg.value(metadata i8* %1, metadata !8197, metadata !DIExpression()), !dbg !8200
  %3 = bitcast i8* %1 to i32*, !dbg !8201
  %4 = load i32, i32* %3, align 4, !dbg !8201
  %5 = add i32 %4, -169, !dbg !8201
  %6 = icmp ult i32 %5, -121, !dbg !8201
  br i1 %6, label %15, label %7, !dbg !8203

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8204
  %9 = inttoptr i32 %8 to i32*, !dbg !8205
  call void @llvm.dbg.value(metadata i32* %9, metadata !8198, metadata !DIExpression()), !dbg !8200
  %10 = load volatile i32, i32* %9, align 4, !dbg !8206
  call void @llvm.dbg.value(metadata i32 %10, metadata !8199, metadata !DIExpression()), !dbg !8200
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8207
  %12 = bitcast i8* %11 to i32*, !dbg !8207
  %13 = load i32, i32* %12, align 4, !dbg !8207
  %14 = or i32 %13, %10, !dbg !8208
  call void @llvm.dbg.value(metadata i32 %14, metadata !8199, metadata !DIExpression()), !dbg !8200
  store volatile i32 %14, i32* %9, align 4, !dbg !8209
  br label %15, !dbg !8210

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8200
  ret i32 %16, !dbg !8211
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !8212 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8214, metadata !DIExpression()), !dbg !8219
  call void @llvm.dbg.value(metadata i8* %1, metadata !8215, metadata !DIExpression()), !dbg !8219
  call void @llvm.dbg.value(metadata i8* %1, metadata !8216, metadata !DIExpression()), !dbg !8219
  %3 = bitcast i8* %1 to i32*, !dbg !8220
  %4 = load i32, i32* %3, align 4, !dbg !8220
  %5 = add i32 %4, -169, !dbg !8220
  %6 = icmp ult i32 %5, -121, !dbg !8220
  br i1 %6, label %16, label %7, !dbg !8222

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8223
  %9 = inttoptr i32 %8 to i32*, !dbg !8224
  call void @llvm.dbg.value(metadata i32* %9, metadata !8217, metadata !DIExpression()), !dbg !8219
  %10 = load volatile i32, i32* %9, align 4, !dbg !8225
  call void @llvm.dbg.value(metadata i32 %10, metadata !8218, metadata !DIExpression()), !dbg !8219
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8226
  %12 = bitcast i8* %11 to i32*, !dbg !8226
  %13 = load i32, i32* %12, align 4, !dbg !8226
  %14 = xor i32 %13, -1, !dbg !8227
  %15 = and i32 %10, %14, !dbg !8228
  call void @llvm.dbg.value(metadata i32 %15, metadata !8218, metadata !DIExpression()), !dbg !8219
  store volatile i32 %15, i32* %9, align 4, !dbg !8229
  br label %16, !dbg !8230

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8219
  ret i32 %17, !dbg !8231
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !8232 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8234, metadata !DIExpression()), !dbg !8242
  call void @llvm.dbg.value(metadata i8* %1, metadata !8235, metadata !DIExpression()), !dbg !8242
  call void @llvm.dbg.value(metadata i32* %2, metadata !8236, metadata !DIExpression()), !dbg !8242
  call void @llvm.dbg.value(metadata i8* %1, metadata !8237, metadata !DIExpression()), !dbg !8242
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !8243
  call void @llvm.dbg.value(metadata i32 %4, metadata !8238, metadata !DIExpression()), !dbg !8242
  call void @llvm.dbg.value(metadata i32 undef, metadata !8239, metadata !DIExpression()), !dbg !8242
  call void @llvm.dbg.value(metadata i32 undef, metadata !8240, metadata !DIExpression()), !dbg !8242
  call void @llvm.dbg.value(metadata i32 %4, metadata !8241, metadata !DIExpression()), !dbg !8242
  %5 = bitcast i8* %1 to i32*, !dbg !8244
  %6 = load i32, i32* %5, align 4, !dbg !8244
  switch i32 %6, label %21 [
    i32 48, label %19
    i32 52, label %19
    i32 56, label %19
    i32 64, label %7
    i32 68, label %9
    i32 168, label %19
    i32 6, label %19
    i32 1, label %11
    i32 2, label %14
    i32 4, label %17
    i32 5, label %18
  ], !dbg !8245

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #26, !dbg !8246
  call void @llvm.dbg.value(metadata i32 %8, metadata !8239, metadata !DIExpression()), !dbg !8242
  br label %19, !dbg !8247

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 1) #26, !dbg !8249
  call void @llvm.dbg.value(metadata i32 %10, metadata !8240, metadata !DIExpression()), !dbg !8242
  br label %19, !dbg !8250

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #25, !dbg !8251
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12, i32 noundef 4) #26, !dbg !8252
  br label %19, !dbg !8253

14:                                               ; preds = %3
  %15 = tail call i32 @get_pllsrc_frequency() #25, !dbg !8254
  %16 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %15, i32 noundef 7) #26, !dbg !8255
  br label %19, !dbg !8256

17:                                               ; preds = %3
  br label %19, !dbg !8257

18:                                               ; preds = %3
  br label %19, !dbg !8258

19:                                               ; preds = %3, %3, %3, %3, %3, %18, %17, %14, %11, %9, %7
  %20 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ %16, %14 ], [ 0, %17 ], [ 32000, %18 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %20, i32* %2, align 4, !dbg !8259
  br label %21, !dbg !8260

21:                                               ; preds = %19, %3
  %22 = phi i32 [ -134, %3 ], [ 0, %19 ], !dbg !8242
  ret i32 %22, !dbg !8260
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #15 !dbg !8261 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8263, metadata !DIExpression()), !dbg !8271
  call void @llvm.dbg.value(metadata i8* %1, metadata !8264, metadata !DIExpression()), !dbg !8271
  call void @llvm.dbg.value(metadata i8* %2, metadata !8265, metadata !DIExpression()), !dbg !8271
  call void @llvm.dbg.value(metadata i8* %1, metadata !8266, metadata !DIExpression()), !dbg !8271
  %4 = bitcast i8* %1 to i32*, !dbg !8272
  %5 = load i32, i32* %4, align 4, !dbg !8272
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #26, !dbg !8273
  call void @llvm.dbg.value(metadata i32 %6, metadata !8270, metadata !DIExpression()), !dbg !8271
  %7 = icmp slt i32 %6, 0, !dbg !8274
  br i1 %7, label %22, label %8, !dbg !8276

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8266, metadata !DIExpression()), !dbg !8271
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8277
  %10 = bitcast i8* %9 to i32*, !dbg !8277
  %11 = load i32, i32* %10, align 4, !dbg !8277
  %12 = lshr i32 %11, 16, !dbg !8277
  %13 = and i32 %12, 7, !dbg !8277
  %14 = lshr i32 %11, 8, !dbg !8278
  %15 = and i32 %14, 31, !dbg !8278
  %16 = shl i32 %13, %15, !dbg !8279
  call void @llvm.dbg.value(metadata i32 %16, metadata !8269, metadata !DIExpression()), !dbg !8271
  %17 = and i32 %11, 255, !dbg !8280
  %18 = or i32 %17, 1073887232, !dbg !8281
  %19 = inttoptr i32 %18 to i32*, !dbg !8282
  call void @llvm.dbg.value(metadata i32* %19, metadata !8267, metadata !DIExpression()), !dbg !8271
  %20 = load volatile i32, i32* %19, align 4, !dbg !8283
  call void @llvm.dbg.value(metadata i32 %20, metadata !8268, metadata !DIExpression()), !dbg !8271
  %21 = or i32 %16, %20, !dbg !8284
  call void @llvm.dbg.value(metadata i32 %21, metadata !8268, metadata !DIExpression()), !dbg !8271
  store volatile i32 %21, i32* %19, align 4, !dbg !8285
  br label %22, !dbg !8286

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !8271
  ret i32 %23, !dbg !8287
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #11 !dbg !8288 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8292, metadata !DIExpression()), !dbg !8294
  call void @llvm.dbg.value(metadata i32 0, metadata !8293, metadata !DIExpression()), !dbg !8294
  %2 = add i32 %0, -1, !dbg !8295
  %3 = icmp ult i32 %2, 6, !dbg !8295
  br i1 %3, label %4, label %7, !dbg !8295

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !8295
  %6 = load i32, i32* %5, align 4, !dbg !8295
  call void @llvm.dbg.value(metadata i32 %6, metadata !8293, metadata !DIExpression()), !dbg !8294
  br label %7, !dbg !8296

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !8294
  ret i32 %8, !dbg !8297
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !8298 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8302, metadata !DIExpression()), !dbg !8304
  call void @llvm.dbg.value(metadata i32 %1, metadata !8303, metadata !DIExpression()), !dbg !8304
  %3 = udiv i32 %0, %1, !dbg !8305
  ret i32 %3, !dbg !8306
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !8307 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8311, metadata !DIExpression()), !dbg !8315
  call void @llvm.dbg.value(metadata i32 16, metadata !8312, metadata !DIExpression()), !dbg !8315
  call void @llvm.dbg.value(metadata i32 336, metadata !8313, metadata !DIExpression()), !dbg !8315
  call void @llvm.dbg.value(metadata i32 %1, metadata !8314, metadata !DIExpression()), !dbg !8315
  %3 = mul i32 %0, 336, !dbg !8316
  %4 = shl nsw i32 %1, 4, !dbg !8317
  %5 = udiv i32 %3, %4, !dbg !8318
  ret i32 %5, !dbg !8319
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !8320 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !8322, metadata !DIExpression()), !dbg !8325
  tail call void @config_enable_default_clocks() #25, !dbg !8326
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #25, !dbg !8327
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #26, !dbg !8327
  %4 = lshr i32 %3, 4, !dbg !8327
  %5 = and i32 %4, 15, !dbg !8327
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !8327
  %7 = load i8, i8* %6, align 1, !dbg !8327
  %8 = zext i8 %7 to i32, !dbg !8327
  %9 = lshr i32 %2, %8, !dbg !8327
  call void @llvm.dbg.value(metadata i32 %9, metadata !8323, metadata !DIExpression()), !dbg !8325
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !8324, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !8325
  %10 = icmp ult i32 %9, 84000000, !dbg !8328
  br i1 %10, label %11, label %13, !dbg !8330

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #25, !dbg !8331
  br label %13, !dbg !8333

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #26, !dbg !8334
  tail call fastcc void @set_up_plls() #26, !dbg !8335
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !8336
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #26, !dbg !8339
  br label %14, !dbg !8340

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8341
  %16 = icmp eq i32 %15, 8, !dbg !8342
  br i1 %16, label %17, label %14, !dbg !8340, !llvm.loop !8343

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !8345
  br i1 %18, label %19, label %21, !dbg !8347

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #25, !dbg !8348
  br label %21, !dbg !8350

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !8351
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #26, !dbg !8352
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #26, !dbg !8353
  ret i32 0, !dbg !8354
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #16 !dbg !8355 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8357
  %2 = and i32 %1, 240, !dbg !8357
  ret i32 %2, !dbg !8358
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #15 !dbg !8359 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #26, !dbg !8360
  tail call fastcc void @LL_RCC_HSE_Enable() #26, !dbg !8365
  br label %1, !dbg !8366

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #26, !dbg !8367
  %3 = icmp eq i32 %2, 1, !dbg !8368
  br i1 %3, label %4, label %1, !dbg !8366, !llvm.loop !8369

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #26, !dbg !8371
  br label %5, !dbg !8374

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #26, !dbg !8375
  %7 = icmp eq i32 %6, 1, !dbg !8376
  br i1 %7, label %8, label %5, !dbg !8374, !llvm.loop !8377

8:                                                ; preds = %5
  ret void, !dbg !8379
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !8380 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8381
  %2 = icmp eq i32 %1, 8, !dbg !8383
  br i1 %2, label %3, label %4, !dbg !8384

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !8385
  tail call fastcc void @stm32_clock_switch_to_hsi() #26, !dbg !8387
  br label %4, !dbg !8388

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #26, !dbg !8389
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8390
  %6 = and i32 %5, -196609, !dbg !8390
  %7 = or i32 %6, 65536, !dbg !8390
  store volatile i32 %7, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8390
  %8 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8391
  %9 = and i32 %8, -251658241, !dbg !8391
  %10 = or i32 %9, 117440512, !dbg !8391
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8391
  tail call void @config_pll_sysclock() #25, !dbg !8392
  tail call fastcc void @LL_RCC_PLL_Enable() #26, !dbg !8393
  br label %11, !dbg !8394

11:                                               ; preds = %11, %4
  %12 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #26, !dbg !8395
  %13 = icmp eq i32 %12, 1, !dbg !8396
  br i1 %13, label %14, label %11, !dbg !8394, !llvm.loop !8397

14:                                               ; preds = %11
  ret void, !dbg !8399
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #15 !dbg !8400 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8402, metadata !DIExpression()), !dbg !8403
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8404
  %2 = and i32 %1, -241, !dbg !8404
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8404
  ret void, !dbg !8405
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #15 !dbg !8406 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8408, metadata !DIExpression()), !dbg !8409
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8410
  %3 = and i32 %2, -4, !dbg !8410
  %4 = or i32 %3, %0, !dbg !8410
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8410
  ret void, !dbg !8411
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #16 !dbg !8412 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8413
  %2 = and i32 %1, 12, !dbg !8413
  ret i32 %2, !dbg !8414
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #15 !dbg !8415 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !8417, metadata !DIExpression()), !dbg !8418
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8419
  %2 = and i32 %1, -7169, !dbg !8419
  %3 = or i32 %2, 4096, !dbg !8419
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8419
  ret void, !dbg !8420
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #15 !dbg !8421 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8423, metadata !DIExpression()), !dbg !8424
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8425
  %2 = and i32 %1, -57345, !dbg !8425
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8425
  ret void, !dbg !8426
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #15 !dbg !8427 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !8428
  %2 = icmp eq i32 %1, 1, !dbg !8430
  br i1 %2, label %7, label %3, !dbg !8431

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #26, !dbg !8432
  br label %4, !dbg !8434

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !8435
  %6 = icmp eq i32 %5, 1, !dbg !8436
  br i1 %6, label %7, label %4, !dbg !8434, !llvm.loop !8437

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #26, !dbg !8439
  br label %8, !dbg !8440

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8441
  %10 = icmp eq i32 %9, 0, !dbg !8442
  br i1 %10, label %11, label %8, !dbg !8440, !llvm.loop !8443

11:                                               ; preds = %8
  ret void, !dbg !8445
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #15 !dbg !8446 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8447
  %2 = and i32 %1, -16777217, !dbg !8447
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8447
  ret void, !dbg !8448
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #15 !dbg !8449 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8450
  %2 = or i32 %1, 16777216, !dbg !8450
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8450
  ret void, !dbg !8451
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #16 !dbg !8452 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8453
  %2 = lshr i32 %1, 25, !dbg !8454
  %3 = and i32 %2, 1, !dbg !8454
  ret i32 %3, !dbg !8455
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #16 !dbg !8456 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8457
  %2 = lshr i32 %1, 1, !dbg !8458
  %3 = and i32 %2, 1, !dbg !8458
  ret i32 %3, !dbg !8459
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #15 !dbg !8460 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8461
  %2 = or i32 %1, 1, !dbg !8461
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8461
  ret void, !dbg !8462
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #15 !dbg !8463 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8464
  %2 = and i32 %1, -262145, !dbg !8464
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8464
  ret void, !dbg !8465
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #15 !dbg !8466 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8467
  %2 = or i32 %1, 65536, !dbg !8467
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8467
  ret void, !dbg !8468
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #16 !dbg !8469 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8470
  %2 = lshr i32 %1, 17, !dbg !8471
  %3 = and i32 %2, 1, !dbg !8471
  ret i32 %3, !dbg !8472
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #15 !dbg !8473 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8474
  %2 = or i32 %1, 1, !dbg !8474
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8474
  ret void, !dbg !8475
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #16 !dbg !8476 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8477
  %2 = lshr i32 %1, 1, !dbg !8478
  %3 = and i32 %2, 1, !dbg !8478
  ret i32 %3, !dbg !8479
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #11 !dbg !8480 {
  ret i32 16000000, !dbg !8482
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #15 !dbg !8486 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #26, !dbg !8487
  ret void, !dbg !8488
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #15 !dbg !8489 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !8493, metadata !DIExpression()), !dbg !8497
  call void @llvm.dbg.value(metadata i32 16, metadata !8494, metadata !DIExpression()), !dbg !8497
  call void @llvm.dbg.value(metadata i32 336, metadata !8495, metadata !DIExpression()), !dbg !8497
  call void @llvm.dbg.value(metadata i32 65536, metadata !8496, metadata !DIExpression()), !dbg !8497
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8498
  %2 = and i32 %1, -4227072, !dbg !8498
  %3 = or i32 %2, 4215824, !dbg !8498
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8498
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8499
  %5 = and i32 %4, -196609, !dbg !8499
  %6 = or i32 %5, 65536, !dbg !8499
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8499
  ret void, !dbg !8500
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #17 !dbg !8501 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #26, !dbg !8502
  ret void, !dbg !8503
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #17 !dbg !8504 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !8507, metadata !DIExpression()), !dbg !8509
  %2 = bitcast i32* %1 to i8*, !dbg !8510
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !8510
  call void @llvm.dbg.declare(metadata i32* %1, metadata !8508, metadata !DIExpression()), !dbg !8511
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8512
  %4 = or i32 %3, 268435456, !dbg !8512
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8512
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8513
  %6 = and i32 %5, 268435456, !dbg !8513
  store volatile i32 %6, i32* %1, align 4, !dbg !8514
  %7 = load volatile i32, i32* %1, align 4, !dbg !8515
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !8516
  ret void, !dbg !8516
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8517 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8519, metadata !DIExpression()), !dbg !8520
  %2 = tail call fastcc zeroext i1 @device_is_ready() #26, !dbg !8521
  br i1 %2, label %3, label %4, !dbg !8523

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #26, !dbg !8524
  br label %4, !dbg !8525

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !8520
  ret i32 %5, !dbg !8526
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !8527 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !8532, metadata !DIExpression()), !dbg !8533
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !8534, !srcloc !8536
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #26, !dbg !8537
  ret i1 %1, !dbg !8538
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !8539 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !8540
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !8541
  ret void, !dbg !8542
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !8543 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8545, metadata !DIExpression()), !dbg !8546
  %2 = icmp eq i32 %0, 10, !dbg !8547
  br i1 %2, label %3, label %4, !dbg !8549

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #26, !dbg !8550
  br label %4, !dbg !8552

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !8553
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #26, !dbg !8554
  ret i32 %0, !dbg !8555
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8556 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !8559, metadata !DIExpression()), !dbg !8561
  call void @llvm.dbg.value(metadata i8 %0, metadata !8560, metadata !DIExpression()), !dbg !8561
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !8562, !srcloc !8564
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #26, !dbg !8565
  ret void, !dbg !8566
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8567 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !8569, metadata !DIExpression()), !dbg !8572
  call void @llvm.dbg.value(metadata i8 %0, metadata !8570, metadata !DIExpression()), !dbg !8572
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_47, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8573
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !8571, metadata !DIExpression()), !dbg !8572
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !8574
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !8574
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_47, i8 noundef zeroext %0) #25, !dbg !8575
  ret void, !dbg !8576
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !8577 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !8579, metadata !DIExpression()), !dbg !8580
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_47) #25, !dbg !8581
  ret i1 %1, !dbg !8582
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #11 !dbg !8583 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !8630, metadata !DIExpression()), !dbg !8633
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !8631, metadata !DIExpression()), !dbg !8633
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !8632, metadata !DIExpression()), !dbg !8633
  ret void, !dbg !8634
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !8635 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8637, metadata !DIExpression()), !dbg !8642
  call void @llvm.dbg.value(metadata i8 %1, metadata !8638, metadata !DIExpression()), !dbg !8642
  call void @llvm.dbg.value(metadata i32 %2, metadata !8639, metadata !DIExpression()), !dbg !8642
  %5 = bitcast i32* %4 to i8*, !dbg !8643
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !8643
  call void @llvm.dbg.value(metadata i32* %4, metadata !8641, metadata !DIExpression(DW_OP_deref)), !dbg !8642
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #26, !dbg !8644
  call void @llvm.dbg.value(metadata i32 %6, metadata !8640, metadata !DIExpression()), !dbg !8642
  %7 = icmp eq i32 %6, 0, !dbg !8645
  br i1 %7, label %8, label %31, !dbg !8647

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !8640, metadata !DIExpression()), !dbg !8642
  %9 = and i32 %2, 131072, !dbg !8648
  %10 = icmp eq i32 %9, 0, !dbg !8650
  br i1 %10, label %28, label %11, !dbg !8651

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !8652
  %13 = icmp eq i32 %12, 0, !dbg !8655
  br i1 %13, label %18, label %14, !dbg !8656

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !8657
  %16 = shl nuw i32 1, %15, !dbg !8657
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #26, !dbg !8659
  br label %25, !dbg !8660

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !8661
  %20 = icmp eq i32 %19, 0, !dbg !8663
  %21 = zext i8 %1 to i32, !dbg !8642
  br i1 %20, label %25, label %22, !dbg !8664

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !8665
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #26, !dbg !8667
  br label %25, !dbg !8668

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !8669
  %27 = load i32, i32* %4, align 4, !dbg !8670
  call void @llvm.dbg.value(metadata i32 %30, metadata !8641, metadata !DIExpression()), !dbg !8642
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #26, !dbg !8671
  br label %31, !dbg !8672

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !8669
  %30 = load i32, i32* %4, align 4, !dbg !8670
  call void @llvm.dbg.value(metadata i32 %30, metadata !8641, metadata !DIExpression()), !dbg !8642
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #26, !dbg !8671
  call void @llvm.dbg.value(metadata i32 0, metadata !8640, metadata !DIExpression()), !dbg !8642
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !8673
  ret i32 %6, !dbg !8673
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #16 !dbg !8674 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8678, metadata !DIExpression()), !dbg !8683
  call void @llvm.dbg.value(metadata i32* %1, metadata !8679, metadata !DIExpression()), !dbg !8683
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8684
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8684
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8684
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8680, metadata !DIExpression()), !dbg !8683
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8685
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8685
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8685
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8682, metadata !DIExpression()), !dbg !8683
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #26, !dbg !8686
  store i32 %9, i32* %1, align 4, !dbg !8687
  ret i32 0, !dbg !8688
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #15 !dbg !8689 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8691, metadata !DIExpression()), !dbg !8697
  call void @llvm.dbg.value(metadata i32 %1, metadata !8692, metadata !DIExpression()), !dbg !8697
  call void @llvm.dbg.value(metadata i32 %2, metadata !8693, metadata !DIExpression()), !dbg !8697
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8698
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !8698
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !8698
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !8694, metadata !DIExpression()), !dbg !8697
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !8699
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !8699
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !8699
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !8695, metadata !DIExpression()), !dbg !8697
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #26, !dbg !8700
  call void @llvm.dbg.value(metadata i32 %10, metadata !8696, metadata !DIExpression()), !dbg !8697
  %11 = xor i32 %1, -1, !dbg !8701
  %12 = and i32 %10, %11, !dbg !8702
  %13 = and i32 %2, %1, !dbg !8703
  %14 = or i32 %12, %13, !dbg !8704
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #26, !dbg !8705
  ret i32 0, !dbg !8706
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !8707 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8709, metadata !DIExpression()), !dbg !8713
  call void @llvm.dbg.value(metadata i32 %1, metadata !8710, metadata !DIExpression()), !dbg !8713
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8714
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8714
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8714
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8711, metadata !DIExpression()), !dbg !8713
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8715
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8715
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8715
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8712, metadata !DIExpression()), !dbg !8713
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !8716
  store volatile i32 %1, i32* %9, align 4, !dbg !8716
  ret i32 0, !dbg !8717
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !8718 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8720, metadata !DIExpression()), !dbg !8724
  call void @llvm.dbg.value(metadata i32 %1, metadata !8721, metadata !DIExpression()), !dbg !8724
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8725
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8725
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8725
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8722, metadata !DIExpression()), !dbg !8724
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8726
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8726
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8726
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8723, metadata !DIExpression()), !dbg !8724
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #26, !dbg !8727
  ret i32 0, !dbg !8728
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !8729 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8731, metadata !DIExpression()), !dbg !8735
  call void @llvm.dbg.value(metadata i32 %1, metadata !8732, metadata !DIExpression()), !dbg !8735
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8736
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8736
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8736
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8733, metadata !DIExpression()), !dbg !8735
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8737
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8737
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8737
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8734, metadata !DIExpression()), !dbg !8735
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !8738
  %10 = load volatile i32, i32* %9, align 4, !dbg !8738
  %11 = xor i32 %10, %1, !dbg !8738
  store volatile i32 %11, i32* %9, align 4, !dbg !8738
  ret i32 0, !dbg !8739
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !8740 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8742, metadata !DIExpression()), !dbg !8752
  call void @llvm.dbg.value(metadata i8 %1, metadata !8743, metadata !DIExpression()), !dbg !8752
  call void @llvm.dbg.value(metadata i32 %2, metadata !8744, metadata !DIExpression()), !dbg !8752
  call void @llvm.dbg.value(metadata i32 %3, metadata !8745, metadata !DIExpression()), !dbg !8752
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8753
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !8753
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !8753
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !8746, metadata !DIExpression()), !dbg !8752
  call void @llvm.dbg.value(metadata i8* undef, metadata !8747, metadata !DIExpression()), !dbg !8752
  call void @llvm.dbg.value(metadata i32 0, metadata !8749, metadata !DIExpression()), !dbg !8752
  call void @llvm.dbg.value(metadata i32 0, metadata !8750, metadata !DIExpression()), !dbg !8752
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !8754

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !8755
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #26, !dbg !8759
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !8760
  %12 = load i32, i32* %11, align 4, !dbg !8760
  %13 = icmp eq i32 %10, %12, !dbg !8761
  br i1 %13, label %14, label %29, !dbg !8762

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #25, !dbg !8763
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #25, !dbg !8765
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #25, !dbg !8766
  br label %29, !dbg !8767

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8768
  %17 = load i8*, i8** %16, align 4, !dbg !8768
  call void @llvm.dbg.value(metadata i8* %17, metadata !8747, metadata !DIExpression()), !dbg !8752
  %18 = zext i8 %1 to i32, !dbg !8769
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #25, !dbg !8771
  %20 = icmp eq i32 %19, 0, !dbg !8772
  br i1 %20, label %21, label %29, !dbg !8773

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !8774
  %23 = load i32, i32* %22, align 4, !dbg !8774
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #26, !dbg !8775
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !8776

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !8749, metadata !DIExpression()), !dbg !8752
  br label %27, !dbg !8777

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !8749, metadata !DIExpression()), !dbg !8752
  br label %27, !dbg !8779

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !8749, metadata !DIExpression()), !dbg !8752
  br label %27, !dbg !8780

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !8752
  call void @llvm.dbg.value(metadata i32 %28, metadata !8749, metadata !DIExpression()), !dbg !8752
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #25, !dbg !8781
  tail call void @stm32_exti_enable(i32 noundef %18) #25, !dbg !8782
  br label %29, !dbg !8782

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !8752
  call void @llvm.dbg.value(metadata i32 %30, metadata !8750, metadata !DIExpression()), !dbg !8752
  call void @llvm.dbg.label(metadata !8751), !dbg !8783
  ret i32 %30, !dbg !8784
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #13 !dbg !8785 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8787, metadata !DIExpression()), !dbg !8791
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !8788, metadata !DIExpression()), !dbg !8791
  call void @llvm.dbg.value(metadata i1 %2, metadata !8789, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8791
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8792
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !8792
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !8792
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !8790, metadata !DIExpression()), !dbg !8791
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !8793
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #26, !dbg !8794
  ret i32 %8, !dbg !8795
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #13 !dbg !8796 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8802, metadata !DIExpression()), !dbg !8805
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !8803, metadata !DIExpression()), !dbg !8805
  call void @llvm.dbg.value(metadata i1 %2, metadata !8804, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8805
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #26, !dbg !8806
  br i1 %4, label %10, label %5, !dbg !8808

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !8809
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #26, !dbg !8812
  %8 = or i1 %7, %2, !dbg !8813
  %9 = select i1 %8, i32 0, i32 -22, !dbg !8813
  br i1 %2, label %11, label %13, !dbg !8813

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !8814

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !8815
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #26, !dbg !8818
  br label %13, !dbg !8819

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !8805
  ret i32 %14, !dbg !8820
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !8821 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8825, metadata !DIExpression()), !dbg !8826
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8827
  %3 = icmp eq %struct._snode* %2, null, !dbg !8827
  ret i1 %3, !dbg !8827
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #13 !dbg !8828 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8832, metadata !DIExpression()), !dbg !8836
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8833, metadata !DIExpression()), !dbg !8836
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8834, metadata !DIExpression()), !dbg !8836
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8837
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !8835, metadata !DIExpression()), !dbg !8836
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8834, metadata !DIExpression()), !dbg !8836
  %4 = icmp eq %struct._snode* %3, null, !dbg !8839
  br i1 %4, label %15, label %5, !dbg !8837

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !8835, metadata !DIExpression()), !dbg !8836
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8834, metadata !DIExpression()), !dbg !8836
  %6 = icmp eq %struct._snode* %3, %1, !dbg !8841
  br i1 %6, label %9, label %11, !dbg !8844

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !8835, metadata !DIExpression()), !dbg !8836
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8834, metadata !DIExpression()), !dbg !8836
  %8 = icmp eq %struct._snode* %13, %1, !dbg !8841
  br i1 %8, label %9, label %11, !dbg !8844, !llvm.loop !8845

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #26, !dbg !8846
  br label %15, !dbg !8846

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8835, metadata !DIExpression()), !dbg !8836
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8834, metadata !DIExpression()), !dbg !8836
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #26, !dbg !8839
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !8835, metadata !DIExpression()), !dbg !8836
  %14 = icmp eq %struct._snode* %13, null, !dbg !8839
  br i1 %14, label %15, label %7, !dbg !8837, !llvm.loop !8845

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !8848
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !8849 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8853, metadata !DIExpression()), !dbg !8855
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8854, metadata !DIExpression()), !dbg !8855
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8856
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #26, !dbg !8856
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #26, !dbg !8856
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !8857
  %5 = icmp eq %struct._snode* %4, null, !dbg !8857
  br i1 %5, label %6, label %8, !dbg !8856

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8859
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #26, !dbg !8859
  br label %8, !dbg !8859

8:                                                ; preds = %6, %2
  ret void, !dbg !8856
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !8861 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8865, metadata !DIExpression()), !dbg !8866
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !8867
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8867
  ret %struct._snode* %3, !dbg !8868
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !8869 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8873, metadata !DIExpression()), !dbg !8875
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8874, metadata !DIExpression()), !dbg !8875
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !8876
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8877
  ret void, !dbg !8878
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !8879 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8881, metadata !DIExpression()), !dbg !8883
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8882, metadata !DIExpression()), !dbg !8883
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !8884
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8885
  ret void, !dbg !8886
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !8887 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8889, metadata !DIExpression()), !dbg !8890
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !8891
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8891
  ret %struct._snode* %3, !dbg !8892
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !8893 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8895, metadata !DIExpression()), !dbg !8897
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8896, metadata !DIExpression()), !dbg !8897
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !8898
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8899
  ret void, !dbg !8900
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #7 !dbg !8901 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8905, metadata !DIExpression()), !dbg !8908
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8906, metadata !DIExpression()), !dbg !8908
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !8907, metadata !DIExpression()), !dbg !8908
  %4 = icmp eq %struct._snode* %1, null, !dbg !8909
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #26, !dbg !8911
  br i1 %4, label %6, label %11, !dbg !8912

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #26, !dbg !8913
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !8915
  %8 = icmp eq %struct._snode* %7, %2, !dbg !8915
  br i1 %8, label %9, label %15, !dbg !8913

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8917
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #26, !dbg !8917
  br label %15, !dbg !8917

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #26, !dbg !8919
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !8921
  %13 = icmp eq %struct._snode* %12, %2, !dbg !8921
  br i1 %13, label %14, label %15, !dbg !8919

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #26, !dbg !8923
  br label %15, !dbg !8923

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #26, !dbg !8912
  ret void, !dbg !8912
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #5 !dbg !8925 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8929, metadata !DIExpression()), !dbg !8930
  %2 = icmp eq %struct._snode* %0, null, !dbg !8931
  br i1 %2, label %5, label %3, !dbg !8931

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #26, !dbg !8931
  br label %5, !dbg !8931

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !8931
  ret %struct._snode* %6, !dbg !8931
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !8932 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8934, metadata !DIExpression()), !dbg !8935
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #26, !dbg !8936
  ret %struct._snode* %2, !dbg !8936
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !8937 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8939, metadata !DIExpression()), !dbg !8940
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !8941
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8941
  ret %struct._snode* %3, !dbg !8942
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !8943 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8945, metadata !DIExpression()), !dbg !8948
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #26, !dbg !8949, !range !8950
  call void @llvm.dbg.value(metadata i32 %2, metadata !8946, metadata !DIExpression()), !dbg !8948
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #26, !dbg !8951
  call void @llvm.dbg.value(metadata i32 %3, metadata !8947, metadata !DIExpression()), !dbg !8948
  ret i32 %3, !dbg !8952
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !8953 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8955, metadata !DIExpression()), !dbg !8958
  call void @llvm.dbg.value(metadata i8* %1, metadata !8956, metadata !DIExpression()), !dbg !8958
  call void @llvm.dbg.value(metadata i8* %1, metadata !8957, metadata !DIExpression()), !dbg !8958
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !8959
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !8959
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8960
  %6 = bitcast i8* %5 to %struct.device**, !dbg !8960
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !8960
  %8 = shl nuw i32 1, %0, !dbg !8961
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #26, !dbg !8962
  ret void, !dbg !8963
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !8964 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !8968, metadata !DIExpression()), !dbg !8974
  call void @llvm.dbg.value(metadata i32 %1, metadata !8969, metadata !DIExpression()), !dbg !8974
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !8970, metadata !DIExpression()), !dbg !8974
  %4 = bitcast i64* %3 to i8*, !dbg !8975
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #24, !dbg !8975
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !8972, metadata !DIExpression()), !dbg !8974
  store i64 70368744177732, i64* %3, align 8, !dbg !8976
  call void @llvm.dbg.value(metadata i64* %3, metadata !8972, metadata !DIExpression(DW_OP_deref)), !dbg !8974
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #26, !dbg !8977
  call void @llvm.dbg.value(metadata i32 %5, metadata !8973, metadata !DIExpression()), !dbg !8974
  %6 = icmp eq i32 %5, 0, !dbg !8978
  br i1 %6, label %7, label %8, !dbg !8980

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #26, !dbg !8981
  br label %8, !dbg !8982

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #24, !dbg !8983
  ret void, !dbg !8983
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !8984 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !8986, metadata !DIExpression()), !dbg !8989
  call void @llvm.dbg.value(metadata i8* %0, metadata !8987, metadata !DIExpression()), !dbg !8989
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_9, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !8990
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !8988, metadata !DIExpression()), !dbg !8989
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !8991
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !8991
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_9, i8* noundef %0) #25, !dbg !8992
  ret i32 %5, !dbg !8993
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !8994 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8996, metadata !DIExpression()), !dbg !8999
  call void @llvm.dbg.value(metadata i32 %1, metadata !8997, metadata !DIExpression()), !dbg !8999
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #26, !dbg !9000
  call void @llvm.dbg.value(metadata i32 %3, metadata !8998, metadata !DIExpression()), !dbg !8999
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #26, !dbg !9001
  ret void, !dbg !9002
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #11 !dbg !9003 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9007, metadata !DIExpression()), !dbg !9008
  %2 = sdiv i32 %0, 4, !dbg !9009
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !9010
  %6 = add nsw i32 %5, 16, !dbg !9011
  %7 = shl i32 15, %6, !dbg !9012
  %8 = or i32 %7, %2, !dbg !9013
  ret i32 %8, !dbg !9014
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9015 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9019, metadata !DIExpression()), !dbg !9021
  call void @llvm.dbg.value(metadata i32 %1, metadata !9020, metadata !DIExpression()), !dbg !9021
  %3 = and i32 %1, 255, !dbg !9022
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !9022
  %5 = load volatile i32, i32* %4, align 4, !dbg !9022
  %6 = lshr i32 %1, 16, !dbg !9022
  %7 = xor i32 %6, -1, !dbg !9022
  %8 = and i32 %5, %7, !dbg !9022
  call void @llvm.dbg.value(metadata i32 %6, metadata !9023, metadata !DIExpression()) #24, !dbg !9027
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #29, !dbg !9029, !srcloc !9030
  call void @llvm.dbg.value(metadata i32 %9, metadata !9026, metadata !DIExpression()) #24, !dbg !9027
  call void @llvm.dbg.value(metadata i32 %9, metadata !9031, metadata !DIExpression()) #24, !dbg !9036
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #24, !dbg !9038, !range !3508
  %11 = shl i32 %0, %10, !dbg !9022
  %12 = or i32 %11, %8, !dbg !9022
  store volatile i32 %12, i32* %4, align 4, !dbg !9022
  ret void, !dbg !9039
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9040 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9044, metadata !DIExpression()), !dbg !9049
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !9045, metadata !DIExpression()), !dbg !9049
  call void @llvm.dbg.value(metadata i32 %2, metadata !9046, metadata !DIExpression()), !dbg !9049
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !9050
  %5 = icmp eq %struct._snode* %4, null, !dbg !9050
  br i1 %5, label %21, label %6, !dbg !9050

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #26, !dbg !9052
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9048, metadata !DIExpression()), !dbg !9049
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !9047, metadata !DIExpression()), !dbg !9049
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !9053
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !9053
  %11 = load i32, i32* %10, align 4, !dbg !9053
  %12 = and i32 %11, %2, !dbg !9057
  %13 = icmp eq i32 %12, 0, !dbg !9057
  br i1 %13, label %19, label %14, !dbg !9058

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !9047, metadata !DIExpression()), !dbg !9049
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !9059
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !9059
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !9059
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #25, !dbg !9061
  br label %19, !dbg !9062

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9047, metadata !DIExpression()), !dbg !9049
  %20 = icmp eq %struct._snode* %8, null, !dbg !9063
  br i1 %20, label %21, label %6, !dbg !9063

21:                                               ; preds = %19, %3
  ret void, !dbg !9064
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !9065 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9067, metadata !DIExpression()), !dbg !9068
  %2 = and i32 %0, 255, !dbg !9069
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !9069
  %4 = load volatile i32, i32* %3, align 4, !dbg !9069
  %5 = lshr i32 %0, 16, !dbg !9069
  %6 = and i32 %4, %5, !dbg !9069
  call void @llvm.dbg.value(metadata i32 %5, metadata !9023, metadata !DIExpression()) #24, !dbg !9070
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #29, !dbg !9072, !srcloc !9030
  call void @llvm.dbg.value(metadata i32 %7, metadata !9026, metadata !DIExpression()) #24, !dbg !9070
  call void @llvm.dbg.value(metadata i32 %7, metadata !9031, metadata !DIExpression()) #24, !dbg !9073
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #24, !dbg !9075, !range !3508
  %9 = lshr i32 %6, %8, !dbg !9076
  ret i32 %9, !dbg !9077
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9078 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9083, metadata !DIExpression()), !dbg !9085
  call void @llvm.dbg.value(metadata i32 %1, metadata !9084, metadata !DIExpression()), !dbg !9085
  %3 = shl i32 %1, 16, !dbg !9086
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !9086
  store volatile i32 %3, i32* %4, align 4, !dbg !9086
  ret void, !dbg !9087
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #16 !dbg !9088 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9092, metadata !DIExpression()), !dbg !9093
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9094
  %3 = load volatile i32, i32* %2, align 4, !dbg !9094
  ret i32 %3, !dbg !9095
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9096 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9098, metadata !DIExpression()), !dbg !9100
  call void @llvm.dbg.value(metadata i32 %1, metadata !9099, metadata !DIExpression()), !dbg !9100
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9101
  store volatile i32 %1, i32* %3, align 4, !dbg !9101
  ret void, !dbg !9102
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #16 !dbg !9103 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9105, metadata !DIExpression()), !dbg !9106
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !9107
  %3 = load volatile i32, i32* %2, align 4, !dbg !9107
  ret i32 %3, !dbg !9108
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #7 !dbg !9109 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9113, metadata !DIExpression()), !dbg !9115
  call void @llvm.dbg.value(metadata i32* %1, metadata !9114, metadata !DIExpression()), !dbg !9115
  %3 = and i32 %0, 131072, !dbg !9116
  %4 = icmp eq i32 %3, 0, !dbg !9118
  br i1 %4, label %22, label %5, !dbg !9119

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !9120
  %6 = and i32 %0, 2, !dbg !9122
  %7 = icmp eq i32 %6, 0, !dbg !9124
  br i1 %7, label %11, label %8, !dbg !9125

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !9126
  %10 = icmp eq i32 %9, 0, !dbg !9126
  br i1 %10, label %33, label %11, !dbg !9129

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !9130
  store i32 %12, i32* %1, align 4, !dbg !9130
  %13 = and i32 %0, 16, !dbg !9131
  %14 = icmp eq i32 %13, 0, !dbg !9133
  br i1 %14, label %17, label %15, !dbg !9134

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !9135
  br label %31, !dbg !9137

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !9138
  %19 = icmp eq i32 %18, 0, !dbg !9140
  br i1 %19, label %33, label %20, !dbg !9141

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !9142
  br label %31, !dbg !9144

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !9145
  %24 = icmp eq i32 %23, 0, !dbg !9147
  br i1 %24, label %31, label %25, !dbg !9148

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !9149
  %27 = icmp eq i32 %26, 0, !dbg !9152
  br i1 %27, label %28, label %31, !dbg !9153

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !9154
  br label %33, !dbg !9155

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !9115
  ret i32 %34, !dbg !9155
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !9156 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9160, metadata !DIExpression()), !dbg !9171
  call void @llvm.dbg.value(metadata i32 %1, metadata !9161, metadata !DIExpression()), !dbg !9171
  call void @llvm.dbg.value(metadata i32 %2, metadata !9162, metadata !DIExpression()), !dbg !9171
  call void @llvm.dbg.value(metadata i32 %3, metadata !9163, metadata !DIExpression()), !dbg !9171
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9172
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9172
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9172
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9164, metadata !DIExpression()), !dbg !9171
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !9173
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !9173
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !9173
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !9165, metadata !DIExpression()), !dbg !9171
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #26, !dbg !9174
  call void @llvm.dbg.value(metadata i32 %11, metadata !9166, metadata !DIExpression()), !dbg !9171
  %12 = and i32 %2, 48, !dbg !9175
  call void @llvm.dbg.value(metadata i32 %12, metadata !9167, metadata !DIExpression()), !dbg !9171
  call void @llvm.dbg.value(metadata i32 %2, metadata !9168, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !9171
  call void @llvm.dbg.value(metadata i32 %2, metadata !9169, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !9171
  call void @llvm.dbg.value(metadata i32 %2, metadata !9170, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !9171
  %13 = lshr i32 %2, 6, !dbg !9176
  %14 = and i32 %13, 1, !dbg !9176
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #26, !dbg !9177
  %15 = lshr i32 %2, 7, !dbg !9178
  %16 = and i32 %15, 3, !dbg !9178
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #26, !dbg !9179
  %17 = lshr i32 %2, 9, !dbg !9180
  %18 = and i32 %17, 3, !dbg !9180
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #26, !dbg !9181
  %19 = icmp eq i32 %12, 32, !dbg !9182
  br i1 %19, label %20, label %24, !dbg !9184

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !9185
  br i1 %21, label %22, label %23, !dbg !9188

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !9189
  br label %24, !dbg !9191

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !9192
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !9194
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #26, !dbg !9195
  ret void, !dbg !9196
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #11 !dbg !9197 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9199, metadata !DIExpression()), !dbg !9201
  %2 = shl nuw i32 1, %0, !dbg !9202
  call void @llvm.dbg.value(metadata i32 %2, metadata !9200, metadata !DIExpression()), !dbg !9201
  ret i32 %2, !dbg !9203
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !9204 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9208, metadata !DIExpression()), !dbg !9211
  call void @llvm.dbg.value(metadata i32 %1, metadata !9209, metadata !DIExpression()), !dbg !9211
  call void @llvm.dbg.value(metadata i32 %2, metadata !9210, metadata !DIExpression()), !dbg !9211
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !9212
  %5 = load volatile i32, i32* %4, align 4, !dbg !9212
  %6 = xor i32 %1, -1, !dbg !9212
  %7 = and i32 %5, %6, !dbg !9212
  %8 = mul i32 %2, %1, !dbg !9212
  %9 = or i32 %7, %8, !dbg !9212
  store volatile i32 %9, i32* %4, align 4, !dbg !9212
  ret void, !dbg !9213
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9214 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9216, metadata !DIExpression()), !dbg !9219
  call void @llvm.dbg.value(metadata i32 %1, metadata !9217, metadata !DIExpression()), !dbg !9219
  call void @llvm.dbg.value(metadata i32 %2, metadata !9218, metadata !DIExpression()), !dbg !9219
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !9220
  %5 = load volatile i32, i32* %4, align 4, !dbg !9220
  call void @llvm.dbg.value(metadata i32 %1, metadata !9023, metadata !DIExpression()) #24, !dbg !9221
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #29, !dbg !9223, !srcloc !9030
  call void @llvm.dbg.value(metadata i32 %6, metadata !9026, metadata !DIExpression()) #24, !dbg !9221
  call void @llvm.dbg.value(metadata i32 %6, metadata !9031, metadata !DIExpression()) #24, !dbg !9224
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #24, !dbg !9226, !range !3508
  %8 = shl nuw nsw i32 %7, 1, !dbg !9220
  %9 = shl i32 3, %8, !dbg !9220
  %10 = xor i32 %9, -1, !dbg !9220
  %11 = and i32 %5, %10, !dbg !9220
  call void @llvm.dbg.value(metadata i32 %1, metadata !9023, metadata !DIExpression()) #24, !dbg !9227
  call void @llvm.dbg.value(metadata i32 %6, metadata !9026, metadata !DIExpression()) #24, !dbg !9227
  call void @llvm.dbg.value(metadata i32 %6, metadata !9031, metadata !DIExpression()) #24, !dbg !9229
  %12 = shl i32 %2, %8, !dbg !9220
  %13 = or i32 %11, %12, !dbg !9220
  store volatile i32 %13, i32* %4, align 4, !dbg !9220
  ret void, !dbg !9231
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9232 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9234, metadata !DIExpression()), !dbg !9237
  call void @llvm.dbg.value(metadata i32 %1, metadata !9235, metadata !DIExpression()), !dbg !9237
  call void @llvm.dbg.value(metadata i32 %2, metadata !9236, metadata !DIExpression()), !dbg !9237
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !9238
  %5 = load volatile i32, i32* %4, align 4, !dbg !9238
  call void @llvm.dbg.value(metadata i32 %1, metadata !9023, metadata !DIExpression()) #24, !dbg !9239
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #29, !dbg !9241, !srcloc !9030
  call void @llvm.dbg.value(metadata i32 %6, metadata !9026, metadata !DIExpression()) #24, !dbg !9239
  call void @llvm.dbg.value(metadata i32 %6, metadata !9031, metadata !DIExpression()) #24, !dbg !9242
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #24, !dbg !9244, !range !3508
  %8 = shl nuw nsw i32 %7, 1, !dbg !9238
  %9 = shl i32 3, %8, !dbg !9238
  %10 = xor i32 %9, -1, !dbg !9238
  %11 = and i32 %5, %10, !dbg !9238
  call void @llvm.dbg.value(metadata i32 %1, metadata !9023, metadata !DIExpression()) #24, !dbg !9245
  call void @llvm.dbg.value(metadata i32 %6, metadata !9026, metadata !DIExpression()) #24, !dbg !9245
  call void @llvm.dbg.value(metadata i32 %6, metadata !9031, metadata !DIExpression()) #24, !dbg !9247
  %12 = shl i32 %2, %8, !dbg !9238
  %13 = or i32 %11, %12, !dbg !9238
  store volatile i32 %13, i32* %4, align 4, !dbg !9238
  ret void, !dbg !9249
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9250 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9252, metadata !DIExpression()), !dbg !9255
  call void @llvm.dbg.value(metadata i32 %1, metadata !9253, metadata !DIExpression()), !dbg !9255
  call void @llvm.dbg.value(metadata i32 %2, metadata !9254, metadata !DIExpression()), !dbg !9255
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !9256
  %5 = load volatile i32, i32* %4, align 4, !dbg !9256
  call void @llvm.dbg.value(metadata i32 %1, metadata !9023, metadata !DIExpression()) #24, !dbg !9257
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #29, !dbg !9259, !srcloc !9030
  call void @llvm.dbg.value(metadata i32 %6, metadata !9026, metadata !DIExpression()) #24, !dbg !9257
  call void @llvm.dbg.value(metadata i32 %6, metadata !9031, metadata !DIExpression()) #24, !dbg !9260
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #24, !dbg !9262, !range !3508
  %8 = shl nuw nsw i32 %7, 2, !dbg !9256
  %9 = shl i32 15, %8, !dbg !9256
  %10 = xor i32 %9, -1, !dbg !9256
  %11 = and i32 %5, %10, !dbg !9256
  call void @llvm.dbg.value(metadata i32 %1, metadata !9023, metadata !DIExpression()) #24, !dbg !9263
  call void @llvm.dbg.value(metadata i32 %6, metadata !9026, metadata !DIExpression()) #24, !dbg !9263
  call void @llvm.dbg.value(metadata i32 %6, metadata !9031, metadata !DIExpression()) #24, !dbg !9265
  %12 = shl i32 %2, %8, !dbg !9256
  %13 = or i32 %11, %12, !dbg !9256
  store volatile i32 %13, i32* %4, align 4, !dbg !9256
  ret void, !dbg !9267
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9268 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9270, metadata !DIExpression()), !dbg !9273
  call void @llvm.dbg.value(metadata i32 %1, metadata !9271, metadata !DIExpression()), !dbg !9273
  call void @llvm.dbg.value(metadata i32 %2, metadata !9272, metadata !DIExpression()), !dbg !9273
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !9274
  %5 = load volatile i32, i32* %4, align 4, !dbg !9274
  %6 = lshr i32 %1, 8, !dbg !9274
  call void @llvm.dbg.value(metadata i32 %6, metadata !9023, metadata !DIExpression()) #24, !dbg !9275
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #29, !dbg !9277, !srcloc !9030
  call void @llvm.dbg.value(metadata i32 %7, metadata !9026, metadata !DIExpression()) #24, !dbg !9275
  call void @llvm.dbg.value(metadata i32 %7, metadata !9031, metadata !DIExpression()) #24, !dbg !9278
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #24, !dbg !9280, !range !3508
  %9 = shl nuw nsw i32 %8, 2, !dbg !9274
  %10 = shl i32 15, %9, !dbg !9274
  %11 = xor i32 %10, -1, !dbg !9274
  %12 = and i32 %5, %11, !dbg !9274
  call void @llvm.dbg.value(metadata i32 %6, metadata !9023, metadata !DIExpression()) #24, !dbg !9281
  call void @llvm.dbg.value(metadata i32 %7, metadata !9026, metadata !DIExpression()) #24, !dbg !9281
  call void @llvm.dbg.value(metadata i32 %7, metadata !9031, metadata !DIExpression()) #24, !dbg !9283
  %13 = shl i32 %2, %9, !dbg !9274
  %14 = or i32 %12, %13, !dbg !9274
  store volatile i32 %14, i32* %4, align 4, !dbg !9274
  ret void, !dbg !9285
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9286 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9288, metadata !DIExpression()), !dbg !9291
  call void @llvm.dbg.value(metadata i32 %1, metadata !9289, metadata !DIExpression()), !dbg !9291
  call void @llvm.dbg.value(metadata i32 %2, metadata !9290, metadata !DIExpression()), !dbg !9291
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !9292
  %5 = load volatile i32, i32* %4, align 4, !dbg !9292
  call void @llvm.dbg.value(metadata i32 %1, metadata !9023, metadata !DIExpression()) #24, !dbg !9293
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #29, !dbg !9295, !srcloc !9030
  call void @llvm.dbg.value(metadata i32 %6, metadata !9026, metadata !DIExpression()) #24, !dbg !9293
  call void @llvm.dbg.value(metadata i32 %6, metadata !9031, metadata !DIExpression()) #24, !dbg !9296
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #24, !dbg !9298, !range !3508
  %8 = shl nuw nsw i32 %7, 1, !dbg !9292
  %9 = shl i32 3, %8, !dbg !9292
  %10 = xor i32 %9, -1, !dbg !9292
  %11 = and i32 %5, %10, !dbg !9292
  call void @llvm.dbg.value(metadata i32 %1, metadata !9023, metadata !DIExpression()) #24, !dbg !9299
  call void @llvm.dbg.value(metadata i32 %6, metadata !9026, metadata !DIExpression()) #24, !dbg !9299
  call void @llvm.dbg.value(metadata i32 %6, metadata !9031, metadata !DIExpression()) #24, !dbg !9301
  %12 = shl i32 %2, %8, !dbg !9292
  %13 = or i32 %11, %12, !dbg !9292
  store volatile i32 %13, i32* %4, align 4, !dbg !9292
  ret void, !dbg !9303
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !9304 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9306, metadata !DIExpression()), !dbg !9309
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9310
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !9310
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !9310
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !9307, metadata !DIExpression()), !dbg !9309
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !9311
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !9312
  %6 = tail call fastcc zeroext i1 @device_is_ready.71() #26, !dbg !9313
  br i1 %6, label %7, label %11, !dbg !9315

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #26, !dbg !9316
  call void @llvm.dbg.value(metadata i32 %8, metadata !9308, metadata !DIExpression()), !dbg !9309
  %9 = icmp slt i32 %8, 0, !dbg !9317
  %10 = select i1 %9, i32 %8, i32 0, !dbg !9319
  br label %11, !dbg !9319

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !9309
  ret i32 %12, !dbg !9320
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.71() unnamed_addr #1 !dbg !9321 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9325, metadata !DIExpression()), !dbg !9326
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9327, !srcloc !9329
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.72() #26, !dbg !9330
  ret i1 %1, !dbg !9331
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !9332 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9336, metadata !DIExpression()), !dbg !9341
  call void @llvm.dbg.value(metadata i8 1, metadata !9337, metadata !DIExpression()), !dbg !9341
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* undef, metadata !9338, metadata !DIExpression()), !dbg !9341
  call void @llvm.dbg.value(metadata i32 0, metadata !9339, metadata !DIExpression()), !dbg !9341
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9340, metadata !DIExpression()), !dbg !9341
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9342
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !9342
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !9342
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !9338, metadata !DIExpression()), !dbg !9341
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !9343
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !9346
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #26, !dbg !9347
  call void @llvm.dbg.value(metadata i32 %7, metadata !9339, metadata !DIExpression()), !dbg !9341
  call void @llvm.dbg.value(metadata i32 %7, metadata !9339, metadata !DIExpression()), !dbg !9341
  ret i32 %7, !dbg !9348
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.72() unnamed_addr #1 !dbg !9349 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9351, metadata !DIExpression()), !dbg !9352
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_9) #25, !dbg !9353
  ret i1 %1, !dbg !9354
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !9355 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9359, metadata !DIExpression()), !dbg !9367
  call void @llvm.dbg.value(metadata i32 %1, metadata !9360, metadata !DIExpression()), !dbg !9367
  call void @llvm.dbg.value(metadata i32 %2, metadata !9361, metadata !DIExpression()), !dbg !9367
  call void @llvm.dbg.value(metadata i32 %3, metadata !9362, metadata !DIExpression()), !dbg !9367
  call void @llvm.dbg.value(metadata i32 0, metadata !9363, metadata !DIExpression()), !dbg !9367
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #26, !dbg !9368
  %5 = icmp eq i32 %3, 17, !dbg !9369
  br i1 %5, label %6, label %14, !dbg !9370

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !9371
  call void @llvm.dbg.value(metadata i32 %7, metadata !9364, metadata !DIExpression()), !dbg !9372
  %8 = icmp eq i32 %7, 0, !dbg !9373
  %9 = shl nuw i32 1, %1, !dbg !9375
  br i1 %8, label %12, label %10, !dbg !9376

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !9377
  br label %14, !dbg !9379

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !9380
  br label %14, !dbg !9383

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !9384
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #17 !dbg !9385 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9387, metadata !DIExpression()), !dbg !9391
  call void @llvm.dbg.value(metadata i8* %1, metadata !9388, metadata !DIExpression()), !dbg !9391
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9392
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9392
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9392
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9389, metadata !DIExpression()), !dbg !9391
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9393
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9393
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #26, !dbg !9395
  %9 = icmp eq i32 %8, 0, !dbg !9395
  br i1 %9, label %12, label %10, !dbg !9396

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9397
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #26, !dbg !9399
  br label %12, !dbg !9400

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9401
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #26, !dbg !9403
  %15 = icmp eq i32 %14, 0, !dbg !9403
  br i1 %15, label %19, label %16, !dbg !9404

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9405
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #26, !dbg !9406
  store i8 %18, i8* %1, align 1, !dbg !9407
  br label %19, !dbg !9408

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !9391
  ret i32 %20, !dbg !9409
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !9410 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9412, metadata !DIExpression()), !dbg !9416
  call void @llvm.dbg.value(metadata i8 %1, metadata !9413, metadata !DIExpression()), !dbg !9416
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9417
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9417
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9417
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9414, metadata !DIExpression()), !dbg !9416
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !9418

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9419
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #26, !dbg !9422
  %10 = icmp eq i32 %9, 0, !dbg !9422
  br i1 %10, label %18, label %11, !dbg !9423

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !9424, !srcloc !9431
  call void @llvm.dbg.value(metadata i32 undef, metadata !9427, metadata !DIExpression()) #24, !dbg !9432
  call void @llvm.dbg.value(metadata i32 undef, metadata !9428, metadata !DIExpression()) #24, !dbg !9432
  call void @llvm.dbg.value(metadata i32 undef, metadata !9415, metadata !DIExpression()), !dbg !9416
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9433
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #26, !dbg !9435
  %15 = icmp eq i32 %14, 0, !dbg !9435
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !9424
  br i1 %15, label %17, label %19, !dbg !9436

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !9427, metadata !DIExpression()) #24, !dbg !9432
  call void @llvm.dbg.value(metadata i32 %16, metadata !9415, metadata !DIExpression()), !dbg !9416
  call void @llvm.dbg.value(metadata i32 undef, metadata !9437, metadata !DIExpression()) #24, !dbg !9440
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #24, !dbg !9442, !srcloc !9443
  br label %18, !dbg !9444

18:                                               ; preds = %17, %7
  br label %7, !dbg !9419, !llvm.loop !9445

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !9424
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9447
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #26, !dbg !9448
  call void @llvm.dbg.value(metadata i32 %20, metadata !9437, metadata !DIExpression()) #24, !dbg !9449
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #24, !dbg !9451, !srcloc !9443
  ret void, !dbg !9452
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #17 !dbg !9453 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9455, metadata !DIExpression()), !dbg !9458
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9459
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9459
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9459
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9456, metadata !DIExpression()), !dbg !9458
  call void @llvm.dbg.value(metadata i32 0, metadata !9457, metadata !DIExpression()), !dbg !9458
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9460
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9460
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #26, !dbg !9462
  %8 = icmp ne i32 %7, 0, !dbg !9462
  %9 = zext i1 %8 to i32, !dbg !9463
  call void @llvm.dbg.value(metadata i32 %9, metadata !9457, metadata !DIExpression()), !dbg !9458
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9464
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #26, !dbg !9466
  %12 = icmp eq i32 %11, 0, !dbg !9466
  %13 = or i32 %9, 2, !dbg !9467
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !9467
  call void @llvm.dbg.value(metadata i32 %14, metadata !9457, metadata !DIExpression()), !dbg !9458
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9468
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #26, !dbg !9470
  %17 = icmp eq i32 %16, 0, !dbg !9470
  %18 = or i32 %14, 4, !dbg !9471
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !9471
  call void @llvm.dbg.value(metadata i32 %19, metadata !9457, metadata !DIExpression()), !dbg !9458
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9472
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #26, !dbg !9474
  %22 = icmp eq i32 %21, 0, !dbg !9474
  %23 = or i32 %19, 8, !dbg !9475
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !9475
  call void @llvm.dbg.value(metadata i32 %24, metadata !9457, metadata !DIExpression()), !dbg !9458
  %25 = and i32 %24, 8, !dbg !9476
  %26 = icmp eq i32 %25, 0, !dbg !9476
  br i1 %26, label %29, label %27, !dbg !9478

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9479
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #26, !dbg !9481
  br label %29, !dbg !9482

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !9483
  %31 = icmp eq i32 %30, 0, !dbg !9483
  br i1 %31, label %34, label %32, !dbg !9485

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9486
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #26, !dbg !9488
  br label %34, !dbg !9489

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !9490
  %36 = icmp eq i32 %35, 0, !dbg !9490
  br i1 %36, label %39, label %37, !dbg !9492

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9493
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #26, !dbg !9495
  br label %39, !dbg !9496

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !9497
  %41 = icmp eq i32 %40, 0, !dbg !9497
  br i1 %41, label %44, label %42, !dbg !9499

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9500
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #26, !dbg !9502
  br label %44, !dbg !9503

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9504
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #26, !dbg !9505
  ret i32 %24, !dbg !9506
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !9507 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9509, metadata !DIExpression()), !dbg !9518
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9510, metadata !DIExpression()), !dbg !9518
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9519
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9519
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9519
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9511, metadata !DIExpression()), !dbg !9518
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9520
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !9520
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !9520
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !9512, metadata !DIExpression()), !dbg !9518
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9521
  %10 = load i8, i8* %9, align 4, !dbg !9521
  %11 = zext i8 %10 to i32, !dbg !9522
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #26, !dbg !9523
  call void @llvm.dbg.value(metadata i32 %12, metadata !9514, metadata !DIExpression()), !dbg !9518
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9524
  %14 = load i8, i8* %13, align 1, !dbg !9524
  %15 = zext i8 %14 to i32, !dbg !9525
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #26, !dbg !9526
  call void @llvm.dbg.value(metadata i32 %16, metadata !9515, metadata !DIExpression()), !dbg !9518
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9527
  %18 = load i8, i8* %17, align 2, !dbg !9527
  %19 = zext i8 %18 to i32, !dbg !9528
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #26, !dbg !9529
  call void @llvm.dbg.value(metadata i32 %20, metadata !9516, metadata !DIExpression()), !dbg !9518
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9530
  %22 = load i8, i8* %21, align 1, !dbg !9530
  %23 = zext i8 %22 to i32, !dbg !9531
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #26, !dbg !9532
  call void @llvm.dbg.value(metadata i32 %24, metadata !9517, metadata !DIExpression()), !dbg !9518
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !9533

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !9535
  br i1 %26, label %69, label %27, !dbg !9537

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !9538

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !9539
  br i1 %29, label %65, label %30, !dbg !9539

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !9541
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !9518
  br i1 %31, label %38, label %34, !dbg !9543

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !9544
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073812480, label %36
  ], !dbg !9544

36:                                               ; preds = %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !9547
  br i1 %37, label %38, label %69, !dbg !9548

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9549
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #26, !dbg !9550
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #26, !dbg !9551
  %41 = icmp eq i32 %12, %40, !dbg !9553
  br i1 %41, label %43, label %42, !dbg !9554

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #26, !dbg !9555
  br label %43, !dbg !9557

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #26, !dbg !9558
  %45 = icmp eq i32 %16, %44, !dbg !9560
  br i1 %45, label %47, label %46, !dbg !9561

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #26, !dbg !9562
  br label %47, !dbg !9564

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #26, !dbg !9565
  %49 = icmp eq i32 %20, %48, !dbg !9567
  br i1 %49, label %51, label %50, !dbg !9568

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #26, !dbg !9569
  br label %51, !dbg !9571

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #26, !dbg !9572
  %53 = icmp eq i32 %24, %52, !dbg !9574
  br i1 %53, label %55, label %54, !dbg !9575

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #26, !dbg !9576
  br label %55, !dbg !9578

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !9579
  %57 = load i32, i32* %56, align 4, !dbg !9579
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !9581
  %59 = load i32, i32* %58, align 4, !dbg !9581
  %60 = icmp eq i32 %57, %59, !dbg !9582
  br i1 %60, label %63, label %61, !dbg !9583

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #26, !dbg !9584
  %62 = load i32, i32* %56, align 4, !dbg !9586
  store i32 %62, i32* %58, align 4, !dbg !9587
  br label %63, !dbg !9588

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !9589
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #26, !dbg !9590
  br label %69, !dbg !9591

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !9539
  %67 = and i8 %66, 1, !dbg !9539
  %68 = icmp eq i8 %67, 0, !dbg !9539
  br i1 %68, label %30, label %69, !dbg !9539

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !9518
  ret i32 %70, !dbg !9592
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #21 !dbg !9593 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9595, metadata !DIExpression()), !dbg !9598
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9596, metadata !DIExpression()), !dbg !9598
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9599
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !9599
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !9599
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !9597, metadata !DIExpression()), !dbg !9598
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !9600
  %7 = load i32, i32* %6, align 4, !dbg !9600
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !9601
  store i32 %7, i32* %8, align 4, !dbg !9602
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !9603, !range !9604
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #26, !dbg !9605
  %11 = trunc i32 %10 to i8, !dbg !9605
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9606
  store i8 %11, i8* %12, align 4, !dbg !9607
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #26, !dbg !9608, !range !9609
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #26, !dbg !9610
  %15 = trunc i32 %14 to i8, !dbg !9610
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9611
  store i8 %15, i8* %16, align 1, !dbg !9612
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #26, !dbg !9613
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !9614, !range !9604
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #26, !dbg !9615
  %20 = trunc i32 %19 to i8, !dbg !9615
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9616
  store i8 %20, i8* %21, align 2, !dbg !9617
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #26, !dbg !9618, !range !9619
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #26, !dbg !9620
  %24 = trunc i32 %23 to i8, !dbg !9620
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9621
  store i8 %24, i8* %25, align 1, !dbg !9622
  ret i32 0, !dbg !9623
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !9624 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9628, metadata !DIExpression()), !dbg !9630
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9631
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9631
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9631
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9629, metadata !DIExpression()), !dbg !9630
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9632
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9632
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #26, !dbg !9633
  ret i32 %7, !dbg !9634
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #11 !dbg !9635 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9639, metadata !DIExpression()), !dbg !9640
  %2 = icmp eq i32 %0, 1024, !dbg !9641
  %3 = select i1 %2, i32 2, i32 0, !dbg !9641
  %4 = icmp eq i32 %0, 1536, !dbg !9641
  %5 = select i1 %4, i32 1, i32 %3, !dbg !9641
  ret i32 %5, !dbg !9642
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !9643 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9645, metadata !DIExpression()), !dbg !9647
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9648
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9648
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9648
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9646, metadata !DIExpression()), !dbg !9647
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9649
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9649
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #26, !dbg !9650
  ret i32 %7, !dbg !9651
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #9 !dbg !9652 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9656, metadata !DIExpression()), !dbg !9657
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !9658
  %3 = icmp ult i32 %2, 4, !dbg !9658
  br i1 %3, label %4, label %7, !dbg !9658

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !9658
  %6 = load i32, i32* %5, align 4, !dbg !9658
  br label %7, !dbg !9658

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !9659
  ret i32 %8, !dbg !9661
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !9662 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9664, metadata !DIExpression()), !dbg !9666
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9667
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9667
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9667
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9665, metadata !DIExpression()), !dbg !9666
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9668
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9668
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #26, !dbg !9669
  ret i32 %7, !dbg !9670
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !9671 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9675, metadata !DIExpression()), !dbg !9677
  call void @llvm.dbg.value(metadata i32 %1, metadata !9676, metadata !DIExpression()), !dbg !9677
  %3 = icmp eq i32 %0, 4096, !dbg !9678
  %4 = icmp eq i32 %1, 0, !dbg !9678
  %5 = select i1 %4, i32 4, i32 3, !dbg !9678
  %6 = select i1 %4, i32 3, i32 2, !dbg !9678
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !9678
  ret i32 %7, !dbg !9679
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !9680 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9682, metadata !DIExpression()), !dbg !9684
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9685
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9685
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9685
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9683, metadata !DIExpression()), !dbg !9684
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9686
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9686
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #26, !dbg !9687
  ret i32 %7, !dbg !9688
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #11 !dbg !9689 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9693, metadata !DIExpression()), !dbg !9694
  %2 = icmp eq i32 %0, 768, !dbg !9695
  %3 = zext i1 %2 to i32, !dbg !9694
  ret i32 %3, !dbg !9697
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9698 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9703, metadata !DIExpression()), !dbg !9704
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !9705
  %3 = load volatile i32, i32* %2, align 4, !dbg !9705
  %4 = and i32 %3, 768, !dbg !9705
  ret i32 %4, !dbg !9706
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9707 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9709, metadata !DIExpression()), !dbg !9710
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9711
  %3 = load volatile i32, i32* %2, align 4, !dbg !9711
  %4 = and i32 %3, 4096, !dbg !9711
  ret i32 %4, !dbg !9712
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9713 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9715, metadata !DIExpression()), !dbg !9716
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !9717
  %3 = load volatile i32, i32* %2, align 4, !dbg !9717
  %4 = and i32 %3, 12288, !dbg !9717
  ret i32 %4, !dbg !9718
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9719 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9721, metadata !DIExpression()), !dbg !9722
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9723
  %3 = load volatile i32, i32* %2, align 4, !dbg !9723
  %4 = and i32 %3, 1536, !dbg !9723
  ret i32 %4, !dbg !9724
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #11 !dbg !9725 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9729, metadata !DIExpression()), !dbg !9730
  %2 = icmp eq i32 %0, 2, !dbg !9731
  %3 = select i1 %2, i32 1024, i32 0, !dbg !9731
  %4 = icmp eq i32 %0, 1, !dbg !9731
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !9731
  ret i32 %5, !dbg !9732
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #11 !dbg !9733 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9737, metadata !DIExpression()), !dbg !9738
  %2 = icmp ult i32 %0, 3, !dbg !9739
  br i1 %2, label %3, label %6, !dbg !9739

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !9739
  %5 = load i32, i32* %4, align 4, !dbg !9739
  br label %6, !dbg !9739

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !9740
  ret i32 %7, !dbg !9742
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !9743 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9747, metadata !DIExpression()), !dbg !9749
  call void @llvm.dbg.value(metadata i32 %1, metadata !9748, metadata !DIExpression()), !dbg !9749
  %3 = icmp eq i32 %0, 4, !dbg !9750
  %4 = icmp eq i32 %1, 0, !dbg !9750
  %5 = select i1 %4, i32 0, i32 4096, !dbg !9750
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !9750
  ret i32 %6, !dbg !9751
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #11 !dbg !9752 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9756, metadata !DIExpression()), !dbg !9757
  %2 = icmp eq i32 %0, 1, !dbg !9758
  %3 = select i1 %2, i32 768, i32 0, !dbg !9757
  ret i32 %3, !dbg !9760
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9761 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9765, metadata !DIExpression()), !dbg !9766
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9767
  %3 = load volatile i32, i32* %2, align 4, !dbg !9767
  %4 = and i32 %3, -8193, !dbg !9767
  store volatile i32 %4, i32* %2, align 4, !dbg !9767
  ret void, !dbg !9768
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !9769 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9773, metadata !DIExpression()), !dbg !9776
  call void @llvm.dbg.value(metadata i32 %1, metadata !9774, metadata !DIExpression()), !dbg !9776
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9777
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9777
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9777
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9775, metadata !DIExpression()), !dbg !9776
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9778
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9778
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !9779
  ret void, !dbg !9780
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !9781 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9783, metadata !DIExpression()), !dbg !9786
  call void @llvm.dbg.value(metadata i32 %1, metadata !9784, metadata !DIExpression()), !dbg !9786
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9787
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9787
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9787
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9785, metadata !DIExpression()), !dbg !9786
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9788
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9788
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !9789
  ret void, !dbg !9790
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !9791 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9793, metadata !DIExpression()), !dbg !9796
  call void @llvm.dbg.value(metadata i32 %1, metadata !9794, metadata !DIExpression()), !dbg !9796
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9797
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9797
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9797
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9795, metadata !DIExpression()), !dbg !9796
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9798
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9798
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !9799
  ret void, !dbg !9800
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !9801 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9803, metadata !DIExpression()), !dbg !9806
  call void @llvm.dbg.value(metadata i32 %1, metadata !9804, metadata !DIExpression()), !dbg !9806
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9807
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9807
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9807
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9805, metadata !DIExpression()), !dbg !9806
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9808
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9808
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !9809
  ret void, !dbg !9810
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !9811 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9813, metadata !DIExpression()), !dbg !9818
  call void @llvm.dbg.value(metadata i32 %1, metadata !9814, metadata !DIExpression()), !dbg !9818
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9819
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !9819
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !9819
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !9815, metadata !DIExpression()), !dbg !9818
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9820
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !9820
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !9820
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !9816, metadata !DIExpression()), !dbg !9818
  %10 = bitcast i32* %3 to i8*, !dbg !9821
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #24, !dbg !9821
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !9822
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !9822
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !9826
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !9826
  %15 = load i8*, i8** %14, align 4, !dbg !9826
  call void @llvm.dbg.value(metadata i32* %3, metadata !9817, metadata !DIExpression(DW_OP_deref)), !dbg !9818
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #26, !dbg !9827
  %17 = icmp slt i32 %16, 0, !dbg !9828
  br i1 %17, label %23, label %18, !dbg !9829

18:                                               ; preds = %2
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !9830
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !9830
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %20) #26, !dbg !9831
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !9832
  %22 = load i32, i32* %3, align 4, !dbg !9833
  call void @llvm.dbg.value(metadata i32 %22, metadata !9817, metadata !DIExpression()), !dbg !9818
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %21, i32 noundef %22, i32 noundef %1) #26, !dbg !9834
  br label %23, !dbg !9835

23:                                               ; preds = %2, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #24, !dbg !9835
  ret void, !dbg !9835
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9836 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9838, metadata !DIExpression()), !dbg !9839
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9840
  %3 = load volatile i32, i32* %2, align 4, !dbg !9840
  %4 = or i32 %3, 8192, !dbg !9840
  store volatile i32 %4, i32* %2, align 4, !dbg !9840
  ret void, !dbg !9841
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !9842 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9844, metadata !DIExpression()), !dbg !9848
  call void @llvm.dbg.value(metadata i8* %1, metadata !9845, metadata !DIExpression()), !dbg !9848
  call void @llvm.dbg.value(metadata i32* %2, metadata !9846, metadata !DIExpression()), !dbg !9848
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !9849
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !9849
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !9849
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !9847, metadata !DIExpression()), !dbg !9848
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !9850
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !9850
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !9852
  br i1 %9, label %12, label %10, !dbg !9853

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #25, !dbg !9854
  br label %12, !dbg !9855

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !9848
  ret i32 %13, !dbg !9856
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9857 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9861, metadata !DIExpression()), !dbg !9863
  call void @llvm.dbg.value(metadata i32 0, metadata !9862, metadata !DIExpression()), !dbg !9863
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9864
  %3 = load volatile i32, i32* %2, align 4, !dbg !9864
  %4 = and i32 %3, -32769, !dbg !9864
  store volatile i32 %4, i32* %2, align 4, !dbg !9864
  ret void, !dbg !9865
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !9866 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9870, metadata !DIExpression()), !dbg !9874
  call void @llvm.dbg.value(metadata i32 %1, metadata !9871, metadata !DIExpression()), !dbg !9874
  call void @llvm.dbg.value(metadata i32 0, metadata !9872, metadata !DIExpression()), !dbg !9874
  call void @llvm.dbg.value(metadata i32 %2, metadata !9873, metadata !DIExpression()), !dbg !9874
  %4 = zext i32 %1 to i64, !dbg !9875
  %5 = mul nuw nsw i64 %4, 25, !dbg !9875
  %6 = zext i32 %2 to i64, !dbg !9875
  %7 = shl nuw nsw i64 %6, 2, !dbg !9875
  %8 = udiv i64 %5, %7, !dbg !9875
  %9 = trunc i64 %8 to i32, !dbg !9875
  %10 = udiv i32 %9, 100, !dbg !9875
  %11 = shl nuw nsw i32 %10, 4, !dbg !9875
  %12 = mul i32 %10, -100, !dbg !9875
  %13 = add i32 %12, %9, !dbg !9875
  %14 = shl i32 %13, 4, !dbg !9875
  %15 = add i32 %14, 50, !dbg !9875
  %16 = udiv i32 %15, 100, !dbg !9875
  %17 = and i32 %16, 240, !dbg !9875
  %18 = add nuw nsw i32 %17, %11, !dbg !9875
  %19 = and i32 %16, 15, !dbg !9875
  %20 = and i32 %18, 65520, !dbg !9878
  %21 = or i32 %20, %19, !dbg !9878
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !9879
  store volatile i32 %21, i32* %22, align 4, !dbg !9880
  ret void, !dbg !9881
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9882 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9884, metadata !DIExpression()), !dbg !9886
  call void @llvm.dbg.value(metadata i32 %1, metadata !9885, metadata !DIExpression()), !dbg !9886
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !9887
  %4 = load volatile i32, i32* %3, align 4, !dbg !9887
  %5 = and i32 %4, -769, !dbg !9887
  %6 = or i32 %5, %1, !dbg !9887
  store volatile i32 %6, i32* %3, align 4, !dbg !9887
  ret void, !dbg !9888
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9889 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9891, metadata !DIExpression()), !dbg !9893
  call void @llvm.dbg.value(metadata i32 %1, metadata !9892, metadata !DIExpression()), !dbg !9893
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9894
  %4 = load volatile i32, i32* %3, align 4, !dbg !9894
  %5 = and i32 %4, -4097, !dbg !9894
  %6 = or i32 %5, %1, !dbg !9894
  store volatile i32 %6, i32* %3, align 4, !dbg !9894
  ret void, !dbg !9895
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9896 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9898, metadata !DIExpression()), !dbg !9900
  call void @llvm.dbg.value(metadata i32 %1, metadata !9899, metadata !DIExpression()), !dbg !9900
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !9901
  %4 = load volatile i32, i32* %3, align 4, !dbg !9901
  %5 = and i32 %4, -12289, !dbg !9901
  %6 = or i32 %5, %1, !dbg !9901
  store volatile i32 %6, i32* %3, align 4, !dbg !9901
  ret void, !dbg !9902
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9903 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9905, metadata !DIExpression()), !dbg !9907
  call void @llvm.dbg.value(metadata i32 %1, metadata !9906, metadata !DIExpression()), !dbg !9907
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9908
  %4 = load volatile i32, i32* %3, align 4, !dbg !9908
  %5 = and i32 %4, -1537, !dbg !9908
  %6 = or i32 %5, %1, !dbg !9908
  store volatile i32 %6, i32* %3, align 4, !dbg !9908
  ret void, !dbg !9909
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9910 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9912, metadata !DIExpression()), !dbg !9913
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9914
  %3 = load volatile i32, i32* %2, align 4, !dbg !9914
  %4 = lshr i32 %3, 3, !dbg !9915
  %5 = and i32 %4, 1, !dbg !9915
  ret i32 %5, !dbg !9916
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9917 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9919, metadata !DIExpression()), !dbg !9920
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9921
  %3 = load volatile i32, i32* %2, align 4, !dbg !9921
  %4 = and i32 %3, 1, !dbg !9921
  ret i32 %4, !dbg !9922
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9923 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9925, metadata !DIExpression()), !dbg !9926
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9927
  %3 = load volatile i32, i32* %2, align 4, !dbg !9927
  %4 = lshr i32 %3, 1, !dbg !9928
  %5 = and i32 %4, 1, !dbg !9928
  ret i32 %5, !dbg !9929
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9930 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9932, metadata !DIExpression()), !dbg !9933
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9934
  %3 = load volatile i32, i32* %2, align 4, !dbg !9934
  %4 = lshr i32 %3, 8, !dbg !9935
  %5 = and i32 %4, 1, !dbg !9935
  ret i32 %5, !dbg !9936
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9937 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9939, metadata !DIExpression()), !dbg !9940
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9941
  store volatile i32 -257, i32* %2, align 4, !dbg !9941
  ret void, !dbg !9942
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !9943 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9945, metadata !DIExpression()), !dbg !9947
  %3 = bitcast i32* %2 to i8*, !dbg !9948
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !9948
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9946, metadata !DIExpression()), !dbg !9949
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9950
  %5 = load volatile i32, i32* %4, align 4, !dbg !9950
  store volatile i32 %5, i32* %2, align 4, !dbg !9951
  %6 = load volatile i32, i32* %2, align 4, !dbg !9952
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9953
  %8 = load volatile i32, i32* %7, align 4, !dbg !9953
  store volatile i32 %8, i32* %2, align 4, !dbg !9954
  %9 = load volatile i32, i32* %2, align 4, !dbg !9955
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !9956
  ret void, !dbg !9956
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !9957 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9959, metadata !DIExpression()), !dbg !9961
  %3 = bitcast i32* %2 to i8*, !dbg !9962
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !9962
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9960, metadata !DIExpression()), !dbg !9963
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9964
  %5 = load volatile i32, i32* %4, align 4, !dbg !9964
  store volatile i32 %5, i32* %2, align 4, !dbg !9965
  %6 = load volatile i32, i32* %2, align 4, !dbg !9966
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9967
  %8 = load volatile i32, i32* %7, align 4, !dbg !9967
  store volatile i32 %8, i32* %2, align 4, !dbg !9968
  %9 = load volatile i32, i32* %2, align 4, !dbg !9969
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !9970
  ret void, !dbg !9970
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !9971 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9973, metadata !DIExpression()), !dbg !9975
  %3 = bitcast i32* %2 to i8*, !dbg !9976
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !9976
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9974, metadata !DIExpression()), !dbg !9977
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9978
  %5 = load volatile i32, i32* %4, align 4, !dbg !9978
  store volatile i32 %5, i32* %2, align 4, !dbg !9979
  %6 = load volatile i32, i32* %2, align 4, !dbg !9980
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9981
  %8 = load volatile i32, i32* %7, align 4, !dbg !9981
  store volatile i32 %8, i32* %2, align 4, !dbg !9982
  %9 = load volatile i32, i32* %2, align 4, !dbg !9983
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !9984
  ret void, !dbg !9984
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !9985 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9987, metadata !DIExpression()), !dbg !9989
  %3 = bitcast i32* %2 to i8*, !dbg !9990
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !9990
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9988, metadata !DIExpression()), !dbg !9991
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9992
  %5 = load volatile i32, i32* %4, align 4, !dbg !9992
  store volatile i32 %5, i32* %2, align 4, !dbg !9993
  %6 = load volatile i32, i32* %2, align 4, !dbg !9994
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9995
  %8 = load volatile i32, i32* %7, align 4, !dbg !9995
  store volatile i32 %8, i32* %2, align 4, !dbg !9996
  %9 = load volatile i32, i32* %2, align 4, !dbg !9997
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !9998
  ret void, !dbg !9998
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9999 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10001, metadata !DIExpression()), !dbg !10002
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10003
  %3 = load volatile i32, i32* %2, align 4, !dbg !10003
  %4 = lshr i32 %3, 7, !dbg !10004
  %5 = and i32 %4, 1, !dbg !10004
  ret i32 %5, !dbg !10005
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !10006 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10010, metadata !DIExpression()), !dbg !10012
  call void @llvm.dbg.value(metadata i8 %1, metadata !10011, metadata !DIExpression()), !dbg !10012
  %3 = zext i8 %1 to i32, !dbg !10013
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10014
  store volatile i32 %3, i32* %4, align 4, !dbg !10015
  ret void, !dbg !10016
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10017 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10019, metadata !DIExpression()), !dbg !10020
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10021
  %3 = load volatile i32, i32* %2, align 4, !dbg !10021
  %4 = lshr i32 %3, 5, !dbg !10022
  %5 = and i32 %4, 1, !dbg !10022
  ret i32 %5, !dbg !10023
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10024 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10028, metadata !DIExpression()), !dbg !10029
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10030
  %3 = load volatile i32, i32* %2, align 4, !dbg !10030
  %4 = trunc i32 %3 to i8, !dbg !10031
  ret i8 %4, !dbg !10032
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !10033 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10035, metadata !DIExpression()), !dbg !10041
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10042
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10042
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10042
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10036, metadata !DIExpression()), !dbg !10041
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10043
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !10043
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !10043
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !10037, metadata !DIExpression()), !dbg !10041
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #26, !dbg !10044
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !10045
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !10045
  %10 = tail call fastcc zeroext i1 @device_is_ready.79(%struct.device* noundef %9) #26, !dbg !10047
  br i1 %10, label %11, label %49, !dbg !10048

11:                                               ; preds = %1
  %12 = load %struct.device*, %struct.device** %8, align 4, !dbg !10049
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !10050
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !10050
  %15 = load i8*, i8** %14, align 4, !dbg !10050
  %16 = tail call fastcc i32 @clock_control_on.80(%struct.device* noundef %12, i8* noundef %15) #26, !dbg !10051
  call void @llvm.dbg.value(metadata i32 %16, metadata !10040, metadata !DIExpression()), !dbg !10041
  %17 = icmp eq i32 %16, 0, !dbg !10052
  br i1 %17, label %18, label %49, !dbg !10054

18:                                               ; preds = %11
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !10055
  %20 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %19, align 4, !dbg !10055
  %21 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %20) #26, !dbg !10056
  call void @llvm.dbg.value(metadata i32 %21, metadata !10040, metadata !DIExpression()), !dbg !10041
  %22 = icmp slt i32 %21, 0, !dbg !10057
  br i1 %22, label %49, label %23, !dbg !10059

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10060
  %25 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10060
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %25) #26, !dbg !10061
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10062
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %26) #26, !dbg !10063
  %27 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !10064
  %28 = load i32, i32* %27, align 4, !dbg !10064
  switch i32 %28, label %30 [
    i32 2, label %31
    i32 1, label %29
  ], !dbg !10066

29:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 1536, metadata !10038, metadata !DIExpression()), !dbg !10041
  call void @llvm.dbg.value(metadata i32 4096, metadata !10039, metadata !DIExpression()), !dbg !10041
  br label %31, !dbg !10067

30:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 0, metadata !10038, metadata !DIExpression()), !dbg !10041
  call void @llvm.dbg.value(metadata i32 0, metadata !10039, metadata !DIExpression()), !dbg !10041
  br label %31

31:                                               ; preds = %23, %29, %30
  %32 = phi i32 [ 1536, %29 ], [ 0, %30 ], [ 1024, %23 ], !dbg !10070
  %33 = phi i32 [ 4096, %29 ], [ 0, %30 ], [ 4096, %23 ], !dbg !10070
  call void @llvm.dbg.value(metadata i32 %33, metadata !10039, metadata !DIExpression()), !dbg !10041
  call void @llvm.dbg.value(metadata i32 %32, metadata !10038, metadata !DIExpression()), !dbg !10041
  %34 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10071
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %34, i32 noundef %33, i32 noundef %32) #26, !dbg !10072
  %35 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !10073
  %36 = load i8, i8* %35, align 4, !dbg !10073, !range !6665
  %37 = icmp eq i8 %36, 0, !dbg !10073
  br i1 %37, label %39, label %38, !dbg !10075

38:                                               ; preds = %31
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #26, !dbg !10076
  br label %39, !dbg !10078

39:                                               ; preds = %38, %31
  %40 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !10079
  %41 = load i32, i32* %40, align 4, !dbg !10079
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %41) #26, !dbg !10080
  %42 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !10081
  %43 = load i8, i8* %42, align 4, !dbg !10081, !range !6665
  %44 = icmp eq i8 %43, 0, !dbg !10081
  br i1 %44, label %47, label %45, !dbg !10083

45:                                               ; preds = %39
  %46 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10084
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %46) #26, !dbg !10086
  br label %47, !dbg !10087

47:                                               ; preds = %45, %39
  %48 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10088
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %48) #26, !dbg !10089
  br label %49, !dbg !10090

49:                                               ; preds = %18, %11, %1, %47
  %50 = phi i32 [ 0, %47 ], [ -19, %1 ], [ %16, %11 ], [ %21, %18 ], !dbg !10041
  ret i32 %50, !dbg !10091
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #7 !dbg !10092 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10096, metadata !DIExpression()), !dbg !10100
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10101
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !10101
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !10101
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !10097, metadata !DIExpression()), !dbg !10100
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10098, metadata !DIExpression()), !dbg !10100
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !10102
  store %struct.device* @__device_dts_ord_9, %struct.device** %5, align 4, !dbg !10103
  ret void, !dbg !10104
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.79(%struct.device* noundef %0) unnamed_addr #1 !dbg !10105 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10109, metadata !DIExpression()), !dbg !10110
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !10111, !srcloc !10113
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.81(%struct.device* noundef %0) #26, !dbg !10114
  ret i1 %2, !dbg !10115
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.80(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !10116 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10118, metadata !DIExpression()), !dbg !10121
  call void @llvm.dbg.value(metadata i8* %1, metadata !10119, metadata !DIExpression()), !dbg !10121
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10122
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !10122
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !10122
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !10120, metadata !DIExpression()), !dbg !10121
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !10123
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !10123
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #25, !dbg !10124
  ret i32 %8, !dbg !10125
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !10126 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10130, metadata !DIExpression()), !dbg !10134
  call void @llvm.dbg.value(metadata i8 0, metadata !10131, metadata !DIExpression()), !dbg !10134
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !10135
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #24, !dbg !10135
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10133, metadata !DIExpression(DW_OP_deref)), !dbg !10134
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #25, !dbg !10136
  call void @llvm.dbg.value(metadata i32 %4, metadata !10132, metadata !DIExpression()), !dbg !10134
  %5 = icmp slt i32 %4, 0, !dbg !10137
  br i1 %5, label %9, label %6, !dbg !10139

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !10140
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !10133, metadata !DIExpression()), !dbg !10134
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #26, !dbg !10141
  br label %9, !dbg !10142

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !10134
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #24, !dbg !10143
  ret i32 %10, !dbg !10143
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10144 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10146, metadata !DIExpression()), !dbg !10150
  call void @llvm.dbg.value(metadata i32 12, metadata !10147, metadata !DIExpression()), !dbg !10150
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10151

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10152, metadata !DIExpression()) #24, !dbg !10158
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !10161, !srcloc !10162
  call void @llvm.dbg.value(metadata i32 %4, metadata !10157, metadata !DIExpression()) #24, !dbg !10158
  %5 = or i32 %4, 12, !dbg !10163
  call void @llvm.dbg.value(metadata i32 %5, metadata !10148, metadata !DIExpression()), !dbg !10164
  call void @llvm.dbg.value(metadata i32 %5, metadata !10165, metadata !DIExpression()) #24, !dbg !10172
  call void @llvm.dbg.value(metadata i32* %2, metadata !10170, metadata !DIExpression()) #24, !dbg !10172
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !10174, !srcloc !10175
  call void @llvm.dbg.value(metadata i32 %6, metadata !10171, metadata !DIExpression()) #24, !dbg !10172
  %7 = icmp eq i32 %6, 0, !dbg !10151
  br i1 %7, label %8, label %3, !dbg !10163, !llvm.loop !10176

8:                                                ; preds = %3
  ret void, !dbg !10177
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !10178 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10180, metadata !DIExpression()), !dbg !10184
  call void @llvm.dbg.value(metadata i32 %1, metadata !10181, metadata !DIExpression()), !dbg !10184
  call void @llvm.dbg.value(metadata i32 %2, metadata !10182, metadata !DIExpression()), !dbg !10184
  call void @llvm.dbg.value(metadata i32 0, metadata !10183, metadata !DIExpression()), !dbg !10184
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10185
  %5 = load volatile i32, i32* %4, align 4, !dbg !10185
  %6 = and i32 %5, -5633, !dbg !10185
  %7 = or i32 %2, %1, !dbg !10185
  %8 = or i32 %7, %6, !dbg !10185
  store volatile i32 %8, i32* %4, align 4, !dbg !10185
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10186
  %10 = load volatile i32, i32* %9, align 4, !dbg !10186
  %11 = and i32 %10, -12289, !dbg !10186
  store volatile i32 %11, i32* %9, align 4, !dbg !10186
  ret void, !dbg !10187
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10188 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10190, metadata !DIExpression()), !dbg !10191
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10192
  %3 = load volatile i32, i32* %2, align 4, !dbg !10192
  %4 = or i32 %3, 8, !dbg !10192
  store volatile i32 %4, i32* %2, align 4, !dbg !10192
  ret void, !dbg !10193
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !10194 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !10198, metadata !DIExpression()), !dbg !10201
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !10199, metadata !DIExpression()), !dbg !10201
  call void @llvm.dbg.value(metadata i32 0, metadata !10200, metadata !DIExpression()), !dbg !10201
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !10202
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !10202
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !10203
  %5 = load i8, i8* %4, align 4, !dbg !10203
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #25, !dbg !10204
  ret i32 %6, !dbg !10205
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.81(%struct.device* noundef %0) unnamed_addr #1 !dbg !10206 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10208, metadata !DIExpression()), !dbg !10209
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !10210
  ret i1 %2, !dbg !10211
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #15 !dbg !10212 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10214, metadata !DIExpression()), !dbg !10215
  tail call fastcc void @__NVIC_SetPriority.83() #26, !dbg !10216
  store i32 8399, i32* @last_load, align 4, !dbg !10217
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10218
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10219
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10220
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10221
  %3 = or i32 %2, 7, !dbg !10221
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10221
  ret i32 0, !dbg !10222
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.83() unnamed_addr #15 !dbg !10223 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !10225, metadata !DIExpression()), !dbg !10227
  call void @llvm.dbg.value(metadata i32 1, metadata !10226, metadata !DIExpression()), !dbg !10227
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !10228
  ret void, !dbg !10231
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !10232 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10234, metadata !DIExpression()), !dbg !10236
  %2 = tail call fastcc i32 @elapsed() #26, !dbg !10237
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10238
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10239
  %5 = add i32 %4, %3, !dbg !10239
  store i32 %5, i32* @cycle_count, align 4, !dbg !10239
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10240
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !10241
  %7 = sub i32 %5, %6, !dbg !10244
  %8 = udiv i32 %7, 8400, !dbg !10245
  call void @llvm.dbg.value(metadata i32 %8, metadata !10235, metadata !DIExpression()), !dbg !10236
  %9 = mul nuw i32 %8, 8400, !dbg !10246
  %10 = add i32 %9, %6, !dbg !10247
  store i32 %10, i32* @announced_cycles, align 4, !dbg !10247
  tail call void @sys_clock_announce(i32 noundef %8) #25, !dbg !10248
  tail call void @z_arm_int_exit() #25, !dbg !10249
  ret void, !dbg !10250
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #15 !dbg !10251 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10256
  call void @llvm.dbg.value(metadata i32 %1, metadata !10253, metadata !DIExpression()), !dbg !10257
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10258
  call void @llvm.dbg.value(metadata i32 %2, metadata !10254, metadata !DIExpression()), !dbg !10257
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10259
  call void @llvm.dbg.value(metadata i32 %3, metadata !10255, metadata !DIExpression()), !dbg !10257
  %4 = and i32 %2, 65536, !dbg !10260
  %5 = icmp ne i32 %4, 0, !dbg !10260
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !10262
  %8 = load i32, i32* @last_load, align 4, !dbg !10257
  br i1 %7, label %9, label %13, !dbg !10262

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10263
  %11 = add i32 %10, %8, !dbg !10263
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !10263
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10265
  br label %13, !dbg !10266

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !10267
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10268
  %16 = add i32 %14, %15, !dbg !10269
  ret i32 %16, !dbg !10270
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !10271 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10275, metadata !DIExpression()), !dbg !10288
  call void @llvm.dbg.value(metadata i1 %1, metadata !10276, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10288
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !10289
  br i1 %4, label %5, label %8, !dbg !10289

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10291
  %7 = and i32 %6, -2, !dbg !10291
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10291
  store i32 -16777216, i32* @last_load, align 4, !dbg !10293
  br label %54, !dbg !10294

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !10295
  call void @llvm.dbg.value(metadata i32 %9, metadata !10280, metadata !DIExpression()), !dbg !10288
  br i1 %3, label %18, label %10, !dbg !10296

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !10296
  call void @llvm.dbg.value(metadata i32 undef, metadata !10275, metadata !DIExpression()), !dbg !10288
  %12 = icmp slt i32 %11, 1, !dbg !10297
  br i1 %12, label %18, label %13, !dbg !10297

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !10297
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !10297
  %16 = mul nuw nsw i32 %15, 8400, !dbg !10297
  %17 = add nuw nsw i32 %16, 8399, !dbg !10297
  br label %18, !dbg !10297

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !10275, metadata !DIExpression()), !dbg !10288
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10298, metadata !DIExpression()) #24, !dbg !10305
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !10307, !srcloc !10313
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !10307
  call void @llvm.dbg.value(metadata i32 %21, metadata !10310, metadata !DIExpression()) #24, !dbg !10314
  call void @llvm.dbg.value(metadata i32 undef, metadata !10311, metadata !DIExpression()) #24, !dbg !10314
  call void @llvm.dbg.value(metadata i32 %21, metadata !10304, metadata !DIExpression()) #24, !dbg !10305
  call void @llvm.dbg.value(metadata i32 %21, metadata !10281, metadata !DIExpression()), !dbg !10288
  %22 = tail call fastcc i32 @elapsed() #26, !dbg !10315
  call void @llvm.dbg.value(metadata i32 %22, metadata !10286, metadata !DIExpression()), !dbg !10288
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10316
  call void @llvm.dbg.value(metadata i32 %23, metadata !10278, metadata !DIExpression()), !dbg !10288
  %24 = load i32, i32* @cycle_count, align 4, !dbg !10317
  %25 = add i32 %24, %22, !dbg !10317
  store i32 %25, i32* @cycle_count, align 4, !dbg !10317
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10318
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !10319
  %27 = sub i32 %25, %26, !dbg !10320
  call void @llvm.dbg.value(metadata i32 %27, metadata !10287, metadata !DIExpression()), !dbg !10288
  %28 = icmp slt i32 %27, 0, !dbg !10321
  br i1 %28, label %38, label %29, !dbg !10323

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !10277, metadata !DIExpression()), !dbg !10288
  call void @llvm.dbg.value(metadata i32 undef, metadata !10277, metadata !DIExpression()), !dbg !10288
  %30 = add nuw i32 %19, %27, !dbg !10324
  %31 = urem i32 %30, 8400, !dbg !10326
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !10277, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10288
  %32 = sub nuw nsw i32 %19, %31, !dbg !10327
  call void @llvm.dbg.value(metadata i32 %32, metadata !10277, metadata !DIExpression()), !dbg !10288
  %33 = icmp ugt i32 %32, 1024, !dbg !10328
  br i1 %33, label %34, label %36, !dbg !10328

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !10277, metadata !DIExpression()), !dbg !10288
  %35 = icmp ugt i32 %32, 16766400, !dbg !10329
  br i1 %35, label %38, label %36, !dbg !10331

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1024, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1024, %18 ], [ 16766400, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !10332
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10333
  call void @llvm.dbg.value(metadata i32 %40, metadata !10279, metadata !DIExpression()), !dbg !10288
  %41 = add nsw i32 %39, -1, !dbg !10334
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10335
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10336
  %42 = icmp ult i32 %23, %40, !dbg !10337
  br i1 %42, label %43, label %48, !dbg !10339

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !10340
  %45 = add i32 %23, %9, !dbg !10342
  %46 = sub i32 %45, %40, !dbg !10343
  %47 = add i32 %46, %44, !dbg !10340
  br label %52, !dbg !10344

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !10345
  %50 = load i32, i32* @cycle_count, align 4, !dbg !10347
  %51 = add i32 %49, %50, !dbg !10347
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !10348
  store i32 %53, i32* @cycle_count, align 4, !dbg !10348
  call void @llvm.dbg.value(metadata i32 %21, metadata !10349, metadata !DIExpression()) #24, !dbg !10355
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10354, metadata !DIExpression()) #24, !dbg !10355
  call void @llvm.dbg.value(metadata i32 %21, metadata !10357, metadata !DIExpression()) #24, !dbg !10360
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #24, !dbg !10362, !srcloc !10363
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !10364
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !10365 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10298, metadata !DIExpression()) #24, !dbg !10369
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !10371, !srcloc !10313
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !10371
  call void @llvm.dbg.value(metadata i32 %2, metadata !10310, metadata !DIExpression()) #24, !dbg !10373
  call void @llvm.dbg.value(metadata i32 undef, metadata !10311, metadata !DIExpression()) #24, !dbg !10373
  call void @llvm.dbg.value(metadata i32 %2, metadata !10304, metadata !DIExpression()) #24, !dbg !10369
  call void @llvm.dbg.value(metadata i32 %2, metadata !10367, metadata !DIExpression()), !dbg !10374
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !10375
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10376
  %5 = add i32 %4, %3, !dbg !10377
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !10378
  %7 = sub i32 %5, %6, !dbg !10379
  call void @llvm.dbg.value(metadata i32 %7, metadata !10368, metadata !DIExpression()), !dbg !10374
  call void @llvm.dbg.value(metadata i32 %2, metadata !10349, metadata !DIExpression()) #24, !dbg !10380
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10354, metadata !DIExpression()) #24, !dbg !10380
  call void @llvm.dbg.value(metadata i32 %2, metadata !10357, metadata !DIExpression()) #24, !dbg !10382
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !10384, !srcloc !10363
  %8 = udiv i32 %7, 8400, !dbg !10385
  ret i32 %8, !dbg !10386
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !10387 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10298, metadata !DIExpression()) #24, !dbg !10391
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !10393, !srcloc !10313
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !10393
  call void @llvm.dbg.value(metadata i32 %2, metadata !10310, metadata !DIExpression()) #24, !dbg !10395
  call void @llvm.dbg.value(metadata i32 undef, metadata !10311, metadata !DIExpression()) #24, !dbg !10395
  call void @llvm.dbg.value(metadata i32 %2, metadata !10304, metadata !DIExpression()) #24, !dbg !10391
  call void @llvm.dbg.value(metadata i32 %2, metadata !10389, metadata !DIExpression()), !dbg !10396
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !10397
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10398
  %5 = add i32 %4, %3, !dbg !10399
  call void @llvm.dbg.value(metadata i32 %5, metadata !10390, metadata !DIExpression()), !dbg !10396
  call void @llvm.dbg.value(metadata i32 %2, metadata !10349, metadata !DIExpression()) #24, !dbg !10400
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10354, metadata !DIExpression()) #24, !dbg !10400
  call void @llvm.dbg.value(metadata i32 %2, metadata !10357, metadata !DIExpression()) #24, !dbg !10402
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !10404, !srcloc !10363
  ret i32 %5, !dbg !10405
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #15 !dbg !10406 {
  %1 = load i32, i32* @last_load, align 4, !dbg !10407
  %2 = icmp eq i32 %1, -16777216, !dbg !10409
  br i1 %2, label %3, label %6, !dbg !10410

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10411
  %5 = or i32 %4, 1, !dbg !10411
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10411
  br label %6, !dbg !10413

6:                                                ; preds = %3, %0
  ret void, !dbg !10414
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #15 !dbg !10415 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10416
  %2 = and i32 %1, -2, !dbg !10416
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10416
  ret void, !dbg !10417
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #13 !dbg !10418 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10444, metadata !DIExpression()), !dbg !10447
  call void @llvm.dbg.value(metadata i8 %1, metadata !10445, metadata !DIExpression()), !dbg !10447
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10446, metadata !DIExpression()), !dbg !10447
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !10448
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10448
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !10447
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10449
  %8 = load i8, i8* %6, align 4, !dbg !10450
  %9 = zext i8 %8 to i32, !dbg !10451
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !10451
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !10452
  br i1 %11, label %18, label %24, !dbg !10453

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !10447
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10449
  %14 = load i8, i8* %6, align 4, !dbg !10450
  %15 = zext i8 %14 to i32, !dbg !10451
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !10451
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !10452
  br i1 %17, label %18, label %24, !dbg !10453, !llvm.loop !10454

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !10456
  %21 = load i8, i8* %20, align 1, !dbg !10456
  %22 = icmp eq i8 %21, %1, !dbg !10459
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !10460
  br i1 %22, label %24, label %12, !dbg !10461

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !10447
  ret i32 %25, !dbg !10462
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !10463 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !10474, metadata !DIExpression()), !dbg !10490
  call void @llvm.dbg.value(metadata i8 %1, metadata !10475, metadata !DIExpression()), !dbg !10490
  call void @llvm.dbg.value(metadata i32 %2, metadata !10476, metadata !DIExpression()), !dbg !10490
  call void @llvm.dbg.value(metadata i32 0, metadata !10479, metadata !DIExpression()), !dbg !10490
  call void @llvm.dbg.value(metadata i32 0, metadata !10480, metadata !DIExpression()), !dbg !10490
  call void @llvm.dbg.value(metadata i8 0, metadata !10481, metadata !DIExpression()), !dbg !10491
  %4 = icmp eq i8 %1, 0, !dbg !10492
  br i1 %4, label %35, label %5, !dbg !10493

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !10492
  br label %9, !dbg !10493

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !10481, metadata !DIExpression()), !dbg !10491
  call void @llvm.dbg.value(metadata i32 %29, metadata !10479, metadata !DIExpression()), !dbg !10490
  %8 = icmp eq i32 %34, %6, !dbg !10492
  br i1 %8, label %35, label %9, !dbg !10493, !llvm.loop !10494

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !10481, metadata !DIExpression()), !dbg !10491
  call void @llvm.dbg.value(metadata i32 %11, metadata !10479, metadata !DIExpression()), !dbg !10490
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !10496
  %13 = load i32, i32* %12, align 4, !dbg !10496
  call void @llvm.dbg.value(metadata i32 %13, metadata !10478, metadata !DIExpression()), !dbg !10490
  %14 = and i32 %13, 31, !dbg !10497
  %15 = icmp ult i32 %14, 16, !dbg !10498
  br i1 %15, label %16, label %20, !dbg !10499

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !10500
  %18 = load i32, i32* %17, align 4, !dbg !10500
  %19 = or i32 %18, 32, !dbg !10502
  call void @llvm.dbg.value(metadata i32 %19, metadata !10479, metadata !DIExpression()), !dbg !10490
  br label %28, !dbg !10503

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !10504

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !10505
  %23 = load i32, i32* %22, align 4, !dbg !10505
  call void @llvm.dbg.value(metadata i32 %23, metadata !10483, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !10506
  %24 = lshr i32 %23, 7, !dbg !10507
  %25 = and i32 %24, 16, !dbg !10507
  %26 = or i32 %25, %23, !dbg !10507
  call void @llvm.dbg.value(metadata i32 %26, metadata !10479, metadata !DIExpression()), !dbg !10490
  br label %28, !dbg !10508

27:                                               ; preds = %20
  br label %28, !dbg !10509

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ 48, %20 ], [ %11, %27 ], !dbg !10490
  call void @llvm.dbg.value(metadata i32 %29, metadata !10479, metadata !DIExpression()), !dbg !10490
  %30 = lshr i32 %13, 5, !dbg !10509
  %31 = and i32 %30, 255, !dbg !10509
  call void @llvm.dbg.value(metadata i32 %31, metadata !10477, metadata !DIExpression()), !dbg !10490
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #26, !dbg !10510
  call void @llvm.dbg.value(metadata i32 %32, metadata !10480, metadata !DIExpression()), !dbg !10490
  %33 = icmp slt i32 %32, 0, !dbg !10511
  %34 = add nuw nsw i32 %10, 1, !dbg !10513
  call void @llvm.dbg.value(metadata i32 %34, metadata !10481, metadata !DIExpression()), !dbg !10491
  br i1 %33, label %35, label %7, !dbg !10514

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !10515
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10516 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10520, metadata !DIExpression()), !dbg !10524
  call void @llvm.dbg.value(metadata i32 %1, metadata !10521, metadata !DIExpression()), !dbg !10524
  call void @llvm.dbg.value(metadata i32 %2, metadata !10522, metadata !DIExpression()), !dbg !10524
  %4 = icmp ugt i32 %0, 175, !dbg !10525
  br i1 %4, label %16, label %5, !dbg !10527

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !10528
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !10529
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !10529
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !10523, metadata !DIExpression()), !dbg !10524
  %9 = add nsw i32 %6, -8, !dbg !10530
  %10 = icmp ult i32 %9, 3, !dbg !10530
  br i1 %10, label %16, label %11, !dbg !10532

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.88(%struct.device* noundef %8) #26, !dbg !10533
  br i1 %12, label %13, label %16, !dbg !10534

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !10535
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #25, !dbg !10536
  br label %16, !dbg !10537

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !10524
  ret i32 %17, !dbg !10538
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.88(%struct.device* noundef %0) unnamed_addr #1 !dbg !10539 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10543, metadata !DIExpression()), !dbg !10544
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !10545, !srcloc !10547
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.89(%struct.device* noundef %0) #26, !dbg !10548
  ret i1 %2, !dbg !10549
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.89(%struct.device* noundef %0) unnamed_addr #1 !dbg !10550 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10552, metadata !DIExpression()), !dbg !10553
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !10554
  ret i1 %2, !dbg !10555
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #11 !dbg !10556 {
  ret void, !dbg !10557
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #16 !dbg !10558 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10560, metadata !DIExpression()), !dbg !10565
  call void @llvm.dbg.value(metadata i32 0, metadata !10561, metadata !DIExpression()), !dbg !10565
  call void @llvm.dbg.value(metadata i32 2, metadata !10562, metadata !DIExpression()), !dbg !10565
  call void @llvm.dbg.value(metadata i32 0, metadata !10563, metadata !DIExpression()), !dbg !10565
  call void @llvm.dbg.value(metadata i32 2, metadata !10564, metadata !DIExpression()), !dbg !10565
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10566
  %2 = and i32 %1, 12, !dbg !10567
  call void @llvm.dbg.value(metadata i32 %2, metadata !10560, metadata !DIExpression()), !dbg !10565
  %3 = icmp eq i32 %2, 8, !dbg !10568
  br i1 %3, label %4, label %18, !dbg !10568

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10569
  call void @llvm.dbg.value(metadata i32 %5, metadata !10563, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !10565
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10571
  %7 = and i32 %6, 63, !dbg !10572
  call void @llvm.dbg.value(metadata i32 %7, metadata !10564, metadata !DIExpression()), !dbg !10565
  %8 = udiv i32 16000000, %7, !dbg !10573
  %9 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10573
  %10 = lshr i32 %9, 6, !dbg !10573
  %11 = and i32 %10, 511, !dbg !10573
  %12 = mul i32 %11, %8, !dbg !10573
  call void @llvm.dbg.value(metadata i32 %12, metadata !10561, metadata !DIExpression()), !dbg !10565
  call void @llvm.dbg.value(metadata i32 %12, metadata !10561, metadata !DIExpression()), !dbg !10565
  call void @llvm.dbg.value(metadata i32 %12, metadata !10561, metadata !DIExpression()), !dbg !10565
  %13 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10575
  %14 = lshr i32 %13, 15, !dbg !10576
  %15 = and i32 %14, 6, !dbg !10576
  %16 = add nuw nsw i32 %15, 2, !dbg !10576
  call void @llvm.dbg.value(metadata i32 %16, metadata !10562, metadata !DIExpression()), !dbg !10565
  %17 = udiv i32 %12, %16, !dbg !10577
  br label %18, !dbg !10578

18:                                               ; preds = %0, %4
  %19 = phi i32 [ %17, %4 ], [ 16000000, %0 ]
  store i32 %19, i32* @SystemCoreClock, align 4, !dbg !10579
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10580
  %21 = lshr i32 %20, 4, !dbg !10581
  %22 = and i32 %21, 15, !dbg !10581
  %23 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %22, !dbg !10582
  %24 = load i8, i8* %23, align 1, !dbg !10582
  %25 = zext i8 %24 to i32, !dbg !10582
  call void @llvm.dbg.value(metadata i32 %25, metadata !10560, metadata !DIExpression()), !dbg !10565
  %26 = lshr i32 %19, %25, !dbg !10583
  store i32 %26, i32* @SystemCoreClock, align 4, !dbg !10583
  ret void, !dbg !10584
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !10585 {
  ret i32 0, !dbg !10590
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !10591 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !10617, metadata !DIExpression()), !dbg !10628
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !10629
  br i1 %3, label %311, label %4, !dbg !10631

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !10632
  %6 = load i32, i32* %5, align 4, !dbg !10632
  %7 = and i32 %6, 1, !dbg !10634
  %8 = icmp eq i32 %7, 0, !dbg !10635
  br i1 %8, label %66, label %9, !dbg !10636

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10637
  %11 = and i32 %10, 12, !dbg !10637
  %12 = icmp eq i32 %11, 4, !dbg !10640
  br i1 %12, label %21, label %13, !dbg !10641

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10642
  %15 = and i32 %14, 12, !dbg !10642
  %16 = icmp eq i32 %15, 8, !dbg !10643
  br i1 %16, label %17, label %29, !dbg !10644

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10645
  %19 = and i32 %18, 4194304, !dbg !10646
  %20 = icmp eq i32 %19, 0, !dbg !10647
  br i1 %20, label %29, label %21, !dbg !10648

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10649
  %23 = and i32 %22, 131072, !dbg !10649
  %24 = icmp eq i32 %23, 0, !dbg !10649
  br i1 %24, label %66, label %25, !dbg !10652

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !10653
  %27 = load i32, i32* %26, align 4, !dbg !10653
  %28 = icmp eq i32 %27, 0, !dbg !10654
  br i1 %28, label %311, label %66, !dbg !10655

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !10656
  %31 = load i32, i32* %30, align 4, !dbg !10656
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !10660

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10661
  %34 = or i32 %33, 65536, !dbg !10661
  br label %45, !dbg !10661

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10663
  %37 = or i32 %36, 262144, !dbg !10663
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10663
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10663
  %39 = or i32 %38, 65536, !dbg !10663
  br label %45, !dbg !10663

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10666
  %42 = and i32 %41, -65537, !dbg !10666
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10666
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10666
  %44 = and i32 %43, -262145, !dbg !10666
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10668
  %47 = load i32, i32* %30, align 4, !dbg !10669
  %48 = icmp eq i32 %47, 0, !dbg !10671
  %49 = tail call i32 @HAL_GetTick() #25, !dbg !10672
  call void @llvm.dbg.value(metadata i32 %49, metadata !10618, metadata !DIExpression()), !dbg !10628
  call void @llvm.dbg.value(metadata i32 %49, metadata !10618, metadata !DIExpression()), !dbg !10628
  br i1 %48, label %58, label %50, !dbg !10673

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10674
  %52 = and i32 %51, 131072, !dbg !10676
  %53 = icmp eq i32 %52, 0, !dbg !10676
  br i1 %53, label %54, label %66, !dbg !10677

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #25, !dbg !10678
  %56 = sub i32 %55, %49, !dbg !10681
  %57 = icmp ugt i32 %56, 100, !dbg !10682
  br i1 %57, label %311, label %50, !dbg !10683, !llvm.loop !10684

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10686
  %60 = and i32 %59, 131072, !dbg !10686
  %61 = icmp eq i32 %60, 0, !dbg !10686
  br i1 %61, label %66, label %62, !dbg !10688

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #25, !dbg !10689
  %64 = sub i32 %63, %49, !dbg !10692
  %65 = icmp ugt i32 %64, 100, !dbg !10693
  br i1 %65, label %311, label %58, !dbg !10694, !llvm.loop !10695

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !10697
  %68 = and i32 %67, 2, !dbg !10699
  %69 = icmp eq i32 %68, 0, !dbg !10700
  br i1 %69, label %121, label %70, !dbg !10701

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10702
  %72 = and i32 %71, 12, !dbg !10702
  %73 = icmp eq i32 %72, 0, !dbg !10705
  br i1 %73, label %82, label %74, !dbg !10706

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10707
  %76 = and i32 %75, 12, !dbg !10707
  %77 = icmp eq i32 %76, 8, !dbg !10708
  br i1 %77, label %78, label %90, !dbg !10709

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10710
  %80 = and i32 %79, 4194304, !dbg !10711
  %81 = icmp eq i32 %80, 0, !dbg !10712
  br i1 %81, label %82, label %90, !dbg !10713

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10714
  %84 = and i32 %83, 2, !dbg !10714
  %85 = icmp eq i32 %84, 0, !dbg !10714
  br i1 %85, label %114, label %86, !dbg !10717

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !10718
  %88 = load i32, i32* %87, align 4, !dbg !10718
  %89 = icmp eq i32 %88, 1, !dbg !10719
  br i1 %89, label %114, label %311, !dbg !10720

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !10721
  %92 = load i32, i32* %91, align 4, !dbg !10721
  %93 = icmp eq i32 %92, 0, !dbg !10724
  br i1 %93, label %104, label %94, !dbg !10725

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !10726
  %95 = tail call i32 @HAL_GetTick() #25, !dbg !10728
  call void @llvm.dbg.value(metadata i32 %95, metadata !10618, metadata !DIExpression()), !dbg !10628
  br label %96, !dbg !10729

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10730
  %98 = and i32 %97, 2, !dbg !10731
  %99 = icmp eq i32 %98, 0, !dbg !10731
  br i1 %99, label %100, label %114, !dbg !10729

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #25, !dbg !10732
  %102 = sub i32 %101, %95, !dbg !10735
  %103 = icmp ugt i32 %102, 2, !dbg !10736
  br i1 %103, label %311, label %96, !dbg !10737, !llvm.loop !10738

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !10740
  %105 = tail call i32 @HAL_GetTick() #25, !dbg !10742
  call void @llvm.dbg.value(metadata i32 %105, metadata !10618, metadata !DIExpression()), !dbg !10628
  br label %106, !dbg !10743

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10744
  %108 = and i32 %107, 2, !dbg !10744
  %109 = icmp eq i32 %108, 0, !dbg !10744
  br i1 %109, label %121, label %110, !dbg !10743

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #25, !dbg !10745
  %112 = sub i32 %111, %105, !dbg !10748
  %113 = icmp ugt i32 %112, 2, !dbg !10749
  br i1 %113, label %311, label %106, !dbg !10750, !llvm.loop !10751

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10753
  %116 = and i32 %115, -249, !dbg !10753
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !10753
  %118 = load i32, i32* %117, align 4, !dbg !10753
  %119 = shl i32 %118, 3, !dbg !10753
  %120 = or i32 %119, %116, !dbg !10753
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10753
  br label %121, !dbg !10754

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !10754
  %123 = and i32 %122, 8, !dbg !10756
  %124 = icmp eq i32 %123, 0, !dbg !10757
  br i1 %124, label %149, label %125, !dbg !10758

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !10759
  %127 = load i32, i32* %126, align 4, !dbg !10759
  %128 = icmp eq i32 %127, 0, !dbg !10762
  br i1 %128, label %139, label %129, !dbg !10763

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !10764
  %130 = tail call i32 @HAL_GetTick() #25, !dbg !10766
  call void @llvm.dbg.value(metadata i32 %130, metadata !10618, metadata !DIExpression()), !dbg !10628
  br label %131, !dbg !10767

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10768
  %133 = and i32 %132, 2, !dbg !10769
  %134 = icmp eq i32 %133, 0, !dbg !10769
  br i1 %134, label %135, label %149, !dbg !10767

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #25, !dbg !10770
  %137 = sub i32 %136, %130, !dbg !10773
  %138 = icmp ugt i32 %137, 2, !dbg !10774
  br i1 %138, label %311, label %131, !dbg !10775, !llvm.loop !10776

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !10778
  %140 = tail call i32 @HAL_GetTick() #25, !dbg !10780
  call void @llvm.dbg.value(metadata i32 %140, metadata !10618, metadata !DIExpression()), !dbg !10628
  br label %141, !dbg !10781

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10782
  %143 = and i32 %142, 2, !dbg !10782
  %144 = icmp eq i32 %143, 0, !dbg !10782
  br i1 %144, label %149, label %145, !dbg !10781

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #25, !dbg !10783
  %147 = sub i32 %146, %140, !dbg !10786
  %148 = icmp ugt i32 %147, 2, !dbg !10787
  br i1 %148, label %311, label %141, !dbg !10788, !llvm.loop !10789

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !10791
  %151 = and i32 %150, 4, !dbg !10792
  %152 = icmp eq i32 %151, 0, !dbg !10793
  br i1 %152, label %221, label %153, !dbg !10794

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !10620, metadata !DIExpression()), !dbg !10795
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10796
  %155 = and i32 %154, 268435456, !dbg !10796
  %156 = icmp eq i32 %155, 0, !dbg !10796
  br i1 %156, label %157, label %164, !dbg !10797

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !10798
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !10798
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10624, metadata !DIExpression()), !dbg !10798
  store volatile i32 0, i32* %2, align 4, !dbg !10798
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10798
  %160 = or i32 %159, 268435456, !dbg !10798
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10798
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10798
  %162 = and i32 %161, 268435456, !dbg !10798
  store volatile i32 %162, i32* %2, align 4, !dbg !10798
  %163 = load volatile i32, i32* %2, align 4, !dbg !10798
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !10799
  call void @llvm.dbg.value(metadata i32 1, metadata !10620, metadata !DIExpression()), !dbg !10795
  br label %164, !dbg !10800

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !10620, metadata !DIExpression()), !dbg !10795
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10801
  %166 = and i32 %165, 256, !dbg !10801
  %167 = icmp eq i32 %166, 0, !dbg !10801
  br i1 %167, label %168, label %180, !dbg !10803

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10804
  %170 = or i32 %169, 256, !dbg !10804
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10804
  %171 = tail call i32 @HAL_GetTick() #25, !dbg !10806
  call void @llvm.dbg.value(metadata i32 %171, metadata !10618, metadata !DIExpression()), !dbg !10628
  br label %172, !dbg !10807

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10808
  %174 = and i32 %173, 256, !dbg !10808
  %175 = icmp eq i32 %174, 0, !dbg !10808
  br i1 %175, label %176, label %180, !dbg !10807

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #25, !dbg !10809
  %178 = sub i32 %177, %171, !dbg !10812
  %179 = icmp ugt i32 %178, 2, !dbg !10813
  br i1 %179, label %311, label %172, !dbg !10814, !llvm.loop !10815

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !10817
  %182 = load i32, i32* %181, align 4, !dbg !10817
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !10820

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10821
  %185 = or i32 %184, 1, !dbg !10821
  br label %196, !dbg !10821

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10823
  %188 = or i32 %187, 4, !dbg !10823
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10823
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10823
  %190 = or i32 %189, 1, !dbg !10823
  br label %196, !dbg !10823

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10826
  %193 = and i32 %192, -2, !dbg !10826
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10826
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10826
  %195 = and i32 %194, -5, !dbg !10826
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10828
  %198 = load i32, i32* %181, align 4, !dbg !10829
  %199 = icmp eq i32 %198, 0, !dbg !10831
  %200 = tail call i32 @HAL_GetTick() #25, !dbg !10832
  call void @llvm.dbg.value(metadata i32 %200, metadata !10618, metadata !DIExpression()), !dbg !10628
  call void @llvm.dbg.value(metadata i32 %200, metadata !10618, metadata !DIExpression()), !dbg !10628
  br i1 %199, label %209, label %201, !dbg !10833

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10834
  %203 = and i32 %202, 2, !dbg !10836
  %204 = icmp eq i32 %203, 0, !dbg !10836
  br i1 %204, label %205, label %217, !dbg !10837

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #25, !dbg !10838
  %207 = sub i32 %206, %200, !dbg !10841
  %208 = icmp ugt i32 %207, 5000, !dbg !10842
  br i1 %208, label %311, label %201, !dbg !10843, !llvm.loop !10844

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10846
  %211 = and i32 %210, 2, !dbg !10846
  %212 = icmp eq i32 %211, 0, !dbg !10846
  br i1 %212, label %217, label %213, !dbg !10848

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #25, !dbg !10849
  %215 = sub i32 %214, %200, !dbg !10852
  %216 = icmp ugt i32 %215, 5000, !dbg !10853
  br i1 %216, label %311, label %209, !dbg !10854, !llvm.loop !10855

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !10857

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10858
  %220 = and i32 %219, -268435457, !dbg !10858
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10858
  br label %221, !dbg !10861

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !10862
  %223 = load i32, i32* %222, align 4, !dbg !10862
  %224 = icmp eq i32 %223, 0, !dbg !10864
  br i1 %224, label %310, label %225, !dbg !10865

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10866
  %227 = and i32 %226, 12, !dbg !10866
  %228 = icmp eq i32 %227, 8, !dbg !10869
  br i1 %228, label %277, label %229, !dbg !10870

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !10871
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !10874
  %231 = tail call i32 @HAL_GetTick() #25, !dbg !10874
  call void @llvm.dbg.value(metadata i32 %231, metadata !10618, metadata !DIExpression()), !dbg !10628
  call void @llvm.dbg.value(metadata i32 %231, metadata !10618, metadata !DIExpression()), !dbg !10628
  br i1 %230, label %232, label %269, !dbg !10875

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10876
  %234 = and i32 %233, 33554432, !dbg !10876
  %235 = icmp eq i32 %234, 0, !dbg !10876
  br i1 %235, label %240, label %236, !dbg !10878

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #25, !dbg !10879
  %238 = sub i32 %237, %231, !dbg !10882
  %239 = icmp ugt i32 %238, 2, !dbg !10883
  br i1 %239, label %311, label %232, !dbg !10884, !llvm.loop !10885

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !10887
  %242 = load i32, i32* %241, align 4, !dbg !10887
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !10887
  %244 = load i32, i32* %243, align 4, !dbg !10887
  %245 = or i32 %244, %242, !dbg !10887
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !10887
  %247 = load i32, i32* %246, align 4, !dbg !10887
  %248 = shl i32 %247, 6, !dbg !10887
  %249 = or i32 %245, %248, !dbg !10887
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !10887
  %251 = load i32, i32* %250, align 4, !dbg !10887
  %252 = shl i32 %251, 15, !dbg !10887
  %253 = add i32 %252, -65536, !dbg !10887
  %254 = and i32 %253, -65536, !dbg !10887
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !10887
  %256 = load i32, i32* %255, align 4, !dbg !10887
  %257 = shl i32 %256, 24, !dbg !10887
  %258 = or i32 %249, %257, !dbg !10887
  %259 = or i32 %258, %254, !dbg !10887
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10887
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !10888
  %260 = tail call i32 @HAL_GetTick() #25, !dbg !10889
  call void @llvm.dbg.value(metadata i32 %260, metadata !10618, metadata !DIExpression()), !dbg !10628
  br label %261, !dbg !10890

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10891
  %263 = and i32 %262, 33554432, !dbg !10892
  %264 = icmp eq i32 %263, 0, !dbg !10892
  br i1 %264, label %265, label %310, !dbg !10890

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #25, !dbg !10893
  %267 = sub i32 %266, %260, !dbg !10896
  %268 = icmp ugt i32 %267, 2, !dbg !10897
  br i1 %268, label %311, label %261, !dbg !10898, !llvm.loop !10899

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10901
  %271 = and i32 %270, 33554432, !dbg !10901
  %272 = icmp eq i32 %271, 0, !dbg !10901
  br i1 %272, label %310, label %273, !dbg !10903

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #25, !dbg !10904
  %275 = sub i32 %274, %231, !dbg !10907
  %276 = icmp ugt i32 %275, 2, !dbg !10908
  br i1 %276, label %311, label %269, !dbg !10909, !llvm.loop !10910

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !10912
  br i1 %278, label %311, label %279, !dbg !10915

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10916
  call void @llvm.dbg.value(metadata i32 %280, metadata !10619, metadata !DIExpression()), !dbg !10628
  %281 = and i32 %280, 4194304, !dbg !10918
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !10920
  %283 = load i32, i32* %282, align 4, !dbg !10920
  %284 = icmp eq i32 %281, %283, !dbg !10921
  br i1 %284, label %285, label %311, !dbg !10922

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !10923
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !10924
  %288 = load i32, i32* %287, align 4, !dbg !10924
  %289 = icmp eq i32 %286, %288, !dbg !10925
  br i1 %289, label %290, label %311, !dbg !10926

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !10927
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !10928
  %293 = load i32, i32* %292, align 4, !dbg !10928
  %294 = shl i32 %293, 6, !dbg !10929
  %295 = icmp eq i32 %291, %294, !dbg !10930
  br i1 %295, label %296, label %311, !dbg !10931

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !10932
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !10933
  %299 = load i32, i32* %298, align 4, !dbg !10933
  %300 = shl i32 %299, 15, !dbg !10934
  %301 = add i32 %300, -65536, !dbg !10934
  %302 = and i32 %301, -65536, !dbg !10934
  %303 = icmp eq i32 %297, %302, !dbg !10935
  br i1 %303, label %304, label %311, !dbg !10936

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !10937
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !10938
  %307 = load i32, i32* %306, align 4, !dbg !10938
  %308 = shl i32 %307, 24, !dbg !10939
  %309 = icmp eq i32 %305, %308, !dbg !10940
  br i1 %309, label %310, label %311, !dbg !10941

310:                                              ; preds = %269, %261, %304, %221
  br label %311, !dbg !10942

311:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %277, %86, %25, %1, %310
  %312 = phi i32 [ 0, %310 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !10628
  ret i32 %312, !dbg !10943
}

; Function Attrs: optsize
declare !dbg !10944 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !10946 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !10959, metadata !DIExpression()), !dbg !10962
  call void @llvm.dbg.value(metadata i32 %1, metadata !10960, metadata !DIExpression()), !dbg !10962
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !10963
  br i1 %3, label %115, label %4, !dbg !10965

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10966
  %6 = and i32 %5, 7, !dbg !10966
  %7 = icmp ult i32 %6, %1, !dbg !10968
  br i1 %7, label %8, label %13, !dbg !10969

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !10970
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !10970
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10972
  %11 = and i32 %10, 7, !dbg !10972
  %12 = icmp eq i32 %11, %1, !dbg !10974
  br i1 %12, label %13, label %115, !dbg !10975

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !10976
  %15 = load i32, i32* %14, align 4, !dbg !10976
  %16 = and i32 %15, 2, !dbg !10978
  %17 = icmp eq i32 %16, 0, !dbg !10979
  br i1 %17, label %39, label %18, !dbg !10980

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !10981
  %20 = icmp eq i32 %19, 0, !dbg !10984
  br i1 %20, label %25, label %21, !dbg !10985

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10986
  %23 = or i32 %22, 7168, !dbg !10986
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10986
  %24 = load i32, i32* %14, align 4, !dbg !10988
  br label %25, !dbg !10990

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !10988
  %27 = and i32 %26, 8, !dbg !10991
  %28 = icmp eq i32 %27, 0, !dbg !10992
  br i1 %28, label %32, label %29, !dbg !10993

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10994
  %31 = or i32 %30, 57344, !dbg !10994
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10994
  br label %32, !dbg !10996

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10997
  %34 = and i32 %33, -241, !dbg !10997
  %35 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !10997
  %36 = load i32, i32* %35, align 4, !dbg !10997
  %37 = or i32 %34, %36, !dbg !10997
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10997
  %38 = load i32, i32* %14, align 4, !dbg !10998
  br label %39, !dbg !11000

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !10998
  %41 = and i32 %40, 1, !dbg !11001
  %42 = icmp eq i32 %41, 0, !dbg !11002
  br i1 %42, label %73, label %43, !dbg !11003

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !11004
  %45 = load i32, i32* %44, align 4, !dbg !11004
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !11007

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11008
  %48 = and i32 %47, 131072, !dbg !11011
  %49 = icmp eq i32 %48, 0, !dbg !11011
  br i1 %49, label %115, label %58, !dbg !11012

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11013
  %52 = and i32 %51, 33554432, !dbg !11017
  %53 = icmp eq i32 %52, 0, !dbg !11017
  br i1 %53, label %115, label %58, !dbg !11018

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11019
  %56 = and i32 %55, 2, !dbg !11022
  %57 = icmp eq i32 %56, 0, !dbg !11022
  br i1 %57, label %115, label %58, !dbg !11023

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11024
  %60 = and i32 %59, -4, !dbg !11024
  %61 = or i32 %60, %45, !dbg !11024
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11024
  %62 = tail call i32 @HAL_GetTick() #25, !dbg !11025
  call void @llvm.dbg.value(metadata i32 %62, metadata !10961, metadata !DIExpression()), !dbg !10962
  br label %63, !dbg !11026

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11027
  %65 = and i32 %64, 12, !dbg !11027
  %66 = load i32, i32* %44, align 4, !dbg !11028
  %67 = shl i32 %66, 2, !dbg !11029
  %68 = icmp eq i32 %65, %67, !dbg !11030
  br i1 %68, label %73, label %69, !dbg !11026

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #25, !dbg !11031
  %71 = sub i32 %70, %62, !dbg !11034
  %72 = icmp ugt i32 %71, 5000, !dbg !11035
  br i1 %72, label %115, label %63, !dbg !11036, !llvm.loop !11037

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11039
  %75 = and i32 %74, 7, !dbg !11039
  %76 = icmp ugt i32 %75, %1, !dbg !11041
  br i1 %76, label %77, label %82, !dbg !11042

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !11043
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !11043
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11045
  %80 = and i32 %79, 7, !dbg !11045
  %81 = icmp eq i32 %80, %1, !dbg !11047
  br i1 %81, label %82, label %115, !dbg !11048

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !11049
  %84 = and i32 %83, 4, !dbg !11051
  %85 = icmp eq i32 %84, 0, !dbg !11052
  br i1 %85, label %93, label %86, !dbg !11053

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11054
  %88 = and i32 %87, -7169, !dbg !11054
  %89 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !11054
  %90 = load i32, i32* %89, align 4, !dbg !11054
  %91 = or i32 %88, %90, !dbg !11054
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11054
  %92 = load i32, i32* %14, align 4, !dbg !11056
  br label %93, !dbg !11058

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !11056
  %95 = and i32 %94, 8, !dbg !11059
  %96 = icmp eq i32 %95, 0, !dbg !11060
  br i1 %96, label %104, label %97, !dbg !11061

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11062
  %99 = and i32 %98, -57345, !dbg !11062
  %100 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !11062
  %101 = load i32, i32* %100, align 4, !dbg !11062
  %102 = shl i32 %101, 3, !dbg !11062
  %103 = or i32 %102, %99, !dbg !11062
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11062
  br label %104, !dbg !11064

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #26, !dbg !11065
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11066
  %107 = lshr i32 %106, 4, !dbg !11067
  %108 = and i32 %107, 15, !dbg !11067
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !11068
  %110 = load i8, i8* %109, align 1, !dbg !11068
  %111 = zext i8 %110 to i32, !dbg !11068
  %112 = lshr i32 %105, %111, !dbg !11069
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !11070
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !11071
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #25, !dbg !11072
  br label %115, !dbg !11073

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !10962
  ret i32 %116, !dbg !11074
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !11075 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11077, metadata !DIExpression()), !dbg !11081
  call void @llvm.dbg.value(metadata i32 0, metadata !11078, metadata !DIExpression()), !dbg !11081
  call void @llvm.dbg.value(metadata i32 0, metadata !11079, metadata !DIExpression()), !dbg !11081
  call void @llvm.dbg.value(metadata i32 0, metadata !11080, metadata !DIExpression()), !dbg !11081
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11082
  %2 = and i32 %1, 12, !dbg !11083
  %3 = icmp eq i32 %2, 8, !dbg !11084
  br i1 %3, label %4, label %21, !dbg !11084

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11085
  %6 = and i32 %5, 63, !dbg !11088
  call void @llvm.dbg.value(metadata i32 %6, metadata !11077, metadata !DIExpression()), !dbg !11081
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11089
  %8 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11091
  %9 = lshr i32 %8, 6, !dbg !11091
  %10 = and i32 %9, 511, !dbg !11091
  %11 = zext i32 %10 to i64, !dbg !11091
  %12 = mul nuw nsw i64 %11, 16000000, !dbg !11091
  %13 = zext i32 %6 to i64, !dbg !11091
  %14 = udiv i64 %12, %13, !dbg !11091
  %15 = trunc i64 %14 to i32, !dbg !11091
  call void @llvm.dbg.value(metadata i32 %15, metadata !11078, metadata !DIExpression()), !dbg !11081
  call void @llvm.dbg.value(metadata i32 %15, metadata !11078, metadata !DIExpression()), !dbg !11081
  call void @llvm.dbg.value(metadata i32 %15, metadata !11078, metadata !DIExpression()), !dbg !11081
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11092
  %17 = lshr i32 %16, 15, !dbg !11093
  %18 = and i32 %17, 6, !dbg !11093
  %19 = add nuw nsw i32 %18, 2, !dbg !11093
  call void @llvm.dbg.value(metadata i32 %19, metadata !11079, metadata !DIExpression()), !dbg !11081
  %20 = udiv i32 %15, %19, !dbg !11094
  call void @llvm.dbg.value(metadata i32 %20, metadata !11080, metadata !DIExpression()), !dbg !11081
  br label %21, !dbg !11095

21:                                               ; preds = %0, %4
  %22 = phi i32 [ %20, %4 ], [ 16000000, %0 ], !dbg !11096
  call void @llvm.dbg.value(metadata i32 %22, metadata !11080, metadata !DIExpression()), !dbg !11081
  ret i32 %22, !dbg !11097
}

; Function Attrs: optsize
declare !dbg !11098 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11101 {
  %4 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11105, metadata !DIExpression()), !dbg !11125
  call void @llvm.dbg.value(metadata i32 %1, metadata !11106, metadata !DIExpression()), !dbg !11125
  call void @llvm.dbg.value(metadata i32 %2, metadata !11107, metadata !DIExpression()), !dbg !11125
  %7 = bitcast %struct.RCC_ClkInitTypeDef* %4 to i8*, !dbg !11126
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #24, !dbg !11126
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %4, metadata !11108, metadata !DIExpression()), !dbg !11127
  %8 = icmp eq i32 %0, 0, !dbg !11128
  br i1 %8, label %9, label %23, !dbg !11129

9:                                                ; preds = %3
  %10 = bitcast i32* %5 to i8*, !dbg !11130
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10), !dbg !11130
  call void @llvm.dbg.declare(metadata i32* %5, metadata !11118, metadata !DIExpression()), !dbg !11130
  store volatile i32 0, i32* %5, align 4, !dbg !11130
  %11 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11130
  %12 = or i32 %11, 1, !dbg !11130
  store volatile i32 %12, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11130
  %13 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11130
  %14 = and i32 %13, 1, !dbg !11130
  store volatile i32 %14, i32* %5, align 4, !dbg !11130
  %15 = load volatile i32, i32* %5, align 4, !dbg !11130
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10), !dbg !11131
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !11132
  store i32 256, i32* %16, align 4, !dbg !11133
  %17 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !11134
  store i32 2, i32* %17, align 4, !dbg !11135
  %18 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !11136
  store i32 3, i32* %18, align 4, !dbg !11137
  %19 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !11138
  store i32 0, i32* %19, align 4, !dbg !11139
  %20 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !11140
  store i32 0, i32* %20, align 4, !dbg !11141
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #25, !dbg !11142
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11143
  %22 = and i32 %21, -123731969, !dbg !11143
  br label %38, !dbg !11144

23:                                               ; preds = %3
  %24 = bitcast i32* %6 to i8*, !dbg !11145
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24), !dbg !11145
  call void @llvm.dbg.declare(metadata i32* %6, metadata !11122, metadata !DIExpression()), !dbg !11145
  store volatile i32 0, i32* %6, align 4, !dbg !11145
  %25 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11145
  %26 = or i32 %25, 4, !dbg !11145
  store volatile i32 %26, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11145
  %27 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11145
  %28 = and i32 %27, 4, !dbg !11145
  store volatile i32 %28, i32* %6, align 4, !dbg !11145
  %29 = load volatile i32, i32* %6, align 4, !dbg !11145
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24), !dbg !11146
  %30 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !11147
  store i32 512, i32* %30, align 4, !dbg !11148
  %31 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !11149
  store i32 2, i32* %31, align 4, !dbg !11150
  %32 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !11151
  store i32 3, i32* %32, align 4, !dbg !11152
  %33 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !11153
  store i32 0, i32* %33, align 4, !dbg !11154
  %34 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !11155
  store i32 0, i32* %34, align 4, !dbg !11156
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073874944 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #25, !dbg !11157
  %35 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11158
  %36 = and i32 %35, 134217727, !dbg !11158
  %37 = shl i32 %2, 3, !dbg !11158
  br label %38

38:                                               ; preds = %23, %9
  %39 = phi i32 [ %37, %23 ], [ %2, %9 ]
  %40 = phi i32 [ %36, %23 ], [ %22, %9 ]
  %41 = or i32 %39, %1, !dbg !11159
  %42 = or i32 %41, %40, !dbg !11159
  store volatile i32 %42, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11159
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #24, !dbg !11160
  ret void, !dbg !11160
}

; Function Attrs: optsize
declare !dbg !11161 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.RCC_ClkInitTypeDef* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #15 !dbg !11165 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !11166
  ret void, !dbg !11167
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #15 !dbg !11168 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !11169
  ret void, !dbg !11170
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #5 !dbg !11171 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !11172
  ret i32 %1, !dbg !11173
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #16 !dbg !11174 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #26, !dbg !11175
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11176
  %3 = lshr i32 %2, 10, !dbg !11177
  %4 = and i32 %3, 7, !dbg !11177
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11178
  %6 = load i8, i8* %5, align 1, !dbg !11178
  %7 = zext i8 %6 to i32, !dbg !11178
  %8 = lshr i32 %1, %7, !dbg !11179
  ret i32 %8, !dbg !11180
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #16 !dbg !11181 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #26, !dbg !11182
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11183
  %3 = lshr i32 %2, 13, !dbg !11184
  %4 = and i32 %3, 7, !dbg !11184
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11185
  %6 = load i8, i8* %5, align 1, !dbg !11185
  %7 = zext i8 %6 to i32, !dbg !11185
  %8 = lshr i32 %1, %7, !dbg !11186
  ret i32 %8, !dbg !11187
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !11188 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11192, metadata !DIExpression()), !dbg !11193
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11194
  store i32 15, i32* %2, align 4, !dbg !11195
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11196
  %4 = and i32 %3, 262144, !dbg !11198
  %5 = icmp eq i32 %4, 0, !dbg !11199
  br i1 %5, label %8, label %6, !dbg !11200

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11201
  store i32 327680, i32* %7, align 4, !dbg !11203
  br label %15, !dbg !11204

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11205
  %10 = and i32 %9, 65536, !dbg !11207
  %11 = icmp eq i32 %10, 0, !dbg !11208
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11209
  br i1 %11, label %14, label %13, !dbg !11210

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !11211
  br label %15, !dbg !11213

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !11214
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11216
  %17 = and i32 %16, 1, !dbg !11218
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11219
  store i32 %17, i32* %18, align 4, !dbg !11221
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11222
  %20 = lshr i32 %19, 3, !dbg !11223
  %21 = and i32 %20, 31, !dbg !11223
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !11224
  store i32 %21, i32* %22, align 4, !dbg !11225
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11226
  %24 = and i32 %23, 4, !dbg !11228
  %25 = icmp eq i32 %24, 0, !dbg !11229
  br i1 %25, label %28, label %26, !dbg !11230

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11231
  store i32 5, i32* %27, align 4, !dbg !11233
  br label %35, !dbg !11234

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11235
  %30 = and i32 %29, 1, !dbg !11237
  %31 = icmp eq i32 %30, 0, !dbg !11238
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11239
  br i1 %31, label %34, label %33, !dbg !11240

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !11241
  br label %35, !dbg !11243

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !11244
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11246
  %37 = and i32 %36, 1, !dbg !11248
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !11249
  store i32 %37, i32* %38, align 4, !dbg !11251
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11252
  %40 = and i32 %39, 16777216, !dbg !11254
  %41 = icmp eq i32 %40, 0, !dbg !11255
  %42 = select i1 %41, i32 1, i32 2, !dbg !11256
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !11257
  store i32 %42, i32* %43, align 4, !dbg !11259
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11260
  %45 = and i32 %44, 4194304, !dbg !11261
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11262
  store i32 %45, i32* %46, align 4, !dbg !11263
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11264
  %48 = and i32 %47, 63, !dbg !11265
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11266
  store i32 %48, i32* %49, align 4, !dbg !11267
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11268
  %51 = lshr i32 %50, 6, !dbg !11269
  %52 = and i32 %51, 511, !dbg !11269
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11270
  store i32 %52, i32* %53, align 4, !dbg !11271
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11272
  %55 = shl i32 %54, 1, !dbg !11273
  %56 = and i32 %55, 393216, !dbg !11273
  %57 = add nuw nsw i32 %56, 131072, !dbg !11273
  %58 = lshr exact i32 %57, 16, !dbg !11274
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11275
  store i32 %58, i32* %59, align 4, !dbg !11276
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11277
  %61 = lshr i32 %60, 24, !dbg !11278
  %62 = and i32 %61, 15, !dbg !11278
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11279
  store i32 %62, i32* %63, align 4, !dbg !11280
  ret void, !dbg !11281
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #16 !dbg !11282 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !11286, metadata !DIExpression()), !dbg !11288
  call void @llvm.dbg.value(metadata i32* %1, metadata !11287, metadata !DIExpression()), !dbg !11288
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !11289
  store i32 15, i32* %3, align 4, !dbg !11290
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11291
  %5 = and i32 %4, 3, !dbg !11292
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !11293
  store i32 %5, i32* %6, align 4, !dbg !11294
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11295
  %8 = and i32 %7, 240, !dbg !11296
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !11297
  store i32 %8, i32* %9, align 4, !dbg !11298
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11299
  %11 = and i32 %10, 7168, !dbg !11300
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !11301
  store i32 %11, i32* %12, align 4, !dbg !11302
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11303
  %14 = lshr i32 %13, 3, !dbg !11304
  %15 = and i32 %14, 7168, !dbg !11304
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !11305
  store i32 %15, i32* %16, align 4, !dbg !11306
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11307
  %18 = and i32 %17, 7, !dbg !11308
  store i32 %18, i32* %1, align 4, !dbg !11309
  ret void, !dbg !11310
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !11311 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11312
  %2 = and i32 %1, 128, !dbg !11312
  %3 = icmp eq i32 %2, 0, !dbg !11312
  br i1 %3, label %5, label %4, !dbg !11314

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #26, !dbg !11315
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !11317
  br label %5, !dbg !11318

5:                                                ; preds = %4, %0
  ret void, !dbg !11319
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !11320 {
  ret void, !dbg !11321
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #15 !dbg !11322 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11325, metadata !DIExpression()), !dbg !11326
  tail call fastcc void @LL_InitTick(i32 noundef %0) #26, !dbg !11327
  ret void, !dbg !11328
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #15 !dbg !11329 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11332, metadata !DIExpression()), !dbg !11334
  call void @llvm.dbg.value(metadata i32 1000, metadata !11333, metadata !DIExpression()), !dbg !11334
  %2 = udiv i32 %0, 1000, !dbg !11335
  %3 = add nsw i32 %2, -1, !dbg !11336
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11337
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11338
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11339
  ret void, !dbg !11340
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #17 !dbg !11341 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11343, metadata !DIExpression()), !dbg !11345
  %3 = bitcast i32* %2 to i8*, !dbg !11346
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11346
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11344, metadata !DIExpression()), !dbg !11347
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11348
  store volatile i32 %4, i32* %2, align 4, !dbg !11347
  %5 = load volatile i32, i32* %2, align 4, !dbg !11349
  %6 = icmp eq i32 %0, -1, !dbg !11350
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !11343, metadata !DIExpression()), !dbg !11345
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !11345
  call void @llvm.dbg.value(metadata i32 %8, metadata !11343, metadata !DIExpression()), !dbg !11345
  br label %9, !dbg !11352

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11343, metadata !DIExpression()), !dbg !11345
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11353
  call void @llvm.dbg.value(metadata i32 undef, metadata !11343, metadata !DIExpression()), !dbg !11345
  %12 = shl i32 %11, 15, !dbg !11345
  %13 = ashr i32 %12, 31, !dbg !11345
  %14 = add i32 %13, %10, !dbg !11345
  call void @llvm.dbg.value(metadata i32 %14, metadata !11343, metadata !DIExpression()), !dbg !11345
  %15 = icmp eq i32 %14, 0, !dbg !11352
  br i1 %15, label %16, label %9, !dbg !11352

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11356
  ret void, !dbg !11356
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #4 !dbg !11357 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11359, metadata !DIExpression()), !dbg !11360
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !11361
  ret void, !dbg !11362
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #15 !dbg !11363 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11368, metadata !DIExpression()), !dbg !11373
  call void @llvm.dbg.value(metadata i32 0, metadata !11371, metadata !DIExpression()), !dbg !11373
  call void @llvm.dbg.value(metadata i32 0, metadata !11372, metadata !DIExpression()), !dbg !11373
  %2 = icmp eq i32 %0, 0, !dbg !11374
  br i1 %2, label %35, label %3, !dbg !11376

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !11377
  %5 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !11380
  %6 = icmp eq i32 %5, 32768, !dbg !11382
  br i1 %6, label %7, label %12, !dbg !11383

7:                                                ; preds = %3
  %8 = icmp ugt i32 %0, 60000000, !dbg !11384
  br i1 %8, label %12, label %9, !dbg !11387

9:                                                ; preds = %7
  %10 = icmp ugt i32 %0, 30000000, !dbg !11388
  %11 = zext i1 %10 to i32, !dbg !11391
  call void @llvm.dbg.value(metadata i32 %11, metadata !11371, metadata !DIExpression()), !dbg !11373
  br label %12, !dbg !11391

12:                                               ; preds = %7, %9, %3
  %13 = phi i32 [ %11, %9 ], [ 0, %3 ], [ 2, %7 ], !dbg !11373
  call void @llvm.dbg.value(metadata i32 %13, metadata !11371, metadata !DIExpression()), !dbg !11373
  %14 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !11392
  %15 = icmp eq i32 %14, 16384, !dbg !11394
  br i1 %15, label %16, label %24, !dbg !11395

16:                                               ; preds = %12
  %17 = icmp ugt i32 %0, 60000000, !dbg !11396
  %18 = icmp eq i32 %13, 0
  %19 = and i1 %17, %18, !dbg !11399
  br i1 %19, label %24, label %20, !dbg !11399

20:                                               ; preds = %16
  %21 = icmp ugt i32 %0, 30000000, !dbg !11400
  %22 = and i1 %21, %18, !dbg !11403
  %23 = select i1 %22, i32 1, i32 %13, !dbg !11403
  call void @llvm.dbg.value(metadata i32 %23, metadata !11371, metadata !DIExpression()), !dbg !11373
  br label %24, !dbg !11403

24:                                               ; preds = %16, %20, %12
  %25 = phi i32 [ %23, %20 ], [ %13, %12 ], [ 2, %16 ], !dbg !11404
  call void @llvm.dbg.value(metadata i32 %25, metadata !11371, metadata !DIExpression()), !dbg !11373
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %25) #26, !dbg !11405
  call void @llvm.dbg.value(metadata i32 2, metadata !11369, metadata !DIExpression()), !dbg !11373
  br label %26, !dbg !11406

26:                                               ; preds = %26, %24
  %27 = phi i32 [ 2, %24 ], [ %29, %26 ], !dbg !11404
  call void @llvm.dbg.value(metadata i32 %27, metadata !11369, metadata !DIExpression()), !dbg !11373
  %28 = tail call fastcc i32 @LL_FLASH_GetLatency() #26, !dbg !11407
  call void @llvm.dbg.value(metadata i32 %28, metadata !11370, metadata !DIExpression()), !dbg !11373
  %29 = add nsw i32 %27, -1, !dbg !11409
  call void @llvm.dbg.value(metadata i32 %29, metadata !11369, metadata !DIExpression()), !dbg !11373
  %30 = icmp ne i32 %28, %25, !dbg !11410
  %31 = icmp ne i32 %29, 0, !dbg !11411
  %32 = select i1 %30, i1 %31, i1 false, !dbg !11411
  br i1 %32, label %26, label %33, !dbg !11412, !llvm.loop !11413

33:                                               ; preds = %26
  %34 = zext i1 %30 to i32
  br label %35

35:                                               ; preds = %33, %1
  %36 = phi i32 [ 1, %1 ], [ %34, %33 ], !dbg !11415
  call void @llvm.dbg.value(metadata i32 %36, metadata !11372, metadata !DIExpression()), !dbg !11373
  ret i32 %36, !dbg !11416
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #16 !dbg !11417 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11419
  %2 = and i32 %1, 49152, !dbg !11419
  ret i32 %2, !dbg !11420
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #15 !dbg !11421 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11423, metadata !DIExpression()), !dbg !11424
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11425
  %3 = and i32 %2, -8, !dbg !11425
  %4 = or i32 %3, %0, !dbg !11425
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11425
  ret void, !dbg !11426
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #16 !dbg !11427 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11428
  %2 = and i32 %1, 7, !dbg !11428
  ret i32 %2, !dbg !11429
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct.sys_memory_stats* nocapture noundef readonly %0, %struct.sys_memory_stats* nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !11430 {
  call void @llvm.dbg.value(metadata %struct.sys_memory_stats* %0, metadata !11448, metadata !DIExpression()), !dbg !11452
  call void @llvm.dbg.value(metadata %struct.sys_memory_stats* %1, metadata !11449, metadata !DIExpression()), !dbg !11452
  call void @llvm.dbg.value(metadata i32 0, metadata !11450, metadata !DIExpression()), !dbg !11452
  call void @llvm.dbg.value(metadata i32 0, metadata !11451, metadata !DIExpression()), !dbg !11452
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !11453
  %4 = icmp eq i32 %3, 0, !dbg !11455
  br i1 %4, label %5, label %21, !dbg !11456

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct.sys_memory_stats* noundef %0) #26, !dbg !11457
  call void @llvm.dbg.value(metadata i32 %6, metadata !11451, metadata !DIExpression()), !dbg !11452
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.98() #26, !dbg !11459
  %8 = icmp eq i32 %7, 1, !dbg !11461
  br i1 %8, label %13, label %9, !dbg !11462

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.99() #26, !dbg !11463
  br label %10, !dbg !11465

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.98() #26, !dbg !11466
  %12 = icmp eq i32 %11, 1, !dbg !11467
  br i1 %12, label %13, label %10, !dbg !11465, !llvm.loop !11468

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %0, i32 0, i32 0, !dbg !11470
  %15 = load i32, i32* %14, align 4, !dbg !11470
  %16 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %0, i32 0, i32 1, !dbg !11471
  %17 = load i32, i32* %16, align 4, !dbg !11471
  %18 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %0, i32 0, i32 2, !dbg !11472
  %19 = load i32, i32* %18, align 4, !dbg !11472
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.100(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #26, !dbg !11473
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct.sys_memory_stats* noundef %1) #26, !dbg !11474
  call void @llvm.dbg.value(metadata i32 %20, metadata !11450, metadata !DIExpression()), !dbg !11452
  br label %21, !dbg !11475

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !11476
  call void @llvm.dbg.value(metadata i32 %22, metadata !11450, metadata !DIExpression()), !dbg !11452
  ret i32 %22, !dbg !11477
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #16 !dbg !11478 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11482, metadata !DIExpression()), !dbg !11483
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.102() #26, !dbg !11484
  %2 = icmp ne i32 %1, 0, !dbg !11486
  call void @llvm.dbg.value(metadata i1 %2, metadata !11482, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11483
  %3 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #26, !dbg !11487
  %4 = icmp ne i32 %3, 0, !dbg !11489
  %5 = select i1 %4, i1 true, i1 %2, !dbg !11490
  %6 = zext i1 %5 to i32, !dbg !11490
  call void @llvm.dbg.value(metadata i32 %6, metadata !11482, metadata !DIExpression()), !dbg !11483
  ret i32 %6, !dbg !11491
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct.sys_memory_stats* nocapture noundef readonly %1) unnamed_addr #5 !dbg !11492 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11496, metadata !DIExpression()), !dbg !11499
  call void @llvm.dbg.value(metadata %struct.sys_memory_stats* %1, metadata !11497, metadata !DIExpression()), !dbg !11499
  call void @llvm.dbg.value(metadata i32 0, metadata !11498, metadata !DIExpression()), !dbg !11499
  %3 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 0, !dbg !11500
  %4 = load i32, i32* %3, align 4, !dbg !11500
  %5 = and i32 %4, 63, !dbg !11501
  %6 = udiv i32 %0, %5, !dbg !11502
  call void @llvm.dbg.value(metadata i32 %6, metadata !11498, metadata !DIExpression()), !dbg !11499
  %7 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 1, !dbg !11503
  %8 = load i32, i32* %7, align 4, !dbg !11503
  %9 = and i32 %8, 511, !dbg !11504
  %10 = mul i32 %9, %6, !dbg !11505
  call void @llvm.dbg.value(metadata i32 %10, metadata !11498, metadata !DIExpression()), !dbg !11499
  %11 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 2, !dbg !11506
  %12 = load i32, i32* %11, align 4, !dbg !11506
  %13 = lshr i32 %12, 15, !dbg !11507
  %14 = and i32 %13, 131070, !dbg !11507
  %15 = add nuw nsw i32 %14, 2, !dbg !11507
  %16 = udiv i32 %10, %15, !dbg !11508
  call void @llvm.dbg.value(metadata i32 %16, metadata !11498, metadata !DIExpression()), !dbg !11499
  ret i32 %16, !dbg !11509
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.98() unnamed_addr #16 !dbg !11510 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11511
  %2 = lshr i32 %1, 1, !dbg !11512
  %3 = and i32 %2, 1, !dbg !11512
  ret i32 %3, !dbg !11513
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.99() unnamed_addr #15 !dbg !11514 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11515
  %2 = or i32 %1, 1, !dbg !11515
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11515
  ret void, !dbg !11516
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.100(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #15 !dbg !11517 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11519, metadata !DIExpression()), !dbg !11523
  call void @llvm.dbg.value(metadata i32 %1, metadata !11520, metadata !DIExpression()), !dbg !11523
  call void @llvm.dbg.value(metadata i32 %2, metadata !11521, metadata !DIExpression()), !dbg !11523
  call void @llvm.dbg.value(metadata i32 %3, metadata !11522, metadata !DIExpression()), !dbg !11523
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11524
  %6 = and i32 %5, -4227072, !dbg !11524
  %7 = or i32 %1, %0, !dbg !11524
  %8 = shl i32 %2, 6, !dbg !11524
  %9 = or i32 %7, %8, !dbg !11524
  %10 = or i32 %9, %6, !dbg !11524
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11524
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11525
  %12 = and i32 %11, -196609, !dbg !11525
  %13 = or i32 %12, %3, !dbg !11525
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11525
  ret void, !dbg !11526
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct.sys_memory_stats* nocapture noundef readonly %1) unnamed_addr #15 !dbg !11527 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11531, metadata !DIExpression()), !dbg !11535
  call void @llvm.dbg.value(metadata %struct.sys_memory_stats* %1, metadata !11532, metadata !DIExpression()), !dbg !11535
  call void @llvm.dbg.value(metadata i32 0, metadata !11533, metadata !DIExpression()), !dbg !11535
  call void @llvm.dbg.value(metadata i32 0, metadata !11534, metadata !DIExpression()), !dbg !11535
  %3 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 0, !dbg !11536
  %4 = load i32, i32* %3, align 4, !dbg !11536
  %5 = lshr i32 %4, 4, !dbg !11536
  %6 = and i32 %5, 15, !dbg !11536
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !11536
  %8 = load i8, i8* %7, align 1, !dbg !11536
  %9 = zext i8 %8 to i32, !dbg !11536
  %10 = lshr i32 %0, %9, !dbg !11536
  call void @llvm.dbg.value(metadata i32 %10, metadata !11534, metadata !DIExpression()), !dbg !11535
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !11537
  %12 = icmp ult i32 %11, %10, !dbg !11539
  br i1 %12, label %13, label %16, !dbg !11540

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !11541
  call void @llvm.dbg.value(metadata i32 %14, metadata !11533, metadata !DIExpression()), !dbg !11535
  %15 = icmp eq i32 %14, 0, !dbg !11543
  br i1 %15, label %16, label %30, !dbg !11545

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.101() #26, !dbg !11546
  br label %17, !dbg !11548

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.102() #26, !dbg !11549
  %19 = icmp eq i32 %18, 1, !dbg !11550
  br i1 %19, label %20, label %17, !dbg !11548, !llvm.loop !11551

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !11553
  tail call fastcc void @LL_RCC_SetAHBPrescaler.103(i32 noundef %21) #26, !dbg !11554
  tail call fastcc void @LL_RCC_SetSysClkSource.104() #26, !dbg !11555
  br label %22, !dbg !11556

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.105() #26, !dbg !11557
  %24 = icmp eq i32 %23, 8, !dbg !11558
  br i1 %24, label %25, label %22, !dbg !11556, !llvm.loop !11559

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 1, !dbg !11561
  %27 = load i32, i32* %26, align 4, !dbg !11561
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.106(i32 noundef %27) #26, !dbg !11562
  %28 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 2, !dbg !11563
  %29 = load i32, i32* %28, align 4, !dbg !11563
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.107(i32 noundef %29) #26, !dbg !11564
  br label %30, !dbg !11565

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !11566
  %33 = icmp ugt i32 %32, %10, !dbg !11568
  br i1 %33, label %34, label %36, !dbg !11569

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !11570
  call void @llvm.dbg.value(metadata i32 %35, metadata !11533, metadata !DIExpression()), !dbg !11535
  br label %36, !dbg !11572

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !11535
  call void @llvm.dbg.value(metadata i32 %37, metadata !11533, metadata !DIExpression()), !dbg !11535
  %38 = icmp eq i32 %37, 0, !dbg !11573
  br i1 %38, label %39, label %40, !dbg !11575

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #26, !dbg !11576
  br label %40, !dbg !11578

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !11579
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.101() unnamed_addr #15 !dbg !11580 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11581
  %2 = or i32 %1, 16777216, !dbg !11581
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11581
  ret void, !dbg !11582
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.102() unnamed_addr #16 !dbg !11583 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11584
  %2 = lshr i32 %1, 25, !dbg !11585
  %3 = and i32 %2, 1, !dbg !11585
  ret i32 %3, !dbg !11586
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.103(i32 noundef %0) unnamed_addr #15 !dbg !11587 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11589, metadata !DIExpression()), !dbg !11590
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11591
  %3 = and i32 %2, -241, !dbg !11591
  %4 = or i32 %3, %0, !dbg !11591
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11591
  ret void, !dbg !11592
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.104() unnamed_addr #15 !dbg !11593 {
  call void @llvm.dbg.value(metadata i32 2, metadata !11595, metadata !DIExpression()), !dbg !11596
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11597
  %2 = and i32 %1, -4, !dbg !11597
  %3 = or i32 %2, 2, !dbg !11597
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11597
  ret void, !dbg !11598
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.105() unnamed_addr #16 !dbg !11599 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11600
  %2 = and i32 %1, 12, !dbg !11600
  ret i32 %2, !dbg !11601
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.106(i32 noundef %0) unnamed_addr #15 !dbg !11602 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11604, metadata !DIExpression()), !dbg !11605
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11606
  %3 = and i32 %2, -7169, !dbg !11606
  %4 = or i32 %3, %0, !dbg !11606
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11606
  ret void, !dbg !11607
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.107(i32 noundef %0) unnamed_addr #15 !dbg !11608 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11610, metadata !DIExpression()), !dbg !11611
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11612
  %3 = and i32 %2, -57345, !dbg !11612
  %4 = or i32 %3, %0, !dbg !11612
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11612
  ret void, !dbg !11613
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #16 !dbg !11614 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11615
  %2 = lshr i32 %1, 27, !dbg !11616
  %3 = and i32 %2, 1, !dbg !11616
  ret i32 %3, !dbg !11617
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct.sys_memory_stats* nocapture noundef readonly %2, %struct.sys_memory_stats* nocapture noundef readonly %3) local_unnamed_addr #15 !dbg !11618 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11622, metadata !DIExpression()), !dbg !11628
  call void @llvm.dbg.value(metadata i32 %1, metadata !11623, metadata !DIExpression()), !dbg !11628
  call void @llvm.dbg.value(metadata %struct.sys_memory_stats* %2, metadata !11624, metadata !DIExpression()), !dbg !11628
  call void @llvm.dbg.value(metadata %struct.sys_memory_stats* %3, metadata !11625, metadata !DIExpression()), !dbg !11628
  call void @llvm.dbg.value(metadata i32 0, metadata !11626, metadata !DIExpression()), !dbg !11628
  call void @llvm.dbg.value(metadata i32 0, metadata !11627, metadata !DIExpression()), !dbg !11628
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !11629
  %6 = icmp eq i32 %5, 0, !dbg !11631
  br i1 %6, label %7, label %27, !dbg !11632

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct.sys_memory_stats* noundef %2) #26, !dbg !11633
  call void @llvm.dbg.value(metadata i32 %8, metadata !11627, metadata !DIExpression()), !dbg !11628
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.108() #26, !dbg !11635
  %10 = icmp eq i32 %9, 1, !dbg !11637
  br i1 %10, label %19, label %11, !dbg !11638

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !11639
  br i1 %12, label %13, label %14, !dbg !11642

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #26, !dbg !11643
  br label %15, !dbg !11645

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.109() #26, !dbg !11646
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.110() #26, !dbg !11648
  br label %16, !dbg !11649

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.108() #26, !dbg !11650
  %18 = icmp eq i32 %17, 1, !dbg !11651
  br i1 %18, label %19, label %16, !dbg !11649, !llvm.loop !11652

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %2, i32 0, i32 0, !dbg !11654
  %21 = load i32, i32* %20, align 4, !dbg !11654
  %22 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %2, i32 0, i32 1, !dbg !11655
  %23 = load i32, i32* %22, align 4, !dbg !11655
  %24 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %2, i32 0, i32 2, !dbg !11656
  %25 = load i32, i32* %24, align 4, !dbg !11656
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.100(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #26, !dbg !11657
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct.sys_memory_stats* noundef %3) #26, !dbg !11658
  call void @llvm.dbg.value(metadata i32 %26, metadata !11626, metadata !DIExpression()), !dbg !11628
  br label %27, !dbg !11659

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !11660
  call void @llvm.dbg.value(metadata i32 %28, metadata !11626, metadata !DIExpression()), !dbg !11628
  ret i32 %28, !dbg !11661
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.108() unnamed_addr #16 !dbg !11662 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11663
  %2 = lshr i32 %1, 17, !dbg !11664
  %3 = and i32 %2, 1, !dbg !11664
  ret i32 %3, !dbg !11665
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #15 !dbg !11666 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11667
  %2 = or i32 %1, 262144, !dbg !11667
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11667
  ret void, !dbg !11668
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.109() unnamed_addr #15 !dbg !11669 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11670
  %2 = and i32 %1, -262145, !dbg !11670
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11670
  ret void, !dbg !11671
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.110() unnamed_addr #15 !dbg !11672 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11673
  %2 = or i32 %1, 65536, !dbg !11673
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11673
  ret void, !dbg !11674
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #22 !dbg !11675 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !11678, metadata !DIExpression()), !dbg !11694
  call void @llvm.dbg.value(metadata i32 undef, metadata !11678, metadata !DIExpression()), !dbg !11694
  call void @llvm.dbg.value(metadata i32 undef, metadata !11678, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !11694
  ret void, !dbg !11695
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !11696 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11700, metadata !DIExpression()), !dbg !11702
  %2 = icmp eq i8* %0, null, !dbg !11703
  br i1 %2, label %29, label %3, !dbg !11705

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !11706
  %5 = icmp eq i8 %4, 0, !dbg !11707
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !11708
  br i1 %6, label %29, label %8, !dbg !11708

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !11701, metadata !DIExpression()), !dbg !11702
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !11709

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !11701, metadata !DIExpression()), !dbg !11702
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #26, !dbg !11711
  br i1 %10, label %11, label %15, !dbg !11716

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !11717
  %13 = load i8*, i8** %12, align 4, !dbg !11717
  %14 = icmp eq i8* %13, %0, !dbg !11718
  br i1 %14, label %29, label %15, !dbg !11719

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !11720
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !11701, metadata !DIExpression()), !dbg !11702
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !11721
  br i1 %17, label %7, label %8, !dbg !11722, !llvm.loop !11723

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !11701, metadata !DIExpression()), !dbg !11702
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #26, !dbg !11725
  br i1 %20, label %21, label %26, !dbg !11729

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !11730
  %23 = load i8*, i8** %22, align 4, !dbg !11730
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #25, !dbg !11731
  %25 = icmp eq i32 %24, 0, !dbg !11732
  br i1 %25, label %29, label %26, !dbg !11733

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !11734
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !11701, metadata !DIExpression()), !dbg !11702
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !11735
  br i1 %28, label %29, label %18, !dbg !11709, !llvm.loop !11736

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !11702
  ret %struct.device* %30, !dbg !11738
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #5 !dbg !11739 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11743, metadata !DIExpression()), !dbg !11744
  %2 = icmp eq %struct.device* %0, null, !dbg !11745
  br i1 %2, label %14, label %3, !dbg !11747

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !11748
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !11748
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !11749
  %7 = load i8, i8* %6, align 1, !dbg !11749
  %8 = and i8 %7, 1, !dbg !11749
  %9 = icmp eq i8 %8, 0, !dbg !11749
  br i1 %9, label %14, label %10, !dbg !11750

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !11751
  %12 = load i8, i8* %11, align 1, !dbg !11751
  %13 = icmp eq i8 %12, 0, !dbg !11752
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !11744
  ret i1 %15, !dbg !11753
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #4 !dbg !11754 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !11759, metadata !DIExpression()), !dbg !11760
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !11761
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !11762
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !11763 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11771, metadata !DIExpression()), !dbg !11776
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !11772, metadata !DIExpression()), !dbg !11776
  call void @llvm.dbg.value(metadata i8* %2, metadata !11773, metadata !DIExpression()), !dbg !11776
  %5 = bitcast i32* %4 to i8*, !dbg !11777
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !11777
  call void @llvm.dbg.value(metadata i32 0, metadata !11774, metadata !DIExpression()), !dbg !11776
  store i32 0, i32* %4, align 4, !dbg !11778
  call void @llvm.dbg.value(metadata i32* %4, metadata !11774, metadata !DIExpression(DW_OP_deref)), !dbg !11776
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !11779
  call void @llvm.dbg.value(metadata i16* %6, metadata !11775, metadata !DIExpression()), !dbg !11776
  %7 = load i32, i32* %4, align 4, !dbg !11780
  call void @llvm.dbg.value(metadata i32 %7, metadata !11774, metadata !DIExpression()), !dbg !11776
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !11781
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !11782
  ret i32 %8, !dbg !11783
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !11784 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11788, metadata !DIExpression()), !dbg !11794
  call void @llvm.dbg.value(metadata i32* %1, metadata !11789, metadata !DIExpression()), !dbg !11794
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !11795
  %4 = load i16*, i16** %3, align 4, !dbg !11795
  call void @llvm.dbg.value(metadata i16* %4, metadata !11790, metadata !DIExpression()), !dbg !11794
  %5 = icmp eq i16* %4, null, !dbg !11796
  br i1 %5, label %14, label %6, !dbg !11797

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !11798
  call void @llvm.dbg.value(metadata i32 %7, metadata !11791, metadata !DIExpression()), !dbg !11798
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !11799
  %9 = load i16, i16* %8, align 2, !dbg !11799
  %10 = add i16 %9, -32767, !dbg !11800
  %11 = icmp ult i16 %10, 2, !dbg !11800
  %12 = add i32 %7, 1, !dbg !11801
  call void @llvm.dbg.value(metadata i32 %12, metadata !11791, metadata !DIExpression()), !dbg !11798
  br i1 %11, label %13, label %6, !dbg !11800, !llvm.loop !11803

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !11806
  br label %14, !dbg !11807

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !11808
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !11809 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !11813, metadata !DIExpression()), !dbg !11824
  call void @llvm.dbg.value(metadata i32 %1, metadata !11814, metadata !DIExpression()), !dbg !11824
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !11815, metadata !DIExpression()), !dbg !11824
  call void @llvm.dbg.value(metadata i8* %3, metadata !11816, metadata !DIExpression()), !dbg !11824
  call void @llvm.dbg.value(metadata i32 0, metadata !11817, metadata !DIExpression()), !dbg !11825
  %5 = icmp eq i32 %1, 0, !dbg !11826
  br i1 %5, label %16, label %8, !dbg !11827

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !11817, metadata !DIExpression()), !dbg !11825
  %7 = icmp eq i32 %15, %1, !dbg !11826
  br i1 %7, label %16, label %8, !dbg !11827, !llvm.loop !11828

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !11817, metadata !DIExpression()), !dbg !11825
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !11830
  %11 = load i16, i16* %10, align 2, !dbg !11830
  call void @llvm.dbg.value(metadata i16 %11, metadata !11819, metadata !DIExpression()), !dbg !11831
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #26, !dbg !11832
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !11822, metadata !DIExpression()), !dbg !11831
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #25, !dbg !11833
  call void @llvm.dbg.value(metadata i32 %13, metadata !11823, metadata !DIExpression()), !dbg !11831
  %14 = icmp slt i32 %13, 0, !dbg !11834
  %15 = add nuw i32 %9, 1, !dbg !11836
  call void @llvm.dbg.value(metadata i32 %15, metadata !11817, metadata !DIExpression()), !dbg !11825
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !11837
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #11 !dbg !11838 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !11842, metadata !DIExpression()), !dbg !11845
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !11843, metadata !DIExpression()), !dbg !11845
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !11844, metadata !DIExpression()), !dbg !11845
  %2 = sext i16 %0 to i32, !dbg !11846
  %3 = icmp slt i16 %0, 1, !dbg !11848
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !11849
  %6 = add nsw i32 %2, -1, !dbg !11849
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !11849
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !11849
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !11843, metadata !DIExpression()), !dbg !11845
  ret %struct.device* %8, !dbg !11850
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !11851 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11853, metadata !DIExpression()), !dbg !11858
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !11854, metadata !DIExpression()), !dbg !11858
  call void @llvm.dbg.value(metadata i8* %2, metadata !11855, metadata !DIExpression()), !dbg !11858
  %5 = bitcast i32* %4 to i8*, !dbg !11859
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !11859
  call void @llvm.dbg.value(metadata i32 0, metadata !11856, metadata !DIExpression()), !dbg !11858
  store i32 0, i32* %4, align 4, !dbg !11860
  call void @llvm.dbg.value(metadata i32* %4, metadata !11856, metadata !DIExpression(DW_OP_deref)), !dbg !11858
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !11861
  call void @llvm.dbg.value(metadata i16* %6, metadata !11857, metadata !DIExpression()), !dbg !11858
  %7 = load i32, i32* %4, align 4, !dbg !11862
  call void @llvm.dbg.value(metadata i32 %7, metadata !11856, metadata !DIExpression()), !dbg !11858
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !11863
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !11864
  ret i32 %8, !dbg !11865
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !11866 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11868, metadata !DIExpression()), !dbg !11873
  call void @llvm.dbg.value(metadata i32* %1, metadata !11869, metadata !DIExpression()), !dbg !11873
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !11874
  %4 = load i16*, i16** %3, align 4, !dbg !11874
  call void @llvm.dbg.value(metadata i16* %4, metadata !11870, metadata !DIExpression()), !dbg !11873
  call void @llvm.dbg.value(metadata i32 0, metadata !11871, metadata !DIExpression()), !dbg !11873
  call void @llvm.dbg.value(metadata i32 0, metadata !11872, metadata !DIExpression()), !dbg !11873
  %5 = icmp eq i16* %4, null, !dbg !11875
  br i1 %5, label %22, label %6, !dbg !11877

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !11871, metadata !DIExpression()), !dbg !11873
  call void @llvm.dbg.value(metadata i16* %8, metadata !11870, metadata !DIExpression()), !dbg !11873
  %9 = load i16, i16* %8, align 2, !dbg !11878
  %10 = icmp eq i16 %9, -32768, !dbg !11882
  call void @llvm.dbg.value(metadata i32 undef, metadata !11871, metadata !DIExpression()), !dbg !11873
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !11883
  call void @llvm.dbg.value(metadata i16* %11, metadata !11870, metadata !DIExpression()), !dbg !11873
  %12 = zext i1 %10 to i32, !dbg !11884
  %13 = add i32 %7, %12, !dbg !11884
  call void @llvm.dbg.value(metadata i32 %13, metadata !11871, metadata !DIExpression()), !dbg !11873
  %14 = icmp eq i32 %13, 2, !dbg !11885
  br i1 %14, label %15, label %6, !dbg !11886

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !11873
  call void @llvm.dbg.value(metadata i32 %16, metadata !11872, metadata !DIExpression()), !dbg !11873
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !11887
  %18 = load i16, i16* %17, align 2, !dbg !11887
  %19 = icmp eq i16 %18, 32767, !dbg !11888
  %20 = add i32 %16, 1, !dbg !11889
  call void @llvm.dbg.value(metadata i32 %20, metadata !11872, metadata !DIExpression()), !dbg !11873
  br i1 %19, label %21, label %15, !dbg !11891, !llvm.loop !11892

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !11894
  br label %22, !dbg !11895

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !11896
  call void @llvm.dbg.value(metadata i16* %23, metadata !11870, metadata !DIExpression()), !dbg !11873
  ret i16* %23, !dbg !11897
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #5 !dbg !11898 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11901
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !11902
  ret i32* %2, !dbg !11903
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #11 !dbg !11904 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !12052, metadata !DIExpression()), !dbg !12055
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !12053, metadata !DIExpression()), !dbg !12055
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12054, metadata !DIExpression()), !dbg !12055
  ret void, !dbg !12056
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !12057 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12061, metadata !DIExpression()), !dbg !12063
  call void @llvm.dbg.value(metadata i32 %1, metadata !12062, metadata !DIExpression()), !dbg !12063
  ret void, !dbg !12064
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !12065 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12069, metadata !DIExpression()), !dbg !12071
  call void @llvm.dbg.value(metadata i32 %1, metadata !12070, metadata !DIExpression()), !dbg !12071
  ret void, !dbg !12072
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !12073 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12077, metadata !DIExpression()), !dbg !12079
  call void @llvm.dbg.value(metadata i8* %1, metadata !12078, metadata !DIExpression()), !dbg !12079
  ret i32 -134, !dbg !12080
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !12081 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12085, metadata !DIExpression()), !dbg !12087
  call void @llvm.dbg.value(metadata i8* %1, metadata !12086, metadata !DIExpression()), !dbg !12087
  ret i32 -134, !dbg !12088
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #8 !dbg !12089 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12092, metadata !DIExpression()), !dbg !12093
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !12094, !srcloc !12100
  call void @llvm.dbg.value(metadata i32 undef, metadata !12097, metadata !DIExpression()) #24, !dbg !12101
  call void @llvm.dbg.value(metadata i32 undef, metadata !12098, metadata !DIExpression()) #24, !dbg !12101
  br label %3, !dbg !12102

3:                                                ; preds = %3, %1
  br label %3, !dbg !12103, !llvm.loop !12106
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12109 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12113, metadata !DIExpression()), !dbg !12115
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12114, metadata !DIExpression()), !dbg !12115
  tail call void @arch_system_halt(i32 noundef %0) #30, !dbg !12116
  unreachable, !dbg !12116
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #8 !dbg !12117 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12119, metadata !DIExpression()), !dbg !12120
  tail call void @arch_system_halt(i32 noundef %0) #30, !dbg !12121
  unreachable, !dbg !12121
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12122 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12124, metadata !DIExpression()), !dbg !12128
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12125, metadata !DIExpression()), !dbg !12128
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !12129, !srcloc !12100
  call void @llvm.dbg.value(metadata i32 undef, metadata !12097, metadata !DIExpression()) #24, !dbg !12131
  call void @llvm.dbg.value(metadata i32 undef, metadata !12098, metadata !DIExpression()) #24, !dbg !12131
  call void @llvm.dbg.value(metadata i32 undef, metadata !12126, metadata !DIExpression()), !dbg !12128
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12127, metadata !DIExpression()), !dbg !12128
  %4 = icmp eq %struct.__esf* %1, null, !dbg !12132
  br i1 %4, label %6, label %5, !dbg !12134

5:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #26, !dbg !12135
  br label %7, !dbg !12136

6:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #26, !dbg !12135
  br label %7, !dbg !12139

7:                                                ; preds = %6, %5
  %8 = extractvalue { i32, i32 } %3, 0, !dbg !12129
  call void @llvm.dbg.value(metadata i32 %8, metadata !12097, metadata !DIExpression()) #24, !dbg !12131
  call void @llvm.dbg.value(metadata i32 %8, metadata !12126, metadata !DIExpression()), !dbg !12128
  %9 = tail call fastcc %struct.k_thread* @k_current_get.117() #27, !dbg !12141
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !12127, metadata !DIExpression()), !dbg !12128
  call void @llvm.dbg.value(metadata i32 undef, metadata !12142, metadata !DIExpression()) #24, !dbg !12145
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #24, !dbg !12147, !srcloc !12148
  tail call fastcc void @k_thread_abort.118(%struct.k_thread* noundef %9) #26, !dbg !12149
  ret void, !dbg !12152
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.117() unnamed_addr #9 !dbg !12153 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.119() #27, !dbg !12157
  ret %struct.k_thread* %1, !dbg !12158
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.118(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12159 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12163, metadata !DIExpression()), !dbg !12164
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !12165, !srcloc !12167
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !12168
  ret void, !dbg !12169
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.119() unnamed_addr #9 !dbg !12170 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !12171, !srcloc !12173
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !12174
  ret %struct.k_thread* %1, !dbg !12175
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12176 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12180, metadata !DIExpression()), !dbg !12183
  call void @llvm.dbg.value(metadata i32 %1, metadata !12181, metadata !DIExpression()), !dbg !12183
  call void @llvm.dbg.value(metadata i32 %2, metadata !12182, metadata !DIExpression()), !dbg !12183
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #25, !dbg !12184
  ret void, !dbg !12185
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12186 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12190, metadata !DIExpression()), !dbg !12193
  call void @llvm.dbg.value(metadata i8* %1, metadata !12191, metadata !DIExpression()), !dbg !12193
  call void @llvm.dbg.value(metadata i32 %2, metadata !12192, metadata !DIExpression()), !dbg !12193
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #25, !dbg !12194
  ret void, !dbg !12195
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !12196 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #26, !dbg !12197
  ret void, !dbg !12198
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !12199 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12201, metadata !DIExpression()), !dbg !12202
  tail call fastcc void @init_idle_thread(i32 noundef %0) #26, !dbg !12203
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12204
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !12205
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !12206
  %4 = trunc i32 %0 to i8, !dbg !12207
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !12208
  store i8 %4, i8* %5, align 4, !dbg !12209
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !12210
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #26, !dbg !12211
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !12212
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !12213
  store i8* %8, i8** %9, align 4, !dbg !12214
  ret void, !dbg !12215
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !12216 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12218, metadata !DIExpression()), !dbg !12224
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12225
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12219, metadata !DIExpression()), !dbg !12224
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !12226
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !12220, metadata !DIExpression()), !dbg !12224
  call void @llvm.dbg.value(metadata i8* null, metadata !12223, metadata !DIExpression()), !dbg !12224
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !12227
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !12228
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #25, !dbg !12229
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #26, !dbg !12230
  ret void, !dbg !12231
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #11 !dbg !12232 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !12236, metadata !DIExpression()), !dbg !12237
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !12238
  ret i8* %2, !dbg !12239
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !12240 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12245, metadata !DIExpression()), !dbg !12246
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12247
  %3 = load i8, i8* %2, align 1, !dbg !12248
  %4 = and i8 %3, -5, !dbg !12248
  store i8 %4, i8* %2, align 1, !dbg !12248
  ret void, !dbg !12249
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #8 !dbg !12250 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #26, !dbg !12253
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #25, !dbg !12254
  %3 = ptrtoint i8* %2 to i32, !dbg !12263
  %4 = add i32 %3, 2048, !dbg !12264
  call void @llvm.dbg.value(metadata i32 %4, metadata !12258, metadata !DIExpression()) #24, !dbg !12265
  call void @llvm.dbg.value(metadata i32 %4, metadata !12266, metadata !DIExpression()) #24, !dbg !12269
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #24, !dbg !12271, !srcloc !12272
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12273
  %6 = or i32 %5, 512, !dbg !12273
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12273
  tail call fastcc void @__NVIC_SetPriority.126(i32 noundef -2, i32 noundef 255) #25, !dbg !12274
  tail call fastcc void @__NVIC_SetPriority.126(i32 noundef -5, i32 noundef 0) #25, !dbg !12277
  tail call fastcc void @__NVIC_SetPriority.126(i32 noundef -12, i32 noundef 0) #25, !dbg !12278
  tail call fastcc void @__NVIC_SetPriority.126(i32 noundef -11, i32 noundef 0) #25, !dbg !12279
  tail call fastcc void @__NVIC_SetPriority.126(i32 noundef -10, i32 noundef 0) #25, !dbg !12280
  tail call fastcc void @__NVIC_SetPriority.126(i32 noundef -4, i32 noundef 0) #25, !dbg !12281
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12282
  %8 = or i32 %7, 458752, !dbg !12282
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12282
  tail call void @z_arm_fault_init() #25, !dbg !12283
  tail call void @z_arm_cpu_idle_init() #25, !dbg !12284
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !12285
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !12288
  %9 = tail call i32 @z_arm_mpu_init() #25, !dbg !12289
  tail call void @z_arm_configure_static_mpu_regions() #25, !dbg !12290
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !12291
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #24, !dbg !12291
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !12252, metadata !DIExpression()), !dbg !12292
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #26, !dbg !12293
  call void @z_device_state_init() #25, !dbg !12294
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #26, !dbg !12295
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #26, !dbg !12296
  %11 = call fastcc i8* @prepare_multithreading() #26, !dbg !12297
  call fastcc void @switch_to_main_thread(i8* noundef %11) #30, !dbg !12298
  unreachable, !dbg !12298
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !1936 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1940, metadata !DIExpression()), !dbg !12299
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !12300
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !12300
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !1941, metadata !DIExpression()), !dbg !12299
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !1941, metadata !DIExpression()), !dbg !12299
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !12301
  br i1 %7, label %8, label %35, !dbg !12302

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !1941, metadata !DIExpression()), !dbg !12299
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !12303
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !12303
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !1951, metadata !DIExpression()), !dbg !12304
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !12305
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !12305
  %14 = tail call i32 %13(%struct.device* noundef %11) #25, !dbg !12306
  call void @llvm.dbg.value(metadata i32 %14, metadata !1955, metadata !DIExpression()), !dbg !12304
  %15 = icmp eq %struct.device* %11, null, !dbg !12307
  br i1 %15, label %32, label %16, !dbg !12309

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !12310
  br i1 %17, label %26, label %18, !dbg !12313

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !12314
  call void @llvm.dbg.value(metadata i32 %19, metadata !1955, metadata !DIExpression()), !dbg !12304
  %20 = icmp ult i32 %19, 255, !dbg !12316
  %21 = select i1 %20, i32 %19, i32 255, !dbg !12316
  call void @llvm.dbg.value(metadata i32 %21, metadata !1955, metadata !DIExpression()), !dbg !12304
  %22 = trunc i32 %21 to i8, !dbg !12317
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12318
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !12318
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !12319
  store i8 %22, i8* %25, align 1, !dbg !12320
  br label %26, !dbg !12321

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12322
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !12322
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !12323
  %30 = load i8, i8* %29, align 1, !dbg !12324
  %31 = or i8 %30, 1, !dbg !12324
  store i8 %31, i8* %29, align 1, !dbg !12324
  br label %32, !dbg !12325

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !12326
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !1941, metadata !DIExpression()), !dbg !12299
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !12301
  br i1 %34, label %8, label %35, !dbg !12302, !llvm.loop !12327

35:                                               ; preds = %32, %1
  ret void, !dbg !12329
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.126(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !12330 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12332, metadata !DIExpression()), !dbg !12334
  call void @llvm.dbg.value(metadata i32 %1, metadata !12333, metadata !DIExpression()), !dbg !12334
  %3 = trunc i32 %1 to i8, !dbg !12335
  %4 = shl i8 %3, 4, !dbg !12335
  %5 = and i32 %0, 15, !dbg !12338
  %6 = add nsw i32 %5, -4, !dbg !12339
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !12340
  store volatile i8 %4, i8* %7, align 1, !dbg !12341
  ret void, !dbg !12342
}

; Function Attrs: optsize
declare !dbg !12343 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #4 !dbg !12344 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12347, metadata !DIExpression()), !dbg !12348
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12349
  store i8 1, i8* %2, align 1, !dbg !12350
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !12351
  store i8 1, i8* %3, align 4, !dbg !12352
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !12353
  store i32 0, i32* %4, align 4, !dbg !12354
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !12355
  store i32 0, i32* %5, align 4, !dbg !12356
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !12357
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !12358
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12359
  ret void, !dbg !12360
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !12361 {
  tail call void @z_sched_init() #25, !dbg !12366
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12367
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.127, i32 0, i32 0)) #25, !dbg !12368
  call void @llvm.dbg.value(metadata i8* %1, metadata !12365, metadata !DIExpression()), !dbg !12369
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #26, !dbg !12370
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !12371
  tail call void @z_init_cpu(i32 noundef 0) #26, !dbg !12372
  ret i8* %1, !dbg !12373
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #8 !dbg !12374 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12378, metadata !DIExpression()), !dbg !12379
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #25, !dbg !12380
  unreachable, !dbg !12381
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !12382 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12384, metadata !DIExpression()), !dbg !12387
  call void @llvm.dbg.value(metadata i8* %1, metadata !12385, metadata !DIExpression()), !dbg !12387
  call void @llvm.dbg.value(metadata i8* %2, metadata !12386, metadata !DIExpression()), !dbg !12387
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !12388
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #26, !dbg !12389
  tail call void @boot_banner() #25, !dbg !12390
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #26, !dbg !12391
  tail call void @z_init_static_threads() #25, !dbg !12392
  tail call void @main() #25, !dbg !12393
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !12394
  %5 = and i8 %4, -2, !dbg !12394
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !12394
  ret void, !dbg !12395
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !12396 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !12406, metadata !DIExpression()), !dbg !12408
  call void @llvm.dbg.value(metadata i8* %1, metadata !12407, metadata !DIExpression()), !dbg !12408
  ret void, !dbg !12409
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !12410 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !12412, metadata !DIExpression()), !dbg !12414
  call void @llvm.dbg.value(metadata i8* %1, metadata !12413, metadata !DIExpression()), !dbg !12414
  ret void, !dbg !12415
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !12416 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !12417, !srcloc !12424
  call void @llvm.dbg.value(metadata i32 %1, metadata !12420, metadata !DIExpression()) #24, !dbg !12425
  %2 = icmp ne i32 %1, 0, !dbg !12426
  ret i1 %2, !dbg !12427
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #7 !dbg !12428 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12429
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12430
  %3 = load i8, i8* %2, align 4, !dbg !12431
  %4 = or i8 %3, 1, !dbg !12431
  store i8 %4, i8* %2, align 4, !dbg !12431
  ret void, !dbg !12432
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #7 !dbg !12433 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12434
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12435
  %3 = load i8, i8* %2, align 4, !dbg !12436
  %4 = and i8 %3, -2, !dbg !12436
  store i8 %4, i8* %2, align 4, !dbg !12436
  ret void, !dbg !12437
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #5 !dbg !12438 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12439
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12440
  %3 = load i8, i8* %2, align 4, !dbg !12440
  %4 = and i8 %3, 1, !dbg !12441
  %5 = icmp ne i8 %4, 0, !dbg !12442
  ret i1 %5, !dbg !12443
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !12444 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12448, metadata !DIExpression()), !dbg !12450
  call void @llvm.dbg.value(metadata i8* %1, metadata !12449, metadata !DIExpression()), !dbg !12450
  ret i32 -88, !dbg !12451
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !12452 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12456, metadata !DIExpression()), !dbg !12457
  ret i8* null, !dbg !12458
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #11 !dbg !12459 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12463, metadata !DIExpression()), !dbg !12466
  call void @llvm.dbg.value(metadata i8* %1, metadata !12464, metadata !DIExpression()), !dbg !12466
  call void @llvm.dbg.value(metadata i32 %2, metadata !12465, metadata !DIExpression()), !dbg !12466
  ret i32 -88, !dbg !12467
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !1962 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2076, metadata !DIExpression()), !dbg !12468
  call void @llvm.dbg.value(metadata i8* %1, metadata !2077, metadata !DIExpression()), !dbg !12468
  call void @llvm.dbg.value(metadata i32 %2, metadata !2078, metadata !DIExpression()), !dbg !12468
  call void @llvm.dbg.value(metadata i32 0, metadata !2079, metadata !DIExpression()), !dbg !12468
  call void @llvm.dbg.value(metadata i8 undef, metadata !2081, metadata !DIExpression()), !dbg !12468
  %4 = icmp eq i8* %1, null, !dbg !12469
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !12471
  br i1 %6, label %46, label %7, !dbg !12471

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12472
  %9 = load i8, i8* %8, align 1, !dbg !12472
  call void @llvm.dbg.value(metadata i8 %9, metadata !2081, metadata !DIExpression()), !dbg !12468
  %10 = add i32 %2, -1, !dbg !12473
  call void @llvm.dbg.value(metadata i32 %10, metadata !2078, metadata !DIExpression()), !dbg !12468
  call void @llvm.dbg.value(metadata i8 0, metadata !2082, metadata !DIExpression()), !dbg !12474
  call void @llvm.dbg.value(metadata i8 %9, metadata !2081, metadata !DIExpression()), !dbg !12468
  call void @llvm.dbg.value(metadata i32 0, metadata !2079, metadata !DIExpression()), !dbg !12468
  %11 = icmp eq i8 %9, 0, !dbg !12475
  br i1 %11, label %12, label %15, !dbg !12477

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !12478
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !12479
  store i8 0, i8* %14, align 1, !dbg !12480
  br label %46, !dbg !12481

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2082, metadata !DIExpression()), !dbg !12474
  call void @llvm.dbg.value(metadata i8 %17, metadata !2081, metadata !DIExpression()), !dbg !12468
  call void @llvm.dbg.value(metadata i32 %18, metadata !2079, metadata !DIExpression()), !dbg !12468
  %19 = zext i8 %17 to i32, !dbg !12482
  %20 = zext i8 %16 to i32, !dbg !12483
  %21 = shl nuw i32 1, %20, !dbg !12483
  call void @llvm.dbg.value(metadata i32 %21, metadata !2080, metadata !DIExpression()), !dbg !12468
  %22 = and i32 %21, %19, !dbg !12485
  %23 = icmp eq i32 %22, 0, !dbg !12487
  br i1 %23, label %42, label %24, !dbg !12488

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !12489
  %26 = sub i32 %10, %18, !dbg !12490
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !12491
  %28 = load i8*, i8** %27, align 4, !dbg !12491
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !12492
  %30 = load i32, i32* %29, align 4, !dbg !12492
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #26, !dbg !12493
  %32 = add i32 %31, %18, !dbg !12494
  call void @llvm.dbg.value(metadata i32 %32, metadata !2079, metadata !DIExpression()), !dbg !12468
  %33 = trunc i32 %21 to i8, !dbg !12495
  %34 = xor i8 %33, -1, !dbg !12495
  %35 = and i8 %17, %34, !dbg !12495
  call void @llvm.dbg.value(metadata i8 %35, metadata !2081, metadata !DIExpression()), !dbg !12468
  %36 = icmp eq i8 %35, 0, !dbg !12496
  br i1 %36, label %12, label %37, !dbg !12498

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !12499
  %39 = sub i32 %10, %32, !dbg !12501
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i32 noundef 1) #26, !dbg !12502
  %41 = add i32 %40, %32, !dbg !12503
  call void @llvm.dbg.value(metadata i32 %41, metadata !2079, metadata !DIExpression()), !dbg !12468
  br label %42, !dbg !12504

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !12468
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !12468
  call void @llvm.dbg.value(metadata i8 %44, metadata !2081, metadata !DIExpression()), !dbg !12468
  call void @llvm.dbg.value(metadata i32 %43, metadata !2079, metadata !DIExpression()), !dbg !12468
  %45 = add i8 %16, 1, !dbg !12505
  call void @llvm.dbg.value(metadata i8 %45, metadata !2082, metadata !DIExpression()), !dbg !12474
  br label %15, !dbg !12477

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.128, i32 0, i32 0), %3 ], !dbg !12468
  ret i8* %47, !dbg !12506
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !12507 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12511, metadata !DIExpression()), !dbg !12516
  call void @llvm.dbg.value(metadata i32 %1, metadata !12512, metadata !DIExpression()), !dbg !12516
  call void @llvm.dbg.value(metadata i8* %2, metadata !12513, metadata !DIExpression()), !dbg !12516
  call void @llvm.dbg.value(metadata i32 %3, metadata !12514, metadata !DIExpression()), !dbg !12516
  %5 = icmp ult i32 %1, %3, !dbg !12517
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !12517
  call void @llvm.dbg.value(metadata i32 %6, metadata !12515, metadata !DIExpression()), !dbg !12516
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #25, !dbg !12518
  ret i32 %6, !dbg !12519
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12520 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12524, metadata !DIExpression()), !dbg !12525
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #25, !dbg !12526
  ret void, !dbg !12527
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !12528 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12537, metadata !DIExpression()), !dbg !12548
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !12538, metadata !DIExpression()), !dbg !12548
  call void @llvm.dbg.value(metadata i32 %2, metadata !12539, metadata !DIExpression()), !dbg !12548
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !12540, metadata !DIExpression()), !dbg !12548
  call void @llvm.dbg.value(metadata i8* %4, metadata !12541, metadata !DIExpression()), !dbg !12548
  call void @llvm.dbg.value(metadata i8* %5, metadata !12542, metadata !DIExpression()), !dbg !12548
  call void @llvm.dbg.value(metadata i8* %6, metadata !12543, metadata !DIExpression()), !dbg !12548
  call void @llvm.dbg.value(metadata i32 %7, metadata !12544, metadata !DIExpression()), !dbg !12548
  call void @llvm.dbg.value(metadata i32 %8, metadata !12545, metadata !DIExpression()), !dbg !12548
  call void @llvm.dbg.value(metadata i8* undef, metadata !12546, metadata !DIExpression()), !dbg !12548
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !12549
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %11) #26, !dbg !12550
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !12551
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #26, !dbg !12552
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #26, !dbg !12553
  call void @llvm.dbg.value(metadata i8* %13, metadata !12547, metadata !DIExpression()), !dbg !12548
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #25, !dbg !12554
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !12555
  store i8* null, i8** %14, align 4, !dbg !12556
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12557
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !12557
  br i1 %16, label %20, label %17, !dbg !12559

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !12560
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !12560
  br label %20, !dbg !12561

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !12548
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !12562
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !12564
  ret i8* %13, !dbg !12565
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #4 !dbg !12566 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !12571, metadata !DIExpression()), !dbg !12572
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !12573
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #26, !dbg !12574
  ret void, !dbg !12575
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #4 !dbg !12576 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !12581, metadata !DIExpression()), !dbg !12585
  call void @llvm.dbg.value(metadata i32 %1, metadata !12582, metadata !DIExpression()), !dbg !12585
  call void @llvm.dbg.value(metadata i32 %2, metadata !12583, metadata !DIExpression()), !dbg !12585
  call void @llvm.dbg.value(metadata i32 %3, metadata !12584, metadata !DIExpression()), !dbg !12585
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !12586
  store %union.anon* null, %union.anon** %5, align 8, !dbg !12587
  %6 = trunc i32 %3 to i8, !dbg !12588
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !12589
  store i8 %6, i8* %7, align 4, !dbg !12590
  %8 = trunc i32 %2 to i8, !dbg !12591
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !12592
  store i8 %8, i8* %9, align 1, !dbg !12593
  %10 = trunc i32 %1 to i8, !dbg !12594
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !12595
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !12595
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !12595
  store i8 %10, i8* %13, align 2, !dbg !12596
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !12597
  store i8 0, i8* %14, align 1, !dbg !12598
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #26, !dbg !12599
  ret void, !dbg !12600
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !12601 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12605, metadata !DIExpression()), !dbg !12613
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !12606, metadata !DIExpression()), !dbg !12613
  call void @llvm.dbg.value(metadata i32 %2, metadata !12607, metadata !DIExpression()), !dbg !12613
  call void @llvm.dbg.value(metadata i32 0, metadata !12612, metadata !DIExpression()), !dbg !12613
  %4 = add i32 %2, 7, !dbg !12614
  %5 = and i32 %4, -8, !dbg !12614
  %6 = add i32 %5, 64, !dbg !12614
  call void @llvm.dbg.value(metadata i32 %6, metadata !12608, metadata !DIExpression()), !dbg !12613
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.138(%struct.z_thread_stack_element* noundef %1) #26, !dbg !12616
  call void @llvm.dbg.value(metadata i8* %7, metadata !12611, metadata !DIExpression()), !dbg !12613
  call void @llvm.dbg.value(metadata i32 %5, metadata !12609, metadata !DIExpression()), !dbg !12613
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !12617
  call void @llvm.dbg.value(metadata i8* %8, metadata !12610, metadata !DIExpression()), !dbg !12613
  call void @llvm.dbg.value(metadata i32 0, metadata !12612, metadata !DIExpression()), !dbg !12613
  %9 = ptrtoint i8* %7 to i32, !dbg !12618
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !12619
  store i32 %9, i32* %10, align 4, !dbg !12620
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !12621
  store i32 %5, i32* %11, align 4, !dbg !12622
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !12623
  store i32 0, i32* %12, align 4, !dbg !12624
  call void @llvm.dbg.value(metadata i8* %8, metadata !12610, metadata !DIExpression()), !dbg !12613
  ret i8* %8, !dbg !12625
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.138(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #11 !dbg !12626 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !12630, metadata !DIExpression()), !dbg !12631
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !12632
  ret i8* %2, !dbg !12633
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !12634 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !12639, metadata !DIExpression()), !dbg !12640
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !12641
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !12642
  ret void, !dbg !12643
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !12644 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !12646, metadata !DIExpression()), !dbg !12647
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !12648
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #26, !dbg !12649
  ret void, !dbg !12650
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !12651 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12655, metadata !DIExpression()), !dbg !12656
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12657
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !12658
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12659
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !12660
  ret void, !dbg !12661
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !12662 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12667, metadata !DIExpression()), !dbg !12668
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12669
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !12670
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12671
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !12672
  ret void, !dbg !12673
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !12674 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !12691, metadata !DIExpression()), !dbg !12692
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12682, metadata !DIExpression()), !dbg !12692
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !12683, metadata !DIExpression()), !dbg !12692
  call void @llvm.dbg.value(metadata i32 %2, metadata !12684, metadata !DIExpression()), !dbg !12692
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !12685, metadata !DIExpression()), !dbg !12692
  call void @llvm.dbg.value(metadata i8* %4, metadata !12686, metadata !DIExpression()), !dbg !12692
  call void @llvm.dbg.value(metadata i8* %5, metadata !12687, metadata !DIExpression()), !dbg !12692
  call void @llvm.dbg.value(metadata i8* %6, metadata !12688, metadata !DIExpression()), !dbg !12692
  call void @llvm.dbg.value(metadata i32 %7, metadata !12689, metadata !DIExpression()), !dbg !12692
  call void @llvm.dbg.value(metadata i32 %8, metadata !12690, metadata !DIExpression()), !dbg !12692
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #26, !dbg !12693
  %13 = icmp eq i64 %11, -1, !dbg !12694
  br i1 %13, label %15, label %14, !dbg !12696

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #26, !dbg !12697
  br label %15, !dbg !12699

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !12700
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !12701 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !12706, metadata !DIExpression()), !dbg !12707
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12705, metadata !DIExpression()), !dbg !12707
  %4 = icmp eq i64 %3, 0, !dbg !12708
  br i1 %4, label %5, label %6, !dbg !12710

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !12711
  br label %7, !dbg !12713

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !12714
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !12716
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12717 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12721, metadata !DIExpression()), !dbg !12722
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !12723, !srcloc !12725
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !12726
  ret void, !dbg !12727
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !12728 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12731, metadata !DIExpression()), !dbg !12732
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12730, metadata !DIExpression()), !dbg !12732
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !12733
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !12734
  ret void, !dbg !12735
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !12736 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !12738, metadata !DIExpression()), !dbg !12758
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !12759

1:                                                ; preds = %2
  tail call void @k_sched_lock() #25, !dbg !12760
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !12756, metadata !DIExpression()), !dbg !12761
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !12762

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !12738, metadata !DIExpression()), !dbg !12758
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !12763
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !12763
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !12766
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !12766
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !12767
  %9 = load i32, i32* %8, align 4, !dbg !12767
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !12768
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !12768
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !12769
  %13 = load i8*, i8** %12, align 4, !dbg !12769
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !12770
  %15 = load i8*, i8** %14, align 4, !dbg !12770
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !12771
  %17 = load i8*, i8** %16, align 4, !dbg !12771
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !12772
  %19 = load i32, i32* %18, align 4, !dbg !12772
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !12773
  %21 = load i32, i32* %20, align 4, !dbg !12773
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #26, !dbg !12774
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !12775
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !12776
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !12777
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !12777
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !12778
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !12738, metadata !DIExpression()), !dbg !12758
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12779
  br i1 %27, label %2, label %1, !dbg !12759, !llvm.loop !12781

28:                                               ; preds = %0
  tail call void @k_sched_lock() #25, !dbg !12760
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !12756, metadata !DIExpression()), !dbg !12761
  br label %29, !dbg !12762

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #25, !dbg !12783
  ret void, !dbg !12784

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !12756, metadata !DIExpression()), !dbg !12761
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !12785
  %33 = load i32, i32* %32, align 4, !dbg !12785
  %34 = icmp eq i32 %33, -1, !dbg !12789
  br i1 %34, label %43, label %35, !dbg !12790

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !12791
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !12791
  %38 = icmp sgt i32 %33, 0, !dbg !12793
  %39 = select i1 %38, i32 %33, i32 0, !dbg !12793
  %40 = zext i32 %39 to i64, !dbg !12793
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %40) #26, !dbg !12793
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !12794
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #26, !dbg !12794
  br label %43, !dbg !12795

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !12796
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !12756, metadata !DIExpression()), !dbg !12761
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12797
  br i1 %45, label %30, label %29, !dbg !12762, !llvm.loop !12799
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !12801 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !12806, metadata !DIExpression()), !dbg !12807
  call void @llvm.dbg.value(metadata i64 %0, metadata !12808, metadata !DIExpression()), !dbg !12825
  call void @llvm.dbg.value(metadata i32 1000, metadata !12813, metadata !DIExpression()), !dbg !12825
  call void @llvm.dbg.value(metadata i32 10000, metadata !12814, metadata !DIExpression()), !dbg !12825
  call void @llvm.dbg.value(metadata i8 1, metadata !12815, metadata !DIExpression()), !dbg !12825
  call void @llvm.dbg.value(metadata i8 0, metadata !12816, metadata !DIExpression()), !dbg !12825
  call void @llvm.dbg.value(metadata i8 1, metadata !12817, metadata !DIExpression()), !dbg !12825
  call void @llvm.dbg.value(metadata i8 0, metadata !12818, metadata !DIExpression()), !dbg !12825
  call void @llvm.dbg.value(metadata i8 1, metadata !12819, metadata !DIExpression()), !dbg !12825
  call void @llvm.dbg.value(metadata i8 0, metadata !12820, metadata !DIExpression()), !dbg !12825
  call void @llvm.dbg.value(metadata i64 0, metadata !12821, metadata !DIExpression()), !dbg !12825
  call void @llvm.dbg.value(metadata i64 0, metadata !12821, metadata !DIExpression()), !dbg !12825
  %2 = mul i64 %0, 10, !dbg !12827
  ret i64 %2, !dbg !12833
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #8 !dbg !12834 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !12836, metadata !DIExpression()), !dbg !12840
  call void @llvm.dbg.value(metadata i8* %1, metadata !12837, metadata !DIExpression()), !dbg !12840
  call void @llvm.dbg.value(metadata i8* %2, metadata !12838, metadata !DIExpression()), !dbg !12840
  call void @llvm.dbg.value(metadata i8* %3, metadata !12839, metadata !DIExpression()), !dbg !12840
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12841
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !12842
  %7 = load i8, i8* %6, align 4, !dbg !12843
  %8 = or i8 %7, 4, !dbg !12843
  store i8 %8, i8* %6, align 4, !dbg !12843
  tail call void @z_thread_essential_clear() #26, !dbg !12844
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #28, !dbg !12845
  unreachable, !dbg !12845
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !12846 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12850, metadata !DIExpression()), !dbg !12851
  ret i32 -134, !dbg !12852
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #11 !dbg !12853 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12857, metadata !DIExpression()), !dbg !12859
  call void @llvm.dbg.value(metadata i32 %1, metadata !12858, metadata !DIExpression()), !dbg !12859
  ret i32 -134, !dbg !12860
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #11 !dbg !12861 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12868, metadata !DIExpression()), !dbg !12870
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !12869, metadata !DIExpression()), !dbg !12870
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !12871
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !12873
  %6 = select i1 %5, i32 -22, i32 0, !dbg !12870
  ret i32 %6, !dbg !12874
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #11 !dbg !12875 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !12879, metadata !DIExpression()), !dbg !12880
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !12881
  %3 = select i1 %2, i32 -22, i32 0, !dbg !12880
  ret i32 %3, !dbg !12883
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !12884 {
  tail call void @sys_clock_idle_exit() #25, !dbg !12886
  ret void, !dbg !12887
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #8 !dbg !12888 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12890, metadata !DIExpression()), !dbg !12893
  call void @llvm.dbg.value(metadata i8* %1, metadata !12891, metadata !DIExpression()), !dbg !12893
  call void @llvm.dbg.value(metadata i8* %2, metadata !12892, metadata !DIExpression()), !dbg !12893
  br label %4, !dbg !12894

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !12895, !srcloc !12902
  call void @llvm.dbg.value(metadata i32 undef, metadata !12898, metadata !DIExpression()) #24, !dbg !12903
  call void @llvm.dbg.value(metadata i32 undef, metadata !12899, metadata !DIExpression()) #24, !dbg !12903
  tail call fastcc void @k_cpu_idle() #26, !dbg !12904
  br label %4, !dbg !12894, !llvm.loop !12905
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !12907 {
  tail call void @arch_cpu_idle() #25, !dbg !12908
  ret void, !dbg !12909
}

; Function Attrs: optsize
declare !dbg !12910 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !12911 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12915, metadata !DIExpression()), !dbg !12919
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !12916, metadata !DIExpression()), !dbg !12919
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !12920
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !12920
  %5 = load i8, i8* %4, align 2, !dbg !12920
  call void @llvm.dbg.value(metadata i8 %5, metadata !12917, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !12919
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !12921
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !12921
  %8 = load i8, i8* %7, align 2, !dbg !12921
  call void @llvm.dbg.value(metadata i8 %8, metadata !12918, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !12919
  %9 = icmp eq i8 %8, %5, !dbg !12922
  %10 = sext i8 %5 to i32, !dbg !12924
  %11 = sext i8 %8 to i32, !dbg !12924
  %12 = sub nsw i32 %11, %10, !dbg !12924
  %13 = select i1 %9, i32 0, i32 %12, !dbg !12924
  ret i32 %13, !dbg !12925
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !12926 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12930, metadata !DIExpression()), !dbg !12931
  %2 = tail call fastcc i32 @slice_time() #26, !dbg !12932
  %3 = icmp eq i32 %2, 0, !dbg !12934
  br i1 %3, label %8, label %4, !dbg !12935

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #25, !dbg !12936
  %6 = add i32 %5, %2, !dbg !12938
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12939
  %7 = tail call fastcc i32 @slice_time() #26, !dbg !12940
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #25, !dbg !12941
  br label %8, !dbg !12942

8:                                                ; preds = %4, %1
  ret void, !dbg !12943
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #5 !dbg !12944 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12948, metadata !DIExpression()), !dbg !12950
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !12951
  call void @llvm.dbg.value(metadata i32 %1, metadata !12949, metadata !DIExpression()), !dbg !12950
  ret i32 %1, !dbg !12952
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12953 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12957, metadata !DIExpression()), !dbg !12966
  call void @llvm.dbg.value(metadata i32 %1, metadata !12958, metadata !DIExpression()), !dbg !12966
  call void @llvm.dbg.value(metadata i32 0, metadata !12959, metadata !DIExpression()), !dbg !12967
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12968, metadata !DIExpression()) #24, !dbg !12975
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !12977, !srcloc !12983
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !12977
  call void @llvm.dbg.value(metadata i32 %4, metadata !12980, metadata !DIExpression()) #24, !dbg !12984
  call void @llvm.dbg.value(metadata i32 undef, metadata !12981, metadata !DIExpression()) #24, !dbg !12984
  call void @llvm.dbg.value(metadata i32 %4, metadata !12974, metadata !DIExpression()) #24, !dbg !12975
  call void @llvm.dbg.value(metadata i32 %4, metadata !12965, metadata !DIExpression()), !dbg !12967
  call void @llvm.dbg.value(metadata i32 undef, metadata !12959, metadata !DIExpression()), !dbg !12967
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12985
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #26, !dbg !12988
  %6 = icmp sgt i32 %0, 0, !dbg !12989
  %7 = icmp sgt i32 %5, 2, !dbg !12991
  %8 = select i1 %7, i32 %5, i32 2, !dbg !12991
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !12991
  store i32 %9, i32* @slice_ticks, align 4, !dbg !12992
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !12993
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !12994
  call void @llvm.dbg.value(metadata i32 %4, metadata !12995, metadata !DIExpression()) #24, !dbg !13001
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13000, metadata !DIExpression()) #24, !dbg !13001
  call void @llvm.dbg.value(metadata i32 %4, metadata !13003, metadata !DIExpression()) #24, !dbg !13006
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !13008, !srcloc !13009
  call void @llvm.dbg.value(metadata i32 1, metadata !12959, metadata !DIExpression()), !dbg !12967
  call void @llvm.dbg.value(metadata i32 undef, metadata !12959, metadata !DIExpression()), !dbg !12967
  ret void, !dbg !13010
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #11 !dbg !13011 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13013, metadata !DIExpression()), !dbg !13014
  call void @llvm.dbg.value(metadata i32 %0, metadata !13015, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13030
  call void @llvm.dbg.value(metadata i32 1000, metadata !13018, metadata !DIExpression()), !dbg !13030
  call void @llvm.dbg.value(metadata i32 10000, metadata !13019, metadata !DIExpression()), !dbg !13030
  call void @llvm.dbg.value(metadata i8 1, metadata !13020, metadata !DIExpression()), !dbg !13030
  call void @llvm.dbg.value(metadata i1 true, metadata !13021, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13030
  call void @llvm.dbg.value(metadata i1 true, metadata !13022, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13030
  call void @llvm.dbg.value(metadata i8 0, metadata !13023, metadata !DIExpression()), !dbg !13030
  call void @llvm.dbg.value(metadata i1 true, metadata !13024, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13030
  call void @llvm.dbg.value(metadata i1 false, metadata !13025, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13030
  call void @llvm.dbg.value(metadata i64 0, metadata !13026, metadata !DIExpression()), !dbg !13030
  call void @llvm.dbg.value(metadata i64 0, metadata !13026, metadata !DIExpression()), !dbg !13030
  %2 = mul i32 %0, 10, !dbg !13032
  ret i32 %2, !dbg !13038
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !13039 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13041, metadata !DIExpression()), !dbg !13043
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12968, metadata !DIExpression()) #24, !dbg !13044
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13046, !srcloc !12983
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13046
  call void @llvm.dbg.value(metadata i32 %3, metadata !12980, metadata !DIExpression()) #24, !dbg !13048
  call void @llvm.dbg.value(metadata i32 undef, metadata !12981, metadata !DIExpression()) #24, !dbg !13048
  call void @llvm.dbg.value(metadata i32 %3, metadata !12974, metadata !DIExpression()) #24, !dbg !13044
  call void @llvm.dbg.value(metadata i32 %3, metadata !13042, metadata !DIExpression()), !dbg !13043
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !13049
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13051
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !13052
  br i1 %6, label %7, label %8, !dbg !13053

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !13054
  call void @llvm.dbg.value(metadata i32 %3, metadata !12995, metadata !DIExpression()) #24, !dbg !13056
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13000, metadata !DIExpression()) #24, !dbg !13056
  call void @llvm.dbg.value(metadata i32 %3, metadata !13003, metadata !DIExpression()) #24, !dbg !13058
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !13060, !srcloc !13009
  br label %24, !dbg !13061

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !13062
  %9 = tail call fastcc i32 @slice_time() #26, !dbg !13063
  %10 = icmp eq i32 %9, 0, !dbg !13063
  br i1 %10, label %21, label %11, !dbg !13065

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #26, !dbg !13066
  br i1 %12, label %13, label %21, !dbg !13067

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13068
  %15 = icmp sgt i32 %14, %0, !dbg !13071
  br i1 %15, label %19, label %16, !dbg !13072

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !13073
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #26, !dbg !13073
  call void @llvm.dbg.value(metadata i32 %18, metadata !13042, metadata !DIExpression()), !dbg !13043
  br label %22, !dbg !13075

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !13076
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13076
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13078
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !13043
  call void @llvm.dbg.value(metadata i32 %23, metadata !13042, metadata !DIExpression()), !dbg !13043
  call void @llvm.dbg.value(metadata i32 %23, metadata !12995, metadata !DIExpression()) #24, !dbg !13080
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13000, metadata !DIExpression()) #24, !dbg !13080
  call void @llvm.dbg.value(metadata i32 %23, metadata !13003, metadata !DIExpression()) #24, !dbg !13082
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #24, !dbg !13084, !srcloc !13009
  br label %24, !dbg !13085

24:                                               ; preds = %22, %7
  ret void, !dbg !13085
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #5 !dbg !13086 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13090, metadata !DIExpression()), !dbg !13092
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #26, !dbg !13093
  %3 = icmp eq i32 %2, 0, !dbg !13093
  br i1 %3, label %16, label %4, !dbg !13094

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !13095
  br i1 %5, label %16, label %6, !dbg !13096

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !13097
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !13097
  %9 = load i8, i8* %8, align 2, !dbg !13097
  %10 = sext i8 %9 to i32, !dbg !13098
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !13099
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #26, !dbg !13100
  br i1 %12, label %16, label %13, !dbg !13101

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #26, !dbg !13102
  %15 = xor i1 %14, true, !dbg !13103
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !13092
  call void @llvm.dbg.value(metadata i1 %17, metadata !13091, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13092
  ret i1 %17, !dbg !13104
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !13105 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13109, metadata !DIExpression()), !dbg !13111
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13112
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13110, metadata !DIExpression()), !dbg !13111
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #26, !dbg !13113
  br i1 %3, label %5, label %4, !dbg !13115

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #26, !dbg !13116
  br label %5, !dbg !13118

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !13109, metadata !DIExpression()), !dbg !13111
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !13119
  ret i32 %6, !dbg !13120
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13121 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13123, metadata !DIExpression()), !dbg !13125
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13126
  %3 = load i8, i8* %2, align 1, !dbg !13126
  call void @llvm.dbg.value(metadata i8 %3, metadata !13124, metadata !DIExpression()), !dbg !13125
  %4 = and i8 %3, 31, !dbg !13127
  %5 = icmp ne i8 %4, 0, !dbg !13128
  ret i1 %5, !dbg !13129
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13130 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13132, metadata !DIExpression()), !dbg !13133
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !13134
  br i1 %2, label %3, label %7, !dbg !13136

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13137, metadata !DIExpression()) #24, !dbg !13140
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13143
  %5 = load i8, i8* %4, align 1, !dbg !13144
  %6 = and i8 %5, 127, !dbg !13144
  store i8 %6, i8* %4, align 1, !dbg !13144
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13145, metadata !DIExpression()) #24, !dbg !13148
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !13152
  br label %7, !dbg !13153

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13154, metadata !DIExpression()) #24, !dbg !13157
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13159
  %9 = load i8, i8* %8, align 1, !dbg !13160
  %10 = or i8 %9, -128, !dbg !13160
  store i8 %10, i8* %8, align 1, !dbg !13160
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13161, metadata !DIExpression()) #24, !dbg !13164
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13168, metadata !DIExpression()) #24, !dbg !13176
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13174, metadata !DIExpression()) #24, !dbg !13176
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !13178
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !13175, metadata !DIExpression()) #24, !dbg !13176
  %12 = icmp eq %struct._dnode* %11, null, !dbg !13180
  br i1 %12, label %23, label %13, !dbg !13178

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !13175, metadata !DIExpression()) #24, !dbg !13176
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !13182
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !13175, metadata !DIExpression()) #24, !dbg !13176
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #25, !dbg !13183
  %17 = icmp sgt i32 %16, 0, !dbg !13186
  br i1 %17, label %18, label %20, !dbg !13187

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13188
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #25, !dbg !13190
  br label %25, !dbg !13191

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #25, !dbg !13180
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !13175, metadata !DIExpression()) #24, !dbg !13176
  %22 = icmp eq %struct._dnode* %21, null, !dbg !13180
  br i1 %22, label %23, label %13, !dbg !13178, !llvm.loop !13192

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13194
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #25, !dbg !13195
  br label %25, !dbg !13196

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13197
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !13198
  %28 = zext i1 %27 to i32, !dbg !13198
  tail call fastcc void @update_cache(i32 noundef %28) #26, !dbg !13199
  ret void, !dbg !13200
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13201 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13203, metadata !DIExpression()), !dbg !13204
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #26, !dbg !13205
  ret i1 %2, !dbg !13206
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #7 !dbg !13207 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !13209, metadata !DIExpression()), !dbg !13211
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13210, metadata !DIExpression()), !dbg !13211
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !13212
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #26, !dbg !13213
  ret void, !dbg !13214
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #5 !dbg !13215 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13219, metadata !DIExpression()), !dbg !13220
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #26, !dbg !13221
  br i1 %2, label %6, label %3, !dbg !13221

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13222
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !13222
  br label %6, !dbg !13221

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !13221
  ret %struct._dnode* %7, !dbg !13223
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !13224 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13228, metadata !DIExpression()), !dbg !13232
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13229, metadata !DIExpression()), !dbg !13232
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13233
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !13233
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !13230, metadata !DIExpression()), !dbg !13232
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !13234
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !13235
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !13236
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !13237
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !13238
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !13239
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !13240
  ret void, !dbg !13241
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !13242 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13246, metadata !DIExpression()), !dbg !13248
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13247, metadata !DIExpression()), !dbg !13248
  %3 = icmp eq %struct._dnode* %1, null, !dbg !13249
  br i1 %3, label %6, label %4, !dbg !13250

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #26, !dbg !13251
  br label %6, !dbg !13250

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !13250
  ret %struct._dnode* %7, !dbg !13252
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !13253 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13257, metadata !DIExpression()), !dbg !13260
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13258, metadata !DIExpression()), !dbg !13260
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13261
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !13261
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !13259, metadata !DIExpression()), !dbg !13260
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !13262
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !13263
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !13264
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !13265
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !13266
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !13267
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !13268
  ret void, !dbg !13269
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !13270 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13272, metadata !DIExpression()), !dbg !13274
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !13275
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13282, metadata !DIExpression()) #24, !dbg !13284
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !13285
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !13286
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !13286
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13273, metadata !DIExpression()), !dbg !13274
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13287, metadata !DIExpression()) #24, !dbg !13293
  call void @llvm.dbg.value(metadata i32 %0, metadata !13292, metadata !DIExpression()) #24, !dbg !13293
  %6 = icmp eq i32 %0, 0, !dbg !13296
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13298
  br i1 %6, label %8, label %15, !dbg !13299

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #25, !dbg !13300
  br i1 %9, label %15, label %10, !dbg !13302

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #25, !dbg !13303
  br i1 %11, label %15, label %12, !dbg !13305

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #25, !dbg !13306
  %14 = icmp eq i32 %13, 0, !dbg !13306
  br i1 %14, label %18, label %15, !dbg !13308

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !13309
  br i1 %16, label %18, label %17, !dbg !13312

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !13313
  br label %18, !dbg !13315

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !13298
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13298
  ret void, !dbg !13316
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #5 !dbg !13317 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13321, metadata !DIExpression()), !dbg !13324
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13322, metadata !DIExpression()), !dbg !13324
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #26, !dbg !13325
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !13323, metadata !DIExpression()), !dbg !13324
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !13322, metadata !DIExpression()), !dbg !13324
  ret %struct.k_thread* %3, !dbg !13326
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13327 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13329, metadata !DIExpression()), !dbg !13330
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13331
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !13332
  %4 = xor i1 %3, true, !dbg !13333
  ret i1 %4, !dbg !13334
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13335 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13337, metadata !DIExpression()), !dbg !13338
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !13339
  %3 = load i16, i16* %2, align 2, !dbg !13339
  %4 = icmp ult i16 %3, 128, !dbg !13340
  %5 = zext i1 %4 to i32, !dbg !13340
  ret i32 %5, !dbg !13341
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13342 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13348, metadata !DIExpression()), !dbg !13349
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13350
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #26, !dbg !13351
  %4 = xor i1 %3, true, !dbg !13352
  ret i1 %4, !dbg !13353
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13354 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13360, metadata !DIExpression()), !dbg !13361
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13362
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13362
  %4 = icmp ne %struct._dnode* %3, null, !dbg !13363
  ret i1 %4, !dbg !13364
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !13365 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13367, metadata !DIExpression()), !dbg !13369
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13368, metadata !DIExpression()), !dbg !13369
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13370
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !13370
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !13371
  br i1 %5, label %9, label %6, !dbg !13372

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !13373
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !13373
  br label %9, !dbg !13372

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !13372
  ret %struct._dnode* %10, !dbg !13374
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !13375 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13379, metadata !DIExpression()), !dbg !13380
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13381
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13381
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !13382
  ret i1 %4, !dbg !13383
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #7 !dbg !13384 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13388, metadata !DIExpression()), !dbg !13391
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13392
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13392
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !13389, metadata !DIExpression()), !dbg !13391
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13393
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !13393
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !13390, metadata !DIExpression()), !dbg !13391
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !13394
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !13395
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !13396
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !13397
  tail call fastcc void @sys_dnode_init.143(%struct._dnode* noundef %0) #26, !dbg !13398
  ret void, !dbg !13399
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.143(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !13400 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13402, metadata !DIExpression()), !dbg !13403
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13404
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !13405
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13406
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !13407
  ret void, !dbg !13408
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13409 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13413, metadata !DIExpression()), !dbg !13415
  call void @llvm.dbg.value(metadata i32 128, metadata !13414, metadata !DIExpression()), !dbg !13415
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13416
  %3 = load i8, i8* %2, align 1, !dbg !13416
  %4 = icmp slt i8 %3, 0, !dbg !13417
  ret i1 %4, !dbg !13418
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !13419 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13423, metadata !DIExpression()), !dbg !13425
  call void @llvm.dbg.value(metadata i32 %1, metadata !13424, metadata !DIExpression()), !dbg !13425
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #26, !dbg !13426
  ret i1 %3, !dbg !13427
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #11 !dbg !13428 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13430, metadata !DIExpression()), !dbg !13431
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !13432
  ret i1 %2, !dbg !13433
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !13434 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13436, metadata !DIExpression()), !dbg !13438
  call void @llvm.dbg.value(metadata i32 %1, metadata !13437, metadata !DIExpression()), !dbg !13438
  %3 = icmp slt i32 %0, %1, !dbg !13439
  ret i1 %3, !dbg !13440
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13441 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13443, metadata !DIExpression()), !dbg !13447
  call void @llvm.dbg.value(metadata i32 0, metadata !13444, metadata !DIExpression()), !dbg !13448
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12968, metadata !DIExpression()) #24, !dbg !13449
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13451, !srcloc !12983
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13451
  call void @llvm.dbg.value(metadata i32 %3, metadata !12980, metadata !DIExpression()) #24, !dbg !13453
  call void @llvm.dbg.value(metadata i32 undef, metadata !12981, metadata !DIExpression()) #24, !dbg !13453
  call void @llvm.dbg.value(metadata i32 %3, metadata !12974, metadata !DIExpression()) #24, !dbg !13449
  call void @llvm.dbg.value(metadata i32 %3, metadata !13446, metadata !DIExpression()), !dbg !13448
  call void @llvm.dbg.value(metadata i32 undef, metadata !13444, metadata !DIExpression()), !dbg !13448
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !13454
  call void @llvm.dbg.value(metadata i32 %3, metadata !12995, metadata !DIExpression()) #24, !dbg !13459
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13000, metadata !DIExpression()) #24, !dbg !13459
  call void @llvm.dbg.value(metadata i32 %3, metadata !13003, metadata !DIExpression()) #24, !dbg !13461
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !13463, !srcloc !13009
  call void @llvm.dbg.value(metadata i32 1, metadata !13444, metadata !DIExpression()), !dbg !13448
  call void @llvm.dbg.value(metadata i32 undef, metadata !13444, metadata !DIExpression()), !dbg !13448
  ret void, !dbg !13464
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13465 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13467, metadata !DIExpression()), !dbg !13468
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !13469
  br i1 %2, label %24, label %3, !dbg !13471

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !13472
  br i1 %4, label %5, label %24, !dbg !13473

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13154, metadata !DIExpression()) #24, !dbg !13474
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13477
  %7 = load i8, i8* %6, align 1, !dbg !13478
  %8 = or i8 %7, -128, !dbg !13478
  store i8 %8, i8* %6, align 1, !dbg !13478
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13161, metadata !DIExpression()) #24, !dbg !13479
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13168, metadata !DIExpression()) #24, !dbg !13481
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13174, metadata !DIExpression()) #24, !dbg !13481
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !13483
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !13175, metadata !DIExpression()) #24, !dbg !13481
  %10 = icmp eq %struct._dnode* %9, null, !dbg !13484
  br i1 %10, label %21, label %11, !dbg !13483

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !13175, metadata !DIExpression()) #24, !dbg !13481
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !13485
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !13175, metadata !DIExpression()) #24, !dbg !13481
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #25, !dbg !13486
  %15 = icmp sgt i32 %14, 0, !dbg !13487
  br i1 %15, label %16, label %18, !dbg !13488

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13489
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #25, !dbg !13490
  br label %23, !dbg !13491

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #25, !dbg !13484
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !13175, metadata !DIExpression()) #24, !dbg !13481
  %20 = icmp eq %struct._dnode* %19, null, !dbg !13484
  br i1 %20, label %21, label %11, !dbg !13483, !llvm.loop !13492

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13494
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #25, !dbg !13495
  br label %23, !dbg !13496

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !13497
  br label %24, !dbg !13498

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !13499
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13500 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13502, metadata !DIExpression()), !dbg !13503
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !13504
  br i1 %2, label %6, label %3, !dbg !13505

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #26, !dbg !13506
  %5 = xor i1 %4, true, !dbg !13505
  br label %6, !dbg !13505

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !13507
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13508 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13510, metadata !DIExpression()), !dbg !13514
  call void @llvm.dbg.value(metadata i32 0, metadata !13511, metadata !DIExpression()), !dbg !13515
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12968, metadata !DIExpression()) #24, !dbg !13516
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13518, !srcloc !12983
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13518
  call void @llvm.dbg.value(metadata i32 %3, metadata !12980, metadata !DIExpression()) #24, !dbg !13520
  call void @llvm.dbg.value(metadata i32 undef, metadata !12981, metadata !DIExpression()) #24, !dbg !13520
  call void @llvm.dbg.value(metadata i32 %3, metadata !12974, metadata !DIExpression()) #24, !dbg !13516
  call void @llvm.dbg.value(metadata i32 %3, metadata !13513, metadata !DIExpression()), !dbg !13515
  call void @llvm.dbg.value(metadata i32 undef, metadata !13511, metadata !DIExpression()), !dbg !13515
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #26, !dbg !13521
  call void @llvm.dbg.value(metadata i32 %3, metadata !12995, metadata !DIExpression()) #24, !dbg !13524
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13000, metadata !DIExpression()) #24, !dbg !13524
  call void @llvm.dbg.value(metadata i32 %3, metadata !13003, metadata !DIExpression()) #24, !dbg !13526
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !13528, !srcloc !13009
  call void @llvm.dbg.value(metadata i32 1, metadata !13511, metadata !DIExpression()), !dbg !13515
  call void @llvm.dbg.value(metadata i32 undef, metadata !13511, metadata !DIExpression()), !dbg !13515
  ret void, !dbg !13529
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13530 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13532, metadata !DIExpression()), !dbg !13534
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12968, metadata !DIExpression()) #24, !dbg !13535
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13537, !srcloc !12983
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13537
  call void @llvm.dbg.value(metadata i32 %3, metadata !12980, metadata !DIExpression()) #24, !dbg !13539
  call void @llvm.dbg.value(metadata i32 undef, metadata !12981, metadata !DIExpression()) #24, !dbg !13539
  call void @llvm.dbg.value(metadata i32 %3, metadata !12974, metadata !DIExpression()) #24, !dbg !13535
  call void @llvm.dbg.value(metadata i32 %3, metadata !13533, metadata !DIExpression()), !dbg !13534
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #26, !dbg !13540
  br i1 %4, label %5, label %6, !dbg !13542

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !12995, metadata !DIExpression()) #24, !dbg !13543
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13000, metadata !DIExpression()) #24, !dbg !13543
  call void @llvm.dbg.value(metadata i32 %3, metadata !13003, metadata !DIExpression()) #24, !dbg !13546
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !13548, !srcloc !13009
  br label %8, !dbg !13549

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.148(%struct.k_thread* noundef %0) #26, !dbg !13550
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !13551
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !13552
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !13552
  br label %8, !dbg !13553

8:                                                ; preds = %6, %5
  ret void, !dbg !13553
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13554 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13556, metadata !DIExpression()), !dbg !13557
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13558
  %3 = load i8, i8* %2, align 1, !dbg !13558
  %4 = and i8 %3, 4, !dbg !13559
  %5 = icmp eq i8 %4, 0, !dbg !13560
  ret i1 %5, !dbg !13561
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.148(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !13562 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13564, metadata !DIExpression()), !dbg !13565
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13566
  %3 = load i8, i8* %2, align 1, !dbg !13567
  %4 = and i8 %3, -5, !dbg !13567
  store i8 %4, i8* %2, align 1, !dbg !13567
  ret void, !dbg !13568
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !13569 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !13572, metadata !DIExpression()), !dbg !13573
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13571, metadata !DIExpression()), !dbg !13573
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #26, !dbg !13574
  br i1 %4, label %5, label %9, !dbg !13576

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #26, !dbg !13577
  br i1 %6, label %7, label %9, !dbg !13578

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !13579, metadata !DIExpression()) #24, !dbg !13585
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13584, metadata !DIExpression()) #24, !dbg !13585
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !13588
  br label %10, !dbg !13589

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !12995, metadata !DIExpression()) #24, !dbg !13590
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13000, metadata !DIExpression()) #24, !dbg !13590
  call void @llvm.dbg.value(metadata i32 %3, metadata !13003, metadata !DIExpression()) #24, !dbg !13593
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !13595, !srcloc !13009
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !13596
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !13597 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13601, metadata !DIExpression()), !dbg !13602
  call void @llvm.dbg.value(metadata i32 %0, metadata !13603, metadata !DIExpression()), !dbg !13608
  %2 = icmp eq i32 %0, 0, !dbg !13610
  br i1 %2, label %3, label %6, !dbg !13611

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !13612, !srcloc !13619
  call void @llvm.dbg.value(metadata i32 %4, metadata !13615, metadata !DIExpression()) #24, !dbg !13620
  %5 = icmp eq i32 %4, 0, !dbg !13621
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !13602
  ret i1 %7, !dbg !13622
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #5 !dbg !13623 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13626
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13625, metadata !DIExpression()), !dbg !13627
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13628
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !13629
  ret i1 %3, !dbg !13630
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !13631 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13633, metadata !DIExpression()), !dbg !13635
  %2 = tail call i32 @arch_swap(i32 noundef %0) #25, !dbg !13636
  call void @llvm.dbg.value(metadata i32 %2, metadata !13634, metadata !DIExpression()), !dbg !13635
  ret i32 %2, !dbg !13637
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13638 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13640, metadata !DIExpression()), !dbg !13644
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !13645
  call void @llvm.dbg.value(metadata i32 0, metadata !13641, metadata !DIExpression()), !dbg !13646
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12968, metadata !DIExpression()) #24, !dbg !13647
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13649, !srcloc !12983
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !13649
  call void @llvm.dbg.value(metadata i32 %4, metadata !12980, metadata !DIExpression()) #24, !dbg !13651
  call void @llvm.dbg.value(metadata i32 undef, metadata !12981, metadata !DIExpression()) #24, !dbg !13651
  call void @llvm.dbg.value(metadata i32 %4, metadata !12974, metadata !DIExpression()) #24, !dbg !13647
  call void @llvm.dbg.value(metadata i32 %4, metadata !13643, metadata !DIExpression()), !dbg !13646
  call void @llvm.dbg.value(metadata i32 undef, metadata !13641, metadata !DIExpression()), !dbg !13646
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !13652
  br i1 %5, label %6, label %10, !dbg !13656

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13137, metadata !DIExpression()) #24, !dbg !13657
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13660
  %8 = load i8, i8* %7, align 1, !dbg !13661
  %9 = and i8 %8, 127, !dbg !13661
  store i8 %9, i8* %7, align 1, !dbg !13661
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13145, metadata !DIExpression()) #24, !dbg !13662
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !13664
  br label %10, !dbg !13665

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #26, !dbg !13666
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13667
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !13668
  %13 = zext i1 %12 to i32, !dbg !13668
  tail call fastcc void @update_cache(i32 noundef %13) #26, !dbg !13669
  call void @llvm.dbg.value(metadata i32 %4, metadata !12995, metadata !DIExpression()) #24, !dbg !13670
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13000, metadata !DIExpression()) #24, !dbg !13670
  call void @llvm.dbg.value(metadata i32 %4, metadata !13003, metadata !DIExpression()) #24, !dbg !13672
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !13674, !srcloc !13009
  call void @llvm.dbg.value(metadata i32 1, metadata !13641, metadata !DIExpression()), !dbg !13646
  call void @llvm.dbg.value(metadata i32 undef, metadata !13641, metadata !DIExpression()), !dbg !13646
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13675
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !13677
  br i1 %15, label %16, label %17, !dbg !13678

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !13679
  br label %17, !dbg !13681

17:                                               ; preds = %16, %10
  ret void, !dbg !13682
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13683 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13685, metadata !DIExpression()), !dbg !13686
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13687
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !13688
  ret i32 %3, !dbg !13689
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !13690 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13692, metadata !DIExpression()), !dbg !13693
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13694
  %3 = load i8, i8* %2, align 1, !dbg !13695
  %4 = or i8 %3, 16, !dbg !13695
  store i8 %4, i8* %2, align 1, !dbg !13695
  ret void, !dbg !13696
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !13697 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13698, !srcloc !12983
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !13698
  call void @llvm.dbg.value(metadata i32 %2, metadata !12980, metadata !DIExpression()) #24, !dbg !13700
  call void @llvm.dbg.value(metadata i32 undef, metadata !12981, metadata !DIExpression()) #24, !dbg !13700
  tail call void @z_reschedule_irqlock(i32 noundef %2) #26, !dbg !13701
  ret void, !dbg !13702
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !13703 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13705, metadata !DIExpression()), !dbg !13706
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #26, !dbg !13707
  br i1 %2, label %3, label %5, !dbg !13709

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !13710
  br label %6, !dbg !13712

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !13003, metadata !DIExpression()) #24, !dbg !13713
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #24, !dbg !13716, !srcloc !13009
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !13717
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13718 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13720, metadata !DIExpression()), !dbg !13722
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12968, metadata !DIExpression()) #24, !dbg !13723
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13725, !srcloc !12983
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13725
  call void @llvm.dbg.value(metadata i32 %3, metadata !12980, metadata !DIExpression()) #24, !dbg !13727
  call void @llvm.dbg.value(metadata i32 undef, metadata !12981, metadata !DIExpression()) #24, !dbg !13727
  call void @llvm.dbg.value(metadata i32 %3, metadata !12974, metadata !DIExpression()) #24, !dbg !13723
  call void @llvm.dbg.value(metadata i32 %3, metadata !13721, metadata !DIExpression()), !dbg !13722
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #26, !dbg !13728
  br i1 %4, label %6, label %5, !dbg !13730

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !12995, metadata !DIExpression()) #24, !dbg !13731
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13000, metadata !DIExpression()) #24, !dbg !13731
  call void @llvm.dbg.value(metadata i32 %3, metadata !13003, metadata !DIExpression()) #24, !dbg !13734
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !13736, !srcloc !13009
  br label %8, !dbg !13737

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !13738
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !13739
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !13740
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !13740
  br label %8, !dbg !13741

8:                                                ; preds = %6, %5
  ret void, !dbg !13741
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13742 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13744, metadata !DIExpression()), !dbg !13745
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13746
  %3 = load i8, i8* %2, align 1, !dbg !13746
  %4 = and i8 %3, 16, !dbg !13747
  %5 = icmp ne i8 %4, 0, !dbg !13748
  ret i1 %5, !dbg !13749
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !13750 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13752, metadata !DIExpression()), !dbg !13753
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13754
  %3 = load i8, i8* %2, align 1, !dbg !13755
  %4 = and i8 %3, -17, !dbg !13755
  store i8 %4, i8* %2, align 1, !dbg !13755
  ret void, !dbg !13756
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !13757 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13767, metadata !DIExpression()), !dbg !13771
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13765, metadata !DIExpression()), !dbg !13771
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !13766, metadata !DIExpression()), !dbg !13771
  call void @llvm.dbg.value(metadata i32 0, metadata !13768, metadata !DIExpression()), !dbg !13772
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12968, metadata !DIExpression()) #24, !dbg !13773
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13775, !srcloc !12983
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !13775
  call void @llvm.dbg.value(metadata i32 %5, metadata !12980, metadata !DIExpression()) #24, !dbg !13777
  call void @llvm.dbg.value(metadata i32 undef, metadata !12981, metadata !DIExpression()) #24, !dbg !13777
  call void @llvm.dbg.value(metadata i32 %5, metadata !12974, metadata !DIExpression()) #24, !dbg !13773
  call void @llvm.dbg.value(metadata i32 %5, metadata !13770, metadata !DIExpression()), !dbg !13772
  call void @llvm.dbg.value(metadata i32 undef, metadata !13768, metadata !DIExpression()), !dbg !13772
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #26, !dbg !13778
  call void @llvm.dbg.value(metadata i32 %5, metadata !12995, metadata !DIExpression()) #24, !dbg !13781
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13000, metadata !DIExpression()) #24, !dbg !13781
  call void @llvm.dbg.value(metadata i32 %5, metadata !13003, metadata !DIExpression()) #24, !dbg !13783
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #24, !dbg !13785, !srcloc !13009
  call void @llvm.dbg.value(metadata i32 1, metadata !13768, metadata !DIExpression()), !dbg !13772
  call void @llvm.dbg.value(metadata i32 undef, metadata !13768, metadata !DIExpression()), !dbg !13772
  ret void, !dbg !13786
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !13787 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13791, metadata !DIExpression()), !dbg !13792
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13789, metadata !DIExpression()), !dbg !13792
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !13790, metadata !DIExpression()), !dbg !13792
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #26, !dbg !13793
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #26, !dbg !13794
  ret void, !dbg !13795
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !13796 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13800, metadata !DIExpression()), !dbg !13802
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !13801, metadata !DIExpression()), !dbg !13802
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #26, !dbg !13803
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #26, !dbg !13804
  %3 = icmp eq %union.anon* %1, null, !dbg !13805
  br i1 %3, label %21, label %4, !dbg !13807

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !13808
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !13810
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !13811
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !13168, metadata !DIExpression()) #24, !dbg !13812
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13174, metadata !DIExpression()) #24, !dbg !13812
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #25, !dbg !13814
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !13175, metadata !DIExpression()) #24, !dbg !13812
  %8 = icmp eq %struct._dnode* %7, null, !dbg !13815
  br i1 %8, label %19, label %9, !dbg !13814

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !13175, metadata !DIExpression()) #24, !dbg !13812
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !13816
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !13175, metadata !DIExpression()) #24, !dbg !13812
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #25, !dbg !13817
  %13 = icmp sgt i32 %12, 0, !dbg !13818
  br i1 %13, label %14, label %16, !dbg !13819

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13820
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #25, !dbg !13821
  br label %21, !dbg !13822

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #25, !dbg !13815
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !13175, metadata !DIExpression()) #24, !dbg !13812
  %18 = icmp eq %struct._dnode* %17, null, !dbg !13815
  br i1 %18, label %19, label %9, !dbg !13814, !llvm.loop !13823

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13825
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #25, !dbg !13826
  br label %21, !dbg !13827

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !13828
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13829 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !13834, metadata !DIExpression()), !dbg !13835
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13833, metadata !DIExpression()), !dbg !13835
  %4 = icmp eq i64 %3, -1, !dbg !13836
  br i1 %4, label %6, label %5, !dbg !13838

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.149(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !13839
  br label %6, !dbg !13841

6:                                                ; preds = %5, %2
  ret void, !dbg !13842
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.149(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13843 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13846, metadata !DIExpression()), !dbg !13847
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13845, metadata !DIExpression()), !dbg !13847
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13848
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !13849
  ret void, !dbg !13850
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !13851 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13853, metadata !DIExpression()), !dbg !13861
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !13862
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !13862
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !13854, metadata !DIExpression()), !dbg !13861
  call void @llvm.dbg.value(metadata i32 0, metadata !13855, metadata !DIExpression()), !dbg !13863
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12968, metadata !DIExpression()) #24, !dbg !13864
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13866, !srcloc !12983
  call void @llvm.dbg.value(metadata i32 undef, metadata !12980, metadata !DIExpression()) #24, !dbg !13868
  call void @llvm.dbg.value(metadata i32 undef, metadata !12981, metadata !DIExpression()) #24, !dbg !13868
  call void @llvm.dbg.value(metadata i32 undef, metadata !12974, metadata !DIExpression()) #24, !dbg !13864
  call void @llvm.dbg.value(metadata i32 undef, metadata !13857, metadata !DIExpression()), !dbg !13863
  call void @llvm.dbg.value(metadata i32 undef, metadata !13855, metadata !DIExpression()), !dbg !13863
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !13869
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !13870
  %7 = load i8, i8* %6, align 1, !dbg !13870
  %8 = and i8 %7, 40, !dbg !13871
  %9 = icmp eq i8 %8, 0, !dbg !13871
  call void @llvm.dbg.value(metadata i1 %9, metadata !13858, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13872
  br i1 %9, label %10, label %17, !dbg !13873

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !13874
  %12 = bitcast void (%struct._timeout*)** %11 to %union.anon**, !dbg !13874
  %13 = load %union.anon*, %union.anon** %12, align 8, !dbg !13874
  %14 = icmp eq %union.anon* %13, null, !dbg !13878
  br i1 %14, label %16, label %15, !dbg !13879

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #26, !dbg !13880
  br label %16, !dbg !13882

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.148(%struct.k_thread* noundef nonnull %3) #26, !dbg !13883
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #26, !dbg !13884
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #26, !dbg !13885
  br label %17, !dbg !13886

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !13866
  call void @llvm.dbg.value(metadata i32 %18, metadata !12980, metadata !DIExpression()) #24, !dbg !13868
  call void @llvm.dbg.value(metadata i32 %18, metadata !12974, metadata !DIExpression()) #24, !dbg !13864
  call void @llvm.dbg.value(metadata i32 %18, metadata !13857, metadata !DIExpression()), !dbg !13863
  call void @llvm.dbg.value(metadata i32 undef, metadata !12995, metadata !DIExpression()) #24, !dbg !13887
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13000, metadata !DIExpression()) #24, !dbg !13887
  call void @llvm.dbg.value(metadata i32 undef, metadata !13003, metadata !DIExpression()) #24, !dbg !13889
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #24, !dbg !13891, !srcloc !13009
  call void @llvm.dbg.value(metadata i32 1, metadata !13855, metadata !DIExpression()), !dbg !13863
  call void @llvm.dbg.value(metadata i32 undef, metadata !13855, metadata !DIExpression()), !dbg !13863
  ret void, !dbg !13892
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !13893 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13895, metadata !DIExpression()), !dbg !13896
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !13897
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #26, !dbg !13898
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !13899
  store %union.anon* null, %union.anon** %2, align 8, !dbg !13900
  ret void, !dbg !13901
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !13902 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13904, metadata !DIExpression()), !dbg !13905
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13906
  %3 = load i8, i8* %2, align 1, !dbg !13907
  %4 = and i8 %3, -3, !dbg !13907
  store i8 %4, i8* %2, align 1, !dbg !13907
  ret void, !dbg !13908
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13909 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13911, metadata !DIExpression()), !dbg !13912
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !13913
  br i1 %2, label %3, label %7, !dbg !13915

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13137, metadata !DIExpression()) #24, !dbg !13916
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13919
  %5 = load i8, i8* %4, align 1, !dbg !13920
  %6 = and i8 %5, 127, !dbg !13920
  store i8 %6, i8* %4, align 1, !dbg !13920
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13145, metadata !DIExpression()) #24, !dbg !13921
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !13923
  br label %7, !dbg !13924

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13925
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !13926
  %10 = zext i1 %9 to i32, !dbg !13926
  tail call fastcc void @update_cache(i32 noundef %10) #26, !dbg !13927
  ret void, !dbg !13928
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !13929 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13931, metadata !DIExpression()), !dbg !13932
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13933
  %3 = load i8, i8* %2, align 1, !dbg !13934
  %4 = or i8 %3, 2, !dbg !13934
  store i8 %4, i8* %2, align 1, !dbg !13934
  ret void, !dbg !13935
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #23 !dbg !13936 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13938, metadata !DIExpression()), !dbg !13942
  call void @llvm.dbg.value(metadata i32 0, metadata !13939, metadata !DIExpression()), !dbg !13943
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12968, metadata !DIExpression()) #24, !dbg !13944
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13946, !srcloc !12983
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13946
  call void @llvm.dbg.value(metadata i32 %3, metadata !12980, metadata !DIExpression()) #24, !dbg !13948
  call void @llvm.dbg.value(metadata i32 undef, metadata !12981, metadata !DIExpression()) #24, !dbg !13948
  call void @llvm.dbg.value(metadata i32 %3, metadata !12974, metadata !DIExpression()) #24, !dbg !13944
  call void @llvm.dbg.value(metadata i32 %3, metadata !13941, metadata !DIExpression()), !dbg !13943
  call void @llvm.dbg.value(metadata i32 undef, metadata !13939, metadata !DIExpression()), !dbg !13943
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #26, !dbg !13949
  call void @llvm.dbg.value(metadata i32 %3, metadata !12995, metadata !DIExpression()) #24, !dbg !13952
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13000, metadata !DIExpression()) #24, !dbg !13952
  call void @llvm.dbg.value(metadata i32 %3, metadata !13003, metadata !DIExpression()) #24, !dbg !13954
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !13956, !srcloc !13009
  call void @llvm.dbg.value(metadata i32 1, metadata !13939, metadata !DIExpression()), !dbg !13943
  call void @llvm.dbg.value(metadata i32 undef, metadata !13939, metadata !DIExpression()), !dbg !13943
  ret void, !dbg !13957
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !13958 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13964, metadata !DIExpression()), !dbg !13969
  call void @llvm.dbg.value(metadata i32 %0, metadata !13962, metadata !DIExpression()), !dbg !13969
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !13963, metadata !DIExpression()), !dbg !13969
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13970
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #26, !dbg !13971
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13972
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !13973
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !13974
  call void @llvm.dbg.value(metadata i32 %6, metadata !13965, metadata !DIExpression()), !dbg !13969
  call void @llvm.dbg.value(metadata i32 0, metadata !13966, metadata !DIExpression()), !dbg !13975
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12968, metadata !DIExpression()) #24, !dbg !13976
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13978, !srcloc !12983
  call void @llvm.dbg.value(metadata i32 undef, metadata !12980, metadata !DIExpression()) #24, !dbg !13980
  call void @llvm.dbg.value(metadata i32 undef, metadata !12981, metadata !DIExpression()) #24, !dbg !13980
  call void @llvm.dbg.value(metadata i32 undef, metadata !12974, metadata !DIExpression()) #24, !dbg !13976
  call void @llvm.dbg.value(metadata i32 undef, metadata !13968, metadata !DIExpression()), !dbg !13975
  call void @llvm.dbg.value(metadata i32 undef, metadata !13966, metadata !DIExpression()), !dbg !13975
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !13981
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13985
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !13986
  br i1 %10, label %11, label %12, !dbg !13987

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !13988
  br label %12, !dbg !13990

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !13978
  call void @llvm.dbg.value(metadata i32 %13, metadata !12980, metadata !DIExpression()) #24, !dbg !13980
  call void @llvm.dbg.value(metadata i32 %13, metadata !12974, metadata !DIExpression()) #24, !dbg !13976
  call void @llvm.dbg.value(metadata i32 %13, metadata !13968, metadata !DIExpression()), !dbg !13975
  call void @llvm.dbg.value(metadata i32 undef, metadata !12995, metadata !DIExpression()) #24, !dbg !13991
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13000, metadata !DIExpression()) #24, !dbg !13991
  call void @llvm.dbg.value(metadata i32 undef, metadata !13003, metadata !DIExpression()) #24, !dbg !13993
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #24, !dbg !13995, !srcloc !13009
  call void @llvm.dbg.value(metadata i32 1, metadata !13966, metadata !DIExpression()), !dbg !13975
  call void @llvm.dbg.value(metadata i32 undef, metadata !13966, metadata !DIExpression()), !dbg !13975
  ret i32 %6, !dbg !13996
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !13997 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14002, metadata !DIExpression()), !dbg !14005
  call void @llvm.dbg.value(metadata i64 undef, metadata !14004, metadata !DIExpression()), !dbg !14005
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14001, metadata !DIExpression()), !dbg !14005
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !14003, metadata !DIExpression()), !dbg !14005
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14006
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !14007
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12968, metadata !DIExpression()) #24, !dbg !14008
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14010, !srcloc !12983
  call void @llvm.dbg.value(metadata i32 undef, metadata !12980, metadata !DIExpression()) #24, !dbg !14012
  call void @llvm.dbg.value(metadata i32 undef, metadata !12981, metadata !DIExpression()) #24, !dbg !14012
  call void @llvm.dbg.value(metadata i32 undef, metadata !12974, metadata !DIExpression()) #24, !dbg !14008
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14013
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %union.anon* noundef %2, [1 x i64] %3) #26, !dbg !14014
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !13579, metadata !DIExpression()) #24, !dbg !14015
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13584, metadata !DIExpression()) #24, !dbg !14015
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #25, !dbg !14017
  ret i32 %9, !dbg !14018
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !14019 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14023, metadata !DIExpression()), !dbg !14028
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14024, metadata !DIExpression()), !dbg !14028
  call void @llvm.dbg.value(metadata i32 0, metadata !14025, metadata !DIExpression()), !dbg !14029
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12968, metadata !DIExpression()) #24, !dbg !14030
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14032, !srcloc !12983
  call void @llvm.dbg.value(metadata i32 undef, metadata !12980, metadata !DIExpression()) #24, !dbg !14034
  call void @llvm.dbg.value(metadata i32 undef, metadata !12981, metadata !DIExpression()) #24, !dbg !14034
  call void @llvm.dbg.value(metadata i32 undef, metadata !12974, metadata !DIExpression()) #24, !dbg !14030
  call void @llvm.dbg.value(metadata i32 undef, metadata !14027, metadata !DIExpression()), !dbg !14029
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14024, metadata !DIExpression()), !dbg !14028
  call void @llvm.dbg.value(metadata i32 undef, metadata !14025, metadata !DIExpression()), !dbg !14029
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !14035
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14024, metadata !DIExpression()), !dbg !14028
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !14038
  br i1 %5, label %7, label %6, !dbg !14040

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !14041
  br label %7, !dbg !14043

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !14032
  call void @llvm.dbg.value(metadata i32 %8, metadata !12980, metadata !DIExpression()) #24, !dbg !14034
  call void @llvm.dbg.value(metadata i32 %8, metadata !12974, metadata !DIExpression()) #24, !dbg !14030
  call void @llvm.dbg.value(metadata i32 %8, metadata !14027, metadata !DIExpression()), !dbg !14029
  call void @llvm.dbg.value(metadata i32 undef, metadata !12995, metadata !DIExpression()) #24, !dbg !14044
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13000, metadata !DIExpression()) #24, !dbg !14044
  call void @llvm.dbg.value(metadata i32 undef, metadata !13003, metadata !DIExpression()) #24, !dbg !14046
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #24, !dbg !14048, !srcloc !13009
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14024, metadata !DIExpression()), !dbg !14028
  call void @llvm.dbg.value(metadata i32 undef, metadata !14025, metadata !DIExpression()), !dbg !14029
  ret %struct.k_thread* %4, !dbg !14049
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !14050 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14052, metadata !DIExpression()), !dbg !14057
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14053, metadata !DIExpression()), !dbg !14057
  call void @llvm.dbg.value(metadata i32 0, metadata !14054, metadata !DIExpression()), !dbg !14058
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12968, metadata !DIExpression()) #24, !dbg !14059
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14061, !srcloc !12983
  call void @llvm.dbg.value(metadata i32 undef, metadata !12980, metadata !DIExpression()) #24, !dbg !14063
  call void @llvm.dbg.value(metadata i32 undef, metadata !12981, metadata !DIExpression()) #24, !dbg !14063
  call void @llvm.dbg.value(metadata i32 undef, metadata !12974, metadata !DIExpression()) #24, !dbg !14059
  call void @llvm.dbg.value(metadata i32 undef, metadata !14056, metadata !DIExpression()), !dbg !14058
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14053, metadata !DIExpression()), !dbg !14057
  call void @llvm.dbg.value(metadata i32 undef, metadata !14054, metadata !DIExpression()), !dbg !14058
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !14064
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14053, metadata !DIExpression()), !dbg !14057
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !14067
  br i1 %5, label %8, label %6, !dbg !14069

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !14070
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !14072
  br label %8, !dbg !14073

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14061
  call void @llvm.dbg.value(metadata i32 %9, metadata !12980, metadata !DIExpression()) #24, !dbg !14063
  call void @llvm.dbg.value(metadata i32 %9, metadata !12974, metadata !DIExpression()) #24, !dbg !14059
  call void @llvm.dbg.value(metadata i32 %9, metadata !14056, metadata !DIExpression()), !dbg !14058
  call void @llvm.dbg.value(metadata i32 undef, metadata !12995, metadata !DIExpression()) #24, !dbg !14074
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13000, metadata !DIExpression()) #24, !dbg !14074
  call void @llvm.dbg.value(metadata i32 undef, metadata !13003, metadata !DIExpression()) #24, !dbg !14076
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #24, !dbg !14078, !srcloc !13009
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14053, metadata !DIExpression()), !dbg !14057
  call void @llvm.dbg.value(metadata i32 undef, metadata !14054, metadata !DIExpression()), !dbg !14058
  ret %struct.k_thread* %4, !dbg !14079
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14080 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14082, metadata !DIExpression()), !dbg !14083
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13938, metadata !DIExpression()) #24, !dbg !14084
  call void @llvm.dbg.value(metadata i32 0, metadata !13939, metadata !DIExpression()) #24, !dbg !14086
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12968, metadata !DIExpression()) #24, !dbg !14087
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14089, !srcloc !12983
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14089
  call void @llvm.dbg.value(metadata i32 %3, metadata !12980, metadata !DIExpression()) #24, !dbg !14091
  call void @llvm.dbg.value(metadata i32 undef, metadata !12981, metadata !DIExpression()) #24, !dbg !14091
  call void @llvm.dbg.value(metadata i32 %3, metadata !12974, metadata !DIExpression()) #24, !dbg !14087
  call void @llvm.dbg.value(metadata i32 %3, metadata !13941, metadata !DIExpression()) #24, !dbg !14086
  call void @llvm.dbg.value(metadata i32 undef, metadata !13939, metadata !DIExpression()) #24, !dbg !14086
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !14092
  call void @llvm.dbg.value(metadata i32 %3, metadata !12995, metadata !DIExpression()) #24, !dbg !14093
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13000, metadata !DIExpression()) #24, !dbg !14093
  call void @llvm.dbg.value(metadata i32 %3, metadata !13003, metadata !DIExpression()) #24, !dbg !14095
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !14097, !srcloc !13009
  call void @llvm.dbg.value(metadata i32 1, metadata !13939, metadata !DIExpression()) #24, !dbg !14086
  call void @llvm.dbg.value(metadata i32 undef, metadata !13939, metadata !DIExpression()) #24, !dbg !14086
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !14098
  ret void, !dbg !14099
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14100 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14102, metadata !DIExpression()), !dbg !14108
  call void @llvm.dbg.value(metadata i32 %1, metadata !14103, metadata !DIExpression()), !dbg !14108
  call void @llvm.dbg.value(metadata i8 0, metadata !14104, metadata !DIExpression()), !dbg !14108
  call void @llvm.dbg.value(metadata i32 0, metadata !14105, metadata !DIExpression()), !dbg !14109
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12968, metadata !DIExpression()) #24, !dbg !14110
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14112, !srcloc !12983
  call void @llvm.dbg.value(metadata i32 undef, metadata !12980, metadata !DIExpression()) #24, !dbg !14114
  call void @llvm.dbg.value(metadata i32 undef, metadata !12981, metadata !DIExpression()) #24, !dbg !14114
  call void @llvm.dbg.value(metadata i32 undef, metadata !12974, metadata !DIExpression()) #24, !dbg !14110
  call void @llvm.dbg.value(metadata i32 undef, metadata !14107, metadata !DIExpression()), !dbg !14109
  call void @llvm.dbg.value(metadata i8 poison, metadata !14104, metadata !DIExpression()), !dbg !14108
  call void @llvm.dbg.value(metadata i32 undef, metadata !14105, metadata !DIExpression()), !dbg !14109
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !14115
  call void @llvm.dbg.value(metadata i1 %6, metadata !14104, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14108
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !14118

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13137, metadata !DIExpression()) #24, !dbg !14119
  %11 = load i8, i8* %4, align 1, !dbg !14125
  %12 = and i8 %11, 127, !dbg !14125
  store i8 %12, i8* %4, align 1, !dbg !14125
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13145, metadata !DIExpression()) #24, !dbg !14126
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !14128
  store i8 %9, i8* %8, align 2, !dbg !14129
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13154, metadata !DIExpression()) #24, !dbg !14130
  %13 = load i8, i8* %4, align 1, !dbg !14132
  %14 = or i8 %13, -128, !dbg !14132
  store i8 %14, i8* %4, align 1, !dbg !14132
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13161, metadata !DIExpression()) #24, !dbg !14133
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13168, metadata !DIExpression()) #24, !dbg !14135
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13174, metadata !DIExpression()) #24, !dbg !14135
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14137
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !13175, metadata !DIExpression()) #24, !dbg !14135
  %16 = icmp eq %struct._dnode* %15, null, !dbg !14138
  br i1 %16, label %26, label %17, !dbg !14137

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !13175, metadata !DIExpression()) #24, !dbg !14135
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !14139
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !13175, metadata !DIExpression()) #24, !dbg !14135
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #25, !dbg !14140
  %21 = icmp sgt i32 %20, 0, !dbg !14141
  br i1 %21, label %22, label %23, !dbg !14142

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #25, !dbg !14143
  br label %27, !dbg !14144

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #25, !dbg !14138
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !13175, metadata !DIExpression()) #24, !dbg !14135
  %25 = icmp eq %struct._dnode* %24, null, !dbg !14138
  br i1 %25, label %26, label %17, !dbg !14137, !llvm.loop !14145

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #25, !dbg !14147
  br label %27, !dbg !14148

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !14149
  br label %29, !dbg !14150

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !14151
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !14112
  call void @llvm.dbg.value(metadata i32 %30, metadata !12980, metadata !DIExpression()) #24, !dbg !14114
  call void @llvm.dbg.value(metadata i32 %30, metadata !12974, metadata !DIExpression()) #24, !dbg !14110
  call void @llvm.dbg.value(metadata i32 %30, metadata !14107, metadata !DIExpression()), !dbg !14109
  call void @llvm.dbg.value(metadata i32 undef, metadata !12995, metadata !DIExpression()) #24, !dbg !14153
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13000, metadata !DIExpression()) #24, !dbg !14153
  call void @llvm.dbg.value(metadata i32 undef, metadata !13003, metadata !DIExpression()) #24, !dbg !14155
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #24, !dbg !14157, !srcloc !13009
  call void @llvm.dbg.value(metadata i8 poison, metadata !14104, metadata !DIExpression()), !dbg !14108
  call void @llvm.dbg.value(metadata i32 undef, metadata !14105, metadata !DIExpression()), !dbg !14109
  ret i1 %6, !dbg !14158
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14159 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14163, metadata !DIExpression()), !dbg !14166
  call void @llvm.dbg.value(metadata i32 %1, metadata !14164, metadata !DIExpression()), !dbg !14166
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !14167
  call void @llvm.dbg.value(metadata i1 %3, metadata !14165, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14166
  br i1 %3, label %4, label %12, !dbg !14168

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14170
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !14171
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !14171
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !14171
  %9 = load i8, i8* %8, align 1, !dbg !14171
  %10 = icmp eq i8 %9, 0, !dbg !14172
  br i1 %10, label %11, label %12, !dbg !14173

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !14174
  br label %12, !dbg !14176

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !14177
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !14178 {
  call void @llvm.dbg.value(metadata i32 0, metadata !14180, metadata !DIExpression()), !dbg !14183
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12968, metadata !DIExpression()) #24, !dbg !14184
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14186, !srcloc !12983
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14186
  call void @llvm.dbg.value(metadata i32 %2, metadata !12980, metadata !DIExpression()) #24, !dbg !14188
  call void @llvm.dbg.value(metadata i32 undef, metadata !12981, metadata !DIExpression()) #24, !dbg !14188
  call void @llvm.dbg.value(metadata i32 %2, metadata !12974, metadata !DIExpression()) #24, !dbg !14184
  call void @llvm.dbg.value(metadata i32 %2, metadata !14182, metadata !DIExpression()), !dbg !14183
  call void @llvm.dbg.value(metadata i32 undef, metadata !14180, metadata !DIExpression()), !dbg !14183
  tail call fastcc void @z_sched_lock() #26, !dbg !14189
  call void @llvm.dbg.value(metadata i32 %2, metadata !12995, metadata !DIExpression()) #24, !dbg !14192
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13000, metadata !DIExpression()) #24, !dbg !14192
  call void @llvm.dbg.value(metadata i32 %2, metadata !13003, metadata !DIExpression()) #24, !dbg !14194
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !14196, !srcloc !13009
  call void @llvm.dbg.value(metadata i32 1, metadata !14180, metadata !DIExpression()), !dbg !14183
  call void @llvm.dbg.value(metadata i32 undef, metadata !14180, metadata !DIExpression()), !dbg !14183
  ret void, !dbg !14197
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !14198 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14199
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !14200
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !14200
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !14200
  %5 = load i8, i8* %4, align 1, !dbg !14201
  %6 = add i8 %5, -1, !dbg !14201
  store i8 %6, i8* %4, align 1, !dbg !14201
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !14202, !srcloc !14204
  ret void, !dbg !14205
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !14206 {
  call void @llvm.dbg.value(metadata i32 0, metadata !14208, metadata !DIExpression()), !dbg !14211
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12968, metadata !DIExpression()) #24, !dbg !14212
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14214, !srcloc !12983
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14214
  call void @llvm.dbg.value(metadata i32 %2, metadata !12980, metadata !DIExpression()) #24, !dbg !14216
  call void @llvm.dbg.value(metadata i32 undef, metadata !12981, metadata !DIExpression()) #24, !dbg !14216
  call void @llvm.dbg.value(metadata i32 %2, metadata !12974, metadata !DIExpression()) #24, !dbg !14212
  call void @llvm.dbg.value(metadata i32 %2, metadata !14210, metadata !DIExpression()), !dbg !14211
  call void @llvm.dbg.value(metadata i32 undef, metadata !14208, metadata !DIExpression()), !dbg !14211
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14217
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !14220
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !14220
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !14220
  %7 = load i8, i8* %6, align 1, !dbg !14221
  %8 = add i8 %7, 1, !dbg !14221
  store i8 %8, i8* %6, align 1, !dbg !14221
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !14222
  call void @llvm.dbg.value(metadata i32 %2, metadata !12995, metadata !DIExpression()) #24, !dbg !14223
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13000, metadata !DIExpression()) #24, !dbg !14223
  call void @llvm.dbg.value(metadata i32 %2, metadata !13003, metadata !DIExpression()) #24, !dbg !14225
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !14227, !srcloc !13009
  call void @llvm.dbg.value(metadata i32 1, metadata !14208, metadata !DIExpression()), !dbg !14211
  call void @llvm.dbg.value(metadata i32 undef, metadata !14208, metadata !DIExpression()), !dbg !14211
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !14228
  ret void, !dbg !14229
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #5 !dbg !14230 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14231
  ret %struct.k_thread* %1, !dbg !14232
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !14233 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !14237, metadata !DIExpression()), !dbg !14242
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !14238, metadata !DIExpression()), !dbg !14242
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !14243
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14239, metadata !DIExpression()), !dbg !14242
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !14244
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14240, metadata !DIExpression()), !dbg !14242
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #26, !dbg !14245
  call void @llvm.dbg.value(metadata i32 %5, metadata !14241, metadata !DIExpression()), !dbg !14242
  %6 = icmp sgt i32 %5, 0, !dbg !14246
  br i1 %6, label %17, label %7, !dbg !14248

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !14249
  br i1 %8, label %17, label %9, !dbg !14251

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !14252
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !14252
  %12 = load i32, i32* %11, align 8, !dbg !14252
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !14254
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !14254
  %15 = load i32, i32* %14, align 8, !dbg !14254
  %16 = icmp ult i32 %12, %15, !dbg !14255
  br label %17, !dbg !14256

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !14257
  ret i1 %18, !dbg !14258
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !14259 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !14276, metadata !DIExpression()), !dbg !14291
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14277, metadata !DIExpression()), !dbg !14291
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !14292
  %5 = load i32, i32* %4, align 4, !dbg !14293
  %6 = add nsw i32 %5, 1, !dbg !14293
  store i32 %6, i32* %4, align 4, !dbg !14293
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !14294
  store i32 %5, i32* %7, align 8, !dbg !14295
  %8 = load i32, i32* %4, align 4, !dbg !14296
  %9 = icmp eq i32 %8, 0, !dbg !14297
  br i1 %9, label %10, label %32, !dbg !14298

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !14299
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #24, !dbg !14299
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !14279, metadata !DIExpression()), !dbg !14299
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14299
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !14299
  %14 = load i32, i32* %13, align 4, !dbg !14299
  %15 = shl i32 %14, 2, !dbg !14299
  %16 = alloca i8, i32 %15, align 8, !dbg !14299
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !14299
  store i8* %16, i8** %17, align 4, !dbg !14299
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !14299
  %19 = alloca i8, i32 %14, align 8, !dbg !14299
  store i8* %19, i8** %18, align 4, !dbg !14299
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !14299
  store i32 -1, i32* %20, align 4, !dbg !14299
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !14300
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !14288, metadata !DIExpression()), !dbg !14301
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !14278, metadata !DIExpression()), !dbg !14291
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !14302
  br i1 %22, label %23, label %24, !dbg !14299

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #24, !dbg !14302
  br label %32, !dbg !14303

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !14278, metadata !DIExpression()), !dbg !14291
  %26 = load i32, i32* %4, align 4, !dbg !14304
  %27 = add nsw i32 %26, 1, !dbg !14304
  store i32 %27, i32* %4, align 4, !dbg !14304
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !14306
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !14306
  store i32 %26, i32* %29, align 8, !dbg !14307
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !14300
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !14288, metadata !DIExpression()), !dbg !14301
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !14278, metadata !DIExpression()), !dbg !14291
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !14302
  br i1 %31, label %23, label %24, !dbg !14299, !llvm.loop !14308

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14310
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !14311
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #25, !dbg !14312
  ret void, !dbg !14313
}

; Function Attrs: optsize
declare !dbg !14314 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !14319 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !14322 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !14324, metadata !DIExpression()), !dbg !14326
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14325, metadata !DIExpression()), !dbg !14326
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14327
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !14328
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #25, !dbg !14329
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !14330
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !14330
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !14332
  br i1 %7, label %8, label %10, !dbg !14333

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !14334
  store i32 0, i32* %9, align 4, !dbg !14336
  br label %10, !dbg !14337

10:                                               ; preds = %8, %2
  ret void, !dbg !14338
}

; Function Attrs: optsize
declare !dbg !14339 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !14340 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !14344, metadata !DIExpression()), !dbg !14347
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14345, metadata !DIExpression()), !dbg !14347
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14348
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #26, !dbg !14349
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !14346, metadata !DIExpression()), !dbg !14347
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14345, metadata !DIExpression()), !dbg !14347
  ret %struct.k_thread* %4, !dbg !14350
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !14351 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !14355, metadata !DIExpression()), !dbg !14356
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #25, !dbg !14357
  ret %struct.rbnode* %2, !dbg !14358
}

; Function Attrs: optsize
declare !dbg !14359 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #18 !dbg !14362 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !14374, metadata !DIExpression()), !dbg !14378
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !14379
  %3 = load i32, i32* %2, align 4, !dbg !14379
  %4 = icmp eq i32 %3, 0, !dbg !14381
  br i1 %4, label %10, label %5, !dbg !14382

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14375, metadata !DIExpression()), !dbg !14378
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !14383, !range !3508
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !14384
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !14376, metadata !DIExpression()), !dbg !14378
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #26, !dbg !14385
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !14377, metadata !DIExpression()), !dbg !14378
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14375, metadata !DIExpression()), !dbg !14378
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !14378
  ret %struct.k_thread* %11, !dbg !14386
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !14387 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14391, metadata !DIExpression()), !dbg !14394
  call void @llvm.dbg.value(metadata i32 0, metadata !14392, metadata !DIExpression()), !dbg !14394
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !14395
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14393, metadata !DIExpression()), !dbg !14394
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14396
  br i1 %3, label %8, label %4, !dbg !14397

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !14398
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !14400
  call void @llvm.dbg.value(metadata i32 1, metadata !14392, metadata !DIExpression()), !dbg !14394
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !14395
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14393, metadata !DIExpression()), !dbg !14394
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !14396
  br i1 %7, label %8, label %4, !dbg !14397, !llvm.loop !14401

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !14394
  ret i32 %9, !dbg !14403
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #5 !dbg !14404 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14406, metadata !DIExpression()), !dbg !14407
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !14408
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #26, !dbg !14409
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !14410
  ret %struct.k_thread* %4, !dbg !14411
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #4 !dbg !14412 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !14421, metadata !DIExpression()), !dbg !14422
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !14423
  tail call fastcc void @sys_dlist_init.156(%struct._dnode* noundef nonnull %2) #26, !dbg !14424
  ret void, !dbg !14425
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.156(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !14426 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14430, metadata !DIExpression()), !dbg !14431
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14432
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14433
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14434
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14435
  ret void, !dbg !14436
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !14437 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #26, !dbg !14438
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #26, !dbg !14439
  ret void, !dbg !14440
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #5 !dbg !14441 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14446, metadata !DIExpression()), !dbg !14447
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14448
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !14448
  %4 = load i8, i8* %3, align 2, !dbg !14448
  %5 = sext i8 %4 to i32, !dbg !14449
  ret i32 %5, !dbg !14450
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14451 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14455, metadata !DIExpression()), !dbg !14458
  call void @llvm.dbg.value(metadata i32 %1, metadata !14456, metadata !DIExpression()), !dbg !14458
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14457, metadata !DIExpression()), !dbg !14458
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !14459
  ret void, !dbg !14460
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !14461 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #26, !dbg !14462
  br i1 %1, label %8, label %2, !dbg !14463

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !14464
  br i1 %3, label %8, label %4, !dbg !14465

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14466
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #26, !dbg !14467
  %7 = xor i1 %6, true, !dbg !14465
  br label %8, !dbg !14465

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !14468
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #5 !dbg !14469 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !14470, !range !6665
  %2 = icmp eq i8 %1, 0, !dbg !14470
  ret i1 %2, !dbg !14471
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !14472 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12968, metadata !DIExpression()) #24, !dbg !14475
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14477, !srcloc !12983
  call void @llvm.dbg.value(metadata i32 undef, metadata !12980, metadata !DIExpression()) #24, !dbg !14479
  call void @llvm.dbg.value(metadata i32 undef, metadata !12981, metadata !DIExpression()) #24, !dbg !14479
  call void @llvm.dbg.value(metadata i32 undef, metadata !12974, metadata !DIExpression()) #24, !dbg !14475
  call void @llvm.dbg.value(metadata i32 undef, metadata !14474, metadata !DIExpression()), !dbg !14480
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14481
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13137, metadata !DIExpression()) #24, !dbg !14484
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !14486
  %4 = load i8, i8* %3, align 1, !dbg !14487
  %5 = and i8 %4, 127, !dbg !14487
  store i8 %5, i8* %3, align 1, !dbg !14487
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13145, metadata !DIExpression()) #24, !dbg !14488
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #25, !dbg !14490
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14491
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13154, metadata !DIExpression()) #24, !dbg !14492
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !14494
  %8 = load i8, i8* %7, align 1, !dbg !14495
  %9 = or i8 %8, -128, !dbg !14495
  store i8 %9, i8* %7, align 1, !dbg !14495
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13161, metadata !DIExpression()) #24, !dbg !14496
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13168, metadata !DIExpression()) #24, !dbg !14498
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13174, metadata !DIExpression()) #24, !dbg !14498
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14500
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !13175, metadata !DIExpression()) #24, !dbg !14498
  %11 = icmp eq %struct._dnode* %10, null, !dbg !14501
  br i1 %11, label %22, label %12, !dbg !14500

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !13175, metadata !DIExpression()) #24, !dbg !14498
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !14502
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !13175, metadata !DIExpression()) #24, !dbg !14498
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #25, !dbg !14503
  %16 = icmp sgt i32 %15, 0, !dbg !14504
  br i1 %16, label %17, label %19, !dbg !14505

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !14506
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #25, !dbg !14507
  br label %24, !dbg !14508

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #25, !dbg !14501
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !13175, metadata !DIExpression()) #24, !dbg !14498
  %21 = icmp eq %struct._dnode* %20, null, !dbg !14501
  br i1 %21, label %22, label %12, !dbg !14500, !llvm.loop !14509

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !14511
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #25, !dbg !14512
  br label %24, !dbg !14513

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !14477
  call void @llvm.dbg.value(metadata i32 %25, metadata !12980, metadata !DIExpression()) #24, !dbg !14479
  call void @llvm.dbg.value(metadata i32 %25, metadata !12974, metadata !DIExpression()) #24, !dbg !14475
  call void @llvm.dbg.value(metadata i32 %25, metadata !14474, metadata !DIExpression()), !dbg !14480
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !14514
  call void @llvm.dbg.value(metadata i32 undef, metadata !13579, metadata !DIExpression()) #24, !dbg !14515
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13584, metadata !DIExpression()) #24, !dbg !14515
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #25, !dbg !14517
  ret void, !dbg !14518
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !14519 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !14523, metadata !DIExpression()), !dbg !14526
  %3 = icmp eq i64 %2, -1, !dbg !14527
  br i1 %3, label %4, label %6, !dbg !14529

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14530
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #26, !dbg !14532
  br label %11, !dbg !14533

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !14524, metadata !DIExpression()), !dbg !14526
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #26, !dbg !14534
  %8 = sext i32 %7 to i64, !dbg !14534
  call void @llvm.dbg.value(metadata i64 %8, metadata !14524, metadata !DIExpression()), !dbg !14526
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %8) #26, !dbg !14535
  %10 = trunc i64 %9 to i32, !dbg !14535
  call void @llvm.dbg.value(metadata i32 %10, metadata !14525, metadata !DIExpression()), !dbg !14526
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !14526
  ret i32 %12, !dbg !14536
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14537 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14541, metadata !DIExpression()), !dbg !14542
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !14543, !srcloc !14545
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #26, !dbg !14546
  ret void, !dbg !14547
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !14548 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14552, metadata !DIExpression()), !dbg !14556
  %2 = icmp eq i64 %0, 0, !dbg !14557
  br i1 %2, label %3, label %4, !dbg !14559

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #26, !dbg !14560
  br label %29, !dbg !14562

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !14554, metadata !DIExpression()), !dbg !14556
  %5 = icmp sgt i64 %0, -3, !dbg !14563
  br i1 %5, label %6, label %10, !dbg !14565

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !14566
  %8 = trunc i64 %0 to i32, !dbg !14568
  %9 = add i32 %7, %8, !dbg !14568
  call void @llvm.dbg.value(metadata i32 %9, metadata !14553, metadata !DIExpression()), !dbg !14556
  br label %13, !dbg !14569

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !14570
  %12 = sub i32 -2, %11, !dbg !14570
  call void @llvm.dbg.value(metadata i32 %12, metadata !14553, metadata !DIExpression()), !dbg !14556
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !14572
  call void @llvm.dbg.value(metadata i32 %14, metadata !14553, metadata !DIExpression()), !dbg !14556
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12968, metadata !DIExpression()) #24, !dbg !14573
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14575, !srcloc !12983
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !14575
  call void @llvm.dbg.value(metadata i32 %16, metadata !12980, metadata !DIExpression()) #24, !dbg !14577
  call void @llvm.dbg.value(metadata i32 undef, metadata !12981, metadata !DIExpression()) #24, !dbg !14577
  call void @llvm.dbg.value(metadata i32 %16, metadata !12974, metadata !DIExpression()) #24, !dbg !14573
  call void @llvm.dbg.value(metadata i32 %16, metadata !14555, metadata !DIExpression()), !dbg !14556
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14578
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !14579
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #26, !dbg !14580
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14581
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !14582
  tail call fastcc void @z_add_thread_timeout.149(%struct.k_thread* noundef %18, [1 x i64] %19) #26, !dbg !14582
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14583
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #26, !dbg !14584
  call void @llvm.dbg.value(metadata i32 %16, metadata !13579, metadata !DIExpression()) #24, !dbg !14585
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13584, metadata !DIExpression()) #24, !dbg !14585
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #25, !dbg !14587
  %22 = zext i32 %14 to i64, !dbg !14588
  %23 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !14589
  %24 = zext i32 %23 to i64, !dbg !14589
  %25 = sub nsw i64 %22, %24, !dbg !14590
  call void @llvm.dbg.value(metadata i64 %25, metadata !14552, metadata !DIExpression()), !dbg !14556
  %26 = icmp sgt i64 %25, 0, !dbg !14591
  %27 = select i1 %26, i64 %25, i64 0, !dbg !14591
  %28 = trunc i64 %27 to i32, !dbg !14591
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !14556
  ret i32 %30, !dbg !14592
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #11 !dbg !14593 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14595, metadata !DIExpression()), !dbg !14596
  call void @llvm.dbg.value(metadata i64 %0, metadata !13015, metadata !DIExpression()), !dbg !14597
  call void @llvm.dbg.value(metadata i32 10000, metadata !13018, metadata !DIExpression()), !dbg !14597
  call void @llvm.dbg.value(metadata i32 1000, metadata !13019, metadata !DIExpression()), !dbg !14597
  call void @llvm.dbg.value(metadata i8 1, metadata !13020, metadata !DIExpression()), !dbg !14597
  call void @llvm.dbg.value(metadata i1 false, metadata !13021, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14597
  call void @llvm.dbg.value(metadata i1 false, metadata !13022, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14597
  call void @llvm.dbg.value(metadata i8 0, metadata !13023, metadata !DIExpression()), !dbg !14597
  call void @llvm.dbg.value(metadata i1 false, metadata !13024, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14597
  call void @llvm.dbg.value(metadata i1 true, metadata !13025, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14597
  call void @llvm.dbg.value(metadata i64 0, metadata !13026, metadata !DIExpression()), !dbg !14597
  call void @llvm.dbg.value(metadata i64 0, metadata !13026, metadata !DIExpression()), !dbg !14597
  call void @llvm.dbg.value(metadata i64 %0, metadata !13015, metadata !DIExpression()), !dbg !14597
  %2 = udiv i64 %0, 10, !dbg !14599
  ret i64 %2, !dbg !14603
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !14604 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !14605, !srcloc !14607
  tail call void @z_impl_k_yield() #26, !dbg !14608
  ret void, !dbg !14609
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !14610 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14614, metadata !DIExpression()), !dbg !14616
  %2 = sext i32 %0 to i64, !dbg !14617
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #26, !dbg !14618
  call void @llvm.dbg.value(metadata i64 %3, metadata !14615, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14616
  %4 = shl i64 %3, 32, !dbg !14619
  %5 = ashr exact i64 %4, 32, !dbg !14619
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #26, !dbg !14620
  call void @llvm.dbg.value(metadata i32 %6, metadata !14615, metadata !DIExpression()), !dbg !14616
  %7 = sext i32 %6 to i64, !dbg !14621
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #26, !dbg !14622
  %9 = trunc i64 %8 to i32, !dbg !14622
  ret i32 %9, !dbg !14623
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !14624 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14626, metadata !DIExpression()), !dbg !14627
  call void @llvm.dbg.value(metadata i64 %0, metadata !13015, metadata !DIExpression()), !dbg !14628
  call void @llvm.dbg.value(metadata i32 1000000, metadata !13018, metadata !DIExpression()), !dbg !14628
  call void @llvm.dbg.value(metadata i32 10000, metadata !13019, metadata !DIExpression()), !dbg !14628
  call void @llvm.dbg.value(metadata i8 1, metadata !13020, metadata !DIExpression()), !dbg !14628
  call void @llvm.dbg.value(metadata i1 false, metadata !13021, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14628
  call void @llvm.dbg.value(metadata i1 true, metadata !13022, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14628
  call void @llvm.dbg.value(metadata i8 0, metadata !13023, metadata !DIExpression()), !dbg !14628
  call void @llvm.dbg.value(metadata i1 false, metadata !13024, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14628
  call void @llvm.dbg.value(metadata i1 true, metadata !13025, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14628
  call void @llvm.dbg.value(metadata i64 0, metadata !13026, metadata !DIExpression()), !dbg !14628
  call void @llvm.dbg.value(metadata i64 0, metadata !13026, metadata !DIExpression()), !dbg !14628
  %2 = add i64 %0, 99, !dbg !14630
  call void @llvm.dbg.value(metadata i64 %2, metadata !13015, metadata !DIExpression()), !dbg !14628
  %3 = udiv i64 %2, 100, !dbg !14631
  ret i64 %3, !dbg !14632
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #11 !dbg !14633 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14635, metadata !DIExpression()), !dbg !14636
  call void @llvm.dbg.value(metadata i64 %0, metadata !13015, metadata !DIExpression()), !dbg !14637
  call void @llvm.dbg.value(metadata i32 10000, metadata !13018, metadata !DIExpression()), !dbg !14637
  call void @llvm.dbg.value(metadata i32 1000000, metadata !13019, metadata !DIExpression()), !dbg !14637
  call void @llvm.dbg.value(metadata i8 1, metadata !13020, metadata !DIExpression()), !dbg !14637
  call void @llvm.dbg.value(metadata i1 false, metadata !13021, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14637
  call void @llvm.dbg.value(metadata i1 false, metadata !13022, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14637
  call void @llvm.dbg.value(metadata i8 0, metadata !13023, metadata !DIExpression()), !dbg !14637
  call void @llvm.dbg.value(metadata i1 true, metadata !13024, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14637
  call void @llvm.dbg.value(metadata i1 false, metadata !13025, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14637
  call void @llvm.dbg.value(metadata i64 0, metadata !13026, metadata !DIExpression()), !dbg !14637
  call void @llvm.dbg.value(metadata i64 0, metadata !13026, metadata !DIExpression()), !dbg !14637
  %2 = mul i64 %0, 100, !dbg !14639
  ret i64 %2, !dbg !14641
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14642 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14644, metadata !DIExpression()), !dbg !14645
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #26, !dbg !14646
  br i1 %2, label %14, label %3, !dbg !14648

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !14649
  %5 = icmp slt i32 %4, 0, !dbg !14651
  br i1 %5, label %6, label %10, !dbg !14652

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14653
  %8 = load i8, i8* %7, align 1, !dbg !14653
  %9 = icmp eq i8 %8, 16, !dbg !14656
  br i1 %9, label %10, label %14, !dbg !14657

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !14658
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #26, !dbg !14659
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !14660, !srcloc !13619
  call void @llvm.dbg.value(metadata i32 %11, metadata !13615, metadata !DIExpression()) #24, !dbg !14664
  %12 = icmp eq i32 %11, 0, !dbg !14665
  br i1 %12, label %13, label %14, !dbg !14666

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !14667
  br label %14, !dbg !14669

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !14670
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14671 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14673, metadata !DIExpression()), !dbg !14674
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14675
  %3 = load i8, i8* %2, align 1, !dbg !14675
  %4 = and i8 %3, 2, !dbg !14676
  %5 = icmp ne i8 %4, 0, !dbg !14677
  ret i1 %5, !dbg !14678
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #5 !dbg !14679 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14684
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14683, metadata !DIExpression()), !dbg !14685
  ret %struct.k_thread* %1, !dbg !14686
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !14687 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !14688, !srcloc !13619
  call void @llvm.dbg.value(metadata i32 %1, metadata !13615, metadata !DIExpression()) #24, !dbg !14691
  %2 = icmp eq i32 %1, 0, !dbg !14692
  br i1 %2, label %3, label %8, !dbg !14693

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14694
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #26, !dbg !14695
  %6 = icmp ne i32 %5, 0, !dbg !14693
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !14696
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14697 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14699, metadata !DIExpression()), !dbg !14701
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12968, metadata !DIExpression()) #24, !dbg !14702
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14704, !srcloc !12983
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14704
  call void @llvm.dbg.value(metadata i32 %3, metadata !12980, metadata !DIExpression()) #24, !dbg !14706
  call void @llvm.dbg.value(metadata i32 undef, metadata !12981, metadata !DIExpression()) #24, !dbg !14706
  call void @llvm.dbg.value(metadata i32 %3, metadata !12974, metadata !DIExpression()) #24, !dbg !14702
  call void @llvm.dbg.value(metadata i32 %3, metadata !14700, metadata !DIExpression()), !dbg !14701
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !14707
  %5 = load i8, i8* %4, align 4, !dbg !14707
  %6 = and i8 %5, 1, !dbg !14709
  %7 = icmp eq i8 %6, 0, !dbg !14710
  br i1 %7, label %9, label %8, !dbg !14711

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !12995, metadata !DIExpression()) #24, !dbg !14712
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13000, metadata !DIExpression()) #24, !dbg !14712
  call void @llvm.dbg.value(metadata i32 %3, metadata !13003, metadata !DIExpression()) #24, !dbg !14715
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !14717, !srcloc !13009
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #24, !dbg !14718, !srcloc !14720
  br label %24, !dbg !14721

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14722
  %11 = load i8, i8* %10, align 1, !dbg !14722
  %12 = and i8 %11, 8, !dbg !14724
  %13 = icmp eq i8 %12, 0, !dbg !14725
  br i1 %13, label %15, label %14, !dbg !14726

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !12995, metadata !DIExpression()) #24, !dbg !14727
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13000, metadata !DIExpression()) #24, !dbg !14727
  call void @llvm.dbg.value(metadata i32 %3, metadata !13003, metadata !DIExpression()) #24, !dbg !14730
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !14732, !srcloc !13009
  br label %24, !dbg !14733

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #26, !dbg !14734
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14735
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !14737
  br i1 %17, label %18, label %23, !dbg !14738

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !14739, !srcloc !13619
  call void @llvm.dbg.value(metadata i32 %19, metadata !13615, metadata !DIExpression()) #24, !dbg !14742
  %20 = icmp eq i32 %19, 0, !dbg !14743
  br i1 %20, label %21, label %23, !dbg !14744

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !13579, metadata !DIExpression()) #24, !dbg !14745
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13584, metadata !DIExpression()) #24, !dbg !14745
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !14748
  br label %23, !dbg !14749

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !12995, metadata !DIExpression()) #24, !dbg !14750
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13000, metadata !DIExpression()) #24, !dbg !14750
  call void @llvm.dbg.value(metadata i32 %3, metadata !13003, metadata !DIExpression()) #24, !dbg !14752
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !14754, !srcloc !13009
  br label %24, !dbg !14755

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !14755
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14756 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14758, metadata !DIExpression()), !dbg !14759
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14760
  %3 = load i8, i8* %2, align 1, !dbg !14760
  %4 = and i8 %3, 8, !dbg !14762
  %5 = icmp eq i8 %4, 0, !dbg !14763
  br i1 %5, label %6, label %20, !dbg !14764

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !14765
  %8 = or i8 %7, 8, !dbg !14765
  store i8 %8, i8* %2, align 1, !dbg !14765
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #26, !dbg !14767
  br i1 %9, label %10, label %12, !dbg !14769

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13137, metadata !DIExpression()) #24, !dbg !14770
  %11 = and i8 %8, 95, !dbg !14773
  store i8 %11, i8* %2, align 1, !dbg !14773
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13145, metadata !DIExpression()) #24, !dbg !14774
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #25, !dbg !14776
  br label %12, !dbg !14777

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14778
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !14778
  %15 = icmp eq %union.anon* %14, null, !dbg !14780
  br i1 %15, label %17, label %16, !dbg !14781

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !14782
  br label %17, !dbg !14784

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !14785
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !14786
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #26, !dbg !14787
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !14788
  br label %20, !dbg !14789

20:                                               ; preds = %17, %1
  ret void, !dbg !14790
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !14791 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14795, metadata !DIExpression()), !dbg !14797
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !14798
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14796, metadata !DIExpression()), !dbg !14797
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14799
  br i1 %3, label %10, label %4, !dbg !14800

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !14801
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !14803
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14804, metadata !DIExpression()), !dbg !14810
  call void @llvm.dbg.value(metadata i32 0, metadata !14809, metadata !DIExpression()), !dbg !14810
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !14812
  store i32 0, i32* %7, align 4, !dbg !14813
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !14814
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !14798
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !14796, metadata !DIExpression()), !dbg !14797
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !14799
  br i1 %9, label %10, label %4, !dbg !14800, !llvm.loop !14815

10:                                               ; preds = %4, %1
  ret void, !dbg !14817
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !14818 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14823, metadata !DIExpression()), !dbg !14826
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14822, metadata !DIExpression()), !dbg !14826
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12968, metadata !DIExpression()) #24, !dbg !14827
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14829, !srcloc !12983
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !14829
  call void @llvm.dbg.value(metadata i32 %4, metadata !12980, metadata !DIExpression()) #24, !dbg !14831
  call void @llvm.dbg.value(metadata i32 undef, metadata !12981, metadata !DIExpression()) #24, !dbg !14831
  call void @llvm.dbg.value(metadata i32 %4, metadata !12974, metadata !DIExpression()) #24, !dbg !14827
  call void @llvm.dbg.value(metadata i32 %4, metadata !14824, metadata !DIExpression()), !dbg !14826
  call void @llvm.dbg.value(metadata i32 0, metadata !14825, metadata !DIExpression()), !dbg !14826
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14832
  %6 = load i8, i8* %5, align 1, !dbg !14832
  %7 = and i8 %6, 8, !dbg !14834
  %8 = icmp eq i8 %7, 0, !dbg !14835
  br i1 %8, label %9, label %24, !dbg !14836

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !14823, metadata !DIExpression()), !dbg !14826
  %11 = icmp eq i64 %10, 0, !dbg !14837
  br i1 %11, label %24, label %12, !dbg !14839

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14840
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !14842
  br i1 %14, label %24, label %15, !dbg !14843

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14844
  %17 = load %union.anon*, %union.anon** %16, align 8, !dbg !14844
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !14845
  %19 = icmp eq %union.anon* %17, %18, !dbg !14846
  br i1 %19, label %24, label %20, !dbg !14847

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !14848
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %union.anon* noundef nonnull %21) #26, !dbg !14850
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14851
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #26, !dbg !14852
  call void @llvm.dbg.value(metadata i32 %4, metadata !13579, metadata !DIExpression()) #24, !dbg !14853
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13584, metadata !DIExpression()) #24, !dbg !14853
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #25, !dbg !14855
  call void @llvm.dbg.value(metadata i32 %23, metadata !14825, metadata !DIExpression()), !dbg !14826
  br label %26, !dbg !14856

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !14857
  call void @llvm.dbg.value(metadata i32 %25, metadata !14825, metadata !DIExpression()), !dbg !14826
  call void @llvm.dbg.value(metadata i32 %4, metadata !12995, metadata !DIExpression()) #24, !dbg !14858
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13000, metadata !DIExpression()) #24, !dbg !14858
  call void @llvm.dbg.value(metadata i32 %4, metadata !13003, metadata !DIExpression()) #24, !dbg !14860
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !14862, !srcloc !13009
  br label %26, !dbg !14863

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !14826
  ret i32 %27, !dbg !14864
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !14865 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14869, metadata !DIExpression()), !dbg !14877
  call void @llvm.dbg.value(metadata i32 %1, metadata !14870, metadata !DIExpression()), !dbg !14877
  call void @llvm.dbg.value(metadata i8* %2, metadata !14871, metadata !DIExpression()), !dbg !14877
  call void @llvm.dbg.value(metadata i8 0, metadata !14873, metadata !DIExpression()), !dbg !14877
  call void @llvm.dbg.value(metadata i32 0, metadata !14874, metadata !DIExpression()), !dbg !14878
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12968, metadata !DIExpression()) #24, !dbg !14879
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14881, !srcloc !12983
  call void @llvm.dbg.value(metadata i32 undef, metadata !12980, metadata !DIExpression()) #24, !dbg !14883
  call void @llvm.dbg.value(metadata i32 undef, metadata !12981, metadata !DIExpression()) #24, !dbg !14883
  call void @llvm.dbg.value(metadata i32 undef, metadata !12974, metadata !DIExpression()) #24, !dbg !14879
  call void @llvm.dbg.value(metadata i32 undef, metadata !14876, metadata !DIExpression()), !dbg !14878
  call void @llvm.dbg.value(metadata i8 poison, metadata !14873, metadata !DIExpression()), !dbg !14877
  call void @llvm.dbg.value(metadata i32 undef, metadata !14874, metadata !DIExpression()), !dbg !14878
  %5 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #26, !dbg !14884
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14872, metadata !DIExpression()), !dbg !14877
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !14887
  br i1 %7, label %12, label %8, !dbg !14889

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14890, metadata !DIExpression()), !dbg !14898
  call void @llvm.dbg.value(metadata i32 %1, metadata !14896, metadata !DIExpression()), !dbg !14898
  call void @llvm.dbg.value(metadata i8* %2, metadata !14897, metadata !DIExpression()), !dbg !14898
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14804, metadata !DIExpression()), !dbg !14901
  call void @llvm.dbg.value(metadata i32 %1, metadata !14809, metadata !DIExpression()), !dbg !14901
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !14903
  store i32 %1, i32* %9, align 4, !dbg !14904
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !14905
  store i8* %2, i8** %10, align 4, !dbg !14906
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !14907
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !14908
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #26, !dbg !14909
  call void @llvm.dbg.value(metadata i8 1, metadata !14873, metadata !DIExpression()), !dbg !14877
  br label %12, !dbg !14910

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !14881
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !14881
  call void @llvm.dbg.value(metadata i32 %14, metadata !12980, metadata !DIExpression()) #24, !dbg !14883
  call void @llvm.dbg.value(metadata i32 %14, metadata !12974, metadata !DIExpression()) #24, !dbg !14879
  call void @llvm.dbg.value(metadata i32 %14, metadata !14876, metadata !DIExpression()), !dbg !14878
  call void @llvm.dbg.value(metadata i8 poison, metadata !14873, metadata !DIExpression()), !dbg !14877
  call void @llvm.dbg.value(metadata i32 undef, metadata !12995, metadata !DIExpression()) #24, !dbg !14911
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13000, metadata !DIExpression()) #24, !dbg !14911
  call void @llvm.dbg.value(metadata i32 undef, metadata !13003, metadata !DIExpression()) #24, !dbg !14913
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #24, !dbg !14915, !srcloc !13009
  call void @llvm.dbg.value(metadata i32 undef, metadata !14874, metadata !DIExpression()), !dbg !14878
  ret i1 %13, !dbg !14916
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !14917 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14923, metadata !DIExpression()), !dbg !14928
  call void @llvm.dbg.value(metadata i64 undef, metadata !14925, metadata !DIExpression()), !dbg !14928
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14922, metadata !DIExpression()), !dbg !14928
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !14924, metadata !DIExpression()), !dbg !14928
  call void @llvm.dbg.value(metadata i8** %4, metadata !14926, metadata !DIExpression()), !dbg !14928
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #26, !dbg !14929
  call void @llvm.dbg.value(metadata i32 %6, metadata !14927, metadata !DIExpression()), !dbg !14928
  %7 = icmp eq i8** %4, null, !dbg !14930
  br i1 %7, label %12, label %8, !dbg !14932

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14933
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !14935
  %11 = load i8*, i8** %10, align 4, !dbg !14935
  store i8* %11, i8** %4, align 4, !dbg !14936
  br label %12, !dbg !14937

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !14938
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !14939 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #25, !dbg !14941
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #25, !dbg !14942
  ret void, !dbg !14943
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14944 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !14954, metadata !DIExpression()), !dbg !14971
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14952, metadata !DIExpression()), !dbg !14971
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !14953, metadata !DIExpression()), !dbg !14971
  %5 = icmp eq i64 %4, -1, !dbg !14972
  br i1 %5, label %55, label %6, !dbg !14974

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !14975
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !14976
  call void @llvm.dbg.value(metadata i32 0, metadata !14955, metadata !DIExpression()), !dbg !14977
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14978, metadata !DIExpression()) #24, !dbg !14985
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14987, !srcloc !14993
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !14987
  call void @llvm.dbg.value(metadata i32 %9, metadata !14990, metadata !DIExpression()) #24, !dbg !14994
  call void @llvm.dbg.value(metadata i32 undef, metadata !14991, metadata !DIExpression()) #24, !dbg !14994
  call void @llvm.dbg.value(metadata i32 %9, metadata !14984, metadata !DIExpression()) #24, !dbg !14985
  call void @llvm.dbg.value(metadata i32 %9, metadata !14961, metadata !DIExpression()), !dbg !14977
  call void @llvm.dbg.value(metadata i32 undef, metadata !14955, metadata !DIExpression()), !dbg !14977
  %10 = icmp slt i64 %4, -1, !dbg !14995
  br i1 %10, label %11, label %17, !dbg !14996

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !14997
  %13 = add i64 %4, %12, !dbg !14998
  %14 = sub i64 -2, %13, !dbg !14998
  call void @llvm.dbg.value(metadata i64 %14, metadata !14965, metadata !DIExpression()), !dbg !14999
  %15 = icmp sgt i64 %14, 1, !dbg !15000
  %16 = select i1 %15, i64 %14, i64 1, !dbg !15000
  br label %22, !dbg !15001

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !15002
  %19 = tail call fastcc i32 @elapsed.167() #26, !dbg !15004
  %20 = sext i32 %19 to i64, !dbg !15004
  %21 = add nsw i64 %18, %20, !dbg !15005
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !15006
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !15007
  store i64 %23, i64* %24, align 8, !dbg !15008
  %25 = tail call fastcc %struct._timeout* @first() #26, !dbg !15009
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !14962, metadata !DIExpression()), !dbg !15011
  %26 = icmp eq %struct._timeout* %25, null, !dbg !15012
  br i1 %26, label %42, label %27, !dbg !15012

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !15013
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !14962, metadata !DIExpression()), !dbg !15011
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !15017
  %31 = load i64, i64* %30, align 8, !dbg !15017
  %32 = icmp slt i64 %28, %31, !dbg !15018
  br i1 %32, label %33, label %38, !dbg !15019

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !15017
  %35 = sub nsw i64 %31, %28, !dbg !15020
  store i64 %35, i64* %34, align 8, !dbg !15020
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !15022
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15023
  tail call fastcc void @sys_dlist_insert.168(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #26, !dbg !15024
  br label %44, !dbg !15025

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !15026
  store i64 %39, i64* %24, align 8, !dbg !15026
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #26, !dbg !15027
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !14962, metadata !DIExpression()), !dbg !15011
  %41 = icmp eq %struct._timeout* %40, null, !dbg !15012
  br i1 %41, label %42, label %27, !dbg !15012, !llvm.loop !15028

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15030
  tail call fastcc void @sys_dlist_append.169(%struct._dnode* noundef %43) #26, !dbg !15033
  br label %44, !dbg !15034

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #26, !dbg !15035
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !15036
  br i1 %46, label %47, label %54, !dbg !15037

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #26, !dbg !15038
  call void @llvm.dbg.value(metadata i32 %48, metadata !14968, metadata !DIExpression()), !dbg !15039
  %49 = icmp ne i32 %48, 0, !dbg !15040
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !15042
  br i1 %52, label %54, label %53, !dbg !15042

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #25, !dbg !15043
  br label %54, !dbg !15045

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !15046, metadata !DIExpression()) #24, !dbg !15052
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15051, metadata !DIExpression()) #24, !dbg !15052
  call void @llvm.dbg.value(metadata i32 %9, metadata !15054, metadata !DIExpression()) #24, !dbg !15057
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #24, !dbg !15059, !srcloc !15060
  call void @llvm.dbg.value(metadata i32 undef, metadata !14955, metadata !DIExpression()), !dbg !14977
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !15061
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.167() unnamed_addr #1 !dbg !15062 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !15065
  %2 = icmp eq i32 %1, 0, !dbg !15066
  br i1 %2, label %3, label %5, !dbg !15065

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #25, !dbg !15067
  br label %5, !dbg !15065

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !15065
  ret i32 %6, !dbg !15068
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #5 !dbg !15069 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.172() #26, !dbg !15075
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15073, metadata !DIExpression()), !dbg !15076
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !15077
  ret %struct._timeout* %2, !dbg !15078
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.168(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !15079 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15083, metadata !DIExpression()), !dbg !15087
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15084, metadata !DIExpression()), !dbg !15087
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15088
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15088
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15085, metadata !DIExpression()), !dbg !15087
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15089
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !15090
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15091
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !15092
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15093
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15094
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15095
  ret void, !dbg !15096
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #5 !dbg !15097 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15101, metadata !DIExpression()), !dbg !15103
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15104
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.170(%struct._dnode* noundef %2) #26, !dbg !15105
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !15102, metadata !DIExpression()), !dbg !15103
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !15106
  ret %struct._timeout* %4, !dbg !15107
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.169(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !15108 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15113, metadata !DIExpression()), !dbg !15116
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15114, metadata !DIExpression()), !dbg !15116
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !15117
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !15115, metadata !DIExpression()), !dbg !15116
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15118
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !15119
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15120
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !15121
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !15122
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !15123
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !15124
  ret void, !dbg !15125
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !15126 {
  %1 = tail call fastcc %struct._timeout* @first() #26, !dbg !15131
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !15128, metadata !DIExpression()), !dbg !15132
  %2 = tail call fastcc i32 @elapsed.167() #26, !dbg !15133
  call void @llvm.dbg.value(metadata i32 %2, metadata !15129, metadata !DIExpression()), !dbg !15132
  %3 = icmp eq %struct._timeout* %1, null, !dbg !15134
  br i1 %3, label %14, label %4, !dbg !15136

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !15137
  %6 = load i64, i64* %5, align 8, !dbg !15137
  %7 = sext i32 %2 to i64, !dbg !15138
  %8 = sub nsw i64 %6, %7, !dbg !15139
  %9 = icmp sgt i64 %8, 2147483647, !dbg !15140
  br i1 %9, label %14, label %10, !dbg !15141

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !15142
  %12 = select i1 %11, i64 %8, i64 0, !dbg !15142
  %13 = trunc i64 %12 to i32, !dbg !15142
  call void @llvm.dbg.value(metadata i32 %13, metadata !15130, metadata !DIExpression()), !dbg !15132
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !15144
  call void @llvm.dbg.value(metadata i32 %15, metadata !15130, metadata !DIExpression()), !dbg !15132
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15145
  %17 = icmp ne i32 %16, 0, !dbg !15147
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !15148
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !15148
  call void @llvm.dbg.value(metadata i32 %20, metadata !15130, metadata !DIExpression()), !dbg !15132
  ret i32 %20, !dbg !15149
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.170(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !15150 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15154, metadata !DIExpression()), !dbg !15156
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15155, metadata !DIExpression()), !dbg !15156
  %2 = icmp eq %struct._dnode* %0, null, !dbg !15157
  br i1 %2, label %5, label %3, !dbg !15158

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.171(%struct._dnode* noundef nonnull %0) #26, !dbg !15159
  br label %5, !dbg !15158

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !15158
  ret %struct._dnode* %6, !dbg !15160
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.171(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !15161 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15163, metadata !DIExpression()), !dbg !15165
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15164, metadata !DIExpression()), !dbg !15165
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !15166
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !15167
  br i1 %3, label %7, label %4, !dbg !15168

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15169
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !15169
  br label %7, !dbg !15168

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !15168
  ret %struct._dnode* %8, !dbg !15170
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.172() unnamed_addr #5 !dbg !15171 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15175, metadata !DIExpression()), !dbg !15176
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.173() #26, !dbg !15177
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !15177
  ret %struct._dnode* %3, !dbg !15178
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.173() unnamed_addr #5 !dbg !15179 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15183, metadata !DIExpression()), !dbg !15184
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !15185
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !15186
  ret i1 %2, !dbg !15187
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !15188 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15192, metadata !DIExpression()), !dbg !15197
  call void @llvm.dbg.value(metadata i32 -22, metadata !15193, metadata !DIExpression()), !dbg !15197
  call void @llvm.dbg.value(metadata i32 0, metadata !15194, metadata !DIExpression()), !dbg !15198
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14978, metadata !DIExpression()) #24, !dbg !15199
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15201, !srcloc !14993
  call void @llvm.dbg.value(metadata i32 undef, metadata !14990, metadata !DIExpression()) #24, !dbg !15203
  call void @llvm.dbg.value(metadata i32 undef, metadata !14991, metadata !DIExpression()) #24, !dbg !15203
  call void @llvm.dbg.value(metadata i32 undef, metadata !14984, metadata !DIExpression()) #24, !dbg !15199
  call void @llvm.dbg.value(metadata i32 undef, metadata !15196, metadata !DIExpression()), !dbg !15198
  call void @llvm.dbg.value(metadata i32 -22, metadata !15193, metadata !DIExpression()), !dbg !15197
  call void @llvm.dbg.value(metadata i32 undef, metadata !15194, metadata !DIExpression()), !dbg !15198
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !15193, metadata !DIExpression()), !dbg !15197
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.176(%struct._dnode* noundef %3) #26, !dbg !15204
  br i1 %4, label %5, label %6, !dbg !15208

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #26, !dbg !15209
  call void @llvm.dbg.value(metadata i32 0, metadata !15193, metadata !DIExpression()), !dbg !15197
  br label %6, !dbg !15211

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !15197
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !15201
  call void @llvm.dbg.value(metadata i32 %8, metadata !14990, metadata !DIExpression()) #24, !dbg !15203
  call void @llvm.dbg.value(metadata i32 %8, metadata !14984, metadata !DIExpression()) #24, !dbg !15199
  call void @llvm.dbg.value(metadata i32 %8, metadata !15196, metadata !DIExpression()), !dbg !15198
  call void @llvm.dbg.value(metadata i32 %7, metadata !15193, metadata !DIExpression()), !dbg !15197
  call void @llvm.dbg.value(metadata i32 undef, metadata !15046, metadata !DIExpression()) #24, !dbg !15212
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15051, metadata !DIExpression()) #24, !dbg !15212
  call void @llvm.dbg.value(metadata i32 undef, metadata !15054, metadata !DIExpression()) #24, !dbg !15214
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #24, !dbg !15216, !srcloc !15060
  call void @llvm.dbg.value(metadata i32 undef, metadata !15194, metadata !DIExpression()), !dbg !15198
  ret i32 %7, !dbg !15217
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.176(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15218 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15224, metadata !DIExpression()), !dbg !15225
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15226
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15226
  %4 = icmp ne %struct._dnode* %3, null, !dbg !15227
  ret i1 %4, !dbg !15228
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #7 !dbg !15229 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15231, metadata !DIExpression()), !dbg !15232
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #26, !dbg !15233
  %3 = icmp eq %struct._timeout* %2, null, !dbg !15235
  br i1 %3, label %10, label %4, !dbg !15236

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !15237
  %6 = load i64, i64* %5, align 8, !dbg !15237
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !15239
  %8 = load i64, i64* %7, align 8, !dbg !15240
  %9 = add nsw i64 %8, %6, !dbg !15240
  store i64 %9, i64* %7, align 8, !dbg !15240
  br label %10, !dbg !15241

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15242
  tail call fastcc void @sys_dlist_remove.177(%struct._dnode* noundef %11) #26, !dbg !15243
  ret void, !dbg !15244
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.177(%struct._dnode* nocapture noundef %0) unnamed_addr #7 !dbg !15245 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15249, metadata !DIExpression()), !dbg !15252
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15253
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15253
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !15250, metadata !DIExpression()), !dbg !15252
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15254
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15254
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !15251, metadata !DIExpression()), !dbg !15252
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !15255
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !15256
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !15257
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !15258
  tail call fastcc void @sys_dnode_init.178(%struct._dnode* noundef %0) #26, !dbg !15259
  ret void, !dbg !15260
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.178(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !15261 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15263, metadata !DIExpression()), !dbg !15264
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15265
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !15266
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15267
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !15268
  ret void, !dbg !15269
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !15270 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15276, metadata !DIExpression()), !dbg !15281
  call void @llvm.dbg.value(metadata i64 0, metadata !15277, metadata !DIExpression()), !dbg !15281
  call void @llvm.dbg.value(metadata i32 0, metadata !15278, metadata !DIExpression()), !dbg !15282
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14978, metadata !DIExpression()) #24, !dbg !15283
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15285, !srcloc !14993
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15285
  call void @llvm.dbg.value(metadata i32 %3, metadata !14990, metadata !DIExpression()) #24, !dbg !15287
  call void @llvm.dbg.value(metadata i32 undef, metadata !14991, metadata !DIExpression()) #24, !dbg !15287
  call void @llvm.dbg.value(metadata i32 %3, metadata !14984, metadata !DIExpression()) #24, !dbg !15283
  call void @llvm.dbg.value(metadata i32 %3, metadata !15280, metadata !DIExpression()), !dbg !15282
  call void @llvm.dbg.value(metadata i64 0, metadata !15277, metadata !DIExpression()), !dbg !15281
  call void @llvm.dbg.value(metadata i32 undef, metadata !15278, metadata !DIExpression()), !dbg !15282
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !15288
  call void @llvm.dbg.value(metadata i64 %4, metadata !15277, metadata !DIExpression()), !dbg !15281
  call void @llvm.dbg.value(metadata i32 %3, metadata !15046, metadata !DIExpression()) #24, !dbg !15291
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15051, metadata !DIExpression()) #24, !dbg !15291
  call void @llvm.dbg.value(metadata i32 %3, metadata !15054, metadata !DIExpression()) #24, !dbg !15293
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15295, !srcloc !15060
  call void @llvm.dbg.value(metadata i32 undef, metadata !15278, metadata !DIExpression()), !dbg !15282
  ret i64 %4, !dbg !15296
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !15297 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15299, metadata !DIExpression()), !dbg !15303
  call void @llvm.dbg.value(metadata i64 0, metadata !15300, metadata !DIExpression()), !dbg !15303
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.179(%struct._timeout* noundef %0) #26, !dbg !15304
  br i1 %2, label %21, label %3, !dbg !15306

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #26, !dbg !15307
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !15301, metadata !DIExpression()), !dbg !15308
  call void @llvm.dbg.value(metadata i64 0, metadata !15300, metadata !DIExpression()), !dbg !15303
  %5 = icmp eq %struct._timeout* %4, null, !dbg !15309
  br i1 %5, label %16, label %6, !dbg !15311

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !15301, metadata !DIExpression()), !dbg !15308
  call void @llvm.dbg.value(metadata i64 %8, metadata !15300, metadata !DIExpression()), !dbg !15303
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !15312
  %10 = load i64, i64* %9, align 8, !dbg !15312
  %11 = add nsw i64 %10, %8, !dbg !15314
  call void @llvm.dbg.value(metadata i64 %11, metadata !15300, metadata !DIExpression()), !dbg !15303
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !15315
  br i1 %12, label %16, label %13, !dbg !15317

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #26, !dbg !15318
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !15301, metadata !DIExpression()), !dbg !15308
  call void @llvm.dbg.value(metadata i64 %11, metadata !15300, metadata !DIExpression()), !dbg !15303
  %15 = icmp eq %struct._timeout* %14, null, !dbg !15309
  br i1 %15, label %16, label %6, !dbg !15311, !llvm.loop !15319

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !15303
  call void @llvm.dbg.value(metadata i64 %17, metadata !15300, metadata !DIExpression()), !dbg !15303
  %18 = tail call fastcc i32 @elapsed.167() #26, !dbg !15321
  %19 = sext i32 %18 to i64, !dbg !15321
  %20 = sub nsw i64 %17, %19, !dbg !15322
  br label %21, !dbg !15323

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !15303
  ret i64 %22, !dbg !15324
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.179(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15325 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15329, metadata !DIExpression()), !dbg !15330
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15331
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.176(%struct._dnode* noundef %2) #26, !dbg !15332
  %4 = xor i1 %3, true, !dbg !15333
  ret i1 %4, !dbg !15334
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !15335 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15337, metadata !DIExpression()), !dbg !15342
  call void @llvm.dbg.value(metadata i64 0, metadata !15338, metadata !DIExpression()), !dbg !15342
  call void @llvm.dbg.value(metadata i32 0, metadata !15339, metadata !DIExpression()), !dbg !15343
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14978, metadata !DIExpression()) #24, !dbg !15344
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15346, !srcloc !14993
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15346
  call void @llvm.dbg.value(metadata i32 %3, metadata !14990, metadata !DIExpression()) #24, !dbg !15348
  call void @llvm.dbg.value(metadata i32 undef, metadata !14991, metadata !DIExpression()) #24, !dbg !15348
  call void @llvm.dbg.value(metadata i32 %3, metadata !14984, metadata !DIExpression()) #24, !dbg !15344
  call void @llvm.dbg.value(metadata i32 %3, metadata !15341, metadata !DIExpression()), !dbg !15343
  call void @llvm.dbg.value(metadata i64 0, metadata !15338, metadata !DIExpression()), !dbg !15342
  call void @llvm.dbg.value(metadata i32 undef, metadata !15339, metadata !DIExpression()), !dbg !15343
  %4 = load i64, i64* @curr_tick, align 8, !dbg !15349
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !15352
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !15338, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !15342
  call void @llvm.dbg.value(metadata i32 %3, metadata !15046, metadata !DIExpression()) #24, !dbg !15353
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15051, metadata !DIExpression()) #24, !dbg !15353
  call void @llvm.dbg.value(metadata i32 %3, metadata !15054, metadata !DIExpression()) #24, !dbg !15355
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15357, !srcloc !15060
  call void @llvm.dbg.value(metadata i32 undef, metadata !15339, metadata !DIExpression()), !dbg !15343
  %6 = add i64 %5, %4, !dbg !15358
  ret i64 %6, !dbg !15359
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !15360 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !15362, metadata !DIExpression()), !dbg !15366
  call void @llvm.dbg.value(metadata i32 0, metadata !15363, metadata !DIExpression()), !dbg !15367
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14978, metadata !DIExpression()) #24, !dbg !15368
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15370, !srcloc !14993
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15370
  call void @llvm.dbg.value(metadata i32 %2, metadata !14990, metadata !DIExpression()) #24, !dbg !15372
  call void @llvm.dbg.value(metadata i32 undef, metadata !14991, metadata !DIExpression()) #24, !dbg !15372
  call void @llvm.dbg.value(metadata i32 %2, metadata !14984, metadata !DIExpression()) #24, !dbg !15368
  call void @llvm.dbg.value(metadata i32 %2, metadata !15365, metadata !DIExpression()), !dbg !15367
  call void @llvm.dbg.value(metadata i32 -1, metadata !15362, metadata !DIExpression()), !dbg !15366
  call void @llvm.dbg.value(metadata i32 undef, metadata !15363, metadata !DIExpression()), !dbg !15367
  %3 = tail call fastcc i32 @next_timeout() #26, !dbg !15373
  call void @llvm.dbg.value(metadata i32 %3, metadata !15362, metadata !DIExpression()), !dbg !15366
  call void @llvm.dbg.value(metadata i32 %2, metadata !15046, metadata !DIExpression()) #24, !dbg !15376
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15051, metadata !DIExpression()) #24, !dbg !15376
  call void @llvm.dbg.value(metadata i32 %2, metadata !15054, metadata !DIExpression()) #24, !dbg !15378
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !15380, !srcloc !15060
  call void @llvm.dbg.value(metadata i32 undef, metadata !15363, metadata !DIExpression()), !dbg !15367
  ret i32 %3, !dbg !15381
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !15382 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15384, metadata !DIExpression()), !dbg !15394
  call void @llvm.dbg.value(metadata i1 %1, metadata !15385, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15394
  call void @llvm.dbg.value(metadata i32 0, metadata !15386, metadata !DIExpression()), !dbg !15395
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14978, metadata !DIExpression()) #24, !dbg !15396
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15398, !srcloc !14993
  call void @llvm.dbg.value(metadata i32 undef, metadata !14990, metadata !DIExpression()) #24, !dbg !15400
  call void @llvm.dbg.value(metadata i32 undef, metadata !14991, metadata !DIExpression()) #24, !dbg !15400
  call void @llvm.dbg.value(metadata i32 undef, metadata !14984, metadata !DIExpression()) #24, !dbg !15396
  call void @llvm.dbg.value(metadata i32 undef, metadata !15388, metadata !DIExpression()), !dbg !15395
  call void @llvm.dbg.value(metadata i32 undef, metadata !15386, metadata !DIExpression()), !dbg !15395
  %4 = tail call fastcc i32 @next_timeout() #26, !dbg !15401
  call void @llvm.dbg.value(metadata i32 %4, metadata !15389, metadata !DIExpression()), !dbg !15402
  call void @llvm.dbg.value(metadata i1 undef, metadata !15392, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15402
  %5 = icmp slt i32 %4, 2, !dbg !15403
  call void @llvm.dbg.value(metadata i1 %5, metadata !15393, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15402
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !15404
  call void @llvm.dbg.value(metadata i1 %6, metadata !15392, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15402
  br i1 %7, label %11, label %8, !dbg !15404

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !15406
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !15406
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #25, !dbg !15408
  br label %11, !dbg !15409

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !15398
  call void @llvm.dbg.value(metadata i32 %12, metadata !14990, metadata !DIExpression()) #24, !dbg !15400
  call void @llvm.dbg.value(metadata i32 %12, metadata !14984, metadata !DIExpression()) #24, !dbg !15396
  call void @llvm.dbg.value(metadata i32 %12, metadata !15388, metadata !DIExpression()), !dbg !15395
  call void @llvm.dbg.value(metadata i32 undef, metadata !15046, metadata !DIExpression()) #24, !dbg !15410
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15051, metadata !DIExpression()) #24, !dbg !15410
  call void @llvm.dbg.value(metadata i32 undef, metadata !15054, metadata !DIExpression()) #24, !dbg !15412
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #24, !dbg !15414, !srcloc !15060
  call void @llvm.dbg.value(metadata i32 1, metadata !15386, metadata !DIExpression()), !dbg !15395
  call void @llvm.dbg.value(metadata i32 undef, metadata !15386, metadata !DIExpression()), !dbg !15395
  ret void, !dbg !15415
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !15416 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15420, metadata !DIExpression()), !dbg !15425
  tail call void @z_time_slice(i32 noundef %0) #25, !dbg !15426
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14978, metadata !DIExpression()) #24, !dbg !15427
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15429, !srcloc !14993
  call void @llvm.dbg.value(metadata i32 undef, metadata !14990, metadata !DIExpression()) #24, !dbg !15431
  call void @llvm.dbg.value(metadata i32 undef, metadata !14991, metadata !DIExpression()) #24, !dbg !15431
  call void @llvm.dbg.value(metadata i32 undef, metadata !14984, metadata !DIExpression()) #24, !dbg !15427
  call void @llvm.dbg.value(metadata i32 undef, metadata !15421, metadata !DIExpression()), !dbg !15425
  store i32 %0, i32* @announce_remaining, align 4, !dbg !15425
  call void @llvm.dbg.value(metadata i32 undef, metadata !15421, metadata !DIExpression()), !dbg !15425
  %3 = tail call fastcc %struct._timeout* @first() #26, !dbg !15432
  %4 = icmp eq %struct._timeout* %3, null, !dbg !15433
  br i1 %4, label %28, label %5, !dbg !15434

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !15435
  %10 = load i64, i64* %9, align 8, !dbg !15435
  %11 = sext i32 %8 to i64, !dbg !15436
  %12 = icmp sgt i64 %10, %11, !dbg !15437
  br i1 %12, label %26, label %13, !dbg !15438

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !15425
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !15422, metadata !DIExpression()), !dbg !15439
  %15 = trunc i64 %10 to i32, !dbg !15440
  call void @llvm.dbg.value(metadata i32 %15, metadata !15424, metadata !DIExpression()), !dbg !15439
  %16 = sext i32 %15 to i64, !dbg !15441
  %17 = load i64, i64* @curr_tick, align 8, !dbg !15442
  %18 = add i64 %17, %16, !dbg !15442
  store i64 %18, i64* @curr_tick, align 8, !dbg !15442
  store i64 0, i64* %9, align 8, !dbg !15443
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #26, !dbg !15444
  call void @llvm.dbg.value(metadata i32 %14, metadata !15046, metadata !DIExpression()) #24, !dbg !15445
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15051, metadata !DIExpression()) #24, !dbg !15445
  call void @llvm.dbg.value(metadata i32 %14, metadata !15054, metadata !DIExpression()) #24, !dbg !15447
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #24, !dbg !15449, !srcloc !15060
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !15450
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !15450
  tail call void %20(%struct._timeout* noundef nonnull %6) #25, !dbg !15451
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14978, metadata !DIExpression()) #24, !dbg !15452
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15454, !srcloc !14993
  call void @llvm.dbg.value(metadata i32 undef, metadata !14990, metadata !DIExpression()) #24, !dbg !15456
  call void @llvm.dbg.value(metadata i32 undef, metadata !14991, metadata !DIExpression()) #24, !dbg !15456
  call void @llvm.dbg.value(metadata i32 undef, metadata !14984, metadata !DIExpression()) #24, !dbg !15452
  call void @llvm.dbg.value(metadata i32 undef, metadata !15421, metadata !DIExpression()), !dbg !15425
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !15457
  %23 = sub nsw i32 %22, %15, !dbg !15457
  store i32 %23, i32* @announce_remaining, align 4, !dbg !15425
  call void @llvm.dbg.value(metadata i32 undef, metadata !15421, metadata !DIExpression()), !dbg !15425
  %24 = tail call fastcc %struct._timeout* @first() #26, !dbg !15432
  %25 = icmp eq %struct._timeout* %24, null, !dbg !15433
  br i1 %25, label %28, label %5, !dbg !15434, !llvm.loop !15458

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !15460
  store i64 %27, i64* %9, align 8, !dbg !15460
  br label %32, !dbg !15463

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !15425
  %31 = sext i32 %30 to i64, !dbg !15464
  br label %32, !dbg !15464

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !15464
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !15425
  %36 = load i64, i64* @curr_tick, align 8, !dbg !15465
  %37 = add i64 %36, %33, !dbg !15465
  store i64 %37, i64* @curr_tick, align 8, !dbg !15465
  store i32 0, i32* @announce_remaining, align 4, !dbg !15466
  %38 = tail call fastcc i32 @next_timeout() #26, !dbg !15467
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #25, !dbg !15468
  call void @llvm.dbg.value(metadata i32 %35, metadata !15046, metadata !DIExpression()) #24, !dbg !15469
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15051, metadata !DIExpression()) #24, !dbg !15469
  call void @llvm.dbg.value(metadata i32 %35, metadata !15054, metadata !DIExpression()) #24, !dbg !15471
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #24, !dbg !15473, !srcloc !15060
  ret void, !dbg !15474
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !15475 {
  call void @llvm.dbg.value(metadata i64 0, metadata !15479, metadata !DIExpression()), !dbg !15483
  call void @llvm.dbg.value(metadata i32 0, metadata !15480, metadata !DIExpression()), !dbg !15484
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14978, metadata !DIExpression()) #24, !dbg !15485
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15487, !srcloc !14993
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15487
  call void @llvm.dbg.value(metadata i32 %2, metadata !14990, metadata !DIExpression()) #24, !dbg !15489
  call void @llvm.dbg.value(metadata i32 undef, metadata !14991, metadata !DIExpression()) #24, !dbg !15489
  call void @llvm.dbg.value(metadata i32 %2, metadata !14984, metadata !DIExpression()) #24, !dbg !15485
  call void @llvm.dbg.value(metadata i32 %2, metadata !15482, metadata !DIExpression()), !dbg !15484
  call void @llvm.dbg.value(metadata i64 0, metadata !15479, metadata !DIExpression()), !dbg !15483
  call void @llvm.dbg.value(metadata i32 undef, metadata !15480, metadata !DIExpression()), !dbg !15484
  %3 = load i64, i64* @curr_tick, align 8, !dbg !15490
  %4 = tail call fastcc i32 @elapsed.167() #26, !dbg !15493
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !15479, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !15483
  call void @llvm.dbg.value(metadata i32 %2, metadata !15046, metadata !DIExpression()) #24, !dbg !15494
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15051, metadata !DIExpression()) #24, !dbg !15494
  call void @llvm.dbg.value(metadata i32 %2, metadata !15054, metadata !DIExpression()) #24, !dbg !15496
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !15498, !srcloc !15060
  call void @llvm.dbg.value(metadata i32 undef, metadata !15480, metadata !DIExpression()), !dbg !15484
  %5 = sext i32 %4 to i64, !dbg !15493
  %6 = add i64 %3, %5, !dbg !15499
  ret i64 %6, !dbg !15500
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !15501 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !15502
  %2 = trunc i64 %1 to i32, !dbg !15503
  ret i32 %2, !dbg !15504
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !15505 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !15506
  ret i64 %1, !dbg !15507
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !15508 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15510, metadata !DIExpression()), !dbg !15517
  %2 = icmp eq i32 %0, 0, !dbg !15518
  br i1 %2, label %10, label %3, !dbg !15520

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !15521
  call void @llvm.dbg.value(metadata i32 %4, metadata !15511, metadata !DIExpression()), !dbg !15517
  %5 = mul i32 %0, 84, !dbg !15522
  call void @llvm.dbg.value(metadata i32 %5, metadata !15512, metadata !DIExpression()), !dbg !15517
  br label %6, !dbg !15523

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !15524
  call void @llvm.dbg.value(metadata i32 %7, metadata !15513, metadata !DIExpression()), !dbg !15525
  %8 = sub i32 %7, %4, !dbg !15526
  %9 = icmp ult i32 %8, %5, !dbg !15528
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !15529
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !15530 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #26, !dbg !15531
  ret i32 %1, !dbg !15532
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !15533 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !15535
  ret i32 %1, !dbg !15536
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !15537 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !15541, metadata !DIExpression()), !dbg !15543
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !15544

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #26, !dbg !15545
  br label %14, !dbg !15549

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !15542, metadata !DIExpression()), !dbg !15543
  %6 = icmp slt i64 %2, -1, !dbg !15550
  br i1 %6, label %7, label %9, !dbg !15553

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !15554
  br label %14, !dbg !15555

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #26, !dbg !15557
  %11 = icmp ugt i64 %2, 1, !dbg !15558
  %12 = select i1 %11, i64 %2, i64 1, !dbg !15558
  %13 = add nsw i64 %10, %12, !dbg !15559
  br label %14, !dbg !15560

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !15561
  ret i64 %15, !dbg !15562
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !15563 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.188, i32 0, i32 0)) #25, !dbg !15565
  ret void, !dbg !15566
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { argmemonly nofree nosync nounwind willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { nofree nosync nounwind willreturn }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { argmemonly nofree nounwind willreturn writeonly }
attributes #15 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { nounwind }
attributes #25 = { nobuiltin nounwind optsize "no-builtins" }
attributes #26 = { nobuiltin optsize "no-builtins" }
attributes #27 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #28 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #29 = { nounwind readnone }
attributes #30 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!640, !2, !2239, !27, !124, !2241, !2243, !138, !2269, !2307, !167, !222, !2309, !2320, !2366, !2368, !2396, !2424, !2467, !2538, !2583, !251, !397, !2611, !433, !443, !468, !676, !2616, !813, !879, !1186, !1441, !2655, !1556, !1646, !2657, !2743, !2808, !1698, !2811, !1705, !2067, !2829, !2087, !2831, !2202, !2834}
!llvm.ident = !{!2836, !2836, !2836, !2836, !2836, !2836, !2836, !2836, !2836, !2836, !2836, !2836, !2836, !2836, !2836, !2836, !2836, !2836, !2836, !2836, !2836, !2836, !2836, !2836, !2836, !2836, !2836, !2836, !2836, !2836, !2836, !2836, !2836, !2836, !2836, !2836, !2836, !2836, !2836, !2836, !2836, !2836, !2836, !2836, !2836, !2836, !2836, !2836}
!llvm.module.flags = !{!2837, !2838, !2839, !2840, !2841, !2842, !2843, !2844, !2845}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sys_heap/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sys_heap")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 97, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sys_heap")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 5440, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 85)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 2720, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "heap", scope: !27, file: !107, line: 13, type: !112, isLocal: true, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !104, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/basic/sys_heap/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sys_heap")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!103 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!104 = !{!105, !25}
!105 = !DIGlobalVariableExpression(var: !106, expr: !DIExpression())
!106 = distinct !DIGlobalVariable(name: "heap_mem", scope: !27, file: !107, line: 12, type: !108, isLocal: true, isDefinition: true)
!107 = !DIFile(filename: "zephyr/samples/basic/sys_heap/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!108 = !DICompositeType(tag: DW_TAG_array_type, baseType: !109, size: 2048, elements: !110)
!109 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!110 = !{!111}
!111 = !DISubrange(count: 256)
!112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !114)
!113 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!114 = !{!115, !118, !119}
!115 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !112, file: !113, line: 57, baseType: !116, size: 32)
!116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 32)
!117 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !113, line: 57, flags: DIFlagFwdDecl)
!118 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !112, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!119 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !112, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!120 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !121, line: 214, baseType: !32)
!121 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!122 = !DIGlobalVariableExpression(var: !123, expr: !DIExpression())
!123 = distinct !DIGlobalVariable(name: "_char_out", scope: !124, file: !127, line: 54, type: !128, isLocal: false, isDefinition: true)
!124 = distinct !DICompileUnit(language: DW_LANG_C99, file: !125, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !126, splitDebugInlining: false, nameTableKind: None)
!125 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sys_heap")
!126 = !{!122}
!127 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !129, size: 32)
!129 = !DISubroutineType(types: !130)
!130 = !{!103, !103}
!131 = !DIGlobalVariableExpression(var: !132, expr: !DIExpression())
!132 = distinct !DIGlobalVariable(name: "state", scope: !133, file: !134, line: 227, type: !163, isLocal: true, isDefinition: true)
!133 = distinct !DISubprogram(name: "rand32", scope: !134, file: !134, line: 225, type: !135, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !162)
!134 = !DIFile(filename: "zephyr/lib/os/heap-validate.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!135 = !DISubroutineType(types: !136)
!136 = !{!137}
!137 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!138 = distinct !DICompileUnit(language: DW_LANG_C99, file: !139, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !148, globals: !161, splitDebugInlining: false, nameTableKind: None)
!139 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap-validate.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sys_heap")
!140 = !{!30, !141}
!141 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chunk_fields", file: !142, line: 54, baseType: !32, size: 32, elements: !143)
!142 = !DIFile(filename: "zephyr/lib/os/heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!143 = !{!144, !145, !146, !147}
!144 = !DIEnumerator(name: "LEFT_SIZE", value: 0)
!145 = !DIEnumerator(name: "SIZE_AND_USED", value: 1)
!146 = !DIEnumerator(name: "FREE_PREV", value: 2)
!147 = !DIEnumerator(name: "FREE_NEXT", value: 3)
!148 = !{!102, !103, !149, !150, !137, !153}
!149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !137, size: 32)
!150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !151, size: 32)
!151 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !152)
!152 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !154, size: 32)
!154 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !142, line: 58, baseType: !155)
!155 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !142, line: 58, size: 64, elements: !156)
!156 = !{!157}
!157 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !155, file: !142, line: 58, baseType: !158, size: 64)
!158 = !DICompositeType(tag: DW_TAG_array_type, baseType: !109, size: 64, elements: !159)
!159 = !{!160}
!160 = !DISubrange(count: 8)
!161 = !{!131}
!162 = !{}
!163 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !164)
!164 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!165 = !DIGlobalVariableExpression(var: !166, expr: !DIExpression())
!166 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !167, file: !184, line: 56, type: !185, isLocal: true, isDefinition: true, align: 32)
!167 = distinct !DICompileUnit(language: DW_LANG_C99, file: !168, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !169, globals: !183, splitDebugInlining: false, nameTableKind: None)
!168 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sys_heap")
!169 = !{!170}
!170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !171, size: 32)
!171 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !172, line: 258, baseType: !173)
!172 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f401xe.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!173 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 249, size: 224, elements: !174)
!174 = !{!175, !177, !178, !179, !180, !181, !182}
!175 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !173, file: !172, line: 251, baseType: !176, size: 32)
!176 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !137)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !173, file: !172, line: 252, baseType: !176, size: 32, offset: 32)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !173, file: !172, line: 253, baseType: !176, size: 32, offset: 64)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !173, file: !172, line: 254, baseType: !176, size: 32, offset: 96)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !173, file: !172, line: 255, baseType: !176, size: 32, offset: 128)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !173, file: !172, line: 256, baseType: !176, size: 32, offset: 160)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !173, file: !172, line: 257, baseType: !176, size: 32, offset: 192)
!183 = !{!165}
!184 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!185 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !186)
!186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !187, line: 51, size: 64, elements: !188)
!187 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!188 = !{!189, !219}
!189 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !186, file: !187, line: 60, baseType: !190, size: 32)
!190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 32)
!191 = !DISubroutineType(types: !192)
!192 = !{!103, !193}
!193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !194, size: 32)
!194 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !195)
!195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !196, line: 378, size: 192, elements: !197)
!196 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!197 = !{!198, !201, !202, !203, !212, !213}
!198 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !195, file: !196, line: 380, baseType: !199, size: 32)
!199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !200, size: 32)
!200 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !109)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !195, file: !196, line: 382, baseType: !13, size: 32, offset: 32)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !195, file: !196, line: 384, baseType: !13, size: 32, offset: 64)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !195, file: !196, line: 386, baseType: !204, size: 32, offset: 96)
!204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !205, size: 32)
!205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !196, line: 351, size: 16, elements: !206)
!206 = !{!207, !210}
!207 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !205, file: !196, line: 359, baseType: !208, size: 8)
!208 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !209)
!209 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !205, file: !196, line: 364, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!211 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !195, file: !196, line: 388, baseType: !102, size: 32, offset: 128)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !195, file: !196, line: 396, baseType: !214, size: 32, offset: 160)
!214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !215, size: 32)
!215 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !216)
!216 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !196, line: 43, baseType: !217)
!217 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !218)
!218 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !186, file: !187, line: 65, baseType: !193, size: 32, offset: 32)
!220 = !DIGlobalVariableExpression(var: !221, expr: !DIExpression())
!221 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !222, file: !225, line: 71, type: !226, isLocal: true, isDefinition: true, align: 32)
!222 = distinct !DICompileUnit(language: DW_LANG_C99, file: !223, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !224, splitDebugInlining: false, nameTableKind: None)
!223 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sys_heap")
!224 = !{!220}
!225 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!226 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !227)
!227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !187, line: 51, size: 64, elements: !228)
!228 = !{!229, !248}
!229 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !227, file: !187, line: 60, baseType: !230, size: 32)
!230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !231, size: 32)
!231 = !DISubroutineType(types: !232)
!232 = !{!103, !233}
!233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !234, size: 32)
!234 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !235)
!235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !196, line: 378, size: 192, elements: !236)
!236 = !{!237, !238, !239, !240, !246, !247}
!237 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !235, file: !196, line: 380, baseType: !199, size: 32)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !235, file: !196, line: 382, baseType: !13, size: 32, offset: 32)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !235, file: !196, line: 384, baseType: !13, size: 32, offset: 64)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !235, file: !196, line: 386, baseType: !241, size: 32, offset: 96)
!241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !242, size: 32)
!242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !196, line: 351, size: 16, elements: !243)
!243 = !{!244, !245}
!244 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !242, file: !196, line: 359, baseType: !208, size: 8)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !242, file: !196, line: 364, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !235, file: !196, line: 388, baseType: !102, size: 32, offset: 128)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !235, file: !196, line: 396, baseType: !214, size: 32, offset: 160)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !227, file: !187, line: 65, baseType: !233, size: 32, offset: 32)
!249 = !DIGlobalVariableExpression(var: !250, expr: !DIExpression())
!250 = distinct !DIGlobalVariable(name: "static_regions", scope: !251, file: !258, line: 62, type: !393, isLocal: true, isDefinition: true)
!251 = distinct !DICompileUnit(language: DW_LANG_C99, file: !252, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !253, globals: !254, splitDebugInlining: false, nameTableKind: None)
!252 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sys_heap")
!253 = !{!120, !103, !137, !102}
!254 = !{!255, !249}
!255 = !DIGlobalVariableExpression(var: !256, expr: !DIExpression())
!256 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !257, file: !258, line: 198, type: !379, isLocal: true, isDefinition: true)
!257 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !258, file: !258, line: 175, type: !259, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !251, retainedNodes: !374)
!258 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!259 = !DISubroutineType(types: !260)
!260 = !{null, !261}
!261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !262, size: 32)
!262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !263, line: 245, size: 1024, elements: !264)
!263 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!264 = !{!265, !332, !345, !346, !347, !348, !354, !369}
!265 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !262, file: !263, line: 247, baseType: !266, size: 384)
!266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !263, line: 57, size: 384, elements: !267)
!267 = !{!268, !296, !304, !305, !306, !317, !318, !319}
!268 = !DIDerivedType(tag: DW_TAG_member, scope: !266, file: !263, line: 60, baseType: !269, size: 64)
!269 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !266, file: !263, line: 60, size: 64, elements: !270)
!270 = !{!271, !287}
!271 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !269, file: !263, line: 61, baseType: !272, size: 64)
!272 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !273, line: 49, baseType: !274)
!273 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !273, line: 37, size: 64, elements: !275)
!275 = !{!276, !282}
!276 = !DIDerivedType(tag: DW_TAG_member, scope: !274, file: !273, line: 38, baseType: !277, size: 32)
!277 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !274, file: !273, line: 38, size: 32, elements: !278)
!278 = !{!279, !281}
!279 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !277, file: !273, line: 39, baseType: !280, size: 32)
!280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !274, size: 32)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !277, file: !273, line: 40, baseType: !280, size: 32)
!282 = !DIDerivedType(tag: DW_TAG_member, scope: !274, file: !273, line: 42, baseType: !283, size: 32, offset: 32)
!283 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !274, file: !273, line: 42, size: 32, elements: !284)
!284 = !{!285, !286}
!285 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !283, file: !273, line: 43, baseType: !280, size: 32)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !283, file: !273, line: 44, baseType: !280, size: 32)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !269, file: !263, line: 62, baseType: !288, size: 64)
!288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !289, line: 49, size: 64, elements: !290)
!289 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!290 = !{!291}
!291 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !288, file: !289, line: 50, baseType: !292, size: 64)
!292 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 64, elements: !294)
!293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 32)
!294 = !{!295}
!295 = !DISubrange(count: 2)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !266, file: !263, line: 68, baseType: !297, size: 32, offset: 64)
!297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !298, size: 32)
!298 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !299, line: 233, baseType: !300)
!299 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!300 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !299, line: 231, size: 64, elements: !301)
!301 = !{!302}
!302 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !300, file: !299, line: 232, baseType: !303, size: 64)
!303 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !273, line: 48, baseType: !274)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !266, file: !263, line: 71, baseType: !208, size: 8, offset: 96)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !266, file: !263, line: 74, baseType: !208, size: 8, offset: 104)
!306 = !DIDerivedType(tag: DW_TAG_member, scope: !266, file: !263, line: 90, baseType: !307, size: 16, offset: 112)
!307 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !266, file: !263, line: 90, size: 16, elements: !308)
!308 = !{!309, !316}
!309 = !DIDerivedType(tag: DW_TAG_member, scope: !307, file: !263, line: 91, baseType: !310, size: 16)
!310 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !307, file: !263, line: 91, size: 16, elements: !311)
!311 = !{!312, !315}
!312 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !310, file: !263, line: 96, baseType: !313, size: 8)
!313 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !314)
!314 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !310, file: !263, line: 97, baseType: !208, size: 8, offset: 8)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !307, file: !263, line: 100, baseType: !151, size: 16)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !266, file: !263, line: 107, baseType: !137, size: 32, offset: 128)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !266, file: !263, line: 127, baseType: !102, size: 32, offset: 160)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !266, file: !263, line: 131, baseType: !320, size: 192, offset: 192)
!320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !299, line: 244, size: 192, elements: !321)
!321 = !{!322, !323, !329}
!322 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !320, file: !299, line: 245, baseType: !272, size: 64)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !320, file: !299, line: 246, baseType: !324, size: 32, offset: 64)
!324 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !299, line: 242, baseType: !325)
!325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !326, size: 32)
!326 = !DISubroutineType(types: !327)
!327 = !{null, !328}
!328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !320, size: 32)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !320, file: !299, line: 249, baseType: !330, size: 64, offset: 128)
!330 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !331)
!331 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !262, file: !263, line: 250, baseType: !333, size: 288, offset: 384)
!333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !334, line: 25, size: 288, elements: !335)
!334 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!335 = !{!336, !337, !338, !339, !340, !341, !342, !343, !344}
!336 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !333, file: !334, line: 26, baseType: !137, size: 32)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !333, file: !334, line: 27, baseType: !137, size: 32, offset: 32)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !333, file: !334, line: 28, baseType: !137, size: 32, offset: 64)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !333, file: !334, line: 29, baseType: !137, size: 32, offset: 96)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !333, file: !334, line: 30, baseType: !137, size: 32, offset: 128)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !333, file: !334, line: 31, baseType: !137, size: 32, offset: 160)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !333, file: !334, line: 32, baseType: !137, size: 32, offset: 192)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !333, file: !334, line: 33, baseType: !137, size: 32, offset: 224)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !333, file: !334, line: 34, baseType: !137, size: 32, offset: 256)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !262, file: !263, line: 253, baseType: !102, size: 32, offset: 672)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !262, file: !263, line: 256, baseType: !298, size: 64, offset: 704)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !262, file: !263, line: 294, baseType: !103, size: 32, offset: 768)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !262, file: !263, line: 300, baseType: !349, size: 96, offset: 800)
!349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !263, line: 149, size: 96, elements: !350)
!350 = !{!351, !352, !353}
!351 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !349, file: !263, line: 153, baseType: !22, size: 32)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !349, file: !263, line: 162, baseType: !120, size: 32, offset: 32)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !349, file: !263, line: 168, baseType: !120, size: 32, offset: 64)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !262, file: !263, line: 325, baseType: !355, size: 32, offset: 896)
!355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !356, size: 32)
!356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !357, line: 5073, size: 160, elements: !358)
!357 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!358 = !{!359, !365, !366}
!359 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !356, file: !357, line: 5074, baseType: !360, size: 96)
!360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !361)
!361 = !{!362, !363, !364}
!362 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !360, file: !113, line: 57, baseType: !116, size: 32)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !360, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !360, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !356, file: !357, line: 5075, baseType: !298, size: 64, offset: 96)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !356, file: !357, line: 5076, baseType: !367, offset: 160)
!367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !368, line: 43, elements: !162)
!368 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!369 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !262, file: !263, line: 343, baseType: !370, size: 64, offset: 928)
!370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !334, line: 60, size: 64, elements: !371)
!371 = !{!372, !373}
!372 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !370, file: !334, line: 63, baseType: !137, size: 32)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !370, file: !334, line: 66, baseType: !137, size: 32, offset: 32)
!374 = !{!375, !376, !377, !378}
!375 = !DILocalVariable(name: "thread", arg: 1, scope: !257, file: !258, line: 175, type: !261)
!376 = !DILocalVariable(name: "region_num", scope: !257, file: !258, line: 200, type: !208)
!377 = !DILocalVariable(name: "guard_start", scope: !257, file: !258, line: 265, type: !22)
!378 = !DILocalVariable(name: "guard_size", scope: !257, file: !258, line: 266, type: !120)
!379 = !DICompositeType(tag: DW_TAG_array_type, baseType: !380, size: 96, elements: !391)
!380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !381, line: 52, size: 96, elements: !382)
!381 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!382 = !{!383, !384, !385}
!383 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !380, file: !381, line: 53, baseType: !22, size: 32)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !380, file: !381, line: 54, baseType: !120, size: 32, offset: 32)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !380, file: !381, line: 55, baseType: !386, size: 32, offset: 64)
!386 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !387, line: 151, baseType: !388)
!387 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!388 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !387, line: 149, size: 32, elements: !389)
!389 = !{!390}
!390 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !388, file: !387, line: 150, baseType: !137, size: 32)
!391 = !{!392}
!392 = !DISubrange(count: 1)
!393 = !DICompositeType(tag: DW_TAG_array_type, baseType: !394, size: 96, elements: !391)
!394 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !380)
!395 = !DIGlobalVariableExpression(var: !396, expr: !DIExpression())
!396 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !397, file: !430, line: 39, type: !208, isLocal: true, isDefinition: true)
!397 = distinct !DICompileUnit(language: DW_LANG_C99, file: !398, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !399, globals: !429, splitDebugInlining: false, nameTableKind: None)
!398 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sys_heap")
!399 = !{!400, !102, !103, !417, !208}
!400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !401, size: 32)
!401 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !402, line: 1226, baseType: !403)
!402 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!403 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 1213, size: 352, elements: !404)
!404 = !{!405, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416}
!405 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !403, file: !402, line: 1215, baseType: !406, size: 32)
!406 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !176)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !403, file: !402, line: 1216, baseType: !176, size: 32, offset: 32)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !403, file: !402, line: 1217, baseType: !176, size: 32, offset: 64)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !403, file: !402, line: 1218, baseType: !176, size: 32, offset: 96)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !403, file: !402, line: 1219, baseType: !176, size: 32, offset: 128)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !403, file: !402, line: 1220, baseType: !176, size: 32, offset: 160)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !403, file: !402, line: 1221, baseType: !176, size: 32, offset: 192)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !403, file: !402, line: 1222, baseType: !176, size: 32, offset: 224)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !403, file: !402, line: 1223, baseType: !176, size: 32, offset: 256)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !403, file: !402, line: 1224, baseType: !176, size: 32, offset: 288)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !403, file: !402, line: 1225, baseType: !176, size: 32, offset: 320)
!417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !418, size: 32)
!418 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !419)
!419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !420, line: 27, size: 96, elements: !421)
!420 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!421 = !{!422, !423, !424}
!422 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !419, file: !420, line: 29, baseType: !137, size: 32)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !419, file: !420, line: 31, baseType: !199, size: 32, offset: 32)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !419, file: !420, line: 37, baseType: !425, size: 32, offset: 64)
!425 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !387, line: 146, baseType: !426)
!426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !387, line: 141, size: 32, elements: !427)
!427 = !{!428}
!428 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !426, file: !387, line: 143, baseType: !137, size: 32)
!429 = !{!395}
!430 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!431 = !DIGlobalVariableExpression(var: !432, expr: !DIExpression())
!432 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !433, file: !440, line: 21, type: !128, isLocal: true, isDefinition: true)
!433 = distinct !DICompileUnit(language: DW_LANG_C99, file: !434, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !435, globals: !439, splitDebugInlining: false, nameTableKind: None)
!434 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sys_heap")
!435 = !{!436, !103, !102}
!436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !437, size: 32)
!437 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !438, line: 22, baseType: !103)
!438 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!439 = !{!431}
!440 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!441 = !DIGlobalVariableExpression(var: !442, expr: !DIExpression())
!442 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !443, file: !448, line: 13, type: !465, isLocal: true, isDefinition: true)
!443 = distinct !DICompileUnit(language: DW_LANG_C99, file: !444, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !445, splitDebugInlining: false, nameTableKind: None)
!444 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sys_heap")
!445 = !{!446, !441}
!446 = !DIGlobalVariableExpression(var: !447, expr: !DIExpression())
!447 = distinct !DIGlobalVariable(name: "mpu_config", scope: !443, file: !448, line: 37, type: !449, isLocal: false, isDefinition: true)
!448 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!449 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !450)
!450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !420, line: 41, size: 64, elements: !451)
!451 = !{!452, !453}
!452 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !450, file: !420, line: 43, baseType: !137, size: 32)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !450, file: !420, line: 45, baseType: !454, size: 32, offset: 32)
!454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !455, size: 32)
!455 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !456)
!456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !420, line: 27, size: 96, elements: !457)
!457 = !{!458, !459, !460}
!458 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !456, file: !420, line: 29, baseType: !137, size: 32)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !456, file: !420, line: 31, baseType: !199, size: 32, offset: 32)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !456, file: !420, line: 37, baseType: !461, size: 32, offset: 64)
!461 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !387, line: 146, baseType: !462)
!462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !387, line: 141, size: 32, elements: !463)
!463 = !{!464}
!464 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !462, file: !387, line: 143, baseType: !137, size: 32)
!465 = !DICompositeType(tag: DW_TAG_array_type, baseType: !455, size: 192, elements: !294)
!466 = !DIGlobalVariableExpression(var: !467, expr: !DIExpression())
!467 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !468, file: !551, line: 72, type: !635, isLocal: true, isDefinition: true)
!468 = distinct !DICompileUnit(language: DW_LANG_C99, file: !469, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !470, retainedTypes: !537, globals: !548, splitDebugInlining: false, nameTableKind: None)
!469 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sys_heap")
!470 = !{!30, !471}
!471 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !172, line: 65, baseType: !103, size: 32, elements: !472)
!472 = !{!473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536}
!473 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!474 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!475 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!476 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!477 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!478 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!479 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!480 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!481 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!482 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!483 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!484 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!485 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!486 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!487 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!488 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!489 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!490 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!491 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!492 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!493 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!494 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!495 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!496 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!497 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!498 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!499 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!500 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!501 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!502 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!503 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!504 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!505 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!506 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!507 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!508 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!509 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!510 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!511 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!512 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!513 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!514 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!515 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!516 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!517 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!518 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!519 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!520 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!521 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!522 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!523 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!524 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!525 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!526 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!527 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!528 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!529 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!530 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!531 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!532 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!533 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!534 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!535 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!536 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!537 = !{!120, !103, !102, !538}
!538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !539, size: 32)
!539 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !172, line: 243, baseType: !540)
!540 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 235, size: 192, elements: !541)
!541 = !{!542, !543, !544, !545, !546, !547}
!542 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !540, file: !172, line: 237, baseType: !176, size: 32)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !540, file: !172, line: 238, baseType: !176, size: 32, offset: 32)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !540, file: !172, line: 239, baseType: !176, size: 32, offset: 64)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !540, file: !172, line: 240, baseType: !176, size: 32, offset: 96)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !540, file: !172, line: 241, baseType: !176, size: 32, offset: 128)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !540, file: !172, line: 242, baseType: !176, size: 32, offset: 160)
!548 = !{!549, !555, !571, !582, !599, !466, !601, !615, !617, !619, !621, !623, !625, !627, !629, !631, !633}
!549 = !DIGlobalVariableExpression(var: !550, expr: !DIExpression())
!550 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_39", scope: !468, file: !551, line: 424, type: !552, isLocal: false, isDefinition: true, align: 16)
!551 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!552 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 64, elements: !553)
!553 = !{!554}
!554 = !DISubrange(count: 4)
!555 = !DIGlobalVariableExpression(var: !556, expr: !DIExpression())
!556 = distinct !DIGlobalVariable(name: "__device_dts_ord_39", scope: !468, file: !551, line: 424, type: !557, isLocal: false, isDefinition: true, align: 32)
!557 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !558)
!558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !196, line: 378, size: 192, elements: !559)
!559 = !{!560, !561, !562, !563, !569, !570}
!560 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !558, file: !196, line: 380, baseType: !199, size: 32)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !558, file: !196, line: 382, baseType: !13, size: 32, offset: 32)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !558, file: !196, line: 384, baseType: !13, size: 32, offset: 64)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !558, file: !196, line: 386, baseType: !564, size: 32, offset: 96)
!564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !565, size: 32)
!565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !196, line: 351, size: 16, elements: !566)
!566 = !{!567, !568}
!567 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !565, file: !196, line: 359, baseType: !208, size: 8)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !565, file: !196, line: 364, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !558, file: !196, line: 388, baseType: !102, size: 32, offset: 128)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !558, file: !196, line: 396, baseType: !214, size: 32, offset: 160)
!571 = !DIGlobalVariableExpression(var: !572, expr: !DIExpression())
!572 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_39", scope: !468, file: !551, line: 424, type: !573, isLocal: true, isDefinition: true, align: 32)
!573 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !574)
!574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !187, line: 51, size: 64, elements: !575)
!575 = !{!576, !581}
!576 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !574, file: !187, line: 60, baseType: !577, size: 32)
!577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !578, size: 32)
!578 = !DISubroutineType(types: !579)
!579 = !{!103, !580}
!580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !557, size: 32)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !574, file: !187, line: 65, baseType: !580, size: 32, offset: 32)
!582 = !DIGlobalVariableExpression(var: !583, expr: !DIExpression())
!583 = distinct !DIGlobalVariable(name: "exti_data", scope: !468, file: !551, line: 423, type: !584, isLocal: true, isDefinition: true)
!584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !551, line: 107, size: 1472, elements: !585)
!585 = !{!586}
!586 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !584, file: !551, line: 109, baseType: !587, size: 1472)
!587 = !DICompositeType(tag: DW_TAG_array_type, baseType: !588, size: 1472, elements: !597)
!588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !551, line: 101, size: 64, elements: !589)
!589 = !{!590, !596}
!590 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !588, file: !551, line: 102, baseType: !591, size: 32)
!591 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !592, line: 63, baseType: !593)
!592 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !594, size: 32)
!594 = !DISubroutineType(types: !595)
!595 = !{null, !103, !102}
!596 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !588, file: !551, line: 103, baseType: !102, size: 32, offset: 32)
!597 = !{!598}
!598 = !DISubrange(count: 23)
!599 = !DIGlobalVariableExpression(var: !600, expr: !DIExpression())
!600 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_39", scope: !468, file: !551, line: 424, type: !565, isLocal: true, isDefinition: true, align: 8)
!601 = !DIGlobalVariableExpression(var: !602, expr: !DIExpression())
!602 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !603, file: !551, line: 493, type: !608, isLocal: true, isDefinition: true, align: 32)
!603 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !551, file: !551, line: 460, type: !604, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !606)
!604 = !DISubroutineType(types: !605)
!605 = !{null, !580}
!606 = !{!607}
!607 = !DILocalVariable(name: "dev", arg: 1, scope: !603, file: !551, line: 460, type: !580)
!608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !609)
!609 = !{!610, !612, !613, !614}
!610 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !608, file: !10, line: 55, baseType: !611, size: 32)
!611 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !103)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !608, file: !10, line: 57, baseType: !611, size: 32, offset: 32)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !608, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !608, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!615 = !DIGlobalVariableExpression(var: !616, expr: !DIExpression())
!616 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !603, file: !551, line: 497, type: !608, isLocal: true, isDefinition: true, align: 32)
!617 = !DIGlobalVariableExpression(var: !618, expr: !DIExpression())
!618 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !603, file: !551, line: 507, type: !608, isLocal: true, isDefinition: true, align: 32)
!619 = !DIGlobalVariableExpression(var: !620, expr: !DIExpression())
!620 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !603, file: !551, line: 512, type: !608, isLocal: true, isDefinition: true, align: 32)
!621 = !DIGlobalVariableExpression(var: !622, expr: !DIExpression())
!622 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !603, file: !551, line: 516, type: !608, isLocal: true, isDefinition: true, align: 32)
!623 = !DIGlobalVariableExpression(var: !624, expr: !DIExpression())
!624 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !603, file: !551, line: 523, type: !608, isLocal: true, isDefinition: true, align: 32)
!625 = !DIGlobalVariableExpression(var: !626, expr: !DIExpression())
!626 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !603, file: !551, line: 527, type: !608, isLocal: true, isDefinition: true, align: 32)
!627 = !DIGlobalVariableExpression(var: !628, expr: !DIExpression())
!628 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !603, file: !551, line: 581, type: !608, isLocal: true, isDefinition: true, align: 32)
!629 = !DIGlobalVariableExpression(var: !630, expr: !DIExpression())
!630 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !603, file: !551, line: 586, type: !608, isLocal: true, isDefinition: true, align: 32)
!631 = !DIGlobalVariableExpression(var: !632, expr: !DIExpression())
!632 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !603, file: !551, line: 591, type: !608, isLocal: true, isDefinition: true, align: 32)
!633 = !DIGlobalVariableExpression(var: !634, expr: !DIExpression())
!634 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !603, file: !551, line: 595, type: !608, isLocal: true, isDefinition: true, align: 32)
!635 = !DICompositeType(tag: DW_TAG_array_type, baseType: !636, size: 736, elements: !597)
!636 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !637)
!637 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !172, line: 133, baseType: !471)
!638 = !DIGlobalVariableExpression(var: !639, expr: !DIExpression())
!639 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_39", scope: !640, file: !645, line: 24, type: !671, isLocal: false, isDefinition: true, align: 16)
!640 = distinct !DICompileUnit(language: DW_LANG_C99, file: !641, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !642, splitDebugInlining: false, nameTableKind: None)
!641 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sys_heap/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sys_heap")
!642 = !{!643, !638, !649, !651, !653, !655, !657, !659, !661, !663, !665, !667, !669}
!643 = !DIGlobalVariableExpression(var: !644, expr: !DIExpression())
!644 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !640, file: !645, line: 19, type: !646, isLocal: false, isDefinition: true, align: 16)
!645 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sys_heap")
!646 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 224, elements: !647)
!647 = !{!648}
!648 = !DISubrange(count: 14)
!649 = !DIGlobalVariableExpression(var: !650, expr: !DIExpression())
!650 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_76", scope: !640, file: !645, line: 31, type: !552, isLocal: false, isDefinition: true, align: 16)
!651 = !DIGlobalVariableExpression(var: !652, expr: !DIExpression())
!652 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_75", scope: !640, file: !645, line: 38, type: !552, isLocal: false, isDefinition: true, align: 16)
!653 = !DIGlobalVariableExpression(var: !654, expr: !DIExpression())
!654 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_74", scope: !640, file: !645, line: 45, type: !552, isLocal: false, isDefinition: true, align: 16)
!655 = !DIGlobalVariableExpression(var: !656, expr: !DIExpression())
!656 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !640, file: !645, line: 52, type: !552, isLocal: false, isDefinition: true, align: 16)
!657 = !DIGlobalVariableExpression(var: !658, expr: !DIExpression())
!658 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_23", scope: !640, file: !645, line: 59, type: !552, isLocal: false, isDefinition: true, align: 16)
!659 = !DIGlobalVariableExpression(var: !660, expr: !DIExpression())
!660 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !640, file: !645, line: 66, type: !552, isLocal: false, isDefinition: true, align: 16)
!661 = !DIGlobalVariableExpression(var: !662, expr: !DIExpression())
!662 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_20", scope: !640, file: !645, line: 73, type: !552, isLocal: false, isDefinition: true, align: 16)
!663 = !DIGlobalVariableExpression(var: !664, expr: !DIExpression())
!664 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_25", scope: !640, file: !645, line: 80, type: !552, isLocal: false, isDefinition: true, align: 16)
!665 = !DIGlobalVariableExpression(var: !666, expr: !DIExpression())
!666 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_50", scope: !640, file: !645, line: 87, type: !552, isLocal: false, isDefinition: true, align: 16)
!667 = !DIGlobalVariableExpression(var: !668, expr: !DIExpression())
!668 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_44", scope: !640, file: !645, line: 94, type: !552, isLocal: false, isDefinition: true, align: 16)
!669 = !DIGlobalVariableExpression(var: !670, expr: !DIExpression())
!670 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_47", scope: !640, file: !645, line: 101, type: !552, isLocal: false, isDefinition: true, align: 16)
!671 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 48, elements: !672)
!672 = !{!673}
!673 = !DISubrange(count: 3)
!674 = !DIGlobalVariableExpression(var: !675, expr: !DIExpression())
!675 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !676, file: !739, line: 398, type: !772, isLocal: true, isDefinition: true)
!676 = distinct !DICompileUnit(language: DW_LANG_C99, file: !677, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !678, retainedTypes: !691, globals: !736, splitDebugInlining: false, nameTableKind: None)
!677 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sys_heap")
!678 = !{!679, !30, !684}
!679 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !680, line: 197, baseType: !32, size: 32, elements: !681)
!680 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!681 = !{!682, !683}
!682 = !DIEnumerator(name: "SUCCESS", value: 0)
!683 = !DIEnumerator(name: "ERROR", value: 1)
!684 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !685, line: 44, baseType: !32, size: 32, elements: !686)
!685 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!686 = !{!687, !688, !689, !690}
!687 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!688 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!689 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!690 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!691 = !{!102, !103, !137, !692, !730, !149}
!692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !693, size: 32)
!693 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !172, line: 369, baseType: !694)
!694 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 335, size: 1152, elements: !695)
!695 = !{!696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !729}
!696 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !694, file: !172, line: 337, baseType: !176, size: 32)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !694, file: !172, line: 338, baseType: !176, size: 32, offset: 32)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !694, file: !172, line: 339, baseType: !176, size: 32, offset: 64)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !694, file: !172, line: 340, baseType: !176, size: 32, offset: 96)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !694, file: !172, line: 341, baseType: !176, size: 32, offset: 128)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !694, file: !172, line: 342, baseType: !176, size: 32, offset: 160)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !694, file: !172, line: 343, baseType: !176, size: 32, offset: 192)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !694, file: !172, line: 344, baseType: !137, size: 32, offset: 224)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !694, file: !172, line: 345, baseType: !176, size: 32, offset: 256)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !694, file: !172, line: 346, baseType: !176, size: 32, offset: 288)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !694, file: !172, line: 347, baseType: !707, size: 64, offset: 320)
!707 = !DICompositeType(tag: DW_TAG_array_type, baseType: !137, size: 64, elements: !294)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !694, file: !172, line: 348, baseType: !176, size: 32, offset: 384)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !694, file: !172, line: 349, baseType: !176, size: 32, offset: 416)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !694, file: !172, line: 350, baseType: !176, size: 32, offset: 448)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !694, file: !172, line: 351, baseType: !137, size: 32, offset: 480)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !694, file: !172, line: 352, baseType: !176, size: 32, offset: 512)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !694, file: !172, line: 353, baseType: !176, size: 32, offset: 544)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !694, file: !172, line: 354, baseType: !707, size: 64, offset: 576)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !694, file: !172, line: 355, baseType: !176, size: 32, offset: 640)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !694, file: !172, line: 356, baseType: !176, size: 32, offset: 672)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !694, file: !172, line: 357, baseType: !176, size: 32, offset: 704)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !694, file: !172, line: 358, baseType: !137, size: 32, offset: 736)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !694, file: !172, line: 359, baseType: !176, size: 32, offset: 768)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !694, file: !172, line: 360, baseType: !176, size: 32, offset: 800)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !694, file: !172, line: 361, baseType: !707, size: 64, offset: 832)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !694, file: !172, line: 362, baseType: !176, size: 32, offset: 896)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !694, file: !172, line: 363, baseType: !176, size: 32, offset: 928)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !694, file: !172, line: 364, baseType: !707, size: 64, offset: 960)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !694, file: !172, line: 365, baseType: !176, size: 32, offset: 1024)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !694, file: !172, line: 366, baseType: !176, size: 32, offset: 1056)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !694, file: !172, line: 367, baseType: !728, size: 32, offset: 1088)
!728 = !DICompositeType(tag: DW_TAG_array_type, baseType: !137, size: 32, elements: !391)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !694, file: !172, line: 368, baseType: !176, size: 32, offset: 1120)
!730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !731, size: 32)
!731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !732, line: 343, size: 64, elements: !733)
!732 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!733 = !{!734, !735}
!734 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !731, file: !732, line: 344, baseType: !137, size: 32)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !731, file: !732, line: 345, baseType: !137, size: 32, offset: 32)
!736 = !{!737, !743, !759, !770, !674}
!737 = !DIGlobalVariableExpression(var: !738, expr: !DIExpression())
!738 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !676, file: !739, line: 752, type: !740, isLocal: false, isDefinition: true, align: 16)
!739 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!740 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 640, elements: !741)
!741 = !{!742}
!742 = !DISubrange(count: 40)
!743 = !DIGlobalVariableExpression(var: !744, expr: !DIExpression())
!744 = distinct !DIGlobalVariable(name: "__device_dts_ord_9", scope: !676, file: !739, line: 752, type: !745, isLocal: false, isDefinition: true, align: 32)
!745 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !746)
!746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !196, line: 378, size: 192, elements: !747)
!747 = !{!748, !749, !750, !751, !757, !758}
!748 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !746, file: !196, line: 380, baseType: !199, size: 32)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !746, file: !196, line: 382, baseType: !13, size: 32, offset: 32)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !746, file: !196, line: 384, baseType: !13, size: 32, offset: 64)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !746, file: !196, line: 386, baseType: !752, size: 32, offset: 96)
!752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !753, size: 32)
!753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !196, line: 351, size: 16, elements: !754)
!754 = !{!755, !756}
!755 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !753, file: !196, line: 359, baseType: !208, size: 8)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !753, file: !196, line: 364, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !746, file: !196, line: 388, baseType: !102, size: 32, offset: 128)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !746, file: !196, line: 396, baseType: !214, size: 32, offset: 160)
!759 = !DIGlobalVariableExpression(var: !760, expr: !DIExpression())
!760 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_9", scope: !676, file: !739, line: 752, type: !761, isLocal: true, isDefinition: true, align: 32)
!761 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !762)
!762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !187, line: 51, size: 64, elements: !763)
!763 = !{!764, !769}
!764 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !762, file: !187, line: 60, baseType: !765, size: 32)
!765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !766, size: 32)
!766 = !DISubroutineType(types: !767)
!767 = !{!103, !768}
!768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !745, size: 32)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !762, file: !187, line: 65, baseType: !768, size: 32, offset: 32)
!770 = !DIGlobalVariableExpression(var: !771, expr: !DIExpression())
!771 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_9", scope: !676, file: !739, line: 752, type: !753, isLocal: true, isDefinition: true, align: 8)
!772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !685, line: 100, size: 224, elements: !773)
!773 = !{!774, !780, !781, !790, !795, !800, !806}
!774 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !772, file: !685, line: 101, baseType: !775, size: 32)
!775 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !685, line: 76, baseType: !776)
!776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !777, size: 32)
!777 = !DISubroutineType(types: !778)
!778 = !{!103, !768, !779}
!779 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !685, line: 56, baseType: !102)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !772, file: !685, line: 102, baseType: !775, size: 32, offset: 32)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !772, file: !685, line: 103, baseType: !782, size: 32, offset: 64)
!782 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !685, line: 83, baseType: !783)
!783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !784, size: 32)
!784 = !DISubroutineType(types: !785)
!785 = !{!103, !768, !779, !786, !102}
!786 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !685, line: 72, baseType: !787)
!787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !788, size: 32)
!788 = !DISubroutineType(types: !789)
!789 = !{null, !768, !779, !102}
!790 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !772, file: !685, line: 104, baseType: !791, size: 32, offset: 96)
!791 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !685, line: 79, baseType: !792)
!792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !793, size: 32)
!793 = !DISubroutineType(types: !794)
!794 = !{!103, !768, !779, !149}
!795 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !772, file: !685, line: 105, baseType: !796, size: 32, offset: 128)
!796 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !685, line: 88, baseType: !797)
!797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !798, size: 32)
!798 = !DISubroutineType(types: !799)
!799 = !{!684, !768, !779}
!800 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !772, file: !685, line: 106, baseType: !801, size: 32, offset: 160)
!801 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !685, line: 92, baseType: !802)
!802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !803, size: 32)
!803 = !DISubroutineType(types: !804)
!804 = !{!103, !768, !779, !805}
!805 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !685, line: 64, baseType: !102)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !772, file: !685, line: 107, baseType: !807, size: 32, offset: 192)
!807 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !685, line: 96, baseType: !808)
!808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !809, size: 32)
!809 = !DISubroutineType(types: !810)
!810 = !{!103, !768, !779, !102}
!811 = !DIGlobalVariableExpression(var: !812, expr: !DIExpression())
!812 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !813, file: !870, line: 603, type: !872, isLocal: true, isDefinition: true, align: 32)
!813 = distinct !DICompileUnit(language: DW_LANG_C99, file: !814, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !815, globals: !867, splitDebugInlining: false, nameTableKind: None)
!814 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sys_heap")
!815 = !{!102, !103, !816}
!816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !817, size: 32)
!817 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !818)
!818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !819, line: 336, size: 160, elements: !820)
!819 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!820 = !{!821, !841, !845, !849, !862}
!821 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !818, file: !819, line: 365, baseType: !822, size: 32)
!822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !823, size: 32)
!823 = !DISubroutineType(types: !824)
!824 = !{!103, !825, !840}
!825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !826, size: 32)
!826 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !827)
!827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !196, line: 378, size: 192, elements: !828)
!828 = !{!829, !830, !831, !832, !838, !839}
!829 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !827, file: !196, line: 380, baseType: !199, size: 32)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !827, file: !196, line: 382, baseType: !13, size: 32, offset: 32)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !827, file: !196, line: 384, baseType: !13, size: 32, offset: 64)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !827, file: !196, line: 386, baseType: !833, size: 32, offset: 96)
!833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !834, size: 32)
!834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !196, line: 351, size: 16, elements: !835)
!835 = !{!836, !837}
!836 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !834, file: !196, line: 359, baseType: !208, size: 8)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !834, file: !196, line: 364, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !827, file: !196, line: 388, baseType: !102, size: 32, offset: 128)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !827, file: !196, line: 396, baseType: !214, size: 32, offset: 160)
!840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !209, size: 32)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !818, file: !819, line: 366, baseType: !842, size: 32, offset: 32)
!842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !843, size: 32)
!843 = !DISubroutineType(types: !844)
!844 = !{null, !825, !209}
!845 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !818, file: !819, line: 374, baseType: !846, size: 32, offset: 64)
!846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !847, size: 32)
!847 = !DISubroutineType(types: !848)
!848 = !{!103, !825}
!849 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !818, file: !819, line: 377, baseType: !850, size: 32, offset: 96)
!850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !851, size: 32)
!851 = !DISubroutineType(types: !852)
!852 = !{!103, !825, !853}
!853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !854, size: 32)
!854 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !855)
!855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !819, line: 122, size: 64, elements: !856)
!856 = !{!857, !858, !859, !860, !861}
!857 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !855, file: !819, line: 123, baseType: !137, size: 32)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !855, file: !819, line: 124, baseType: !208, size: 8, offset: 32)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !855, file: !819, line: 125, baseType: !208, size: 8, offset: 40)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !855, file: !819, line: 126, baseType: !208, size: 8, offset: 48)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !855, file: !819, line: 127, baseType: !208, size: 8, offset: 56)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !818, file: !819, line: 379, baseType: !863, size: 32, offset: 128)
!863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !864, size: 32)
!864 = !DISubroutineType(types: !865)
!865 = !{!103, !825, !866}
!866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !855, size: 32)
!867 = !{!811, !868}
!868 = !DIGlobalVariableExpression(var: !869, expr: !DIExpression())
!869 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !813, file: !870, line: 38, type: !871, isLocal: true, isDefinition: true)
!870 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!871 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !825)
!872 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !873)
!873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !187, line: 51, size: 64, elements: !874)
!874 = !{!875, !876}
!875 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !873, file: !187, line: 60, baseType: !846, size: 32)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !873, file: !187, line: 65, baseType: !825, size: 32, offset: 32)
!877 = !DIGlobalVariableExpression(var: !878, expr: !DIExpression())
!878 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !879, file: !1049, line: 762, type: !1161, isLocal: true, isDefinition: true)
!879 = distinct !DICompileUnit(language: DW_LANG_C99, file: !880, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !881, retainedTypes: !899, globals: !1046, splitDebugInlining: false, nameTableKind: None)
!880 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sys_heap")
!881 = !{!30, !882, !888, !893, !684}
!882 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !883, line: 506, baseType: !32, size: 32, elements: !884)
!883 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!884 = !{!885, !886, !887}
!885 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!886 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!887 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!888 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !883, line: 512, baseType: !32, size: 32, elements: !889)
!889 = !{!890, !891, !892}
!890 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!891 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!892 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!893 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !592, line: 43, baseType: !32, size: 32, elements: !894)
!894 = !{!895, !896, !897, !898}
!895 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!896 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!897 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!898 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!899 = !{!102, !103, !900, !970, !975, !935, !888, !882, !980, !981, !137, !995, !950, !1005, !1006, !1007}
!900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !901, size: 32)
!901 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !902)
!902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !883, line: 523, size: 288, elements: !903)
!903 = !{!904, !925, !931, !936, !940, !941, !942, !946, !966}
!904 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !902, file: !883, line: 524, baseType: !905, size: 32)
!905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !906, size: 32)
!906 = !DISubroutineType(types: !907)
!907 = !{!103, !908, !923, !924}
!908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !909, size: 32)
!909 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !910)
!910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !196, line: 378, size: 192, elements: !911)
!911 = !{!912, !913, !914, !915, !921, !922}
!912 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !910, file: !196, line: 380, baseType: !199, size: 32)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !910, file: !196, line: 382, baseType: !13, size: 32, offset: 32)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !910, file: !196, line: 384, baseType: !13, size: 32, offset: 64)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !910, file: !196, line: 386, baseType: !916, size: 32, offset: 96)
!916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !917, size: 32)
!917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !196, line: 351, size: 16, elements: !918)
!918 = !{!919, !920}
!919 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !917, file: !196, line: 359, baseType: !208, size: 8)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !917, file: !196, line: 364, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !910, file: !196, line: 388, baseType: !102, size: 32, offset: 128)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !910, file: !196, line: 396, baseType: !214, size: 32, offset: 160)
!923 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !883, line: 237, baseType: !208)
!924 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !883, line: 257, baseType: !137)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !902, file: !883, line: 530, baseType: !926, size: 32, offset: 32)
!926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !927, size: 32)
!927 = !DISubroutineType(types: !928)
!928 = !{!103, !908, !929}
!929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !930, size: 32)
!930 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !883, line: 229, baseType: !137)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !902, file: !883, line: 532, baseType: !932, size: 32, offset: 64)
!932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !933, size: 32)
!933 = !DISubroutineType(types: !934)
!934 = !{!103, !908, !935, !930}
!935 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !883, line: 216, baseType: !137)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !902, file: !883, line: 535, baseType: !937, size: 32, offset: 96)
!937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !938, size: 32)
!938 = !DISubroutineType(types: !939)
!939 = !{!103, !908, !935}
!940 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !902, file: !883, line: 537, baseType: !937, size: 32, offset: 128)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !902, file: !883, line: 539, baseType: !937, size: 32, offset: 160)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !902, file: !883, line: 541, baseType: !943, size: 32, offset: 192)
!943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !944, size: 32)
!944 = !DISubroutineType(types: !945)
!945 = !{!103, !908, !923, !882, !888}
!946 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !902, file: !883, line: 544, baseType: !947, size: 32, offset: 224)
!947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !948, size: 32)
!948 = !DISubroutineType(types: !949)
!949 = !{!103, !908, !950, !211}
!950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !951, size: 32)
!951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !883, line: 478, size: 96, elements: !952)
!952 = !{!953, !960, !965}
!953 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !951, file: !883, line: 482, baseType: !954, size: 32)
!954 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !955, line: 33, baseType: !956)
!955 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !955, line: 29, size: 32, elements: !957)
!957 = !{!958}
!958 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !956, file: !955, line: 30, baseType: !959, size: 32)
!959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !956, size: 32)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !951, file: !883, line: 485, baseType: !961, size: 32, offset: 32)
!961 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !883, line: 464, baseType: !962)
!962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !963, size: 32)
!963 = !DISubroutineType(types: !964)
!964 = !{null, !908, !950, !935}
!965 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !951, file: !883, line: 493, baseType: !935, size: 32, offset: 64)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !902, file: !883, line: 547, baseType: !967, size: 32, offset: 256)
!967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !968, size: 32)
!968 = !DISubroutineType(types: !969)
!969 = !{!137, !908}
!970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !971, size: 32)
!971 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !972)
!972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !883, line: 428, size: 32, elements: !973)
!973 = !{!974}
!974 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !972, file: !883, line: 434, baseType: !935, size: 32)
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 32)
!976 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !977)
!977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !883, line: 441, size: 32, elements: !978)
!978 = !{!979}
!979 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !977, file: !883, line: 447, baseType: !935, size: 32)
!980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !977, size: 32)
!981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !982, size: 32)
!982 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !172, line: 275, baseType: !983)
!983 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 264, size: 320, elements: !984)
!984 = !{!985, !986, !987, !988, !989, !990, !991, !992, !993}
!985 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !983, file: !172, line: 266, baseType: !176, size: 32)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !983, file: !172, line: 267, baseType: !176, size: 32, offset: 32)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !983, file: !172, line: 268, baseType: !176, size: 32, offset: 64)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !983, file: !172, line: 269, baseType: !176, size: 32, offset: 96)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !983, file: !172, line: 270, baseType: !176, size: 32, offset: 128)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !983, file: !172, line: 271, baseType: !176, size: 32, offset: 160)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !983, file: !172, line: 272, baseType: !176, size: 32, offset: 192)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !983, file: !172, line: 273, baseType: !176, size: 32, offset: 224)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !983, file: !172, line: 274, baseType: !994, size: 64, offset: 256)
!994 = !DICompositeType(tag: DW_TAG_array_type, baseType: !176, size: 64, elements: !294)
!995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !996, size: 32)
!996 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !172, line: 288, baseType: !997)
!997 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 281, size: 288, elements: !998)
!998 = !{!999, !1000, !1001, !1003, !1004}
!999 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !997, file: !172, line: 283, baseType: !176, size: 32)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !997, file: !172, line: 284, baseType: !176, size: 32, offset: 32)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !997, file: !172, line: 285, baseType: !1002, size: 128, offset: 64)
!1002 = !DICompositeType(tag: DW_TAG_array_type, baseType: !176, size: 128, elements: !553)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !997, file: !172, line: 286, baseType: !707, size: 64, offset: 192)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !997, file: !172, line: 287, baseType: !176, size: 32, offset: 256)
!1005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !109, size: 32)
!1006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !779, size: 32)
!1007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1008, size: 32)
!1008 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1009)
!1009 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !685, line: 100, size: 224, elements: !1010)
!1010 = !{!1011, !1016, !1017, !1026, !1031, !1036, !1041}
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1009, file: !685, line: 101, baseType: !1012, size: 32)
!1012 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !685, line: 76, baseType: !1013)
!1013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1014, size: 32)
!1014 = !DISubroutineType(types: !1015)
!1015 = !{!103, !908, !779}
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1009, file: !685, line: 102, baseType: !1012, size: 32, offset: 32)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1009, file: !685, line: 103, baseType: !1018, size: 32, offset: 64)
!1018 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !685, line: 83, baseType: !1019)
!1019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1020, size: 32)
!1020 = !DISubroutineType(types: !1021)
!1021 = !{!103, !908, !779, !1022, !102}
!1022 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !685, line: 72, baseType: !1023)
!1023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1024, size: 32)
!1024 = !DISubroutineType(types: !1025)
!1025 = !{null, !908, !779, !102}
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1009, file: !685, line: 104, baseType: !1027, size: 32, offset: 96)
!1027 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !685, line: 79, baseType: !1028)
!1028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1029, size: 32)
!1029 = !DISubroutineType(types: !1030)
!1030 = !{!103, !908, !779, !149}
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1009, file: !685, line: 105, baseType: !1032, size: 32, offset: 128)
!1032 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !685, line: 88, baseType: !1033)
!1033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1034, size: 32)
!1034 = !DISubroutineType(types: !1035)
!1035 = !{!684, !908, !779}
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1009, file: !685, line: 106, baseType: !1037, size: 32, offset: 160)
!1037 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !685, line: 92, baseType: !1038)
!1038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1039, size: 32)
!1039 = !DISubroutineType(types: !1040)
!1040 = !{!103, !908, !779, !805}
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1009, file: !685, line: 107, baseType: !1042, size: 32, offset: 192)
!1042 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !685, line: 96, baseType: !1043)
!1043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1044, size: 32)
!1044 = !DISubroutineType(types: !1045)
!1045 = !{!103, !908, !779, !102}
!1046 = !{!1047, !1053, !1055, !1065, !1067, !1069, !1071, !1076, !1078, !1080, !1085, !1087, !1089, !1091, !1093, !1095, !1097, !1099, !1101, !1103, !1105, !1107, !1109, !1111, !1113, !1127, !1129, !1131, !1133, !1135, !1137, !1139, !1141, !1143, !1145, !1147, !1149, !1151, !1153, !1155, !877, !1157, !1159, !1172, !1174, !1176, !1178, !1180, !1182}
!1047 = !DIGlobalVariableExpression(var: !1048, expr: !DIExpression())
!1048 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_25", scope: !879, file: !1049, line: 762, type: !1050, isLocal: false, isDefinition: true, align: 16)
!1049 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1050 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 112, elements: !1051)
!1051 = !{!1052}
!1052 = !DISubrange(count: 7)
!1053 = !DIGlobalVariableExpression(var: !1054, expr: !DIExpression())
!1054 = distinct !DIGlobalVariable(name: "__device_dts_ord_25", scope: !879, file: !1049, line: 762, type: !909, isLocal: false, isDefinition: true, align: 32)
!1055 = !DIGlobalVariableExpression(var: !1056, expr: !DIExpression())
!1056 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_25", scope: !879, file: !1049, line: 762, type: !1057, isLocal: true, isDefinition: true, align: 32)
!1057 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1058)
!1058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !187, line: 51, size: 64, elements: !1059)
!1059 = !{!1060, !1064}
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1058, file: !187, line: 60, baseType: !1061, size: 32)
!1061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1062, size: 32)
!1062 = !DISubroutineType(types: !1063)
!1063 = !{!103, !908}
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1058, file: !187, line: 65, baseType: !908, size: 32, offset: 32)
!1065 = !DIGlobalVariableExpression(var: !1066, expr: !DIExpression())
!1066 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_20", scope: !879, file: !1049, line: 766, type: !1050, isLocal: false, isDefinition: true, align: 16)
!1067 = !DIGlobalVariableExpression(var: !1068, expr: !DIExpression())
!1068 = distinct !DIGlobalVariable(name: "__device_dts_ord_20", scope: !879, file: !1049, line: 766, type: !909, isLocal: false, isDefinition: true, align: 32)
!1069 = !DIGlobalVariableExpression(var: !1070, expr: !DIExpression())
!1070 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_20", scope: !879, file: !1049, line: 766, type: !1057, isLocal: true, isDefinition: true, align: 32)
!1071 = !DIGlobalVariableExpression(var: !1072, expr: !DIExpression())
!1072 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !879, file: !1049, line: 770, type: !1073, isLocal: false, isDefinition: true, align: 16)
!1073 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 80, elements: !1074)
!1074 = !{!1075}
!1075 = !DISubrange(count: 5)
!1076 = !DIGlobalVariableExpression(var: !1077, expr: !DIExpression())
!1077 = distinct !DIGlobalVariable(name: "__device_dts_ord_72", scope: !879, file: !1049, line: 770, type: !909, isLocal: false, isDefinition: true, align: 32)
!1078 = !DIGlobalVariableExpression(var: !1079, expr: !DIExpression())
!1079 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_72", scope: !879, file: !1049, line: 770, type: !1057, isLocal: true, isDefinition: true, align: 32)
!1080 = !DIGlobalVariableExpression(var: !1081, expr: !DIExpression())
!1081 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_23", scope: !879, file: !1049, line: 774, type: !1082, isLocal: false, isDefinition: true, align: 16)
!1082 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 96, elements: !1083)
!1083 = !{!1084}
!1084 = !DISubrange(count: 6)
!1085 = !DIGlobalVariableExpression(var: !1086, expr: !DIExpression())
!1086 = distinct !DIGlobalVariable(name: "__device_dts_ord_23", scope: !879, file: !1049, line: 774, type: !909, isLocal: false, isDefinition: true, align: 32)
!1087 = !DIGlobalVariableExpression(var: !1088, expr: !DIExpression())
!1088 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_23", scope: !879, file: !1049, line: 774, type: !1057, isLocal: true, isDefinition: true, align: 32)
!1089 = !DIGlobalVariableExpression(var: !1090, expr: !DIExpression())
!1090 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !879, file: !1049, line: 778, type: !1073, isLocal: false, isDefinition: true, align: 16)
!1091 = !DIGlobalVariableExpression(var: !1092, expr: !DIExpression())
!1092 = distinct !DIGlobalVariable(name: "__device_dts_ord_73", scope: !879, file: !1049, line: 778, type: !909, isLocal: false, isDefinition: true, align: 32)
!1093 = !DIGlobalVariableExpression(var: !1094, expr: !DIExpression())
!1094 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_73", scope: !879, file: !1049, line: 778, type: !1057, isLocal: true, isDefinition: true, align: 32)
!1095 = !DIGlobalVariableExpression(var: !1096, expr: !DIExpression())
!1096 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_74", scope: !879, file: !1049, line: 782, type: !1073, isLocal: false, isDefinition: true, align: 16)
!1097 = !DIGlobalVariableExpression(var: !1098, expr: !DIExpression())
!1098 = distinct !DIGlobalVariable(name: "__device_dts_ord_74", scope: !879, file: !1049, line: 782, type: !909, isLocal: false, isDefinition: true, align: 32)
!1099 = !DIGlobalVariableExpression(var: !1100, expr: !DIExpression())
!1100 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_74", scope: !879, file: !1049, line: 782, type: !1057, isLocal: true, isDefinition: true, align: 32)
!1101 = !DIGlobalVariableExpression(var: !1102, expr: !DIExpression())
!1102 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_75", scope: !879, file: !1049, line: 786, type: !1073, isLocal: false, isDefinition: true, align: 16)
!1103 = !DIGlobalVariableExpression(var: !1104, expr: !DIExpression())
!1104 = distinct !DIGlobalVariable(name: "__device_dts_ord_75", scope: !879, file: !1049, line: 786, type: !909, isLocal: false, isDefinition: true, align: 32)
!1105 = !DIGlobalVariableExpression(var: !1106, expr: !DIExpression())
!1106 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_75", scope: !879, file: !1049, line: 786, type: !1057, isLocal: true, isDefinition: true, align: 32)
!1107 = !DIGlobalVariableExpression(var: !1108, expr: !DIExpression())
!1108 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_76", scope: !879, file: !1049, line: 790, type: !1073, isLocal: false, isDefinition: true, align: 16)
!1109 = !DIGlobalVariableExpression(var: !1110, expr: !DIExpression())
!1110 = distinct !DIGlobalVariable(name: "__device_dts_ord_76", scope: !879, file: !1049, line: 790, type: !909, isLocal: false, isDefinition: true, align: 32)
!1111 = !DIGlobalVariableExpression(var: !1112, expr: !DIExpression())
!1112 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_76", scope: !879, file: !1049, line: 790, type: !1057, isLocal: true, isDefinition: true, align: 32)
!1113 = !DIGlobalVariableExpression(var: !1114, expr: !DIExpression())
!1114 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !879, file: !1049, line: 762, type: !1115, isLocal: true, isDefinition: true)
!1115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1116, line: 237, size: 128, elements: !1117)
!1116 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1117 = !{!1118, !1119, !1120}
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1115, file: !1116, line: 239, baseType: !977, size: 32)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1115, file: !1116, line: 241, baseType: !908, size: 32, offset: 32)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1115, file: !1116, line: 243, baseType: !1121, size: 64, offset: 64)
!1121 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !955, line: 40, baseType: !1122)
!1122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !955, line: 35, size: 64, elements: !1123)
!1123 = !{!1124, !1126}
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1122, file: !955, line: 36, baseType: !1125, size: 32)
!1125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !954, size: 32)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1122, file: !955, line: 37, baseType: !1125, size: 32, offset: 32)
!1127 = !DIGlobalVariableExpression(var: !1128, expr: !DIExpression())
!1128 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_25", scope: !879, file: !1049, line: 762, type: !917, isLocal: true, isDefinition: true, align: 8)
!1129 = !DIGlobalVariableExpression(var: !1130, expr: !DIExpression())
!1130 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !879, file: !1049, line: 766, type: !1115, isLocal: true, isDefinition: true)
!1131 = !DIGlobalVariableExpression(var: !1132, expr: !DIExpression())
!1132 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_20", scope: !879, file: !1049, line: 766, type: !917, isLocal: true, isDefinition: true, align: 8)
!1133 = !DIGlobalVariableExpression(var: !1134, expr: !DIExpression())
!1134 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !879, file: !1049, line: 770, type: !1115, isLocal: true, isDefinition: true)
!1135 = !DIGlobalVariableExpression(var: !1136, expr: !DIExpression())
!1136 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_72", scope: !879, file: !1049, line: 770, type: !917, isLocal: true, isDefinition: true, align: 8)
!1137 = !DIGlobalVariableExpression(var: !1138, expr: !DIExpression())
!1138 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !879, file: !1049, line: 774, type: !1115, isLocal: true, isDefinition: true)
!1139 = !DIGlobalVariableExpression(var: !1140, expr: !DIExpression())
!1140 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_23", scope: !879, file: !1049, line: 774, type: !917, isLocal: true, isDefinition: true, align: 8)
!1141 = !DIGlobalVariableExpression(var: !1142, expr: !DIExpression())
!1142 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !879, file: !1049, line: 778, type: !1115, isLocal: true, isDefinition: true)
!1143 = !DIGlobalVariableExpression(var: !1144, expr: !DIExpression())
!1144 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_73", scope: !879, file: !1049, line: 778, type: !917, isLocal: true, isDefinition: true, align: 8)
!1145 = !DIGlobalVariableExpression(var: !1146, expr: !DIExpression())
!1146 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !879, file: !1049, line: 782, type: !1115, isLocal: true, isDefinition: true)
!1147 = !DIGlobalVariableExpression(var: !1148, expr: !DIExpression())
!1148 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_74", scope: !879, file: !1049, line: 782, type: !917, isLocal: true, isDefinition: true, align: 8)
!1149 = !DIGlobalVariableExpression(var: !1150, expr: !DIExpression())
!1150 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !879, file: !1049, line: 786, type: !1115, isLocal: true, isDefinition: true)
!1151 = !DIGlobalVariableExpression(var: !1152, expr: !DIExpression())
!1152 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_75", scope: !879, file: !1049, line: 786, type: !917, isLocal: true, isDefinition: true, align: 8)
!1153 = !DIGlobalVariableExpression(var: !1154, expr: !DIExpression())
!1154 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !879, file: !1049, line: 790, type: !1115, isLocal: true, isDefinition: true)
!1155 = !DIGlobalVariableExpression(var: !1156, expr: !DIExpression())
!1156 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_76", scope: !879, file: !1049, line: 790, type: !917, isLocal: true, isDefinition: true, align: 8)
!1157 = !DIGlobalVariableExpression(var: !1158, expr: !DIExpression())
!1158 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !879, file: !1049, line: 656, type: !901, isLocal: true, isDefinition: true)
!1159 = !DIGlobalVariableExpression(var: !1160, expr: !DIExpression())
!1160 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !879, file: !1049, line: 766, type: !1161, isLocal: true, isDefinition: true)
!1161 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1162)
!1162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1116, line: 224, size: 160, elements: !1163)
!1163 = !{!1164, !1165, !1166, !1167}
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1162, file: !1116, line: 226, baseType: !972, size: 32)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1162, file: !1116, line: 228, baseType: !149, size: 32, offset: 32)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1162, file: !1116, line: 230, baseType: !103, size: 32, offset: 64)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1162, file: !1116, line: 231, baseType: !1168, size: 64, offset: 96)
!1168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !732, line: 343, size: 64, elements: !1169)
!1169 = !{!1170, !1171}
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1168, file: !732, line: 344, baseType: !137, size: 32)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1168, file: !732, line: 345, baseType: !137, size: 32, offset: 32)
!1172 = !DIGlobalVariableExpression(var: !1173, expr: !DIExpression())
!1173 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !879, file: !1049, line: 770, type: !1161, isLocal: true, isDefinition: true)
!1174 = !DIGlobalVariableExpression(var: !1175, expr: !DIExpression())
!1175 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !879, file: !1049, line: 774, type: !1161, isLocal: true, isDefinition: true)
!1176 = !DIGlobalVariableExpression(var: !1177, expr: !DIExpression())
!1177 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !879, file: !1049, line: 778, type: !1161, isLocal: true, isDefinition: true)
!1178 = !DIGlobalVariableExpression(var: !1179, expr: !DIExpression())
!1179 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !879, file: !1049, line: 782, type: !1161, isLocal: true, isDefinition: true)
!1180 = !DIGlobalVariableExpression(var: !1181, expr: !DIExpression())
!1181 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !879, file: !1049, line: 786, type: !1161, isLocal: true, isDefinition: true)
!1182 = !DIGlobalVariableExpression(var: !1183, expr: !DIExpression())
!1183 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !879, file: !1049, line: 790, type: !1161, isLocal: true, isDefinition: true)
!1184 = !DIGlobalVariableExpression(var: !1185, expr: !DIExpression())
!1185 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1186, file: !1325, line: 1914, type: !1402, isLocal: true, isDefinition: true)
!1186 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1187, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1188, retainedTypes: !1221, globals: !1322, splitDebugInlining: false, nameTableKind: None)
!1187 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sys_heap")
!1188 = !{!30, !1189, !1196, !1203, !1210, !1216, !684}
!1189 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !819, line: 47, baseType: !32, size: 32, elements: !1190)
!1190 = !{!1191, !1192, !1193, !1194, !1195}
!1191 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1192 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1193 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1194 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1195 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1196 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !819, line: 75, baseType: !32, size: 32, elements: !1197)
!1197 = !{!1198, !1199, !1200, !1201, !1202}
!1198 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1199 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1200 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1201 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1202 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1203 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !819, line: 92, baseType: !32, size: 32, elements: !1204)
!1204 = !{!1205, !1206, !1207, !1208, !1209}
!1205 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1206 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1207 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1208 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1209 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1210 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !819, line: 84, baseType: !32, size: 32, elements: !1211)
!1211 = !{!1212, !1213, !1214, !1215}
!1212 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1213 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1214 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1215 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1216 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !819, line: 107, baseType: !32, size: 32, elements: !1217)
!1217 = !{!1218, !1219, !1220}
!1218 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1219 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1220 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1221 = !{!102, !103, !1222, !209, !208, !1271, !137, !779, !1282, !151, !163, !1321}
!1222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1223, size: 32)
!1223 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1224)
!1224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !819, line: 336, size: 160, elements: !1225)
!1225 = !{!1226, !1245, !1249, !1253, !1266}
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1224, file: !819, line: 365, baseType: !1227, size: 32)
!1227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1228, size: 32)
!1228 = !DISubroutineType(types: !1229)
!1229 = !{!103, !1230, !840}
!1230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1231, size: 32)
!1231 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1232)
!1232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !196, line: 378, size: 192, elements: !1233)
!1233 = !{!1234, !1235, !1236, !1237, !1243, !1244}
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1232, file: !196, line: 380, baseType: !199, size: 32)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1232, file: !196, line: 382, baseType: !13, size: 32, offset: 32)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1232, file: !196, line: 384, baseType: !13, size: 32, offset: 64)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1232, file: !196, line: 386, baseType: !1238, size: 32, offset: 96)
!1238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1239, size: 32)
!1239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !196, line: 351, size: 16, elements: !1240)
!1240 = !{!1241, !1242}
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1239, file: !196, line: 359, baseType: !208, size: 8)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1239, file: !196, line: 364, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1232, file: !196, line: 388, baseType: !102, size: 32, offset: 128)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1232, file: !196, line: 396, baseType: !214, size: 32, offset: 160)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1224, file: !819, line: 366, baseType: !1246, size: 32, offset: 32)
!1246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1247, size: 32)
!1247 = !DISubroutineType(types: !1248)
!1248 = !{null, !1230, !209}
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1224, file: !819, line: 374, baseType: !1250, size: 32, offset: 64)
!1250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1251, size: 32)
!1251 = !DISubroutineType(types: !1252)
!1252 = !{!103, !1230}
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1224, file: !819, line: 377, baseType: !1254, size: 32, offset: 96)
!1254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1255, size: 32)
!1255 = !DISubroutineType(types: !1256)
!1256 = !{!103, !1230, !1257}
!1257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1258, size: 32)
!1258 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1259)
!1259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !819, line: 122, size: 64, elements: !1260)
!1260 = !{!1261, !1262, !1263, !1264, !1265}
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1259, file: !819, line: 123, baseType: !137, size: 32)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1259, file: !819, line: 124, baseType: !208, size: 8, offset: 32)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1259, file: !819, line: 125, baseType: !208, size: 8, offset: 40)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1259, file: !819, line: 126, baseType: !208, size: 8, offset: 48)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1259, file: !819, line: 127, baseType: !208, size: 8, offset: 56)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1224, file: !819, line: 379, baseType: !1267, size: 32, offset: 128)
!1267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1268, size: 32)
!1268 = !DISubroutineType(types: !1269)
!1269 = !{!103, !1230, !1270}
!1270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1259, size: 32)
!1271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1272, size: 32)
!1272 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !172, line: 507, baseType: !1273)
!1273 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 498, size: 224, elements: !1274)
!1274 = !{!1275, !1276, !1277, !1278, !1279, !1280, !1281}
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1273, file: !172, line: 500, baseType: !176, size: 32)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1273, file: !172, line: 501, baseType: !176, size: 32, offset: 32)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1273, file: !172, line: 502, baseType: !176, size: 32, offset: 64)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1273, file: !172, line: 503, baseType: !176, size: 32, offset: 96)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1273, file: !172, line: 504, baseType: !176, size: 32, offset: 128)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1273, file: !172, line: 505, baseType: !176, size: 32, offset: 160)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1273, file: !172, line: 506, baseType: !176, size: 32, offset: 192)
!1282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1283, size: 32)
!1283 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1284)
!1284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !685, line: 100, size: 224, elements: !1285)
!1285 = !{!1286, !1291, !1292, !1301, !1306, !1311, !1316}
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1284, file: !685, line: 101, baseType: !1287, size: 32)
!1287 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !685, line: 76, baseType: !1288)
!1288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1289, size: 32)
!1289 = !DISubroutineType(types: !1290)
!1290 = !{!103, !1230, !779}
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1284, file: !685, line: 102, baseType: !1287, size: 32, offset: 32)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1284, file: !685, line: 103, baseType: !1293, size: 32, offset: 64)
!1293 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !685, line: 83, baseType: !1294)
!1294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1295, size: 32)
!1295 = !DISubroutineType(types: !1296)
!1296 = !{!103, !1230, !779, !1297, !102}
!1297 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !685, line: 72, baseType: !1298)
!1298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1299, size: 32)
!1299 = !DISubroutineType(types: !1300)
!1300 = !{null, !1230, !779, !102}
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1284, file: !685, line: 104, baseType: !1302, size: 32, offset: 96)
!1302 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !685, line: 79, baseType: !1303)
!1303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1304, size: 32)
!1304 = !DISubroutineType(types: !1305)
!1305 = !{!103, !1230, !779, !149}
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1284, file: !685, line: 105, baseType: !1307, size: 32, offset: 128)
!1307 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !685, line: 88, baseType: !1308)
!1308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1309, size: 32)
!1309 = !DISubroutineType(types: !1310)
!1310 = !{!684, !1230, !779}
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1284, file: !685, line: 106, baseType: !1312, size: 32, offset: 160)
!1312 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !685, line: 92, baseType: !1313)
!1313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1314, size: 32)
!1314 = !DISubroutineType(types: !1315)
!1315 = !{!103, !1230, !779, !805}
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1284, file: !685, line: 107, baseType: !1317, size: 32, offset: 192)
!1317 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !685, line: 96, baseType: !1318)
!1318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1319, size: 32)
!1319 = !DISubroutineType(types: !1320)
!1320 = !{!103, !1230, !779, !102}
!1321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !176, size: 32)
!1322 = !{!1323, !1327, !1329, !1336, !1338, !1340, !1342, !1344, !1346, !1348, !1350, !1352, !1184, !1354, !1362, !1385, !1388, !1391, !1393, !1400, !1417, !1419, !1421, !1423, !1425, !1427, !1429, !1431, !1433, !1435, !1437}
!1323 = !DIGlobalVariableExpression(var: !1324, expr: !DIExpression())
!1324 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_47", scope: !1186, file: !1325, line: 1914, type: !1326, isLocal: false, isDefinition: true, align: 16)
!1325 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1326 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 128, elements: !159)
!1327 = !DIGlobalVariableExpression(var: !1328, expr: !DIExpression())
!1328 = distinct !DIGlobalVariable(name: "__device_dts_ord_47", scope: !1186, file: !1325, line: 1914, type: !1231, isLocal: false, isDefinition: true, align: 32)
!1329 = !DIGlobalVariableExpression(var: !1330, expr: !DIExpression())
!1330 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_47", scope: !1186, file: !1325, line: 1914, type: !1331, isLocal: true, isDefinition: true, align: 32)
!1331 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1332)
!1332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !187, line: 51, size: 64, elements: !1333)
!1333 = !{!1334, !1335}
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1332, file: !187, line: 60, baseType: !1250, size: 32)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1332, file: !187, line: 65, baseType: !1230, size: 32, offset: 32)
!1336 = !DIGlobalVariableExpression(var: !1337, expr: !DIExpression())
!1337 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_44", scope: !1186, file: !1325, line: 1914, type: !1326, isLocal: false, isDefinition: true, align: 16)
!1338 = !DIGlobalVariableExpression(var: !1339, expr: !DIExpression())
!1339 = distinct !DIGlobalVariable(name: "__device_dts_ord_44", scope: !1186, file: !1325, line: 1914, type: !1231, isLocal: false, isDefinition: true, align: 32)
!1340 = !DIGlobalVariableExpression(var: !1341, expr: !DIExpression())
!1341 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_44", scope: !1186, file: !1325, line: 1914, type: !1331, isLocal: true, isDefinition: true, align: 32)
!1342 = !DIGlobalVariableExpression(var: !1343, expr: !DIExpression())
!1343 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_50", scope: !1186, file: !1325, line: 1914, type: !1326, isLocal: false, isDefinition: true, align: 16)
!1344 = !DIGlobalVariableExpression(var: !1345, expr: !DIExpression())
!1345 = distinct !DIGlobalVariable(name: "__device_dts_ord_50", scope: !1186, file: !1325, line: 1914, type: !1231, isLocal: false, isDefinition: true, align: 32)
!1346 = !DIGlobalVariableExpression(var: !1347, expr: !DIExpression())
!1347 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_50", scope: !1186, file: !1325, line: 1914, type: !1331, isLocal: true, isDefinition: true, align: 32)
!1348 = !DIGlobalVariableExpression(var: !1349, expr: !DIExpression())
!1349 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_47", scope: !1186, file: !1325, line: 1914, type: !1239, isLocal: true, isDefinition: true, align: 8)
!1350 = !DIGlobalVariableExpression(var: !1351, expr: !DIExpression())
!1351 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_44", scope: !1186, file: !1325, line: 1914, type: !1239, isLocal: true, isDefinition: true, align: 8)
!1352 = !DIGlobalVariableExpression(var: !1353, expr: !DIExpression())
!1353 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_50", scope: !1186, file: !1325, line: 1914, type: !1239, isLocal: true, isDefinition: true, align: 8)
!1354 = !DIGlobalVariableExpression(var: !1355, expr: !DIExpression())
!1355 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1186, file: !1325, line: 1914, type: !1356, isLocal: true, isDefinition: true)
!1356 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1357, size: 64, elements: !391)
!1357 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1358)
!1358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !732, line: 343, size: 64, elements: !1359)
!1359 = !{!1360, !1361}
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1358, file: !732, line: 344, baseType: !137, size: 32)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1358, file: !732, line: 345, baseType: !137, size: 32, offset: 32)
!1362 = !DIGlobalVariableExpression(var: !1363, expr: !DIExpression())
!1363 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_47", scope: !1186, file: !1325, line: 1914, type: !1364, isLocal: true, isDefinition: true)
!1364 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1365)
!1365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1366, line: 60, size: 64, elements: !1367)
!1366 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1367 = !{!1368, !1384}
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1365, file: !1366, line: 69, baseType: !1369, size: 32)
!1369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1370, size: 32)
!1370 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1371)
!1371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1366, line: 50, size: 64, elements: !1372)
!1372 = !{!1373, !1382, !1383}
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1371, file: !1366, line: 52, baseType: !1374, size: 32)
!1374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1375, size: 32)
!1375 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1376)
!1376 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1377, line: 37, baseType: !1378)
!1377 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1377, line: 32, size: 64, elements: !1379)
!1379 = !{!1380, !1381}
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1378, file: !1377, line: 34, baseType: !137, size: 32)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1378, file: !1377, line: 36, baseType: !137, size: 32, offset: 32)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1371, file: !1366, line: 54, baseType: !208, size: 8, offset: 32)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1371, file: !1366, line: 56, baseType: !208, size: 8, offset: 40)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1365, file: !1366, line: 71, baseType: !208, size: 8, offset: 32)
!1385 = !DIGlobalVariableExpression(var: !1386, expr: !DIExpression())
!1386 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_47", scope: !1186, file: !1325, line: 1914, type: !1387, isLocal: true, isDefinition: true)
!1387 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1370, size: 64, elements: !391)
!1388 = !DIGlobalVariableExpression(var: !1389, expr: !DIExpression())
!1389 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_47", scope: !1186, file: !1325, line: 1914, type: !1390, isLocal: true, isDefinition: true)
!1390 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1375, size: 128, elements: !294)
!1391 = !DIGlobalVariableExpression(var: !1392, expr: !DIExpression())
!1392 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1186, file: !1325, line: 1539, type: !1223, isLocal: true, isDefinition: true)
!1393 = !DIGlobalVariableExpression(var: !1394, expr: !DIExpression())
!1394 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1186, file: !1325, line: 1914, type: !1395, isLocal: true, isDefinition: true)
!1395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1396, line: 74, size: 64, elements: !1397)
!1396 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1397 = !{!1398, !1399}
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1395, file: !1396, line: 76, baseType: !137, size: 32)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1395, file: !1396, line: 78, baseType: !1230, size: 32, offset: 32)
!1400 = !DIGlobalVariableExpression(var: !1401, expr: !DIExpression())
!1401 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_1", scope: !1186, file: !1325, line: 1914, type: !1402, isLocal: true, isDefinition: true)
!1402 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1403)
!1403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1396, line: 22, size: 224, elements: !1404)
!1404 = !{!1405, !1406, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415}
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1403, file: !1396, line: 24, baseType: !1271, size: 32)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1403, file: !1396, line: 26, baseType: !1407, size: 32, offset: 32)
!1407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1357, size: 32)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1403, file: !1396, line: 28, baseType: !120, size: 32, offset: 64)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1403, file: !1396, line: 30, baseType: !211, size: 8, offset: 96)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1403, file: !1396, line: 32, baseType: !103, size: 32, offset: 128)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1403, file: !1396, line: 34, baseType: !211, size: 8, offset: 160)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1403, file: !1396, line: 36, baseType: !211, size: 8, offset: 168)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1403, file: !1396, line: 38, baseType: !211, size: 8, offset: 176)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1403, file: !1396, line: 40, baseType: !211, size: 8, offset: 184)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1403, file: !1396, line: 41, baseType: !1416, size: 32, offset: 192)
!1416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1364, size: 32)
!1417 = !DIGlobalVariableExpression(var: !1418, expr: !DIExpression())
!1418 = distinct !DIGlobalVariable(name: "pclken_1", scope: !1186, file: !1325, line: 1914, type: !1356, isLocal: true, isDefinition: true)
!1419 = !DIGlobalVariableExpression(var: !1420, expr: !DIExpression())
!1420 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_44", scope: !1186, file: !1325, line: 1914, type: !1364, isLocal: true, isDefinition: true)
!1421 = !DIGlobalVariableExpression(var: !1422, expr: !DIExpression())
!1422 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_44", scope: !1186, file: !1325, line: 1914, type: !1387, isLocal: true, isDefinition: true)
!1423 = !DIGlobalVariableExpression(var: !1424, expr: !DIExpression())
!1424 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_44", scope: !1186, file: !1325, line: 1914, type: !1390, isLocal: true, isDefinition: true)
!1425 = !DIGlobalVariableExpression(var: !1426, expr: !DIExpression())
!1426 = distinct !DIGlobalVariable(name: "uart_stm32_data_1", scope: !1186, file: !1325, line: 1914, type: !1395, isLocal: true, isDefinition: true)
!1427 = !DIGlobalVariableExpression(var: !1428, expr: !DIExpression())
!1428 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_2", scope: !1186, file: !1325, line: 1914, type: !1402, isLocal: true, isDefinition: true)
!1429 = !DIGlobalVariableExpression(var: !1430, expr: !DIExpression())
!1430 = distinct !DIGlobalVariable(name: "pclken_2", scope: !1186, file: !1325, line: 1914, type: !1356, isLocal: true, isDefinition: true)
!1431 = !DIGlobalVariableExpression(var: !1432, expr: !DIExpression())
!1432 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_50", scope: !1186, file: !1325, line: 1914, type: !1364, isLocal: true, isDefinition: true)
!1433 = !DIGlobalVariableExpression(var: !1434, expr: !DIExpression())
!1434 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_50", scope: !1186, file: !1325, line: 1914, type: !1387, isLocal: true, isDefinition: true)
!1435 = !DIGlobalVariableExpression(var: !1436, expr: !DIExpression())
!1436 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_50", scope: !1186, file: !1325, line: 1914, type: !1390, isLocal: true, isDefinition: true)
!1437 = !DIGlobalVariableExpression(var: !1438, expr: !DIExpression())
!1438 = distinct !DIGlobalVariable(name: "uart_stm32_data_2", scope: !1186, file: !1325, line: 1914, type: !1395, isLocal: true, isDefinition: true)
!1439 = !DIGlobalVariableExpression(var: !1440, expr: !DIExpression())
!1440 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1441, file: !1521, line: 65, type: !176, isLocal: true, isDefinition: true)
!1441 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1442, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1443, retainedTypes: !1444, globals: !1518, splitDebugInlining: false, nameTableKind: None)
!1442 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sys_heap")
!1443 = !{!471}
!1444 = !{!1445, !1447, !611, !208, !137, !1455, !1486}
!1445 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !1446, line: 46, baseType: !330)
!1446 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1448, size: 32)
!1448 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !402, line: 770, baseType: !1449)
!1449 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 764, size: 128, elements: !1450)
!1450 = !{!1451, !1452, !1453, !1454}
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1449, file: !402, line: 766, baseType: !176, size: 32)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1449, file: !402, line: 767, baseType: !176, size: 32, offset: 32)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1449, file: !402, line: 768, baseType: !176, size: 32, offset: 64)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1449, file: !402, line: 769, baseType: !406, size: 32, offset: 96)
!1455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1456, size: 32)
!1456 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !402, line: 426, baseType: !1457)
!1457 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 411, size: 28704, elements: !1458)
!1458 = !{!1459, !1461, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1476, !1481, !1485}
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1457, file: !402, line: 413, baseType: !1460, size: 256)
!1460 = !DICompositeType(tag: DW_TAG_array_type, baseType: !176, size: 256, elements: !159)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1457, file: !402, line: 414, baseType: !1462, size: 768, offset: 256)
!1462 = !DICompositeType(tag: DW_TAG_array_type, baseType: !137, size: 768, elements: !1463)
!1463 = !{!1464}
!1464 = !DISubrange(count: 24)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1457, file: !402, line: 415, baseType: !1460, size: 256, offset: 1024)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1457, file: !402, line: 416, baseType: !1462, size: 768, offset: 1280)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1457, file: !402, line: 417, baseType: !1460, size: 256, offset: 2048)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1457, file: !402, line: 418, baseType: !1462, size: 768, offset: 2304)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1457, file: !402, line: 419, baseType: !1460, size: 256, offset: 3072)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1457, file: !402, line: 420, baseType: !1462, size: 768, offset: 3328)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1457, file: !402, line: 421, baseType: !1460, size: 256, offset: 4096)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1457, file: !402, line: 422, baseType: !1473, size: 1792, offset: 4352)
!1473 = !DICompositeType(tag: DW_TAG_array_type, baseType: !137, size: 1792, elements: !1474)
!1474 = !{!1475}
!1475 = !DISubrange(count: 56)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1457, file: !402, line: 423, baseType: !1477, size: 1920, offset: 6144)
!1477 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1478, size: 1920, elements: !1479)
!1478 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !208)
!1479 = !{!1480}
!1480 = !DISubrange(count: 240)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1457, file: !402, line: 424, baseType: !1482, size: 20608, offset: 8064)
!1482 = !DICompositeType(tag: DW_TAG_array_type, baseType: !137, size: 20608, elements: !1483)
!1483 = !{!1484}
!1484 = !DISubrange(count: 644)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1457, file: !402, line: 425, baseType: !176, size: 32, offset: 28672)
!1486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1487, size: 32)
!1487 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !402, line: 468, baseType: !1488)
!1488 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 445, size: 1120, elements: !1489)
!1489 = !{!1490, !1491, !1492, !1493, !1494, !1495, !1496, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1509, !1510, !1511, !1513, !1515, !1517}
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1488, file: !402, line: 447, baseType: !406, size: 32)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1488, file: !402, line: 448, baseType: !176, size: 32, offset: 32)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1488, file: !402, line: 449, baseType: !176, size: 32, offset: 64)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1488, file: !402, line: 450, baseType: !176, size: 32, offset: 96)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1488, file: !402, line: 451, baseType: !176, size: 32, offset: 128)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1488, file: !402, line: 452, baseType: !176, size: 32, offset: 160)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1488, file: !402, line: 453, baseType: !1497, size: 96, offset: 192)
!1497 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1478, size: 96, elements: !1498)
!1498 = !{!1499}
!1499 = !DISubrange(count: 12)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1488, file: !402, line: 454, baseType: !176, size: 32, offset: 288)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1488, file: !402, line: 455, baseType: !176, size: 32, offset: 320)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1488, file: !402, line: 456, baseType: !176, size: 32, offset: 352)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1488, file: !402, line: 457, baseType: !176, size: 32, offset: 384)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1488, file: !402, line: 458, baseType: !176, size: 32, offset: 416)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1488, file: !402, line: 459, baseType: !176, size: 32, offset: 448)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1488, file: !402, line: 460, baseType: !176, size: 32, offset: 480)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1488, file: !402, line: 461, baseType: !1508, size: 64, offset: 512)
!1508 = !DICompositeType(tag: DW_TAG_array_type, baseType: !406, size: 64, elements: !294)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1488, file: !402, line: 462, baseType: !406, size: 32, offset: 576)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1488, file: !402, line: 463, baseType: !406, size: 32, offset: 608)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1488, file: !402, line: 464, baseType: !1512, size: 128, offset: 640)
!1512 = !DICompositeType(tag: DW_TAG_array_type, baseType: !406, size: 128, elements: !553)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1488, file: !402, line: 465, baseType: !1514, size: 160, offset: 768)
!1514 = !DICompositeType(tag: DW_TAG_array_type, baseType: !406, size: 160, elements: !1074)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1488, file: !402, line: 466, baseType: !1516, size: 160, offset: 928)
!1516 = !DICompositeType(tag: DW_TAG_array_type, baseType: !137, size: 160, elements: !1074)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1488, file: !402, line: 467, baseType: !176, size: 32, offset: 1088)
!1518 = !{!1519, !1545, !1548, !1550, !1552, !1439}
!1519 = !DIGlobalVariableExpression(var: !1520, expr: !DIExpression())
!1520 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1441, file: !1521, line: 285, type: !1522, isLocal: true, isDefinition: true, align: 32)
!1521 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1522 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1523)
!1523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !187, line: 51, size: 64, elements: !1524)
!1524 = !{!1525, !1544}
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1523, file: !187, line: 60, baseType: !1526, size: 32)
!1526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1527, size: 32)
!1527 = !DISubroutineType(types: !1528)
!1528 = !{!103, !1529}
!1529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1530, size: 32)
!1530 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1531)
!1531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !196, line: 378, size: 192, elements: !1532)
!1532 = !{!1533, !1534, !1535, !1536, !1542, !1543}
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1531, file: !196, line: 380, baseType: !199, size: 32)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1531, file: !196, line: 382, baseType: !13, size: 32, offset: 32)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1531, file: !196, line: 384, baseType: !13, size: 32, offset: 64)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1531, file: !196, line: 386, baseType: !1537, size: 32, offset: 96)
!1537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1538, size: 32)
!1538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !196, line: 351, size: 16, elements: !1539)
!1539 = !{!1540, !1541}
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1538, file: !196, line: 359, baseType: !208, size: 8)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1538, file: !196, line: 364, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1531, file: !196, line: 388, baseType: !102, size: 32, offset: 128)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1531, file: !196, line: 396, baseType: !214, size: 32, offset: 160)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1523, file: !187, line: 65, baseType: !1529, size: 32, offset: 32)
!1545 = !DIGlobalVariableExpression(var: !1546, expr: !DIExpression())
!1546 = distinct !DIGlobalVariable(name: "lock", scope: !1441, file: !1521, line: 34, type: !1547, isLocal: true, isDefinition: true)
!1547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !368, line: 43, elements: !162)
!1548 = !DIGlobalVariableExpression(var: !1549, expr: !DIExpression())
!1549 = distinct !DIGlobalVariable(name: "last_load", scope: !1441, file: !1521, line: 36, type: !137, isLocal: true, isDefinition: true)
!1550 = !DIGlobalVariableExpression(var: !1551, expr: !DIExpression())
!1551 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1441, file: !1521, line: 48, type: !137, isLocal: true, isDefinition: true)
!1552 = !DIGlobalVariableExpression(var: !1553, expr: !DIExpression())
!1553 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1441, file: !1521, line: 54, type: !137, isLocal: true, isDefinition: true)
!1554 = !DIGlobalVariableExpression(var: !1555, expr: !DIExpression())
!1555 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1556, file: !1638, line: 22, type: !1640, isLocal: true, isDefinition: true)
!1556 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1557, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1558, retainedTypes: !1559, globals: !1635, splitDebugInlining: false, nameTableKind: None)
!1557 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sys_heap")
!1558 = !{!882, !888}
!1559 = !{!1560, !1624, !1629, !935, !888, !882, !1634, !102}
!1560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1561, size: 32)
!1561 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1562)
!1562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !883, line: 523, size: 288, elements: !1563)
!1563 = !{!1564, !1583, !1587, !1591, !1595, !1596, !1597, !1601, !1620}
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1562, file: !883, line: 524, baseType: !1565, size: 32)
!1565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1566, size: 32)
!1566 = !DISubroutineType(types: !1567)
!1567 = !{!103, !1568, !923, !924}
!1568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1569, size: 32)
!1569 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1570)
!1570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !196, line: 378, size: 192, elements: !1571)
!1571 = !{!1572, !1573, !1574, !1575, !1581, !1582}
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1570, file: !196, line: 380, baseType: !199, size: 32)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1570, file: !196, line: 382, baseType: !13, size: 32, offset: 32)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1570, file: !196, line: 384, baseType: !13, size: 32, offset: 64)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1570, file: !196, line: 386, baseType: !1576, size: 32, offset: 96)
!1576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1577, size: 32)
!1577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !196, line: 351, size: 16, elements: !1578)
!1578 = !{!1579, !1580}
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1577, file: !196, line: 359, baseType: !208, size: 8)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1577, file: !196, line: 364, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1570, file: !196, line: 388, baseType: !102, size: 32, offset: 128)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1570, file: !196, line: 396, baseType: !214, size: 32, offset: 160)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1562, file: !883, line: 530, baseType: !1584, size: 32, offset: 32)
!1584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1585, size: 32)
!1585 = !DISubroutineType(types: !1586)
!1586 = !{!103, !1568, !929}
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1562, file: !883, line: 532, baseType: !1588, size: 32, offset: 64)
!1588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1589, size: 32)
!1589 = !DISubroutineType(types: !1590)
!1590 = !{!103, !1568, !935, !930}
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1562, file: !883, line: 535, baseType: !1592, size: 32, offset: 96)
!1592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1593, size: 32)
!1593 = !DISubroutineType(types: !1594)
!1594 = !{!103, !1568, !935}
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1562, file: !883, line: 537, baseType: !1592, size: 32, offset: 128)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1562, file: !883, line: 539, baseType: !1592, size: 32, offset: 160)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1562, file: !883, line: 541, baseType: !1598, size: 32, offset: 192)
!1598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1599, size: 32)
!1599 = !DISubroutineType(types: !1600)
!1600 = !{!103, !1568, !923, !882, !888}
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1562, file: !883, line: 544, baseType: !1602, size: 32, offset: 224)
!1602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1603, size: 32)
!1603 = !DISubroutineType(types: !1604)
!1604 = !{!103, !1568, !1605, !211}
!1605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1606, size: 32)
!1606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !883, line: 478, size: 96, elements: !1607)
!1607 = !{!1608, !1614, !1619}
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1606, file: !883, line: 482, baseType: !1609, size: 32)
!1609 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !955, line: 33, baseType: !1610)
!1610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !955, line: 29, size: 32, elements: !1611)
!1611 = !{!1612}
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1610, file: !955, line: 30, baseType: !1613, size: 32)
!1613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1610, size: 32)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1606, file: !883, line: 485, baseType: !1615, size: 32, offset: 32)
!1615 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !883, line: 464, baseType: !1616)
!1616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1617, size: 32)
!1617 = !DISubroutineType(types: !1618)
!1618 = !{null, !1568, !1605, !935}
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1606, file: !883, line: 493, baseType: !935, size: 32, offset: 64)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1562, file: !883, line: 547, baseType: !1621, size: 32, offset: 256)
!1621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1622, size: 32)
!1622 = !DISubroutineType(types: !1623)
!1623 = !{!137, !1568}
!1624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1625, size: 32)
!1625 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1626)
!1626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !883, line: 428, size: 32, elements: !1627)
!1627 = !{!1628}
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1626, file: !883, line: 434, baseType: !935, size: 32)
!1629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1630, size: 32)
!1630 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1631)
!1631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !883, line: 441, size: 32, elements: !1632)
!1632 = !{!1633}
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1631, file: !883, line: 447, baseType: !935, size: 32)
!1634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1631, size: 32)
!1635 = !{!1636, !1554}
!1636 = !DIGlobalVariableExpression(var: !1637, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1637 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1556, file: !1638, line: 37, type: !1639, isLocal: true, isDefinition: true)
!1638 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1639 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !120)
!1640 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1641, size: 352, elements: !1642)
!1641 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1568)
!1642 = !{!1643}
!1643 = !DISubrange(count: 11)
!1644 = !DIGlobalVariableExpression(var: !1645, expr: !DIExpression())
!1645 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1646, file: !1688, line: 139, type: !1695, isLocal: false, isDefinition: true)
!1646 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1647, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1648, globals: !1685, splitDebugInlining: false, nameTableKind: None)
!1647 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sys_heap")
!1648 = !{!1649}
!1649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1650, size: 32)
!1650 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !172, line: 369, baseType: !1651)
!1651 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 335, size: 1152, elements: !1652)
!1652 = !{!1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684}
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1651, file: !172, line: 337, baseType: !176, size: 32)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1651, file: !172, line: 338, baseType: !176, size: 32, offset: 32)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1651, file: !172, line: 339, baseType: !176, size: 32, offset: 64)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1651, file: !172, line: 340, baseType: !176, size: 32, offset: 96)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1651, file: !172, line: 341, baseType: !176, size: 32, offset: 128)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1651, file: !172, line: 342, baseType: !176, size: 32, offset: 160)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1651, file: !172, line: 343, baseType: !176, size: 32, offset: 192)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1651, file: !172, line: 344, baseType: !137, size: 32, offset: 224)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1651, file: !172, line: 345, baseType: !176, size: 32, offset: 256)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1651, file: !172, line: 346, baseType: !176, size: 32, offset: 288)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1651, file: !172, line: 347, baseType: !707, size: 64, offset: 320)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1651, file: !172, line: 348, baseType: !176, size: 32, offset: 384)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1651, file: !172, line: 349, baseType: !176, size: 32, offset: 416)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1651, file: !172, line: 350, baseType: !176, size: 32, offset: 448)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1651, file: !172, line: 351, baseType: !137, size: 32, offset: 480)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1651, file: !172, line: 352, baseType: !176, size: 32, offset: 512)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1651, file: !172, line: 353, baseType: !176, size: 32, offset: 544)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1651, file: !172, line: 354, baseType: !707, size: 64, offset: 576)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1651, file: !172, line: 355, baseType: !176, size: 32, offset: 640)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1651, file: !172, line: 356, baseType: !176, size: 32, offset: 672)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1651, file: !172, line: 357, baseType: !176, size: 32, offset: 704)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1651, file: !172, line: 358, baseType: !137, size: 32, offset: 736)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1651, file: !172, line: 359, baseType: !176, size: 32, offset: 768)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1651, file: !172, line: 360, baseType: !176, size: 32, offset: 800)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1651, file: !172, line: 361, baseType: !707, size: 64, offset: 832)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1651, file: !172, line: 362, baseType: !176, size: 32, offset: 896)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1651, file: !172, line: 363, baseType: !176, size: 32, offset: 928)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1651, file: !172, line: 364, baseType: !707, size: 64, offset: 960)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1651, file: !172, line: 365, baseType: !176, size: 32, offset: 1024)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1651, file: !172, line: 366, baseType: !176, size: 32, offset: 1056)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !1651, file: !172, line: 367, baseType: !728, size: 32, offset: 1088)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1651, file: !172, line: 368, baseType: !176, size: 32, offset: 1120)
!1685 = !{!1686, !1689, !1644}
!1686 = !DIGlobalVariableExpression(var: !1687, expr: !DIExpression())
!1687 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1646, file: !1688, line: 137, type: !137, isLocal: false, isDefinition: true)
!1688 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1689 = !DIGlobalVariableExpression(var: !1690, expr: !DIExpression())
!1690 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1646, file: !1688, line: 138, type: !1691, isLocal: false, isDefinition: true)
!1691 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1692, size: 128, elements: !1693)
!1692 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !208)
!1693 = !{!1694}
!1694 = !DISubrange(count: 16)
!1695 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1692, size: 64, elements: !159)
!1696 = !DIGlobalVariableExpression(var: !1697, expr: !DIExpression())
!1697 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1698, file: !1701, line: 23, type: !1702, isLocal: false, isDefinition: true)
!1698 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1699, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !1700, splitDebugInlining: false, nameTableKind: None)
!1699 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sys_heap")
!1700 = !{!1696}
!1701 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1702 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!1703 = !DIGlobalVariableExpression(var: !1704, expr: !DIExpression())
!1704 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1705, file: !1709, line: 86, type: !1957, isLocal: false, isDefinition: true, align: 512)
!1705 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1706, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1707, retainedTypes: !1716, globals: !1790, splitDebugInlining: false, nameTableKind: None)
!1706 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sys_heap")
!1707 = !{!1708, !30, !471}
!1708 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1709, line: 63, baseType: !32, size: 32, elements: !1710)
!1709 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1710 = !{!1711, !1712, !1713, !1714, !1715}
!1711 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1712 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1713 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1714 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1715 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1716 = !{!120, !102, !103, !1717, !1005, !137, !1748, !611, !208, !1773}
!1717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1718, size: 32)
!1718 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1719)
!1719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1720, line: 51, size: 64, elements: !1721)
!1720 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1721 = !{!1722, !1743}
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1719, file: !1720, line: 52, baseType: !1723, size: 32)
!1723 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1720, line: 38, baseType: !1724)
!1724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1725, size: 32)
!1725 = !DISubroutineType(types: !1726)
!1726 = !{!103, !1727, !1742, !151}
!1727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1728, size: 32)
!1728 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1729)
!1729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !196, line: 378, size: 192, elements: !1730)
!1730 = !{!1731, !1732, !1733, !1734, !1740, !1741}
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1729, file: !196, line: 380, baseType: !199, size: 32)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1729, file: !196, line: 382, baseType: !13, size: 32, offset: 32)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1729, file: !196, line: 384, baseType: !13, size: 32, offset: 64)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1729, file: !196, line: 386, baseType: !1735, size: 32, offset: 96)
!1735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1736, size: 32)
!1736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !196, line: 351, size: 16, elements: !1737)
!1737 = !{!1738, !1739}
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1736, file: !196, line: 359, baseType: !208, size: 8)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1736, file: !196, line: 364, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1729, file: !196, line: 388, baseType: !102, size: 32, offset: 128)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1729, file: !196, line: 396, baseType: !214, size: 32, offset: 160)
!1742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !208, size: 32)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1719, file: !1720, line: 53, baseType: !1744, size: 32, offset: 32)
!1744 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1720, line: 47, baseType: !1745)
!1745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1746, size: 32)
!1746 = !DISubroutineType(types: !1747)
!1747 = !{!103, !1727, !1742, !151, !137}
!1748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1749, size: 32)
!1749 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !402, line: 468, baseType: !1750)
!1750 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 445, size: 1120, elements: !1751)
!1751 = !{!1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772}
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1750, file: !402, line: 447, baseType: !406, size: 32)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1750, file: !402, line: 448, baseType: !176, size: 32, offset: 32)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1750, file: !402, line: 449, baseType: !176, size: 32, offset: 64)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1750, file: !402, line: 450, baseType: !176, size: 32, offset: 96)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1750, file: !402, line: 451, baseType: !176, size: 32, offset: 128)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1750, file: !402, line: 452, baseType: !176, size: 32, offset: 160)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1750, file: !402, line: 453, baseType: !1497, size: 96, offset: 192)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1750, file: !402, line: 454, baseType: !176, size: 32, offset: 288)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1750, file: !402, line: 455, baseType: !176, size: 32, offset: 320)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1750, file: !402, line: 456, baseType: !176, size: 32, offset: 352)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1750, file: !402, line: 457, baseType: !176, size: 32, offset: 384)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1750, file: !402, line: 458, baseType: !176, size: 32, offset: 416)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1750, file: !402, line: 459, baseType: !176, size: 32, offset: 448)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1750, file: !402, line: 460, baseType: !176, size: 32, offset: 480)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1750, file: !402, line: 461, baseType: !1508, size: 64, offset: 512)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1750, file: !402, line: 462, baseType: !406, size: 32, offset: 576)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1750, file: !402, line: 463, baseType: !406, size: 32, offset: 608)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1750, file: !402, line: 464, baseType: !1512, size: 128, offset: 640)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1750, file: !402, line: 465, baseType: !1514, size: 160, offset: 768)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1750, file: !402, line: 466, baseType: !1516, size: 160, offset: 928)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1750, file: !402, line: 467, baseType: !176, size: 32, offset: 1088)
!1773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1774, size: 32)
!1774 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !402, line: 426, baseType: !1775)
!1775 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 411, size: 28704, elements: !1776)
!1776 = !{!1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789}
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1775, file: !402, line: 413, baseType: !1460, size: 256)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1775, file: !402, line: 414, baseType: !1462, size: 768, offset: 256)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1775, file: !402, line: 415, baseType: !1460, size: 256, offset: 1024)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1775, file: !402, line: 416, baseType: !1462, size: 768, offset: 1280)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1775, file: !402, line: 417, baseType: !1460, size: 256, offset: 2048)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1775, file: !402, line: 418, baseType: !1462, size: 768, offset: 2304)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1775, file: !402, line: 419, baseType: !1460, size: 256, offset: 3072)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1775, file: !402, line: 420, baseType: !1462, size: 768, offset: 3328)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1775, file: !402, line: 421, baseType: !1460, size: 256, offset: 4096)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1775, file: !402, line: 422, baseType: !1473, size: 1792, offset: 4352)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1775, file: !402, line: 423, baseType: !1477, size: 1920, offset: 6144)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1775, file: !402, line: 424, baseType: !1482, size: 20608, offset: 8064)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1775, file: !402, line: 425, baseType: !176, size: 32, offset: 28672)
!1790 = !{!1791, !1913, !1922, !1924, !1703, !1927, !1929, !1934}
!1791 = !DIGlobalVariableExpression(var: !1792, expr: !DIExpression())
!1792 = distinct !DIGlobalVariable(name: "_kernel", scope: !1705, file: !1709, line: 40, type: !1793, isLocal: false, isDefinition: true)
!1793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !299, line: 158, size: 288, elements: !1794)
!1794 = !{!1795, !1908}
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !1793, file: !299, line: 159, baseType: !1796, size: 192)
!1796 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1797, size: 192, elements: !391)
!1797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !299, line: 100, size: 192, elements: !1798)
!1798 = !{!1799, !1800, !1801, !1902, !1903, !1904, !1905}
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !1797, file: !299, line: 102, baseType: !137, size: 32)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !1797, file: !299, line: 105, baseType: !1005, size: 32, offset: 32)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1797, file: !299, line: 108, baseType: !1802, size: 32, offset: 64)
!1802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1803, size: 32)
!1803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !263, line: 245, size: 1024, elements: !1804)
!1804 = !{!1805, !1863, !1875, !1876, !1877, !1878, !1884, !1897}
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1803, file: !263, line: 247, baseType: !1806, size: 384)
!1806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !263, line: 57, size: 384, elements: !1807)
!1807 = !{!1808, !1832, !1839, !1840, !1841, !1850, !1851, !1852}
!1808 = !DIDerivedType(tag: DW_TAG_member, scope: !1806, file: !263, line: 60, baseType: !1809, size: 64)
!1809 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1806, file: !263, line: 60, size: 64, elements: !1810)
!1810 = !{!1811, !1826}
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1809, file: !263, line: 61, baseType: !1812, size: 64)
!1812 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !273, line: 49, baseType: !1813)
!1813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !273, line: 37, size: 64, elements: !1814)
!1814 = !{!1815, !1821}
!1815 = !DIDerivedType(tag: DW_TAG_member, scope: !1813, file: !273, line: 38, baseType: !1816, size: 32)
!1816 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1813, file: !273, line: 38, size: 32, elements: !1817)
!1817 = !{!1818, !1820}
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1816, file: !273, line: 39, baseType: !1819, size: 32)
!1819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1813, size: 32)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1816, file: !273, line: 40, baseType: !1819, size: 32)
!1821 = !DIDerivedType(tag: DW_TAG_member, scope: !1813, file: !273, line: 42, baseType: !1822, size: 32, offset: 32)
!1822 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1813, file: !273, line: 42, size: 32, elements: !1823)
!1823 = !{!1824, !1825}
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1822, file: !273, line: 43, baseType: !1819, size: 32)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1822, file: !273, line: 44, baseType: !1819, size: 32)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1809, file: !263, line: 62, baseType: !1827, size: 64)
!1827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !289, line: 49, size: 64, elements: !1828)
!1828 = !{!1829}
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1827, file: !289, line: 50, baseType: !1830, size: 64)
!1830 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1831, size: 64, elements: !294)
!1831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1827, size: 32)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1806, file: !263, line: 68, baseType: !1833, size: 32, offset: 64)
!1833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1834, size: 32)
!1834 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !299, line: 233, baseType: !1835)
!1835 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !299, line: 231, size: 64, elements: !1836)
!1836 = !{!1837}
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1835, file: !299, line: 232, baseType: !1838, size: 64)
!1838 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !273, line: 48, baseType: !1813)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1806, file: !263, line: 71, baseType: !208, size: 8, offset: 96)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1806, file: !263, line: 74, baseType: !208, size: 8, offset: 104)
!1841 = !DIDerivedType(tag: DW_TAG_member, scope: !1806, file: !263, line: 90, baseType: !1842, size: 16, offset: 112)
!1842 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1806, file: !263, line: 90, size: 16, elements: !1843)
!1843 = !{!1844, !1849}
!1844 = !DIDerivedType(tag: DW_TAG_member, scope: !1842, file: !263, line: 91, baseType: !1845, size: 16)
!1845 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1842, file: !263, line: 91, size: 16, elements: !1846)
!1846 = !{!1847, !1848}
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1845, file: !263, line: 96, baseType: !313, size: 8)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1845, file: !263, line: 97, baseType: !208, size: 8, offset: 8)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1842, file: !263, line: 100, baseType: !151, size: 16)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1806, file: !263, line: 107, baseType: !137, size: 32, offset: 128)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1806, file: !263, line: 127, baseType: !102, size: 32, offset: 160)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1806, file: !263, line: 131, baseType: !1853, size: 192, offset: 192)
!1853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !299, line: 244, size: 192, elements: !1854)
!1854 = !{!1855, !1856, !1862}
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1853, file: !299, line: 245, baseType: !1812, size: 64)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1853, file: !299, line: 246, baseType: !1857, size: 32, offset: 64)
!1857 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !299, line: 242, baseType: !1858)
!1858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1859, size: 32)
!1859 = !DISubroutineType(types: !1860)
!1860 = !{null, !1861}
!1861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1853, size: 32)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1853, file: !299, line: 249, baseType: !330, size: 64, offset: 128)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1803, file: !263, line: 250, baseType: !1864, size: 288, offset: 384)
!1864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !334, line: 25, size: 288, elements: !1865)
!1865 = !{!1866, !1867, !1868, !1869, !1870, !1871, !1872, !1873, !1874}
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1864, file: !334, line: 26, baseType: !137, size: 32)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1864, file: !334, line: 27, baseType: !137, size: 32, offset: 32)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1864, file: !334, line: 28, baseType: !137, size: 32, offset: 64)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1864, file: !334, line: 29, baseType: !137, size: 32, offset: 96)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1864, file: !334, line: 30, baseType: !137, size: 32, offset: 128)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1864, file: !334, line: 31, baseType: !137, size: 32, offset: 160)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1864, file: !334, line: 32, baseType: !137, size: 32, offset: 192)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1864, file: !334, line: 33, baseType: !137, size: 32, offset: 224)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1864, file: !334, line: 34, baseType: !137, size: 32, offset: 256)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1803, file: !263, line: 253, baseType: !102, size: 32, offset: 672)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1803, file: !263, line: 256, baseType: !1834, size: 64, offset: 704)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1803, file: !263, line: 294, baseType: !103, size: 32, offset: 768)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1803, file: !263, line: 300, baseType: !1879, size: 96, offset: 800)
!1879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !263, line: 149, size: 96, elements: !1880)
!1880 = !{!1881, !1882, !1883}
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1879, file: !263, line: 153, baseType: !22, size: 32)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1879, file: !263, line: 162, baseType: !120, size: 32, offset: 32)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !1879, file: !263, line: 168, baseType: !120, size: 32, offset: 64)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1803, file: !263, line: 325, baseType: !1885, size: 32, offset: 896)
!1885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1886, size: 32)
!1886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !357, line: 5073, size: 160, elements: !1887)
!1887 = !{!1888, !1894, !1895}
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1886, file: !357, line: 5074, baseType: !1889, size: 96)
!1889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !1890)
!1890 = !{!1891, !1892, !1893}
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1889, file: !113, line: 57, baseType: !116, size: 32)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !1889, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !1889, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1886, file: !357, line: 5075, baseType: !1834, size: 64, offset: 96)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1886, file: !357, line: 5076, baseType: !1896, offset: 160)
!1896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !368, line: 43, elements: !162)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1803, file: !263, line: 343, baseType: !1898, size: 64, offset: 928)
!1898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !334, line: 60, size: 64, elements: !1899)
!1899 = !{!1900, !1901}
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !1898, file: !334, line: 63, baseType: !137, size: 32)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !1898, file: !334, line: 66, baseType: !137, size: 32, offset: 32)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !1797, file: !299, line: 111, baseType: !1802, size: 32, offset: 96)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !1797, file: !299, line: 124, baseType: !103, size: 32, offset: 128)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1797, file: !299, line: 127, baseType: !208, size: 8, offset: 160)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1797, file: !299, line: 153, baseType: !1906, offset: 168)
!1906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !1907, line: 33, elements: !162)
!1907 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !1793, file: !299, line: 170, baseType: !1909, size: 96, offset: 192)
!1909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !299, line: 83, size: 96, elements: !1910)
!1910 = !{!1911, !1912}
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1909, file: !299, line: 86, baseType: !1802, size: 32)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !1909, file: !299, line: 90, baseType: !1838, size: 64, offset: 32)
!1913 = !DIGlobalVariableExpression(var: !1914, expr: !DIExpression())
!1914 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1705, file: !1709, line: 43, type: !1915, isLocal: false, isDefinition: true, align: 512)
!1915 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1916, size: 8704, elements: !1920)
!1916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !1917, line: 47, size: 8, elements: !1918)
!1917 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1918 = !{!1919}
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1916, file: !1917, line: 48, baseType: !109, size: 8)
!1920 = !{!1921}
!1921 = !DISubrange(count: 1088)
!1922 = !DIGlobalVariableExpression(var: !1923, expr: !DIExpression())
!1923 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1705, file: !1709, line: 44, type: !1803, isLocal: false, isDefinition: true)
!1924 = !DIGlobalVariableExpression(var: !1925, expr: !DIExpression())
!1925 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1705, file: !1709, line: 48, type: !1926, isLocal: false, isDefinition: true)
!1926 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1803, size: 1024, elements: !391)
!1927 = !DIGlobalVariableExpression(var: !1928, expr: !DIExpression())
!1928 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1705, file: !1709, line: 217, type: !211, isLocal: false, isDefinition: true)
!1929 = !DIGlobalVariableExpression(var: !1930, expr: !DIExpression())
!1930 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1705, file: !1709, line: 50, type: !1931, isLocal: true, isDefinition: true, align: 512)
!1931 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1916, size: 3072, elements: !1932)
!1932 = !{!392, !1933}
!1933 = !DISubrange(count: 384)
!1934 = !DIGlobalVariableExpression(var: !1935, expr: !DIExpression())
!1935 = distinct !DIGlobalVariable(name: "levels", scope: !1936, file: !1709, line: 232, type: !1956, isLocal: true, isDefinition: true)
!1936 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1709, file: !1709, line: 230, type: !1937, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1705, retainedNodes: !1939)
!1937 = !DISubroutineType(types: !1938)
!1938 = !{null, !1708}
!1939 = !{!1940, !1941, !1951, !1955}
!1940 = !DILocalVariable(name: "level", arg: 1, scope: !1936, file: !1709, line: 230, type: !1708)
!1941 = !DILocalVariable(name: "entry", scope: !1936, file: !1709, line: 244, type: !1942)
!1942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1943, size: 32)
!1943 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1944)
!1944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !187, line: 51, size: 64, elements: !1945)
!1945 = !{!1946, !1950}
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1944, file: !187, line: 60, baseType: !1947, size: 32)
!1947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1948, size: 32)
!1948 = !DISubroutineType(types: !1949)
!1949 = !{!103, !1727}
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1944, file: !187, line: 65, baseType: !1727, size: 32, offset: 32)
!1951 = !DILocalVariable(name: "dev", scope: !1952, file: !1709, line: 247, type: !1727)
!1952 = distinct !DILexicalBlock(scope: !1953, file: !1709, line: 246, column: 64)
!1953 = distinct !DILexicalBlock(scope: !1954, file: !1709, line: 246, column: 2)
!1954 = distinct !DILexicalBlock(scope: !1936, file: !1709, line: 246, column: 2)
!1955 = !DILocalVariable(name: "rc", scope: !1952, file: !1709, line: 248, type: !103)
!1956 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1942, size: 192, elements: !1083)
!1957 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1916, size: 16896, elements: !1958)
!1958 = !{!392, !1959}
!1959 = !DISubrange(count: 2112)
!1960 = !DIGlobalVariableExpression(var: !1961, expr: !DIExpression())
!1961 = distinct !DIGlobalVariable(name: "states_str", scope: !1962, file: !1963, line: 276, type: !2084, isLocal: true, isDefinition: true)
!1962 = distinct !DISubprogram(name: "k_thread_state_str", scope: !1963, file: !1963, line: 271, type: !1964, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2067, retainedNodes: !2075)
!1963 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1964 = !DISubroutineType(types: !1965)
!1965 = !{!199, !1966, !1005, !120}
!1966 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !263, line: 347, baseType: !1967)
!1967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1968, size: 32)
!1968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !263, line: 245, size: 1024, elements: !1969)
!1969 = !{!1970, !2028, !2040, !2041, !2042, !2043, !2049, !2062}
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1968, file: !263, line: 247, baseType: !1971, size: 384)
!1971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !263, line: 57, size: 384, elements: !1972)
!1972 = !{!1973, !1997, !2004, !2005, !2006, !2015, !2016, !2017}
!1973 = !DIDerivedType(tag: DW_TAG_member, scope: !1971, file: !263, line: 60, baseType: !1974, size: 64)
!1974 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1971, file: !263, line: 60, size: 64, elements: !1975)
!1975 = !{!1976, !1991}
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1974, file: !263, line: 61, baseType: !1977, size: 64)
!1977 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !273, line: 49, baseType: !1978)
!1978 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !273, line: 37, size: 64, elements: !1979)
!1979 = !{!1980, !1986}
!1980 = !DIDerivedType(tag: DW_TAG_member, scope: !1978, file: !273, line: 38, baseType: !1981, size: 32)
!1981 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1978, file: !273, line: 38, size: 32, elements: !1982)
!1982 = !{!1983, !1985}
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1981, file: !273, line: 39, baseType: !1984, size: 32)
!1984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1978, size: 32)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1981, file: !273, line: 40, baseType: !1984, size: 32)
!1986 = !DIDerivedType(tag: DW_TAG_member, scope: !1978, file: !273, line: 42, baseType: !1987, size: 32, offset: 32)
!1987 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1978, file: !273, line: 42, size: 32, elements: !1988)
!1988 = !{!1989, !1990}
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1987, file: !273, line: 43, baseType: !1984, size: 32)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1987, file: !273, line: 44, baseType: !1984, size: 32)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1974, file: !263, line: 62, baseType: !1992, size: 64)
!1992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !289, line: 49, size: 64, elements: !1993)
!1993 = !{!1994}
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1992, file: !289, line: 50, baseType: !1995, size: 64)
!1995 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1996, size: 64, elements: !294)
!1996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1992, size: 32)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1971, file: !263, line: 68, baseType: !1998, size: 32, offset: 64)
!1998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1999, size: 32)
!1999 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !299, line: 233, baseType: !2000)
!2000 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !299, line: 231, size: 64, elements: !2001)
!2001 = !{!2002}
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2000, file: !299, line: 232, baseType: !2003, size: 64)
!2003 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !273, line: 48, baseType: !1978)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1971, file: !263, line: 71, baseType: !208, size: 8, offset: 96)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1971, file: !263, line: 74, baseType: !208, size: 8, offset: 104)
!2006 = !DIDerivedType(tag: DW_TAG_member, scope: !1971, file: !263, line: 90, baseType: !2007, size: 16, offset: 112)
!2007 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1971, file: !263, line: 90, size: 16, elements: !2008)
!2008 = !{!2009, !2014}
!2009 = !DIDerivedType(tag: DW_TAG_member, scope: !2007, file: !263, line: 91, baseType: !2010, size: 16)
!2010 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2007, file: !263, line: 91, size: 16, elements: !2011)
!2011 = !{!2012, !2013}
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2010, file: !263, line: 96, baseType: !313, size: 8)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2010, file: !263, line: 97, baseType: !208, size: 8, offset: 8)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2007, file: !263, line: 100, baseType: !151, size: 16)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1971, file: !263, line: 107, baseType: !137, size: 32, offset: 128)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1971, file: !263, line: 127, baseType: !102, size: 32, offset: 160)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1971, file: !263, line: 131, baseType: !2018, size: 192, offset: 192)
!2018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !299, line: 244, size: 192, elements: !2019)
!2019 = !{!2020, !2021, !2027}
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2018, file: !299, line: 245, baseType: !1977, size: 64)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2018, file: !299, line: 246, baseType: !2022, size: 32, offset: 64)
!2022 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !299, line: 242, baseType: !2023)
!2023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2024, size: 32)
!2024 = !DISubroutineType(types: !2025)
!2025 = !{null, !2026}
!2026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2018, size: 32)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2018, file: !299, line: 249, baseType: !330, size: 64, offset: 128)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1968, file: !263, line: 250, baseType: !2029, size: 288, offset: 384)
!2029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !334, line: 25, size: 288, elements: !2030)
!2030 = !{!2031, !2032, !2033, !2034, !2035, !2036, !2037, !2038, !2039}
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2029, file: !334, line: 26, baseType: !137, size: 32)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2029, file: !334, line: 27, baseType: !137, size: 32, offset: 32)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2029, file: !334, line: 28, baseType: !137, size: 32, offset: 64)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2029, file: !334, line: 29, baseType: !137, size: 32, offset: 96)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2029, file: !334, line: 30, baseType: !137, size: 32, offset: 128)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2029, file: !334, line: 31, baseType: !137, size: 32, offset: 160)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2029, file: !334, line: 32, baseType: !137, size: 32, offset: 192)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2029, file: !334, line: 33, baseType: !137, size: 32, offset: 224)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2029, file: !334, line: 34, baseType: !137, size: 32, offset: 256)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1968, file: !263, line: 253, baseType: !102, size: 32, offset: 672)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1968, file: !263, line: 256, baseType: !1999, size: 64, offset: 704)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1968, file: !263, line: 294, baseType: !103, size: 32, offset: 768)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1968, file: !263, line: 300, baseType: !2044, size: 96, offset: 800)
!2044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !263, line: 149, size: 96, elements: !2045)
!2045 = !{!2046, !2047, !2048}
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2044, file: !263, line: 153, baseType: !22, size: 32)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2044, file: !263, line: 162, baseType: !120, size: 32, offset: 32)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2044, file: !263, line: 168, baseType: !120, size: 32, offset: 64)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1968, file: !263, line: 325, baseType: !2050, size: 32, offset: 896)
!2050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2051, size: 32)
!2051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !357, line: 5073, size: 160, elements: !2052)
!2052 = !{!2053, !2059, !2060}
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2051, file: !357, line: 5074, baseType: !2054, size: 96)
!2054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !2055)
!2055 = !{!2056, !2057, !2058}
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2054, file: !113, line: 57, baseType: !116, size: 32)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2054, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2054, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2051, file: !357, line: 5075, baseType: !1999, size: 64, offset: 96)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2051, file: !357, line: 5076, baseType: !2061, offset: 160)
!2061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !368, line: 43, elements: !162)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1968, file: !263, line: 343, baseType: !2063, size: 64, offset: 928)
!2063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !334, line: 60, size: 64, elements: !2064)
!2064 = !{!2065, !2066}
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2063, file: !334, line: 63, baseType: !137, size: 32)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2063, file: !334, line: 66, baseType: !137, size: 32, offset: 32)
!2067 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2068, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2069, globals: !2071, splitDebugInlining: false, nameTableKind: None)
!2068 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sys_heap")
!2069 = !{!102, !199, !1445, !208, !103, !2070, !24, !120, !1005, !22, !137, !163}
!2070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1977, size: 32)
!2071 = !{!1960, !2072}
!2072 = !DIGlobalVariableExpression(var: !2073, expr: !DIExpression())
!2073 = distinct !DIGlobalVariable(name: "states_sz", scope: !1962, file: !1963, line: 279, type: !2074, isLocal: true, isDefinition: true)
!2074 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1639, size: 256, elements: !159)
!2075 = !{!2076, !2077, !2078, !2079, !2080, !2081, !2082}
!2076 = !DILocalVariable(name: "thread_id", arg: 1, scope: !1962, file: !1963, line: 271, type: !1966)
!2077 = !DILocalVariable(name: "buf", arg: 2, scope: !1962, file: !1963, line: 271, type: !1005)
!2078 = !DILocalVariable(name: "buf_size", arg: 3, scope: !1962, file: !1963, line: 271, type: !120)
!2079 = !DILocalVariable(name: "off", scope: !1962, file: !1963, line: 273, type: !120)
!2080 = !DILocalVariable(name: "bit", scope: !1962, file: !1963, line: 274, type: !208)
!2081 = !DILocalVariable(name: "thread_state", scope: !1962, file: !1963, line: 275, type: !208)
!2082 = !DILocalVariable(name: "index", scope: !2083, file: !1963, line: 293, type: !208)
!2083 = distinct !DILexicalBlock(scope: !1962, file: !1963, line: 293, column: 2)
!2084 = !DICompositeType(tag: DW_TAG_array_type, baseType: !199, size: 256, elements: !159)
!2085 = !DIGlobalVariableExpression(var: !2086, expr: !DIExpression())
!2086 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2087, file: !2195, line: 56, type: !2184, isLocal: false, isDefinition: true)
!2087 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2088, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2089, globals: !2192, splitDebugInlining: false, nameTableKind: None)
!2088 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sys_heap")
!2089 = !{!2090, !1005, !102, !2190, !1742, !1445, !611, !103, !137, !163, !2191}
!2090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2091, size: 32)
!2091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !263, line: 245, size: 1024, elements: !2092)
!2092 = !{!2093, !2151, !2163, !2164, !2165, !2166, !2172, !2185}
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2091, file: !263, line: 247, baseType: !2094, size: 384)
!2094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !263, line: 57, size: 384, elements: !2095)
!2095 = !{!2096, !2120, !2127, !2128, !2129, !2138, !2139, !2140}
!2096 = !DIDerivedType(tag: DW_TAG_member, scope: !2094, file: !263, line: 60, baseType: !2097, size: 64)
!2097 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2094, file: !263, line: 60, size: 64, elements: !2098)
!2098 = !{!2099, !2114}
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2097, file: !263, line: 61, baseType: !2100, size: 64)
!2100 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !273, line: 49, baseType: !2101)
!2101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !273, line: 37, size: 64, elements: !2102)
!2102 = !{!2103, !2109}
!2103 = !DIDerivedType(tag: DW_TAG_member, scope: !2101, file: !273, line: 38, baseType: !2104, size: 32)
!2104 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2101, file: !273, line: 38, size: 32, elements: !2105)
!2105 = !{!2106, !2108}
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2104, file: !273, line: 39, baseType: !2107, size: 32)
!2107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2101, size: 32)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2104, file: !273, line: 40, baseType: !2107, size: 32)
!2109 = !DIDerivedType(tag: DW_TAG_member, scope: !2101, file: !273, line: 42, baseType: !2110, size: 32, offset: 32)
!2110 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2101, file: !273, line: 42, size: 32, elements: !2111)
!2111 = !{!2112, !2113}
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2110, file: !273, line: 43, baseType: !2107, size: 32)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2110, file: !273, line: 44, baseType: !2107, size: 32)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2097, file: !263, line: 62, baseType: !2115, size: 64)
!2115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !289, line: 49, size: 64, elements: !2116)
!2116 = !{!2117}
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2115, file: !289, line: 50, baseType: !2118, size: 64)
!2118 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2119, size: 64, elements: !294)
!2119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2115, size: 32)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2094, file: !263, line: 68, baseType: !2121, size: 32, offset: 64)
!2121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2122, size: 32)
!2122 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !299, line: 233, baseType: !2123)
!2123 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !299, line: 231, size: 64, elements: !2124)
!2124 = !{!2125}
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2123, file: !299, line: 232, baseType: !2126, size: 64)
!2126 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !273, line: 48, baseType: !2101)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2094, file: !263, line: 71, baseType: !208, size: 8, offset: 96)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2094, file: !263, line: 74, baseType: !208, size: 8, offset: 104)
!2129 = !DIDerivedType(tag: DW_TAG_member, scope: !2094, file: !263, line: 90, baseType: !2130, size: 16, offset: 112)
!2130 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2094, file: !263, line: 90, size: 16, elements: !2131)
!2131 = !{!2132, !2137}
!2132 = !DIDerivedType(tag: DW_TAG_member, scope: !2130, file: !263, line: 91, baseType: !2133, size: 16)
!2133 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2130, file: !263, line: 91, size: 16, elements: !2134)
!2134 = !{!2135, !2136}
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2133, file: !263, line: 96, baseType: !313, size: 8)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2133, file: !263, line: 97, baseType: !208, size: 8, offset: 8)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2130, file: !263, line: 100, baseType: !151, size: 16)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2094, file: !263, line: 107, baseType: !137, size: 32, offset: 128)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2094, file: !263, line: 127, baseType: !102, size: 32, offset: 160)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2094, file: !263, line: 131, baseType: !2141, size: 192, offset: 192)
!2141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !299, line: 244, size: 192, elements: !2142)
!2142 = !{!2143, !2144, !2150}
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2141, file: !299, line: 245, baseType: !2100, size: 64)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2141, file: !299, line: 246, baseType: !2145, size: 32, offset: 64)
!2145 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !299, line: 242, baseType: !2146)
!2146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2147, size: 32)
!2147 = !DISubroutineType(types: !2148)
!2148 = !{null, !2149}
!2149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2141, size: 32)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2141, file: !299, line: 249, baseType: !330, size: 64, offset: 128)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2091, file: !263, line: 250, baseType: !2152, size: 288, offset: 384)
!2152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !334, line: 25, size: 288, elements: !2153)
!2153 = !{!2154, !2155, !2156, !2157, !2158, !2159, !2160, !2161, !2162}
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2152, file: !334, line: 26, baseType: !137, size: 32)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2152, file: !334, line: 27, baseType: !137, size: 32, offset: 32)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2152, file: !334, line: 28, baseType: !137, size: 32, offset: 64)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2152, file: !334, line: 29, baseType: !137, size: 32, offset: 96)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2152, file: !334, line: 30, baseType: !137, size: 32, offset: 128)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2152, file: !334, line: 31, baseType: !137, size: 32, offset: 160)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2152, file: !334, line: 32, baseType: !137, size: 32, offset: 192)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2152, file: !334, line: 33, baseType: !137, size: 32, offset: 224)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2152, file: !334, line: 34, baseType: !137, size: 32, offset: 256)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2091, file: !263, line: 253, baseType: !102, size: 32, offset: 672)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2091, file: !263, line: 256, baseType: !2122, size: 64, offset: 704)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2091, file: !263, line: 294, baseType: !103, size: 32, offset: 768)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2091, file: !263, line: 300, baseType: !2167, size: 96, offset: 800)
!2167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !263, line: 149, size: 96, elements: !2168)
!2168 = !{!2169, !2170, !2171}
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2167, file: !263, line: 153, baseType: !22, size: 32)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2167, file: !263, line: 162, baseType: !120, size: 32, offset: 32)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2167, file: !263, line: 168, baseType: !120, size: 32, offset: 64)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2091, file: !263, line: 325, baseType: !2173, size: 32, offset: 896)
!2173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2174, size: 32)
!2174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !357, line: 5073, size: 160, elements: !2175)
!2175 = !{!2176, !2182, !2183}
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2174, file: !357, line: 5074, baseType: !2177, size: 96)
!2177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !2178)
!2178 = !{!2179, !2180, !2181}
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2177, file: !113, line: 57, baseType: !116, size: 32)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2177, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2177, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2174, file: !357, line: 5075, baseType: !2122, size: 64, offset: 96)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2174, file: !357, line: 5076, baseType: !2184, offset: 160)
!2184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !368, line: 43, elements: !162)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2091, file: !263, line: 343, baseType: !2186, size: 64, offset: 928)
!2186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !334, line: 60, size: 64, elements: !2187)
!2187 = !{!2188, !2189}
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2186, file: !334, line: 63, baseType: !137, size: 32)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2186, file: !334, line: 66, baseType: !137, size: 32, offset: 32)
!2190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2119, size: 32)
!2191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2100, size: 32)
!2192 = !{!2085, !2193, !2196, !2198}
!2193 = !DIGlobalVariableExpression(var: !2194, expr: !DIExpression())
!2194 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2087, file: !2195, line: 404, type: !103, isLocal: true, isDefinition: true)
!2195 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2196 = !DIGlobalVariableExpression(var: !2197, expr: !DIExpression())
!2197 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2087, file: !2195, line: 405, type: !103, isLocal: true, isDefinition: true)
!2198 = !DIGlobalVariableExpression(var: !2199, expr: !DIExpression())
!2199 = distinct !DIGlobalVariable(name: "pending_current", scope: !2087, file: !2195, line: 425, type: !2090, isLocal: true, isDefinition: true)
!2200 = !DIGlobalVariableExpression(var: !2201, expr: !DIExpression())
!2201 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2202, file: !2232, line: 15, type: !163, isLocal: true, isDefinition: true)
!2202 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2203, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2204, globals: !2229, splitDebugInlining: false, nameTableKind: None)
!2203 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sys_heap")
!2204 = !{!1445, !102, !611, !137, !163, !103, !2205, !1005, !330}
!2205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2206, size: 32)
!2206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !299, line: 244, size: 192, elements: !2207)
!2207 = !{!2208, !2223, !2228}
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2206, file: !299, line: 245, baseType: !2209, size: 64)
!2209 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !273, line: 49, baseType: !2210)
!2210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !273, line: 37, size: 64, elements: !2211)
!2211 = !{!2212, !2218}
!2212 = !DIDerivedType(tag: DW_TAG_member, scope: !2210, file: !273, line: 38, baseType: !2213, size: 32)
!2213 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2210, file: !273, line: 38, size: 32, elements: !2214)
!2214 = !{!2215, !2217}
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2213, file: !273, line: 39, baseType: !2216, size: 32)
!2216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2210, size: 32)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2213, file: !273, line: 40, baseType: !2216, size: 32)
!2218 = !DIDerivedType(tag: DW_TAG_member, scope: !2210, file: !273, line: 42, baseType: !2219, size: 32, offset: 32)
!2219 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2210, file: !273, line: 42, size: 32, elements: !2220)
!2220 = !{!2221, !2222}
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2219, file: !273, line: 43, baseType: !2216, size: 32)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2219, file: !273, line: 44, baseType: !2216, size: 32)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2206, file: !299, line: 246, baseType: !2224, size: 32, offset: 64)
!2224 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !299, line: 242, baseType: !2225)
!2225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2226, size: 32)
!2226 = !DISubroutineType(types: !2227)
!2227 = !{null, !2205}
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2206, file: !299, line: 249, baseType: !330, size: 64, offset: 128)
!2229 = !{!2200, !2230, !2234, !2236}
!2230 = !DIGlobalVariableExpression(var: !2231, expr: !DIExpression())
!2231 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2202, file: !2232, line: 19, type: !2233, isLocal: true, isDefinition: true)
!2232 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !368, line: 43, elements: !162)
!2234 = !DIGlobalVariableExpression(var: !2235, expr: !DIExpression())
!2235 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2202, file: !2232, line: 25, type: !103, isLocal: true, isDefinition: true)
!2236 = !DIGlobalVariableExpression(var: !2237, expr: !DIExpression())
!2237 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2202, file: !2232, line: 17, type: !2238, isLocal: true, isDefinition: true)
!2238 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !273, line: 48, baseType: !2210)
!2239 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2240, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2240 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sys_heap")
!2241 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2242, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2242 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sys_heap")
!2243 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2244, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !2245, splitDebugInlining: false, nameTableKind: None)
!2244 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sys_heap")
!2245 = !{!102, !120, !1742, !24, !2246, !22, !2251, !103, !149, !150}
!2246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2247, size: 32)
!2247 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !142, line: 58, baseType: !2248)
!2248 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !142, line: 58, size: 64, elements: !2249)
!2249 = !{!2250}
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !2248, file: !142, line: 58, baseType: !158, size: 64)
!2251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2252, size: 32)
!2252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !142, line: 68, size: 224, elements: !2253)
!2253 = !{!2254, !2257, !2258, !2259, !2260, !2261, !2262}
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !2252, file: !142, line: 69, baseType: !2255, size: 64)
!2255 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2256, size: 64, elements: !294)
!2256 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunkid_t", file: !142, line: 61, baseType: !137)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !2252, file: !142, line: 70, baseType: !2256, size: 32, offset: 64)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !2252, file: !142, line: 71, baseType: !137, size: 32, offset: 96)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "free_bytes", scope: !2252, file: !142, line: 73, baseType: !120, size: 32, offset: 128)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "allocated_bytes", scope: !2252, file: !142, line: 74, baseType: !120, size: 32, offset: 160)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "max_allocated_bytes", scope: !2252, file: !142, line: 75, baseType: !120, size: 32, offset: 192)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !2252, file: !142, line: 77, baseType: !2263, offset: 224)
!2263 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2264, elements: !2267)
!2264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !142, line: 64, size: 32, elements: !2265)
!2265 = !{!2266}
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2264, file: !142, line: 65, baseType: !2256, size: 32)
!2267 = !{!2268}
!2268 = !DISubrange(count: 0)
!2269 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2270, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2271, retainedTypes: !2291, splitDebugInlining: false, nameTableKind: None)
!2270 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sys_heap")
!2271 = !{!2272, !2280}
!2272 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2273, line: 69, baseType: !32, size: 32, elements: !2274)
!2273 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2274 = !{!2275, !2276, !2277, !2278, !2279}
!2275 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2276 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2277 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2278 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2279 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2280 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2273, line: 56, baseType: !32, size: 32, elements: !2281)
!2281 = !{!2282, !2283, !2284, !2285, !2286, !2287, !2288, !2289, !2290}
!2282 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2283 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2284 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2285 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2286 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2287 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2288 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2289 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2290 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2291 = !{!103, !2272, !2280, !2292, !314, !218, !2294, !2295, !209, !152, !199, !120, !102, !22, !32, !2297, !2298, !2299, !2300, !2301, !331, !2302, !2293, !2303, !2304, !2305, !2306}
!2292 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2273, line: 31, baseType: !2293)
!2293 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !331)
!2294 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !121, line: 329, baseType: !32)
!2295 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2273, line: 32, baseType: !2296)
!2296 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !164)
!2297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!2298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !314, size: 32)
!2299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !218, size: 32)
!2300 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!2301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2300, size: 32)
!2302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !331, size: 32)
!2303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2293, size: 32)
!2304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 32)
!2305 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !121, line: 145, baseType: !103)
!2306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2305, size: 32)
!2307 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2308, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2308 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sys_heap/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sys_heap")
!2309 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2310, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2311, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2310 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sys_heap")
!2311 = !{!2312, !30}
!2312 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2313, line: 27, baseType: !32, size: 32, elements: !2314)
!2313 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2314 = !{!2315, !2316, !2317, !2318, !2319}
!2315 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2316 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2317 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2318 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2319 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2320 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2321, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2322, retainedTypes: !2323, splitDebugInlining: false, nameTableKind: None)
!2321 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sys_heap")
!2322 = !{!471, !2312, !30}
!2323 = !{!637, !2324, !102, !103, !611, !137, !208, !2341}
!2324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2325, size: 32)
!2325 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !402, line: 426, baseType: !2326)
!2326 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 411, size: 28704, elements: !2327)
!2327 = !{!2328, !2329, !2330, !2331, !2332, !2333, !2334, !2335, !2336, !2337, !2338, !2339, !2340}
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2326, file: !402, line: 413, baseType: !1460, size: 256)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2326, file: !402, line: 414, baseType: !1462, size: 768, offset: 256)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2326, file: !402, line: 415, baseType: !1460, size: 256, offset: 1024)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2326, file: !402, line: 416, baseType: !1462, size: 768, offset: 1280)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2326, file: !402, line: 417, baseType: !1460, size: 256, offset: 2048)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2326, file: !402, line: 418, baseType: !1462, size: 768, offset: 2304)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2326, file: !402, line: 419, baseType: !1460, size: 256, offset: 3072)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2326, file: !402, line: 420, baseType: !1462, size: 768, offset: 3328)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2326, file: !402, line: 421, baseType: !1460, size: 256, offset: 4096)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2326, file: !402, line: 422, baseType: !1473, size: 1792, offset: 4352)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2326, file: !402, line: 423, baseType: !1477, size: 1920, offset: 6144)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2326, file: !402, line: 424, baseType: !1482, size: 20608, offset: 8064)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2326, file: !402, line: 425, baseType: !176, size: 32, offset: 28672)
!2341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2342, size: 32)
!2342 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !402, line: 468, baseType: !2343)
!2343 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 445, size: 1120, elements: !2344)
!2344 = !{!2345, !2346, !2347, !2348, !2349, !2350, !2351, !2352, !2353, !2354, !2355, !2356, !2357, !2358, !2359, !2360, !2361, !2362, !2363, !2364, !2365}
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2343, file: !402, line: 447, baseType: !406, size: 32)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2343, file: !402, line: 448, baseType: !176, size: 32, offset: 32)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2343, file: !402, line: 449, baseType: !176, size: 32, offset: 64)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2343, file: !402, line: 450, baseType: !176, size: 32, offset: 96)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2343, file: !402, line: 451, baseType: !176, size: 32, offset: 128)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2343, file: !402, line: 452, baseType: !176, size: 32, offset: 160)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2343, file: !402, line: 453, baseType: !1497, size: 96, offset: 192)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2343, file: !402, line: 454, baseType: !176, size: 32, offset: 288)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2343, file: !402, line: 455, baseType: !176, size: 32, offset: 320)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2343, file: !402, line: 456, baseType: !176, size: 32, offset: 352)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2343, file: !402, line: 457, baseType: !176, size: 32, offset: 384)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2343, file: !402, line: 458, baseType: !176, size: 32, offset: 416)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2343, file: !402, line: 459, baseType: !176, size: 32, offset: 448)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2343, file: !402, line: 460, baseType: !176, size: 32, offset: 480)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2343, file: !402, line: 461, baseType: !1508, size: 64, offset: 512)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2343, file: !402, line: 462, baseType: !406, size: 32, offset: 576)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2343, file: !402, line: 463, baseType: !406, size: 32, offset: 608)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2343, file: !402, line: 464, baseType: !1512, size: 128, offset: 640)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2343, file: !402, line: 465, baseType: !1514, size: 160, offset: 768)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2343, file: !402, line: 466, baseType: !1516, size: 160, offset: 928)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2343, file: !402, line: 467, baseType: !176, size: 32, offset: 1088)
!2366 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2367, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2367 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sys_heap")
!2368 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2369, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2370, splitDebugInlining: false, nameTableKind: None)
!2369 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sys_heap")
!2370 = !{!102, !103, !22, !2371}
!2371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2372, size: 32)
!2372 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !402, line: 468, baseType: !2373)
!2373 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 445, size: 1120, elements: !2374)
!2374 = !{!2375, !2376, !2377, !2378, !2379, !2380, !2381, !2382, !2383, !2384, !2385, !2386, !2387, !2388, !2389, !2390, !2391, !2392, !2393, !2394, !2395}
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2373, file: !402, line: 447, baseType: !406, size: 32)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2373, file: !402, line: 448, baseType: !176, size: 32, offset: 32)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2373, file: !402, line: 449, baseType: !176, size: 32, offset: 64)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2373, file: !402, line: 450, baseType: !176, size: 32, offset: 96)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2373, file: !402, line: 451, baseType: !176, size: 32, offset: 128)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2373, file: !402, line: 452, baseType: !176, size: 32, offset: 160)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2373, file: !402, line: 453, baseType: !1497, size: 96, offset: 192)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2373, file: !402, line: 454, baseType: !176, size: 32, offset: 288)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2373, file: !402, line: 455, baseType: !176, size: 32, offset: 320)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2373, file: !402, line: 456, baseType: !176, size: 32, offset: 352)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2373, file: !402, line: 457, baseType: !176, size: 32, offset: 384)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2373, file: !402, line: 458, baseType: !176, size: 32, offset: 416)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2373, file: !402, line: 459, baseType: !176, size: 32, offset: 448)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2373, file: !402, line: 460, baseType: !176, size: 32, offset: 480)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2373, file: !402, line: 461, baseType: !1508, size: 64, offset: 512)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2373, file: !402, line: 462, baseType: !406, size: 32, offset: 576)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2373, file: !402, line: 463, baseType: !406, size: 32, offset: 608)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2373, file: !402, line: 464, baseType: !1512, size: 128, offset: 640)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2373, file: !402, line: 465, baseType: !1514, size: 160, offset: 768)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2373, file: !402, line: 466, baseType: !1516, size: 160, offset: 928)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2373, file: !402, line: 467, baseType: !176, size: 32, offset: 1088)
!2396 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2397, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2398, splitDebugInlining: false, nameTableKind: None)
!2397 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sys_heap")
!2398 = !{!2399, !102, !103}
!2399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2400, size: 32)
!2400 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !402, line: 468, baseType: !2401)
!2401 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 445, size: 1120, elements: !2402)
!2402 = !{!2403, !2404, !2405, !2406, !2407, !2408, !2409, !2410, !2411, !2412, !2413, !2414, !2415, !2416, !2417, !2418, !2419, !2420, !2421, !2422, !2423}
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2401, file: !402, line: 447, baseType: !406, size: 32)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2401, file: !402, line: 448, baseType: !176, size: 32, offset: 32)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2401, file: !402, line: 449, baseType: !176, size: 32, offset: 64)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2401, file: !402, line: 450, baseType: !176, size: 32, offset: 96)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2401, file: !402, line: 451, baseType: !176, size: 32, offset: 128)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2401, file: !402, line: 452, baseType: !176, size: 32, offset: 160)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2401, file: !402, line: 453, baseType: !1497, size: 96, offset: 192)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2401, file: !402, line: 454, baseType: !176, size: 32, offset: 288)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2401, file: !402, line: 455, baseType: !176, size: 32, offset: 320)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2401, file: !402, line: 456, baseType: !176, size: 32, offset: 352)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2401, file: !402, line: 457, baseType: !176, size: 32, offset: 384)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2401, file: !402, line: 458, baseType: !176, size: 32, offset: 416)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2401, file: !402, line: 459, baseType: !176, size: 32, offset: 448)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2401, file: !402, line: 460, baseType: !176, size: 32, offset: 480)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2401, file: !402, line: 461, baseType: !1508, size: 64, offset: 512)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2401, file: !402, line: 462, baseType: !406, size: 32, offset: 576)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2401, file: !402, line: 463, baseType: !406, size: 32, offset: 608)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2401, file: !402, line: 464, baseType: !1512, size: 128, offset: 640)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2401, file: !402, line: 465, baseType: !1514, size: 160, offset: 768)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2401, file: !402, line: 466, baseType: !1516, size: 160, offset: 928)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2401, file: !402, line: 467, baseType: !176, size: 32, offset: 1088)
!2424 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2425, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2426, splitDebugInlining: false, nameTableKind: None)
!2425 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sys_heap")
!2426 = !{!2427, !137, !102, !103}
!2427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2428, size: 32)
!2428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2429, line: 98, size: 256, elements: !2430)
!2429 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2430 = !{!2431, !2436, !2441, !2446, !2451, !2456, !2461, !2466}
!2431 = !DIDerivedType(tag: DW_TAG_member, scope: !2428, file: !2429, line: 99, baseType: !2432, size: 32)
!2432 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2428, file: !2429, line: 99, size: 32, elements: !2433)
!2433 = !{!2434, !2435}
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2432, file: !2429, line: 99, baseType: !137, size: 32)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2432, file: !2429, line: 99, baseType: !137, size: 32)
!2436 = !DIDerivedType(tag: DW_TAG_member, scope: !2428, file: !2429, line: 100, baseType: !2437, size: 32, offset: 32)
!2437 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2428, file: !2429, line: 100, size: 32, elements: !2438)
!2438 = !{!2439, !2440}
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2437, file: !2429, line: 100, baseType: !137, size: 32)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2437, file: !2429, line: 100, baseType: !137, size: 32)
!2441 = !DIDerivedType(tag: DW_TAG_member, scope: !2428, file: !2429, line: 101, baseType: !2442, size: 32, offset: 64)
!2442 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2428, file: !2429, line: 101, size: 32, elements: !2443)
!2443 = !{!2444, !2445}
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2442, file: !2429, line: 101, baseType: !137, size: 32)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2442, file: !2429, line: 101, baseType: !137, size: 32)
!2446 = !DIDerivedType(tag: DW_TAG_member, scope: !2428, file: !2429, line: 102, baseType: !2447, size: 32, offset: 96)
!2447 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2428, file: !2429, line: 102, size: 32, elements: !2448)
!2448 = !{!2449, !2450}
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2447, file: !2429, line: 102, baseType: !137, size: 32)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2447, file: !2429, line: 102, baseType: !137, size: 32)
!2451 = !DIDerivedType(tag: DW_TAG_member, scope: !2428, file: !2429, line: 103, baseType: !2452, size: 32, offset: 128)
!2452 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2428, file: !2429, line: 103, size: 32, elements: !2453)
!2453 = !{!2454, !2455}
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2452, file: !2429, line: 103, baseType: !137, size: 32)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2452, file: !2429, line: 103, baseType: !137, size: 32)
!2456 = !DIDerivedType(tag: DW_TAG_member, scope: !2428, file: !2429, line: 104, baseType: !2457, size: 32, offset: 160)
!2457 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2428, file: !2429, line: 104, size: 32, elements: !2458)
!2458 = !{!2459, !2460}
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2457, file: !2429, line: 104, baseType: !137, size: 32)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2457, file: !2429, line: 104, baseType: !137, size: 32)
!2461 = !DIDerivedType(tag: DW_TAG_member, scope: !2428, file: !2429, line: 105, baseType: !2462, size: 32, offset: 192)
!2462 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2428, file: !2429, line: 105, size: 32, elements: !2463)
!2463 = !{!2464, !2465}
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2462, file: !2429, line: 105, baseType: !137, size: 32)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2462, file: !2429, line: 105, baseType: !137, size: 32)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2428, file: !2429, line: 106, baseType: !137, size: 32, offset: 224)
!2467 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2468, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2311, retainedTypes: !2469, splitDebugInlining: false, nameTableKind: None)
!2468 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sys_heap")
!2469 = !{!2470, !102, !103, !2495, !150, !137}
!2470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2471, size: 32)
!2471 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !402, line: 468, baseType: !2472)
!2472 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 445, size: 1120, elements: !2473)
!2473 = !{!2474, !2475, !2476, !2477, !2478, !2479, !2480, !2481, !2482, !2483, !2484, !2485, !2486, !2487, !2488, !2489, !2490, !2491, !2492, !2493, !2494}
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2472, file: !402, line: 447, baseType: !406, size: 32)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2472, file: !402, line: 448, baseType: !176, size: 32, offset: 32)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2472, file: !402, line: 449, baseType: !176, size: 32, offset: 64)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2472, file: !402, line: 450, baseType: !176, size: 32, offset: 96)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2472, file: !402, line: 451, baseType: !176, size: 32, offset: 128)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2472, file: !402, line: 452, baseType: !176, size: 32, offset: 160)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2472, file: !402, line: 453, baseType: !1497, size: 96, offset: 192)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2472, file: !402, line: 454, baseType: !176, size: 32, offset: 288)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2472, file: !402, line: 455, baseType: !176, size: 32, offset: 320)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2472, file: !402, line: 456, baseType: !176, size: 32, offset: 352)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2472, file: !402, line: 457, baseType: !176, size: 32, offset: 384)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2472, file: !402, line: 458, baseType: !176, size: 32, offset: 416)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2472, file: !402, line: 459, baseType: !176, size: 32, offset: 448)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2472, file: !402, line: 460, baseType: !176, size: 32, offset: 480)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2472, file: !402, line: 461, baseType: !1508, size: 64, offset: 512)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2472, file: !402, line: 462, baseType: !406, size: 32, offset: 576)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2472, file: !402, line: 463, baseType: !406, size: 32, offset: 608)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2472, file: !402, line: 464, baseType: !1512, size: 128, offset: 640)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2472, file: !402, line: 465, baseType: !1514, size: 160, offset: 768)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2472, file: !402, line: 466, baseType: !1516, size: 160, offset: 928)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2472, file: !402, line: 467, baseType: !176, size: 32, offset: 1088)
!2495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2496, size: 32)
!2496 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2429, line: 141, baseType: !2497)
!2497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2429, line: 97, size: 256, elements: !2498)
!2498 = !{!2499}
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2497, file: !2429, line: 107, baseType: !2500, size: 256)
!2500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2429, line: 98, size: 256, elements: !2501)
!2501 = !{!2502, !2507, !2512, !2517, !2522, !2527, !2532, !2537}
!2502 = !DIDerivedType(tag: DW_TAG_member, scope: !2500, file: !2429, line: 99, baseType: !2503, size: 32)
!2503 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2500, file: !2429, line: 99, size: 32, elements: !2504)
!2504 = !{!2505, !2506}
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2503, file: !2429, line: 99, baseType: !137, size: 32)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2503, file: !2429, line: 99, baseType: !137, size: 32)
!2507 = !DIDerivedType(tag: DW_TAG_member, scope: !2500, file: !2429, line: 100, baseType: !2508, size: 32, offset: 32)
!2508 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2500, file: !2429, line: 100, size: 32, elements: !2509)
!2509 = !{!2510, !2511}
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2508, file: !2429, line: 100, baseType: !137, size: 32)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2508, file: !2429, line: 100, baseType: !137, size: 32)
!2512 = !DIDerivedType(tag: DW_TAG_member, scope: !2500, file: !2429, line: 101, baseType: !2513, size: 32, offset: 64)
!2513 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2500, file: !2429, line: 101, size: 32, elements: !2514)
!2514 = !{!2515, !2516}
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2513, file: !2429, line: 101, baseType: !137, size: 32)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2513, file: !2429, line: 101, baseType: !137, size: 32)
!2517 = !DIDerivedType(tag: DW_TAG_member, scope: !2500, file: !2429, line: 102, baseType: !2518, size: 32, offset: 96)
!2518 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2500, file: !2429, line: 102, size: 32, elements: !2519)
!2519 = !{!2520, !2521}
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2518, file: !2429, line: 102, baseType: !137, size: 32)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2518, file: !2429, line: 102, baseType: !137, size: 32)
!2522 = !DIDerivedType(tag: DW_TAG_member, scope: !2500, file: !2429, line: 103, baseType: !2523, size: 32, offset: 128)
!2523 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2500, file: !2429, line: 103, size: 32, elements: !2524)
!2524 = !{!2525, !2526}
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2523, file: !2429, line: 103, baseType: !137, size: 32)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2523, file: !2429, line: 103, baseType: !137, size: 32)
!2527 = !DIDerivedType(tag: DW_TAG_member, scope: !2500, file: !2429, line: 104, baseType: !2528, size: 32, offset: 160)
!2528 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2500, file: !2429, line: 104, size: 32, elements: !2529)
!2529 = !{!2530, !2531}
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2528, file: !2429, line: 104, baseType: !137, size: 32)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2528, file: !2429, line: 104, baseType: !137, size: 32)
!2532 = !DIDerivedType(tag: DW_TAG_member, scope: !2500, file: !2429, line: 105, baseType: !2533, size: 32, offset: 192)
!2533 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2500, file: !2429, line: 105, size: 32, elements: !2534)
!2534 = !{!2535, !2536}
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2533, file: !2429, line: 105, baseType: !137, size: 32)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2533, file: !2429, line: 105, baseType: !137, size: 32)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2500, file: !2429, line: 106, baseType: !137, size: 32, offset: 224)
!2538 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2539, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1443, retainedTypes: !2540, splitDebugInlining: false, nameTableKind: None)
!2539 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sys_heap")
!2540 = !{!637, !611, !208, !137, !2541, !2558}
!2541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2542, size: 32)
!2542 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !402, line: 426, baseType: !2543)
!2543 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 411, size: 28704, elements: !2544)
!2544 = !{!2545, !2546, !2547, !2548, !2549, !2550, !2551, !2552, !2553, !2554, !2555, !2556, !2557}
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2543, file: !402, line: 413, baseType: !1460, size: 256)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2543, file: !402, line: 414, baseType: !1462, size: 768, offset: 256)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2543, file: !402, line: 415, baseType: !1460, size: 256, offset: 1024)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2543, file: !402, line: 416, baseType: !1462, size: 768, offset: 1280)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2543, file: !402, line: 417, baseType: !1460, size: 256, offset: 2048)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2543, file: !402, line: 418, baseType: !1462, size: 768, offset: 2304)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2543, file: !402, line: 419, baseType: !1460, size: 256, offset: 3072)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2543, file: !402, line: 420, baseType: !1462, size: 768, offset: 3328)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2543, file: !402, line: 421, baseType: !1460, size: 256, offset: 4096)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2543, file: !402, line: 422, baseType: !1473, size: 1792, offset: 4352)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2543, file: !402, line: 423, baseType: !1477, size: 1920, offset: 6144)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2543, file: !402, line: 424, baseType: !1482, size: 20608, offset: 8064)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2543, file: !402, line: 425, baseType: !176, size: 32, offset: 28672)
!2558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2559, size: 32)
!2559 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !402, line: 468, baseType: !2560)
!2560 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 445, size: 1120, elements: !2561)
!2561 = !{!2562, !2563, !2564, !2565, !2566, !2567, !2568, !2569, !2570, !2571, !2572, !2573, !2574, !2575, !2576, !2577, !2578, !2579, !2580, !2581, !2582}
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2560, file: !402, line: 447, baseType: !406, size: 32)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2560, file: !402, line: 448, baseType: !176, size: 32, offset: 32)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2560, file: !402, line: 449, baseType: !176, size: 32, offset: 64)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2560, file: !402, line: 450, baseType: !176, size: 32, offset: 96)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2560, file: !402, line: 451, baseType: !176, size: 32, offset: 128)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2560, file: !402, line: 452, baseType: !176, size: 32, offset: 160)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2560, file: !402, line: 453, baseType: !1497, size: 96, offset: 192)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2560, file: !402, line: 454, baseType: !176, size: 32, offset: 288)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2560, file: !402, line: 455, baseType: !176, size: 32, offset: 320)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2560, file: !402, line: 456, baseType: !176, size: 32, offset: 352)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2560, file: !402, line: 457, baseType: !176, size: 32, offset: 384)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2560, file: !402, line: 458, baseType: !176, size: 32, offset: 416)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2560, file: !402, line: 459, baseType: !176, size: 32, offset: 448)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2560, file: !402, line: 460, baseType: !176, size: 32, offset: 480)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2560, file: !402, line: 461, baseType: !1508, size: 64, offset: 512)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2560, file: !402, line: 462, baseType: !406, size: 32, offset: 576)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2560, file: !402, line: 463, baseType: !406, size: 32, offset: 608)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2560, file: !402, line: 464, baseType: !1512, size: 128, offset: 640)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2560, file: !402, line: 465, baseType: !1514, size: 160, offset: 768)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2560, file: !402, line: 466, baseType: !1516, size: 160, offset: 928)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2560, file: !402, line: 467, baseType: !176, size: 32, offset: 1088)
!2583 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2584, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2585, splitDebugInlining: false, nameTableKind: None)
!2584 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sys_heap")
!2585 = !{!2586, !102, !103}
!2586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2587, size: 32)
!2587 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !402, line: 468, baseType: !2588)
!2588 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 445, size: 1120, elements: !2589)
!2589 = !{!2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608, !2609, !2610}
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2588, file: !402, line: 447, baseType: !406, size: 32)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2588, file: !402, line: 448, baseType: !176, size: 32, offset: 32)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2588, file: !402, line: 449, baseType: !176, size: 32, offset: 64)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2588, file: !402, line: 450, baseType: !176, size: 32, offset: 96)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2588, file: !402, line: 451, baseType: !176, size: 32, offset: 128)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2588, file: !402, line: 452, baseType: !176, size: 32, offset: 160)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2588, file: !402, line: 453, baseType: !1497, size: 96, offset: 192)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2588, file: !402, line: 454, baseType: !176, size: 32, offset: 288)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2588, file: !402, line: 455, baseType: !176, size: 32, offset: 320)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2588, file: !402, line: 456, baseType: !176, size: 32, offset: 352)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2588, file: !402, line: 457, baseType: !176, size: 32, offset: 384)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2588, file: !402, line: 458, baseType: !176, size: 32, offset: 416)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2588, file: !402, line: 459, baseType: !176, size: 32, offset: 448)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2588, file: !402, line: 460, baseType: !176, size: 32, offset: 480)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2588, file: !402, line: 461, baseType: !1508, size: 64, offset: 512)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2588, file: !402, line: 462, baseType: !406, size: 32, offset: 576)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2588, file: !402, line: 463, baseType: !406, size: 32, offset: 608)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2588, file: !402, line: 464, baseType: !1512, size: 128, offset: 640)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2588, file: !402, line: 465, baseType: !1514, size: 160, offset: 768)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2588, file: !402, line: 466, baseType: !1516, size: 160, offset: 928)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2588, file: !402, line: 467, baseType: !176, size: 32, offset: 1088)
!2611 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2612, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2613, splitDebugInlining: false, nameTableKind: None)
!2612 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sys_heap")
!2613 = !{!109, !1005, !120, !840, !2614, !209, !102}
!2614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2615, size: 32)
!2615 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !209)
!2616 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2617, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2618, splitDebugInlining: false, nameTableKind: None)
!2617 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sys_heap")
!2618 = !{!2619}
!2619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2620, size: 32)
!2620 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !172, line: 369, baseType: !2621)
!2621 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 335, size: 1152, elements: !2622)
!2622 = !{!2623, !2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632, !2633, !2634, !2635, !2636, !2637, !2638, !2639, !2640, !2641, !2642, !2643, !2644, !2645, !2646, !2647, !2648, !2649, !2650, !2651, !2652, !2653, !2654}
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2621, file: !172, line: 337, baseType: !176, size: 32)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2621, file: !172, line: 338, baseType: !176, size: 32, offset: 32)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2621, file: !172, line: 339, baseType: !176, size: 32, offset: 64)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2621, file: !172, line: 340, baseType: !176, size: 32, offset: 96)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2621, file: !172, line: 341, baseType: !176, size: 32, offset: 128)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2621, file: !172, line: 342, baseType: !176, size: 32, offset: 160)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2621, file: !172, line: 343, baseType: !176, size: 32, offset: 192)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2621, file: !172, line: 344, baseType: !137, size: 32, offset: 224)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2621, file: !172, line: 345, baseType: !176, size: 32, offset: 256)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2621, file: !172, line: 346, baseType: !176, size: 32, offset: 288)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2621, file: !172, line: 347, baseType: !707, size: 64, offset: 320)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2621, file: !172, line: 348, baseType: !176, size: 32, offset: 384)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2621, file: !172, line: 349, baseType: !176, size: 32, offset: 416)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2621, file: !172, line: 350, baseType: !176, size: 32, offset: 448)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2621, file: !172, line: 351, baseType: !137, size: 32, offset: 480)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2621, file: !172, line: 352, baseType: !176, size: 32, offset: 512)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2621, file: !172, line: 353, baseType: !176, size: 32, offset: 544)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2621, file: !172, line: 354, baseType: !707, size: 64, offset: 576)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2621, file: !172, line: 355, baseType: !176, size: 32, offset: 640)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2621, file: !172, line: 356, baseType: !176, size: 32, offset: 672)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2621, file: !172, line: 357, baseType: !176, size: 32, offset: 704)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2621, file: !172, line: 358, baseType: !137, size: 32, offset: 736)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2621, file: !172, line: 359, baseType: !176, size: 32, offset: 768)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2621, file: !172, line: 360, baseType: !176, size: 32, offset: 800)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2621, file: !172, line: 361, baseType: !707, size: 64, offset: 832)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2621, file: !172, line: 362, baseType: !176, size: 32, offset: 896)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2621, file: !172, line: 363, baseType: !176, size: 32, offset: 928)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2621, file: !172, line: 364, baseType: !707, size: 64, offset: 960)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2621, file: !172, line: 365, baseType: !176, size: 32, offset: 1024)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2621, file: !172, line: 366, baseType: !176, size: 32, offset: 1056)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2621, file: !172, line: 367, baseType: !728, size: 32, offset: 1088)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2621, file: !172, line: 368, baseType: !176, size: 32, offset: 1120)
!2655 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2656, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2656 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sys_heap")
!2657 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2658, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2659, retainedTypes: !2675, splitDebugInlining: false, nameTableKind: None)
!2658 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sys_heap")
!2659 = !{!2660, !2667, !2671}
!2660 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2661, line: 38, baseType: !32, size: 32, elements: !2662)
!2661 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2662 = !{!2663, !2664, !2665, !2666}
!2663 = !DIEnumerator(name: "HAL_OK", value: 0)
!2664 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!2665 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!2666 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!2667 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !680, line: 184, baseType: !32, size: 32, elements: !2668)
!2668 = !{!2669, !2670}
!2669 = !DIEnumerator(name: "RESET", value: 0)
!2670 = !DIEnumerator(name: "SET", value: 1)
!2671 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !680, line: 190, baseType: !32, size: 32, elements: !2672)
!2672 = !{!2673, !2674}
!2673 = !DIEnumerator(name: "DISABLE", value: 0)
!2674 = !DIEnumerator(name: "ENABLE", value: 1)
!2675 = !{!102, !2676, !208, !137, !1321, !2712, !2718, !2729, !151, !2730, !163}
!2676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2677, size: 32)
!2677 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !172, line: 369, baseType: !2678)
!2678 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 335, size: 1152, elements: !2679)
!2679 = !{!2680, !2681, !2682, !2683, !2684, !2685, !2686, !2687, !2688, !2689, !2690, !2691, !2692, !2693, !2694, !2695, !2696, !2697, !2698, !2699, !2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707, !2708, !2709, !2710, !2711}
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2678, file: !172, line: 337, baseType: !176, size: 32)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2678, file: !172, line: 338, baseType: !176, size: 32, offset: 32)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2678, file: !172, line: 339, baseType: !176, size: 32, offset: 64)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2678, file: !172, line: 340, baseType: !176, size: 32, offset: 96)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2678, file: !172, line: 341, baseType: !176, size: 32, offset: 128)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2678, file: !172, line: 342, baseType: !176, size: 32, offset: 160)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2678, file: !172, line: 343, baseType: !176, size: 32, offset: 192)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2678, file: !172, line: 344, baseType: !137, size: 32, offset: 224)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2678, file: !172, line: 345, baseType: !176, size: 32, offset: 256)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2678, file: !172, line: 346, baseType: !176, size: 32, offset: 288)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2678, file: !172, line: 347, baseType: !707, size: 64, offset: 320)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2678, file: !172, line: 348, baseType: !176, size: 32, offset: 384)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2678, file: !172, line: 349, baseType: !176, size: 32, offset: 416)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2678, file: !172, line: 350, baseType: !176, size: 32, offset: 448)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2678, file: !172, line: 351, baseType: !137, size: 32, offset: 480)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2678, file: !172, line: 352, baseType: !176, size: 32, offset: 512)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2678, file: !172, line: 353, baseType: !176, size: 32, offset: 544)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2678, file: !172, line: 354, baseType: !707, size: 64, offset: 576)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2678, file: !172, line: 355, baseType: !176, size: 32, offset: 640)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2678, file: !172, line: 356, baseType: !176, size: 32, offset: 672)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2678, file: !172, line: 357, baseType: !176, size: 32, offset: 704)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2678, file: !172, line: 358, baseType: !137, size: 32, offset: 736)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2678, file: !172, line: 359, baseType: !176, size: 32, offset: 768)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2678, file: !172, line: 360, baseType: !176, size: 32, offset: 800)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2678, file: !172, line: 361, baseType: !707, size: 64, offset: 832)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2678, file: !172, line: 362, baseType: !176, size: 32, offset: 896)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2678, file: !172, line: 363, baseType: !176, size: 32, offset: 928)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2678, file: !172, line: 364, baseType: !707, size: 64, offset: 960)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2678, file: !172, line: 365, baseType: !176, size: 32, offset: 1024)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2678, file: !172, line: 366, baseType: !176, size: 32, offset: 1056)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2678, file: !172, line: 367, baseType: !728, size: 32, offset: 1088)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2678, file: !172, line: 368, baseType: !176, size: 32, offset: 1120)
!2712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2713, size: 32)
!2713 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !172, line: 329, baseType: !2714)
!2714 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 325, size: 64, elements: !2715)
!2715 = !{!2716, !2717}
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2714, file: !172, line: 327, baseType: !176, size: 32)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2714, file: !172, line: 328, baseType: !176, size: 32, offset: 32)
!2718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2719, size: 32)
!2719 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !172, line: 258, baseType: !2720)
!2720 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 249, size: 224, elements: !2721)
!2721 = !{!2722, !2723, !2724, !2725, !2726, !2727, !2728}
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2720, file: !172, line: 251, baseType: !176, size: 32)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2720, file: !172, line: 252, baseType: !176, size: 32, offset: 32)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2720, file: !172, line: 253, baseType: !176, size: 32, offset: 64)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2720, file: !172, line: 254, baseType: !176, size: 32, offset: 96)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2720, file: !172, line: 255, baseType: !176, size: 32, offset: 128)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2720, file: !172, line: 256, baseType: !176, size: 32, offset: 160)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2720, file: !172, line: 257, baseType: !176, size: 32, offset: 192)
!2729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1478, size: 32)
!2730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2731, size: 32)
!2731 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !172, line: 275, baseType: !2732)
!2732 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 264, size: 320, elements: !2733)
!2733 = !{!2734, !2735, !2736, !2737, !2738, !2739, !2740, !2741, !2742}
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !2732, file: !172, line: 266, baseType: !176, size: 32)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !2732, file: !172, line: 267, baseType: !176, size: 32, offset: 32)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !2732, file: !172, line: 268, baseType: !176, size: 32, offset: 64)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !2732, file: !172, line: 269, baseType: !176, size: 32, offset: 96)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !2732, file: !172, line: 270, baseType: !176, size: 32, offset: 128)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !2732, file: !172, line: 271, baseType: !176, size: 32, offset: 160)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !2732, file: !172, line: 272, baseType: !176, size: 32, offset: 192)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !2732, file: !172, line: 273, baseType: !176, size: 32, offset: 224)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !2732, file: !172, line: 274, baseType: !994, size: 64, offset: 256)
!2743 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2744, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2745, retainedTypes: !2746, splitDebugInlining: false, nameTableKind: None)
!2744 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sys_heap")
!2745 = !{!679}
!2746 = !{!2747, !137, !2755, !2761, !2772}
!2747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2748, size: 32)
!2748 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !402, line: 770, baseType: !2749)
!2749 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 764, size: 128, elements: !2750)
!2750 = !{!2751, !2752, !2753, !2754}
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2749, file: !402, line: 766, baseType: !176, size: 32)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2749, file: !402, line: 767, baseType: !176, size: 32, offset: 32)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2749, file: !402, line: 768, baseType: !176, size: 32, offset: 64)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2749, file: !402, line: 769, baseType: !406, size: 32, offset: 96)
!2755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2756, size: 32)
!2756 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !172, line: 329, baseType: !2757)
!2757 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 325, size: 64, elements: !2758)
!2758 = !{!2759, !2760}
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2757, file: !172, line: 327, baseType: !176, size: 32)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2757, file: !172, line: 328, baseType: !176, size: 32, offset: 32)
!2761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2762, size: 32)
!2762 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !172, line: 258, baseType: !2763)
!2763 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 249, size: 224, elements: !2764)
!2764 = !{!2765, !2766, !2767, !2768, !2769, !2770, !2771}
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2763, file: !172, line: 251, baseType: !176, size: 32)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2763, file: !172, line: 252, baseType: !176, size: 32, offset: 32)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2763, file: !172, line: 253, baseType: !176, size: 32, offset: 64)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2763, file: !172, line: 254, baseType: !176, size: 32, offset: 96)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2763, file: !172, line: 255, baseType: !176, size: 32, offset: 128)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2763, file: !172, line: 256, baseType: !176, size: 32, offset: 160)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2763, file: !172, line: 257, baseType: !176, size: 32, offset: 192)
!2772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2773, size: 32)
!2773 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !172, line: 369, baseType: !2774)
!2774 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 335, size: 1152, elements: !2775)
!2775 = !{!2776, !2777, !2778, !2779, !2780, !2781, !2782, !2783, !2784, !2785, !2786, !2787, !2788, !2789, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804, !2805, !2806, !2807}
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2774, file: !172, line: 337, baseType: !176, size: 32)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2774, file: !172, line: 338, baseType: !176, size: 32, offset: 32)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2774, file: !172, line: 339, baseType: !176, size: 32, offset: 64)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2774, file: !172, line: 340, baseType: !176, size: 32, offset: 96)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2774, file: !172, line: 341, baseType: !176, size: 32, offset: 128)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2774, file: !172, line: 342, baseType: !176, size: 32, offset: 160)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2774, file: !172, line: 343, baseType: !176, size: 32, offset: 192)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2774, file: !172, line: 344, baseType: !137, size: 32, offset: 224)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2774, file: !172, line: 345, baseType: !176, size: 32, offset: 256)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2774, file: !172, line: 346, baseType: !176, size: 32, offset: 288)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2774, file: !172, line: 347, baseType: !707, size: 64, offset: 320)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2774, file: !172, line: 348, baseType: !176, size: 32, offset: 384)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2774, file: !172, line: 349, baseType: !176, size: 32, offset: 416)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2774, file: !172, line: 350, baseType: !176, size: 32, offset: 448)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2774, file: !172, line: 351, baseType: !137, size: 32, offset: 480)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2774, file: !172, line: 352, baseType: !176, size: 32, offset: 512)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2774, file: !172, line: 353, baseType: !176, size: 32, offset: 544)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2774, file: !172, line: 354, baseType: !707, size: 64, offset: 576)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2774, file: !172, line: 355, baseType: !176, size: 32, offset: 640)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2774, file: !172, line: 356, baseType: !176, size: 32, offset: 672)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2774, file: !172, line: 357, baseType: !176, size: 32, offset: 704)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2774, file: !172, line: 358, baseType: !137, size: 32, offset: 736)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2774, file: !172, line: 359, baseType: !176, size: 32, offset: 768)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2774, file: !172, line: 360, baseType: !176, size: 32, offset: 800)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2774, file: !172, line: 361, baseType: !707, size: 64, offset: 832)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2774, file: !172, line: 362, baseType: !176, size: 32, offset: 896)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2774, file: !172, line: 363, baseType: !176, size: 32, offset: 928)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2774, file: !172, line: 364, baseType: !707, size: 64, offset: 960)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2774, file: !172, line: 365, baseType: !176, size: 32, offset: 1024)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2774, file: !172, line: 366, baseType: !176, size: 32, offset: 1056)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2774, file: !172, line: 367, baseType: !728, size: 32, offset: 1088)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2774, file: !172, line: 368, baseType: !176, size: 32, offset: 1120)
!2808 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2809, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2810, splitDebugInlining: false, nameTableKind: None)
!2809 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sys_heap")
!2810 = !{!102, !120}
!2811 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2812, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2813, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2812 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sys_heap")
!2813 = !{!2814, !2821, !30}
!2814 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !2815, line: 14, baseType: !32, size: 32, elements: !2816)
!2815 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2816 = !{!2817, !2818, !2819, !2820}
!2817 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!2818 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!2819 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!2820 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!2821 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !2815, line: 42, baseType: !32, size: 32, elements: !2822)
!2822 = !{!2823, !2824, !2825, !2826, !2827, !2828}
!2823 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!2824 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!2825 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!2826 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!2827 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!2828 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!2829 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2830, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2830 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sys_heap")
!2831 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2832, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2833, splitDebugInlining: false, nameTableKind: None)
!2832 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sys_heap")
!2833 = !{!22, !102, !103}
!2834 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2835, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2835 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sys_heap")
!2836 = !{!"Ubuntu clang version 14.0.6"}
!2837 = !{i32 7, !"Dwarf Version", i32 4}
!2838 = !{i32 2, !"Debug Info Version", i32 3}
!2839 = !{i32 1, !"wchar_size", i32 4}
!2840 = !{i32 1, !"min_enum_size", i32 4}
!2841 = !{i32 1, !"branch-target-enforcement", i32 0}
!2842 = !{i32 1, !"sign-return-address", i32 0}
!2843 = !{i32 1, !"sign-return-address-all", i32 0}
!2844 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!2845 = !{i32 7, !"frame-pointer", i32 2}
!2846 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !2847, file: !2847, line: 26, type: !2848, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2239, retainedNodes: !162)
!2847 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2848 = !DISubroutineType(types: !2849)
!2849 = !{null}
!2850 = !DILocation(line: 28, column: 1, scope: !2846)
!2851 = !{i64 2154438695, i64 2154438715, i64 2154438778}
!2852 = !DILocation(line: 29, column: 1, scope: !2846)
!2853 = !{i64 2154439110, i64 2154439130, i64 2154439193}
!2854 = !DILocation(line: 30, column: 1, scope: !2846)
!2855 = !{i64 2154439529, i64 2154439549, i64 2154439612}
!2856 = !DILocation(line: 31, column: 1, scope: !2846)
!2857 = !{i64 2154439948, i64 2154439968, i64 2154440031}
!2858 = !DILocation(line: 33, column: 1, scope: !2846)
!2859 = !{i64 2154440240, i64 2154440260, i64 2154440323}
!2860 = !DILocation(line: 35, column: 1, scope: !2846)
!2861 = !{i64 2154440565, i64 2154440585, i64 2154440648}
!2862 = !DILocation(line: 50, column: 1, scope: !2846)
!2863 = !{i64 2154440992, i64 2154441012, i64 2154441075}
!2864 = !DILocation(line: 54, column: 1, scope: !2846)
!2865 = !{i64 2154441431, i64 2154441451, i64 2154441514}
!2866 = !DILocation(line: 61, column: 1, scope: !2846)
!2867 = !{i64 2154441748, i64 2154441768, i64 2154441831}
!2868 = !DILocation(line: 63, column: 1, scope: !2846)
!2869 = !{i64 2154442128, i64 2154442148, i64 2154442211}
!2870 = !DILocation(line: 64, column: 1, scope: !2846)
!2871 = !{i64 2154442650, i64 2154442670, i64 2154442733}
!2872 = !DILocation(line: 65, column: 1, scope: !2846)
!2873 = !{i64 2154443148, i64 2154443168, i64 2154443231}
!2874 = !DILocation(line: 66, column: 1, scope: !2846)
!2875 = !{i64 2154443630, i64 2154443650, i64 2154443713}
!2876 = !DILocation(line: 67, column: 1, scope: !2846)
!2877 = !{i64 2154448198, i64 2154448218, i64 2154448281}
!2878 = !DILocation(line: 68, column: 1, scope: !2846)
!2879 = !{i64 2154448686, i64 2154448706, i64 2154448769}
!2880 = !DILocation(line: 70, column: 1, scope: !2846)
!2881 = !{i64 2154449154, i64 2154449174, i64 2154449237}
!2882 = !DILocation(line: 71, column: 1, scope: !2846)
!2883 = !{i64 2154449596, i64 2154449616, i64 2154449679}
!2884 = !DILocation(line: 72, column: 1, scope: !2846)
!2885 = !{i64 2154450054, i64 2154450074, i64 2154450137}
!2886 = !DILocation(line: 79, column: 1, scope: !2846)
!2887 = !{i64 2154450508, i64 2154450528, i64 2154450591}
!2888 = !DILocation(line: 80, column: 1, scope: !2846)
!2889 = !{i64 2154451019, i64 2154451039, i64 2154451102}
!2890 = !DILocation(line: 82, column: 1, scope: !2846)
!2891 = !{i64 2154451510, i64 2154451530, i64 2154451593}
!2892 = !DILocation(line: 97, column: 1, scope: !2846)
!2893 = !{i64 2154451847, i64 2154451867, i64 2154451930}
!2894 = !DILocation(line: 99, column: 1, scope: !2846)
!2895 = !{i64 2154452065, i64 2154452085, i64 2154452148}
!2896 = !DILocation(line: 102, column: 1, scope: !2846)
!2897 = !{i64 2154452322, i64 2154452342, i64 2154452405}
!2898 = !DILocation(line: 105, column: 1, scope: !2846)
!2899 = !{i64 2154452562, i64 2154452582, i64 2154452645}
!2900 = !DILocation(line: 115, column: 1, scope: !2846)
!2901 = !{i64 2154452901, i64 2154452921, i64 2154452984}
!2902 = !DILocation(line: 118, column: 1, scope: !2846)
!2903 = !{i64 2154453245, i64 2154453265, i64 2154453328}
!2904 = !DILocation(line: 32, column: 1, scope: !2905)
!2905 = !DILexicalBlockFile(scope: !2846, file: !2906, discriminator: 0)
!2906 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2907 = !{i64 2154453601, i64 2154453621, i64 2154453684}
!2908 = !DILocation(line: 33, column: 1, scope: !2905)
!2909 = !{i64 2154454113, i64 2154454133, i64 2154454196}
!2910 = !DILocation(line: 53, column: 1, scope: !2905)
!2911 = !{i64 2154454621, i64 2154454641, i64 2154454704}
!2912 = !DILocation(line: 54, column: 1, scope: !2905)
!2913 = !{i64 2154455039, i64 2154455059, i64 2154455122}
!2914 = !DILocation(line: 55, column: 1, scope: !2905)
!2915 = !{i64 2154455457, i64 2154455477, i64 2154455540}
!2916 = !DILocation(line: 56, column: 1, scope: !2905)
!2917 = !{i64 2154455875, i64 2154455895, i64 2154455958}
!2918 = !DILocation(line: 57, column: 1, scope: !2905)
!2919 = !{i64 2154456293, i64 2154456313, i64 2154456376}
!2920 = !DILocation(line: 58, column: 1, scope: !2905)
!2921 = !{i64 2154456711, i64 2154456731, i64 2154456794}
!2922 = !DILocation(line: 59, column: 1, scope: !2905)
!2923 = !{i64 2154457129, i64 2154457149, i64 2154457212}
!2924 = !DILocation(line: 60, column: 1, scope: !2905)
!2925 = !{i64 2154457553, i64 2154457573, i64 2154457636}
!2926 = !DILocation(line: 61, column: 1, scope: !2905)
!2927 = !{i64 2154461931, i64 2154461951, i64 2154462014}
!2928 = !DILocation(line: 70, column: 1, scope: !2905)
!2929 = !{i64 2154462160, i64 2154462180, i64 2154462243}
!2930 = !DILocation(line: 72, column: 1, scope: !2905)
!2931 = !{i64 2154462492, i64 2154462512, i64 2154462575}
!2932 = !DILocation(line: 73, column: 1, scope: !2905)
!2933 = !{i64 2154462942, i64 2154462962, i64 2154463025}
!2934 = !DILocation(line: 74, column: 1, scope: !2905)
!2935 = !{i64 2154463392, i64 2154463412, i64 2154463475}
!2936 = !DILocation(line: 75, column: 1, scope: !2905)
!2937 = !{i64 2154463842, i64 2154463862, i64 2154463925}
!2938 = !DILocation(line: 76, column: 1, scope: !2905)
!2939 = !{i64 2154464292, i64 2154464312, i64 2154464375}
!2940 = !DILocation(line: 77, column: 1, scope: !2905)
!2941 = !{i64 2154464742, i64 2154464762, i64 2154464825}
!2942 = !DILocation(line: 78, column: 1, scope: !2905)
!2943 = !{i64 2154465192, i64 2154465212, i64 2154465275}
!2944 = !DILocation(line: 79, column: 1, scope: !2905)
!2945 = !{i64 2154465642, i64 2154465662, i64 2154465725}
!2946 = !DILocation(line: 80, column: 1, scope: !2905)
!2947 = !{i64 2154466095, i64 2154466115, i64 2154466178}
!2948 = !DILocation(line: 84, column: 1, scope: !2905)
!2949 = !{i64 2154466427, i64 2154466447, i64 2154466510}
!2950 = !DILocation(line: 91, column: 1, scope: !2905)
!2951 = !{i64 2154466824, i64 2154466844, i64 2154466907}
!2952 = !DILocation(line: 93, column: 1, scope: !2905)
!2953 = !{i64 2154467191, i64 2154467211, i64 2154467274}
!2954 = !DILocation(line: 106, column: 1, scope: !2905)
!2955 = !{i64 2154467461, i64 2154467481, i64 2154467544}
!2956 = !DILocation(line: 11, column: 1, scope: !2957)
!2957 = !DILexicalBlockFile(scope: !2846, file: !2958, discriminator: 0)
!2958 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2959 = distinct !DISubprogram(name: "main", scope: !107, file: !107, line: 17, type: !2848, scopeLine: 18, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2960)
!2960 = !{!2961}
!2961 = !DILocalVariable(name: "p", scope: !2959, file: !107, line: 19, type: !102)
!2962 = !DILocation(line: 21, column: 2, scope: !2959)
!2963 = !DILocation(line: 23, column: 2, scope: !2959)
!2964 = !DILocation(line: 24, column: 2, scope: !2959)
!2965 = !DILocation(line: 26, column: 6, scope: !2959)
!2966 = !DILocation(line: 0, scope: !2959)
!2967 = !DILocation(line: 27, column: 2, scope: !2959)
!2968 = !DILocation(line: 29, column: 6, scope: !2959)
!2969 = !DILocation(line: 30, column: 2, scope: !2959)
!2970 = !DILocation(line: 32, column: 2, scope: !2959)
!2971 = !DILocation(line: 33, column: 2, scope: !2959)
!2972 = !DILocation(line: 34, column: 1, scope: !2959)
!2973 = distinct !DISubprogram(name: "print_sys_memory_stats", scope: !107, file: !107, line: 36, type: !2848, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2974)
!2974 = !{!2975}
!2975 = !DILocalVariable(name: "stats", scope: !2973, file: !107, line: 38, type: !2976)
!2976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_memory_stats", file: !2977, line: 24, size: 96, elements: !2978)
!2977 = !DIFile(filename: "zephyr/include/zephyr/sys/mem_stats.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2978 = !{!2979, !2980, !2981}
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "free_bytes", scope: !2976, file: !2977, line: 25, baseType: !120, size: 32)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "allocated_bytes", scope: !2976, file: !2977, line: 26, baseType: !120, size: 32, offset: 32)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "max_allocated_bytes", scope: !2976, file: !2977, line: 27, baseType: !120, size: 32, offset: 64)
!2982 = !DILocation(line: 38, column: 2, scope: !2973)
!2983 = !DILocation(line: 38, column: 26, scope: !2973)
!2984 = !DILocation(line: 40, column: 2, scope: !2973)
!2985 = !DILocation(line: 43, column: 9, scope: !2973)
!2986 = !DILocation(line: 43, column: 32, scope: !2973)
!2987 = !DILocation(line: 44, column: 9, scope: !2973)
!2988 = !DILocation(line: 42, column: 2, scope: !2973)
!2989 = !DILocation(line: 45, column: 1, scope: !2973)
!2990 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !127, file: !127, line: 45, type: !129, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !2991)
!2991 = !{!2992}
!2992 = !DILocalVariable(name: "c", arg: 1, scope: !2990, file: !127, line: 45, type: !103)
!2993 = !DILocation(line: 0, scope: !2990)
!2994 = !DILocation(line: 50, column: 2, scope: !2990)
!2995 = distinct !DISubprogram(name: "__printk_hook_install", scope: !127, file: !127, line: 63, type: !2996, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !2998)
!2996 = !DISubroutineType(types: !2997)
!2997 = !{null, !128}
!2998 = !{!2999}
!2999 = !DILocalVariable(name: "fn", arg: 1, scope: !2995, file: !127, line: 63, type: !128)
!3000 = !DILocation(line: 0, scope: !2995)
!3001 = !DILocation(line: 65, column: 12, scope: !2995)
!3002 = !DILocation(line: 66, column: 1, scope: !2995)
!3003 = distinct !DISubprogram(name: "__printk_get_hook", scope: !127, file: !127, line: 76, type: !3004, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !162)
!3004 = !DISubroutineType(types: !3005)
!3005 = !{!102}
!3006 = !DILocation(line: 78, column: 9, scope: !3003)
!3007 = !DILocation(line: 78, column: 2, scope: !3003)
!3008 = distinct !DISubprogram(name: "vprintk", scope: !127, file: !127, line: 113, type: !3009, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !3018)
!3009 = !DISubroutineType(types: !3010)
!3010 = !{null, !199, !3011}
!3011 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3012, line: 99, baseType: !3013)
!3012 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3013 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3012, line: 40, baseType: !3014)
!3014 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !127, baseType: !3015)
!3015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3016)
!3016 = !{!3017}
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3015, file: !127, line: 79, baseType: !102, size: 32)
!3018 = !{!3019, !3020, !3021}
!3019 = !DILocalVariable(name: "fmt", arg: 1, scope: !3008, file: !127, line: 113, type: !199)
!3020 = !DILocalVariable(name: "ap", arg: 2, scope: !3008, file: !127, line: 113, type: !3011)
!3021 = !DILocalVariable(name: "ctx", scope: !3022, file: !127, line: 121, type: !3024)
!3022 = distinct !DILexicalBlock(scope: !3023, file: !127, line: 120, column: 27)
!3023 = distinct !DILexicalBlock(scope: !3008, file: !127, line: 120, column: 6)
!3024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !127, line: 81, size: 32, elements: !3025)
!3025 = !{!3026, !3027}
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !3024, file: !127, line: 85, baseType: !32, size: 32)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3024, file: !127, line: 86, baseType: !3028, offset: 32)
!3028 = !DICompositeType(tag: DW_TAG_array_type, baseType: !109, elements: !2267)
!3029 = !DILocation(line: 0, scope: !3008)
!3030 = !DILocation(line: 148, column: 3, scope: !3031)
!3031 = distinct !DILexicalBlock(scope: !3023, file: !127, line: 138, column: 9)
!3032 = !DILocation(line: 155, column: 1, scope: !3008)
!3033 = distinct !DISubprogram(name: "char_out", scope: !127, file: !127, line: 107, type: !3034, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !3036)
!3034 = !DISubroutineType(types: !3035)
!3035 = !{!103, !103, !102}
!3036 = !{!3037, !3038}
!3037 = !DILocalVariable(name: "c", arg: 1, scope: !3033, file: !127, line: 107, type: !103)
!3038 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !3033, file: !127, line: 107, type: !102)
!3039 = !DILocation(line: 0, scope: !3033)
!3040 = !DILocation(line: 110, column: 9, scope: !3033)
!3041 = !DILocation(line: 110, column: 2, scope: !3033)
!3042 = distinct !DISubprogram(name: "cbvprintf", scope: !3043, file: !3043, line: 739, type: !3044, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !3050)
!3043 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3044 = !DISubroutineType(types: !3045)
!3045 = !{!103, !3046, !102, !199, !3011}
!3046 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3043, line: 297, baseType: !3047)
!3047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3048, size: 32)
!3048 = !DISubroutineType(types: !3049)
!3049 = !{!103, null}
!3050 = !{!3051, !3052, !3053, !3054}
!3051 = !DILocalVariable(name: "out", arg: 1, scope: !3042, file: !3043, line: 739, type: !3046)
!3052 = !DILocalVariable(name: "ctx", arg: 2, scope: !3042, file: !3043, line: 739, type: !102)
!3053 = !DILocalVariable(name: "format", arg: 3, scope: !3042, file: !3043, line: 739, type: !199)
!3054 = !DILocalVariable(name: "ap", arg: 4, scope: !3042, file: !3043, line: 739, type: !3011)
!3055 = !DILocation(line: 0, scope: !3042)
!3056 = !DILocation(line: 741, column: 9, scope: !3042)
!3057 = !DILocation(line: 741, column: 2, scope: !3042)
!3058 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !127, file: !127, line: 157, type: !3059, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !3061)
!3059 = !DISubroutineType(types: !3060)
!3060 = !{null, !1005, !120}
!3061 = !{!3062, !3063, !3064}
!3062 = !DILocalVariable(name: "c", arg: 1, scope: !3058, file: !127, line: 157, type: !1005)
!3063 = !DILocalVariable(name: "n", arg: 2, scope: !3058, file: !127, line: 157, type: !120)
!3064 = !DILocalVariable(name: "i", scope: !3058, file: !127, line: 159, type: !120)
!3065 = !DILocation(line: 0, scope: !3058)
!3066 = !DILocation(line: 164, column: 16, scope: !3067)
!3067 = distinct !DILexicalBlock(scope: !3068, file: !127, line: 164, column: 2)
!3068 = distinct !DILexicalBlock(scope: !3058, file: !127, line: 164, column: 2)
!3069 = !DILocation(line: 164, column: 2, scope: !3068)
!3070 = !DILocation(line: 165, column: 3, scope: !3071)
!3071 = distinct !DILexicalBlock(scope: !3067, file: !127, line: 164, column: 26)
!3072 = !DILocation(line: 165, column: 13, scope: !3071)
!3073 = !DILocation(line: 164, column: 22, scope: !3067)
!3074 = distinct !{!3074, !3069, !3075}
!3075 = !DILocation(line: 166, column: 2, scope: !3068)
!3076 = !DILocation(line: 171, column: 1, scope: !3058)
!3077 = distinct !DISubprogram(name: "printk", scope: !127, file: !127, line: 203, type: !3078, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !3080)
!3078 = !DISubroutineType(types: !3079)
!3079 = !{null, !199, null}
!3080 = !{!3081, !3082}
!3081 = !DILocalVariable(name: "fmt", arg: 1, scope: !3077, file: !127, line: 203, type: !199)
!3082 = !DILocalVariable(name: "ap", scope: !3077, file: !127, line: 205, type: !3011)
!3083 = !DILocation(line: 0, scope: !3077)
!3084 = !DILocation(line: 205, column: 2, scope: !3077)
!3085 = !DILocation(line: 205, column: 10, scope: !3077)
!3086 = !DILocation(line: 207, column: 2, scope: !3077)
!3087 = !DILocation(line: 209, column: 2, scope: !3077)
!3088 = !DILocation(line: 211, column: 2, scope: !3077)
!3089 = !DILocation(line: 212, column: 1, scope: !3077)
!3090 = distinct !DISubprogram(name: "snprintk", scope: !127, file: !127, line: 239, type: !3091, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !3093)
!3091 = !DISubroutineType(types: !3092)
!3092 = !{!103, !1005, !120, !199, null}
!3093 = !{!3094, !3095, !3096, !3097, !3098}
!3094 = !DILocalVariable(name: "str", arg: 1, scope: !3090, file: !127, line: 239, type: !1005)
!3095 = !DILocalVariable(name: "size", arg: 2, scope: !3090, file: !127, line: 239, type: !120)
!3096 = !DILocalVariable(name: "fmt", arg: 3, scope: !3090, file: !127, line: 239, type: !199)
!3097 = !DILocalVariable(name: "ap", scope: !3090, file: !127, line: 241, type: !3011)
!3098 = !DILocalVariable(name: "ret", scope: !3090, file: !127, line: 242, type: !103)
!3099 = !DILocation(line: 0, scope: !3090)
!3100 = !DILocation(line: 241, column: 2, scope: !3090)
!3101 = !DILocation(line: 241, column: 10, scope: !3090)
!3102 = !DILocation(line: 244, column: 2, scope: !3090)
!3103 = !DILocation(line: 245, column: 8, scope: !3090)
!3104 = !DILocation(line: 246, column: 2, scope: !3090)
!3105 = !DILocation(line: 249, column: 1, scope: !3090)
!3106 = !DILocation(line: 248, column: 2, scope: !3090)
!3107 = distinct !DISubprogram(name: "vsnprintk", scope: !127, file: !127, line: 251, type: !3108, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !3110)
!3108 = !DISubroutineType(types: !3109)
!3109 = !{!103, !1005, !120, !199, !3011}
!3110 = !{!3111, !3112, !3113, !3114, !3115}
!3111 = !DILocalVariable(name: "str", arg: 1, scope: !3107, file: !127, line: 251, type: !1005)
!3112 = !DILocalVariable(name: "size", arg: 2, scope: !3107, file: !127, line: 251, type: !120)
!3113 = !DILocalVariable(name: "fmt", arg: 3, scope: !3107, file: !127, line: 251, type: !199)
!3114 = !DILocalVariable(name: "ap", arg: 4, scope: !3107, file: !127, line: 251, type: !3011)
!3115 = !DILocalVariable(name: "ctx", scope: !3107, file: !127, line: 253, type: !3116)
!3116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !127, line: 217, size: 96, elements: !3117)
!3117 = !{!3118, !3119, !3120}
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !3116, file: !127, line: 218, baseType: !1005, size: 32)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3116, file: !127, line: 219, baseType: !103, size: 32, offset: 32)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3116, file: !127, line: 220, baseType: !103, size: 32, offset: 64)
!3121 = !DILocation(line: 0, scope: !3107)
!3122 = !DILocation(line: 253, column: 2, scope: !3107)
!3123 = !DILocation(line: 253, column: 21, scope: !3107)
!3124 = !DILocation(line: 253, column: 27, scope: !3107)
!3125 = !DILocation(line: 255, column: 2, scope: !3107)
!3126 = !DILocation(line: 257, column: 10, scope: !3127)
!3127 = distinct !DILexicalBlock(scope: !3107, file: !127, line: 257, column: 6)
!3128 = !DILocation(line: 257, column: 22, scope: !3127)
!3129 = !DILocation(line: 257, column: 16, scope: !3127)
!3130 = !DILocation(line: 257, column: 6, scope: !3107)
!3131 = !DILocation(line: 258, column: 3, scope: !3132)
!3132 = distinct !DILexicalBlock(scope: !3127, file: !127, line: 257, column: 27)
!3133 = !DILocation(line: 258, column: 18, scope: !3132)
!3134 = !DILocation(line: 259, column: 2, scope: !3132)
!3135 = !DILocation(line: 262, column: 1, scope: !3107)
!3136 = !DILocation(line: 261, column: 2, scope: !3107)
!3137 = distinct !DISubprogram(name: "str_out", scope: !127, file: !127, line: 223, type: !3138, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !3141)
!3138 = !DISubroutineType(types: !3139)
!3139 = !{!103, !103, !3140}
!3140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3116, size: 32)
!3141 = !{!3142, !3143}
!3142 = !DILocalVariable(name: "c", arg: 1, scope: !3137, file: !127, line: 223, type: !103)
!3143 = !DILocalVariable(name: "ctx", arg: 2, scope: !3137, file: !127, line: 223, type: !3140)
!3144 = !DILocation(line: 0, scope: !3137)
!3145 = !DILocation(line: 225, column: 11, scope: !3146)
!3146 = distinct !DILexicalBlock(scope: !3137, file: !127, line: 225, column: 6)
!3147 = !DILocation(line: 225, column: 15, scope: !3146)
!3148 = !DILocation(line: 0, scope: !3146)
!3149 = !DILocation(line: 225, column: 23, scope: !3146)
!3150 = !DILocation(line: 225, column: 45, scope: !3146)
!3151 = !DILocation(line: 225, column: 37, scope: !3146)
!3152 = !DILocation(line: 225, column: 6, scope: !3137)
!3153 = !DILocation(line: 226, column: 8, scope: !3154)
!3154 = distinct !DILexicalBlock(scope: !3146, file: !127, line: 225, column: 50)
!3155 = !DILocation(line: 226, column: 13, scope: !3154)
!3156 = !DILocation(line: 227, column: 3, scope: !3154)
!3157 = !DILocation(line: 230, column: 29, scope: !3158)
!3158 = distinct !DILexicalBlock(scope: !3137, file: !127, line: 230, column: 6)
!3159 = !DILocation(line: 230, column: 17, scope: !3158)
!3160 = !DILocation(line: 230, column: 6, scope: !3137)
!3161 = !DILocation(line: 231, column: 22, scope: !3162)
!3162 = distinct !DILexicalBlock(scope: !3158, file: !127, line: 230, column: 34)
!3163 = !DILocation(line: 231, column: 3, scope: !3162)
!3164 = !DILocation(line: 231, column: 26, scope: !3162)
!3165 = !DILocation(line: 232, column: 2, scope: !3162)
!3166 = !DILocation(line: 233, column: 28, scope: !3167)
!3167 = distinct !DILexicalBlock(scope: !3158, file: !127, line: 232, column: 9)
!3168 = !DILocation(line: 233, column: 22, scope: !3167)
!3169 = !DILocation(line: 233, column: 3, scope: !3167)
!3170 = !DILocation(line: 233, column: 26, scope: !3167)
!3171 = !DILocation(line: 237, column: 1, scope: !3137)
!3172 = distinct !DISubprogram(name: "z_thread_entry", scope: !3173, file: !3173, line: 30, type: !3174, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2241, retainedNodes: !3181)
!3173 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3174 = !DISubroutineType(types: !3175)
!3175 = !{null, !3176, !102, !102, !102}
!3176 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !3177, line: 46, baseType: !3178)
!3177 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3179, size: 32)
!3179 = !DISubroutineType(types: !3180)
!3180 = !{null, !102, !102, !102}
!3181 = !{!3182, !3183, !3184, !3185}
!3182 = !DILocalVariable(name: "entry", arg: 1, scope: !3172, file: !3173, line: 30, type: !3176)
!3183 = !DILocalVariable(name: "p1", arg: 2, scope: !3172, file: !3173, line: 31, type: !102)
!3184 = !DILocalVariable(name: "p2", arg: 3, scope: !3172, file: !3173, line: 31, type: !102)
!3185 = !DILocalVariable(name: "p3", arg: 4, scope: !3172, file: !3173, line: 31, type: !102)
!3186 = !DILocation(line: 0, scope: !3172)
!3187 = !DILocation(line: 36, column: 2, scope: !3172)
!3188 = !DILocation(line: 38, column: 17, scope: !3172)
!3189 = !DILocation(line: 38, column: 2, scope: !3172)
!3190 = !DILocation(line: 45, column: 2, scope: !3172)
!3191 = distinct !DISubprogram(name: "k_current_get", scope: !357, file: !357, line: 530, type: !3192, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2241, retainedNodes: !162)
!3192 = !DISubroutineType(types: !3193)
!3193 = !{!3194}
!3194 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !263, line: 347, baseType: !3195)
!3195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3196, size: 32)
!3196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !263, line: 245, size: 1024, elements: !3197)
!3197 = !{!3198, !3256, !3268, !3269, !3270, !3271, !3277, !3290}
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3196, file: !263, line: 247, baseType: !3199, size: 384)
!3199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !263, line: 57, size: 384, elements: !3200)
!3200 = !{!3201, !3225, !3232, !3233, !3234, !3243, !3244, !3245}
!3201 = !DIDerivedType(tag: DW_TAG_member, scope: !3199, file: !263, line: 60, baseType: !3202, size: 64)
!3202 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3199, file: !263, line: 60, size: 64, elements: !3203)
!3203 = !{!3204, !3219}
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3202, file: !263, line: 61, baseType: !3205, size: 64)
!3205 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !273, line: 49, baseType: !3206)
!3206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !273, line: 37, size: 64, elements: !3207)
!3207 = !{!3208, !3214}
!3208 = !DIDerivedType(tag: DW_TAG_member, scope: !3206, file: !273, line: 38, baseType: !3209, size: 32)
!3209 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3206, file: !273, line: 38, size: 32, elements: !3210)
!3210 = !{!3211, !3213}
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3209, file: !273, line: 39, baseType: !3212, size: 32)
!3212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3206, size: 32)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3209, file: !273, line: 40, baseType: !3212, size: 32)
!3214 = !DIDerivedType(tag: DW_TAG_member, scope: !3206, file: !273, line: 42, baseType: !3215, size: 32, offset: 32)
!3215 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3206, file: !273, line: 42, size: 32, elements: !3216)
!3216 = !{!3217, !3218}
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3215, file: !273, line: 43, baseType: !3212, size: 32)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3215, file: !273, line: 44, baseType: !3212, size: 32)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3202, file: !263, line: 62, baseType: !3220, size: 64)
!3220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !289, line: 49, size: 64, elements: !3221)
!3221 = !{!3222}
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3220, file: !289, line: 50, baseType: !3223, size: 64)
!3223 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3224, size: 64, elements: !294)
!3224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3220, size: 32)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3199, file: !263, line: 68, baseType: !3226, size: 32, offset: 64)
!3226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3227, size: 32)
!3227 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !299, line: 233, baseType: !3228)
!3228 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !299, line: 231, size: 64, elements: !3229)
!3229 = !{!3230}
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3228, file: !299, line: 232, baseType: !3231, size: 64)
!3231 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !273, line: 48, baseType: !3206)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3199, file: !263, line: 71, baseType: !208, size: 8, offset: 96)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3199, file: !263, line: 74, baseType: !208, size: 8, offset: 104)
!3234 = !DIDerivedType(tag: DW_TAG_member, scope: !3199, file: !263, line: 90, baseType: !3235, size: 16, offset: 112)
!3235 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3199, file: !263, line: 90, size: 16, elements: !3236)
!3236 = !{!3237, !3242}
!3237 = !DIDerivedType(tag: DW_TAG_member, scope: !3235, file: !263, line: 91, baseType: !3238, size: 16)
!3238 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3235, file: !263, line: 91, size: 16, elements: !3239)
!3239 = !{!3240, !3241}
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3238, file: !263, line: 96, baseType: !313, size: 8)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3238, file: !263, line: 97, baseType: !208, size: 8, offset: 8)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3235, file: !263, line: 100, baseType: !151, size: 16)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3199, file: !263, line: 107, baseType: !137, size: 32, offset: 128)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3199, file: !263, line: 127, baseType: !102, size: 32, offset: 160)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3199, file: !263, line: 131, baseType: !3246, size: 192, offset: 192)
!3246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !299, line: 244, size: 192, elements: !3247)
!3247 = !{!3248, !3249, !3255}
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3246, file: !299, line: 245, baseType: !3205, size: 64)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3246, file: !299, line: 246, baseType: !3250, size: 32, offset: 64)
!3250 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !299, line: 242, baseType: !3251)
!3251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3252, size: 32)
!3252 = !DISubroutineType(types: !3253)
!3253 = !{null, !3254}
!3254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3246, size: 32)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3246, file: !299, line: 249, baseType: !330, size: 64, offset: 128)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3196, file: !263, line: 250, baseType: !3257, size: 288, offset: 384)
!3257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !334, line: 25, size: 288, elements: !3258)
!3258 = !{!3259, !3260, !3261, !3262, !3263, !3264, !3265, !3266, !3267}
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3257, file: !334, line: 26, baseType: !137, size: 32)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3257, file: !334, line: 27, baseType: !137, size: 32, offset: 32)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3257, file: !334, line: 28, baseType: !137, size: 32, offset: 64)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3257, file: !334, line: 29, baseType: !137, size: 32, offset: 96)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3257, file: !334, line: 30, baseType: !137, size: 32, offset: 128)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3257, file: !334, line: 31, baseType: !137, size: 32, offset: 160)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3257, file: !334, line: 32, baseType: !137, size: 32, offset: 192)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3257, file: !334, line: 33, baseType: !137, size: 32, offset: 224)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3257, file: !334, line: 34, baseType: !137, size: 32, offset: 256)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3196, file: !263, line: 253, baseType: !102, size: 32, offset: 672)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3196, file: !263, line: 256, baseType: !3227, size: 64, offset: 704)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3196, file: !263, line: 294, baseType: !103, size: 32, offset: 768)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3196, file: !263, line: 300, baseType: !3272, size: 96, offset: 800)
!3272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !263, line: 149, size: 96, elements: !3273)
!3273 = !{!3274, !3275, !3276}
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3272, file: !263, line: 153, baseType: !22, size: 32)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3272, file: !263, line: 162, baseType: !120, size: 32, offset: 32)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3272, file: !263, line: 168, baseType: !120, size: 32, offset: 64)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3196, file: !263, line: 325, baseType: !3278, size: 32, offset: 896)
!3278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3279, size: 32)
!3279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !357, line: 5073, size: 160, elements: !3280)
!3280 = !{!3281, !3287, !3288}
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3279, file: !357, line: 5074, baseType: !3282, size: 96)
!3282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !3283)
!3283 = !{!3284, !3285, !3286}
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3282, file: !113, line: 57, baseType: !116, size: 32)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3282, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3282, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3279, file: !357, line: 5075, baseType: !3227, size: 64, offset: 96)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3279, file: !357, line: 5076, baseType: !3289, offset: 160)
!3289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !368, line: 43, elements: !162)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3196, file: !263, line: 343, baseType: !3291, size: 64, offset: 928)
!3291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !334, line: 60, size: 64, elements: !3292)
!3292 = !{!3293, !3294}
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3291, file: !334, line: 63, baseType: !137, size: 32)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3291, file: !334, line: 66, baseType: !137, size: 32, offset: 32)
!3295 = !DILocation(line: 535, column: 9, scope: !3191)
!3296 = !DILocation(line: 535, column: 2, scope: !3191)
!3297 = distinct !DISubprogram(name: "k_thread_abort", scope: !3298, file: !3298, line: 188, type: !3299, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2241, retainedNodes: !3301)
!3298 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sys_heap")
!3299 = !DISubroutineType(types: !3300)
!3300 = !{null, !3194}
!3301 = !{!3302}
!3302 = !DILocalVariable(name: "thread", arg: 1, scope: !3297, file: !3298, line: 188, type: !3194)
!3303 = !DILocation(line: 0, scope: !3297)
!3304 = !DILocation(line: 197, column: 2, scope: !3305)
!3305 = distinct !DILexicalBlock(scope: !3297, file: !3298, line: 197, column: 2)
!3306 = !{i64 2154146762}
!3307 = !DILocation(line: 198, column: 2, scope: !3297)
!3308 = !DILocation(line: 199, column: 1, scope: !3297)
!3309 = distinct !DISubprogram(name: "z_current_get", scope: !3298, file: !3298, line: 173, type: !3192, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2241, retainedNodes: !162)
!3310 = !DILocation(line: 180, column: 2, scope: !3311)
!3311 = distinct !DILexicalBlock(scope: !3309, file: !3298, line: 180, column: 2)
!3312 = !{i64 2154146694}
!3313 = !DILocation(line: 181, column: 9, scope: !3309)
!3314 = !DILocation(line: 181, column: 2, scope: !3309)
!3315 = distinct !DISubprogram(name: "sys_heap_free", scope: !3316, file: !3316, line: 163, type: !3317, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !3325)
!3316 = !DIFile(filename: "zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3317 = !DISubroutineType(types: !3318)
!3318 = !{null, !3319, !102}
!3319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3320, size: 32)
!3320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !3321)
!3321 = !{!3322, !3323, !3324}
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3320, file: !113, line: 57, baseType: !2251, size: 32)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3320, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3320, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!3325 = !{!3326, !3327, !3328, !3329}
!3326 = !DILocalVariable(name: "heap", arg: 1, scope: !3315, file: !3316, line: 163, type: !3319)
!3327 = !DILocalVariable(name: "mem", arg: 2, scope: !3315, file: !3316, line: 163, type: !102)
!3328 = !DILocalVariable(name: "h", scope: !3315, file: !3316, line: 168, type: !2251)
!3329 = !DILocalVariable(name: "c", scope: !3315, file: !3316, line: 169, type: !2256)
!3330 = !DILocation(line: 0, scope: !3315)
!3331 = !DILocation(line: 165, column: 10, scope: !3332)
!3332 = distinct !DILexicalBlock(scope: !3315, file: !3316, line: 165, column: 6)
!3333 = !DILocation(line: 165, column: 6, scope: !3315)
!3334 = !DILocation(line: 168, column: 27, scope: !3315)
!3335 = !DILocation(line: 169, column: 16, scope: !3315)
!3336 = !{i32 0, i32 536870912}
!3337 = !DILocation(line: 187, column: 2, scope: !3315)
!3338 = !DILocation(line: 189, column: 44, scope: !3315)
!3339 = !{i32 0, i32 32768}
!3340 = !DILocation(line: 189, column: 24, scope: !3315)
!3341 = !DILocation(line: 189, column: 5, scope: !3315)
!3342 = !DILocation(line: 189, column: 21, scope: !3315)
!3343 = !DILocation(line: 197, column: 2, scope: !3315)
!3344 = !DILocation(line: 198, column: 1, scope: !3315)
!3345 = distinct !DISubprogram(name: "mem_to_chunkid", scope: !3316, file: !3316, line: 157, type: !3346, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !3348)
!3346 = !DISubroutineType(types: !3347)
!3347 = !{!2256, !2251, !102}
!3348 = !{!3349, !3350, !3351, !3352}
!3349 = !DILocalVariable(name: "h", arg: 1, scope: !3345, file: !3316, line: 157, type: !2251)
!3350 = !DILocalVariable(name: "p", arg: 2, scope: !3345, file: !3316, line: 157, type: !102)
!3351 = !DILocalVariable(name: "mem", scope: !3345, file: !3316, line: 159, type: !1742)
!3352 = !DILocalVariable(name: "base", scope: !3345, file: !3316, line: 159, type: !1742)
!3353 = !DILocation(line: 0, scope: !3345)
!3354 = !DILocation(line: 159, column: 39, scope: !3345)
!3355 = !DILocation(line: 160, column: 14, scope: !3345)
!3356 = !DILocation(line: 160, column: 38, scope: !3345)
!3357 = !DILocation(line: 160, column: 46, scope: !3345)
!3358 = !DILocation(line: 160, column: 2, scope: !3345)
!3359 = distinct !DISubprogram(name: "set_chunk_used", scope: !142, file: !142, line: 147, type: !3360, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !3362)
!3360 = !DISubroutineType(types: !3361)
!3361 = !{null, !2251, !2256, !211}
!3362 = !{!3363, !3364, !3365, !3366, !3367}
!3363 = !DILocalVariable(name: "h", arg: 1, scope: !3359, file: !142, line: 147, type: !2251)
!3364 = !DILocalVariable(name: "c", arg: 2, scope: !3359, file: !142, line: 147, type: !2256)
!3365 = !DILocalVariable(name: "used", arg: 3, scope: !3359, file: !142, line: 147, type: !211)
!3366 = !DILocalVariable(name: "buf", scope: !3359, file: !142, line: 149, type: !2246)
!3367 = !DILocalVariable(name: "cmem", scope: !3359, file: !142, line: 150, type: !102)
!3368 = !DILocation(line: 0, scope: !3359)
!3369 = !DILocation(line: 149, column: 22, scope: !3359)
!3370 = !DILocation(line: 0, scope: !3371)
!3371 = distinct !DILexicalBlock(scope: !3372, file: !142, line: 159, column: 7)
!3372 = distinct !DILexicalBlock(scope: !3373, file: !142, line: 158, column: 9)
!3373 = distinct !DILexicalBlock(scope: !3359, file: !142, line: 152, column: 6)
!3374 = !DILocation(line: 159, column: 7, scope: !3372)
!3375 = !DILocation(line: 165, column: 1, scope: !3359)
!3376 = distinct !DISubprogram(name: "chunk_size", scope: !142, file: !142, line: 142, type: !3377, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !3380)
!3377 = !DISubroutineType(types: !3378)
!3378 = !{!3379, !2251, !2256}
!3379 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunksz_t", file: !142, line: 62, baseType: !137)
!3380 = !{!3381, !3382}
!3381 = !DILocalVariable(name: "h", arg: 1, scope: !3376, file: !142, line: 142, type: !2251)
!3382 = !DILocalVariable(name: "c", arg: 2, scope: !3376, file: !142, line: 142, type: !2256)
!3383 = !DILocation(line: 0, scope: !3376)
!3384 = !DILocation(line: 144, column: 9, scope: !3376)
!3385 = !DILocation(line: 144, column: 42, scope: !3376)
!3386 = !DILocation(line: 144, column: 2, scope: !3376)
!3387 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !142, file: !142, line: 245, type: !3388, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !3390)
!3388 = !DISubroutineType(types: !3389)
!3389 = !{!120, !2251, !3379}
!3390 = !{!3391, !3392}
!3391 = !DILocalVariable(name: "h", arg: 1, scope: !3387, file: !142, line: 245, type: !2251)
!3392 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !3387, file: !142, line: 245, type: !3379)
!3393 = !DILocation(line: 0, scope: !3387)
!3394 = !DILocation(line: 247, column: 20, scope: !3387)
!3395 = !DILocation(line: 247, column: 33, scope: !3387)
!3396 = !DILocation(line: 247, column: 2, scope: !3387)
!3397 = distinct !DISubprogram(name: "free_chunk", scope: !3316, file: !3316, line: 133, type: !3398, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !3400)
!3398 = !DISubroutineType(types: !3399)
!3399 = !{null, !2251, !2256}
!3400 = !{!3401, !3402}
!3401 = !DILocalVariable(name: "h", arg: 1, scope: !3397, file: !3316, line: 133, type: !2251)
!3402 = !DILocalVariable(name: "c", arg: 2, scope: !3397, file: !3316, line: 133, type: !2256)
!3403 = !DILocation(line: 0, scope: !3397)
!3404 = !DILocation(line: 136, column: 21, scope: !3405)
!3405 = distinct !DILexicalBlock(scope: !3397, file: !3316, line: 136, column: 6)
!3406 = !DILocation(line: 136, column: 7, scope: !3405)
!3407 = !DILocation(line: 136, column: 6, scope: !3397)
!3408 = !DILocation(line: 137, column: 3, scope: !3409)
!3409 = distinct !DILexicalBlock(scope: !3405, file: !3316, line: 136, column: 41)
!3410 = !DILocation(line: 138, column: 22, scope: !3409)
!3411 = !DILocation(line: 138, column: 3, scope: !3409)
!3412 = !DILocation(line: 139, column: 2, scope: !3409)
!3413 = !DILocation(line: 142, column: 21, scope: !3414)
!3414 = distinct !DILexicalBlock(scope: !3397, file: !3316, line: 142, column: 6)
!3415 = !{i32 -65535, i32 536903678}
!3416 = !DILocation(line: 142, column: 7, scope: !3414)
!3417 = !DILocation(line: 142, column: 6, scope: !3397)
!3418 = !DILocation(line: 143, column: 3, scope: !3419)
!3419 = distinct !DILexicalBlock(scope: !3414, file: !3316, line: 142, column: 40)
!3420 = !DILocation(line: 144, column: 19, scope: !3419)
!3421 = !DILocation(line: 144, column: 3, scope: !3419)
!3422 = !DILocation(line: 145, column: 7, scope: !3419)
!3423 = !DILocation(line: 146, column: 2, scope: !3419)
!3424 = !DILocation(line: 148, column: 2, scope: !3397)
!3425 = !DILocation(line: 149, column: 1, scope: !3397)
!3426 = distinct !DISubprogram(name: "right_chunk", scope: !142, file: !142, line: 204, type: !3427, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !3429)
!3427 = !DISubroutineType(types: !3428)
!3428 = !{!2256, !2251, !2256}
!3429 = !{!3430, !3431}
!3430 = !DILocalVariable(name: "h", arg: 1, scope: !3426, file: !142, line: 204, type: !2251)
!3431 = !DILocalVariable(name: "c", arg: 2, scope: !3426, file: !142, line: 204, type: !2256)
!3432 = !DILocation(line: 0, scope: !3426)
!3433 = !DILocation(line: 206, column: 13, scope: !3426)
!3434 = !DILocation(line: 206, column: 11, scope: !3426)
!3435 = !DILocation(line: 206, column: 2, scope: !3426)
!3436 = distinct !DISubprogram(name: "chunk_used", scope: !142, file: !142, line: 137, type: !3437, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !3439)
!3437 = !DISubroutineType(types: !3438)
!3438 = !{!211, !2251, !2256}
!3439 = !{!3440, !3441}
!3440 = !DILocalVariable(name: "h", arg: 1, scope: !3436, file: !142, line: 137, type: !2251)
!3441 = !DILocalVariable(name: "c", arg: 2, scope: !3436, file: !142, line: 137, type: !2256)
!3442 = !DILocation(line: 0, scope: !3436)
!3443 = !DILocation(line: 139, column: 9, scope: !3436)
!3444 = !DILocation(line: 139, column: 42, scope: !3436)
!3445 = !DILocation(line: 139, column: 2, scope: !3436)
!3446 = distinct !DISubprogram(name: "free_list_remove", scope: !3316, file: !3316, line: 60, type: !3398, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !3447)
!3447 = !{!3448, !3449, !3450}
!3448 = !DILocalVariable(name: "h", arg: 1, scope: !3446, file: !3316, line: 60, type: !2251)
!3449 = !DILocalVariable(name: "c", arg: 2, scope: !3446, file: !3316, line: 60, type: !2256)
!3450 = !DILocalVariable(name: "bidx", scope: !3451, file: !3316, line: 63, type: !103)
!3451 = distinct !DILexicalBlock(scope: !3452, file: !3316, line: 62, column: 31)
!3452 = distinct !DILexicalBlock(scope: !3446, file: !3316, line: 62, column: 6)
!3453 = !DILocation(line: 0, scope: !3446)
!3454 = !DILocation(line: 63, column: 28, scope: !3451)
!3455 = !DILocation(line: 63, column: 14, scope: !3451)
!3456 = !DILocation(line: 0, scope: !3451)
!3457 = !DILocation(line: 64, column: 3, scope: !3451)
!3458 = !DILocation(line: 66, column: 1, scope: !3446)
!3459 = distinct !DISubprogram(name: "merge_chunks", scope: !3316, file: !3316, line: 125, type: !3460, scopeLine: 126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !3462)
!3460 = !DISubroutineType(types: !3461)
!3461 = !{null, !2251, !2256, !2256}
!3462 = !{!3463, !3464, !3465, !3466}
!3463 = !DILocalVariable(name: "h", arg: 1, scope: !3459, file: !3316, line: 125, type: !2251)
!3464 = !DILocalVariable(name: "lc", arg: 2, scope: !3459, file: !3316, line: 125, type: !2256)
!3465 = !DILocalVariable(name: "rc", arg: 3, scope: !3459, file: !3316, line: 125, type: !2256)
!3466 = !DILocalVariable(name: "newsz", scope: !3459, file: !3316, line: 127, type: !3379)
!3467 = !DILocation(line: 0, scope: !3459)
!3468 = !DILocation(line: 127, column: 20, scope: !3459)
!3469 = !DILocation(line: 127, column: 40, scope: !3459)
!3470 = !DILocation(line: 127, column: 38, scope: !3459)
!3471 = !DILocation(line: 129, column: 2, scope: !3459)
!3472 = !DILocation(line: 130, column: 25, scope: !3459)
!3473 = !DILocation(line: 130, column: 2, scope: !3459)
!3474 = !DILocation(line: 131, column: 1, scope: !3459)
!3475 = distinct !DISubprogram(name: "left_chunk", scope: !142, file: !142, line: 199, type: !3427, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !3476)
!3476 = !{!3477, !3478}
!3477 = !DILocalVariable(name: "h", arg: 1, scope: !3475, file: !142, line: 199, type: !2251)
!3478 = !DILocalVariable(name: "c", arg: 2, scope: !3475, file: !142, line: 199, type: !2256)
!3479 = !DILocation(line: 0, scope: !3475)
!3480 = !DILocation(line: 201, column: 13, scope: !3475)
!3481 = !DILocation(line: 201, column: 11, scope: !3475)
!3482 = !DILocation(line: 201, column: 2, scope: !3475)
!3483 = distinct !DISubprogram(name: "free_list_add", scope: !3316, file: !3316, line: 98, type: !3398, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !3484)
!3484 = !{!3485, !3486, !3487}
!3485 = !DILocalVariable(name: "h", arg: 1, scope: !3483, file: !3316, line: 98, type: !2251)
!3486 = !DILocalVariable(name: "c", arg: 2, scope: !3483, file: !3316, line: 98, type: !2256)
!3487 = !DILocalVariable(name: "bidx", scope: !3488, file: !3316, line: 101, type: !103)
!3488 = distinct !DILexicalBlock(scope: !3489, file: !3316, line: 100, column: 31)
!3489 = distinct !DILexicalBlock(scope: !3483, file: !3316, line: 100, column: 6)
!3490 = !DILocation(line: 0, scope: !3483)
!3491 = !DILocation(line: 101, column: 28, scope: !3488)
!3492 = !DILocation(line: 101, column: 14, scope: !3488)
!3493 = !DILocation(line: 0, scope: !3488)
!3494 = !DILocation(line: 102, column: 3, scope: !3488)
!3495 = !DILocation(line: 104, column: 1, scope: !3483)
!3496 = distinct !DISubprogram(name: "bucket_idx", scope: !142, file: !142, line: 250, type: !3497, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !3499)
!3497 = !DISubroutineType(types: !3498)
!3498 = !{!103, !2251, !3379}
!3499 = !{!3500, !3501, !3502}
!3500 = !DILocalVariable(name: "h", arg: 1, scope: !3496, file: !142, line: 250, type: !2251)
!3501 = !DILocalVariable(name: "sz", arg: 2, scope: !3496, file: !142, line: 250, type: !3379)
!3502 = !DILocalVariable(name: "usable_sz", scope: !3496, file: !142, line: 252, type: !32)
!3503 = !DILocation(line: 0, scope: !3496)
!3504 = !DILocation(line: 252, column: 32, scope: !3496)
!3505 = !DILocation(line: 252, column: 30, scope: !3496)
!3506 = !DILocation(line: 252, column: 50, scope: !3496)
!3507 = !DILocation(line: 253, column: 14, scope: !3496)
!3508 = !{i32 0, i32 33}
!3509 = !DILocation(line: 253, column: 12, scope: !3496)
!3510 = !DILocation(line: 253, column: 2, scope: !3496)
!3511 = distinct !DISubprogram(name: "free_list_add_bidx", scope: !3316, file: !3316, line: 68, type: !3512, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !3514)
!3512 = !DISubroutineType(types: !3513)
!3513 = !{null, !2251, !2256, !103}
!3514 = !{!3515, !3516, !3517, !3518, !3520, !3523}
!3515 = !DILocalVariable(name: "h", arg: 1, scope: !3511, file: !3316, line: 68, type: !2251)
!3516 = !DILocalVariable(name: "c", arg: 2, scope: !3511, file: !3316, line: 68, type: !2256)
!3517 = !DILocalVariable(name: "bidx", arg: 3, scope: !3511, file: !3316, line: 68, type: !103)
!3518 = !DILocalVariable(name: "b", scope: !3511, file: !3316, line: 70, type: !3519)
!3519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2264, size: 32)
!3520 = !DILocalVariable(name: "second", scope: !3521, file: !3316, line: 84, type: !2256)
!3521 = distinct !DILexicalBlock(scope: !3522, file: !3316, line: 80, column: 9)
!3522 = distinct !DILexicalBlock(scope: !3511, file: !3316, line: 72, column: 6)
!3523 = !DILocalVariable(name: "first", scope: !3521, file: !3316, line: 85, type: !2256)
!3524 = !DILocation(line: 0, scope: !3511)
!3525 = !DILocation(line: 72, column: 9, scope: !3522)
!3526 = !DILocation(line: 72, column: 14, scope: !3522)
!3527 = !DILocation(line: 72, column: 6, scope: !3511)
!3528 = !DILocation(line: 76, column: 23, scope: !3529)
!3529 = distinct !DILexicalBlock(scope: !3522, file: !3316, line: 72, column: 21)
!3530 = !DILocation(line: 76, column: 6, scope: !3529)
!3531 = !DILocation(line: 76, column: 20, scope: !3529)
!3532 = !DILocation(line: 77, column: 11, scope: !3529)
!3533 = !DILocation(line: 78, column: 3, scope: !3529)
!3534 = !DILocation(line: 79, column: 3, scope: !3529)
!3535 = !DILocation(line: 80, column: 2, scope: !3529)
!3536 = !DILocation(line: 0, scope: !3521)
!3537 = !DILocation(line: 85, column: 21, scope: !3521)
!3538 = !{i32 0, i32 65536}
!3539 = !DILocation(line: 87, column: 3, scope: !3521)
!3540 = !DILocation(line: 88, column: 3, scope: !3521)
!3541 = !DILocation(line: 89, column: 3, scope: !3521)
!3542 = !DILocation(line: 90, column: 3, scope: !3521)
!3543 = !DILocation(line: 94, column: 39, scope: !3511)
!3544 = !DILocation(line: 94, column: 19, scope: !3511)
!3545 = !DILocation(line: 94, column: 5, scope: !3511)
!3546 = !DILocation(line: 94, column: 16, scope: !3511)
!3547 = !DILocation(line: 96, column: 1, scope: !3511)
!3548 = distinct !DISubprogram(name: "set_prev_free_chunk", scope: !142, file: !142, line: 187, type: !3460, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !3549)
!3549 = !{!3550, !3551, !3552}
!3550 = !DILocalVariable(name: "h", arg: 1, scope: !3548, file: !142, line: 187, type: !2251)
!3551 = !DILocalVariable(name: "c", arg: 2, scope: !3548, file: !142, line: 187, type: !2256)
!3552 = !DILocalVariable(name: "prev", arg: 3, scope: !3548, file: !142, line: 188, type: !2256)
!3553 = !DILocation(line: 0, scope: !3548)
!3554 = !DILocation(line: 190, column: 2, scope: !3548)
!3555 = !DILocation(line: 191, column: 1, scope: !3548)
!3556 = distinct !DISubprogram(name: "set_next_free_chunk", scope: !142, file: !142, line: 193, type: !3460, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !3557)
!3557 = !{!3558, !3559, !3560}
!3558 = !DILocalVariable(name: "h", arg: 1, scope: !3556, file: !142, line: 193, type: !2251)
!3559 = !DILocalVariable(name: "c", arg: 2, scope: !3556, file: !142, line: 193, type: !2256)
!3560 = !DILocalVariable(name: "next", arg: 3, scope: !3556, file: !142, line: 194, type: !2256)
!3561 = !DILocation(line: 0, scope: !3556)
!3562 = !DILocation(line: 196, column: 2, scope: !3556)
!3563 = !DILocation(line: 197, column: 1, scope: !3556)
!3564 = distinct !DISubprogram(name: "prev_free_chunk", scope: !142, file: !142, line: 177, type: !3427, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !3565)
!3565 = !{!3566, !3567}
!3566 = !DILocalVariable(name: "h", arg: 1, scope: !3564, file: !142, line: 177, type: !2251)
!3567 = !DILocalVariable(name: "c", arg: 2, scope: !3564, file: !142, line: 177, type: !2256)
!3568 = !DILocation(line: 0, scope: !3564)
!3569 = !DILocation(line: 179, column: 9, scope: !3564)
!3570 = !DILocation(line: 179, column: 2, scope: !3564)
!3571 = distinct !DISubprogram(name: "chunk_field", scope: !142, file: !142, line: 107, type: !3572, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !3574)
!3572 = !DISubroutineType(types: !3573)
!3573 = !{!2256, !2251, !2256, !141}
!3574 = !{!3575, !3576, !3577, !3578, !3579}
!3575 = !DILocalVariable(name: "h", arg: 1, scope: !3571, file: !142, line: 107, type: !2251)
!3576 = !DILocalVariable(name: "c", arg: 2, scope: !3571, file: !142, line: 107, type: !2256)
!3577 = !DILocalVariable(name: "f", arg: 3, scope: !3571, file: !142, line: 108, type: !141)
!3578 = !DILocalVariable(name: "buf", scope: !3571, file: !142, line: 110, type: !2246)
!3579 = !DILocalVariable(name: "cmem", scope: !3571, file: !142, line: 111, type: !102)
!3580 = !DILocation(line: 0, scope: !3571)
!3581 = !DILocation(line: 110, column: 22, scope: !3571)
!3582 = !DILocation(line: 111, column: 15, scope: !3571)
!3583 = !DILocation(line: 116, column: 11, scope: !3584)
!3584 = distinct !DILexicalBlock(scope: !3585, file: !142, line: 115, column: 9)
!3585 = distinct !DILexicalBlock(scope: !3571, file: !142, line: 113, column: 6)
!3586 = !DILocation(line: 116, column: 10, scope: !3584)
!3587 = !DILocation(line: 118, column: 1, scope: !3571)
!3588 = distinct !DISubprogram(name: "chunk_buf", scope: !142, file: !142, line: 101, type: !3589, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !3591)
!3589 = !DISubroutineType(types: !3590)
!3590 = !{!2246, !2251}
!3591 = !{!3592}
!3592 = !DILocalVariable(name: "h", arg: 1, scope: !3588, file: !142, line: 101, type: !2251)
!3593 = !DILocation(line: 0, scope: !3588)
!3594 = !DILocation(line: 104, column: 9, scope: !3588)
!3595 = !DILocation(line: 104, column: 2, scope: !3588)
!3596 = distinct !DISubprogram(name: "chunk_set", scope: !142, file: !142, line: 120, type: !3597, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !3599)
!3597 = !DISubroutineType(types: !3598)
!3598 = !{null, !2251, !2256, !141, !2256}
!3599 = !{!3600, !3601, !3602, !3603, !3604, !3605}
!3600 = !DILocalVariable(name: "h", arg: 1, scope: !3596, file: !142, line: 120, type: !2251)
!3601 = !DILocalVariable(name: "c", arg: 2, scope: !3596, file: !142, line: 120, type: !2256)
!3602 = !DILocalVariable(name: "f", arg: 3, scope: !3596, file: !142, line: 121, type: !141)
!3603 = !DILocalVariable(name: "val", arg: 4, scope: !3596, file: !142, line: 121, type: !2256)
!3604 = !DILocalVariable(name: "buf", scope: !3596, file: !142, line: 125, type: !2246)
!3605 = !DILocalVariable(name: "cmem", scope: !3596, file: !142, line: 126, type: !102)
!3606 = !DILocation(line: 0, scope: !3596)
!3607 = !DILocation(line: 125, column: 22, scope: !3596)
!3608 = !DILocation(line: 126, column: 15, scope: !3596)
!3609 = !DILocation(line: 133, column: 27, scope: !3610)
!3610 = distinct !DILexicalBlock(scope: !3611, file: !142, line: 131, column: 9)
!3611 = distinct !DILexicalBlock(scope: !3596, file: !142, line: 128, column: 6)
!3612 = !DILocation(line: 133, column: 4, scope: !3610)
!3613 = !DILocation(line: 133, column: 3, scope: !3610)
!3614 = !DILocation(line: 133, column: 25, scope: !3610)
!3615 = !DILocation(line: 135, column: 1, scope: !3596)
!3616 = distinct !DISubprogram(name: "min_chunk_size", scope: !142, file: !142, line: 240, type: !3617, scopeLine: 241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !3619)
!3617 = !DISubroutineType(types: !3618)
!3618 = !{!3379, !2251}
!3619 = !{!3620}
!3620 = !DILocalVariable(name: "h", arg: 1, scope: !3616, file: !142, line: 240, type: !2251)
!3621 = !DILocation(line: 0, scope: !3616)
!3622 = !DILocation(line: 242, column: 9, scope: !3616)
!3623 = !DILocation(line: 242, column: 2, scope: !3616)
!3624 = distinct !DISubprogram(name: "bytes_to_chunksz", scope: !142, file: !142, line: 235, type: !3625, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !3627)
!3625 = !DISubroutineType(types: !3626)
!3626 = !{!3379, !2251, !120}
!3627 = !{!3628, !3629}
!3628 = !DILocalVariable(name: "h", arg: 1, scope: !3624, file: !142, line: 235, type: !2251)
!3629 = !DILocalVariable(name: "bytes", arg: 2, scope: !3624, file: !142, line: 235, type: !120)
!3630 = !DILocation(line: 0, scope: !3624)
!3631 = !DILocation(line: 237, column: 39, scope: !3624)
!3632 = !DILocation(line: 237, column: 9, scope: !3624)
!3633 = !DILocation(line: 237, column: 2, scope: !3624)
!3634 = distinct !DISubprogram(name: "chunksz", scope: !142, file: !142, line: 230, type: !3635, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !3637)
!3635 = !DISubroutineType(types: !3636)
!3636 = !{!3379, !120}
!3637 = !{!3638}
!3638 = !DILocalVariable(name: "bytes", arg: 1, scope: !3634, file: !142, line: 230, type: !120)
!3639 = !DILocation(line: 0, scope: !3634)
!3640 = !DILocation(line: 232, column: 29, scope: !3634)
!3641 = !DILocation(line: 232, column: 35, scope: !3634)
!3642 = !DILocation(line: 232, column: 2, scope: !3634)
!3643 = distinct !DISubprogram(name: "set_chunk_size", scope: !142, file: !142, line: 172, type: !3644, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !3646)
!3644 = !DISubroutineType(types: !3645)
!3645 = !{null, !2251, !2256, !3379}
!3646 = !{!3647, !3648, !3649}
!3647 = !DILocalVariable(name: "h", arg: 1, scope: !3643, file: !142, line: 172, type: !2251)
!3648 = !DILocalVariable(name: "c", arg: 2, scope: !3643, file: !142, line: 172, type: !2256)
!3649 = !DILocalVariable(name: "size", arg: 3, scope: !3643, file: !142, line: 172, type: !3379)
!3650 = !DILocation(line: 0, scope: !3643)
!3651 = !DILocation(line: 174, column: 38, scope: !3643)
!3652 = !DILocation(line: 174, column: 2, scope: !3643)
!3653 = !DILocation(line: 175, column: 1, scope: !3643)
!3654 = distinct !DISubprogram(name: "set_left_chunk_size", scope: !142, file: !142, line: 209, type: !3644, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !3655)
!3655 = !{!3656, !3657, !3658}
!3656 = !DILocalVariable(name: "h", arg: 1, scope: !3654, file: !142, line: 209, type: !2251)
!3657 = !DILocalVariable(name: "c", arg: 2, scope: !3654, file: !142, line: 209, type: !2256)
!3658 = !DILocalVariable(name: "size", arg: 3, scope: !3654, file: !142, line: 210, type: !3379)
!3659 = !DILocation(line: 0, scope: !3654)
!3660 = !DILocation(line: 212, column: 2, scope: !3654)
!3661 = !DILocation(line: 213, column: 1, scope: !3654)
!3662 = distinct !DISubprogram(name: "free_list_remove_bidx", scope: !3316, file: !3316, line: 34, type: !3512, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !3663)
!3663 = !{!3664, !3665, !3666, !3667, !3668, !3671}
!3664 = !DILocalVariable(name: "h", arg: 1, scope: !3662, file: !3316, line: 34, type: !2251)
!3665 = !DILocalVariable(name: "c", arg: 2, scope: !3662, file: !3316, line: 34, type: !2256)
!3666 = !DILocalVariable(name: "bidx", arg: 3, scope: !3662, file: !3316, line: 34, type: !103)
!3667 = !DILocalVariable(name: "b", scope: !3662, file: !3316, line: 36, type: !3519)
!3668 = !DILocalVariable(name: "first", scope: !3669, file: !3316, line: 47, type: !2256)
!3669 = distinct !DILexicalBlock(scope: !3670, file: !3316, line: 46, column: 9)
!3670 = distinct !DILexicalBlock(scope: !3662, file: !3316, line: 42, column: 6)
!3671 = !DILocalVariable(name: "second", scope: !3669, file: !3316, line: 48, type: !2256)
!3672 = !DILocation(line: 0, scope: !3662)
!3673 = !DILocation(line: 36, column: 29, scope: !3662)
!3674 = !DILocation(line: 42, column: 6, scope: !3670)
!3675 = !DILocation(line: 42, column: 28, scope: !3670)
!3676 = !DILocation(line: 42, column: 6, scope: !3662)
!3677 = !DILocation(line: 44, column: 24, scope: !3678)
!3678 = distinct !DILexicalBlock(scope: !3670, file: !3316, line: 42, column: 34)
!3679 = !DILocation(line: 44, column: 23, scope: !3678)
!3680 = !DILocation(line: 44, column: 6, scope: !3678)
!3681 = !DILocation(line: 44, column: 20, scope: !3678)
!3682 = !DILocation(line: 45, column: 6, scope: !3678)
!3683 = !DILocation(line: 45, column: 11, scope: !3678)
!3684 = !DILocation(line: 46, column: 2, scope: !3678)
!3685 = !DILocation(line: 47, column: 21, scope: !3669)
!3686 = !DILocation(line: 0, scope: !3669)
!3687 = !DILocation(line: 50, column: 6, scope: !3669)
!3688 = !DILocation(line: 50, column: 11, scope: !3669)
!3689 = !DILocation(line: 51, column: 3, scope: !3669)
!3690 = !DILocation(line: 52, column: 3, scope: !3669)
!3691 = !DILocation(line: 56, column: 39, scope: !3662)
!3692 = !DILocation(line: 56, column: 19, scope: !3662)
!3693 = !DILocation(line: 56, column: 5, scope: !3662)
!3694 = !DILocation(line: 56, column: 16, scope: !3662)
!3695 = !DILocation(line: 58, column: 1, scope: !3662)
!3696 = distinct !DISubprogram(name: "next_free_chunk", scope: !142, file: !142, line: 182, type: !3427, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !3697)
!3697 = !{!3698, !3699}
!3698 = !DILocalVariable(name: "h", arg: 1, scope: !3696, file: !142, line: 182, type: !2251)
!3699 = !DILocalVariable(name: "c", arg: 2, scope: !3696, file: !142, line: 182, type: !2256)
!3700 = !DILocation(line: 0, scope: !3696)
!3701 = !DILocation(line: 184, column: 9, scope: !3696)
!3702 = !DILocation(line: 184, column: 2, scope: !3696)
!3703 = distinct !DISubprogram(name: "sys_heap_usable_size", scope: !3316, file: !3316, line: 200, type: !3704, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !3706)
!3704 = !DISubroutineType(types: !3705)
!3705 = !{!120, !3319, !102}
!3706 = !{!3707, !3708, !3709, !3710, !3711, !3712, !3713}
!3707 = !DILocalVariable(name: "heap", arg: 1, scope: !3703, file: !3316, line: 200, type: !3319)
!3708 = !DILocalVariable(name: "mem", arg: 2, scope: !3703, file: !3316, line: 200, type: !102)
!3709 = !DILocalVariable(name: "h", scope: !3703, file: !3316, line: 202, type: !2251)
!3710 = !DILocalVariable(name: "c", scope: !3703, file: !3316, line: 203, type: !2256)
!3711 = !DILocalVariable(name: "addr", scope: !3703, file: !3316, line: 204, type: !120)
!3712 = !DILocalVariable(name: "chunk_base", scope: !3703, file: !3316, line: 205, type: !120)
!3713 = !DILocalVariable(name: "chunk_sz", scope: !3703, file: !3316, line: 206, type: !120)
!3714 = !DILocation(line: 0, scope: !3703)
!3715 = !DILocation(line: 202, column: 27, scope: !3703)
!3716 = !DILocation(line: 203, column: 16, scope: !3703)
!3717 = !DILocation(line: 204, column: 16, scope: !3703)
!3718 = !DILocation(line: 205, column: 31, scope: !3703)
!3719 = !DILocation(line: 205, column: 22, scope: !3703)
!3720 = !DILocation(line: 206, column: 20, scope: !3703)
!3721 = !DILocation(line: 206, column: 37, scope: !3703)
!3722 = !DILocation(line: 208, column: 26, scope: !3703)
!3723 = !DILocation(line: 208, column: 18, scope: !3703)
!3724 = !DILocation(line: 208, column: 2, scope: !3703)
!3725 = distinct !DISubprogram(name: "sys_heap_alloc", scope: !3316, file: !3316, line: 263, type: !3726, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !3728)
!3726 = !DISubroutineType(types: !3727)
!3727 = !{!102, !3319, !120}
!3728 = !{!3729, !3730, !3731, !3732, !3733, !3734}
!3729 = !DILocalVariable(name: "heap", arg: 1, scope: !3725, file: !3316, line: 263, type: !3319)
!3730 = !DILocalVariable(name: "bytes", arg: 2, scope: !3725, file: !3316, line: 263, type: !120)
!3731 = !DILocalVariable(name: "h", scope: !3725, file: !3316, line: 265, type: !2251)
!3732 = !DILocalVariable(name: "mem", scope: !3725, file: !3316, line: 266, type: !102)
!3733 = !DILocalVariable(name: "chunk_sz", scope: !3725, file: !3316, line: 272, type: !3379)
!3734 = !DILocalVariable(name: "c", scope: !3725, file: !3316, line: 273, type: !2256)
!3735 = !DILocation(line: 0, scope: !3725)
!3736 = !DILocation(line: 265, column: 27, scope: !3725)
!3737 = !DILocation(line: 268, column: 12, scope: !3738)
!3738 = distinct !DILexicalBlock(scope: !3725, file: !3316, line: 268, column: 6)
!3739 = !DILocation(line: 268, column: 18, scope: !3738)
!3740 = !DILocation(line: 268, column: 21, scope: !3738)
!3741 = !DILocation(line: 268, column: 6, scope: !3725)
!3742 = !DILocation(line: 272, column: 23, scope: !3725)
!3743 = !DILocation(line: 273, column: 16, scope: !3725)
!3744 = !DILocation(line: 274, column: 8, scope: !3745)
!3745 = distinct !DILexicalBlock(scope: !3725, file: !3316, line: 274, column: 6)
!3746 = !DILocation(line: 274, column: 6, scope: !3725)
!3747 = !DILocation(line: 279, column: 6, scope: !3748)
!3748 = distinct !DILexicalBlock(scope: !3725, file: !3316, line: 279, column: 6)
!3749 = !DILocation(line: 279, column: 23, scope: !3748)
!3750 = !DILocation(line: 279, column: 6, scope: !3725)
!3751 = !DILocation(line: 280, column: 24, scope: !3752)
!3752 = distinct !DILexicalBlock(scope: !3748, file: !3316, line: 279, column: 35)
!3753 = !DILocation(line: 280, column: 3, scope: !3752)
!3754 = !DILocation(line: 281, column: 3, scope: !3752)
!3755 = !DILocation(line: 282, column: 2, scope: !3752)
!3756 = !DILocation(line: 284, column: 2, scope: !3725)
!3757 = !DILocation(line: 286, column: 8, scope: !3725)
!3758 = !DILocation(line: 289, column: 50, scope: !3725)
!3759 = !DILocation(line: 289, column: 30, scope: !3725)
!3760 = !{i32 -4, i32 262133}
!3761 = !DILocation(line: 289, column: 2, scope: !3725)
!3762 = !DILocation(line: 298, column: 2, scope: !3725)
!3763 = !DILocation(line: 299, column: 1, scope: !3725)
!3764 = distinct !DISubprogram(name: "size_too_big", scope: !142, file: !142, line: 256, type: !3765, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !3767)
!3765 = !DISubroutineType(types: !3766)
!3766 = !{!211, !2251, !120}
!3767 = !{!3768, !3769}
!3768 = !DILocalVariable(name: "h", arg: 1, scope: !3764, file: !142, line: 256, type: !2251)
!3769 = !DILocalVariable(name: "bytes", arg: 2, scope: !3764, file: !142, line: 256, type: !120)
!3770 = !DILocation(line: 0, scope: !3764)
!3771 = !DILocation(line: 262, column: 16, scope: !3764)
!3772 = !DILocation(line: 262, column: 36, scope: !3764)
!3773 = !DILocation(line: 262, column: 30, scope: !3764)
!3774 = !DILocation(line: 262, column: 2, scope: !3764)
!3775 = distinct !DISubprogram(name: "alloc_chunk", scope: !3316, file: !3316, line: 211, type: !3776, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !3778)
!3776 = !DISubroutineType(types: !3777)
!3777 = !{!2256, !2251, !3379}
!3778 = !{!3779, !3780, !3781, !3782, !3783, !3786, !3787, !3789, !3790, !3793}
!3779 = !DILocalVariable(name: "h", arg: 1, scope: !3775, file: !3316, line: 211, type: !2251)
!3780 = !DILocalVariable(name: "sz", arg: 2, scope: !3775, file: !3316, line: 211, type: !3379)
!3781 = !DILocalVariable(name: "bi", scope: !3775, file: !3316, line: 213, type: !103)
!3782 = !DILocalVariable(name: "b", scope: !3775, file: !3316, line: 214, type: !3519)
!3783 = !DILocalVariable(name: "first", scope: !3784, file: !3316, line: 233, type: !2256)
!3784 = distinct !DILexicalBlock(scope: !3785, file: !3316, line: 232, column: 15)
!3785 = distinct !DILexicalBlock(scope: !3775, file: !3316, line: 232, column: 6)
!3786 = !DILocalVariable(name: "i", scope: !3784, file: !3316, line: 234, type: !103)
!3787 = !DILocalVariable(name: "c", scope: !3788, file: !3316, line: 236, type: !2256)
!3788 = distinct !DILexicalBlock(scope: !3784, file: !3316, line: 235, column: 6)
!3789 = !DILocalVariable(name: "bmask", scope: !3775, file: !3316, line: 249, type: !137)
!3790 = !DILocalVariable(name: "minbucket", scope: !3791, file: !3316, line: 252, type: !103)
!3791 = distinct !DILexicalBlock(scope: !3792, file: !3316, line: 251, column: 19)
!3792 = distinct !DILexicalBlock(scope: !3775, file: !3316, line: 251, column: 6)
!3793 = !DILocalVariable(name: "c", scope: !3791, file: !3316, line: 253, type: !2256)
!3794 = !DILocation(line: 0, scope: !3775)
!3795 = !DILocation(line: 213, column: 11, scope: !3775)
!3796 = !DILocation(line: 232, column: 9, scope: !3785)
!3797 = !DILocation(line: 232, column: 6, scope: !3785)
!3798 = !DILocation(line: 232, column: 6, scope: !3775)
!3799 = !DILocation(line: 236, column: 21, scope: !3788)
!3800 = !DILocation(line: 0, scope: !3784)
!3801 = !DILocation(line: 0, scope: !3788)
!3802 = !DILocation(line: 237, column: 8, scope: !3803)
!3803 = distinct !DILexicalBlock(scope: !3788, file: !3316, line: 237, column: 8)
!3804 = !DILocation(line: 237, column: 25, scope: !3803)
!3805 = !DILocation(line: 237, column: 8, scope: !3788)
!3806 = !DILocation(line: 238, column: 5, scope: !3807)
!3807 = distinct !DILexicalBlock(scope: !3803, file: !3316, line: 237, column: 32)
!3808 = !DILocation(line: 241, column: 14, scope: !3788)
!3809 = !DILocation(line: 241, column: 12, scope: !3788)
!3810 = !DILocation(line: 243, column: 12, scope: !3784)
!3811 = !DILocation(line: 243, column: 16, scope: !3784)
!3812 = distinct !{!3812, !3813, !3814}
!3813 = !DILocation(line: 235, column: 3, scope: !3784)
!3814 = !DILocation(line: 243, column: 35, scope: !3784)
!3815 = !DILocation(line: 249, column: 22, scope: !3775)
!3816 = !DILocation(line: 249, column: 39, scope: !3775)
!3817 = !DILocation(line: 249, column: 36, scope: !3775)
!3818 = !DILocation(line: 251, column: 12, scope: !3792)
!3819 = !DILocation(line: 251, column: 6, scope: !3775)
!3820 = !DILocation(line: 252, column: 19, scope: !3791)
!3821 = !DILocation(line: 0, scope: !3791)
!3822 = !DILocation(line: 253, column: 39, scope: !3791)
!3823 = !DILocation(line: 255, column: 3, scope: !3791)
!3824 = !DILocation(line: 261, column: 1, scope: !3775)
!3825 = distinct !DISubprogram(name: "split_chunks", scope: !3316, file: !3316, line: 109, type: !3460, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !3826)
!3826 = !{!3827, !3828, !3829, !3830, !3831, !3832}
!3827 = !DILocalVariable(name: "h", arg: 1, scope: !3825, file: !3316, line: 109, type: !2251)
!3828 = !DILocalVariable(name: "lc", arg: 2, scope: !3825, file: !3316, line: 109, type: !2256)
!3829 = !DILocalVariable(name: "rc", arg: 3, scope: !3825, file: !3316, line: 109, type: !2256)
!3830 = !DILocalVariable(name: "sz0", scope: !3825, file: !3316, line: 114, type: !3379)
!3831 = !DILocalVariable(name: "lsz", scope: !3825, file: !3316, line: 115, type: !3379)
!3832 = !DILocalVariable(name: "rsz", scope: !3825, file: !3316, line: 116, type: !3379)
!3833 = !DILocation(line: 0, scope: !3825)
!3834 = !DILocation(line: 114, column: 18, scope: !3825)
!3835 = !DILocation(line: 115, column: 21, scope: !3825)
!3836 = !DILocation(line: 116, column: 22, scope: !3825)
!3837 = !DILocation(line: 118, column: 2, scope: !3825)
!3838 = !DILocation(line: 119, column: 2, scope: !3825)
!3839 = !DILocation(line: 120, column: 2, scope: !3825)
!3840 = !DILocation(line: 121, column: 25, scope: !3825)
!3841 = !DILocation(line: 121, column: 2, scope: !3825)
!3842 = !DILocation(line: 122, column: 1, scope: !3825)
!3843 = distinct !DISubprogram(name: "chunk_mem", scope: !3316, file: !3316, line: 24, type: !3844, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !3846)
!3844 = !DISubroutineType(types: !3845)
!3845 = !{!102, !2251, !2256}
!3846 = !{!3847, !3848, !3849, !3850}
!3847 = !DILocalVariable(name: "h", arg: 1, scope: !3843, file: !3316, line: 24, type: !2251)
!3848 = !DILocalVariable(name: "c", arg: 2, scope: !3843, file: !3316, line: 24, type: !2256)
!3849 = !DILocalVariable(name: "buf", scope: !3843, file: !3316, line: 26, type: !2246)
!3850 = !DILocalVariable(name: "ret", scope: !3843, file: !3316, line: 27, type: !1742)
!3851 = !DILocation(line: 0, scope: !3843)
!3852 = !DILocation(line: 26, column: 22, scope: !3843)
!3853 = !DILocation(line: 27, column: 38, scope: !3843)
!3854 = !DILocation(line: 31, column: 2, scope: !3843)
!3855 = distinct !DISubprogram(name: "increase_allocated_bytes", scope: !3316, file: !3316, line: 17, type: !3856, scopeLine: 18, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !3858)
!3856 = !DISubroutineType(types: !3857)
!3857 = !{null, !2251, !120}
!3858 = !{!3859, !3860}
!3859 = !DILocalVariable(name: "h", arg: 1, scope: !3855, file: !3316, line: 17, type: !2251)
!3860 = !DILocalVariable(name: "num_bytes", arg: 2, scope: !3855, file: !3316, line: 17, type: !120)
!3861 = !DILocation(line: 0, scope: !3855)
!3862 = !DILocation(line: 19, column: 5, scope: !3855)
!3863 = !DILocation(line: 19, column: 21, scope: !3855)
!3864 = !DILocation(line: 20, column: 27, scope: !3855)
!3865 = !DILocation(line: 20, column: 25, scope: !3855)
!3866 = !DILocation(line: 21, column: 1, scope: !3855)
!3867 = distinct !DISubprogram(name: "sys_heap_aligned_alloc", scope: !3316, file: !3316, line: 301, type: !3868, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !3870)
!3868 = !DISubroutineType(types: !3869)
!3869 = !{!102, !3319, !120, !120}
!3870 = !{!3871, !3872, !3873, !3874, !3875, !3876, !3877, !3878, !3879, !3880, !3881, !3882}
!3871 = !DILocalVariable(name: "heap", arg: 1, scope: !3867, file: !3316, line: 301, type: !3319)
!3872 = !DILocalVariable(name: "align", arg: 2, scope: !3867, file: !3316, line: 301, type: !120)
!3873 = !DILocalVariable(name: "bytes", arg: 3, scope: !3867, file: !3316, line: 301, type: !120)
!3874 = !DILocalVariable(name: "h", scope: !3867, file: !3316, line: 303, type: !2251)
!3875 = !DILocalVariable(name: "gap", scope: !3867, file: !3316, line: 304, type: !120)
!3876 = !DILocalVariable(name: "rew", scope: !3867, file: !3316, line: 304, type: !120)
!3877 = !DILocalVariable(name: "padded_sz", scope: !3867, file: !3316, line: 335, type: !3379)
!3878 = !DILocalVariable(name: "c0", scope: !3867, file: !3316, line: 336, type: !2256)
!3879 = !DILocalVariable(name: "mem", scope: !3867, file: !3316, line: 341, type: !1742)
!3880 = !DILocalVariable(name: "end", scope: !3867, file: !3316, line: 345, type: !2246)
!3881 = !DILocalVariable(name: "c", scope: !3867, file: !3316, line: 348, type: !2256)
!3882 = !DILocalVariable(name: "c_end", scope: !3867, file: !3316, line: 349, type: !2256)
!3883 = !DILocation(line: 0, scope: !3867)
!3884 = !DILocation(line: 303, column: 27, scope: !3867)
!3885 = !DILocation(line: 313, column: 16, scope: !3867)
!3886 = !DILocation(line: 313, column: 14, scope: !3867)
!3887 = !DILocation(line: 314, column: 12, scope: !3888)
!3888 = distinct !DILexicalBlock(scope: !3867, file: !3316, line: 314, column: 6)
!3889 = !DILocation(line: 314, column: 6, scope: !3867)
!3890 = !DILocation(line: 315, column: 9, scope: !3891)
!3891 = distinct !DILexicalBlock(scope: !3888, file: !3316, line: 314, column: 20)
!3892 = !DILocation(line: 316, column: 9, scope: !3891)
!3893 = !DILocation(line: 318, column: 13, scope: !3894)
!3894 = distinct !DILexicalBlock(scope: !3895, file: !3316, line: 318, column: 7)
!3895 = distinct !DILexicalBlock(scope: !3888, file: !3316, line: 317, column: 9)
!3896 = !DILocation(line: 318, column: 7, scope: !3895)
!3897 = !DILocation(line: 319, column: 11, scope: !3898)
!3898 = distinct !DILexicalBlock(scope: !3894, file: !3316, line: 318, column: 39)
!3899 = !DILocation(line: 319, column: 4, scope: !3898)
!3900 = !DILocation(line: 0, scope: !3888)
!3901 = !DILocation(line: 326, column: 12, scope: !3902)
!3902 = distinct !DILexicalBlock(scope: !3867, file: !3316, line: 326, column: 6)
!3903 = !DILocation(line: 326, column: 17, scope: !3902)
!3904 = !DILocation(line: 326, column: 20, scope: !3902)
!3905 = !DILocation(line: 326, column: 6, scope: !3867)
!3906 = !DILocation(line: 335, column: 50, scope: !3867)
!3907 = !DILocation(line: 335, column: 58, scope: !3867)
!3908 = !DILocation(line: 335, column: 24, scope: !3867)
!3909 = !DILocation(line: 336, column: 17, scope: !3867)
!3910 = !DILocation(line: 338, column: 9, scope: !3911)
!3911 = distinct !DILexicalBlock(scope: !3867, file: !3316, line: 338, column: 6)
!3912 = !DILocation(line: 338, column: 6, scope: !3867)
!3913 = !DILocation(line: 341, column: 17, scope: !3867)
!3914 = !DILocation(line: 344, column: 20, scope: !3867)
!3915 = !DILocation(line: 344, column: 8, scope: !3867)
!3916 = !DILocation(line: 344, column: 47, scope: !3867)
!3917 = !DILocation(line: 345, column: 39, scope: !3867)
!3918 = !DILocation(line: 348, column: 16, scope: !3867)
!3919 = !DILocation(line: 349, column: 26, scope: !3867)
!3920 = !DILocation(line: 349, column: 24, scope: !3867)
!3921 = !DILocation(line: 353, column: 8, scope: !3922)
!3922 = distinct !DILexicalBlock(scope: !3867, file: !3316, line: 353, column: 6)
!3923 = !DILocation(line: 353, column: 6, scope: !3867)
!3924 = !DILocation(line: 354, column: 3, scope: !3925)
!3925 = distinct !DILexicalBlock(scope: !3922, file: !3316, line: 353, column: 14)
!3926 = !DILocation(line: 355, column: 3, scope: !3925)
!3927 = !DILocation(line: 356, column: 2, scope: !3925)
!3928 = !DILocation(line: 359, column: 6, scope: !3929)
!3929 = distinct !DILexicalBlock(scope: !3867, file: !3316, line: 359, column: 6)
!3930 = !DILocation(line: 359, column: 24, scope: !3929)
!3931 = !DILocation(line: 359, column: 6, scope: !3867)
!3932 = !DILocation(line: 360, column: 3, scope: !3933)
!3933 = distinct !DILexicalBlock(scope: !3929, file: !3316, line: 359, column: 33)
!3934 = !DILocation(line: 361, column: 3, scope: !3933)
!3935 = !DILocation(line: 362, column: 2, scope: !3933)
!3936 = !DILocation(line: 364, column: 2, scope: !3867)
!3937 = !DILocation(line: 367, column: 50, scope: !3867)
!3938 = !DILocation(line: 367, column: 30, scope: !3867)
!3939 = !DILocation(line: 367, column: 2, scope: !3867)
!3940 = !DILocation(line: 377, column: 1, scope: !3867)
!3941 = distinct !DISubprogram(name: "sys_heap_aligned_realloc", scope: !3316, file: !3316, line: 379, type: !3942, scopeLine: 381, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !3944)
!3942 = !DISubroutineType(types: !3943)
!3943 = !{!102, !3319, !102, !120, !120}
!3944 = !{!3945, !3946, !3947, !3948, !3949, !3950, !3951, !3952, !3953, !3954, !3960, !3961}
!3945 = !DILocalVariable(name: "heap", arg: 1, scope: !3941, file: !3316, line: 379, type: !3319)
!3946 = !DILocalVariable(name: "ptr", arg: 2, scope: !3941, file: !3316, line: 379, type: !102)
!3947 = !DILocalVariable(name: "align", arg: 3, scope: !3941, file: !3316, line: 380, type: !120)
!3948 = !DILocalVariable(name: "bytes", arg: 4, scope: !3941, file: !3316, line: 380, type: !120)
!3949 = !DILocalVariable(name: "h", scope: !3941, file: !3316, line: 382, type: !2251)
!3950 = !DILocalVariable(name: "c", scope: !3941, file: !3316, line: 399, type: !2256)
!3951 = !DILocalVariable(name: "rc", scope: !3941, file: !3316, line: 400, type: !2256)
!3952 = !DILocalVariable(name: "align_gap", scope: !3941, file: !3316, line: 401, type: !120)
!3953 = !DILocalVariable(name: "chunks_need", scope: !3941, file: !3316, line: 402, type: !3379)
!3954 = !DILocalVariable(name: "split_size", scope: !3955, file: !3316, line: 435, type: !3379)
!3955 = distinct !DILexicalBlock(scope: !3956, file: !3316, line: 433, column: 61)
!3956 = distinct !DILexicalBlock(scope: !3957, file: !3316, line: 432, column: 13)
!3957 = distinct !DILexicalBlock(scope: !3958, file: !3316, line: 409, column: 13)
!3958 = distinct !DILexicalBlock(scope: !3959, file: !3316, line: 406, column: 13)
!3959 = distinct !DILexicalBlock(scope: !3941, file: !3316, line: 404, column: 6)
!3960 = !DILocalVariable(name: "ptr2", scope: !3941, file: !3316, line: 474, type: !102)
!3961 = !DILocalVariable(name: "prev_size", scope: !3962, file: !3316, line: 477, type: !120)
!3962 = distinct !DILexicalBlock(scope: !3963, file: !3316, line: 476, column: 20)
!3963 = distinct !DILexicalBlock(scope: !3941, file: !3316, line: 476, column: 6)
!3964 = !DILocation(line: 0, scope: !3941)
!3965 = !DILocation(line: 382, column: 27, scope: !3941)
!3966 = !DILocation(line: 385, column: 10, scope: !3967)
!3967 = distinct !DILexicalBlock(scope: !3941, file: !3316, line: 385, column: 6)
!3968 = !DILocation(line: 385, column: 6, scope: !3941)
!3969 = !DILocation(line: 386, column: 10, scope: !3970)
!3970 = distinct !DILexicalBlock(scope: !3967, file: !3316, line: 385, column: 19)
!3971 = !DILocation(line: 386, column: 3, scope: !3970)
!3972 = !DILocation(line: 388, column: 12, scope: !3973)
!3973 = distinct !DILexicalBlock(scope: !3941, file: !3316, line: 388, column: 6)
!3974 = !DILocation(line: 388, column: 6, scope: !3941)
!3975 = !DILocation(line: 389, column: 3, scope: !3976)
!3976 = distinct !DILexicalBlock(scope: !3973, file: !3316, line: 388, column: 18)
!3977 = !DILocation(line: 390, column: 3, scope: !3976)
!3978 = !DILocation(line: 395, column: 6, scope: !3979)
!3979 = distinct !DILexicalBlock(scope: !3941, file: !3316, line: 395, column: 6)
!3980 = !DILocation(line: 395, column: 6, scope: !3941)
!3981 = !DILocation(line: 399, column: 16, scope: !3941)
!3982 = !DILocation(line: 400, column: 17, scope: !3941)
!3983 = !DILocation(line: 401, column: 49, scope: !3941)
!3984 = !DILocation(line: 401, column: 36, scope: !3941)
!3985 = !DILocation(line: 402, column: 52, scope: !3941)
!3986 = !DILocation(line: 402, column: 26, scope: !3941)
!3987 = !DILocation(line: 404, column: 6, scope: !3959)
!3988 = !DILocation(line: 404, column: 12, scope: !3959)
!3989 = !DILocation(line: 404, column: 40, scope: !3959)
!3990 = !DILocation(line: 404, column: 31, scope: !3959)
!3991 = !DILocation(line: 404, column: 6, scope: !3941)
!3992 = !DILocation(line: 406, column: 13, scope: !3958)
!3993 = !DILocation(line: 406, column: 30, scope: !3958)
!3994 = !DILocation(line: 406, column: 13, scope: !3959)
!3995 = !DILocation(line: 409, column: 30, scope: !3957)
!3996 = !DILocation(line: 409, column: 13, scope: !3958)
!3997 = !DILocation(line: 417, column: 22, scope: !3998)
!3998 = distinct !DILexicalBlock(scope: !3957, file: !3316, line: 409, column: 45)
!3999 = !DILocation(line: 417, column: 37, scope: !3998)
!4000 = !DILocation(line: 416, column: 6, scope: !3998)
!4001 = !DILocation(line: 416, column: 22, scope: !3998)
!4002 = !DILocation(line: 420, column: 24, scope: !3998)
!4003 = !DILocation(line: 420, column: 3, scope: !3998)
!4004 = !DILocation(line: 421, column: 3, scope: !3998)
!4005 = !DILocation(line: 422, column: 3, scope: !3998)
!4006 = !DILocation(line: 431, column: 3, scope: !3998)
!4007 = !DILocation(line: 432, column: 14, scope: !3956)
!4008 = !DILocation(line: 432, column: 32, scope: !3956)
!4009 = !DILocation(line: 433, column: 26, scope: !3956)
!4010 = !DILocation(line: 433, column: 24, scope: !3956)
!4011 = !DILocation(line: 433, column: 44, scope: !3956)
!4012 = !DILocation(line: 432, column: 13, scope: !3957)
!4013 = !DILocation(line: 435, column: 38, scope: !3955)
!4014 = !DILocation(line: 0, scope: !3955)
!4015 = !DILocation(line: 442, column: 42, scope: !3955)
!4016 = !DILocation(line: 442, column: 3, scope: !3955)
!4017 = !DILocation(line: 445, column: 3, scope: !3955)
!4018 = !DILocation(line: 447, column: 20, scope: !4019)
!4019 = distinct !DILexicalBlock(scope: !3955, file: !3316, line: 447, column: 7)
!4020 = !DILocation(line: 447, column: 18, scope: !4019)
!4021 = !DILocation(line: 447, column: 7, scope: !3955)
!4022 = !DILocation(line: 448, column: 27, scope: !4023)
!4023 = distinct !DILexicalBlock(scope: !4019, file: !3316, line: 447, column: 39)
!4024 = !DILocation(line: 448, column: 4, scope: !4023)
!4025 = !DILocation(line: 449, column: 4, scope: !4023)
!4026 = !DILocation(line: 450, column: 3, scope: !4023)
!4027 = !DILocation(line: 452, column: 3, scope: !3955)
!4028 = !DILocation(line: 453, column: 3, scope: !3955)
!4029 = !DILocation(line: 474, column: 15, scope: !3941)
!4030 = !DILocation(line: 476, column: 11, scope: !3963)
!4031 = !DILocation(line: 476, column: 6, scope: !3941)
!4032 = !DILocation(line: 477, column: 42, scope: !3962)
!4033 = !DILocation(line: 477, column: 22, scope: !3962)
!4034 = !DILocation(line: 477, column: 60, scope: !3962)
!4035 = !DILocation(line: 0, scope: !3962)
!4036 = !DILocation(line: 479, column: 21, scope: !3962)
!4037 = !DILocation(line: 479, column: 3, scope: !3962)
!4038 = !DILocation(line: 480, column: 3, scope: !3962)
!4039 = !DILocation(line: 481, column: 2, scope: !3962)
!4040 = !DILocation(line: 483, column: 1, scope: !3941)
!4041 = distinct !DISubprogram(name: "sys_heap_init", scope: !3316, file: !3316, line: 485, type: !4042, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !4044)
!4042 = !DISubroutineType(types: !4043)
!4043 = !{null, !3319, !102, !120}
!4044 = !{!4045, !4046, !4047, !4048, !4049, !4050, !4051, !4052, !4053, !4054}
!4045 = !DILocalVariable(name: "heap", arg: 1, scope: !4041, file: !3316, line: 485, type: !3319)
!4046 = !DILocalVariable(name: "mem", arg: 2, scope: !4041, file: !3316, line: 485, type: !102)
!4047 = !DILocalVariable(name: "bytes", arg: 3, scope: !4041, file: !3316, line: 485, type: !120)
!4048 = !DILocalVariable(name: "addr", scope: !4041, file: !3316, line: 502, type: !22)
!4049 = !DILocalVariable(name: "end", scope: !4041, file: !3316, line: 503, type: !22)
!4050 = !DILocalVariable(name: "heap_sz", scope: !4041, file: !3316, line: 504, type: !3379)
!4051 = !DILocalVariable(name: "h", scope: !4041, file: !3316, line: 509, type: !2251)
!4052 = !DILocalVariable(name: "nb_buckets", scope: !4041, file: !3316, line: 520, type: !103)
!4053 = !DILocalVariable(name: "chunk0_size", scope: !4041, file: !3316, line: 521, type: !3379)
!4054 = !DILocalVariable(name: "i", scope: !4055, file: !3316, line: 526, type: !103)
!4055 = distinct !DILexicalBlock(scope: !4041, file: !3316, line: 526, column: 2)
!4056 = !DILocation(line: 0, scope: !4041)
!4057 = !DILocation(line: 499, column: 8, scope: !4041)
!4058 = !DILocation(line: 502, column: 19, scope: !4041)
!4059 = !DILocation(line: 503, column: 18, scope: !4041)
!4060 = !DILocation(line: 504, column: 27, scope: !4041)
!4061 = !DILocation(line: 504, column: 35, scope: !4041)
!4062 = !DILocation(line: 509, column: 21, scope: !4041)
!4063 = !DILocation(line: 510, column: 8, scope: !4041)
!4064 = !DILocation(line: 510, column: 13, scope: !4041)
!4065 = !DILocation(line: 511, column: 5, scope: !4041)
!4066 = !DILocation(line: 511, column: 15, scope: !4041)
!4067 = !DILocation(line: 512, column: 5, scope: !4041)
!4068 = !DILocation(line: 512, column: 19, scope: !4041)
!4069 = !DILocation(line: 515, column: 5, scope: !4041)
!4070 = !DILocation(line: 515, column: 16, scope: !4041)
!4071 = !DILocation(line: 516, column: 5, scope: !4041)
!4072 = !DILocation(line: 516, column: 21, scope: !4041)
!4073 = !DILocation(line: 517, column: 5, scope: !4041)
!4074 = !DILocation(line: 517, column: 25, scope: !4041)
!4075 = !DILocation(line: 520, column: 19, scope: !4041)
!4076 = !DILocation(line: 522, column: 21, scope: !4041)
!4077 = !DILocation(line: 521, column: 56, scope: !4041)
!4078 = !DILocation(line: 521, column: 26, scope: !4041)
!4079 = !DILocation(line: 0, scope: !4055)
!4080 = !DILocation(line: 526, column: 20, scope: !4081)
!4081 = distinct !DILexicalBlock(scope: !4055, file: !3316, line: 526, column: 2)
!4082 = !DILocation(line: 526, column: 2, scope: !4055)
!4083 = !DILocation(line: 531, column: 2, scope: !4041)
!4084 = !DILocation(line: 532, column: 2, scope: !4041)
!4085 = !DILocation(line: 533, column: 2, scope: !4041)
!4086 = !DILocation(line: 536, column: 41, scope: !4041)
!4087 = !DILocation(line: 536, column: 2, scope: !4041)
!4088 = !DILocation(line: 537, column: 2, scope: !4041)
!4089 = !DILocation(line: 540, column: 2, scope: !4041)
!4090 = !DILocation(line: 541, column: 2, scope: !4041)
!4091 = !DILocation(line: 542, column: 2, scope: !4041)
!4092 = !DILocation(line: 544, column: 2, scope: !4041)
!4093 = !DILocation(line: 545, column: 1, scope: !4041)
!4094 = !DILocation(line: 527, column: 17, scope: !4095)
!4095 = distinct !DILexicalBlock(scope: !4081, file: !3316, line: 526, column: 39)
!4096 = !DILocation(line: 527, column: 22, scope: !4095)
!4097 = !DILocation(line: 526, column: 35, scope: !4081)
!4098 = distinct !{!4098, !4082, !4099}
!4099 = !DILocation(line: 528, column: 2, scope: !4055)
!4100 = distinct !DISubprogram(name: "sys_heap_validate", scope: !134, file: !134, line: 88, type: !4101, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4123)
!4101 = !DISubroutineType(types: !4102)
!4102 = !{!211, !4103}
!4103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4104, size: 32)
!4104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !4105)
!4105 = !{!4106, !4121, !4122}
!4106 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4104, file: !113, line: 57, baseType: !4107, size: 32)
!4107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4108, size: 32)
!4108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !142, line: 68, size: 224, elements: !4109)
!4109 = !{!4110, !4111, !4112, !4113, !4114, !4115, !4116}
!4110 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !4108, file: !142, line: 69, baseType: !2255, size: 64)
!4111 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !4108, file: !142, line: 70, baseType: !2256, size: 32, offset: 64)
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !4108, file: !142, line: 71, baseType: !137, size: 32, offset: 96)
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "free_bytes", scope: !4108, file: !142, line: 73, baseType: !120, size: 32, offset: 128)
!4114 = !DIDerivedType(tag: DW_TAG_member, name: "allocated_bytes", scope: !4108, file: !142, line: 74, baseType: !120, size: 32, offset: 160)
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "max_allocated_bytes", scope: !4108, file: !142, line: 75, baseType: !120, size: 32, offset: 192)
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !4108, file: !142, line: 77, baseType: !4117, offset: 224)
!4117 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4118, elements: !2267)
!4118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !142, line: 64, size: 32, elements: !4119)
!4119 = !{!4120}
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4118, file: !142, line: 65, baseType: !2256, size: 32)
!4121 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4104, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!4122 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4104, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!4123 = !{!4124, !4125, !4126, !4127, !4128, !4129, !4135, !4137, !4140, !4141, !4142, !4143, !4144, !4146, !4149}
!4124 = !DILocalVariable(name: "heap", arg: 1, scope: !4100, file: !134, line: 88, type: !4103)
!4125 = !DILocalVariable(name: "h", scope: !4100, file: !134, line: 90, type: !4107)
!4126 = !DILocalVariable(name: "c", scope: !4100, file: !134, line: 91, type: !2256)
!4127 = !DILocalVariable(name: "allocated_bytes", scope: !4100, file: !134, line: 112, type: !120)
!4128 = !DILocalVariable(name: "free_bytes", scope: !4100, file: !134, line: 112, type: !120)
!4129 = !DILocalVariable(name: "stat", scope: !4100, file: !134, line: 113, type: !4130)
!4130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_memory_stats", file: !2977, line: 24, size: 96, elements: !4131)
!4131 = !{!4132, !4133, !4134}
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "free_bytes", scope: !4130, file: !2977, line: 25, baseType: !120, size: 32)
!4133 = !DIDerivedType(tag: DW_TAG_member, name: "allocated_bytes", scope: !4130, file: !2977, line: 26, baseType: !120, size: 32, offset: 32)
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "max_allocated_bytes", scope: !4130, file: !2977, line: 27, baseType: !120, size: 32, offset: 64)
!4135 = !DILocalVariable(name: "b", scope: !4136, file: !134, line: 127, type: !103)
!4136 = distinct !DILexicalBlock(scope: !4100, file: !134, line: 127, column: 2)
!4137 = !DILocalVariable(name: "c0", scope: !4138, file: !134, line: 128, type: !2256)
!4138 = distinct !DILexicalBlock(scope: !4139, file: !134, line: 127, column: 57)
!4139 = distinct !DILexicalBlock(scope: !4136, file: !134, line: 127, column: 2)
!4140 = !DILocalVariable(name: "n", scope: !4138, file: !134, line: 129, type: !137)
!4141 = !DILocalVariable(name: "empty", scope: !4138, file: !134, line: 141, type: !211)
!4142 = !DILocalVariable(name: "zero", scope: !4138, file: !134, line: 142, type: !211)
!4143 = !DILocalVariable(name: "prev_chunk", scope: !4100, file: !134, line: 159, type: !2256)
!4144 = !DILocalVariable(name: "b", scope: !4145, file: !134, line: 179, type: !103)
!4145 = distinct !DILexicalBlock(scope: !4100, file: !134, line: 179, column: 2)
!4146 = !DILocalVariable(name: "c0", scope: !4147, file: !134, line: 180, type: !2256)
!4147 = distinct !DILexicalBlock(scope: !4148, file: !134, line: 179, column: 57)
!4148 = distinct !DILexicalBlock(scope: !4145, file: !134, line: 179, column: 2)
!4149 = !DILocalVariable(name: "n", scope: !4147, file: !134, line: 181, type: !103)
!4150 = !DILocation(line: 0, scope: !4100)
!4151 = !DILocation(line: 90, column: 27, scope: !4100)
!4152 = !DILocation(line: 96, column: 11, scope: !4153)
!4153 = distinct !DILexicalBlock(scope: !4100, file: !134, line: 96, column: 2)
!4154 = !DILocation(line: 96, column: 32, scope: !4155)
!4155 = distinct !DILexicalBlock(scope: !4153, file: !134, line: 96, column: 2)
!4156 = !DILocation(line: 96, column: 2, scope: !4153)
!4157 = !DILocation(line: 97, column: 8, scope: !4158)
!4158 = distinct !DILexicalBlock(scope: !4159, file: !134, line: 97, column: 7)
!4159 = distinct !DILexicalBlock(scope: !4155, file: !134, line: 96, column: 71)
!4160 = !DILocation(line: 97, column: 7, scope: !4159)
!4161 = !DILocation(line: 96, column: 52, scope: !4155)
!4162 = distinct !{!4162, !4156, !4163}
!4163 = !DILocation(line: 100, column: 2, scope: !4153)
!4164 = !DILocation(line: 0, scope: !4153)
!4165 = !DILocation(line: 101, column: 8, scope: !4166)
!4166 = distinct !DILexicalBlock(scope: !4100, file: !134, line: 101, column: 6)
!4167 = !DILocation(line: 101, column: 6, scope: !4100)
!4168 = !DILocation(line: 112, column: 2, scope: !4100)
!4169 = !DILocation(line: 113, column: 2, scope: !4100)
!4170 = !DILocation(line: 113, column: 26, scope: !4100)
!4171 = !DILocation(line: 115, column: 2, scope: !4100)
!4172 = !DILocation(line: 116, column: 2, scope: !4100)
!4173 = !DILocation(line: 117, column: 12, scope: !4174)
!4174 = distinct !DILexicalBlock(scope: !4100, file: !134, line: 117, column: 6)
!4175 = !DILocation(line: 117, column: 31, scope: !4174)
!4176 = !DILocation(line: 117, column: 28, scope: !4174)
!4177 = !DILocation(line: 117, column: 48, scope: !4174)
!4178 = !DILocation(line: 118, column: 12, scope: !4174)
!4179 = !DILocation(line: 118, column: 26, scope: !4174)
!4180 = !DILocation(line: 118, column: 23, scope: !4174)
!4181 = !DILocation(line: 117, column: 6, scope: !4100)
!4182 = !DILocation(line: 0, scope: !4136)
!4183 = !DILocation(line: 127, column: 40, scope: !4139)
!4184 = !DILocation(line: 127, column: 23, scope: !4139)
!4185 = !DILocation(line: 127, column: 20, scope: !4139)
!4186 = !DILocation(line: 127, column: 2, scope: !4136)
!4187 = !DILocation(line: 128, column: 32, scope: !4138)
!4188 = !DILocation(line: 0, scope: !4138)
!4189 = !DILocation(line: 133, column: 18, scope: !4190)
!4190 = distinct !DILexicalBlock(scope: !4191, file: !134, line: 133, column: 3)
!4191 = distinct !DILexicalBlock(scope: !4138, file: !134, line: 133, column: 3)
!4192 = !DILocation(line: 133, column: 23, scope: !4190)
!4193 = !DILocation(line: 141, column: 20, scope: !4138)
!4194 = !DILocation(line: 141, column: 36, scope: !4138)
!4195 = !DILocation(line: 141, column: 34, scope: !4138)
!4196 = !DILocation(line: 141, column: 44, scope: !4138)
!4197 = !DILocation(line: 144, column: 7, scope: !4138)
!4198 = !DILocation(line: 133, column: 29, scope: !4190)
!4199 = !DILocation(line: 133, column: 34, scope: !4190)
!4200 = !DILocation(line: 133, column: 3, scope: !4191)
!4201 = !DILocation(line: 135, column: 9, scope: !4202)
!4202 = distinct !DILexicalBlock(scope: !4203, file: !134, line: 135, column: 8)
!4203 = distinct !DILexicalBlock(scope: !4190, file: !134, line: 134, column: 40)
!4204 = !DILocation(line: 135, column: 8, scope: !4203)
!4205 = !DILocation(line: 138, column: 4, scope: !4203)
!4206 = !DILocation(line: 134, column: 9, scope: !4190)
!4207 = !DILocation(line: 134, column: 17, scope: !4190)
!4208 = distinct !{!4208, !4200, !4209}
!4209 = !DILocation(line: 139, column: 3, scope: !4191)
!4210 = !DILocation(line: 142, column: 17, scope: !4138)
!4211 = !DILocation(line: 144, column: 13, scope: !4212)
!4212 = distinct !DILexicalBlock(scope: !4138, file: !134, line: 144, column: 7)
!4213 = !DILocation(line: 148, column: 13, scope: !4214)
!4214 = distinct !DILexicalBlock(scope: !4138, file: !134, line: 148, column: 7)
!4215 = !DILocation(line: 148, column: 30, scope: !4214)
!4216 = !DILocation(line: 148, column: 35, scope: !4214)
!4217 = !DILocation(line: 148, column: 7, scope: !4138)
!4218 = !DILocation(line: 127, column: 53, scope: !4139)
!4219 = distinct !{!4219, !4186, !4220}
!4220 = !DILocation(line: 151, column: 2, scope: !4136)
!4221 = !DILocation(line: 160, column: 37, scope: !4222)
!4222 = distinct !DILexicalBlock(scope: !4223, file: !134, line: 160, column: 2)
!4223 = distinct !DILexicalBlock(scope: !4100, file: !134, line: 160, column: 2)
!4224 = !DILocation(line: 160, column: 11, scope: !4223)
!4225 = !DILocation(line: 160, column: 32, scope: !4222)
!4226 = !DILocation(line: 160, column: 2, scope: !4223)
!4227 = !DILocation(line: 161, column: 8, scope: !4228)
!4228 = distinct !DILexicalBlock(scope: !4229, file: !134, line: 161, column: 7)
!4229 = distinct !DILexicalBlock(scope: !4222, file: !134, line: 160, column: 71)
!4230 = !DILocation(line: 161, column: 25, scope: !4228)
!4231 = !DILocation(line: 164, column: 7, scope: !4232)
!4232 = distinct !DILexicalBlock(scope: !4229, file: !134, line: 164, column: 7)
!4233 = !DILocation(line: 164, column: 24, scope: !4232)
!4234 = !DILocation(line: 164, column: 7, scope: !4229)
!4235 = !DILocation(line: 169, column: 3, scope: !4229)
!4236 = !DILocation(line: 160, column: 52, scope: !4222)
!4237 = distinct !{!4237, !4226, !4238}
!4238 = !DILocation(line: 170, column: 2, scope: !4223)
!4239 = !DILocation(line: 0, scope: !4223)
!4240 = !DILocation(line: 171, column: 8, scope: !4241)
!4241 = distinct !DILexicalBlock(scope: !4100, file: !134, line: 171, column: 6)
!4242 = !DILocation(line: 171, column: 6, scope: !4100)
!4243 = !DILocation(line: 0, scope: !4145)
!4244 = !DILocation(line: 179, column: 23, scope: !4148)
!4245 = !DILocation(line: 179, column: 20, scope: !4148)
!4246 = !DILocation(line: 179, column: 2, scope: !4145)
!4247 = !DILocation(line: 180, column: 32, scope: !4147)
!4248 = !DILocation(line: 0, scope: !4147)
!4249 = !DILocation(line: 183, column: 10, scope: !4250)
!4250 = distinct !DILexicalBlock(scope: !4147, file: !134, line: 183, column: 7)
!4251 = !DILocation(line: 183, column: 7, scope: !4147)
!4252 = !DILocation(line: 188, column: 8, scope: !4253)
!4253 = distinct !DILexicalBlock(scope: !4254, file: !134, line: 188, column: 8)
!4254 = distinct !DILexicalBlock(scope: !4255, file: !134, line: 187, column: 67)
!4255 = distinct !DILexicalBlock(scope: !4256, file: !134, line: 187, column: 3)
!4256 = distinct !DILexicalBlock(scope: !4147, file: !134, line: 187, column: 3)
!4257 = !DILocation(line: 188, column: 8, scope: !4254)
!4258 = !DILocation(line: 191, column: 4, scope: !4254)
!4259 = !DILocation(line: 187, column: 44, scope: !4255)
!4260 = !DILocation(line: 187, column: 23, scope: !4255)
!4261 = !DILocation(line: 187, column: 3, scope: !4256)
!4262 = distinct !{!4262, !4261, !4263}
!4263 = !DILocation(line: 192, column: 3, scope: !4256)
!4264 = !DILocation(line: 179, column: 40, scope: !4148)
!4265 = !DILocation(line: 179, column: 53, scope: !4148)
!4266 = distinct !{!4266, !4246, !4267}
!4267 = !DILocation(line: 193, column: 2, scope: !4145)
!4268 = !DILocation(line: 198, column: 37, scope: !4269)
!4269 = distinct !DILexicalBlock(scope: !4270, file: !134, line: 198, column: 2)
!4270 = distinct !DILexicalBlock(scope: !4100, file: !134, line: 198, column: 2)
!4271 = !DILocation(line: 198, column: 11, scope: !4270)
!4272 = !DILocation(line: 198, column: 32, scope: !4269)
!4273 = !DILocation(line: 198, column: 2, scope: !4270)
!4274 = !DILocation(line: 199, column: 25, scope: !4275)
!4275 = distinct !DILexicalBlock(scope: !4269, file: !134, line: 198, column: 71)
!4276 = !DILocation(line: 199, column: 24, scope: !4275)
!4277 = !DILocation(line: 199, column: 3, scope: !4275)
!4278 = !DILocation(line: 198, column: 52, scope: !4269)
!4279 = distinct !{!4279, !4273, !4280}
!4280 = !DILocation(line: 200, column: 2, scope: !4270)
!4281 = !DILocation(line: 202, column: 1, scope: !4100)
!4282 = distinct !DISubprogram(name: "right_chunk", scope: !142, file: !142, line: 204, type: !4283, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4285)
!4283 = !DISubroutineType(types: !4284)
!4284 = !{!2256, !4107, !2256}
!4285 = !{!4286, !4287}
!4286 = !DILocalVariable(name: "h", arg: 1, scope: !4282, file: !142, line: 204, type: !4107)
!4287 = !DILocalVariable(name: "c", arg: 2, scope: !4282, file: !142, line: 204, type: !2256)
!4288 = !DILocation(line: 0, scope: !4282)
!4289 = !DILocation(line: 206, column: 13, scope: !4282)
!4290 = !DILocation(line: 206, column: 11, scope: !4282)
!4291 = !DILocation(line: 206, column: 2, scope: !4282)
!4292 = distinct !DISubprogram(name: "valid_chunk", scope: !134, file: !134, line: 31, type: !4293, scopeLine: 32, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4295)
!4293 = !DISubroutineType(types: !4294)
!4294 = !{!211, !4107, !2256}
!4295 = !{!4296, !4297}
!4296 = !DILocalVariable(name: "h", arg: 1, scope: !4292, file: !134, line: 31, type: !4107)
!4297 = !DILocalVariable(name: "c", arg: 2, scope: !4292, file: !134, line: 31, type: !2256)
!4298 = !DILocation(line: 0, scope: !4292)
!4299 = !DILocation(line: 33, column: 2, scope: !4300)
!4300 = distinct !DILexicalBlock(scope: !4301, file: !134, line: 33, column: 2)
!4301 = distinct !DILexicalBlock(scope: !4292, file: !134, line: 33, column: 2)
!4302 = !DILocation(line: 33, column: 2, scope: !4301)
!4303 = !DILocation(line: 34, column: 2, scope: !4304)
!4304 = distinct !DILexicalBlock(scope: !4305, file: !134, line: 34, column: 2)
!4305 = distinct !DILexicalBlock(scope: !4292, file: !134, line: 34, column: 2)
!4306 = !DILocation(line: 34, column: 2, scope: !4305)
!4307 = !DILocation(line: 35, column: 2, scope: !4308)
!4308 = distinct !DILexicalBlock(scope: !4309, file: !134, line: 35, column: 2)
!4309 = distinct !DILexicalBlock(scope: !4292, file: !134, line: 35, column: 2)
!4310 = !DILocation(line: 35, column: 2, scope: !4309)
!4311 = !DILocation(line: 36, column: 2, scope: !4312)
!4312 = distinct !DILexicalBlock(scope: !4313, file: !134, line: 36, column: 2)
!4313 = distinct !DILexicalBlock(scope: !4292, file: !134, line: 36, column: 2)
!4314 = !DILocation(line: 36, column: 2, scope: !4313)
!4315 = !DILocation(line: 37, column: 2, scope: !4316)
!4316 = distinct !DILexicalBlock(scope: !4317, file: !134, line: 37, column: 2)
!4317 = distinct !DILexicalBlock(scope: !4292, file: !134, line: 37, column: 2)
!4318 = !DILocation(line: 37, column: 2, scope: !4317)
!4319 = !DILocation(line: 38, column: 6, scope: !4320)
!4320 = distinct !DILexicalBlock(scope: !4292, file: !134, line: 38, column: 6)
!4321 = !DILocation(line: 38, column: 6, scope: !4292)
!4322 = !DILocation(line: 41, column: 3, scope: !4323)
!4323 = distinct !DILexicalBlock(scope: !4324, file: !134, line: 41, column: 3)
!4324 = distinct !DILexicalBlock(scope: !4325, file: !134, line: 41, column: 3)
!4325 = distinct !DILexicalBlock(scope: !4320, file: !134, line: 40, column: 9)
!4326 = !DILocation(line: 41, column: 3, scope: !4324)
!4327 = !DILocation(line: 42, column: 3, scope: !4328)
!4328 = distinct !DILexicalBlock(scope: !4329, file: !134, line: 42, column: 3)
!4329 = distinct !DILexicalBlock(scope: !4325, file: !134, line: 42, column: 3)
!4330 = !DILocation(line: 42, column: 3, scope: !4329)
!4331 = !DILocation(line: 44, column: 4, scope: !4332)
!4332 = distinct !DILexicalBlock(scope: !4333, file: !134, line: 44, column: 4)
!4333 = distinct !DILexicalBlock(scope: !4334, file: !134, line: 44, column: 4)
!4334 = distinct !DILexicalBlock(scope: !4335, file: !134, line: 43, column: 32)
!4335 = distinct !DILexicalBlock(scope: !4325, file: !134, line: 43, column: 7)
!4336 = !DILocation(line: 44, column: 4, scope: !4333)
!4337 = !DILocation(line: 45, column: 4, scope: !4338)
!4338 = distinct !DILexicalBlock(scope: !4339, file: !134, line: 45, column: 4)
!4339 = distinct !DILexicalBlock(scope: !4334, file: !134, line: 45, column: 4)
!4340 = !DILocation(line: 45, column: 4, scope: !4339)
!4341 = !DILocation(line: 48, column: 2, scope: !4292)
!4342 = !DILocation(line: 49, column: 1, scope: !4292)
!4343 = distinct !DISubprogram(name: "get_alloc_info", scope: !134, file: !134, line: 71, type: !4344, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4346)
!4344 = !DISubroutineType(types: !4345)
!4345 = !{null, !4107, !2304, !2304}
!4346 = !{!4347, !4348, !4349, !4350}
!4347 = !DILocalVariable(name: "h", arg: 1, scope: !4343, file: !134, line: 71, type: !4107)
!4348 = !DILocalVariable(name: "alloc_bytes", arg: 2, scope: !4343, file: !134, line: 71, type: !2304)
!4349 = !DILocalVariable(name: "free_bytes", arg: 3, scope: !4343, file: !134, line: 72, type: !2304)
!4350 = !DILocalVariable(name: "c", scope: !4343, file: !134, line: 74, type: !2256)
!4351 = !DILocation(line: 0, scope: !4343)
!4352 = !DILocation(line: 76, column: 15, scope: !4343)
!4353 = !DILocation(line: 77, column: 14, scope: !4343)
!4354 = !DILocation(line: 79, column: 11, scope: !4355)
!4355 = distinct !DILexicalBlock(scope: !4343, file: !134, line: 79, column: 2)
!4356 = !DILocation(line: 79, column: 37, scope: !4357)
!4357 = distinct !DILexicalBlock(scope: !4355, file: !134, line: 79, column: 2)
!4358 = !DILocation(line: 79, column: 32, scope: !4357)
!4359 = !DILocation(line: 79, column: 2, scope: !4355)
!4360 = !DILocation(line: 80, column: 7, scope: !4361)
!4361 = distinct !DILexicalBlock(scope: !4362, file: !134, line: 80, column: 7)
!4362 = distinct !DILexicalBlock(scope: !4357, file: !134, line: 79, column: 71)
!4363 = !DILocation(line: 0, scope: !4361)
!4364 = !DILocation(line: 79, column: 52, scope: !4357)
!4365 = distinct !{!4365, !4359, !4366}
!4366 = !DILocation(line: 85, column: 2, scope: !4355)
!4367 = !DILocation(line: 86, column: 1, scope: !4343)
!4368 = distinct !DISubprogram(name: "sys_heap_runtime_stats_get", scope: !134, file: !134, line: 416, type: !4369, scopeLine: 418, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4372)
!4369 = !DISubroutineType(types: !4370)
!4370 = !{!103, !4103, !4371}
!4371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4130, size: 32)
!4372 = !{!4373, !4374}
!4373 = !DILocalVariable(name: "heap", arg: 1, scope: !4368, file: !134, line: 416, type: !4103)
!4374 = !DILocalVariable(name: "stats", arg: 2, scope: !4368, file: !134, line: 417, type: !4371)
!4375 = !DILocation(line: 0, scope: !4368)
!4376 = !DILocation(line: 419, column: 12, scope: !4377)
!4377 = distinct !DILexicalBlock(scope: !4368, file: !134, line: 419, column: 6)
!4378 = !DILocation(line: 419, column: 21, scope: !4377)
!4379 = !DILocation(line: 423, column: 28, scope: !4368)
!4380 = !DILocation(line: 423, column: 34, scope: !4368)
!4381 = !DILocation(line: 423, column: 9, scope: !4368)
!4382 = !DILocation(line: 423, column: 20, scope: !4368)
!4383 = !DILocation(line: 424, column: 33, scope: !4368)
!4384 = !DILocation(line: 424, column: 39, scope: !4368)
!4385 = !DILocation(line: 424, column: 9, scope: !4368)
!4386 = !DILocation(line: 424, column: 25, scope: !4368)
!4387 = !DILocation(line: 425, column: 37, scope: !4368)
!4388 = !DILocation(line: 425, column: 43, scope: !4368)
!4389 = !DILocation(line: 425, column: 9, scope: !4368)
!4390 = !DILocation(line: 425, column: 29, scope: !4368)
!4391 = !DILocation(line: 427, column: 2, scope: !4368)
!4392 = !DILocation(line: 428, column: 1, scope: !4368)
!4393 = distinct !DISubprogram(name: "bucket_idx", scope: !142, file: !142, line: 250, type: !4394, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4396)
!4394 = !DISubroutineType(types: !4395)
!4395 = !{!103, !4107, !3379}
!4396 = !{!4397, !4398, !4399}
!4397 = !DILocalVariable(name: "h", arg: 1, scope: !4393, file: !142, line: 250, type: !4107)
!4398 = !DILocalVariable(name: "sz", arg: 2, scope: !4393, file: !142, line: 250, type: !3379)
!4399 = !DILocalVariable(name: "usable_sz", scope: !4393, file: !142, line: 252, type: !32)
!4400 = !DILocation(line: 0, scope: !4393)
!4401 = !DILocation(line: 253, column: 14, scope: !4393)
!4402 = !DILocation(line: 253, column: 12, scope: !4393)
!4403 = !DILocation(line: 253, column: 2, scope: !4393)
!4404 = distinct !DISubprogram(name: "set_chunk_used", scope: !142, file: !142, line: 147, type: !4405, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4407)
!4405 = !DISubroutineType(types: !4406)
!4406 = !{null, !4107, !2256, !211}
!4407 = !{!4408, !4409, !4410, !4411, !4412}
!4408 = !DILocalVariable(name: "h", arg: 1, scope: !4404, file: !142, line: 147, type: !4107)
!4409 = !DILocalVariable(name: "c", arg: 2, scope: !4404, file: !142, line: 147, type: !2256)
!4410 = !DILocalVariable(name: "used", arg: 3, scope: !4404, file: !142, line: 147, type: !211)
!4411 = !DILocalVariable(name: "buf", scope: !4404, file: !142, line: 149, type: !153)
!4412 = !DILocalVariable(name: "cmem", scope: !4404, file: !142, line: 150, type: !102)
!4413 = !DILocation(line: 0, scope: !4404)
!4414 = !DILocation(line: 149, column: 22, scope: !4404)
!4415 = !DILocation(line: 0, scope: !4416)
!4416 = distinct !DILexicalBlock(scope: !4417, file: !142, line: 159, column: 7)
!4417 = distinct !DILexicalBlock(scope: !4418, file: !142, line: 158, column: 9)
!4418 = distinct !DILexicalBlock(scope: !4404, file: !142, line: 152, column: 6)
!4419 = !DILocation(line: 159, column: 7, scope: !4417)
!4420 = !DILocation(line: 165, column: 1, scope: !4404)
!4421 = distinct !DISubprogram(name: "next_free_chunk", scope: !142, file: !142, line: 182, type: !4283, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4422)
!4422 = !{!4423, !4424}
!4423 = !DILocalVariable(name: "h", arg: 1, scope: !4421, file: !142, line: 182, type: !4107)
!4424 = !DILocalVariable(name: "c", arg: 2, scope: !4421, file: !142, line: 182, type: !2256)
!4425 = !DILocation(line: 0, scope: !4421)
!4426 = !DILocation(line: 184, column: 9, scope: !4421)
!4427 = !DILocation(line: 184, column: 2, scope: !4421)
!4428 = distinct !DISubprogram(name: "chunk_used", scope: !142, file: !142, line: 137, type: !4293, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4429)
!4429 = !{!4430, !4431}
!4430 = !DILocalVariable(name: "h", arg: 1, scope: !4428, file: !142, line: 137, type: !4107)
!4431 = !DILocalVariable(name: "c", arg: 2, scope: !4428, file: !142, line: 137, type: !2256)
!4432 = !DILocation(line: 0, scope: !4428)
!4433 = !DILocation(line: 139, column: 9, scope: !4428)
!4434 = !DILocation(line: 139, column: 42, scope: !4428)
!4435 = !DILocation(line: 139, column: 2, scope: !4428)
!4436 = distinct !DISubprogram(name: "left_chunk", scope: !142, file: !142, line: 199, type: !4283, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4437)
!4437 = !{!4438, !4439}
!4438 = !DILocalVariable(name: "h", arg: 1, scope: !4436, file: !142, line: 199, type: !4107)
!4439 = !DILocalVariable(name: "c", arg: 2, scope: !4436, file: !142, line: 199, type: !2256)
!4440 = !DILocation(line: 0, scope: !4436)
!4441 = !DILocation(line: 201, column: 13, scope: !4436)
!4442 = !DILocation(line: 201, column: 11, scope: !4436)
!4443 = !DILocation(line: 201, column: 2, scope: !4436)
!4444 = distinct !DISubprogram(name: "chunk_field", scope: !142, file: !142, line: 107, type: !4445, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4447)
!4445 = !DISubroutineType(types: !4446)
!4446 = !{!2256, !4107, !2256, !141}
!4447 = !{!4448, !4449, !4450, !4451, !4452}
!4448 = !DILocalVariable(name: "h", arg: 1, scope: !4444, file: !142, line: 107, type: !4107)
!4449 = !DILocalVariable(name: "c", arg: 2, scope: !4444, file: !142, line: 107, type: !2256)
!4450 = !DILocalVariable(name: "f", arg: 3, scope: !4444, file: !142, line: 108, type: !141)
!4451 = !DILocalVariable(name: "buf", scope: !4444, file: !142, line: 110, type: !153)
!4452 = !DILocalVariable(name: "cmem", scope: !4444, file: !142, line: 111, type: !102)
!4453 = !DILocation(line: 0, scope: !4444)
!4454 = !DILocation(line: 110, column: 22, scope: !4444)
!4455 = !DILocation(line: 111, column: 15, scope: !4444)
!4456 = !DILocation(line: 116, column: 11, scope: !4457)
!4457 = distinct !DILexicalBlock(scope: !4458, file: !142, line: 115, column: 9)
!4458 = distinct !DILexicalBlock(scope: !4444, file: !142, line: 113, column: 6)
!4459 = !DILocation(line: 116, column: 10, scope: !4457)
!4460 = !DILocation(line: 118, column: 1, scope: !4444)
!4461 = distinct !DISubprogram(name: "chunk_buf", scope: !142, file: !142, line: 101, type: !4462, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4464)
!4462 = !DISubroutineType(types: !4463)
!4463 = !{!153, !4107}
!4464 = !{!4465}
!4465 = !DILocalVariable(name: "h", arg: 1, scope: !4461, file: !142, line: 101, type: !4107)
!4466 = !DILocation(line: 0, scope: !4461)
!4467 = !DILocation(line: 104, column: 9, scope: !4461)
!4468 = !DILocation(line: 104, column: 2, scope: !4461)
!4469 = distinct !DISubprogram(name: "chunk_size", scope: !142, file: !142, line: 142, type: !4470, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4472)
!4470 = !DISubroutineType(types: !4471)
!4471 = !{!3379, !4107, !2256}
!4472 = !{!4473, !4474}
!4473 = !DILocalVariable(name: "h", arg: 1, scope: !4469, file: !142, line: 142, type: !4107)
!4474 = !DILocalVariable(name: "c", arg: 2, scope: !4469, file: !142, line: 142, type: !2256)
!4475 = !DILocation(line: 0, scope: !4469)
!4476 = !DILocation(line: 144, column: 9, scope: !4469)
!4477 = !DILocation(line: 144, column: 42, scope: !4469)
!4478 = !DILocation(line: 144, column: 2, scope: !4469)
!4479 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !142, file: !142, line: 245, type: !4480, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4482)
!4480 = !DISubroutineType(types: !4481)
!4481 = !{!120, !4107, !3379}
!4482 = !{!4483, !4484}
!4483 = !DILocalVariable(name: "h", arg: 1, scope: !4479, file: !142, line: 245, type: !4107)
!4484 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !4479, file: !142, line: 245, type: !3379)
!4485 = !DILocation(line: 0, scope: !4479)
!4486 = !DILocation(line: 247, column: 20, scope: !4479)
!4487 = !DILocation(line: 247, column: 33, scope: !4479)
!4488 = !DILocation(line: 247, column: 2, scope: !4479)
!4489 = distinct !DISubprogram(name: "in_bounds", scope: !134, file: !134, line: 23, type: !4293, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4490)
!4490 = !{!4491, !4492}
!4491 = !DILocalVariable(name: "h", arg: 1, scope: !4489, file: !134, line: 23, type: !4107)
!4492 = !DILocalVariable(name: "c", arg: 2, scope: !4489, file: !134, line: 23, type: !2256)
!4493 = !DILocation(line: 0, scope: !4489)
!4494 = !DILocation(line: 25, column: 2, scope: !4495)
!4495 = distinct !DILexicalBlock(scope: !4496, file: !134, line: 25, column: 2)
!4496 = distinct !DILexicalBlock(scope: !4489, file: !134, line: 25, column: 2)
!4497 = !DILocation(line: 25, column: 2, scope: !4496)
!4498 = !DILocation(line: 26, column: 2, scope: !4499)
!4499 = distinct !DILexicalBlock(scope: !4500, file: !134, line: 26, column: 2)
!4500 = distinct !DILexicalBlock(scope: !4489, file: !134, line: 26, column: 2)
!4501 = !DILocation(line: 26, column: 2, scope: !4500)
!4502 = !DILocation(line: 27, column: 2, scope: !4503)
!4503 = distinct !DILexicalBlock(scope: !4504, file: !134, line: 27, column: 2)
!4504 = distinct !DILexicalBlock(scope: !4489, file: !134, line: 27, column: 2)
!4505 = !DILocation(line: 29, column: 1, scope: !4489)
!4506 = distinct !DISubprogram(name: "prev_free_chunk", scope: !142, file: !142, line: 177, type: !4283, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4507)
!4507 = !{!4508, !4509}
!4508 = !DILocalVariable(name: "h", arg: 1, scope: !4506, file: !142, line: 177, type: !4107)
!4509 = !DILocalVariable(name: "c", arg: 2, scope: !4506, file: !142, line: 177, type: !2256)
!4510 = !DILocation(line: 0, scope: !4506)
!4511 = !DILocation(line: 179, column: 9, scope: !4506)
!4512 = !DILocation(line: 179, column: 2, scope: !4506)
!4513 = distinct !DISubprogram(name: "sys_heap_stress", scope: !134, file: !134, line: 300, type: !4514, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4529)
!4514 = !DISubroutineType(types: !4515)
!4515 = !{null, !4516, !4519, !102, !120, !137, !102, !120, !103, !4522}
!4516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4517, size: 32)
!4517 = !DISubroutineType(types: !4518)
!4518 = !{!102, !102, !120}
!4519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4520, size: 32)
!4520 = !DISubroutineType(types: !4521)
!4521 = !{null, !102, !102}
!4522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4523, size: 32)
!4523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_stress_result", file: !113, line: 62, size: 192, elements: !4524)
!4524 = !{!4525, !4526, !4527, !4528}
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "total_allocs", scope: !4523, file: !113, line: 63, baseType: !137, size: 32)
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "successful_allocs", scope: !4523, file: !113, line: 64, baseType: !137, size: 32, offset: 32)
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "total_frees", scope: !4523, file: !113, line: 65, baseType: !137, size: 32, offset: 64)
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "accumulated_in_use_bytes", scope: !4523, file: !113, line: 66, baseType: !163, size: 64, offset: 128)
!4529 = !{!4530, !4531, !4532, !4533, !4534, !4535, !4536, !4537, !4538, !4539, !4556, !4558, !4563, !4564, !4566, !4567}
!4530 = !DILocalVariable(name: "alloc_fn", arg: 1, scope: !4513, file: !134, line: 300, type: !4516)
!4531 = !DILocalVariable(name: "free_fn", arg: 2, scope: !4513, file: !134, line: 301, type: !4519)
!4532 = !DILocalVariable(name: "arg", arg: 3, scope: !4513, file: !134, line: 302, type: !102)
!4533 = !DILocalVariable(name: "total_bytes", arg: 4, scope: !4513, file: !134, line: 302, type: !120)
!4534 = !DILocalVariable(name: "op_count", arg: 5, scope: !4513, file: !134, line: 303, type: !137)
!4535 = !DILocalVariable(name: "scratch_mem", arg: 6, scope: !4513, file: !134, line: 304, type: !102)
!4536 = !DILocalVariable(name: "scratch_bytes", arg: 7, scope: !4513, file: !134, line: 304, type: !120)
!4537 = !DILocalVariable(name: "target_percent", arg: 8, scope: !4513, file: !134, line: 305, type: !103)
!4538 = !DILocalVariable(name: "result", arg: 9, scope: !4513, file: !134, line: 306, type: !4522)
!4539 = !DILocalVariable(name: "sr", scope: !4513, file: !134, line: 308, type: !4540)
!4540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_stress_rec", file: !134, line: 204, size: 288, elements: !4541)
!4541 = !{!4542, !4543, !4544, !4545, !4546, !4552, !4553, !4554, !4555}
!4542 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_fn", scope: !4540, file: !134, line: 205, baseType: !4516, size: 32)
!4543 = !DIDerivedType(tag: DW_TAG_member, name: "free_fn", scope: !4540, file: !134, line: 206, baseType: !4519, size: 32, offset: 32)
!4544 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !4540, file: !134, line: 207, baseType: !102, size: 32, offset: 64)
!4545 = !DIDerivedType(tag: DW_TAG_member, name: "total_bytes", scope: !4540, file: !134, line: 208, baseType: !120, size: 32, offset: 96)
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !4540, file: !134, line: 209, baseType: !4547, size: 32, offset: 128)
!4547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4548, size: 32)
!4548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_stress_block", file: !134, line: 216, size: 64, elements: !4549)
!4549 = !{!4550, !4551}
!4550 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4548, file: !134, line: 217, baseType: !102, size: 32)
!4551 = !DIDerivedType(tag: DW_TAG_member, name: "sz", scope: !4548, file: !134, line: 218, baseType: !120, size: 32, offset: 32)
!4552 = !DIDerivedType(tag: DW_TAG_member, name: "nblocks", scope: !4540, file: !134, line: 210, baseType: !120, size: 32, offset: 160)
!4553 = !DIDerivedType(tag: DW_TAG_member, name: "blocks_alloced", scope: !4540, file: !134, line: 211, baseType: !120, size: 32, offset: 192)
!4554 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_alloced", scope: !4540, file: !134, line: 212, baseType: !120, size: 32, offset: 224)
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "target_percent", scope: !4540, file: !134, line: 213, baseType: !137, size: 32, offset: 256)
!4556 = !DILocalVariable(name: "i", scope: !4557, file: !134, line: 320, type: !137)
!4557 = distinct !DILexicalBlock(scope: !4513, file: !134, line: 320, column: 2)
!4558 = !DILocalVariable(name: "sz", scope: !4559, file: !134, line: 322, type: !120)
!4559 = distinct !DILexicalBlock(scope: !4560, file: !134, line: 321, column: 31)
!4560 = distinct !DILexicalBlock(scope: !4561, file: !134, line: 321, column: 7)
!4561 = distinct !DILexicalBlock(scope: !4562, file: !134, line: 320, column: 42)
!4562 = distinct !DILexicalBlock(scope: !4557, file: !134, line: 320, column: 2)
!4563 = !DILocalVariable(name: "p", scope: !4559, file: !134, line: 323, type: !102)
!4564 = !DILocalVariable(name: "b", scope: !4565, file: !134, line: 334, type: !103)
!4565 = distinct !DILexicalBlock(scope: !4560, file: !134, line: 333, column: 10)
!4566 = !DILocalVariable(name: "p", scope: !4565, file: !134, line: 335, type: !102)
!4567 = !DILocalVariable(name: "sz", scope: !4565, file: !134, line: 336, type: !120)
!4568 = !DILocation(line: 0, scope: !4513)
!4569 = !DILocation(line: 308, column: 2, scope: !4513)
!4570 = !DILocation(line: 308, column: 27, scope: !4513)
!4571 = !DILocation(line: 308, column: 32, scope: !4513)
!4572 = !DILocation(line: 314, column: 34, scope: !4513)
!4573 = !DILocation(line: 318, column: 12, scope: !4513)
!4574 = !DILocation(line: 0, scope: !4557)
!4575 = !DILocation(line: 320, column: 25, scope: !4562)
!4576 = !DILocation(line: 320, column: 2, scope: !4557)
!4577 = !DILocation(line: 346, column: 1, scope: !4513)
!4578 = !DILocation(line: 321, column: 7, scope: !4560)
!4579 = !DILocation(line: 321, column: 7, scope: !4561)
!4580 = !DILocation(line: 322, column: 16, scope: !4559)
!4581 = !DILocation(line: 0, scope: !4559)
!4582 = !DILocation(line: 323, column: 14, scope: !4559)
!4583 = !DILocation(line: 325, column: 24, scope: !4559)
!4584 = !DILocation(line: 326, column: 10, scope: !4585)
!4585 = distinct !DILexicalBlock(scope: !4559, file: !134, line: 326, column: 8)
!4586 = !DILocation(line: 326, column: 8, scope: !4559)
!4587 = !DILocation(line: 327, column: 30, scope: !4588)
!4588 = distinct !DILexicalBlock(scope: !4585, file: !134, line: 326, column: 19)
!4589 = !DILocation(line: 328, column: 34, scope: !4588)
!4590 = !DILocation(line: 328, column: 38, scope: !4588)
!4591 = !DILocation(line: 329, column: 34, scope: !4588)
!4592 = !DILocation(line: 329, column: 37, scope: !4588)
!4593 = !DILocation(line: 330, column: 22, scope: !4588)
!4594 = !DILocation(line: 331, column: 22, scope: !4588)
!4595 = !DILocation(line: 332, column: 4, scope: !4588)
!4596 = !DILocation(line: 334, column: 12, scope: !4565)
!4597 = !DILocation(line: 0, scope: !4565)
!4598 = !DILocation(line: 335, column: 27, scope: !4565)
!4599 = !DILocation(line: 336, column: 29, scope: !4565)
!4600 = !DILocation(line: 338, column: 23, scope: !4565)
!4601 = !DILocation(line: 339, column: 4, scope: !4565)
!4602 = !DILocation(line: 339, column: 47, scope: !4565)
!4603 = !DILocation(line: 339, column: 19, scope: !4565)
!4604 = !DILocation(line: 340, column: 21, scope: !4565)
!4605 = !DILocation(line: 341, column: 21, scope: !4565)
!4606 = !DILocation(line: 342, column: 4, scope: !4565)
!4607 = !DILocation(line: 344, column: 42, scope: !4561)
!4608 = !DILocation(line: 344, column: 39, scope: !4561)
!4609 = !DILocation(line: 344, column: 36, scope: !4561)
!4610 = !DILocation(line: 320, column: 38, scope: !4562)
!4611 = distinct !{!4611, !4576, !4612}
!4612 = !DILocation(line: 345, column: 2, scope: !4557)
!4613 = distinct !DISubprogram(name: "rand_alloc_choice", scope: !134, file: !134, line: 234, type: !4614, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4617)
!4614 = !DISubroutineType(types: !4615)
!4615 = !{!211, !4616}
!4616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4540, size: 32)
!4617 = !{!4618, !4619, !4623, !4624}
!4618 = !DILocalVariable(name: "sr", arg: 1, scope: !4613, file: !134, line: 234, type: !4616)
!4619 = !DILocalVariable(name: "full_pct", scope: !4620, file: !134, line: 259, type: !137)
!4620 = distinct !DILexicalBlock(scope: !4621, file: !134, line: 241, column: 9)
!4621 = distinct !DILexicalBlock(scope: !4622, file: !134, line: 239, column: 13)
!4622 = distinct !DILexicalBlock(scope: !4613, file: !134, line: 237, column: 6)
!4623 = !DILocalVariable(name: "target", scope: !4620, file: !134, line: 260, type: !137)
!4624 = !DILocalVariable(name: "free_chance", scope: !4620, file: !134, line: 261, type: !137)
!4625 = !DILocation(line: 0, scope: !4613)
!4626 = !DILocation(line: 237, column: 10, scope: !4622)
!4627 = !DILocation(line: 237, column: 25, scope: !4622)
!4628 = !DILocation(line: 237, column: 6, scope: !4613)
!4629 = !DILocation(line: 239, column: 39, scope: !4621)
!4630 = !DILocation(line: 239, column: 32, scope: !4621)
!4631 = !DILocation(line: 239, column: 13, scope: !4622)
!4632 = !DILocation(line: 259, column: 34, scope: !4620)
!4633 = !DILocation(line: 259, column: 28, scope: !4620)
!4634 = !DILocation(line: 259, column: 55, scope: !4620)
!4635 = !DILocation(line: 259, column: 49, scope: !4620)
!4636 = !DILocation(line: 0, scope: !4620)
!4637 = !DILocation(line: 260, column: 25, scope: !4620)
!4638 = !DILocation(line: 263, column: 16, scope: !4639)
!4639 = distinct !DILexicalBlock(scope: !4620, file: !134, line: 263, column: 7)
!4640 = !DILocation(line: 263, column: 7, scope: !4620)
!4641 = !DILocation(line: 264, column: 42, scope: !4642)
!4642 = distinct !DILexicalBlock(scope: !4639, file: !134, line: 263, column: 38)
!4643 = !DILocation(line: 264, column: 27, scope: !4642)
!4644 = !DILocation(line: 265, column: 3, scope: !4642)
!4645 = !DILocation(line: 267, column: 10, scope: !4620)
!4646 = !DILocation(line: 267, column: 19, scope: !4620)
!4647 = !DILocation(line: 0, scope: !4622)
!4648 = !DILocation(line: 269, column: 1, scope: !4613)
!4649 = distinct !DISubprogram(name: "rand_alloc_size", scope: !134, file: !134, line: 274, type: !4650, scopeLine: 275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4652)
!4650 = !DISubroutineType(types: !4651)
!4651 = !{!120, !4616}
!4652 = !{!4653, !4654}
!4653 = !DILocalVariable(name: "sr", arg: 1, scope: !4649, file: !134, line: 274, type: !4616)
!4654 = !DILocalVariable(name: "scale", scope: !4649, file: !134, line: 281, type: !103)
!4655 = !DILocation(line: 0, scope: !4649)
!4656 = !DILocation(line: 281, column: 32, scope: !4649)
!4657 = !DILocation(line: 281, column: 18, scope: !4649)
!4658 = !DILocation(line: 283, column: 9, scope: !4649)
!4659 = !DILocation(line: 283, column: 20, scope: !4649)
!4660 = !DILocation(line: 283, column: 18, scope: !4649)
!4661 = !DILocation(line: 283, column: 2, scope: !4649)
!4662 = distinct !DISubprogram(name: "rand_free_choice", scope: !134, file: !134, line: 287, type: !4650, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4663)
!4663 = !{!4664}
!4664 = !DILocalVariable(name: "sr", arg: 1, scope: !4662, file: !134, line: 287, type: !4616)
!4665 = !DILocation(line: 0, scope: !4662)
!4666 = !DILocation(line: 289, column: 9, scope: !4662)
!4667 = !DILocation(line: 289, column: 24, scope: !4662)
!4668 = !DILocation(line: 289, column: 18, scope: !4662)
!4669 = !DILocation(line: 289, column: 2, scope: !4662)
!4670 = !DILocation(line: 229, column: 10, scope: !133)
!4671 = !DILocation(line: 229, column: 16, scope: !133)
!4672 = !DILocation(line: 229, column: 40, scope: !133)
!4673 = !DILocation(line: 229, column: 8, scope: !133)
!4674 = !DILocation(line: 231, column: 26, scope: !133)
!4675 = !DILocation(line: 231, column: 9, scope: !133)
!4676 = !DILocation(line: 231, column: 2, scope: !133)
!4677 = distinct !DISubprogram(name: "heap_print_info", scope: !134, file: !134, line: 351, type: !4678, scopeLine: 352, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4680)
!4678 = !DISubroutineType(types: !4679)
!4679 = !{null, !4107, !211}
!4680 = !{!4681, !4682, !4683, !4684, !4685, !4686, !4687, !4688, !4689, !4693, !4694, !4695, !4698}
!4681 = !DILocalVariable(name: "h", arg: 1, scope: !4677, file: !134, line: 351, type: !4107)
!4682 = !DILocalVariable(name: "dump_chunks", arg: 2, scope: !4677, file: !134, line: 351, type: !211)
!4683 = !DILocalVariable(name: "i", scope: !4677, file: !134, line: 353, type: !103)
!4684 = !DILocalVariable(name: "nb_buckets", scope: !4677, file: !134, line: 353, type: !103)
!4685 = !DILocalVariable(name: "free_bytes", scope: !4677, file: !134, line: 354, type: !120)
!4686 = !DILocalVariable(name: "allocated_bytes", scope: !4677, file: !134, line: 354, type: !120)
!4687 = !DILocalVariable(name: "total", scope: !4677, file: !134, line: 354, type: !120)
!4688 = !DILocalVariable(name: "overhead", scope: !4677, file: !134, line: 354, type: !120)
!4689 = !DILocalVariable(name: "first", scope: !4690, file: !134, line: 363, type: !2256)
!4690 = distinct !DILexicalBlock(scope: !4691, file: !134, line: 362, column: 35)
!4691 = distinct !DILexicalBlock(scope: !4692, file: !134, line: 362, column: 2)
!4692 = distinct !DILexicalBlock(scope: !4677, file: !134, line: 362, column: 2)
!4693 = !DILocalVariable(name: "largest", scope: !4690, file: !134, line: 364, type: !3379)
!4694 = !DILocalVariable(name: "count", scope: !4690, file: !134, line: 365, type: !103)
!4695 = !DILocalVariable(name: "curr", scope: !4696, file: !134, line: 368, type: !2256)
!4696 = distinct !DILexicalBlock(scope: !4697, file: !134, line: 367, column: 14)
!4697 = distinct !DILexicalBlock(scope: !4690, file: !134, line: 367, column: 7)
!4698 = !DILocalVariable(name: "c", scope: !4699, file: !134, line: 384, type: !2256)
!4699 = distinct !DILexicalBlock(scope: !4700, file: !134, line: 384, column: 3)
!4700 = distinct !DILexicalBlock(scope: !4701, file: !134, line: 382, column: 19)
!4701 = distinct !DILexicalBlock(scope: !4677, file: !134, line: 382, column: 6)
!4702 = !DILocation(line: 0, scope: !4677)
!4703 = !DILocation(line: 353, column: 39, scope: !4677)
!4704 = !DILocation(line: 353, column: 22, scope: !4677)
!4705 = !DILocation(line: 353, column: 50, scope: !4677)
!4706 = !DILocation(line: 354, column: 2, scope: !4677)
!4707 = !DILocation(line: 357, column: 9, scope: !4677)
!4708 = !DILocation(line: 356, column: 2, scope: !4677)
!4709 = !DILocation(line: 359, column: 2, scope: !4677)
!4710 = !DILocation(line: 362, column: 16, scope: !4691)
!4711 = !DILocation(line: 362, column: 2, scope: !4692)
!4712 = !DILocation(line: 363, column: 35, scope: !4690)
!4713 = !DILocation(line: 0, scope: !4690)
!4714 = !DILocation(line: 367, column: 7, scope: !4697)
!4715 = !DILocation(line: 367, column: 7, scope: !4690)
!4716 = !DILocation(line: 0, scope: !4696)
!4717 = !DILocation(line: 370, column: 10, scope: !4718)
!4718 = distinct !DILexicalBlock(scope: !4696, file: !134, line: 369, column: 7)
!4719 = !DILocation(line: 371, column: 15, scope: !4718)
!4720 = !DILocation(line: 372, column: 12, scope: !4718)
!4721 = !DILocation(line: 373, column: 18, scope: !4696)
!4722 = !DILocation(line: 373, column: 4, scope: !4718)
!4723 = distinct !{!4723, !4724, !4725}
!4724 = !DILocation(line: 369, column: 4, scope: !4696)
!4725 = !DILocation(line: 373, column: 26, scope: !4696)
!4726 = !DILocation(line: 377, column: 23, scope: !4727)
!4727 = distinct !DILexicalBlock(scope: !4728, file: !134, line: 375, column: 14)
!4728 = distinct !DILexicalBlock(scope: !4690, file: !134, line: 375, column: 7)
!4729 = !DILocation(line: 378, column: 20, scope: !4727)
!4730 = !DILocation(line: 376, column: 4, scope: !4727)
!4731 = !DILocation(line: 379, column: 3, scope: !4727)
!4732 = !DILocation(line: 362, column: 31, scope: !4691)
!4733 = distinct !{!4733, !4711, !4734}
!4734 = !DILocation(line: 380, column: 2, scope: !4692)
!4735 = !DILocation(line: 382, column: 6, scope: !4677)
!4736 = !DILocation(line: 383, column: 3, scope: !4700)
!4737 = !DILocation(line: 0, scope: !4699)
!4738 = !DILocation(line: 384, column: 8, scope: !4699)
!4739 = !DILocation(line: 387, column: 11, scope: !4740)
!4740 = distinct !DILexicalBlock(scope: !4741, file: !134, line: 384, column: 50)
!4741 = distinct !DILexicalBlock(scope: !4699, file: !134, line: 384, column: 3)
!4742 = !DILocation(line: 390, column: 11, scope: !4740)
!4743 = !DILocation(line: 391, column: 11, scope: !4740)
!4744 = !DILocation(line: 392, column: 11, scope: !4740)
!4745 = !DILocation(line: 385, column: 4, scope: !4740)
!4746 = !DILocation(line: 393, column: 16, scope: !4747)
!4747 = distinct !DILexicalBlock(scope: !4740, file: !134, line: 393, column: 8)
!4748 = !DILocation(line: 393, column: 10, scope: !4747)
!4749 = !DILocation(line: 393, column: 8, scope: !4740)
!4750 = !DILocation(line: 384, column: 31, scope: !4741)
!4751 = !DILocation(line: 384, column: 3, scope: !4741)
!4752 = distinct !{!4752, !4753, !4754}
!4753 = !DILocation(line: 384, column: 3, scope: !4699)
!4754 = !DILocation(line: 396, column: 3, scope: !4699)
!4755 = !DILocation(line: 399, column: 2, scope: !4677)
!4756 = !DILocation(line: 401, column: 13, scope: !4677)
!4757 = !DILocation(line: 401, column: 23, scope: !4677)
!4758 = !DILocation(line: 401, column: 36, scope: !4677)
!4759 = !DILocation(line: 402, column: 21, scope: !4677)
!4760 = !DILocation(line: 402, column: 34, scope: !4677)
!4761 = !DILocation(line: 402, column: 32, scope: !4677)
!4762 = !DILocation(line: 405, column: 15, scope: !4677)
!4763 = !DILocation(line: 405, column: 33, scope: !4677)
!4764 = !DILocation(line: 405, column: 26, scope: !4677)
!4765 = !DILocation(line: 405, column: 37, scope: !4677)
!4766 = !DILocation(line: 405, column: 45, scope: !4677)
!4767 = !DILocation(line: 403, column: 2, scope: !4677)
!4768 = !DILocation(line: 407, column: 1, scope: !4677)
!4769 = distinct !DISubprogram(name: "sys_heap_print_info", scope: !134, file: !134, line: 409, type: !4770, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4772)
!4770 = !DISubroutineType(types: !4771)
!4771 = !{null, !4103, !211}
!4772 = !{!4773, !4774}
!4773 = !DILocalVariable(name: "heap", arg: 1, scope: !4769, file: !134, line: 409, type: !4103)
!4774 = !DILocalVariable(name: "dump_chunks", arg: 2, scope: !4769, file: !134, line: 409, type: !211)
!4775 = !DILocation(line: 0, scope: !4769)
!4776 = !DILocation(line: 411, column: 24, scope: !4769)
!4777 = !DILocation(line: 411, column: 2, scope: !4769)
!4778 = !DILocation(line: 412, column: 1, scope: !4769)
!4779 = distinct !DISubprogram(name: "sys_heap_runtime_stats_reset_max", scope: !134, file: !134, line: 430, type: !4780, scopeLine: 431, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4782)
!4780 = !DISubroutineType(types: !4781)
!4781 = !{!103, !4103}
!4782 = !{!4783}
!4783 = !DILocalVariable(name: "heap", arg: 1, scope: !4779, file: !134, line: 430, type: !4103)
!4784 = !DILocation(line: 0, scope: !4779)
!4785 = !DILocation(line: 432, column: 11, scope: !4786)
!4786 = distinct !DILexicalBlock(scope: !4779, file: !134, line: 432, column: 6)
!4787 = !DILocation(line: 432, column: 6, scope: !4779)
!4788 = !DILocation(line: 436, column: 42, scope: !4779)
!4789 = !DILocation(line: 436, column: 48, scope: !4779)
!4790 = !DILocation(line: 436, column: 14, scope: !4779)
!4791 = !DILocation(line: 436, column: 34, scope: !4779)
!4792 = !DILocation(line: 438, column: 2, scope: !4779)
!4793 = !DILocation(line: 439, column: 1, scope: !4779)
!4794 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2273, file: !2273, line: 1338, type: !4795, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2269, retainedNodes: !4803)
!4795 = !DISubroutineType(types: !4796)
!4796 = !{!103, !3046, !102, !199, !4797, !137}
!4797 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3012, line: 99, baseType: !4798)
!4798 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3012, line: 40, baseType: !4799)
!4799 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2273, baseType: !4800)
!4800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4801)
!4801 = !{!4802}
!4802 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4800, file: !2273, baseType: !102, size: 32)
!4803 = !{!4804, !4805, !4806, !4807, !4808, !4809, !4813, !4814, !4815, !4817, !4822, !4867, !4870, !4873, !4874, !4875, !4876, !4877, !4878, !4879, !4882, !4883, !4884, !4888, !4891, !4893, !4896, !4897, !4898, !4903, !4909, !4912, !4916, !4922, !4926, !4929, !4931, !4934}
!4804 = !DILocalVariable(name: "out", arg: 1, scope: !4794, file: !2273, line: 1338, type: !3046)
!4805 = !DILocalVariable(name: "ctx", arg: 2, scope: !4794, file: !2273, line: 1338, type: !102)
!4806 = !DILocalVariable(name: "fp", arg: 3, scope: !4794, file: !2273, line: 1338, type: !199)
!4807 = !DILocalVariable(name: "ap", arg: 4, scope: !4794, file: !2273, line: 1339, type: !4797)
!4808 = !DILocalVariable(name: "flags", arg: 5, scope: !4794, file: !2273, line: 1339, type: !137)
!4809 = !DILocalVariable(name: "buf", scope: !4794, file: !2273, line: 1341, type: !4810)
!4810 = !DICompositeType(tag: DW_TAG_array_type, baseType: !109, size: 176, elements: !4811)
!4811 = !{!4812}
!4812 = !DISubrange(count: 22)
!4813 = !DILocalVariable(name: "count", scope: !4794, file: !2273, line: 1342, type: !120)
!4814 = !DILocalVariable(name: "sint", scope: !4794, file: !2273, line: 1343, type: !2292)
!4815 = !DILocalVariable(name: "tagged_ap", scope: !4794, file: !2273, line: 1345, type: !4816)
!4816 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !211)
!4817 = !DILocalVariable(name: "rc", scope: !4818, file: !2273, line: 1377, type: !103)
!4818 = distinct !DILexicalBlock(scope: !4819, file: !2273, line: 1377, column: 4)
!4819 = distinct !DILexicalBlock(scope: !4820, file: !2273, line: 1376, column: 19)
!4820 = distinct !DILexicalBlock(scope: !4821, file: !2273, line: 1376, column: 7)
!4821 = distinct !DILexicalBlock(scope: !4794, file: !2273, line: 1375, column: 19)
!4822 = !DILocalVariable(name: "state", scope: !4821, file: !2273, line: 1395, type: !4823)
!4823 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4794, file: !2273, line: 1392, size: 192, elements: !4824)
!4824 = !{!4825, !4835}
!4825 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4823, file: !2273, line: 1393, baseType: !4826, size: 64)
!4826 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2273, line: 166, size: 64, elements: !4827)
!4827 = !{!4828, !4829, !4830, !4832, !4834}
!4828 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4826, file: !2273, line: 168, baseType: !2292, size: 64)
!4829 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4826, file: !2273, line: 171, baseType: !2295, size: 64)
!4830 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4826, file: !2273, line: 174, baseType: !4831, size: 64)
!4831 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!4832 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4826, file: !2273, line: 177, baseType: !4833, size: 64)
!4833 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!4834 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4826, file: !2273, line: 180, baseType: !102, size: 32)
!4835 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4823, file: !2273, line: 1394, baseType: !4836, size: 96, offset: 64)
!4836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2273, line: 189, size: 96, elements: !4837)
!4837 = !{!4838, !4839, !4840, !4841, !4842, !4843, !4844, !4845, !4846, !4847, !4848, !4849, !4850, !4851, !4852, !4853, !4854, !4855, !4856, !4857, !4862}
!4838 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4836, file: !2273, line: 191, baseType: !211, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4839 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4836, file: !2273, line: 194, baseType: !211, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4840 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4836, file: !2273, line: 197, baseType: !211, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4841 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4836, file: !2273, line: 200, baseType: !211, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4842 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4836, file: !2273, line: 203, baseType: !211, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4843 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4836, file: !2273, line: 206, baseType: !211, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4844 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4836, file: !2273, line: 209, baseType: !211, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4845 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4836, file: !2273, line: 212, baseType: !211, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4846 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4836, file: !2273, line: 219, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4847 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4836, file: !2273, line: 222, baseType: !211, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4848 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4836, file: !2273, line: 229, baseType: !211, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4849 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4836, file: !2273, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4850 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4836, file: !2273, line: 238, baseType: !211, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4851 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4836, file: !2273, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4852 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4836, file: !2273, line: 244, baseType: !211, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4853 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4836, file: !2273, line: 247, baseType: !211, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4854 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4836, file: !2273, line: 252, baseType: !211, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4855 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4836, file: !2273, line: 257, baseType: !211, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4856 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4836, file: !2273, line: 260, baseType: !209, size: 8, offset: 24)
!4857 = !DIDerivedType(tag: DW_TAG_member, scope: !4836, file: !2273, line: 262, baseType: !4858, size: 32, offset: 32)
!4858 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4836, file: !2273, line: 262, size: 32, elements: !4859)
!4859 = !{!4860, !4861}
!4860 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4858, file: !2273, line: 267, baseType: !103, size: 32)
!4861 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4858, file: !2273, line: 289, baseType: !103, size: 32)
!4862 = !DIDerivedType(tag: DW_TAG_member, scope: !4836, file: !2273, line: 292, baseType: !4863, size: 32, offset: 64)
!4863 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4836, file: !2273, line: 292, size: 32, elements: !4864)
!4864 = !{!4865, !4866}
!4865 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4863, file: !2273, line: 297, baseType: !103, size: 32)
!4866 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4863, file: !2273, line: 306, baseType: !103, size: 32)
!4867 = !DILocalVariable(name: "conv", scope: !4821, file: !2273, line: 1400, type: !4868)
!4868 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4869)
!4869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4836, size: 32)
!4870 = !DILocalVariable(name: "value", scope: !4821, file: !2273, line: 1401, type: !4871)
!4871 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4872)
!4872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4826, size: 32)
!4873 = !DILocalVariable(name: "sp", scope: !4821, file: !2273, line: 1402, type: !199)
!4874 = !DILocalVariable(name: "width", scope: !4821, file: !2273, line: 1403, type: !103)
!4875 = !DILocalVariable(name: "precision", scope: !4821, file: !2273, line: 1404, type: !103)
!4876 = !DILocalVariable(name: "bps", scope: !4821, file: !2273, line: 1405, type: !199)
!4877 = !DILocalVariable(name: "bpe", scope: !4821, file: !2273, line: 1406, type: !199)
!4878 = !DILocalVariable(name: "sign", scope: !4821, file: !2273, line: 1407, type: !109)
!4879 = !DILocalVariable(name: "arg", scope: !4880, file: !2273, line: 1432, type: !103)
!4880 = distinct !DILexicalBlock(scope: !4881, file: !2273, line: 1431, column: 24)
!4881 = distinct !DILexicalBlock(scope: !4821, file: !2273, line: 1431, column: 7)
!4882 = !DILocalVariable(name: "specifier_cat", scope: !4821, file: !2273, line: 1468, type: !2272)
!4883 = !DILocalVariable(name: "length_mod", scope: !4821, file: !2273, line: 1470, type: !2280)
!4884 = !DILocalVariable(name: "rc", scope: !4885, file: !2273, line: 1575, type: !103)
!4885 = distinct !DILexicalBlock(scope: !4886, file: !2273, line: 1575, column: 4)
!4886 = distinct !DILexicalBlock(scope: !4887, file: !2273, line: 1574, column: 43)
!4887 = distinct !DILexicalBlock(scope: !4821, file: !2273, line: 1574, column: 7)
!4888 = !DILocalVariable(name: "rc", scope: !4889, file: !2273, line: 1584, type: !103)
!4889 = distinct !DILexicalBlock(scope: !4890, file: !2273, line: 1584, column: 4)
!4890 = distinct !DILexicalBlock(scope: !4821, file: !2273, line: 1582, column: 28)
!4891 = !DILocalVariable(name: "len", scope: !4892, file: !2273, line: 1589, type: !120)
!4892 = distinct !DILexicalBlock(scope: !4890, file: !2273, line: 1586, column: 13)
!4893 = !DILocalVariable(name: "len", scope: !4894, file: !2273, line: 1641, type: !120)
!4894 = distinct !DILexicalBlock(scope: !4895, file: !2273, line: 1640, column: 24)
!4895 = distinct !DILexicalBlock(scope: !4890, file: !2273, line: 1640, column: 8)
!4896 = !DILocalVariable(name: "nj_len", scope: !4821, file: !2273, line: 1722, type: !120)
!4897 = !DILocalVariable(name: "pad_len", scope: !4821, file: !2273, line: 1723, type: !103)
!4898 = !DILocalVariable(name: "pad", scope: !4899, file: !2273, line: 1751, type: !109)
!4899 = distinct !DILexicalBlock(scope: !4900, file: !2273, line: 1750, column: 26)
!4900 = distinct !DILexicalBlock(scope: !4901, file: !2273, line: 1750, column: 8)
!4901 = distinct !DILexicalBlock(scope: !4902, file: !2273, line: 1747, column: 18)
!4902 = distinct !DILexicalBlock(scope: !4821, file: !2273, line: 1747, column: 7)
!4903 = !DILocalVariable(name: "rc", scope: !4904, file: !2273, line: 1758, type: !103)
!4904 = distinct !DILexicalBlock(scope: !4905, file: !2273, line: 1758, column: 7)
!4905 = distinct !DILexicalBlock(scope: !4906, file: !2273, line: 1757, column: 21)
!4906 = distinct !DILexicalBlock(scope: !4907, file: !2273, line: 1757, column: 10)
!4907 = distinct !DILexicalBlock(scope: !4908, file: !2273, line: 1756, column: 26)
!4908 = distinct !DILexicalBlock(scope: !4899, file: !2273, line: 1756, column: 9)
!4909 = !DILocalVariable(name: "rc", scope: !4910, file: !2273, line: 1765, type: !103)
!4910 = distinct !DILexicalBlock(scope: !4911, file: !2273, line: 1765, column: 6)
!4911 = distinct !DILexicalBlock(scope: !4899, file: !2273, line: 1764, column: 25)
!4912 = !DILocalVariable(name: "rc", scope: !4913, file: !2273, line: 1774, type: !103)
!4913 = distinct !DILexicalBlock(scope: !4914, file: !2273, line: 1774, column: 4)
!4914 = distinct !DILexicalBlock(scope: !4915, file: !2273, line: 1773, column: 18)
!4915 = distinct !DILexicalBlock(scope: !4821, file: !2273, line: 1773, column: 7)
!4916 = !DILocalVariable(name: "rc", scope: !4917, file: !2273, line: 1819, type: !103)
!4917 = distinct !DILexicalBlock(scope: !4918, file: !2273, line: 1819, column: 5)
!4918 = distinct !DILexicalBlock(scope: !4919, file: !2273, line: 1818, column: 44)
!4919 = distinct !DILexicalBlock(scope: !4920, file: !2273, line: 1818, column: 8)
!4920 = distinct !DILexicalBlock(scope: !4921, file: !2273, line: 1817, column: 10)
!4921 = distinct !DILexicalBlock(scope: !4821, file: !2273, line: 1777, column: 7)
!4922 = !DILocalVariable(name: "rc", scope: !4923, file: !2273, line: 1823, type: !103)
!4923 = distinct !DILexicalBlock(scope: !4924, file: !2273, line: 1823, column: 5)
!4924 = distinct !DILexicalBlock(scope: !4925, file: !2273, line: 1822, column: 26)
!4925 = distinct !DILexicalBlock(scope: !4920, file: !2273, line: 1822, column: 8)
!4926 = !DILocalVariable(name: "rc", scope: !4927, file: !2273, line: 1828, type: !103)
!4927 = distinct !DILexicalBlock(scope: !4928, file: !2273, line: 1828, column: 5)
!4928 = distinct !DILexicalBlock(scope: !4920, file: !2273, line: 1827, column: 26)
!4929 = !DILocalVariable(name: "rc", scope: !4930, file: !2273, line: 1831, type: !103)
!4930 = distinct !DILexicalBlock(scope: !4920, file: !2273, line: 1831, column: 4)
!4931 = !DILocalVariable(name: "rc", scope: !4932, file: !2273, line: 1836, type: !103)
!4932 = distinct !DILexicalBlock(scope: !4933, file: !2273, line: 1836, column: 4)
!4933 = distinct !DILexicalBlock(scope: !4821, file: !2273, line: 1835, column: 21)
!4934 = !DILabel(scope: !4890, name: "prec_int_pad0", file: !2273, line: 1634)
!4935 = !DILocation(line: 0, scope: !4794)
!4936 = !DILocation(line: 1341, column: 2, scope: !4794)
!4937 = !DILocation(line: 1341, column: 7, scope: !4794)
!4938 = !DILocation(line: 1375, column: 2, scope: !4794)
!4939 = !DILocation(line: 1342, column: 9, scope: !4794)
!4940 = !DILocation(line: 1375, column: 9, scope: !4794)
!4941 = !DILocation(line: 1377, column: 4, scope: !4818)
!4942 = !DILocation(line: 0, scope: !4818)
!4943 = !DILocation(line: 1377, column: 4, scope: !4944)
!4944 = distinct !DILexicalBlock(scope: !4818, file: !2273, line: 1377, column: 4)
!4945 = distinct !{!4945, !4938, !4946}
!4946 = !DILocation(line: 1839, column: 2, scope: !4794)
!4947 = !DILocation(line: 1392, column: 3, scope: !4821)
!4948 = !DILocation(line: 1395, column: 5, scope: !4821)
!4949 = !DILocation(line: 0, scope: !4821)
!4950 = !DILocation(line: 1409, column: 8, scope: !4821)
!4951 = !DILocation(line: 1414, column: 13, scope: !4952)
!4952 = distinct !DILexicalBlock(scope: !4821, file: !2273, line: 1414, column: 7)
!4953 = !DILocation(line: 1414, column: 7, scope: !4821)
!4954 = !DILocation(line: 1415, column: 12, scope: !4955)
!4955 = distinct !DILexicalBlock(scope: !4952, file: !2273, line: 1414, column: 25)
!4956 = !DILocation(line: 1417, column: 14, scope: !4957)
!4957 = distinct !DILexicalBlock(scope: !4955, file: !2273, line: 1417, column: 8)
!4958 = !DILocation(line: 1417, column: 8, scope: !4955)
!4959 = !DILocation(line: 1418, column: 21, scope: !4960)
!4960 = distinct !DILexicalBlock(scope: !4957, file: !2273, line: 1417, column: 19)
!4961 = !DILocation(line: 1419, column: 13, scope: !4960)
!4962 = !DILocation(line: 1420, column: 4, scope: !4960)
!4963 = !DILocation(line: 1421, column: 20, scope: !4964)
!4964 = distinct !DILexicalBlock(scope: !4952, file: !2273, line: 1421, column: 14)
!4965 = !DILocation(line: 1421, column: 14, scope: !4952)
!4966 = !DILocation(line: 1431, column: 13, scope: !4881)
!4967 = !DILocation(line: 1431, column: 7, scope: !4821)
!4968 = !DILocation(line: 1432, column: 14, scope: !4880)
!4969 = !DILocation(line: 0, scope: !4880)
!4970 = !DILocation(line: 1434, column: 12, scope: !4971)
!4971 = distinct !DILexicalBlock(scope: !4880, file: !2273, line: 1434, column: 8)
!4972 = !DILocation(line: 1434, column: 8, scope: !4880)
!4973 = !DILocation(line: 1435, column: 24, scope: !4974)
!4974 = distinct !DILexicalBlock(scope: !4971, file: !2273, line: 1434, column: 17)
!4975 = !DILocation(line: 1436, column: 4, scope: !4974)
!4976 = !DILocation(line: 1439, column: 20, scope: !4977)
!4977 = distinct !DILexicalBlock(scope: !4881, file: !2273, line: 1439, column: 14)
!4978 = !DILocation(line: 1439, column: 14, scope: !4881)
!4979 = !DILocation(line: 1469, column: 37, scope: !4821)
!4980 = !DILocation(line: 1448, column: 20, scope: !4821)
!4981 = !DILocation(line: 1449, column: 22, scope: !4821)
!4982 = !DILocation(line: 1471, column: 34, scope: !4821)
!4983 = !DILocation(line: 1478, column: 7, scope: !4821)
!4984 = !DILocation(line: 1479, column: 4, scope: !4985)
!4985 = distinct !DILexicalBlock(scope: !4986, file: !2273, line: 1478, column: 40)
!4986 = distinct !DILexicalBlock(scope: !4821, file: !2273, line: 1478, column: 7)
!4987 = !DILocation(line: 1484, column: 19, scope: !4988)
!4988 = distinct !DILexicalBlock(scope: !4985, file: !2273, line: 1479, column: 24)
!4989 = !DILocation(line: 1484, column: 17, scope: !4988)
!4990 = !DILocation(line: 1485, column: 5, scope: !4988)
!4991 = !DILocation(line: 1492, column: 20, scope: !4992)
!4992 = distinct !DILexicalBlock(scope: !4993, file: !2273, line: 1491, column: 12)
!4993 = distinct !DILexicalBlock(scope: !4988, file: !2273, line: 1487, column: 9)
!4994 = !DILocation(line: 1492, column: 18, scope: !4992)
!4995 = !DILocation(line: 1494, column: 5, scope: !4988)
!4996 = !DILocation(line: 1497, column: 23, scope: !4988)
!4997 = !DILocation(line: 1496, column: 17, scope: !4988)
!4998 = !DILocation(line: 1498, column: 5, scope: !4988)
!4999 = !DILocation(line: 1501, column: 23, scope: !4988)
!5000 = !DILocation(line: 1500, column: 17, scope: !4988)
!5001 = !DILocation(line: 1502, column: 5, scope: !4988)
!5002 = !DILocation(line: 1513, column: 23, scope: !4988)
!5003 = !DILocation(line: 1513, column: 6, scope: !4988)
!5004 = !DILocation(line: 1512, column: 17, scope: !4988)
!5005 = !DILocation(line: 1514, column: 5, scope: !4988)
!5006 = !DILocation(line: 0, scope: !4988)
!5007 = !DILocation(line: 1516, column: 8, scope: !4985)
!5008 = !DILocation(line: 1517, column: 19, scope: !5009)
!5009 = distinct !DILexicalBlock(scope: !5010, file: !2273, line: 1516, column: 33)
!5010 = distinct !DILexicalBlock(scope: !4985, file: !2273, line: 1516, column: 8)
!5011 = !DILocation(line: 1517, column: 17, scope: !5009)
!5012 = !DILocation(line: 1518, column: 4, scope: !5009)
!5013 = !DILocation(line: 1519, column: 19, scope: !5014)
!5014 = distinct !DILexicalBlock(scope: !5015, file: !2273, line: 1518, column: 39)
!5015 = distinct !DILexicalBlock(scope: !5010, file: !2273, line: 1518, column: 15)
!5016 = !DILocation(line: 1519, column: 17, scope: !5014)
!5017 = !DILocation(line: 1520, column: 4, scope: !5014)
!5018 = !DILocation(line: 1522, column: 4, scope: !5019)
!5019 = distinct !DILexicalBlock(scope: !5020, file: !2273, line: 1521, column: 47)
!5020 = distinct !DILexicalBlock(scope: !4986, file: !2273, line: 1521, column: 14)
!5021 = !DILocation(line: 1527, column: 19, scope: !5022)
!5022 = distinct !DILexicalBlock(scope: !5019, file: !2273, line: 1522, column: 24)
!5023 = !DILocation(line: 1527, column: 17, scope: !5022)
!5024 = !DILocation(line: 1528, column: 5, scope: !5022)
!5025 = !DILocation(line: 0, scope: !5026)
!5026 = distinct !DILexicalBlock(scope: !5022, file: !2273, line: 1530, column: 9)
!5027 = !DILocation(line: 1540, column: 23, scope: !5022)
!5028 = !DILocation(line: 1539, column: 17, scope: !5022)
!5029 = !DILocation(line: 1542, column: 5, scope: !5022)
!5030 = !DILocation(line: 1545, column: 23, scope: !5022)
!5031 = !DILocation(line: 1544, column: 17, scope: !5022)
!5032 = !DILocation(line: 1547, column: 5, scope: !5022)
!5033 = !DILocation(line: 1551, column: 23, scope: !5022)
!5034 = !DILocation(line: 1551, column: 6, scope: !5022)
!5035 = !DILocation(line: 1550, column: 17, scope: !5022)
!5036 = !DILocation(line: 1552, column: 5, scope: !5022)
!5037 = !DILocation(line: 0, scope: !5022)
!5038 = !DILocation(line: 1554, column: 8, scope: !5019)
!5039 = !DILocation(line: 1555, column: 19, scope: !5040)
!5040 = distinct !DILexicalBlock(scope: !5041, file: !2273, line: 1554, column: 33)
!5041 = distinct !DILexicalBlock(scope: !5019, file: !2273, line: 1554, column: 8)
!5042 = !DILocation(line: 1555, column: 17, scope: !5040)
!5043 = !DILocation(line: 1556, column: 4, scope: !5040)
!5044 = !DILocation(line: 1557, column: 19, scope: !5045)
!5045 = distinct !DILexicalBlock(scope: !5046, file: !2273, line: 1556, column: 39)
!5046 = distinct !DILexicalBlock(scope: !5041, file: !2273, line: 1556, column: 15)
!5047 = !DILocation(line: 1557, column: 17, scope: !5045)
!5048 = !DILocation(line: 1558, column: 4, scope: !5045)
!5049 = !DILocation(line: 0, scope: !5050)
!5050 = distinct !DILexicalBlock(scope: !5051, file: !2273, line: 1560, column: 8)
!5051 = distinct !DILexicalBlock(scope: !5052, file: !2273, line: 1559, column: 45)
!5052 = distinct !DILexicalBlock(scope: !5020, file: !2273, line: 1559, column: 14)
!5053 = !DILocation(line: 1566, column: 17, scope: !5054)
!5054 = distinct !DILexicalBlock(scope: !5055, file: !2273, line: 1565, column: 46)
!5055 = distinct !DILexicalBlock(scope: !5052, file: !2273, line: 1565, column: 14)
!5056 = !DILocation(line: 1566, column: 15, scope: !5054)
!5057 = !DILocation(line: 1567, column: 3, scope: !5054)
!5058 = !DILocation(line: 1574, column: 21, scope: !4887)
!5059 = !DILocation(line: 1575, column: 4, scope: !4885)
!5060 = !DILocation(line: 0, scope: !4885)
!5061 = !DILocation(line: 1575, column: 4, scope: !5062)
!5062 = distinct !DILexicalBlock(scope: !4885, file: !2273, line: 1575, column: 4)
!5063 = !DILocation(line: 1582, column: 17, scope: !4821)
!5064 = !DILocation(line: 1582, column: 3, scope: !4821)
!5065 = !DILocation(line: 1584, column: 4, scope: !4889)
!5066 = !DILocation(line: 0, scope: !4889)
!5067 = !DILocation(line: 1584, column: 4, scope: !5068)
!5068 = distinct !DILexicalBlock(scope: !4889, file: !2273, line: 1584, column: 4)
!5069 = !DILocation(line: 1587, column: 31, scope: !4892)
!5070 = !DILocation(line: 1591, column: 18, scope: !5071)
!5071 = distinct !DILexicalBlock(scope: !4892, file: !2273, line: 1591, column: 8)
!5072 = !DILocation(line: 1591, column: 8, scope: !4892)
!5073 = !DILocation(line: 1592, column: 11, scope: !5074)
!5074 = distinct !DILexicalBlock(scope: !5071, file: !2273, line: 1591, column: 24)
!5075 = !DILocation(line: 0, scope: !4892)
!5076 = !DILocation(line: 1593, column: 4, scope: !5074)
!5077 = !DILocation(line: 1594, column: 11, scope: !5078)
!5078 = distinct !DILexicalBlock(scope: !5071, file: !2273, line: 1593, column: 11)
!5079 = !DILocation(line: 1604, column: 51, scope: !4890)
!5080 = !DILocation(line: 1604, column: 13, scope: !4890)
!5081 = !DILocation(line: 1604, column: 11, scope: !4890)
!5082 = !DILocation(line: 1606, column: 4, scope: !4890)
!5083 = !DILocation(line: 1609, column: 14, scope: !5084)
!5084 = distinct !DILexicalBlock(scope: !4890, file: !2273, line: 1609, column: 8)
!5085 = !DILocation(line: 1609, column: 8, scope: !4890)
!5086 = !DILocation(line: 1619, column: 18, scope: !4890)
!5087 = !DILocation(line: 1620, column: 13, scope: !5088)
!5088 = distinct !DILexicalBlock(scope: !4890, file: !2273, line: 1620, column: 8)
!5089 = !DILocation(line: 1620, column: 8, scope: !4890)
!5090 = !DILocation(line: 1622, column: 36, scope: !5091)
!5091 = distinct !DILexicalBlock(scope: !5088, file: !2273, line: 1620, column: 18)
!5092 = !DILocation(line: 1622, column: 17, scope: !5091)
!5093 = !DILocation(line: 1623, column: 4, scope: !5091)
!5094 = !DILocation(line: 1632, column: 29, scope: !4890)
!5095 = !DILocation(line: 1632, column: 10, scope: !4890)
!5096 = !DILocation(line: 1632, column: 4, scope: !4890)
!5097 = !DILocation(line: 1407, column: 8, scope: !4821)
!5098 = !DILocation(line: 0, scope: !4890)
!5099 = !DILocation(line: 1634, column: 3, scope: !4890)
!5100 = !DILocation(line: 1640, column: 18, scope: !4895)
!5101 = !DILocation(line: 1640, column: 8, scope: !4890)
!5102 = !DILocation(line: 1729, column: 13, scope: !5103)
!5103 = distinct !DILexicalBlock(scope: !4821, file: !2273, line: 1729, column: 7)
!5104 = !DILocation(line: 1641, column: 22, scope: !4894)
!5105 = !DILocation(line: 0, scope: !4894)
!5106 = !DILocation(line: 1646, column: 21, scope: !4894)
!5107 = !DILocation(line: 1649, column: 13, scope: !5108)
!5108 = distinct !DILexicalBlock(scope: !4894, file: !2273, line: 1649, column: 9)
!5109 = !DILocation(line: 1649, column: 9, scope: !4894)
!5110 = !DILocation(line: 1650, column: 35, scope: !5111)
!5111 = distinct !DILexicalBlock(scope: !5108, file: !2273, line: 1649, column: 34)
!5112 = !DILocation(line: 1650, column: 23, scope: !5111)
!5113 = !DILocation(line: 1651, column: 5, scope: !5111)
!5114 = !DILocation(line: 1660, column: 15, scope: !5115)
!5115 = distinct !DILexicalBlock(scope: !4890, file: !2273, line: 1660, column: 8)
!5116 = !DILocation(line: 1660, column: 19, scope: !5115)
!5117 = !DILocation(line: 1660, column: 8, scope: !4890)
!5118 = !DILocation(line: 1661, column: 23, scope: !5119)
!5119 = distinct !DILexicalBlock(scope: !5115, file: !2273, line: 1660, column: 28)
!5120 = !DILocation(line: 1661, column: 11, scope: !5119)
!5121 = !DILocation(line: 1665, column: 22, scope: !5119)
!5122 = !DILocation(line: 1666, column: 21, scope: !5119)
!5123 = !DILocation(line: 1668, column: 5, scope: !5119)
!5124 = !DILocation(line: 1677, column: 30, scope: !5125)
!5125 = distinct !DILexicalBlock(scope: !5126, file: !2273, line: 1676, column: 49)
!5126 = distinct !DILexicalBlock(scope: !4890, file: !2273, line: 1676, column: 8)
!5127 = !DILocation(line: 1677, column: 5, scope: !5125)
!5128 = !DILocation(line: 1680, column: 4, scope: !4890)
!5129 = !DILocation(line: 0, scope: !5071)
!5130 = !DILocation(line: 1597, column: 14, scope: !4892)
!5131 = !DILocation(line: 1699, column: 11, scope: !5132)
!5132 = distinct !DILexicalBlock(scope: !4821, file: !2273, line: 1699, column: 7)
!5133 = !DILocation(line: 1699, column: 7, scope: !4821)
!5134 = !DILocation(line: 1725, column: 7, scope: !5135)
!5135 = distinct !DILexicalBlock(scope: !4821, file: !2273, line: 1725, column: 7)
!5136 = !DILocation(line: 1725, column: 12, scope: !5135)
!5137 = !DILocation(line: 1747, column: 13, scope: !4902)
!5138 = !DILocation(line: 1747, column: 7, scope: !4821)
!5139 = !DILocation(line: 1722, column: 24, scope: !4821)
!5140 = !DILocation(line: 1725, column: 7, scope: !4821)
!5141 = !DILocation(line: 1729, column: 7, scope: !4821)
!5142 = !DILocation(line: 1736, column: 13, scope: !5143)
!5143 = distinct !DILexicalBlock(scope: !4821, file: !2273, line: 1736, column: 7)
!5144 = !DILocation(line: 1735, column: 19, scope: !4821)
!5145 = !DILocation(line: 1736, column: 7, scope: !4821)
!5146 = !DILocation(line: 1748, column: 10, scope: !4901)
!5147 = !DILocation(line: 1750, column: 15, scope: !4900)
!5148 = !DILocation(line: 1750, column: 8, scope: !4901)
!5149 = !DILocation(line: 0, scope: !4899)
!5150 = !DILocation(line: 1756, column: 15, scope: !4908)
!5151 = !DILocation(line: 1756, column: 9, scope: !4899)
!5152 = !DILocation(line: 1758, column: 7, scope: !4904)
!5153 = !DILocation(line: 0, scope: !4904)
!5154 = !DILocation(line: 1758, column: 7, scope: !5155)
!5155 = distinct !DILexicalBlock(scope: !4904, file: !2273, line: 1758, column: 7)
!5156 = !DILocation(line: 1764, column: 5, scope: !4899)
!5157 = !DILocation(line: 0, scope: !4901)
!5158 = !DILocation(line: 1764, column: 20, scope: !4899)
!5159 = !DILocation(line: 1764, column: 17, scope: !4899)
!5160 = !DILocation(line: 1765, column: 6, scope: !4910)
!5161 = !DILocation(line: 0, scope: !4910)
!5162 = !DILocation(line: 1765, column: 6, scope: !5163)
!5163 = distinct !DILexicalBlock(scope: !4910, file: !2273, line: 1765, column: 6)
!5164 = distinct !{!5164, !5156, !5165}
!5165 = !DILocation(line: 1766, column: 5, scope: !4899)
!5166 = !DILocation(line: 1773, column: 12, scope: !4915)
!5167 = !DILocation(line: 1773, column: 7, scope: !4821)
!5168 = !DILocation(line: 1773, column: 7, scope: !4915)
!5169 = !DILocation(line: 1774, column: 4, scope: !4913)
!5170 = !DILocation(line: 0, scope: !4913)
!5171 = !DILocation(line: 1774, column: 4, scope: !5172)
!5172 = distinct !DILexicalBlock(scope: !4913, file: !2273, line: 1774, column: 4)
!5173 = !DILocation(line: 1818, column: 8, scope: !4919)
!5174 = !DILocation(line: 1818, column: 27, scope: !4919)
!5175 = !DILocation(line: 1818, column: 25, scope: !4919)
!5176 = !DILocation(line: 1818, column: 8, scope: !4920)
!5177 = !DILocation(line: 1819, column: 5, scope: !4917)
!5178 = !DILocation(line: 0, scope: !4917)
!5179 = !DILocation(line: 1819, column: 5, scope: !5180)
!5180 = distinct !DILexicalBlock(scope: !4917, file: !2273, line: 1819, column: 5)
!5181 = !DILocation(line: 1822, column: 14, scope: !4925)
!5182 = !DILocation(line: 1822, column: 8, scope: !4920)
!5183 = !DILocation(line: 1823, column: 5, scope: !4923)
!5184 = !DILocation(line: 0, scope: !4923)
!5185 = !DILocation(line: 1823, column: 5, scope: !5186)
!5186 = distinct !DILexicalBlock(scope: !4923, file: !2273, line: 1823, column: 5)
!5187 = !DILocation(line: 1826, column: 20, scope: !4920)
!5188 = !DILocation(line: 1827, column: 4, scope: !4920)
!5189 = !DILocation(line: 0, scope: !4920)
!5190 = !DILocation(line: 1827, column: 21, scope: !4920)
!5191 = !DILocation(line: 1827, column: 18, scope: !4920)
!5192 = !DILocation(line: 1828, column: 5, scope: !4927)
!5193 = !DILocation(line: 0, scope: !4927)
!5194 = !DILocation(line: 1828, column: 5, scope: !5195)
!5195 = distinct !DILexicalBlock(scope: !4927, file: !2273, line: 1828, column: 5)
!5196 = distinct !{!5196, !5188, !5197}
!5197 = !DILocation(line: 1829, column: 4, scope: !4920)
!5198 = !DILocation(line: 1831, column: 4, scope: !4930)
!5199 = !DILocation(line: 0, scope: !4930)
!5200 = !DILocation(line: 1831, column: 4, scope: !5201)
!5201 = distinct !DILexicalBlock(scope: !4930, file: !2273, line: 1831, column: 4)
!5202 = !DILocation(line: 1835, column: 16, scope: !4821)
!5203 = !DILocation(line: 1835, column: 3, scope: !4821)
!5204 = !DILocation(line: 1836, column: 4, scope: !4932)
!5205 = !DILocation(line: 0, scope: !4932)
!5206 = !DILocation(line: 1836, column: 4, scope: !5207)
!5207 = distinct !DILexicalBlock(scope: !4932, file: !2273, line: 1836, column: 4)
!5208 = !DILocation(line: 1837, column: 4, scope: !4933)
!5209 = distinct !{!5209, !5203, !5210}
!5210 = !DILocation(line: 1838, column: 3, scope: !4821)
!5211 = !DILocation(line: 1844, column: 1, scope: !4794)
!5212 = distinct !DISubprogram(name: "extract_conversion", scope: !2273, file: !2273, line: 642, type: !5213, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2269, retainedNodes: !5215)
!5213 = !DISubroutineType(types: !5214)
!5214 = !{!199, !4869, !199}
!5215 = !{!5216, !5217}
!5216 = !DILocalVariable(name: "conv", arg: 1, scope: !5212, file: !2273, line: 642, type: !4869)
!5217 = !DILocalVariable(name: "sp", arg: 2, scope: !5212, file: !2273, line: 643, type: !199)
!5218 = !DILocation(line: 0, scope: !5212)
!5219 = !DILocation(line: 645, column: 10, scope: !5212)
!5220 = !DILocation(line: 653, column: 2, scope: !5212)
!5221 = !DILocation(line: 654, column: 6, scope: !5222)
!5222 = distinct !DILexicalBlock(scope: !5212, file: !2273, line: 654, column: 6)
!5223 = !DILocation(line: 654, column: 10, scope: !5222)
!5224 = !DILocation(line: 654, column: 6, scope: !5212)
!5225 = !DILocation(line: 655, column: 24, scope: !5226)
!5226 = distinct !DILexicalBlock(scope: !5222, file: !2273, line: 654, column: 18)
!5227 = !DILocation(line: 655, column: 19, scope: !5226)
!5228 = !DILocation(line: 656, column: 3, scope: !5226)
!5229 = !DILocation(line: 659, column: 7, scope: !5212)
!5230 = !DILocation(line: 660, column: 7, scope: !5212)
!5231 = !DILocation(line: 661, column: 7, scope: !5212)
!5232 = !DILocation(line: 662, column: 7, scope: !5212)
!5233 = !DILocation(line: 663, column: 7, scope: !5212)
!5234 = !DILocation(line: 665, column: 2, scope: !5212)
!5235 = !DILocation(line: 666, column: 1, scope: !5212)
!5236 = distinct !DISubprogram(name: "outs", scope: !2273, file: !2273, line: 1319, type: !5237, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2269, retainedNodes: !5239)
!5237 = !DISubroutineType(types: !5238)
!5238 = !{!103, !3046, !102, !199, !199}
!5239 = !{!5240, !5241, !5242, !5243, !5244, !5245}
!5240 = !DILocalVariable(name: "out", arg: 1, scope: !5236, file: !2273, line: 1319, type: !3046)
!5241 = !DILocalVariable(name: "ctx", arg: 2, scope: !5236, file: !2273, line: 1320, type: !102)
!5242 = !DILocalVariable(name: "sp", arg: 3, scope: !5236, file: !2273, line: 1321, type: !199)
!5243 = !DILocalVariable(name: "ep", arg: 4, scope: !5236, file: !2273, line: 1322, type: !199)
!5244 = !DILocalVariable(name: "count", scope: !5236, file: !2273, line: 1324, type: !120)
!5245 = !DILocalVariable(name: "rc", scope: !5246, file: !2273, line: 1327, type: !103)
!5246 = distinct !DILexicalBlock(scope: !5236, file: !2273, line: 1326, column: 45)
!5247 = !DILocation(line: 0, scope: !5236)
!5248 = !DILocation(line: 1326, column: 2, scope: !5236)
!5249 = !DILocation(line: 1324, column: 9, scope: !5236)
!5250 = !DILocation(line: 1326, column: 13, scope: !5236)
!5251 = !DILocation(line: 1326, column: 19, scope: !5236)
!5252 = !DILocation(line: 1327, column: 21, scope: !5246)
!5253 = !DILocation(line: 1326, column: 36, scope: !5236)
!5254 = !DILocation(line: 1326, column: 39, scope: !5236)
!5255 = !DILocation(line: 1327, column: 24, scope: !5246)
!5256 = !DILocation(line: 1327, column: 16, scope: !5246)
!5257 = !DILocation(line: 1327, column: 12, scope: !5246)
!5258 = !DILocation(line: 0, scope: !5246)
!5259 = !DILocation(line: 1329, column: 10, scope: !5260)
!5260 = distinct !DILexicalBlock(scope: !5246, file: !2273, line: 1329, column: 7)
!5261 = !DILocation(line: 1329, column: 7, scope: !5246)
!5262 = distinct !{!5262, !5248, !5263}
!5263 = !DILocation(line: 1333, column: 2, scope: !5236)
!5264 = !DILocation(line: 1336, column: 1, scope: !5236)
!5265 = distinct !DISubprogram(name: "encode_uint", scope: !2273, file: !2273, line: 788, type: !5266, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2269, retainedNodes: !5268)
!5266 = !DISubroutineType(types: !5267)
!5267 = !{!1005, !2295, !4869, !1005, !199}
!5268 = !{!5269, !5270, !5271, !5272, !5273, !5274, !5276, !5277}
!5269 = !DILocalVariable(name: "value", arg: 1, scope: !5265, file: !2273, line: 788, type: !2295)
!5270 = !DILocalVariable(name: "conv", arg: 2, scope: !5265, file: !2273, line: 789, type: !4869)
!5271 = !DILocalVariable(name: "bps", arg: 3, scope: !5265, file: !2273, line: 790, type: !1005)
!5272 = !DILocalVariable(name: "bpe", arg: 4, scope: !5265, file: !2273, line: 791, type: !199)
!5273 = !DILocalVariable(name: "upcase", scope: !5265, file: !2273, line: 793, type: !211)
!5274 = !DILocalVariable(name: "radix", scope: !5265, file: !2273, line: 794, type: !5275)
!5275 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!5276 = !DILocalVariable(name: "bp", scope: !5265, file: !2273, line: 795, type: !1005)
!5277 = !DILocalVariable(name: "lsv", scope: !5278, file: !2273, line: 798, type: !32)
!5278 = distinct !DILexicalBlock(scope: !5265, file: !2273, line: 797, column: 5)
!5279 = !DILocation(line: 0, scope: !5265)
!5280 = !DILocation(line: 793, column: 35, scope: !5265)
!5281 = !DILocation(line: 793, column: 24, scope: !5265)
!5282 = !DILocation(line: 793, column: 16, scope: !5265)
!5283 = !DILocation(line: 794, column: 29, scope: !5265)
!5284 = !DILocation(line: 795, column: 24, scope: !5265)
!5285 = !DILocation(line: 795, column: 17, scope: !5265)
!5286 = !DILocation(line: 797, column: 2, scope: !5265)
!5287 = !DILocation(line: 802, column: 9, scope: !5278)
!5288 = !DILocation(line: 798, column: 22, scope: !5278)
!5289 = !DILocation(line: 0, scope: !5278)
!5290 = !DILocation(line: 800, column: 16, scope: !5278)
!5291 = !DILocation(line: 800, column: 11, scope: !5278)
!5292 = !DILocation(line: 800, column: 4, scope: !5278)
!5293 = !DILocation(line: 800, column: 9, scope: !5278)
!5294 = !DILocation(line: 803, column: 18, scope: !5265)
!5295 = !DILocation(line: 803, column: 24, scope: !5265)
!5296 = !DILocation(line: 803, column: 2, scope: !5278)
!5297 = distinct !{!5297, !5286, !5298}
!5298 = !DILocation(line: 803, column: 37, scope: !5265)
!5299 = !DILocation(line: 808, column: 12, scope: !5300)
!5300 = distinct !DILexicalBlock(scope: !5265, file: !2273, line: 808, column: 6)
!5301 = !DILocation(line: 808, column: 6, scope: !5265)
!5302 = !DILocation(line: 809, column: 7, scope: !5303)
!5303 = distinct !DILexicalBlock(scope: !5300, file: !2273, line: 808, column: 23)
!5304 = !DILocation(line: 813, column: 3, scope: !5305)
!5305 = distinct !DILexicalBlock(scope: !5306, file: !2273, line: 811, column: 27)
!5306 = distinct !DILexicalBlock(scope: !5307, file: !2273, line: 811, column: 14)
!5307 = distinct !DILexicalBlock(scope: !5303, file: !2273, line: 809, column: 7)
!5308 = !DILocation(line: 0, scope: !5307)
!5309 = !DILocation(line: 818, column: 2, scope: !5265)
!5310 = distinct !DISubprogram(name: "store_count", scope: !2273, file: !2273, line: 1280, type: !5311, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2269, retainedNodes: !5315)
!5311 = !DISubroutineType(types: !5312)
!5312 = !{null, !5313, !102, !103}
!5313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5314, size: 32)
!5314 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4836)
!5315 = !{!5316, !5317, !5318}
!5316 = !DILocalVariable(name: "conv", arg: 1, scope: !5310, file: !2273, line: 1280, type: !5313)
!5317 = !DILocalVariable(name: "dp", arg: 2, scope: !5310, file: !2273, line: 1281, type: !102)
!5318 = !DILocalVariable(name: "count", arg: 3, scope: !5310, file: !2273, line: 1282, type: !103)
!5319 = !DILocation(line: 0, scope: !5310)
!5320 = !DILocation(line: 1284, column: 38, scope: !5310)
!5321 = !DILocation(line: 1284, column: 2, scope: !5310)
!5322 = !DILocation(line: 1286, column: 4, scope: !5323)
!5323 = distinct !DILexicalBlock(scope: !5310, file: !2273, line: 1284, column: 50)
!5324 = !DILocation(line: 1286, column: 14, scope: !5323)
!5325 = !DILocation(line: 1287, column: 3, scope: !5323)
!5326 = !DILocation(line: 1289, column: 24, scope: !5323)
!5327 = !DILocation(line: 1289, column: 22, scope: !5323)
!5328 = !DILocation(line: 1290, column: 3, scope: !5323)
!5329 = !DILocation(line: 1292, column: 18, scope: !5323)
!5330 = !DILocation(line: 1292, column: 4, scope: !5323)
!5331 = !DILocation(line: 1292, column: 16, scope: !5323)
!5332 = !DILocation(line: 1293, column: 3, scope: !5323)
!5333 = !DILocation(line: 1295, column: 4, scope: !5323)
!5334 = !DILocation(line: 1295, column: 15, scope: !5323)
!5335 = !DILocation(line: 1296, column: 3, scope: !5323)
!5336 = !DILocation(line: 1298, column: 22, scope: !5323)
!5337 = !DILocation(line: 1298, column: 4, scope: !5323)
!5338 = !DILocation(line: 1298, column: 20, scope: !5323)
!5339 = !DILocation(line: 1299, column: 3, scope: !5323)
!5340 = !DILocation(line: 1301, column: 21, scope: !5323)
!5341 = !DILocation(line: 1301, column: 4, scope: !5323)
!5342 = !DILocation(line: 1301, column: 19, scope: !5323)
!5343 = !DILocation(line: 1302, column: 3, scope: !5323)
!5344 = !DILocation(line: 1304, column: 4, scope: !5323)
!5345 = !DILocation(line: 1304, column: 17, scope: !5323)
!5346 = !DILocation(line: 1305, column: 3, scope: !5323)
!5347 = !DILocation(line: 1307, column: 4, scope: !5323)
!5348 = !DILocation(line: 1307, column: 20, scope: !5323)
!5349 = !DILocation(line: 1308, column: 3, scope: !5323)
!5350 = !DILocation(line: 1316, column: 1, scope: !5310)
!5351 = distinct !DISubprogram(name: "isupper", scope: !5352, file: !5352, line: 16, type: !129, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2269, retainedNodes: !5353)
!5352 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5353 = !{!5354}
!5354 = !DILocalVariable(name: "a", arg: 1, scope: !5351, file: !5352, line: 16, type: !103)
!5355 = !DILocation(line: 0, scope: !5351)
!5356 = !DILocation(line: 18, column: 29, scope: !5351)
!5357 = !DILocation(line: 18, column: 45, scope: !5351)
!5358 = !DILocation(line: 18, column: 2, scope: !5351)
!5359 = distinct !DISubprogram(name: "conversion_radix", scope: !2273, file: !2273, line: 761, type: !5360, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2269, retainedNodes: !5362)
!5360 = !DISubroutineType(types: !5361)
!5361 = !{!120, !109}
!5362 = !{!5363}
!5363 = !DILocalVariable(name: "specifier", arg: 1, scope: !5359, file: !2273, line: 761, type: !109)
!5364 = !DILocation(line: 0, scope: !5359)
!5365 = !DILocation(line: 763, column: 2, scope: !5359)
!5366 = !DILocation(line: 770, column: 3, scope: !5367)
!5367 = distinct !DILexicalBlock(scope: !5359, file: !2273, line: 763, column: 21)
!5368 = !DILocation(line: 774, column: 3, scope: !5367)
!5369 = !DILocation(line: 0, scope: !5367)
!5370 = !DILocation(line: 776, column: 1, scope: !5359)
!5371 = distinct !DISubprogram(name: "extract_flags", scope: !2273, file: !2273, line: 339, type: !5213, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2269, retainedNodes: !5372)
!5372 = !{!5373, !5374, !5375}
!5373 = !DILocalVariable(name: "conv", arg: 1, scope: !5371, file: !2273, line: 339, type: !4869)
!5374 = !DILocalVariable(name: "sp", arg: 2, scope: !5371, file: !2273, line: 340, type: !199)
!5375 = !DILocalVariable(name: "loop", scope: !5371, file: !2273, line: 342, type: !211)
!5376 = !DILocation(line: 0, scope: !5371)
!5377 = !DILocation(line: 344, column: 2, scope: !5371)
!5378 = !DILocation(line: 345, column: 11, scope: !5379)
!5379 = distinct !DILexicalBlock(scope: !5371, file: !2273, line: 344, column: 5)
!5380 = !DILocation(line: 345, column: 3, scope: !5379)
!5381 = !DILocation(line: 351, column: 4, scope: !5382)
!5382 = distinct !DILexicalBlock(scope: !5379, file: !2273, line: 345, column: 16)
!5383 = !DILocation(line: 354, column: 4, scope: !5382)
!5384 = !DILocation(line: 357, column: 4, scope: !5382)
!5385 = !DILocation(line: 360, column: 4, scope: !5382)
!5386 = !DILocation(line: 0, scope: !5382)
!5387 = !DILocation(line: 370, column: 12, scope: !5388)
!5388 = distinct !DILexicalBlock(scope: !5371, file: !2273, line: 370, column: 6)
!5389 = !DILocation(line: 370, column: 22, scope: !5388)
!5390 = !DILocation(line: 371, column: 19, scope: !5391)
!5391 = distinct !DILexicalBlock(scope: !5388, file: !2273, line: 370, column: 42)
!5392 = !DILocation(line: 372, column: 2, scope: !5391)
!5393 = !DILocation(line: 376, column: 2, scope: !5371)
!5394 = distinct !DISubprogram(name: "extract_width", scope: !2273, file: !2273, line: 388, type: !5213, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2269, retainedNodes: !5395)
!5395 = !{!5396, !5397, !5398, !5399}
!5396 = !DILocalVariable(name: "conv", arg: 1, scope: !5394, file: !2273, line: 388, type: !4869)
!5397 = !DILocalVariable(name: "sp", arg: 2, scope: !5394, file: !2273, line: 389, type: !199)
!5398 = !DILocalVariable(name: "wp", scope: !5394, file: !2273, line: 398, type: !199)
!5399 = !DILocalVariable(name: "width", scope: !5394, file: !2273, line: 399, type: !120)
!5400 = !DILocation(line: 0, scope: !5394)
!5401 = !DILocation(line: 391, column: 8, scope: !5394)
!5402 = !DILocation(line: 391, column: 22, scope: !5394)
!5403 = !DILocation(line: 393, column: 6, scope: !5404)
!5404 = distinct !DILexicalBlock(scope: !5394, file: !2273, line: 393, column: 6)
!5405 = !DILocation(line: 393, column: 10, scope: !5404)
!5406 = !DILocation(line: 393, column: 6, scope: !5394)
!5407 = !DILocation(line: 394, column: 20, scope: !5408)
!5408 = distinct !DILexicalBlock(scope: !5404, file: !2273, line: 393, column: 18)
!5409 = !DILocation(line: 395, column: 10, scope: !5408)
!5410 = !DILocation(line: 395, column: 3, scope: !5408)
!5411 = !DILocation(line: 399, column: 17, scope: !5394)
!5412 = !DILocation(line: 401, column: 6, scope: !5413)
!5413 = distinct !DILexicalBlock(scope: !5394, file: !2273, line: 401, column: 6)
!5414 = !DILocation(line: 401, column: 9, scope: !5413)
!5415 = !DILocation(line: 401, column: 6, scope: !5394)
!5416 = !DILocation(line: 402, column: 23, scope: !5417)
!5417 = distinct !DILexicalBlock(scope: !5413, file: !2273, line: 401, column: 16)
!5418 = !DILocation(line: 403, column: 9, scope: !5417)
!5419 = !DILocation(line: 403, column: 21, scope: !5417)
!5420 = !DILocation(line: 405, column: 11, scope: !5417)
!5421 = !DILocation(line: 404, column: 21, scope: !5417)
!5422 = !DILocation(line: 406, column: 2, scope: !5417)
!5423 = !DILocation(line: 409, column: 1, scope: !5394)
!5424 = distinct !DISubprogram(name: "extract_prec", scope: !2273, file: !2273, line: 420, type: !5213, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2269, retainedNodes: !5425)
!5425 = !{!5426, !5427, !5428}
!5426 = !DILocalVariable(name: "conv", arg: 1, scope: !5424, file: !2273, line: 420, type: !4869)
!5427 = !DILocalVariable(name: "sp", arg: 2, scope: !5424, file: !2273, line: 421, type: !199)
!5428 = !DILocalVariable(name: "prec", scope: !5424, file: !2273, line: 435, type: !120)
!5429 = !DILocation(line: 0, scope: !5424)
!5430 = !DILocation(line: 423, column: 24, scope: !5424)
!5431 = !DILocation(line: 423, column: 28, scope: !5424)
!5432 = !DILocation(line: 423, column: 8, scope: !5424)
!5433 = !DILocation(line: 423, column: 21, scope: !5424)
!5434 = !DILocation(line: 425, column: 6, scope: !5424)
!5435 = !DILocation(line: 428, column: 2, scope: !5424)
!5436 = !DILocation(line: 430, column: 6, scope: !5437)
!5437 = distinct !DILexicalBlock(scope: !5424, file: !2273, line: 430, column: 6)
!5438 = !DILocation(line: 430, column: 10, scope: !5437)
!5439 = !DILocation(line: 430, column: 6, scope: !5424)
!5440 = !DILocation(line: 431, column: 19, scope: !5441)
!5441 = distinct !DILexicalBlock(scope: !5437, file: !2273, line: 430, column: 18)
!5442 = !DILocation(line: 432, column: 10, scope: !5441)
!5443 = !DILocation(line: 432, column: 3, scope: !5441)
!5444 = !DILocation(line: 435, column: 16, scope: !5424)
!5445 = !DILocation(line: 437, column: 8, scope: !5424)
!5446 = !DILocation(line: 437, column: 19, scope: !5424)
!5447 = !DILocation(line: 439, column: 10, scope: !5424)
!5448 = !DILocation(line: 438, column: 20, scope: !5424)
!5449 = !DILocation(line: 441, column: 9, scope: !5424)
!5450 = !DILocation(line: 442, column: 1, scope: !5424)
!5451 = distinct !DISubprogram(name: "extract_length", scope: !2273, file: !2273, line: 453, type: !5213, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2269, retainedNodes: !5452)
!5452 = !{!5453, !5454}
!5453 = !DILocalVariable(name: "conv", arg: 1, scope: !5451, file: !2273, line: 453, type: !4869)
!5454 = !DILocalVariable(name: "sp", arg: 2, scope: !5451, file: !2273, line: 454, type: !199)
!5455 = !DILocation(line: 0, scope: !5451)
!5456 = !DILocation(line: 456, column: 10, scope: !5451)
!5457 = !DILocation(line: 456, column: 2, scope: !5451)
!5458 = !DILocation(line: 458, column: 8, scope: !5459)
!5459 = distinct !DILexicalBlock(scope: !5460, file: !2273, line: 458, column: 7)
!5460 = distinct !DILexicalBlock(scope: !5451, file: !2273, line: 456, column: 15)
!5461 = !DILocation(line: 458, column: 7, scope: !5459)
!5462 = !DILocation(line: 458, column: 13, scope: !5459)
!5463 = !DILocation(line: 0, scope: !5459)
!5464 = !DILocation(line: 458, column: 7, scope: !5460)
!5465 = !DILocation(line: 459, column: 21, scope: !5466)
!5466 = distinct !DILexicalBlock(scope: !5459, file: !2273, line: 458, column: 21)
!5467 = !DILocation(line: 460, column: 4, scope: !5466)
!5468 = !DILocation(line: 461, column: 3, scope: !5466)
!5469 = !DILocation(line: 462, column: 21, scope: !5470)
!5470 = distinct !DILexicalBlock(scope: !5459, file: !2273, line: 461, column: 10)
!5471 = !DILocation(line: 466, column: 8, scope: !5472)
!5472 = distinct !DILexicalBlock(scope: !5460, file: !2273, line: 466, column: 7)
!5473 = !DILocation(line: 466, column: 7, scope: !5472)
!5474 = !DILocation(line: 466, column: 13, scope: !5472)
!5475 = !DILocation(line: 0, scope: !5472)
!5476 = !DILocation(line: 466, column: 7, scope: !5460)
!5477 = !DILocation(line: 467, column: 21, scope: !5478)
!5478 = distinct !DILexicalBlock(scope: !5472, file: !2273, line: 466, column: 21)
!5479 = !DILocation(line: 468, column: 4, scope: !5478)
!5480 = !DILocation(line: 469, column: 3, scope: !5478)
!5481 = !DILocation(line: 470, column: 21, scope: !5482)
!5482 = distinct !DILexicalBlock(scope: !5472, file: !2273, line: 469, column: 10)
!5483 = !DILocation(line: 474, column: 9, scope: !5460)
!5484 = !DILocation(line: 474, column: 20, scope: !5460)
!5485 = !DILocation(line: 475, column: 3, scope: !5460)
!5486 = !DILocation(line: 476, column: 3, scope: !5460)
!5487 = !DILocation(line: 478, column: 9, scope: !5460)
!5488 = !DILocation(line: 478, column: 20, scope: !5460)
!5489 = !DILocation(line: 479, column: 3, scope: !5460)
!5490 = !DILocation(line: 480, column: 3, scope: !5460)
!5491 = !DILocation(line: 482, column: 9, scope: !5460)
!5492 = !DILocation(line: 482, column: 20, scope: !5460)
!5493 = !DILocation(line: 483, column: 3, scope: !5460)
!5494 = !DILocation(line: 484, column: 3, scope: !5460)
!5495 = !DILocation(line: 486, column: 9, scope: !5460)
!5496 = !DILocation(line: 486, column: 20, scope: !5460)
!5497 = !DILocation(line: 487, column: 3, scope: !5460)
!5498 = !DILocation(line: 492, column: 21, scope: !5460)
!5499 = !DILocation(line: 493, column: 3, scope: !5460)
!5500 = !DILocation(line: 495, column: 9, scope: !5460)
!5501 = !DILocation(line: 495, column: 20, scope: !5460)
!5502 = !DILocation(line: 496, column: 3, scope: !5460)
!5503 = !DILocation(line: 498, column: 2, scope: !5451)
!5504 = distinct !DISubprogram(name: "extract_specifier", scope: !2273, file: !2273, line: 513, type: !5213, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2269, retainedNodes: !5505)
!5505 = !{!5506, !5507, !5508, !5509}
!5506 = !DILocalVariable(name: "conv", arg: 1, scope: !5504, file: !2273, line: 513, type: !4869)
!5507 = !DILocalVariable(name: "sp", arg: 2, scope: !5504, file: !2273, line: 514, type: !199)
!5508 = !DILocalVariable(name: "unsupported", scope: !5504, file: !2273, line: 516, type: !211)
!5509 = !DILabel(scope: !5510, name: "int_conv", file: !2273, line: 526)
!5510 = distinct !DILexicalBlock(scope: !5504, file: !2273, line: 520, column: 27)
!5511 = !DILocation(line: 0, scope: !5504)
!5512 = !DILocation(line: 518, column: 20, scope: !5504)
!5513 = !DILocation(line: 518, column: 8, scope: !5504)
!5514 = !DILocation(line: 518, column: 18, scope: !5504)
!5515 = !DILocation(line: 520, column: 2, scope: !5504)
!5516 = !DILocation(line: 525, column: 3, scope: !5510)
!5517 = !DILocation(line: 0, scope: !5510)
!5518 = !DILocation(line: 526, column: 1, scope: !5510)
!5519 = !DILocation(line: 528, column: 24, scope: !5520)
!5520 = distinct !DILexicalBlock(scope: !5510, file: !2273, line: 528, column: 7)
!5521 = !DILocation(line: 528, column: 7, scope: !5510)
!5522 = !DILocation(line: 535, column: 23, scope: !5523)
!5523 = distinct !DILexicalBlock(scope: !5510, file: !2273, line: 535, column: 7)
!5524 = !DILocation(line: 535, column: 7, scope: !5510)
!5525 = !DILocation(line: 536, column: 36, scope: !5526)
!5526 = distinct !DILexicalBlock(scope: !5523, file: !2273, line: 535, column: 31)
!5527 = !DILocation(line: 537, column: 3, scope: !5526)
!5528 = !DILocation(line: 570, column: 9, scope: !5510)
!5529 = !DILocation(line: 570, column: 23, scope: !5510)
!5530 = !DILocation(line: 575, column: 4, scope: !5531)
!5531 = distinct !DILexicalBlock(scope: !5532, file: !2273, line: 573, column: 48)
!5532 = distinct !DILexicalBlock(scope: !5510, file: !2273, line: 573, column: 7)
!5533 = !DILocation(line: 603, column: 9, scope: !5510)
!5534 = !DILocation(line: 603, column: 23, scope: !5510)
!5535 = !DILocation(line: 605, column: 24, scope: !5536)
!5536 = distinct !DILexicalBlock(scope: !5510, file: !2273, line: 605, column: 7)
!5537 = !DILocation(line: 605, column: 7, scope: !5510)
!5538 = !DILocation(line: 612, column: 9, scope: !5510)
!5539 = !DILocation(line: 612, column: 23, scope: !5510)
!5540 = !DILocation(line: 619, column: 24, scope: !5541)
!5541 = distinct !DILexicalBlock(scope: !5510, file: !2273, line: 619, column: 7)
!5542 = !DILocation(line: 619, column: 7, scope: !5510)
!5543 = !DILocation(line: 625, column: 9, scope: !5510)
!5544 = !DILocation(line: 625, column: 17, scope: !5510)
!5545 = !DILocation(line: 626, column: 3, scope: !5510)
!5546 = !DILocation(line: 629, column: 20, scope: !5504)
!5547 = !DILocation(line: 629, column: 8, scope: !5504)
!5548 = !DILocation(line: 518, column: 23, scope: !5504)
!5549 = !DILocation(line: 631, column: 2, scope: !5504)
!5550 = distinct !DISubprogram(name: "extract_decimal", scope: !2273, file: !2273, line: 318, type: !5551, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2269, retainedNodes: !5554)
!5551 = !DISubroutineType(types: !5552)
!5552 = !{!120, !5553}
!5553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !199, size: 32)
!5554 = !{!5555, !5556, !5557}
!5555 = !DILocalVariable(name: "str", arg: 1, scope: !5550, file: !2273, line: 318, type: !5553)
!5556 = !DILocalVariable(name: "sp", scope: !5550, file: !2273, line: 320, type: !199)
!5557 = !DILocalVariable(name: "val", scope: !5550, file: !2273, line: 321, type: !120)
!5558 = !DILocation(line: 0, scope: !5550)
!5559 = !DILocation(line: 320, column: 19, scope: !5550)
!5560 = !DILocation(line: 323, column: 37, scope: !5550)
!5561 = !DILocation(line: 323, column: 17, scope: !5550)
!5562 = !DILocation(line: 323, column: 9, scope: !5550)
!5563 = !DILocation(line: 323, column: 2, scope: !5550)
!5564 = !DILocation(line: 324, column: 13, scope: !5565)
!5565 = distinct !DILexicalBlock(scope: !5550, file: !2273, line: 323, column: 43)
!5566 = !DILocation(line: 324, column: 24, scope: !5565)
!5567 = !DILocation(line: 324, column: 19, scope: !5565)
!5568 = !DILocation(line: 324, column: 27, scope: !5565)
!5569 = distinct !{!5569, !5563, !5570}
!5570 = !DILocation(line: 325, column: 2, scope: !5550)
!5571 = !DILocation(line: 326, column: 7, scope: !5550)
!5572 = !DILocation(line: 327, column: 2, scope: !5550)
!5573 = distinct !DISubprogram(name: "isdigit", scope: !5352, file: !5352, line: 43, type: !129, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2269, retainedNodes: !5574)
!5574 = !{!5575}
!5575 = !DILocalVariable(name: "a", arg: 1, scope: !5573, file: !5352, line: 43, type: !103)
!5576 = !DILocation(line: 0, scope: !5573)
!5577 = !DILocation(line: 45, column: 29, scope: !5573)
!5578 = !DILocation(line: 45, column: 45, scope: !5573)
!5579 = !DILocation(line: 45, column: 2, scope: !5573)
!5580 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5581, file: !5581, line: 9, type: !2848, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2307, retainedNodes: !162)
!5581 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sys_heap")
!5582 = !DILocation(line: 11, column: 1, scope: !5580)
!5583 = !{i64 2147561217, i64 2147561260, i64 2147561300}
!5584 = !DILocation(line: 12, column: 1, scope: !5580)
!5585 = !{i64 2147565444, i64 2147565487, i64 2147565527}
!5586 = !DILocation(line: 13, column: 1, scope: !5580)
!5587 = !{i64 2147565653, i64 2147565696, i64 2147565736}
!5588 = !DILocation(line: 14, column: 1, scope: !5580)
!5589 = !{i64 2147565822, i64 2147565865, i64 2147565905}
!5590 = !DILocation(line: 15, column: 1, scope: !5580)
!5591 = !{i64 2147565985, i64 2147566028, i64 2147566068}
!5592 = !DILocation(line: 16, column: 1, scope: !5580)
!5593 = !{i64 2147566169, i64 2147566212, i64 2147566252}
!5594 = !DILocation(line: 17, column: 1, scope: !5580)
!5595 = !{i64 2147566348, i64 2147566391, i64 2147566431}
!5596 = !DILocation(line: 18, column: 1, scope: !5580)
!5597 = !{i64 2147566590, i64 2147566633, i64 2147566673}
!5598 = !DILocation(line: 19, column: 1, scope: !5580)
!5599 = !{i64 2147566825, i64 2147566868, i64 2147566908}
!5600 = !DILocation(line: 20, column: 1, scope: !5580)
!5601 = !{i64 2147567011, i64 2147567054, i64 2147567094}
!5602 = !DILocation(line: 21, column: 1, scope: !5580)
!5603 = !{i64 2147567227, i64 2147567270, i64 2147567310}
!5604 = !DILocation(line: 22, column: 1, scope: !5580)
!5605 = !{i64 2147567430, i64 2147567473, i64 2147567513}
!5606 = !DILocation(line: 23, column: 1, scope: !5580)
!5607 = !{i64 2147567633, i64 2147567676, i64 2147567716}
!5608 = !DILocation(line: 24, column: 1, scope: !5580)
!5609 = !{i64 2147567808, i64 2147567851, i64 2147567891}
!5610 = !DILocation(line: 25, column: 1, scope: !5580)
!5611 = !{i64 2147568016, i64 2147568059, i64 2147568099}
!5612 = !DILocation(line: 26, column: 1, scope: !5580)
!5613 = !{i64 2147568220, i64 2147568263, i64 2147568303}
!5614 = !DILocation(line: 27, column: 1, scope: !5580)
!5615 = !{i64 2147568413, i64 2147568456, i64 2147568496}
!5616 = !DILocation(line: 28, column: 1, scope: !5580)
!5617 = !{i64 2147568615, i64 2147568658, i64 2147568698}
!5618 = !DILocation(line: 29, column: 1, scope: !5580)
!5619 = !{i64 2147568842, i64 2147568885, i64 2147568925}
!5620 = !DILocation(line: 30, column: 1, scope: !5580)
!5621 = !{i64 2147569044, i64 2147569087, i64 2147569127}
!5622 = !DILocation(line: 31, column: 1, scope: !5580)
!5623 = !{i64 2147569259, i64 2147569302, i64 2147569342}
!5624 = !DILocation(line: 32, column: 1, scope: !5580)
!5625 = !{i64 2147569431, i64 2147569474, i64 2147569514}
!5626 = !DILocation(line: 33, column: 1, scope: !5580)
!5627 = !{i64 2147569633, i64 2147569676, i64 2147569716}
!5628 = !DILocation(line: 34, column: 1, scope: !5580)
!5629 = !{i64 2147569859, i64 2147569902, i64 2147569942}
!5630 = !DILocation(line: 35, column: 1, scope: !5580)
!5631 = !{i64 2147570058, i64 2147570101, i64 2147570141}
!5632 = !DILocation(line: 36, column: 1, scope: !5580)
!5633 = !{i64 2147570233, i64 2147570276, i64 2147570316}
!5634 = !DILocation(line: 37, column: 1, scope: !5580)
!5635 = !{i64 2147570486, i64 2147570529, i64 2147570569}
!5636 = !DILocation(line: 38, column: 1, scope: !5580)
!5637 = !{i64 2147570727, i64 2147570770, i64 2147570810}
!5638 = !DILocation(line: 39, column: 1, scope: !5580)
!5639 = !{i64 2147570962, i64 2147571005, i64 2147571045}
!5640 = !DILocation(line: 40, column: 1, scope: !5580)
!5641 = !{i64 2147571194, i64 2147571237, i64 2147571277}
!5642 = !DILocation(line: 41, column: 1, scope: !5580)
!5643 = !{i64 2147571441, i64 2147571484, i64 2147571524}
!5644 = !DILocation(line: 42, column: 1, scope: !5580)
!5645 = !{i64 2147571667, i64 2147571710, i64 2147571750}
!5646 = !DILocation(line: 43, column: 1, scope: !5580)
!5647 = !{i64 2147571893, i64 2147571936, i64 2147571976}
!5648 = !DILocation(line: 44, column: 1, scope: !5580)
!5649 = !{i64 2147572152, i64 2147572195, i64 2147572235}
!5650 = !DILocation(line: 45, column: 1, scope: !5580)
!5651 = !{i64 2147572378, i64 2147572421, i64 2147572461}
!5652 = !DILocation(line: 46, column: 1, scope: !5580)
!5653 = !{i64 2147572613, i64 2147572656, i64 2147572696}
!5654 = !DILocation(line: 47, column: 1, scope: !5580)
!5655 = !{i64 2147572851, i64 2147572894, i64 2147572934}
!5656 = !DILocation(line: 48, column: 1, scope: !5580)
!5657 = !{i64 2147573125, i64 2147573168, i64 2147573208}
!5658 = !DILocation(line: 49, column: 1, scope: !5580)
!5659 = !{i64 2147573363, i64 2147573406, i64 2147573446}
!5660 = !DILocation(line: 50, column: 1, scope: !5580)
!5661 = !{i64 2147573616, i64 2147573659, i64 2147573699}
!5662 = !DILocation(line: 51, column: 1, scope: !5580)
!5663 = !{i64 2147573860, i64 2147573903, i64 2147573943}
!5664 = !DILocation(line: 52, column: 1, scope: !5580)
!5665 = !{i64 2147578171, i64 2147578214, i64 2147578254}
!5666 = !DILocation(line: 53, column: 1, scope: !5580)
!5667 = !{i64 2147578412, i64 2147578455, i64 2147578495}
!5668 = !DILocation(line: 54, column: 1, scope: !5580)
!5669 = !{i64 2147578659, i64 2147578702, i64 2147578742}
!5670 = !DILocation(line: 55, column: 1, scope: !5580)
!5671 = !{i64 2147578894, i64 2147578937, i64 2147578977}
!5672 = !DILocation(line: 56, column: 1, scope: !5580)
!5673 = !{i64 2147579129, i64 2147579172, i64 2147579212}
!5674 = !DILocation(line: 57, column: 1, scope: !5580)
!5675 = !{i64 2147579364, i64 2147579407, i64 2147579447}
!5676 = !DILocation(line: 58, column: 1, scope: !5580)
!5677 = !{i64 2147579602, i64 2147579645, i64 2147579685}
!5678 = !DILocation(line: 59, column: 1, scope: !5580)
!5679 = !{i64 2147579843, i64 2147579886, i64 2147579926}
!5680 = !DILocation(line: 60, column: 1, scope: !5580)
!5681 = !{i64 2147580123, i64 2147580166, i64 2147580206}
!5682 = !DILocation(line: 61, column: 1, scope: !5580)
!5683 = !{i64 2147580382, i64 2147580425, i64 2147580465}
!5684 = !DILocation(line: 62, column: 1, scope: !5580)
!5685 = !{i64 2147580620, i64 2147580663, i64 2147580703}
!5686 = !DILocation(line: 63, column: 1, scope: !5580)
!5687 = !{i64 2147580870, i64 2147580913, i64 2147580953}
!5688 = !DILocation(line: 64, column: 1, scope: !5580)
!5689 = !{i64 2147581099, i64 2147581142, i64 2147581182}
!5690 = !DILocation(line: 65, column: 1, scope: !5580)
!5691 = !{i64 2147581307, i64 2147581350, i64 2147581390}
!5692 = !DILocation(line: 66, column: 1, scope: !5580)
!5693 = !{i64 2147581518, i64 2147581561, i64 2147581601}
!5694 = !DILocation(line: 67, column: 1, scope: !5580)
!5695 = !{i64 2147581753, i64 2147581796, i64 2147581836}
!5696 = !DILocation(line: 68, column: 1, scope: !5580)
!5697 = !{i64 2147581982, i64 2147582025, i64 2147582065}
!5698 = !DILocation(line: 69, column: 1, scope: !5580)
!5699 = !{i64 2147582220, i64 2147582263, i64 2147582303}
!5700 = !DILocation(line: 70, column: 1, scope: !5580)
!5701 = !{i64 2147582452, i64 2147582495, i64 2147582535}
!5702 = !DILocation(line: 71, column: 1, scope: !5580)
!5703 = !{i64 2147582678, i64 2147582721, i64 2147582761}
!5704 = !DILocation(line: 72, column: 1, scope: !5580)
!5705 = !{i64 2147582895, i64 2147582938, i64 2147582978}
!5706 = !DILocation(line: 73, column: 1, scope: !5580)
!5707 = !{i64 2147583127, i64 2147583170, i64 2147583210}
!5708 = !DILocation(line: 74, column: 1, scope: !5580)
!5709 = !{i64 2147583353, i64 2147583396, i64 2147583436}
!5710 = !DILocation(line: 75, column: 1, scope: !5580)
!5711 = !{i64 2147583567, i64 2147583610, i64 2147583650}
!5712 = !DILocation(line: 76, column: 1, scope: !5580)
!5713 = !{i64 2147583787, i64 2147583830, i64 2147583870}
!5714 = !DILocation(line: 77, column: 1, scope: !5580)
!5715 = !{i64 2147584019, i64 2147584062, i64 2147584102}
!5716 = !DILocation(line: 78, column: 1, scope: !5580)
!5717 = !{i64 2147584227, i64 2147584270, i64 2147584310}
!5718 = !DILocation(line: 79, column: 1, scope: !5580)
!5719 = !{i64 2147584432, i64 2147584475, i64 2147584515}
!5720 = !DILocation(line: 80, column: 1, scope: !5580)
!5721 = !{i64 2147584649, i64 2147584692, i64 2147584732}
!5722 = !DILocation(line: 81, column: 1, scope: !5580)
!5723 = !{i64 2147584863, i64 2147584906, i64 2147584946}
!5724 = !DILocation(line: 82, column: 1, scope: !5580)
!5725 = !{i64 2147585089, i64 2147585132, i64 2147585172}
!5726 = !DILocation(line: 83, column: 1, scope: !5580)
!5727 = !{i64 2147585309, i64 2147585352, i64 2147585392}
!5728 = !DILocation(line: 84, column: 1, scope: !5580)
!5729 = !{i64 2147585514, i64 2147585557, i64 2147585597}
!5730 = !DILocation(line: 85, column: 1, scope: !5580)
!5731 = !{i64 2147585746, i64 2147585789, i64 2147585829}
!5732 = !DILocation(line: 86, column: 1, scope: !5580)
!5733 = !{i64 2147585981, i64 2147586024, i64 2147586064}
!5734 = !DILocation(line: 87, column: 1, scope: !5580)
!5735 = !{i64 2147586231, i64 2147586274, i64 2147586314}
!5736 = !DILocation(line: 88, column: 1, scope: !5580)
!5737 = !{i64 2147590542, i64 2147590585, i64 2147590625}
!5738 = !DILocation(line: 89, column: 1, scope: !5580)
!5739 = !{i64 2147590780, i64 2147590823, i64 2147590863}
!5740 = !DILocation(line: 90, column: 1, scope: !5580)
!5741 = !{i64 2147590991, i64 2147591034, i64 2147591074}
!5742 = !DILocation(line: 91, column: 1, scope: !5580)
!5743 = !{i64 2147591208, i64 2147591251, i64 2147591291}
!5744 = !DILocation(line: 92, column: 1, scope: !5580)
!5745 = !{i64 2147591404, i64 2147591447, i64 2147591487}
!5746 = !DILocation(line: 93, column: 1, scope: !5580)
!5747 = !{i64 2147591606, i64 2147591649, i64 2147591689}
!5748 = !DILocation(line: 94, column: 1, scope: !5580)
!5749 = !{i64 2147591799, i64 2147591842, i64 2147591882}
!5750 = !DILocation(line: 95, column: 1, scope: !5580)
!5751 = !{i64 2147592007, i64 2147592050, i64 2147592090}
!5752 = !DILocation(line: 96, column: 1, scope: !5580)
!5753 = !{i64 2147592203, i64 2147592246, i64 2147592286}
!5754 = !DILocation(line: 97, column: 1, scope: !5580)
!5755 = !{i64 2147592405, i64 2147592448, i64 2147592488}
!5756 = !DILocation(line: 98, column: 1, scope: !5580)
!5757 = !{i64 2147592616, i64 2147592659, i64 2147592699}
!5758 = !DILocation(line: 99, column: 1, scope: !5580)
!5759 = !{i64 2147592815, i64 2147592858, i64 2147592898}
!5760 = !DILocation(line: 100, column: 1, scope: !5580)
!5761 = !{i64 2147592990, i64 2147593033, i64 2147593073}
!5762 = !DILocation(line: 101, column: 1, scope: !5580)
!5763 = !{i64 2147593174, i64 2147593217, i64 2147593257}
!5764 = !DILocation(line: 102, column: 1, scope: !5580)
!5765 = !{i64 2147593376, i64 2147593419, i64 2147593459}
!5766 = !DILocation(line: 103, column: 1, scope: !5580)
!5767 = !{i64 2147593575, i64 2147593618, i64 2147593658}
!5768 = !DILocation(line: 104, column: 1, scope: !5580)
!5769 = !{i64 2147593741, i64 2147593784, i64 2147593824}
!5770 = !DILocation(line: 105, column: 1, scope: !5580)
!5771 = !{i64 2147593925, i64 2147593968, i64 2147594008}
!5772 = !DILocation(line: 106, column: 1, scope: !5580)
!5773 = !{i64 2147594115, i64 2147594158, i64 2147594198}
!5774 = !DILocation(line: 107, column: 1, scope: !5580)
!5775 = !{i64 2147594299, i64 2147594342, i64 2147594382}
!5776 = !DILocation(line: 108, column: 1, scope: !5580)
!5777 = !{i64 2147594513, i64 2147594556, i64 2147594596}
!5778 = !DILocation(line: 109, column: 1, scope: !5580)
!5779 = !{i64 2147594724, i64 2147594767, i64 2147594807}
!5780 = !DILocation(line: 110, column: 1, scope: !5580)
!5781 = !{i64 2147594947, i64 2147594990, i64 2147595030}
!5782 = !DILocation(line: 111, column: 1, scope: !5580)
!5783 = !{i64 2147595131, i64 2147595174, i64 2147595214}
!5784 = !DILocation(line: 112, column: 1, scope: !5580)
!5785 = !{i64 2147595345, i64 2147595388, i64 2147595428}
!5786 = !DILocation(line: 113, column: 1, scope: !5580)
!5787 = !{i64 2147595511, i64 2147595554, i64 2147595594}
!5788 = !DILocation(line: 114, column: 1, scope: !5580)
!5789 = !{i64 2147595692, i64 2147595735, i64 2147595775}
!5790 = !DILocation(line: 115, column: 1, scope: !5580)
!5791 = !{i64 2147595885, i64 2147595928, i64 2147595968}
!5792 = !DILocation(line: 116, column: 1, scope: !5580)
!5793 = !{i64 2147596111, i64 2147596154, i64 2147596194}
!5794 = !DILocation(line: 117, column: 1, scope: !5580)
!5795 = !{i64 2147596325, i64 2147596368, i64 2147596408}
!5796 = !DILocation(line: 118, column: 1, scope: !5580)
!5797 = !{i64 2147596551, i64 2147596594, i64 2147596634}
!5798 = !DILocation(line: 119, column: 1, scope: !5580)
!5799 = !{i64 2147596768, i64 2147596811, i64 2147596851}
!5800 = !DILocation(line: 120, column: 1, scope: !5580)
!5801 = !{i64 2147597045, i64 2147597088, i64 2147597128}
!5802 = !DILocation(line: 121, column: 1, scope: !5580)
!5803 = !{i64 2147597271, i64 2147597314, i64 2147597354}
!5804 = !DILocation(line: 122, column: 1, scope: !5580)
!5805 = !{i64 2147597479, i64 2147597522, i64 2147597562}
!5806 = !DILocation(line: 123, column: 1, scope: !5580)
!5807 = !{i64 2147597675, i64 2147597718, i64 2147597758}
!5808 = !DILocation(line: 124, column: 1, scope: !5580)
!5809 = !{i64 2147597940, i64 2147597983, i64 2147598023}
!5810 = !DILocation(line: 125, column: 1, scope: !5580)
!5811 = !{i64 2147598154, i64 2147598197, i64 2147598237}
!5812 = !DILocation(line: 126, column: 1, scope: !5580)
!5813 = !{i64 2147598329, i64 2147598372, i64 2147598412}
!5814 = !DILocation(line: 127, column: 1, scope: !5580)
!5815 = !{i64 2147598583, i64 2147598626, i64 2147598666}
!5816 = !DILocation(line: 128, column: 1, scope: !5580)
!5817 = !{i64 2147598782, i64 2147598825, i64 2147598865}
!5818 = !DILocation(line: 129, column: 1, scope: !5580)
!5819 = !{i64 2147599024, i64 2147599067, i64 2147599107}
!5820 = !DILocation(line: 130, column: 1, scope: !5580)
!5821 = !{i64 2147599187, i64 2147599230, i64 2147599270}
!5822 = !DILocation(line: 131, column: 1, scope: !5580)
!5823 = !{i64 2147599374, i64 2147599417, i64 2147599457}
!5824 = !DILocation(line: 132, column: 1, scope: !5580)
!5825 = !{i64 2147599567, i64 2147599610, i64 2147599650}
!5826 = !DILocation(line: 133, column: 1, scope: !5580)
!5827 = !{i64 2147603810, i64 2147603853, i64 2147603893}
!5828 = !DILocation(line: 134, column: 1, scope: !5580)
!5829 = !{i64 2147604024, i64 2147604067, i64 2147604107}
!5830 = !DILocation(line: 135, column: 1, scope: !5580)
!5831 = !{i64 2147604235, i64 2147604278, i64 2147604318}
!5832 = !DILocation(line: 136, column: 1, scope: !5580)
!5833 = !{i64 2147604455, i64 2147604498, i64 2147604538}
!5834 = !DILocation(line: 137, column: 1, scope: !5580)
!5835 = !{i64 2147604662, i64 2147604705, i64 2147604745}
!5836 = !DILocation(line: 138, column: 1, scope: !5580)
!5837 = !{i64 2147604935, i64 2147604978, i64 2147605018}
!5838 = !DILocation(line: 139, column: 1, scope: !5580)
!5839 = !{i64 2147605183, i64 2147605226, i64 2147605266}
!5840 = !DILocation(line: 140, column: 1, scope: !5580)
!5841 = !{i64 2147605382, i64 2147605425, i64 2147605465}
!5842 = !DILocation(line: 141, column: 1, scope: !5580)
!5843 = !{i64 2147605617, i64 2147605660, i64 2147605700}
!5844 = !DILocation(line: 142, column: 1, scope: !5580)
!5845 = !{i64 2147605867, i64 2147605910, i64 2147605950}
!5846 = !DILocation(line: 143, column: 1, scope: !5580)
!5847 = !{i64 2147606069, i64 2147606112, i64 2147606152}
!5848 = !DILocation(line: 144, column: 1, scope: !5580)
!5849 = !{i64 2147606292, i64 2147606335, i64 2147606375}
!5850 = !DILocation(line: 145, column: 1, scope: !5580)
!5851 = !{i64 2147606506, i64 2147606549, i64 2147606589}
!5852 = !DILocation(line: 146, column: 1, scope: !5580)
!5853 = !{i64 2147606750, i64 2147606793, i64 2147606833}
!5854 = !DILocation(line: 147, column: 1, scope: !5580)
!5855 = !{i64 2147606979, i64 2147607022, i64 2147607062}
!5856 = !DILocation(line: 148, column: 1, scope: !5580)
!5857 = !{i64 2147607208, i64 2147607251, i64 2147607291}
!5858 = !DILocation(line: 149, column: 1, scope: !5580)
!5859 = !{i64 2147607416, i64 2147607459, i64 2147607499}
!5860 = !DILocation(line: 150, column: 1, scope: !5580)
!5861 = !{i64 2147607654, i64 2147607697, i64 2147607737}
!5862 = !DILocation(line: 151, column: 1, scope: !5580)
!5863 = !{i64 2147607880, i64 2147607923, i64 2147607963}
!5864 = !DILocation(line: 152, column: 1, scope: !5580)
!5865 = !{i64 2147608139, i64 2147608182, i64 2147608222}
!5866 = !DILocation(line: 153, column: 1, scope: !5580)
!5867 = !{i64 2147608359, i64 2147608402, i64 2147608442}
!5868 = !DILocation(line: 154, column: 1, scope: !5580)
!5869 = !{i64 2147608591, i64 2147608634, i64 2147608674}
!5870 = !DILocation(line: 155, column: 1, scope: !5580)
!5871 = !{i64 2147608832, i64 2147608875, i64 2147608915}
!5872 = !DILocation(line: 156, column: 1, scope: !5580)
!5873 = !{i64 2147609073, i64 2147609116, i64 2147609156}
!5874 = !DILocation(line: 157, column: 1, scope: !5580)
!5875 = !{i64 2147609296, i64 2147609339, i64 2147609379}
!5876 = !DILocation(line: 158, column: 1, scope: !5580)
!5877 = !{i64 2147609513, i64 2147609556, i64 2147609596}
!5878 = !DILocation(line: 159, column: 1, scope: !5580)
!5879 = !{i64 2147609754, i64 2147609797, i64 2147609837}
!5880 = !DILocation(line: 160, column: 1, scope: !5580)
!5881 = !{i64 2147609941, i64 2147609984, i64 2147610024}
!5882 = !DILocation(line: 161, column: 1, scope: !5580)
!5883 = !{i64 2147610128, i64 2147610171, i64 2147610211}
!5884 = !DILocation(line: 162, column: 1, scope: !5580)
!5885 = !{i64 2147610291, i64 2147610334, i64 2147610374}
!5886 = !DILocation(line: 163, column: 1, scope: !5580)
!5887 = !{i64 2147610550, i64 2147610593, i64 2147610633}
!5888 = !DILocation(line: 164, column: 1, scope: !5580)
!5889 = !{i64 2147610773, i64 2147610816, i64 2147610856}
!5890 = !DILocation(line: 165, column: 1, scope: !5580)
!5891 = !{i64 2147611002, i64 2147611045, i64 2147611085}
!5892 = !DILocation(line: 166, column: 1, scope: !5580)
!5893 = !{i64 2147611198, i64 2147611241, i64 2147611281}
!5894 = !DILocation(line: 167, column: 1, scope: !5580)
!5895 = !{i64 2147611410, i64 2147611453, i64 2147611493}
!5896 = !DILocation(line: 168, column: 1, scope: !5580)
!5897 = !{i64 2147611631, i64 2147611674, i64 2147611714}
!5898 = !DILocation(line: 169, column: 1, scope: !5580)
!5899 = !{i64 2147611845, i64 2147611888, i64 2147611928}
!5900 = !DILocation(line: 170, column: 1, scope: !5580)
!5901 = !{i64 2147612035, i64 2147612078, i64 2147612118}
!5902 = !DILocation(line: 171, column: 1, scope: !5580)
!5903 = !{i64 2147616295, i64 2147616338, i64 2147616378}
!5904 = !DILocation(line: 172, column: 1, scope: !5580)
!5905 = !{i64 2147616500, i64 2147616543, i64 2147616583}
!5906 = !DILocation(line: 173, column: 1, scope: !5580)
!5907 = !{i64 2147616720, i64 2147616763, i64 2147616803}
!5908 = !DILocation(line: 174, column: 1, scope: !5580)
!5909 = !{i64 2147616921, i64 2147616964, i64 2147617004}
!5910 = !DILocation(line: 175, column: 1, scope: !5580)
!5911 = !{i64 2147617120, i64 2147617163, i64 2147617203}
!5912 = !DILocation(line: 176, column: 1, scope: !5580)
!5913 = !{i64 2147617325, i64 2147617368, i64 2147617408}
!5914 = !DILocation(line: 177, column: 1, scope: !5580)
!5915 = !{i64 2147617494, i64 2147617537, i64 2147617577}
!5916 = !DILocation(line: 178, column: 1, scope: !5580)
!5917 = !{i64 2147617678, i64 2147617721, i64 2147617761}
!5918 = !DILocation(line: 179, column: 1, scope: !5580)
!5919 = !{i64 2147617862, i64 2147617905, i64 2147617945}
!5920 = !DILocation(line: 180, column: 1, scope: !5580)
!5921 = !{i64 2147618049, i64 2147618092, i64 2147618132}
!5922 = !DILocation(line: 181, column: 1, scope: !5580)
!5923 = !{i64 2147618233, i64 2147618276, i64 2147618316}
!5924 = !DILocation(line: 182, column: 1, scope: !5580)
!5925 = !{i64 2147618471, i64 2147618514, i64 2147618554}
!5926 = !DILocation(line: 183, column: 1, scope: !5580)
!5927 = !{i64 2147618701, i64 2147618744, i64 2147618784}
!5928 = !DILocation(line: 184, column: 1, scope: !5580)
!5929 = !{i64 2147618930, i64 2147618973, i64 2147619013}
!5930 = !DILocation(line: 185, column: 1, scope: !5580)
!5931 = !{i64 2147619117, i64 2147619160, i64 2147619200}
!5932 = !DILocation(line: 186, column: 1, scope: !5580)
!5933 = !{i64 2147619313, i64 2147619356, i64 2147619396}
!5934 = !DILocation(line: 187, column: 1, scope: !5580)
!5935 = !{i64 2147619521, i64 2147619564, i64 2147619604}
!5936 = !DILocation(line: 188, column: 1, scope: !5580)
!5937 = !{i64 2147619733, i64 2147619776, i64 2147619816}
!5938 = !DILocation(line: 189, column: 1, scope: !5580)
!5939 = !{i64 2147619932, i64 2147619975, i64 2147620015}
!5940 = !DILocation(line: 190, column: 1, scope: !5580)
!5941 = !{i64 2147620170, i64 2147620213, i64 2147620253}
!5942 = !DILocation(line: 191, column: 1, scope: !5580)
!5943 = !{i64 2147620366, i64 2147620409, i64 2147620449}
!5944 = !DILocation(line: 192, column: 1, scope: !5580)
!5945 = !{i64 2147620568, i64 2147620611, i64 2147620651}
!5946 = !DILocation(line: 193, column: 1, scope: !5580)
!5947 = !{i64 2147620761, i64 2147620804, i64 2147620844}
!5948 = !DILocation(line: 194, column: 1, scope: !5580)
!5949 = !{i64 2147620995, i64 2147621038, i64 2147621078}
!5950 = !DILocation(line: 195, column: 1, scope: !5580)
!5951 = !{i64 2147621158, i64 2147621201, i64 2147621241}
!5952 = !DILocation(line: 196, column: 1, scope: !5580)
!5953 = !{i64 2147621397, i64 2147621440, i64 2147621480}
!5954 = !DILocation(line: 197, column: 1, scope: !5580)
!5955 = !{i64 2147621636, i64 2147621679, i64 2147621719}
!5956 = !DILocation(line: 198, column: 1, scope: !5580)
!5957 = !{i64 2147621872, i64 2147621915, i64 2147621955}
!5958 = !DILocation(line: 199, column: 1, scope: !5580)
!5959 = !{i64 2147622102, i64 2147622145, i64 2147622185}
!5960 = !DILocation(line: 200, column: 1, scope: !5580)
!5961 = !{i64 2147622289, i64 2147622332, i64 2147622372}
!5962 = !DILocation(line: 201, column: 1, scope: !5580)
!5963 = !{i64 2147622488, i64 2147622531, i64 2147622571}
!5964 = !DILocation(line: 202, column: 1, scope: !5580)
!5965 = !{i64 2147622759, i64 2147622802, i64 2147622842}
!5966 = !DILocation(line: 203, column: 1, scope: !5580)
!5967 = !{i64 2147622934, i64 2147622977, i64 2147623017}
!5968 = !DILocation(line: 204, column: 1, scope: !5580)
!5969 = !{i64 2147623168, i64 2147623211, i64 2147623251}
!5970 = !DILocation(line: 205, column: 1, scope: !5580)
!5971 = !{i64 2147623376, i64 2147623419, i64 2147623459}
!5972 = !DILocation(line: 206, column: 1, scope: !5580)
!5973 = !{i64 2147623594, i64 2147623637, i64 2147623677}
!5974 = !DILocation(line: 207, column: 1, scope: !5580)
!5975 = !{i64 2147623784, i64 2147623827, i64 2147623867}
!5976 = !DILocation(line: 208, column: 1, scope: !5580)
!5977 = !{i64 2147623980, i64 2147624023, i64 2147624063}
!5978 = !DILocation(line: 209, column: 1, scope: !5580)
!5979 = !{i64 2147624186, i64 2147624229, i64 2147624269}
!5980 = !DILocation(line: 210, column: 1, scope: !5580)
!5981 = !{i64 2147624391, i64 2147624434, i64 2147624474}
!5982 = !DILocation(line: 211, column: 1, scope: !5580)
!5983 = !{i64 2147624617, i64 2147624660, i64 2147624700}
!5984 = !DILocation(line: 212, column: 1, scope: !5580)
!5985 = !{i64 2147624849, i64 2147624892, i64 2147624932}
!5986 = !DILocation(line: 213, column: 1, scope: !5580)
!5987 = !{i64 2147625033, i64 2147625076, i64 2147625116}
!5988 = !DILocation(line: 214, column: 1, scope: !5580)
!5989 = !{i64 2147625242, i64 2147625285, i64 2147625325}
!5990 = !DILocation(line: 215, column: 1, scope: !5580)
!5991 = !{i64 2147625426, i64 2147625469, i64 2147625509}
!5992 = !DILocation(line: 216, column: 1, scope: !5580)
!5993 = !{i64 2147629713, i64 2147629756, i64 2147629796}
!5994 = !DILocation(line: 217, column: 1, scope: !5580)
!5995 = !{i64 2147629939, i64 2147629982, i64 2147630022}
!5996 = !DILocation(line: 218, column: 1, scope: !5580)
!5997 = !{i64 2147630165, i64 2147630208, i64 2147630248}
!5998 = !DILocation(line: 219, column: 1, scope: !5580)
!5999 = !{i64 2147630391, i64 2147630434, i64 2147630474}
!6000 = !DILocation(line: 220, column: 1, scope: !5580)
!6001 = !{i64 2147630617, i64 2147630660, i64 2147630700}
!6002 = !DILocation(line: 221, column: 1, scope: !5580)
!6003 = !{i64 2147630849, i64 2147630892, i64 2147630932}
!6004 = !DILocation(line: 222, column: 1, scope: !5580)
!6005 = !{i64 2147631087, i64 2147631130, i64 2147631170}
!6006 = !DILocation(line: 223, column: 1, scope: !5580)
!6007 = !{i64 2147631307, i64 2147631350, i64 2147631390}
!6008 = !DILocation(line: 224, column: 1, scope: !5580)
!6009 = !{i64 2147631551, i64 2147631594, i64 2147631634}
!6010 = !DILocation(line: 225, column: 1, scope: !5580)
!6011 = !{i64 2147631792, i64 2147631835, i64 2147631875}
!6012 = !DILocation(line: 226, column: 1, scope: !5580)
!6013 = !{i64 2147632027, i64 2147632070, i64 2147632110}
!6014 = !DILocation(line: 227, column: 1, scope: !5580)
!6015 = !{i64 2147632259, i64 2147632302, i64 2147632342}
!6016 = !DILocation(line: 228, column: 1, scope: !5580)
!6017 = !{i64 2147632461, i64 2147632504, i64 2147632544}
!6018 = !DILocation(line: 229, column: 1, scope: !5580)
!6019 = !{i64 2147632711, i64 2147632754, i64 2147632794}
!6020 = !DILocation(line: 230, column: 1, scope: !5580)
!6021 = !{i64 2147632949, i64 2147632992, i64 2147633032}
!6022 = !DILocation(line: 231, column: 1, scope: !5580)
!6023 = !{i64 2147633133, i64 2147633176, i64 2147633216}
!6024 = !DILocation(line: 232, column: 1, scope: !5580)
!6025 = !{i64 2147633357, i64 2147633400, i64 2147633440}
!6026 = !DILocation(line: 233, column: 1, scope: !5580)
!6027 = !{i64 2147633595, i64 2147633638, i64 2147633678}
!6028 = !DILocation(line: 234, column: 1, scope: !5580)
!6029 = !{i64 2147633833, i64 2147633876, i64 2147633916}
!6030 = !DILocation(line: 235, column: 1, scope: !5580)
!6031 = !{i64 2147634026, i64 2147634069, i64 2147634109}
!6032 = !DILocation(line: 236, column: 1, scope: !5580)
!6033 = !{i64 2147634279, i64 2147634322, i64 2147634362}
!6034 = !DILocation(line: 237, column: 1, scope: !5580)
!6035 = !{i64 2147634493, i64 2147634536, i64 2147634576}
!6036 = !DILocation(line: 238, column: 1, scope: !5580)
!6037 = !{i64 2147634701, i64 2147634744, i64 2147634784}
!6038 = !DILocation(line: 239, column: 1, scope: !5580)
!6039 = !{i64 2147634891, i64 2147634934, i64 2147634974}
!6040 = !DILocation(line: 240, column: 1, scope: !5580)
!6041 = !{i64 2147635105, i64 2147635148, i64 2147635188}
!6042 = !DILocation(line: 241, column: 1, scope: !5580)
!6043 = !{i64 2147635367, i64 2147635410, i64 2147635450}
!6044 = !DILocation(line: 242, column: 1, scope: !5580)
!6045 = !{i64 2147635578, i64 2147635621, i64 2147635661}
!6046 = !DILocation(line: 243, column: 1, scope: !5580)
!6047 = !{i64 2147635822, i64 2147635865, i64 2147635905}
!6048 = !DILocation(line: 244, column: 1, scope: !5580)
!6049 = !{i64 2147636033, i64 2147636076, i64 2147636116}
!6050 = !DILocation(line: 245, column: 1, scope: !5580)
!6051 = !{i64 2147636262, i64 2147636305, i64 2147636345}
!6052 = !DILocation(line: 246, column: 1, scope: !5580)
!6053 = !{i64 2147636527, i64 2147636570, i64 2147636610}
!6054 = !DILocation(line: 247, column: 1, scope: !5580)
!6055 = !{i64 2147636732, i64 2147636775, i64 2147636815}
!6056 = !DILocation(line: 248, column: 1, scope: !5580)
!6057 = !{i64 2147636928, i64 2147636971, i64 2147637011}
!6058 = !DILocation(line: 249, column: 1, scope: !5580)
!6059 = !{i64 2147637151, i64 2147637194, i64 2147637234}
!6060 = !DILocation(line: 250, column: 1, scope: !5580)
!6061 = !{i64 2147637314, i64 2147637357, i64 2147637397}
!6062 = !DILocation(line: 251, column: 1, scope: !5580)
!6063 = !{i64 2147637519, i64 2147637562, i64 2147637602}
!6064 = !DILocation(line: 252, column: 1, scope: !5580)
!6065 = !{i64 2147637739, i64 2147637782, i64 2147637822}
!6066 = !DILocation(line: 253, column: 1, scope: !5580)
!6067 = !{i64 2147637953, i64 2147637996, i64 2147638036}
!6068 = !DILocation(line: 254, column: 1, scope: !5580)
!6069 = !{i64 2147642228, i64 2147642271, i64 2147642311}
!6070 = !DILocation(line: 255, column: 1, scope: !5580)
!6071 = !{i64 2147642448, i64 2147642491, i64 2147642531}
!6072 = !DILocation(line: 256, column: 1, scope: !5580)
!6073 = !{i64 2147642659, i64 2147642702, i64 2147642742}
!6074 = !DILocation(line: 257, column: 1, scope: !5580)
!6075 = !{i64 2147642852, i64 2147642895, i64 2147642935}
!6076 = !DILocation(line: 258, column: 1, scope: !5580)
!6077 = !{i64 2147643051, i64 2147643094, i64 2147643134}
!6078 = !DILocation(line: 259, column: 1, scope: !5580)
!6079 = !{i64 2147643223, i64 2147643266, i64 2147643306}
!6080 = !DILocation(line: 260, column: 1, scope: !5580)
!6081 = !{i64 2147643416, i64 2147643459, i64 2147643499}
!6082 = !DILocation(line: 261, column: 1, scope: !5580)
!6083 = !{i64 2147643612, i64 2147643655, i64 2147643695}
!6084 = !DILocation(line: 262, column: 1, scope: !5580)
!6085 = !{i64 2147643839, i64 2147643882, i64 2147643922}
!6086 = !DILocation(line: 263, column: 1, scope: !5580)
!6087 = !{i64 2147644056, i64 2147644099, i64 2147644139}
!6088 = !DILocation(line: 264, column: 1, scope: !5580)
!6089 = !{i64 2147644348, i64 2147644391, i64 2147644431}
!6090 = !DILocation(line: 265, column: 1, scope: !5580)
!6091 = !{i64 2147644580, i64 2147644623, i64 2147644663}
!6092 = !DILocation(line: 266, column: 1, scope: !5580)
!6093 = !{i64 2147644797, i64 2147644840, i64 2147644880}
!6094 = !DILocation(line: 267, column: 1, scope: !5580)
!6095 = !{i64 2147645004, i64 2147645047, i64 2147645087}
!6096 = !DILocation(line: 268, column: 1, scope: !5580)
!6097 = !{i64 2147645205, i64 2147645248, i64 2147645288}
!6098 = !DILocation(line: 269, column: 1, scope: !5580)
!6099 = !{i64 2147645437, i64 2147645480, i64 2147645520}
!6100 = !DILocation(line: 270, column: 1, scope: !5580)
!6101 = !{i64 2147645645, i64 2147645688, i64 2147645728}
!6102 = !DILocation(line: 271, column: 1, scope: !5580)
!6103 = !{i64 2147645835, i64 2147645878, i64 2147645918}
!6104 = !DILocation(line: 272, column: 1, scope: !5580)
!6105 = !{i64 2147646061, i64 2147646104, i64 2147646144}
!6106 = !DILocation(line: 273, column: 1, scope: !5580)
!6107 = !{i64 2147646250, i64 2147646293, i64 2147646333}
!6108 = !DILocation(line: 274, column: 1, scope: !5580)
!6109 = !{i64 2147646521, i64 2147646564, i64 2147646604}
!6110 = !DILocation(line: 275, column: 1, scope: !5580)
!6111 = !{i64 2147646741, i64 2147646784, i64 2147646824}
!6112 = !DILocation(line: 276, column: 1, scope: !5580)
!6113 = !{i64 2147646994, i64 2147647037, i64 2147647077}
!6114 = !DILocation(line: 277, column: 1, scope: !5580)
!6115 = !{i64 2147647202, i64 2147647245, i64 2147647285}
!6116 = !DILocation(line: 278, column: 1, scope: !5580)
!6117 = !{i64 2147647434, i64 2147647477, i64 2147647517}
!6118 = !DILocation(line: 279, column: 1, scope: !5580)
!6119 = !{i64 2147647645, i64 2147647688, i64 2147647728}
!6120 = !DILocation(line: 280, column: 1, scope: !5580)
!6121 = !{i64 2147647835, i64 2147647878, i64 2147647918}
!6122 = !DILocation(line: 281, column: 1, scope: !5580)
!6123 = !{i64 2147648049, i64 2147648092, i64 2147648132}
!6124 = !DILocation(line: 282, column: 1, scope: !5580)
!6125 = !{i64 2147648248, i64 2147648291, i64 2147648331}
!6126 = !DILocation(line: 283, column: 1, scope: !5580)
!6127 = !{i64 2147648435, i64 2147648478, i64 2147648518}
!6128 = !DILocation(line: 284, column: 1, scope: !5580)
!6129 = !{i64 2147648643, i64 2147648686, i64 2147648726}
!6130 = !DILocation(line: 285, column: 1, scope: !5580)
!6131 = !{i64 2147648872, i64 2147648915, i64 2147648955}
!6132 = !DILocation(line: 286, column: 1, scope: !5580)
!6133 = !{i64 2147649074, i64 2147649117, i64 2147649157}
!6134 = !DILocation(line: 287, column: 1, scope: !5580)
!6135 = !{i64 2147649273, i64 2147649316, i64 2147649356}
!6136 = !DILocation(line: 288, column: 1, scope: !5580)
!6137 = !{i64 2147649490, i64 2147649533, i64 2147649573}
!6138 = !DILocation(line: 290, column: 1, scope: !5580)
!6139 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !184, file: !184, line: 30, type: !191, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !167, retainedNodes: !6140)
!6140 = !{!6141, !6142}
!6141 = !DILocalVariable(name: "arg", arg: 1, scope: !6139, file: !184, line: 30, type: !193)
!6142 = !DILocalVariable(name: "key", scope: !6139, file: !184, line: 32, type: !137)
!6143 = !DILocation(line: 0, scope: !6139)
!6144 = !DILocation(line: 37, column: 2, scope: !6139)
!6145 = !DILocation(line: 38, column: 2, scope: !6139)
!6146 = !DILocation(line: 55, column: 2, scope: !6147, inlinedAt: !6154)
!6147 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6148, file: !6148, line: 42, type: !6149, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !167, retainedNodes: !6151)
!6148 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6149 = !DISubroutineType(types: !6150)
!6150 = !{!32}
!6151 = !{!6152, !6153}
!6152 = !DILocalVariable(name: "key", scope: !6147, file: !6148, line: 44, type: !32)
!6153 = !DILocalVariable(name: "tmp", scope: !6147, file: !6148, line: 53, type: !32)
!6154 = distinct !DILocation(line: 40, column: 8, scope: !6139)
!6155 = !{i64 1932699}
!6156 = !DILocation(line: 0, scope: !6147, inlinedAt: !6154)
!6157 = !DILocalVariable(name: "key", arg: 1, scope: !6158, file: !6148, line: 84, type: !32)
!6158 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6148, file: !6148, line: 84, type: !6159, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !167, retainedNodes: !6161)
!6159 = !DISubroutineType(types: !6160)
!6160 = !{null, !32}
!6161 = !{!6157}
!6162 = !DILocation(line: 0, scope: !6158, inlinedAt: !6163)
!6163 = distinct !DILocation(line: 47, column: 2, scope: !6139)
!6164 = !DILocation(line: 95, column: 2, scope: !6158, inlinedAt: !6163)
!6165 = !{i64 1933516}
!6166 = !DILocation(line: 51, column: 18, scope: !6139)
!6167 = !DILocation(line: 53, column: 2, scope: !6139)
!6168 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !6169, file: !6169, line: 1609, type: !2848, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !167, retainedNodes: !162)
!6169 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6170 = !DILocation(line: 1611, column: 3, scope: !6168)
!6171 = !DILocation(line: 1612, column: 1, scope: !6168)
!6172 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !6169, file: !6169, line: 1629, type: !2848, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !167, retainedNodes: !162)
!6173 = !DILocation(line: 1631, column: 3, scope: !6172)
!6174 = !DILocation(line: 1632, column: 1, scope: !6172)
!6175 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !225, file: !225, line: 26, type: !231, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !222, retainedNodes: !6176)
!6176 = !{!6177}
!6177 = !DILocalVariable(name: "dev", arg: 1, scope: !6175, file: !225, line: 26, type: !233)
!6178 = !DILocation(line: 0, scope: !6175)
!6179 = !DILocation(line: 68, column: 2, scope: !6175)
!6180 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !6181, file: !6181, line: 57, type: !6182, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2309, retainedNodes: !6228)
!6181 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6182 = !DISubroutineType(types: !6183)
!6183 = !{null, !32, !6184}
!6184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6185, size: 32)
!6185 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6186)
!6186 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2429, line: 141, baseType: !6187)
!6187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2429, line: 97, size: 256, elements: !6188)
!6188 = !{!6189}
!6189 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !6187, file: !2429, line: 107, baseType: !6190, size: 256)
!6190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2429, line: 98, size: 256, elements: !6191)
!6191 = !{!6192, !6197, !6202, !6207, !6212, !6217, !6222, !6227}
!6192 = !DIDerivedType(tag: DW_TAG_member, scope: !6190, file: !2429, line: 99, baseType: !6193, size: 32)
!6193 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6190, file: !2429, line: 99, size: 32, elements: !6194)
!6194 = !{!6195, !6196}
!6195 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !6193, file: !2429, line: 99, baseType: !137, size: 32)
!6196 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !6193, file: !2429, line: 99, baseType: !137, size: 32)
!6197 = !DIDerivedType(tag: DW_TAG_member, scope: !6190, file: !2429, line: 100, baseType: !6198, size: 32, offset: 32)
!6198 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6190, file: !2429, line: 100, size: 32, elements: !6199)
!6199 = !{!6200, !6201}
!6200 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !6198, file: !2429, line: 100, baseType: !137, size: 32)
!6201 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !6198, file: !2429, line: 100, baseType: !137, size: 32)
!6202 = !DIDerivedType(tag: DW_TAG_member, scope: !6190, file: !2429, line: 101, baseType: !6203, size: 32, offset: 64)
!6203 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6190, file: !2429, line: 101, size: 32, elements: !6204)
!6204 = !{!6205, !6206}
!6205 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !6203, file: !2429, line: 101, baseType: !137, size: 32)
!6206 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !6203, file: !2429, line: 101, baseType: !137, size: 32)
!6207 = !DIDerivedType(tag: DW_TAG_member, scope: !6190, file: !2429, line: 102, baseType: !6208, size: 32, offset: 96)
!6208 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6190, file: !2429, line: 102, size: 32, elements: !6209)
!6209 = !{!6210, !6211}
!6210 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !6208, file: !2429, line: 102, baseType: !137, size: 32)
!6211 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !6208, file: !2429, line: 102, baseType: !137, size: 32)
!6212 = !DIDerivedType(tag: DW_TAG_member, scope: !6190, file: !2429, line: 103, baseType: !6213, size: 32, offset: 128)
!6213 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6190, file: !2429, line: 103, size: 32, elements: !6214)
!6214 = !{!6215, !6216}
!6215 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6213, file: !2429, line: 103, baseType: !137, size: 32)
!6216 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6213, file: !2429, line: 103, baseType: !137, size: 32)
!6217 = !DIDerivedType(tag: DW_TAG_member, scope: !6190, file: !2429, line: 104, baseType: !6218, size: 32, offset: 160)
!6218 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6190, file: !2429, line: 104, size: 32, elements: !6219)
!6219 = !{!6220, !6221}
!6220 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !6218, file: !2429, line: 104, baseType: !137, size: 32)
!6221 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6218, file: !2429, line: 104, baseType: !137, size: 32)
!6222 = !DIDerivedType(tag: DW_TAG_member, scope: !6190, file: !2429, line: 105, baseType: !6223, size: 32, offset: 192)
!6223 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6190, file: !2429, line: 105, size: 32, elements: !6224)
!6224 = !{!6225, !6226}
!6225 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !6223, file: !2429, line: 105, baseType: !137, size: 32)
!6226 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6223, file: !2429, line: 105, baseType: !137, size: 32)
!6227 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !6190, file: !2429, line: 106, baseType: !137, size: 32, offset: 224)
!6228 = !{!6229, !6230}
!6229 = !DILocalVariable(name: "reason", arg: 1, scope: !6180, file: !6181, line: 57, type: !32)
!6230 = !DILocalVariable(name: "esf", arg: 2, scope: !6180, file: !6181, line: 57, type: !6184)
!6231 = !DILocation(line: 0, scope: !6180)
!6232 = !DILocation(line: 63, column: 2, scope: !6180)
!6233 = !DILocation(line: 64, column: 1, scope: !6180)
!6234 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !6181, file: !6181, line: 82, type: !6235, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2309, retainedNodes: !6250)
!6235 = !DISubroutineType(types: !6236)
!6236 = !{null, !6184, !6237}
!6237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6238, size: 32)
!6238 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !334, line: 37, baseType: !6239)
!6239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !334, line: 25, size: 288, elements: !6240)
!6240 = !{!6241, !6242, !6243, !6244, !6245, !6246, !6247, !6248, !6249}
!6241 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6239, file: !334, line: 26, baseType: !137, size: 32)
!6242 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6239, file: !334, line: 27, baseType: !137, size: 32, offset: 32)
!6243 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6239, file: !334, line: 28, baseType: !137, size: 32, offset: 64)
!6244 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6239, file: !334, line: 29, baseType: !137, size: 32, offset: 96)
!6245 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6239, file: !334, line: 30, baseType: !137, size: 32, offset: 128)
!6246 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6239, file: !334, line: 31, baseType: !137, size: 32, offset: 160)
!6247 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6239, file: !334, line: 32, baseType: !137, size: 32, offset: 192)
!6248 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6239, file: !334, line: 33, baseType: !137, size: 32, offset: 224)
!6249 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6239, file: !334, line: 34, baseType: !137, size: 32, offset: 256)
!6250 = !{!6251, !6252, !6253}
!6251 = !DILocalVariable(name: "esf", arg: 1, scope: !6234, file: !6181, line: 82, type: !6184)
!6252 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !6234, file: !6181, line: 82, type: !6237)
!6253 = !DILocalVariable(name: "reason", scope: !6234, file: !6181, line: 88, type: !32)
!6254 = !DILocation(line: 0, scope: !6234)
!6255 = !DILocation(line: 88, column: 35, scope: !6234)
!6256 = !DILocation(line: 108, column: 2, scope: !6234)
!6257 = !DILocation(line: 131, column: 1, scope: !6234)
!6258 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !6181, file: !6181, line: 133, type: !6259, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2309, retainedNodes: !6261)
!6259 = !DISubroutineType(types: !6260)
!6260 = !{null, !102}
!6261 = !{!6262, !6263, !6264}
!6262 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !6258, file: !6181, line: 133, type: !102)
!6263 = !DILocalVariable(name: "ssf_contents", scope: !6258, file: !6181, line: 135, type: !149)
!6264 = !DILocalVariable(name: "oops_esf", scope: !6258, file: !6181, line: 136, type: !6186)
!6265 = !DILocation(line: 0, scope: !6258)
!6266 = !DILocation(line: 136, column: 2, scope: !6258)
!6267 = !DILocation(line: 136, column: 15, scope: !6258)
!6268 = !DILocation(line: 139, column: 22, scope: !6258)
!6269 = !DILocation(line: 139, column: 17, scope: !6258)
!6270 = !DILocation(line: 139, column: 20, scope: !6258)
!6271 = !DILocation(line: 141, column: 2, scope: !6258)
!6272 = !DILocation(line: 142, column: 2, scope: !6258)
!6273 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6274, file: !6274, line: 40, type: !6159, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2320, retainedNodes: !6275)
!6274 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6275 = !{!6276}
!6276 = !DILocalVariable(name: "irq", arg: 1, scope: !6273, file: !6274, line: 40, type: !32)
!6277 = !DILocation(line: 0, scope: !6273)
!6278 = !DILocation(line: 42, column: 2, scope: !6273)
!6279 = !DILocation(line: 43, column: 1, scope: !6273)
!6280 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !402, file: !402, line: 1684, type: !6281, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2320, retainedNodes: !6283)
!6281 = !DISubroutineType(types: !6282)
!6282 = !{null, !637}
!6283 = !{!6284}
!6284 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6280, file: !402, line: 1684, type: !637)
!6285 = !DILocation(line: 0, scope: !6280)
!6286 = !DILocation(line: 1686, column: 23, scope: !6287)
!6287 = distinct !DILexicalBlock(scope: !6280, file: !402, line: 1686, column: 7)
!6288 = !DILocation(line: 1686, column: 7, scope: !6280)
!6289 = !DILocation(line: 1688, column: 5, scope: !6290)
!6290 = distinct !DILexicalBlock(scope: !6287, file: !402, line: 1687, column: 3)
!6291 = !{i64 2150441164}
!6292 = !DILocation(line: 1689, column: 81, scope: !6290)
!6293 = !DILocation(line: 1689, column: 60, scope: !6290)
!6294 = !DILocation(line: 1689, column: 34, scope: !6290)
!6295 = !DILocation(line: 1689, column: 5, scope: !6290)
!6296 = !DILocation(line: 1689, column: 43, scope: !6290)
!6297 = !DILocation(line: 1690, column: 5, scope: !6290)
!6298 = !{i64 2150441278}
!6299 = !DILocation(line: 1691, column: 3, scope: !6290)
!6300 = !DILocation(line: 1692, column: 1, scope: !6280)
!6301 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6274, file: !6274, line: 45, type: !6159, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2320, retainedNodes: !6302)
!6302 = !{!6303}
!6303 = !DILocalVariable(name: "irq", arg: 1, scope: !6301, file: !6274, line: 45, type: !32)
!6304 = !DILocation(line: 0, scope: !6301)
!6305 = !DILocation(line: 47, column: 2, scope: !6301)
!6306 = !DILocation(line: 48, column: 1, scope: !6301)
!6307 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !402, file: !402, line: 1722, type: !6281, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2320, retainedNodes: !6308)
!6308 = !{!6309}
!6309 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6307, file: !402, line: 1722, type: !637)
!6310 = !DILocation(line: 0, scope: !6307)
!6311 = !DILocation(line: 1724, column: 23, scope: !6312)
!6312 = distinct !DILexicalBlock(scope: !6307, file: !402, line: 1724, column: 7)
!6313 = !DILocation(line: 1724, column: 7, scope: !6307)
!6314 = !DILocation(line: 1726, column: 81, scope: !6315)
!6315 = distinct !DILexicalBlock(scope: !6312, file: !402, line: 1725, column: 3)
!6316 = !DILocation(line: 1726, column: 60, scope: !6315)
!6317 = !DILocation(line: 1726, column: 34, scope: !6315)
!6318 = !DILocation(line: 1726, column: 5, scope: !6315)
!6319 = !DILocation(line: 1726, column: 43, scope: !6315)
!6320 = !DILocation(line: 271, column: 3, scope: !6321, inlinedAt: !6323)
!6321 = distinct !DISubprogram(name: "__DSB", scope: !6322, file: !6322, line: 269, type: !2848, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2320, retainedNodes: !162)
!6322 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6323 = distinct !DILocation(line: 1727, column: 5, scope: !6315)
!6324 = !{i64 2895547}
!6325 = !DILocation(line: 260, column: 3, scope: !6326, inlinedAt: !6327)
!6326 = distinct !DISubprogram(name: "__ISB", scope: !6322, file: !6322, line: 258, type: !2848, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2320, retainedNodes: !162)
!6327 = distinct !DILocation(line: 1728, column: 5, scope: !6315)
!6328 = !{i64 2895264}
!6329 = !DILocation(line: 1729, column: 3, scope: !6315)
!6330 = !DILocation(line: 1730, column: 1, scope: !6307)
!6331 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6274, file: !6274, line: 50, type: !6332, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2320, retainedNodes: !6334)
!6332 = !DISubroutineType(types: !6333)
!6333 = !{!103, !32}
!6334 = !{!6335}
!6335 = !DILocalVariable(name: "irq", arg: 1, scope: !6331, file: !6274, line: 50, type: !32)
!6336 = !DILocation(line: 0, scope: !6331)
!6337 = !DILocation(line: 52, column: 20, scope: !6331)
!6338 = !DILocation(line: 52, column: 9, scope: !6331)
!6339 = !DILocation(line: 52, column: 41, scope: !6331)
!6340 = !DILocation(line: 52, column: 39, scope: !6331)
!6341 = !DILocation(line: 52, column: 2, scope: !6331)
!6342 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6274, file: !6274, line: 64, type: !6343, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2320, retainedNodes: !6345)
!6343 = !DISubroutineType(types: !6344)
!6344 = !{null, !32, !32, !137}
!6345 = !{!6346, !6347, !6348}
!6346 = !DILocalVariable(name: "irq", arg: 1, scope: !6342, file: !6274, line: 64, type: !32)
!6347 = !DILocalVariable(name: "prio", arg: 2, scope: !6342, file: !6274, line: 64, type: !32)
!6348 = !DILocalVariable(name: "flags", arg: 3, scope: !6342, file: !6274, line: 64, type: !137)
!6349 = !DILocation(line: 0, scope: !6342)
!6350 = !DILocation(line: 83, column: 8, scope: !6351)
!6351 = distinct !DILexicalBlock(scope: !6352, file: !6274, line: 82, column: 9)
!6352 = distinct !DILexicalBlock(scope: !6342, file: !6274, line: 76, column: 6)
!6353 = !DILocation(line: 95, column: 2, scope: !6342)
!6354 = !DILocation(line: 96, column: 1, scope: !6342)
!6355 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !402, file: !402, line: 1814, type: !6356, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2320, retainedNodes: !6358)
!6356 = !DISubroutineType(types: !6357)
!6357 = !{null, !637, !137}
!6358 = !{!6359, !6360}
!6359 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6355, file: !402, line: 1814, type: !637)
!6360 = !DILocalVariable(name: "priority", arg: 2, scope: !6355, file: !402, line: 1814, type: !137)
!6361 = !DILocation(line: 0, scope: !6355)
!6362 = !DILocation(line: 0, scope: !6363)
!6363 = distinct !DILexicalBlock(scope: !6355, file: !402, line: 1816, column: 7)
!6364 = !DILocation(line: 1816, column: 7, scope: !6355)
!6365 = !DILocation(line: 1824, column: 1, scope: !6355)
!6366 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6274, file: !6274, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2320, retainedNodes: !6367)
!6367 = !{!6368}
!6368 = !DILocalVariable(name: "unused", arg: 1, scope: !6366, file: !6274, line: 155, type: !13)
!6369 = !DILocation(line: 0, scope: !6366)
!6370 = !DILocation(line: 159, column: 2, scope: !6366)
!6371 = !DILocation(line: 160, column: 1, scope: !6366)
!6372 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6373, file: !6373, line: 87, type: !2848, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2366, retainedNodes: !162)
!6373 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6374 = !DILocation(line: 89, column: 2, scope: !6372)
!6375 = !DILocation(line: 90, column: 2, scope: !6372)
!6376 = !DILocation(line: 91, column: 1, scope: !6372)
!6377 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6373, file: !6373, line: 23, type: !2848, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!6378 = !DISubprogram(name: "z_arm_int_exit", scope: !6379, file: !6379, line: 153, type: !2848, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!6379 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6380 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6381, file: !6381, line: 256, type: !2848, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !162)
!6381 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6382 = !DILocation(line: 258, column: 2, scope: !6380)
!6383 = !DILocation(line: 260, column: 2, scope: !6380)
!6384 = !DILocation(line: 262, column: 2, scope: !6380)
!6385 = !DILocation(line: 263, column: 2, scope: !6380)
!6386 = !DILocation(line: 267, column: 2, scope: !6380)
!6387 = !DILocation(line: 268, column: 2, scope: !6380)
!6388 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6381, file: !6381, line: 53, type: !2848, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !162)
!6389 = !DILocation(line: 55, column: 12, scope: !6388)
!6390 = !DILocation(line: 271, column: 3, scope: !6391, inlinedAt: !6392)
!6391 = distinct !DISubprogram(name: "__DSB", scope: !6322, file: !6322, line: 269, type: !2848, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !162)
!6392 = distinct !DILocation(line: 56, column: 2, scope: !6388)
!6393 = !{i64 2894218}
!6394 = !DILocation(line: 260, column: 3, scope: !6395, inlinedAt: !6396)
!6395 = distinct !DISubprogram(name: "__ISB", scope: !6322, file: !6322, line: 258, type: !2848, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !162)
!6396 = distinct !DILocation(line: 57, column: 2, scope: !6388)
!6397 = !{i64 2893935}
!6398 = !DILocation(line: 58, column: 1, scope: !6388)
!6399 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !6381, file: !6381, line: 96, type: !2848, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !162)
!6400 = !DILocation(line: 103, column: 13, scope: !6399)
!6401 = !DILocation(line: 975, column: 3, scope: !6402, inlinedAt: !6405)
!6402 = distinct !DISubprogram(name: "__get_CONTROL", scope: !6322, file: !6322, line: 971, type: !135, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !6403)
!6403 = !{!6404}
!6404 = !DILocalVariable(name: "result", scope: !6402, file: !6322, line: 973, type: !137)
!6405 = distinct !DILocation(line: 189, column: 16, scope: !6399)
!6406 = !{i64 2915048}
!6407 = !DILocation(line: 0, scope: !6402, inlinedAt: !6405)
!6408 = !DILocation(line: 189, column: 32, scope: !6399)
!6409 = !DILocalVariable(name: "control", arg: 1, scope: !6410, file: !6322, line: 1001, type: !137)
!6410 = distinct !DISubprogram(name: "__set_CONTROL", scope: !6322, file: !6322, line: 1001, type: !6411, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !6413)
!6411 = !DISubroutineType(types: !6412)
!6412 = !{null, !137}
!6413 = !{!6409}
!6414 = !DILocation(line: 0, scope: !6410, inlinedAt: !6415)
!6415 = distinct !DILocation(line: 189, column: 2, scope: !6399)
!6416 = !DILocation(line: 1003, column: 3, scope: !6410, inlinedAt: !6415)
!6417 = !{i64 2915768}
!6418 = !DILocation(line: 260, column: 3, scope: !6395, inlinedAt: !6419)
!6419 = distinct !DILocation(line: 1004, column: 3, scope: !6410, inlinedAt: !6415)
!6420 = !DILocation(line: 191, column: 1, scope: !6399)
!6421 = distinct !DISubprogram(name: "arch_swap", scope: !6422, file: !6422, line: 33, type: !6332, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !6423)
!6422 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6423 = !{!6424}
!6424 = !DILocalVariable(name: "key", arg: 1, scope: !6421, file: !6422, line: 33, type: !32)
!6425 = !DILocation(line: 0, scope: !6421)
!6426 = !DILocation(line: 36, column: 2, scope: !6421)
!6427 = !DILocation(line: 36, column: 17, scope: !6421)
!6428 = !DILocation(line: 36, column: 25, scope: !6421)
!6429 = !DILocation(line: 37, column: 37, scope: !6421)
!6430 = !DILocation(line: 37, column: 17, scope: !6421)
!6431 = !DILocation(line: 37, column: 35, scope: !6421)
!6432 = !DILocation(line: 41, column: 12, scope: !6421)
!6433 = !DILocalVariable(name: "key", arg: 1, scope: !6434, file: !6148, line: 84, type: !32)
!6434 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6148, file: !6148, line: 84, type: !6159, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !6435)
!6435 = !{!6433}
!6436 = !DILocation(line: 0, scope: !6434, inlinedAt: !6437)
!6437 = distinct !DILocation(line: 44, column: 2, scope: !6421)
!6438 = !DILocation(line: 95, column: 2, scope: !6434, inlinedAt: !6437)
!6439 = !{i64 2036578}
!6440 = !DILocation(line: 53, column: 9, scope: !6421)
!6441 = !DILocation(line: 53, column: 24, scope: !6421)
!6442 = !DILocation(line: 53, column: 2, scope: !6421)
!6443 = distinct !DISubprogram(name: "arch_new_thread", scope: !6444, file: !6444, line: 56, type: !6445, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2424, retainedNodes: !6552)
!6444 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6445 = !DISubroutineType(types: !6446)
!6446 = !{null, !6447, !6547, !1005, !3176, !102, !102, !102}
!6447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6448, size: 32)
!6448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !263, line: 245, size: 1024, elements: !6449)
!6449 = !{!6450, !6508, !6520, !6521, !6522, !6523, !6529, !6542}
!6450 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6448, file: !263, line: 247, baseType: !6451, size: 384)
!6451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !263, line: 57, size: 384, elements: !6452)
!6452 = !{!6453, !6477, !6484, !6485, !6486, !6495, !6496, !6497}
!6453 = !DIDerivedType(tag: DW_TAG_member, scope: !6451, file: !263, line: 60, baseType: !6454, size: 64)
!6454 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6451, file: !263, line: 60, size: 64, elements: !6455)
!6455 = !{!6456, !6471}
!6456 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6454, file: !263, line: 61, baseType: !6457, size: 64)
!6457 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !273, line: 49, baseType: !6458)
!6458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !273, line: 37, size: 64, elements: !6459)
!6459 = !{!6460, !6466}
!6460 = !DIDerivedType(tag: DW_TAG_member, scope: !6458, file: !273, line: 38, baseType: !6461, size: 32)
!6461 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6458, file: !273, line: 38, size: 32, elements: !6462)
!6462 = !{!6463, !6465}
!6463 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6461, file: !273, line: 39, baseType: !6464, size: 32)
!6464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6458, size: 32)
!6465 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6461, file: !273, line: 40, baseType: !6464, size: 32)
!6466 = !DIDerivedType(tag: DW_TAG_member, scope: !6458, file: !273, line: 42, baseType: !6467, size: 32, offset: 32)
!6467 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6458, file: !273, line: 42, size: 32, elements: !6468)
!6468 = !{!6469, !6470}
!6469 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6467, file: !273, line: 43, baseType: !6464, size: 32)
!6470 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6467, file: !273, line: 44, baseType: !6464, size: 32)
!6471 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6454, file: !263, line: 62, baseType: !6472, size: 64)
!6472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !289, line: 49, size: 64, elements: !6473)
!6473 = !{!6474}
!6474 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6472, file: !289, line: 50, baseType: !6475, size: 64)
!6475 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6476, size: 64, elements: !294)
!6476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6472, size: 32)
!6477 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6451, file: !263, line: 68, baseType: !6478, size: 32, offset: 64)
!6478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6479, size: 32)
!6479 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !299, line: 233, baseType: !6480)
!6480 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !299, line: 231, size: 64, elements: !6481)
!6481 = !{!6482}
!6482 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6480, file: !299, line: 232, baseType: !6483, size: 64)
!6483 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !273, line: 48, baseType: !6458)
!6484 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6451, file: !263, line: 71, baseType: !208, size: 8, offset: 96)
!6485 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6451, file: !263, line: 74, baseType: !208, size: 8, offset: 104)
!6486 = !DIDerivedType(tag: DW_TAG_member, scope: !6451, file: !263, line: 90, baseType: !6487, size: 16, offset: 112)
!6487 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6451, file: !263, line: 90, size: 16, elements: !6488)
!6488 = !{!6489, !6494}
!6489 = !DIDerivedType(tag: DW_TAG_member, scope: !6487, file: !263, line: 91, baseType: !6490, size: 16)
!6490 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6487, file: !263, line: 91, size: 16, elements: !6491)
!6491 = !{!6492, !6493}
!6492 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6490, file: !263, line: 96, baseType: !313, size: 8)
!6493 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6490, file: !263, line: 97, baseType: !208, size: 8, offset: 8)
!6494 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6487, file: !263, line: 100, baseType: !151, size: 16)
!6495 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6451, file: !263, line: 107, baseType: !137, size: 32, offset: 128)
!6496 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6451, file: !263, line: 127, baseType: !102, size: 32, offset: 160)
!6497 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6451, file: !263, line: 131, baseType: !6498, size: 192, offset: 192)
!6498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !299, line: 244, size: 192, elements: !6499)
!6499 = !{!6500, !6501, !6507}
!6500 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6498, file: !299, line: 245, baseType: !6457, size: 64)
!6501 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6498, file: !299, line: 246, baseType: !6502, size: 32, offset: 64)
!6502 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !299, line: 242, baseType: !6503)
!6503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6504, size: 32)
!6504 = !DISubroutineType(types: !6505)
!6505 = !{null, !6506}
!6506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6498, size: 32)
!6507 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6498, file: !299, line: 249, baseType: !330, size: 64, offset: 128)
!6508 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6448, file: !263, line: 250, baseType: !6509, size: 288, offset: 384)
!6509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !334, line: 25, size: 288, elements: !6510)
!6510 = !{!6511, !6512, !6513, !6514, !6515, !6516, !6517, !6518, !6519}
!6511 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6509, file: !334, line: 26, baseType: !137, size: 32)
!6512 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6509, file: !334, line: 27, baseType: !137, size: 32, offset: 32)
!6513 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6509, file: !334, line: 28, baseType: !137, size: 32, offset: 64)
!6514 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6509, file: !334, line: 29, baseType: !137, size: 32, offset: 96)
!6515 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6509, file: !334, line: 30, baseType: !137, size: 32, offset: 128)
!6516 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6509, file: !334, line: 31, baseType: !137, size: 32, offset: 160)
!6517 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6509, file: !334, line: 32, baseType: !137, size: 32, offset: 192)
!6518 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6509, file: !334, line: 33, baseType: !137, size: 32, offset: 224)
!6519 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6509, file: !334, line: 34, baseType: !137, size: 32, offset: 256)
!6520 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6448, file: !263, line: 253, baseType: !102, size: 32, offset: 672)
!6521 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6448, file: !263, line: 256, baseType: !6479, size: 64, offset: 704)
!6522 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6448, file: !263, line: 294, baseType: !103, size: 32, offset: 768)
!6523 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6448, file: !263, line: 300, baseType: !6524, size: 96, offset: 800)
!6524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !263, line: 149, size: 96, elements: !6525)
!6525 = !{!6526, !6527, !6528}
!6526 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6524, file: !263, line: 153, baseType: !22, size: 32)
!6527 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6524, file: !263, line: 162, baseType: !120, size: 32, offset: 32)
!6528 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6524, file: !263, line: 168, baseType: !120, size: 32, offset: 64)
!6529 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6448, file: !263, line: 325, baseType: !6530, size: 32, offset: 896)
!6530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6531, size: 32)
!6531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !357, line: 5073, size: 160, elements: !6532)
!6532 = !{!6533, !6539, !6540}
!6533 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6531, file: !357, line: 5074, baseType: !6534, size: 96)
!6534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !6535)
!6535 = !{!6536, !6537, !6538}
!6536 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6534, file: !113, line: 57, baseType: !116, size: 32)
!6537 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6534, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!6538 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6534, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!6539 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6531, file: !357, line: 5075, baseType: !6479, size: 64, offset: 96)
!6540 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6531, file: !357, line: 5076, baseType: !6541, offset: 160)
!6541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !368, line: 43, elements: !162)
!6542 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6448, file: !263, line: 343, baseType: !6543, size: 64, offset: 928)
!6543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !334, line: 60, size: 64, elements: !6544)
!6544 = !{!6545, !6546}
!6545 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6543, file: !334, line: 63, baseType: !137, size: 32)
!6546 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6543, file: !334, line: 66, baseType: !137, size: 32, offset: 32)
!6547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6548, size: 32)
!6548 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3177, line: 44, baseType: !6549)
!6549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !1917, line: 47, size: 8, elements: !6550)
!6550 = !{!6551}
!6551 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6549, file: !1917, line: 48, baseType: !109, size: 8)
!6552 = !{!6553, !6554, !6555, !6556, !6557, !6558, !6559, !6560}
!6553 = !DILocalVariable(name: "thread", arg: 1, scope: !6443, file: !6444, line: 56, type: !6447)
!6554 = !DILocalVariable(name: "stack", arg: 2, scope: !6443, file: !6444, line: 56, type: !6547)
!6555 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6443, file: !6444, line: 57, type: !1005)
!6556 = !DILocalVariable(name: "entry", arg: 4, scope: !6443, file: !6444, line: 57, type: !3176)
!6557 = !DILocalVariable(name: "p1", arg: 5, scope: !6443, file: !6444, line: 58, type: !102)
!6558 = !DILocalVariable(name: "p2", arg: 6, scope: !6443, file: !6444, line: 58, type: !102)
!6559 = !DILocalVariable(name: "p3", arg: 7, scope: !6443, file: !6444, line: 58, type: !102)
!6560 = !DILocalVariable(name: "iframe", scope: !6443, file: !6444, line: 60, type: !2427)
!6561 = !DILocation(line: 0, scope: !6443)
!6562 = !DILocation(line: 85, column: 11, scope: !6443)
!6563 = !DILocation(line: 93, column: 10, scope: !6443)
!6564 = !DILocation(line: 98, column: 13, scope: !6443)
!6565 = !DILocation(line: 100, column: 15, scope: !6443)
!6566 = !DILocation(line: 100, column: 10, scope: !6443)
!6567 = !DILocation(line: 100, column: 13, scope: !6443)
!6568 = !DILocation(line: 101, column: 15, scope: !6443)
!6569 = !DILocation(line: 101, column: 10, scope: !6443)
!6570 = !DILocation(line: 101, column: 13, scope: !6443)
!6571 = !DILocation(line: 102, column: 15, scope: !6443)
!6572 = !DILocation(line: 102, column: 10, scope: !6443)
!6573 = !DILocation(line: 102, column: 13, scope: !6443)
!6574 = !DILocation(line: 103, column: 15, scope: !6443)
!6575 = !DILocation(line: 103, column: 10, scope: !6443)
!6576 = !DILocation(line: 103, column: 13, scope: !6443)
!6577 = !DILocation(line: 106, column: 10, scope: !6443)
!6578 = !DILocation(line: 106, column: 15, scope: !6443)
!6579 = !DILocation(line: 122, column: 29, scope: !6443)
!6580 = !DILocation(line: 122, column: 23, scope: !6443)
!6581 = !DILocation(line: 122, column: 27, scope: !6443)
!6582 = !DILocation(line: 123, column: 15, scope: !6443)
!6583 = !DILocation(line: 123, column: 23, scope: !6443)
!6584 = !DILocation(line: 143, column: 1, scope: !6443)
!6585 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !6444, file: !6444, line: 385, type: !6586, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2424, retainedNodes: !6589)
!6586 = !DISubroutineType(types: !6587)
!6587 = !{!137, !6588, !6588}
!6588 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !137)
!6589 = !{!6590, !6591, !6592, !6595}
!6590 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !6585, file: !6444, line: 385, type: !6588)
!6591 = !DILocalVariable(name: "psp", arg: 2, scope: !6585, file: !6444, line: 385, type: !6588)
!6592 = !DILocalVariable(name: "thread", scope: !6585, file: !6444, line: 388, type: !6593)
!6593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6594, size: 32)
!6594 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6448)
!6595 = !DILocalVariable(name: "guard_len", scope: !6585, file: !6444, line: 405, type: !137)
!6596 = !DILocation(line: 0, scope: !6585)
!6597 = !DILocation(line: 388, column: 34, scope: !6585)
!6598 = !DILocation(line: 390, column: 13, scope: !6599)
!6599 = distinct !DILexicalBlock(scope: !6585, file: !6444, line: 390, column: 6)
!6600 = !DILocation(line: 390, column: 6, scope: !6585)
!6601 = !DILocation(line: 438, column: 6, scope: !6602)
!6602 = distinct !DILexicalBlock(scope: !6585, file: !6444, line: 438, column: 6)
!6603 = !DILocation(line: 438, column: 6, scope: !6585)
!6604 = !DILocation(line: 442, column: 3, scope: !6605)
!6605 = distinct !DILexicalBlock(scope: !6602, file: !6444, line: 440, column: 22)
!6606 = !DILocation(line: 455, column: 1, scope: !6585)
!6607 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6444, file: !6444, line: 530, type: !6608, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2424, retainedNodes: !6610)
!6608 = !DISubroutineType(types: !6609)
!6609 = !{null, !6447, !1005, !3176}
!6610 = !{!6611, !6612, !6613}
!6611 = !DILocalVariable(name: "main_thread", arg: 1, scope: !6607, file: !6444, line: 530, type: !6447)
!6612 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !6607, file: !6444, line: 530, type: !1005)
!6613 = !DILocalVariable(name: "_main", arg: 3, scope: !6607, file: !6444, line: 531, type: !3176)
!6614 = !DILocation(line: 0, scope: !6607)
!6615 = !DILocation(line: 535, column: 11, scope: !6607)
!6616 = !DILocation(line: 560, column: 2, scope: !6607)
!6617 = !DILocation(line: 576, column: 2, scope: !6607)
!6618 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!6619 = !DILocation(line: 603, column: 2, scope: !6607)
!6620 = distinct !DISubprogram(name: "z_arm_fault", scope: !6621, file: !6621, line: 1036, type: !6622, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2467, retainedNodes: !6637)
!6621 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6622 = !DISubroutineType(types: !6623)
!6623 = !{null, !137, !137, !137, !6624}
!6624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6625, size: 32)
!6625 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !334, line: 37, baseType: !6626)
!6626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !334, line: 25, size: 288, elements: !6627)
!6627 = !{!6628, !6629, !6630, !6631, !6632, !6633, !6634, !6635, !6636}
!6628 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6626, file: !334, line: 26, baseType: !137, size: 32)
!6629 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6626, file: !334, line: 27, baseType: !137, size: 32, offset: 32)
!6630 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6626, file: !334, line: 28, baseType: !137, size: 32, offset: 64)
!6631 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6626, file: !334, line: 29, baseType: !137, size: 32, offset: 96)
!6632 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6626, file: !334, line: 30, baseType: !137, size: 32, offset: 128)
!6633 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6626, file: !334, line: 31, baseType: !137, size: 32, offset: 160)
!6634 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6626, file: !334, line: 32, baseType: !137, size: 32, offset: 192)
!6635 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6626, file: !334, line: 33, baseType: !137, size: 32, offset: 224)
!6636 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6626, file: !334, line: 34, baseType: !137, size: 32, offset: 256)
!6637 = !{!6638, !6639, !6640, !6641, !6642, !6643, !6644, !6645, !6646, !6647}
!6638 = !DILocalVariable(name: "msp", arg: 1, scope: !6620, file: !6621, line: 1036, type: !137)
!6639 = !DILocalVariable(name: "psp", arg: 2, scope: !6620, file: !6621, line: 1036, type: !137)
!6640 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6620, file: !6621, line: 1036, type: !137)
!6641 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !6620, file: !6621, line: 1037, type: !6624)
!6642 = !DILocalVariable(name: "reason", scope: !6620, file: !6621, line: 1039, type: !137)
!6643 = !DILocalVariable(name: "fault", scope: !6620, file: !6621, line: 1040, type: !103)
!6644 = !DILocalVariable(name: "recoverable", scope: !6620, file: !6621, line: 1041, type: !211)
!6645 = !DILocalVariable(name: "nested_exc", scope: !6620, file: !6621, line: 1041, type: !211)
!6646 = !DILocalVariable(name: "esf", scope: !6620, file: !6621, line: 1042, type: !2495)
!6647 = !DILocalVariable(name: "esf_copy", scope: !6620, file: !6621, line: 1047, type: !2496)
!6648 = !DILocation(line: 0, scope: !6620)
!6649 = !DILocation(line: 1040, column: 19, scope: !6620)
!6650 = !DILocation(line: 1040, column: 24, scope: !6620)
!6651 = !DILocation(line: 1041, column: 2, scope: !6620)
!6652 = !DILocation(line: 1047, column: 2, scope: !6620)
!6653 = !DILocation(line: 1047, column: 15, scope: !6620)
!6654 = !DILocalVariable(name: "key", arg: 1, scope: !6655, file: !6148, line: 84, type: !32)
!6655 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6148, file: !6148, line: 84, type: !6159, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2467, retainedNodes: !6656)
!6656 = !{!6654}
!6657 = !DILocation(line: 0, scope: !6655, inlinedAt: !6658)
!6658 = distinct !DILocation(line: 1050, column: 2, scope: !6620)
!6659 = !DILocation(line: 95, column: 2, scope: !6655, inlinedAt: !6658)
!6660 = !{i64 2069822}
!6661 = !DILocation(line: 1055, column: 9, scope: !6620)
!6662 = !DILocation(line: 1063, column: 11, scope: !6620)
!6663 = !DILocation(line: 1064, column: 6, scope: !6664)
!6664 = distinct !DILexicalBlock(scope: !6620, file: !6621, line: 1064, column: 6)
!6665 = !{i8 0, i8 2}
!6666 = !DILocation(line: 1064, column: 6, scope: !6620)
!6667 = !DILocation(line: 1070, column: 20, scope: !6620)
!6668 = !DILocation(line: 1070, column: 2, scope: !6620)
!6669 = !DILocation(line: 1089, column: 6, scope: !6670)
!6670 = distinct !DILexicalBlock(scope: !6620, file: !6621, line: 1089, column: 6)
!6671 = !DILocation(line: 0, scope: !6670)
!6672 = !DILocation(line: 1089, column: 6, scope: !6620)
!6673 = !DILocation(line: 1090, column: 28, scope: !6674)
!6674 = distinct !DILexicalBlock(scope: !6675, file: !6621, line: 1090, column: 7)
!6675 = distinct !DILexicalBlock(scope: !6670, file: !6621, line: 1089, column: 18)
!6676 = !DILocation(line: 1090, column: 44, scope: !6674)
!6677 = !DILocation(line: 1090, column: 7, scope: !6675)
!6678 = !DILocation(line: 1091, column: 24, scope: !6679)
!6679 = distinct !DILexicalBlock(scope: !6674, file: !6621, line: 1090, column: 50)
!6680 = !DILocation(line: 1092, column: 3, scope: !6679)
!6681 = !DILocation(line: 1094, column: 23, scope: !6682)
!6682 = distinct !DILexicalBlock(scope: !6670, file: !6621, line: 1093, column: 9)
!6683 = !DILocation(line: 1097, column: 2, scope: !6620)
!6684 = !DILocation(line: 1098, column: 1, scope: !6620)
!6685 = distinct !DISubprogram(name: "get_esf", scope: !6621, file: !6621, line: 894, type: !6686, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2467, retainedNodes: !6689)
!6686 = !DISubroutineType(types: !6687)
!6687 = !{!2495, !137, !137, !137, !6688}
!6688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !211, size: 32)
!6689 = !{!6690, !6691, !6692, !6693, !6694, !6695}
!6690 = !DILocalVariable(name: "msp", arg: 1, scope: !6685, file: !6621, line: 894, type: !137)
!6691 = !DILocalVariable(name: "psp", arg: 2, scope: !6685, file: !6621, line: 894, type: !137)
!6692 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6685, file: !6621, line: 894, type: !137)
!6693 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !6685, file: !6621, line: 895, type: !6688)
!6694 = !DILocalVariable(name: "alternative_state_exc", scope: !6685, file: !6621, line: 897, type: !211)
!6695 = !DILocalVariable(name: "ptr_esf", scope: !6685, file: !6621, line: 898, type: !2495)
!6696 = !DILocation(line: 0, scope: !6685)
!6697 = !DILocation(line: 900, column: 14, scope: !6685)
!6698 = !DILocation(line: 902, column: 49, scope: !6699)
!6699 = distinct !DILexicalBlock(scope: !6685, file: !6621, line: 902, column: 6)
!6700 = !DILocation(line: 902, column: 6, scope: !6685)
!6701 = !DILocation(line: 983, column: 18, scope: !6702)
!6702 = distinct !DILexicalBlock(scope: !6685, file: !6621, line: 983, column: 6)
!6703 = !DILocation(line: 991, column: 7, scope: !6704)
!6704 = distinct !DILexicalBlock(scope: !6705, file: !6621, line: 990, column: 30)
!6705 = distinct !DILexicalBlock(scope: !6685, file: !6621, line: 990, column: 6)
!6706 = !DILocation(line: 998, column: 16, scope: !6707)
!6707 = distinct !DILexicalBlock(scope: !6708, file: !6621, line: 995, column: 10)
!6708 = distinct !DILexicalBlock(scope: !6704, file: !6621, line: 991, column: 7)
!6709 = !DILocation(line: 1002, column: 2, scope: !6685)
!6710 = !DILocation(line: 1003, column: 1, scope: !6685)
!6711 = distinct !DISubprogram(name: "fault_handle", scope: !6621, file: !6621, line: 786, type: !6712, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2467, retainedNodes: !6714)
!6712 = !DISubroutineType(types: !6713)
!6713 = !{!137, !2495, !103, !6688}
!6714 = !{!6715, !6716, !6717, !6718}
!6715 = !DILocalVariable(name: "esf", arg: 1, scope: !6711, file: !6621, line: 786, type: !2495)
!6716 = !DILocalVariable(name: "fault", arg: 2, scope: !6711, file: !6621, line: 786, type: !103)
!6717 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6711, file: !6621, line: 786, type: !6688)
!6718 = !DILocalVariable(name: "reason", scope: !6711, file: !6621, line: 788, type: !137)
!6719 = !DILocation(line: 0, scope: !6711)
!6720 = !DILocation(line: 790, column: 15, scope: !6711)
!6721 = !DILocation(line: 792, column: 2, scope: !6711)
!6722 = !DILocation(line: 794, column: 12, scope: !6723)
!6723 = distinct !DILexicalBlock(scope: !6711, file: !6621, line: 792, column: 17)
!6724 = !DILocation(line: 795, column: 3, scope: !6723)
!6725 = !DILocation(line: 800, column: 12, scope: !6723)
!6726 = !DILocation(line: 801, column: 3, scope: !6723)
!6727 = !DILocation(line: 803, column: 12, scope: !6723)
!6728 = !DILocation(line: 804, column: 3, scope: !6723)
!6729 = !DILocation(line: 806, column: 12, scope: !6723)
!6730 = !DILocation(line: 807, column: 3, scope: !6723)
!6731 = !DILocation(line: 814, column: 3, scope: !6723)
!6732 = !DILocation(line: 815, column: 3, scope: !6723)
!6733 = !DILocation(line: 829, column: 2, scope: !6711)
!6734 = distinct !DISubprogram(name: "hard_fault", scope: !6621, file: !6621, line: 709, type: !6735, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2467, retainedNodes: !6737)
!6735 = !DISubroutineType(types: !6736)
!6736 = !{!137, !2495, !6688}
!6737 = !{!6738, !6739, !6740}
!6738 = !DILocalVariable(name: "esf", arg: 1, scope: !6734, file: !6621, line: 709, type: !2495)
!6739 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6734, file: !6621, line: 709, type: !6688)
!6740 = !DILocalVariable(name: "reason", scope: !6734, file: !6621, line: 711, type: !137)
!6741 = !DILocation(line: 0, scope: !6734)
!6742 = !DILocation(line: 732, column: 15, scope: !6734)
!6743 = !DILocation(line: 734, column: 12, scope: !6744)
!6744 = distinct !DILexicalBlock(scope: !6734, file: !6621, line: 734, column: 6)
!6745 = !DILocation(line: 734, column: 17, scope: !6744)
!6746 = !DILocation(line: 734, column: 41, scope: !6744)
!6747 = !DILocation(line: 734, column: 6, scope: !6734)
!6748 = !DILocation(line: 736, column: 19, scope: !6749)
!6749 = distinct !DILexicalBlock(scope: !6744, file: !6621, line: 736, column: 13)
!6750 = !DILocation(line: 736, column: 49, scope: !6749)
!6751 = !DILocation(line: 736, column: 13, scope: !6744)
!6752 = !DILocation(line: 738, column: 19, scope: !6753)
!6753 = distinct !DILexicalBlock(scope: !6749, file: !6621, line: 738, column: 13)
!6754 = !DILocation(line: 738, column: 24, scope: !6753)
!6755 = !DILocation(line: 738, column: 47, scope: !6753)
!6756 = !DILocation(line: 738, column: 13, scope: !6749)
!6757 = !DILocation(line: 740, column: 7, scope: !6758)
!6758 = distinct !DILexicalBlock(scope: !6759, file: !6621, line: 740, column: 7)
!6759 = distinct !DILexicalBlock(scope: !6753, file: !6621, line: 738, column: 53)
!6760 = !DILocation(line: 740, column: 7, scope: !6759)
!6761 = !DILocation(line: 742, column: 24, scope: !6762)
!6762 = distinct !DILexicalBlock(scope: !6758, file: !6621, line: 740, column: 38)
!6763 = !DILocation(line: 743, column: 3, scope: !6762)
!6764 = !DILocation(line: 743, column: 20, scope: !6765)
!6765 = distinct !DILexicalBlock(scope: !6758, file: !6621, line: 743, column: 14)
!6766 = !DILocation(line: 743, column: 25, scope: !6765)
!6767 = !DILocation(line: 743, column: 52, scope: !6765)
!6768 = !DILocation(line: 743, column: 14, scope: !6758)
!6769 = !DILocation(line: 744, column: 13, scope: !6770)
!6770 = distinct !DILexicalBlock(scope: !6765, file: !6621, line: 743, column: 58)
!6771 = !DILocation(line: 745, column: 3, scope: !6770)
!6772 = !DILocation(line: 745, column: 20, scope: !6773)
!6773 = distinct !DILexicalBlock(scope: !6765, file: !6621, line: 745, column: 14)
!6774 = !DILocation(line: 745, column: 25, scope: !6773)
!6775 = !DILocation(line: 745, column: 52, scope: !6773)
!6776 = !DILocation(line: 745, column: 14, scope: !6765)
!6777 = !DILocation(line: 746, column: 13, scope: !6778)
!6778 = distinct !DILexicalBlock(scope: !6773, file: !6621, line: 745, column: 58)
!6779 = !DILocation(line: 747, column: 3, scope: !6778)
!6780 = !DILocation(line: 747, column: 20, scope: !6781)
!6781 = distinct !DILexicalBlock(scope: !6773, file: !6621, line: 747, column: 14)
!6782 = !DILocation(line: 747, column: 52, scope: !6781)
!6783 = !DILocation(line: 747, column: 14, scope: !6773)
!6784 = !DILocation(line: 748, column: 13, scope: !6785)
!6785 = distinct !DILexicalBlock(scope: !6781, file: !6621, line: 747, column: 58)
!6786 = !DILocation(line: 753, column: 3, scope: !6785)
!6787 = !DILocation(line: 766, column: 2, scope: !6734)
!6788 = distinct !DISubprogram(name: "mem_manage_fault", scope: !6621, file: !6621, line: 229, type: !6712, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2467, retainedNodes: !6789)
!6789 = !{!6790, !6791, !6792, !6793, !6794, !6795, !6798}
!6790 = !DILocalVariable(name: "esf", arg: 1, scope: !6788, file: !6621, line: 229, type: !2495)
!6791 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6788, file: !6621, line: 229, type: !103)
!6792 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6788, file: !6621, line: 230, type: !6688)
!6793 = !DILocalVariable(name: "reason", scope: !6788, file: !6621, line: 232, type: !137)
!6794 = !DILocalVariable(name: "mmfar", scope: !6788, file: !6621, line: 233, type: !137)
!6795 = !DILocalVariable(name: "temp", scope: !6796, file: !6621, line: 254, type: !137)
!6796 = distinct !DILexicalBlock(scope: !6797, file: !6621, line: 244, column: 48)
!6797 = distinct !DILexicalBlock(scope: !6788, file: !6621, line: 244, column: 6)
!6798 = !DILocalVariable(name: "min_stack_ptr", scope: !6799, file: !6621, line: 309, type: !137)
!6799 = distinct !DILexicalBlock(scope: !6800, file: !6621, line: 308, column: 43)
!6800 = distinct !DILexicalBlock(scope: !6801, file: !6621, line: 308, column: 7)
!6801 = distinct !DILexicalBlock(scope: !6802, file: !6621, line: 289, column: 40)
!6802 = distinct !DILexicalBlock(scope: !6788, file: !6621, line: 288, column: 6)
!6803 = !DILocation(line: 0, scope: !6788)
!6804 = !DILocation(line: 237, column: 12, scope: !6805)
!6805 = distinct !DILexicalBlock(scope: !6788, file: !6621, line: 237, column: 6)
!6806 = !DILocation(line: 241, column: 12, scope: !6807)
!6807 = distinct !DILexicalBlock(scope: !6788, file: !6621, line: 241, column: 6)
!6808 = !DILocation(line: 244, column: 12, scope: !6797)
!6809 = !DILocation(line: 244, column: 17, scope: !6797)
!6810 = !DILocation(line: 244, column: 42, scope: !6797)
!6811 = !DILocation(line: 244, column: 6, scope: !6788)
!6812 = !DILocation(line: 254, column: 24, scope: !6796)
!6813 = !DILocation(line: 0, scope: !6796)
!6814 = !DILocation(line: 256, column: 13, scope: !6815)
!6815 = distinct !DILexicalBlock(scope: !6796, file: !6621, line: 256, column: 7)
!6816 = !DILocation(line: 256, column: 18, scope: !6815)
!6817 = !DILocation(line: 256, column: 44, scope: !6815)
!6818 = !DILocation(line: 256, column: 7, scope: !6796)
!6819 = !DILocation(line: 259, column: 24, scope: !6820)
!6820 = distinct !DILexicalBlock(scope: !6821, file: !6621, line: 259, column: 8)
!6821 = distinct !DILexicalBlock(scope: !6815, file: !6621, line: 256, column: 50)
!6822 = !DILocation(line: 259, column: 8, scope: !6821)
!6823 = !DILocation(line: 261, column: 15, scope: !6824)
!6824 = distinct !DILexicalBlock(scope: !6820, file: !6621, line: 259, column: 30)
!6825 = !DILocation(line: 262, column: 4, scope: !6824)
!6826 = !DILocation(line: 265, column: 12, scope: !6827)
!6827 = distinct !DILexicalBlock(scope: !6788, file: !6621, line: 265, column: 6)
!6828 = !DILocation(line: 269, column: 12, scope: !6829)
!6829 = distinct !DILexicalBlock(scope: !6788, file: !6621, line: 269, column: 6)
!6830 = !DILocation(line: 288, column: 12, scope: !6802)
!6831 = !DILocation(line: 288, column: 17, scope: !6802)
!6832 = !DILocation(line: 288, column: 41, scope: !6802)
!6833 = !DILocation(line: 289, column: 9, scope: !6802)
!6834 = !DILocation(line: 289, column: 14, scope: !6802)
!6835 = !DILocation(line: 288, column: 6, scope: !6788)
!6836 = !DILocation(line: 308, column: 12, scope: !6800)
!6837 = !DILocation(line: 308, column: 17, scope: !6800)
!6838 = !DILocation(line: 308, column: 7, scope: !6801)
!6839 = !DILocation(line: 310, column: 6, scope: !6799)
!6840 = !DILocation(line: 309, column: 29, scope: !6799)
!6841 = !DILocation(line: 0, scope: !6799)
!6842 = !DILocation(line: 312, column: 8, scope: !6843)
!6843 = distinct !DILexicalBlock(scope: !6799, file: !6621, line: 312, column: 8)
!6844 = !DILocation(line: 312, column: 8, scope: !6799)
!6845 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !6846, file: !6322, line: 1099, type: !137)
!6846 = distinct !DISubprogram(name: "__set_PSP", scope: !6322, file: !6322, line: 1099, type: !6411, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2467, retainedNodes: !6847)
!6847 = !{!6845}
!6848 = !DILocation(line: 0, scope: !6846, inlinedAt: !6849)
!6849 = distinct !DILocation(line: 338, column: 5, scope: !6850)
!6850 = distinct !DILexicalBlock(scope: !6843, file: !6621, line: 312, column: 23)
!6851 = !DILocation(line: 1101, column: 3, scope: !6846, inlinedAt: !6849)
!6852 = !{i64 2945187}
!6853 = !DILocation(line: 341, column: 4, scope: !6850)
!6854 = !DILocation(line: 360, column: 12, scope: !6855)
!6855 = distinct !DILexicalBlock(scope: !6788, file: !6621, line: 360, column: 6)
!6856 = !DILocation(line: 360, column: 17, scope: !6855)
!6857 = !DILocation(line: 360, column: 41, scope: !6855)
!6858 = !DILocation(line: 360, column: 6, scope: !6788)
!6859 = !DILocation(line: 361, column: 14, scope: !6860)
!6860 = distinct !DILexicalBlock(scope: !6855, file: !6621, line: 360, column: 47)
!6861 = !DILocation(line: 362, column: 2, scope: !6860)
!6862 = !DILocation(line: 366, column: 12, scope: !6788)
!6863 = !DILocation(line: 369, column: 15, scope: !6788)
!6864 = !DILocation(line: 371, column: 2, scope: !6788)
!6865 = distinct !DISubprogram(name: "bus_fault", scope: !6621, file: !6621, line: 383, type: !6866, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2467, retainedNodes: !6868)
!6866 = !DISubroutineType(types: !6867)
!6867 = !{!103, !2495, !103, !6688}
!6868 = !{!6869, !6870, !6871, !6872, !6873}
!6869 = !DILocalVariable(name: "esf", arg: 1, scope: !6865, file: !6621, line: 383, type: !2495)
!6870 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6865, file: !6621, line: 383, type: !103)
!6871 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6865, file: !6621, line: 383, type: !6688)
!6872 = !DILocalVariable(name: "reason", scope: !6865, file: !6621, line: 385, type: !137)
!6873 = !DILocalVariable(name: "bfar", scope: !6874, file: !6621, line: 405, type: !137)
!6874 = distinct !DILexicalBlock(scope: !6875, file: !6621, line: 395, column: 42)
!6875 = distinct !DILexicalBlock(scope: !6865, file: !6621, line: 395, column: 6)
!6876 = !DILocation(line: 0, scope: !6865)
!6877 = !DILocation(line: 389, column: 11, scope: !6878)
!6878 = distinct !DILexicalBlock(scope: !6865, file: !6621, line: 389, column: 6)
!6879 = !DILocation(line: 392, column: 11, scope: !6880)
!6880 = distinct !DILexicalBlock(scope: !6865, file: !6621, line: 392, column: 6)
!6881 = !DILocation(line: 395, column: 11, scope: !6875)
!6882 = !DILocation(line: 395, column: 16, scope: !6875)
!6883 = !DILocation(line: 395, column: 6, scope: !6865)
!6884 = !DILocation(line: 405, column: 3, scope: !6874)
!6885 = !DILocation(line: 0, scope: !6874)
!6886 = !DILocation(line: 407, column: 13, scope: !6887)
!6887 = distinct !DILexicalBlock(scope: !6874, file: !6621, line: 407, column: 7)
!6888 = !DILocation(line: 407, column: 18, scope: !6887)
!6889 = !DILocation(line: 407, column: 44, scope: !6887)
!6890 = !DILocation(line: 407, column: 7, scope: !6874)
!6891 = !DILocation(line: 411, column: 15, scope: !6892)
!6892 = distinct !DILexicalBlock(scope: !6893, file: !6621, line: 409, column: 30)
!6893 = distinct !DILexicalBlock(scope: !6894, file: !6621, line: 409, column: 8)
!6894 = distinct !DILexicalBlock(scope: !6887, file: !6621, line: 407, column: 50)
!6895 = !DILocation(line: 412, column: 4, scope: !6892)
!6896 = !DILocation(line: 415, column: 11, scope: !6897)
!6897 = distinct !DILexicalBlock(scope: !6865, file: !6621, line: 415, column: 6)
!6898 = !DILocation(line: 418, column: 12, scope: !6899)
!6899 = distinct !DILexicalBlock(scope: !6865, file: !6621, line: 418, column: 6)
!6900 = !DILocation(line: 418, column: 17, scope: !6899)
!6901 = !DILocation(line: 418, column: 41, scope: !6899)
!6902 = !DILocation(line: 418, column: 6, scope: !6865)
!6903 = !DILocation(line: 423, column: 18, scope: !6904)
!6904 = distinct !DILexicalBlock(scope: !6899, file: !6621, line: 423, column: 13)
!6905 = !DILocation(line: 524, column: 12, scope: !6865)
!6906 = !DILocation(line: 526, column: 15, scope: !6865)
!6907 = !DILocation(line: 528, column: 2, scope: !6865)
!6908 = distinct !DISubprogram(name: "usage_fault", scope: !6621, file: !6621, line: 539, type: !6909, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2467, retainedNodes: !6913)
!6909 = !DISubroutineType(types: !6910)
!6910 = !{!137, !6911}
!6911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6912, size: 32)
!6912 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2496)
!6913 = !{!6914, !6915}
!6914 = !DILocalVariable(name: "esf", arg: 1, scope: !6908, file: !6621, line: 539, type: !6911)
!6915 = !DILocalVariable(name: "reason", scope: !6908, file: !6621, line: 541, type: !137)
!6916 = !DILocation(line: 0, scope: !6908)
!6917 = !DILocation(line: 546, column: 12, scope: !6918)
!6918 = distinct !DILexicalBlock(scope: !6908, file: !6621, line: 546, column: 6)
!6919 = !DILocation(line: 549, column: 12, scope: !6920)
!6920 = distinct !DILexicalBlock(scope: !6908, file: !6621, line: 549, column: 6)
!6921 = !DILocation(line: 567, column: 12, scope: !6922)
!6922 = distinct !DILexicalBlock(scope: !6908, file: !6621, line: 567, column: 6)
!6923 = !DILocation(line: 570, column: 12, scope: !6924)
!6924 = distinct !DILexicalBlock(scope: !6908, file: !6621, line: 570, column: 6)
!6925 = !DILocation(line: 573, column: 12, scope: !6926)
!6926 = distinct !DILexicalBlock(scope: !6908, file: !6621, line: 573, column: 6)
!6927 = !DILocation(line: 576, column: 12, scope: !6928)
!6928 = distinct !DILexicalBlock(scope: !6908, file: !6621, line: 576, column: 6)
!6929 = !DILocation(line: 581, column: 12, scope: !6908)
!6930 = !DILocation(line: 583, column: 2, scope: !6908)
!6931 = distinct !DISubprogram(name: "debug_monitor", scope: !6621, file: !6621, line: 632, type: !6932, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2467, retainedNodes: !6934)
!6932 = !DISubroutineType(types: !6933)
!6933 = !{null, !2495, !6688}
!6934 = !{!6935, !6936}
!6935 = !DILocalVariable(name: "esf", arg: 1, scope: !6931, file: !6621, line: 632, type: !2495)
!6936 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6931, file: !6621, line: 632, type: !6688)
!6937 = !DILocation(line: 0, scope: !6931)
!6938 = !DILocation(line: 634, column: 15, scope: !6931)
!6939 = !DILocation(line: 652, column: 1, scope: !6931)
!6940 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !6621, file: !6621, line: 658, type: !6941, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2467, retainedNodes: !6943)
!6941 = !DISubroutineType(types: !6942)
!6942 = !{!211, !2495}
!6943 = !{!6944, !6945, !6946}
!6944 = !DILocalVariable(name: "esf", arg: 1, scope: !6940, file: !6621, line: 658, type: !2495)
!6945 = !DILocalVariable(name: "ret_addr", scope: !6940, file: !6621, line: 660, type: !150)
!6946 = !DILocalVariable(name: "fault_insn", scope: !6940, file: !6621, line: 686, type: !151)
!6947 = !DILocation(line: 0, scope: !6940)
!6948 = !DILocation(line: 660, column: 46, scope: !6940)
!6949 = !DILocation(line: 660, column: 23, scope: !6940)
!6950 = !DILocation(line: 682, column: 11, scope: !6940)
!6951 = !DILocation(line: 271, column: 3, scope: !6952, inlinedAt: !6953)
!6952 = distinct !DISubprogram(name: "__DSB", scope: !6322, file: !6322, line: 269, type: !2848, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2467, retainedNodes: !162)
!6953 = distinct !DILocation(line: 683, column: 2, scope: !6940)
!6954 = !{i64 2921322}
!6955 = !DILocation(line: 260, column: 3, scope: !6956, inlinedAt: !6957)
!6956 = distinct !DISubprogram(name: "__ISB", scope: !6322, file: !6322, line: 258, type: !2848, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2467, retainedNodes: !162)
!6957 = distinct !DILocation(line: 684, column: 2, scope: !6940)
!6958 = !{i64 2921039}
!6959 = !DILocation(line: 686, column: 35, scope: !6940)
!6960 = !DILocation(line: 686, column: 24, scope: !6940)
!6961 = !DILocation(line: 688, column: 11, scope: !6940)
!6962 = !DILocation(line: 271, column: 3, scope: !6952, inlinedAt: !6963)
!6963 = distinct !DILocation(line: 689, column: 2, scope: !6940)
!6964 = !DILocation(line: 260, column: 3, scope: !6956, inlinedAt: !6965)
!6965 = distinct !DILocation(line: 690, column: 2, scope: !6940)
!6966 = !DILocation(line: 693, column: 45, scope: !6967)
!6967 = distinct !DILexicalBlock(scope: !6940, file: !6621, line: 693, column: 6)
!6968 = !DILocation(line: 699, column: 1, scope: !6940)
!6969 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !6621, file: !6621, line: 1107, type: !2848, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2467, retainedNodes: !162)
!6970 = !DILocation(line: 1111, column: 11, scope: !6969)
!6971 = !DILocation(line: 1136, column: 1, scope: !6969)
!6972 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !6973, file: !6973, line: 26, type: !2848, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2538, retainedNodes: !6974)
!6973 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6974 = !{!6975}
!6975 = !DILocalVariable(name: "irq", scope: !6972, file: !6973, line: 28, type: !103)
!6976 = !DILocation(line: 0, scope: !6972)
!6977 = !DILocation(line: 30, column: 2, scope: !6978)
!6978 = distinct !DILexicalBlock(scope: !6972, file: !6973, line: 30, column: 2)
!6979 = !DILocation(line: 31, column: 3, scope: !6980)
!6980 = distinct !DILexicalBlock(scope: !6981, file: !6973, line: 30, column: 39)
!6981 = distinct !DILexicalBlock(scope: !6978, file: !6973, line: 30, column: 2)
!6982 = !DILocation(line: 30, column: 35, scope: !6981)
!6983 = !DILocation(line: 30, column: 13, scope: !6981)
!6984 = distinct !{!6984, !6977, !6985}
!6985 = !DILocation(line: 32, column: 2, scope: !6978)
!6986 = !DILocation(line: 33, column: 1, scope: !6972)
!6987 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !402, file: !402, line: 1814, type: !6356, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2538, retainedNodes: !6988)
!6988 = !{!6989, !6990}
!6989 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6987, file: !402, line: 1814, type: !637)
!6990 = !DILocalVariable(name: "priority", arg: 2, scope: !6987, file: !402, line: 1814, type: !137)
!6991 = !DILocation(line: 0, scope: !6987)
!6992 = !DILocation(line: 1816, column: 7, scope: !6987)
!6993 = !DILocation(line: 0, scope: !6994)
!6994 = distinct !DILexicalBlock(scope: !6987, file: !402, line: 1816, column: 7)
!6995 = !DILocation(line: 1824, column: 1, scope: !6987)
!6996 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !6997, file: !6997, line: 27, type: !6998, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2583, retainedNodes: !7101)
!6997 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6998 = !DISubroutineType(types: !6999)
!6999 = !{null, !7000}
!7000 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !263, line: 347, baseType: !7001)
!7001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7002, size: 32)
!7002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !263, line: 245, size: 1024, elements: !7003)
!7003 = !{!7004, !7062, !7074, !7075, !7076, !7077, !7083, !7096}
!7004 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7002, file: !263, line: 247, baseType: !7005, size: 384)
!7005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !263, line: 57, size: 384, elements: !7006)
!7006 = !{!7007, !7031, !7038, !7039, !7040, !7049, !7050, !7051}
!7007 = !DIDerivedType(tag: DW_TAG_member, scope: !7005, file: !263, line: 60, baseType: !7008, size: 64)
!7008 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7005, file: !263, line: 60, size: 64, elements: !7009)
!7009 = !{!7010, !7025}
!7010 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7008, file: !263, line: 61, baseType: !7011, size: 64)
!7011 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !273, line: 49, baseType: !7012)
!7012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !273, line: 37, size: 64, elements: !7013)
!7013 = !{!7014, !7020}
!7014 = !DIDerivedType(tag: DW_TAG_member, scope: !7012, file: !273, line: 38, baseType: !7015, size: 32)
!7015 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7012, file: !273, line: 38, size: 32, elements: !7016)
!7016 = !{!7017, !7019}
!7017 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7015, file: !273, line: 39, baseType: !7018, size: 32)
!7018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7012, size: 32)
!7019 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7015, file: !273, line: 40, baseType: !7018, size: 32)
!7020 = !DIDerivedType(tag: DW_TAG_member, scope: !7012, file: !273, line: 42, baseType: !7021, size: 32, offset: 32)
!7021 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7012, file: !273, line: 42, size: 32, elements: !7022)
!7022 = !{!7023, !7024}
!7023 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7021, file: !273, line: 43, baseType: !7018, size: 32)
!7024 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7021, file: !273, line: 44, baseType: !7018, size: 32)
!7025 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7008, file: !263, line: 62, baseType: !7026, size: 64)
!7026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !289, line: 49, size: 64, elements: !7027)
!7027 = !{!7028}
!7028 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7026, file: !289, line: 50, baseType: !7029, size: 64)
!7029 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7030, size: 64, elements: !294)
!7030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7026, size: 32)
!7031 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7005, file: !263, line: 68, baseType: !7032, size: 32, offset: 64)
!7032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7033, size: 32)
!7033 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !299, line: 233, baseType: !7034)
!7034 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !299, line: 231, size: 64, elements: !7035)
!7035 = !{!7036}
!7036 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7034, file: !299, line: 232, baseType: !7037, size: 64)
!7037 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !273, line: 48, baseType: !7012)
!7038 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7005, file: !263, line: 71, baseType: !208, size: 8, offset: 96)
!7039 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7005, file: !263, line: 74, baseType: !208, size: 8, offset: 104)
!7040 = !DIDerivedType(tag: DW_TAG_member, scope: !7005, file: !263, line: 90, baseType: !7041, size: 16, offset: 112)
!7041 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7005, file: !263, line: 90, size: 16, elements: !7042)
!7042 = !{!7043, !7048}
!7043 = !DIDerivedType(tag: DW_TAG_member, scope: !7041, file: !263, line: 91, baseType: !7044, size: 16)
!7044 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7041, file: !263, line: 91, size: 16, elements: !7045)
!7045 = !{!7046, !7047}
!7046 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7044, file: !263, line: 96, baseType: !313, size: 8)
!7047 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7044, file: !263, line: 97, baseType: !208, size: 8, offset: 8)
!7048 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7041, file: !263, line: 100, baseType: !151, size: 16)
!7049 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7005, file: !263, line: 107, baseType: !137, size: 32, offset: 128)
!7050 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7005, file: !263, line: 127, baseType: !102, size: 32, offset: 160)
!7051 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7005, file: !263, line: 131, baseType: !7052, size: 192, offset: 192)
!7052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !299, line: 244, size: 192, elements: !7053)
!7053 = !{!7054, !7055, !7061}
!7054 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7052, file: !299, line: 245, baseType: !7011, size: 64)
!7055 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7052, file: !299, line: 246, baseType: !7056, size: 32, offset: 64)
!7056 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !299, line: 242, baseType: !7057)
!7057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7058, size: 32)
!7058 = !DISubroutineType(types: !7059)
!7059 = !{null, !7060}
!7060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7052, size: 32)
!7061 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7052, file: !299, line: 249, baseType: !330, size: 64, offset: 128)
!7062 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7002, file: !263, line: 250, baseType: !7063, size: 288, offset: 384)
!7063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !334, line: 25, size: 288, elements: !7064)
!7064 = !{!7065, !7066, !7067, !7068, !7069, !7070, !7071, !7072, !7073}
!7065 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7063, file: !334, line: 26, baseType: !137, size: 32)
!7066 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7063, file: !334, line: 27, baseType: !137, size: 32, offset: 32)
!7067 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7063, file: !334, line: 28, baseType: !137, size: 32, offset: 64)
!7068 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7063, file: !334, line: 29, baseType: !137, size: 32, offset: 96)
!7069 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7063, file: !334, line: 30, baseType: !137, size: 32, offset: 128)
!7070 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7063, file: !334, line: 31, baseType: !137, size: 32, offset: 160)
!7071 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7063, file: !334, line: 32, baseType: !137, size: 32, offset: 192)
!7072 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7063, file: !334, line: 33, baseType: !137, size: 32, offset: 224)
!7073 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7063, file: !334, line: 34, baseType: !137, size: 32, offset: 256)
!7074 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7002, file: !263, line: 253, baseType: !102, size: 32, offset: 672)
!7075 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7002, file: !263, line: 256, baseType: !7033, size: 64, offset: 704)
!7076 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7002, file: !263, line: 294, baseType: !103, size: 32, offset: 768)
!7077 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7002, file: !263, line: 300, baseType: !7078, size: 96, offset: 800)
!7078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !263, line: 149, size: 96, elements: !7079)
!7079 = !{!7080, !7081, !7082}
!7080 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7078, file: !263, line: 153, baseType: !22, size: 32)
!7081 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7078, file: !263, line: 162, baseType: !120, size: 32, offset: 32)
!7082 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7078, file: !263, line: 168, baseType: !120, size: 32, offset: 64)
!7083 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7002, file: !263, line: 325, baseType: !7084, size: 32, offset: 896)
!7084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7085, size: 32)
!7085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !357, line: 5073, size: 160, elements: !7086)
!7086 = !{!7087, !7093, !7094}
!7087 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7085, file: !357, line: 5074, baseType: !7088, size: 96)
!7088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !7089)
!7089 = !{!7090, !7091, !7092}
!7090 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7088, file: !113, line: 57, baseType: !116, size: 32)
!7091 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7088, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!7092 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7088, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!7093 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7085, file: !357, line: 5075, baseType: !7033, size: 64, offset: 96)
!7094 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7085, file: !357, line: 5076, baseType: !7095, offset: 160)
!7095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !368, line: 43, elements: !162)
!7096 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7002, file: !263, line: 343, baseType: !7097, size: 64, offset: 928)
!7097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !334, line: 60, size: 64, elements: !7098)
!7098 = !{!7099, !7100}
!7099 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7097, file: !334, line: 63, baseType: !137, size: 32)
!7100 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7097, file: !334, line: 66, baseType: !137, size: 32, offset: 32)
!7101 = !{!7102}
!7102 = !DILocalVariable(name: "thread", arg: 1, scope: !6996, file: !6997, line: 27, type: !7000)
!7103 = !DILocation(line: 0, scope: !6996)
!7104 = !DILocation(line: 29, column: 6, scope: !7105)
!7105 = distinct !DILexicalBlock(scope: !6996, file: !6997, line: 29, column: 6)
!7106 = !DILocation(line: 29, column: 15, scope: !7105)
!7107 = !DILocation(line: 29, column: 6, scope: !6996)
!7108 = !DILocation(line: 1031, column: 3, scope: !7109, inlinedAt: !7112)
!7109 = distinct !DISubprogram(name: "__get_IPSR", scope: !6322, file: !6322, line: 1027, type: !135, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2583, retainedNodes: !7110)
!7110 = !{!7111}
!7111 = !DILocalVariable(name: "result", scope: !7109, file: !6322, line: 1029, type: !137)
!7112 = distinct !DILocation(line: 48, column: 10, scope: !7113, inlinedAt: !7117)
!7113 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7114, file: !7114, line: 46, type: !7115, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2583, retainedNodes: !162)
!7114 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7115 = !DISubroutineType(types: !7116)
!7116 = !{!211}
!7117 = distinct !DILocation(line: 30, column: 7, scope: !7118)
!7118 = distinct !DILexicalBlock(scope: !7119, file: !6997, line: 30, column: 7)
!7119 = distinct !DILexicalBlock(scope: !7105, file: !6997, line: 29, column: 26)
!7120 = !{i64 2910170}
!7121 = !DILocation(line: 0, scope: !7109, inlinedAt: !7112)
!7122 = !DILocation(line: 48, column: 9, scope: !7113, inlinedAt: !7117)
!7123 = !DILocation(line: 30, column: 7, scope: !7119)
!7124 = !DILocation(line: 42, column: 14, scope: !7125)
!7125 = distinct !DILexicalBlock(scope: !7118, file: !6997, line: 30, column: 25)
!7126 = !DILocation(line: 48, column: 15, scope: !7125)
!7127 = !DILocation(line: 49, column: 3, scope: !7125)
!7128 = !DILocation(line: 52, column: 2, scope: !6996)
!7129 = !DILocation(line: 53, column: 1, scope: !6996)
!7130 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !258, file: !258, line: 127, type: !2848, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !251, retainedNodes: !162)
!7131 = !DILocation(line: 134, column: 2, scope: !7130)
!7132 = !DILocation(line: 156, column: 1, scope: !7130)
!7133 = !DILocation(line: 0, scope: !257)
!7134 = !DILocation(line: 289, column: 36, scope: !7135)
!7135 = distinct !DILexicalBlock(scope: !257, file: !258, line: 285, column: 2)
!7136 = !DILocation(line: 289, column: 42, scope: !7135)
!7137 = !DILocation(line: 300, column: 36, scope: !257)
!7138 = !DILocation(line: 301, column: 35, scope: !257)
!7139 = !DILocation(line: 302, column: 37, scope: !257)
!7140 = !DILocation(line: 311, column: 2, scope: !257)
!7141 = !DILocation(line: 316, column: 1, scope: !257)
!7142 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !430, file: !430, line: 180, type: !2848, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !162)
!7143 = !DILocation(line: 188, column: 12, scope: !7142)
!7144 = !DILocation(line: 271, column: 3, scope: !7145, inlinedAt: !7146)
!7145 = distinct !DISubprogram(name: "__DSB", scope: !6322, file: !6322, line: 269, type: !2848, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !162)
!7146 = distinct !DILocation(line: 192, column: 2, scope: !7142)
!7147 = !{i64 3083209}
!7148 = !DILocation(line: 260, column: 3, scope: !7149, inlinedAt: !7150)
!7149 = distinct !DISubprogram(name: "__ISB", scope: !6322, file: !6322, line: 258, type: !2848, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !162)
!7150 = distinct !DILocation(line: 193, column: 2, scope: !7142)
!7151 = !{i64 3082926}
!7152 = !DILocation(line: 194, column: 1, scope: !7142)
!7153 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !430, file: !430, line: 199, type: !2848, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !162)
!7154 = !DILocation(line: 282, column: 3, scope: !7155, inlinedAt: !7156)
!7155 = distinct !DISubprogram(name: "__DMB", scope: !6322, file: !6322, line: 280, type: !2848, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !162)
!7156 = distinct !DILocation(line: 202, column: 2, scope: !7153)
!7157 = !{i64 3083485}
!7158 = !DILocation(line: 205, column: 12, scope: !7153)
!7159 = !DILocation(line: 206, column: 1, scope: !7153)
!7160 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !430, file: !430, line: 275, type: !7161, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7174)
!7161 = !DISubroutineType(types: !7162)
!7162 = !{null, !7163, !1692, !6588, !6588}
!7163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7164, size: 32)
!7164 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7165)
!7165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !381, line: 52, size: 96, elements: !7166)
!7166 = !{!7167, !7168, !7169}
!7167 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7165, file: !381, line: 53, baseType: !22, size: 32)
!7168 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7165, file: !381, line: 54, baseType: !120, size: 32, offset: 32)
!7169 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !7165, file: !381, line: 55, baseType: !7170, size: 32, offset: 64)
!7170 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !387, line: 151, baseType: !7171)
!7171 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !387, line: 149, size: 32, elements: !7172)
!7172 = !{!7173}
!7173 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !7171, file: !387, line: 150, baseType: !137, size: 32)
!7174 = !{!7175, !7176, !7177, !7178}
!7175 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7160, file: !430, line: 276, type: !7163)
!7176 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7160, file: !430, line: 276, type: !1692)
!7177 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !7160, file: !430, line: 277, type: !6588)
!7178 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7160, file: !430, line: 277, type: !6588)
!7179 = !DILocation(line: 0, scope: !7160)
!7180 = !DILocation(line: 279, column: 6, scope: !7181)
!7181 = distinct !DILexicalBlock(scope: !7160, file: !430, line: 279, column: 6)
!7182 = !DILocation(line: 285, column: 1, scope: !7160)
!7183 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !7184, file: !7184, line: 220, type: !7185, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7187)
!7184 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7185 = !DISubroutineType(types: !7186)
!7186 = !{!103, !7163, !1692, !6588, !6588}
!7187 = !{!7188, !7189, !7190, !7191, !7192}
!7188 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7183, file: !7184, line: 221, type: !7163)
!7189 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7183, file: !7184, line: 221, type: !1692)
!7190 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !7183, file: !7184, line: 222, type: !6588)
!7191 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7183, file: !7184, line: 223, type: !6588)
!7192 = !DILocalVariable(name: "mpu_reg_index", scope: !7183, file: !7184, line: 225, type: !103)
!7193 = !DILocation(line: 0, scope: !7183)
!7194 = !DILocation(line: 225, column: 22, scope: !7183)
!7195 = !DILocation(line: 233, column: 18, scope: !7183)
!7196 = !DILocation(line: 236, column: 23, scope: !7183)
!7197 = !DILocation(line: 236, column: 21, scope: !7183)
!7198 = !DILocation(line: 238, column: 2, scope: !7183)
!7199 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !430, file: !430, line: 105, type: !7200, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7202)
!7200 = !DISubroutineType(types: !7201)
!7201 = !{!103, !7163, !208, !208, !211}
!7202 = !{!7203, !7204, !7205, !7206, !7207, !7208}
!7203 = !DILocalVariable(name: "regions", arg: 1, scope: !7199, file: !430, line: 106, type: !7163)
!7204 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7199, file: !430, line: 106, type: !208)
!7205 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !7199, file: !430, line: 106, type: !208)
!7206 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !7199, file: !430, line: 107, type: !211)
!7207 = !DILocalVariable(name: "i", scope: !7199, file: !430, line: 109, type: !103)
!7208 = !DILocalVariable(name: "reg_index", scope: !7199, file: !430, line: 110, type: !103)
!7209 = !DILocation(line: 0, scope: !7199)
!7210 = !DILocation(line: 110, column: 18, scope: !7199)
!7211 = !DILocation(line: 112, column: 16, scope: !7212)
!7212 = distinct !DILexicalBlock(scope: !7213, file: !430, line: 112, column: 2)
!7213 = distinct !DILexicalBlock(scope: !7199, file: !430, line: 112, column: 2)
!7214 = !DILocation(line: 112, column: 2, scope: !7213)
!7215 = !DILocation(line: 113, column: 7, scope: !7216)
!7216 = distinct !DILexicalBlock(scope: !7217, file: !430, line: 113, column: 7)
!7217 = distinct !DILexicalBlock(scope: !7212, file: !430, line: 112, column: 36)
!7218 = !DILocation(line: 113, column: 18, scope: !7216)
!7219 = !DILocation(line: 113, column: 23, scope: !7216)
!7220 = !DILocation(line: 113, column: 7, scope: !7217)
!7221 = !DILocation(line: 118, column: 23, scope: !7222)
!7222 = distinct !DILexicalBlock(scope: !7217, file: !430, line: 118, column: 7)
!7223 = !DILocation(line: 119, column: 7, scope: !7222)
!7224 = !DILocation(line: 118, column: 7, scope: !7217)
!7225 = !DILocation(line: 124, column: 36, scope: !7217)
!7226 = !DILocation(line: 124, column: 15, scope: !7217)
!7227 = !DILocation(line: 126, column: 17, scope: !7228)
!7228 = distinct !DILexicalBlock(scope: !7217, file: !430, line: 126, column: 7)
!7229 = !DILocation(line: 126, column: 7, scope: !7217)
!7230 = !DILocation(line: 131, column: 12, scope: !7217)
!7231 = !DILocation(line: 132, column: 2, scope: !7217)
!7232 = !DILocation(line: 112, column: 32, scope: !7212)
!7233 = distinct !{!7233, !7214, !7234}
!7234 = !DILocation(line: 132, column: 2, scope: !7213)
!7235 = !DILocation(line: 135, column: 1, scope: !7199)
!7236 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !7184, file: !7184, line: 63, type: !7237, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7239)
!7237 = !DISubroutineType(types: !7238)
!7238 = !{!103, !7163}
!7239 = !{!7240, !7241}
!7240 = !DILocalVariable(name: "part", arg: 1, scope: !7236, file: !7184, line: 63, type: !7163)
!7241 = !DILocalVariable(name: "partition_is_valid", scope: !7236, file: !7184, line: 70, type: !103)
!7242 = !DILocation(line: 0, scope: !7236)
!7243 = !DILocation(line: 71, column: 11, scope: !7236)
!7244 = !DILocation(line: 71, column: 37, scope: !7236)
!7245 = !DILocation(line: 72, column: 3, scope: !7236)
!7246 = !DILocation(line: 71, column: 30, scope: !7236)
!7247 = !DILocation(line: 75, column: 11, scope: !7236)
!7248 = !DILocation(line: 75, column: 17, scope: !7236)
!7249 = !DILocation(line: 75, column: 38, scope: !7236)
!7250 = !DILocation(line: 77, column: 2, scope: !7236)
!7251 = distinct !DISubprogram(name: "mpu_configure_region", scope: !430, file: !430, line: 79, type: !7252, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7254)
!7252 = !DISubroutineType(types: !7253)
!7253 = !{!103, !1692, !7163}
!7254 = !{!7255, !7256, !7257}
!7255 = !DILocalVariable(name: "index", arg: 1, scope: !7251, file: !430, line: 79, type: !1692)
!7256 = !DILocalVariable(name: "new_region", arg: 2, scope: !7251, file: !430, line: 80, type: !7163)
!7257 = !DILocalVariable(name: "region_conf", scope: !7251, file: !430, line: 82, type: !419)
!7258 = !DILocation(line: 0, scope: !7251)
!7259 = !DILocation(line: 82, column: 2, scope: !7251)
!7260 = !DILocation(line: 82, column: 24, scope: !7251)
!7261 = !DILocation(line: 87, column: 33, scope: !7251)
!7262 = !DILocation(line: 87, column: 14, scope: !7251)
!7263 = !DILocation(line: 87, column: 19, scope: !7251)
!7264 = !DILocation(line: 91, column: 55, scope: !7251)
!7265 = !DILocation(line: 92, column: 16, scope: !7251)
!7266 = !DILocation(line: 92, column: 53, scope: !7251)
!7267 = !DILocation(line: 91, column: 2, scope: !7251)
!7268 = !DILocation(line: 95, column: 9, scope: !7251)
!7269 = !DILocation(line: 97, column: 1, scope: !7251)
!7270 = !DILocation(line: 95, column: 2, scope: !7251)
!7271 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !7184, file: !7184, line: 113, type: !7272, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7277)
!7272 = !DISubroutineType(types: !7273)
!7273 = !{null, !7274, !7275, !137, !137}
!7274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !425, size: 32)
!7275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7276, size: 32)
!7276 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7170)
!7277 = !{!7278, !7279, !7280, !7281}
!7278 = !DILocalVariable(name: "p_attr", arg: 1, scope: !7271, file: !7184, line: 114, type: !7274)
!7279 = !DILocalVariable(name: "attr", arg: 2, scope: !7271, file: !7184, line: 115, type: !7275)
!7280 = !DILocalVariable(name: "base", arg: 3, scope: !7271, file: !7184, line: 115, type: !137)
!7281 = !DILocalVariable(name: "size", arg: 4, scope: !7271, file: !7184, line: 115, type: !137)
!7282 = !DILocation(line: 0, scope: !7271)
!7283 = !DILocation(line: 127, column: 23, scope: !7271)
!7284 = !DILocation(line: 127, column: 35, scope: !7271)
!7285 = !DILocation(line: 127, column: 33, scope: !7271)
!7286 = !DILocation(line: 127, column: 10, scope: !7271)
!7287 = !DILocation(line: 127, column: 15, scope: !7271)
!7288 = !DILocation(line: 129, column: 1, scope: !7271)
!7289 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !430, file: !430, line: 57, type: !7290, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7292)
!7290 = !DISubroutineType(types: !7291)
!7291 = !{!103, !1692, !417}
!7292 = !{!7293, !7294}
!7293 = !DILocalVariable(name: "index", arg: 1, scope: !7289, file: !430, line: 57, type: !1692)
!7294 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7289, file: !430, line: 58, type: !417)
!7295 = !DILocation(line: 0, scope: !7289)
!7296 = !DILocation(line: 61, column: 6, scope: !7297)
!7297 = distinct !DILexicalBlock(scope: !7289, file: !430, line: 61, column: 6)
!7298 = !DILocation(line: 61, column: 12, scope: !7297)
!7299 = !DILocation(line: 61, column: 6, scope: !7289)
!7300 = !DILocation(line: 71, column: 2, scope: !7289)
!7301 = !DILocation(line: 73, column: 2, scope: !7289)
!7302 = !DILocation(line: 74, column: 1, scope: !7289)
!7303 = distinct !DISubprogram(name: "region_init", scope: !7184, file: !7184, line: 29, type: !7304, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7306)
!7304 = !DISubroutineType(types: !7305)
!7305 = !{null, !6588, !417}
!7306 = !{!7307, !7308}
!7307 = !DILocalVariable(name: "index", arg: 1, scope: !7303, file: !7184, line: 29, type: !6588)
!7308 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7303, file: !7184, line: 30, type: !417)
!7309 = !DILocation(line: 0, scope: !7303)
!7310 = !DILocation(line: 33, column: 2, scope: !7303)
!7311 = !DILocation(line: 47, column: 28, scope: !7303)
!7312 = !DILocation(line: 47, column: 33, scope: !7303)
!7313 = !DILocation(line: 48, column: 26, scope: !7303)
!7314 = !DILocation(line: 47, column: 12, scope: !7303)
!7315 = !DILocation(line: 49, column: 32, scope: !7303)
!7316 = !DILocation(line: 49, column: 37, scope: !7303)
!7317 = !DILocation(line: 49, column: 12, scope: !7303)
!7318 = !DILocation(line: 53, column: 1, scope: !7303)
!7319 = distinct !DISubprogram(name: "set_region_number", scope: !7320, file: !7320, line: 32, type: !6411, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7321)
!7320 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7321 = !{!7322}
!7322 = !DILocalVariable(name: "index", arg: 1, scope: !7319, file: !7320, line: 32, type: !137)
!7323 = !DILocation(line: 0, scope: !7319)
!7324 = !DILocation(line: 34, column: 11, scope: !7319)
!7325 = !DILocation(line: 35, column: 1, scope: !7319)
!7326 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !7184, file: !7184, line: 88, type: !7327, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7329)
!7327 = !DISubroutineType(types: !7328)
!7328 = !{!137, !137}
!7329 = !{!7330}
!7330 = !DILocalVariable(name: "size", arg: 1, scope: !7326, file: !7184, line: 88, type: !137)
!7331 = !DILocation(line: 0, scope: !7326)
!7332 = !DILocation(line: 91, column: 11, scope: !7333)
!7333 = distinct !DILexicalBlock(scope: !7326, file: !7184, line: 91, column: 6)
!7334 = !DILocation(line: 91, column: 6, scope: !7326)
!7335 = !DILocation(line: 100, column: 11, scope: !7336)
!7336 = distinct !DILexicalBlock(scope: !7326, file: !7184, line: 100, column: 6)
!7337 = !DILocation(line: 100, column: 6, scope: !7326)
!7338 = !DILocation(line: 104, column: 35, scope: !7326)
!7339 = !DILocation(line: 104, column: 16, scope: !7326)
!7340 = !DILocation(line: 104, column: 50, scope: !7326)
!7341 = !DILocation(line: 104, column: 72, scope: !7326)
!7342 = !DILocation(line: 104, column: 2, scope: !7326)
!7343 = !DILocation(line: 106, column: 1, scope: !7326)
!7344 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !430, file: !430, line: 307, type: !7345, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7347)
!7345 = !DISubroutineType(types: !7346)
!7346 = !{null, !7163, !208}
!7347 = !{!7348, !7349}
!7348 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7344, file: !430, line: 308, type: !7163)
!7349 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7344, file: !430, line: 308, type: !208)
!7350 = !DILocation(line: 0, scope: !7344)
!7351 = !DILocation(line: 310, column: 6, scope: !7352)
!7352 = distinct !DILexicalBlock(scope: !7344, file: !430, line: 310, column: 6)
!7353 = !DILocation(line: 316, column: 1, scope: !7344)
!7354 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !7184, file: !7184, line: 249, type: !7355, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7357)
!7355 = !DISubroutineType(types: !7356)
!7356 = !{!103, !7163, !208}
!7357 = !{!7358, !7359, !7360, !7361}
!7358 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7354, file: !7184, line: 250, type: !7163)
!7359 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7354, file: !7184, line: 250, type: !208)
!7360 = !DILocalVariable(name: "mpu_reg_index", scope: !7354, file: !7184, line: 252, type: !103)
!7361 = !DILocalVariable(name: "i", scope: !7362, file: !7184, line: 264, type: !103)
!7362 = distinct !DILexicalBlock(scope: !7363, file: !7184, line: 264, column: 3)
!7363 = distinct !DILexicalBlock(scope: !7364, file: !7184, line: 261, column: 32)
!7364 = distinct !DILexicalBlock(scope: !7354, file: !7184, line: 261, column: 6)
!7365 = !DILocation(line: 0, scope: !7354)
!7366 = !DILocation(line: 252, column: 22, scope: !7354)
!7367 = !DILocation(line: 258, column: 18, scope: !7354)
!7368 = !DILocation(line: 261, column: 20, scope: !7364)
!7369 = !DILocation(line: 261, column: 6, scope: !7354)
!7370 = !DILocation(line: 0, scope: !7362)
!7371 = !DILocation(line: 265, column: 4, scope: !7372)
!7372 = distinct !DILexicalBlock(scope: !7373, file: !7184, line: 264, column: 59)
!7373 = distinct !DILexicalBlock(scope: !7362, file: !7184, line: 264, column: 3)
!7374 = !DILocation(line: 264, column: 55, scope: !7373)
!7375 = !DILocation(line: 264, column: 33, scope: !7373)
!7376 = !DILocation(line: 264, column: 3, scope: !7362)
!7377 = distinct !{!7377, !7376, !7378}
!7378 = !DILocation(line: 266, column: 3, scope: !7362)
!7379 = !DILocation(line: 269, column: 2, scope: !7354)
!7380 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !7381, file: !7381, line: 218, type: !6411, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7382)
!7381 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7382 = !{!7383}
!7383 = !DILocalVariable(name: "rnr", arg: 1, scope: !7380, file: !7381, line: 218, type: !137)
!7384 = !DILocation(line: 0, scope: !7380)
!7385 = !DILocation(line: 220, column: 12, scope: !7380)
!7386 = !DILocation(line: 221, column: 13, scope: !7380)
!7387 = !DILocation(line: 222, column: 1, scope: !7380)
!7388 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !430, file: !430, line: 326, type: !7389, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7391)
!7389 = !DISubroutineType(types: !7390)
!7390 = !{!103}
!7391 = !{!7392}
!7392 = !DILocalVariable(name: "r_index", scope: !7388, file: !430, line: 328, type: !137)
!7393 = !DILocation(line: 330, column: 17, scope: !7394)
!7394 = distinct !DILexicalBlock(scope: !7388, file: !430, line: 330, column: 6)
!7395 = !DILocation(line: 330, column: 29, scope: !7394)
!7396 = !DILocation(line: 330, column: 6, scope: !7388)
!7397 = !DILocation(line: 347, column: 2, scope: !7388)
!7398 = !DILocation(line: 0, scope: !7388)
!7399 = !DILocation(line: 364, column: 29, scope: !7400)
!7400 = distinct !DILexicalBlock(scope: !7401, file: !430, line: 364, column: 2)
!7401 = distinct !DILexicalBlock(scope: !7388, file: !430, line: 364, column: 2)
!7402 = !DILocation(line: 364, column: 2, scope: !7401)
!7403 = !DILocation(line: 365, column: 25, scope: !7404)
!7404 = distinct !DILexicalBlock(scope: !7400, file: !430, line: 364, column: 66)
!7405 = !DILocation(line: 365, column: 3, scope: !7404)
!7406 = !DILocation(line: 364, column: 62, scope: !7400)
!7407 = distinct !{!7407, !7402, !7408}
!7408 = !DILocation(line: 366, column: 2, scope: !7401)
!7409 = !DILocation(line: 369, column: 23, scope: !7388)
!7410 = !DILocation(line: 369, column: 21, scope: !7388)
!7411 = !DILocation(line: 372, column: 2, scope: !7388)
!7412 = !DILocation(line: 443, column: 2, scope: !7388)
!7413 = !DILocation(line: 444, column: 1, scope: !7388)
!7414 = distinct !DISubprogram(name: "strcpy", scope: !7415, file: !7415, line: 20, type: !7416, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !7420)
!7415 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7416 = !DISubroutineType(types: !7417)
!7417 = !{!1005, !7418, !7419}
!7418 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1005)
!7419 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !199)
!7420 = !{!7421, !7422, !7423}
!7421 = !DILocalVariable(name: "d", arg: 1, scope: !7414, file: !7415, line: 20, type: !7418)
!7422 = !DILocalVariable(name: "s", arg: 2, scope: !7414, file: !7415, line: 20, type: !7419)
!7423 = !DILocalVariable(name: "dest", scope: !7414, file: !7415, line: 22, type: !1005)
!7424 = !DILocation(line: 0, scope: !7414)
!7425 = !DILocation(line: 24, column: 9, scope: !7414)
!7426 = !DILocation(line: 24, column: 12, scope: !7414)
!7427 = !DILocation(line: 24, column: 2, scope: !7414)
!7428 = !DILocation(line: 25, column: 6, scope: !7429)
!7429 = distinct !DILexicalBlock(scope: !7414, file: !7415, line: 24, column: 21)
!7430 = !DILocation(line: 26, column: 4, scope: !7429)
!7431 = !DILocation(line: 27, column: 4, scope: !7429)
!7432 = distinct !{!7432, !7427, !7433}
!7433 = !DILocation(line: 28, column: 2, scope: !7414)
!7434 = !DILocation(line: 30, column: 5, scope: !7414)
!7435 = !DILocation(line: 32, column: 2, scope: !7414)
!7436 = distinct !DISubprogram(name: "strncpy", scope: !7415, file: !7415, line: 42, type: !7437, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !7439)
!7437 = !DISubroutineType(types: !7438)
!7438 = !{!1005, !7418, !7419, !120}
!7439 = !{!7440, !7441, !7442, !7443}
!7440 = !DILocalVariable(name: "d", arg: 1, scope: !7436, file: !7415, line: 42, type: !7418)
!7441 = !DILocalVariable(name: "s", arg: 2, scope: !7436, file: !7415, line: 42, type: !7419)
!7442 = !DILocalVariable(name: "n", arg: 3, scope: !7436, file: !7415, line: 42, type: !120)
!7443 = !DILocalVariable(name: "dest", scope: !7436, file: !7415, line: 44, type: !1005)
!7444 = !DILocation(line: 0, scope: !7436)
!7445 = !DILocation(line: 46, column: 12, scope: !7436)
!7446 = !DILocation(line: 46, column: 17, scope: !7436)
!7447 = !DILocation(line: 46, column: 20, scope: !7436)
!7448 = !DILocation(line: 46, column: 23, scope: !7436)
!7449 = !DILocation(line: 46, column: 2, scope: !7436)
!7450 = !DILocation(line: 47, column: 6, scope: !7451)
!7451 = distinct !DILexicalBlock(scope: !7436, file: !7415, line: 46, column: 32)
!7452 = !DILocation(line: 48, column: 4, scope: !7451)
!7453 = !DILocation(line: 49, column: 4, scope: !7451)
!7454 = !DILocation(line: 50, column: 4, scope: !7451)
!7455 = distinct !{!7455, !7449, !7456}
!7456 = !DILocation(line: 51, column: 2, scope: !7436)
!7457 = !DILocation(line: 54, column: 6, scope: !7458)
!7458 = distinct !DILexicalBlock(scope: !7436, file: !7415, line: 53, column: 16)
!7459 = !DILocation(line: 55, column: 4, scope: !7458)
!7460 = !DILocation(line: 56, column: 4, scope: !7458)
!7461 = !DILocation(line: 53, column: 11, scope: !7436)
!7462 = !DILocation(line: 53, column: 2, scope: !7436)
!7463 = distinct !{!7463, !7462, !7464}
!7464 = !DILocation(line: 57, column: 2, scope: !7436)
!7465 = !DILocation(line: 59, column: 2, scope: !7436)
!7466 = distinct !DISubprogram(name: "strchr", scope: !7415, file: !7415, line: 69, type: !7467, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !7469)
!7467 = !DISubroutineType(types: !7468)
!7468 = !{!1005, !199, !103}
!7469 = !{!7470, !7471, !7472}
!7470 = !DILocalVariable(name: "s", arg: 1, scope: !7466, file: !7415, line: 69, type: !199)
!7471 = !DILocalVariable(name: "c", arg: 2, scope: !7466, file: !7415, line: 69, type: !103)
!7472 = !DILocalVariable(name: "tmp", scope: !7466, file: !7415, line: 71, type: !109)
!7473 = !DILocation(line: 0, scope: !7466)
!7474 = !DILocation(line: 73, column: 2, scope: !7466)
!7475 = !DILocation(line: 73, column: 10, scope: !7466)
!7476 = !DILocation(line: 73, column: 13, scope: !7466)
!7477 = !DILocation(line: 73, column: 21, scope: !7466)
!7478 = !DILocation(line: 74, column: 4, scope: !7479)
!7479 = distinct !DILexicalBlock(scope: !7466, file: !7415, line: 73, column: 38)
!7480 = distinct !{!7480, !7474, !7481}
!7481 = !DILocation(line: 75, column: 2, scope: !7466)
!7482 = !DILocation(line: 77, column: 9, scope: !7466)
!7483 = !DILocation(line: 77, column: 2, scope: !7466)
!7484 = distinct !DISubprogram(name: "strrchr", scope: !7415, file: !7415, line: 87, type: !7467, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !7485)
!7485 = !{!7486, !7487, !7488}
!7486 = !DILocalVariable(name: "s", arg: 1, scope: !7484, file: !7415, line: 87, type: !199)
!7487 = !DILocalVariable(name: "c", arg: 2, scope: !7484, file: !7415, line: 87, type: !103)
!7488 = !DILocalVariable(name: "match", scope: !7484, file: !7415, line: 89, type: !1005)
!7489 = !DILocation(line: 0, scope: !7484)
!7490 = !DILocation(line: 91, column: 2, scope: !7484)
!7491 = !DILocation(line: 92, column: 7, scope: !7492)
!7492 = distinct !DILexicalBlock(scope: !7493, file: !7415, line: 92, column: 7)
!7493 = distinct !DILexicalBlock(scope: !7484, file: !7415, line: 91, column: 5)
!7494 = !DILocation(line: 92, column: 10, scope: !7492)
!7495 = !DILocation(line: 92, column: 7, scope: !7493)
!7496 = !DILocation(line: 95, column: 13, scope: !7484)
!7497 = !DILocation(line: 95, column: 2, scope: !7493)
!7498 = distinct !{!7498, !7490, !7499}
!7499 = !DILocation(line: 95, column: 15, scope: !7484)
!7500 = !DILocation(line: 97, column: 2, scope: !7484)
!7501 = distinct !DISubprogram(name: "strlen", scope: !7415, file: !7415, line: 107, type: !7502, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !7504)
!7502 = !DISubroutineType(types: !7503)
!7503 = !{!120, !199}
!7504 = !{!7505, !7506}
!7505 = !DILocalVariable(name: "s", arg: 1, scope: !7501, file: !7415, line: 107, type: !199)
!7506 = !DILocalVariable(name: "n", scope: !7501, file: !7415, line: 109, type: !120)
!7507 = !DILocation(line: 0, scope: !7501)
!7508 = !DILocation(line: 111, column: 9, scope: !7501)
!7509 = !DILocation(line: 111, column: 12, scope: !7501)
!7510 = !DILocation(line: 111, column: 2, scope: !7501)
!7511 = !DILocation(line: 112, column: 4, scope: !7512)
!7512 = distinct !DILexicalBlock(scope: !7501, file: !7415, line: 111, column: 21)
!7513 = !DILocation(line: 113, column: 4, scope: !7512)
!7514 = distinct !{!7514, !7510, !7515}
!7515 = !DILocation(line: 114, column: 2, scope: !7501)
!7516 = !DILocation(line: 116, column: 2, scope: !7501)
!7517 = distinct !DISubprogram(name: "strnlen", scope: !7415, file: !7415, line: 126, type: !7518, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !7520)
!7518 = !DISubroutineType(types: !7519)
!7519 = !{!120, !199, !120}
!7520 = !{!7521, !7522, !7523}
!7521 = !DILocalVariable(name: "s", arg: 1, scope: !7517, file: !7415, line: 126, type: !199)
!7522 = !DILocalVariable(name: "maxlen", arg: 2, scope: !7517, file: !7415, line: 126, type: !120)
!7523 = !DILocalVariable(name: "n", scope: !7517, file: !7415, line: 128, type: !120)
!7524 = !DILocation(line: 0, scope: !7517)
!7525 = !DILocation(line: 130, column: 9, scope: !7517)
!7526 = !DILocation(line: 130, column: 12, scope: !7517)
!7527 = !DILocation(line: 130, column: 20, scope: !7517)
!7528 = !DILocation(line: 130, column: 2, scope: !7517)
!7529 = !DILocation(line: 131, column: 4, scope: !7530)
!7530 = distinct !DILexicalBlock(scope: !7517, file: !7415, line: 130, column: 35)
!7531 = !DILocation(line: 132, column: 4, scope: !7530)
!7532 = distinct !{!7532, !7528, !7533}
!7533 = !DILocation(line: 133, column: 2, scope: !7517)
!7534 = !DILocation(line: 135, column: 2, scope: !7517)
!7535 = distinct !DISubprogram(name: "strcmp", scope: !7415, file: !7415, line: 145, type: !7536, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !7538)
!7536 = !DISubroutineType(types: !7537)
!7537 = !{!103, !199, !199}
!7538 = !{!7539, !7540}
!7539 = !DILocalVariable(name: "s1", arg: 1, scope: !7535, file: !7415, line: 145, type: !199)
!7540 = !DILocalVariable(name: "s2", arg: 2, scope: !7535, file: !7415, line: 145, type: !199)
!7541 = !DILocation(line: 0, scope: !7535)
!7542 = !DILocation(line: 147, column: 10, scope: !7535)
!7543 = !DILocation(line: 147, column: 17, scope: !7535)
!7544 = !DILocation(line: 147, column: 14, scope: !7535)
!7545 = !DILocation(line: 147, column: 22, scope: !7535)
!7546 = !DILocation(line: 148, column: 5, scope: !7547)
!7547 = distinct !DILexicalBlock(scope: !7535, file: !7415, line: 147, column: 40)
!7548 = !DILocation(line: 149, column: 5, scope: !7547)
!7549 = distinct !{!7549, !7550, !7551}
!7550 = !DILocation(line: 147, column: 2, scope: !7535)
!7551 = !DILocation(line: 150, column: 2, scope: !7535)
!7552 = !DILocation(line: 152, column: 9, scope: !7535)
!7553 = !DILocation(line: 152, column: 15, scope: !7535)
!7554 = !DILocation(line: 152, column: 13, scope: !7535)
!7555 = !DILocation(line: 152, column: 2, scope: !7535)
!7556 = distinct !DISubprogram(name: "strncmp", scope: !7415, file: !7415, line: 162, type: !7557, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !7559)
!7557 = !DISubroutineType(types: !7558)
!7558 = !{!103, !199, !199, !120}
!7559 = !{!7560, !7561, !7562}
!7560 = !DILocalVariable(name: "s1", arg: 1, scope: !7556, file: !7415, line: 162, type: !199)
!7561 = !DILocalVariable(name: "s2", arg: 2, scope: !7556, file: !7415, line: 162, type: !199)
!7562 = !DILocalVariable(name: "n", arg: 3, scope: !7556, file: !7415, line: 162, type: !120)
!7563 = !DILocation(line: 0, scope: !7556)
!7564 = !DILocation(line: 164, column: 17, scope: !7556)
!7565 = !DILocation(line: 164, column: 21, scope: !7556)
!7566 = !DILocation(line: 164, column: 28, scope: !7556)
!7567 = !DILocation(line: 164, column: 25, scope: !7556)
!7568 = !DILocation(line: 164, column: 33, scope: !7556)
!7569 = !DILocation(line: 165, column: 5, scope: !7570)
!7570 = distinct !DILexicalBlock(scope: !7556, file: !7415, line: 164, column: 51)
!7571 = !DILocation(line: 166, column: 5, scope: !7570)
!7572 = !DILocation(line: 167, column: 4, scope: !7570)
!7573 = distinct !{!7573, !7574, !7575}
!7574 = !DILocation(line: 164, column: 2, scope: !7556)
!7575 = !DILocation(line: 168, column: 2, scope: !7556)
!7576 = !DILocation(line: 170, column: 25, scope: !7556)
!7577 = !DILocation(line: 170, column: 31, scope: !7556)
!7578 = !DILocation(line: 170, column: 29, scope: !7556)
!7579 = !DILocation(line: 170, column: 9, scope: !7556)
!7580 = !DILocation(line: 170, column: 2, scope: !7556)
!7581 = distinct !DISubprogram(name: "strtok_r", scope: !7415, file: !7415, line: 180, type: !7582, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !7585)
!7582 = !DISubroutineType(types: !7583)
!7583 = !{!1005, !1005, !199, !7584}
!7584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1005, size: 32)
!7585 = !{!7586, !7587, !7588, !7589, !7590}
!7586 = !DILocalVariable(name: "str", arg: 1, scope: !7581, file: !7415, line: 180, type: !1005)
!7587 = !DILocalVariable(name: "sep", arg: 2, scope: !7581, file: !7415, line: 180, type: !199)
!7588 = !DILocalVariable(name: "state", arg: 3, scope: !7581, file: !7415, line: 180, type: !7584)
!7589 = !DILocalVariable(name: "start", scope: !7581, file: !7415, line: 182, type: !1005)
!7590 = !DILocalVariable(name: "end", scope: !7581, file: !7415, line: 182, type: !1005)
!7591 = !DILocation(line: 0, scope: !7581)
!7592 = !DILocation(line: 184, column: 10, scope: !7581)
!7593 = !DILocation(line: 184, column: 22, scope: !7581)
!7594 = !DILocation(line: 187, column: 9, scope: !7581)
!7595 = !DILocation(line: 187, column: 16, scope: !7581)
!7596 = !DILocation(line: 187, column: 19, scope: !7581)
!7597 = !DILocation(line: 187, column: 2, scope: !7581)
!7598 = !DILocation(line: 188, column: 8, scope: !7599)
!7599 = distinct !DILexicalBlock(scope: !7581, file: !7415, line: 187, column: 40)
!7600 = distinct !{!7600, !7597, !7601}
!7601 = !DILocation(line: 189, column: 2, scope: !7581)
!7602 = !DILocation(line: 198, column: 9, scope: !7581)
!7603 = !DILocation(line: 198, column: 18, scope: !7581)
!7604 = !DILocation(line: 198, column: 17, scope: !7581)
!7605 = !DILocation(line: 198, column: 2, scope: !7581)
!7606 = !DILocation(line: 199, column: 6, scope: !7607)
!7607 = distinct !DILexicalBlock(scope: !7581, file: !7415, line: 198, column: 37)
!7608 = !DILocation(line: 198, column: 14, scope: !7581)
!7609 = distinct !{!7609, !7605, !7610}
!7610 = !DILocation(line: 200, column: 2, scope: !7581)
!7611 = !DILocation(line: 203, column: 8, scope: !7612)
!7612 = distinct !DILexicalBlock(scope: !7613, file: !7415, line: 202, column: 20)
!7613 = distinct !DILexicalBlock(scope: !7581, file: !7415, line: 202, column: 6)
!7614 = !DILocation(line: 204, column: 16, scope: !7612)
!7615 = !DILocation(line: 205, column: 2, scope: !7612)
!7616 = !DILocation(line: 210, column: 1, scope: !7581)
!7617 = distinct !DISubprogram(name: "strcat", scope: !7415, file: !7415, line: 212, type: !7416, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !7618)
!7618 = !{!7619, !7620}
!7619 = !DILocalVariable(name: "dest", arg: 1, scope: !7617, file: !7415, line: 212, type: !7418)
!7620 = !DILocalVariable(name: "src", arg: 2, scope: !7617, file: !7415, line: 212, type: !7419)
!7621 = !DILocation(line: 0, scope: !7617)
!7622 = !DILocation(line: 214, column: 16, scope: !7617)
!7623 = !DILocation(line: 214, column: 14, scope: !7617)
!7624 = !DILocation(line: 214, column: 2, scope: !7617)
!7625 = !DILocation(line: 215, column: 2, scope: !7617)
!7626 = distinct !DISubprogram(name: "strncat", scope: !7415, file: !7415, line: 218, type: !7437, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !7627)
!7627 = !{!7628, !7629, !7630, !7631, !7632}
!7628 = !DILocalVariable(name: "dest", arg: 1, scope: !7626, file: !7415, line: 218, type: !7418)
!7629 = !DILocalVariable(name: "src", arg: 2, scope: !7626, file: !7415, line: 218, type: !7419)
!7630 = !DILocalVariable(name: "n", arg: 3, scope: !7626, file: !7415, line: 219, type: !120)
!7631 = !DILocalVariable(name: "orig_dest", scope: !7626, file: !7415, line: 221, type: !1005)
!7632 = !DILocalVariable(name: "len", scope: !7626, file: !7415, line: 222, type: !120)
!7633 = !DILocation(line: 0, scope: !7626)
!7634 = !DILocation(line: 222, column: 15, scope: !7626)
!7635 = !DILocation(line: 224, column: 7, scope: !7626)
!7636 = !DILocation(line: 225, column: 14, scope: !7626)
!7637 = !DILocation(line: 225, column: 19, scope: !7626)
!7638 = !DILocation(line: 225, column: 11, scope: !7626)
!7639 = !DILocation(line: 225, column: 23, scope: !7626)
!7640 = !DILocation(line: 225, column: 28, scope: !7626)
!7641 = !DILocation(line: 225, column: 2, scope: !7626)
!7642 = !DILocation(line: 226, column: 17, scope: !7643)
!7643 = distinct !DILexicalBlock(scope: !7626, file: !7415, line: 225, column: 38)
!7644 = !DILocation(line: 226, column: 8, scope: !7643)
!7645 = !DILocation(line: 226, column: 11, scope: !7643)
!7646 = distinct !{!7646, !7641, !7647}
!7647 = !DILocation(line: 227, column: 2, scope: !7626)
!7648 = !DILocation(line: 228, column: 8, scope: !7626)
!7649 = !DILocation(line: 230, column: 2, scope: !7626)
!7650 = distinct !DISubprogram(name: "memcmp", scope: !7415, file: !7415, line: 239, type: !7651, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !7653)
!7651 = !DISubroutineType(types: !7652)
!7652 = !{!103, !13, !13, !120}
!7653 = !{!7654, !7655, !7656, !7657, !7658}
!7654 = !DILocalVariable(name: "m1", arg: 1, scope: !7650, file: !7415, line: 239, type: !13)
!7655 = !DILocalVariable(name: "m2", arg: 2, scope: !7650, file: !7415, line: 239, type: !13)
!7656 = !DILocalVariable(name: "n", arg: 3, scope: !7650, file: !7415, line: 239, type: !120)
!7657 = !DILocalVariable(name: "c1", scope: !7650, file: !7415, line: 241, type: !199)
!7658 = !DILocalVariable(name: "c2", scope: !7650, file: !7415, line: 242, type: !199)
!7659 = !DILocation(line: 0, scope: !7650)
!7660 = !DILocation(line: 244, column: 7, scope: !7661)
!7661 = distinct !DILexicalBlock(scope: !7650, file: !7415, line: 244, column: 6)
!7662 = !DILocation(line: 244, column: 6, scope: !7650)
!7663 = !DILocation(line: 248, column: 10, scope: !7650)
!7664 = !DILocation(line: 248, column: 14, scope: !7650)
!7665 = !DILocation(line: 248, column: 19, scope: !7650)
!7666 = !DILocation(line: 248, column: 2, scope: !7650)
!7667 = !DILocation(line: 248, column: 23, scope: !7650)
!7668 = !DILocation(line: 248, column: 30, scope: !7650)
!7669 = !DILocation(line: 248, column: 27, scope: !7650)
!7670 = !DILocation(line: 249, column: 5, scope: !7671)
!7671 = distinct !DILexicalBlock(scope: !7650, file: !7415, line: 248, column: 36)
!7672 = !DILocation(line: 250, column: 5, scope: !7671)
!7673 = distinct !{!7673, !7666, !7674}
!7674 = !DILocation(line: 251, column: 2, scope: !7650)
!7675 = !DILocation(line: 253, column: 9, scope: !7650)
!7676 = !DILocation(line: 253, column: 15, scope: !7650)
!7677 = !DILocation(line: 253, column: 13, scope: !7650)
!7678 = !DILocation(line: 253, column: 2, scope: !7650)
!7679 = !DILocation(line: 254, column: 1, scope: !7650)
!7680 = distinct !DISubprogram(name: "memmove", scope: !7415, file: !7415, line: 263, type: !7681, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !7683)
!7681 = !DISubroutineType(types: !7682)
!7682 = !{!102, !102, !13, !120}
!7683 = !{!7684, !7685, !7686, !7687, !7688}
!7684 = !DILocalVariable(name: "d", arg: 1, scope: !7680, file: !7415, line: 263, type: !102)
!7685 = !DILocalVariable(name: "s", arg: 2, scope: !7680, file: !7415, line: 263, type: !13)
!7686 = !DILocalVariable(name: "n", arg: 3, scope: !7680, file: !7415, line: 263, type: !120)
!7687 = !DILocalVariable(name: "dest", scope: !7680, file: !7415, line: 265, type: !1005)
!7688 = !DILocalVariable(name: "src", scope: !7680, file: !7415, line: 266, type: !199)
!7689 = !DILocation(line: 0, scope: !7680)
!7690 = !DILocation(line: 268, column: 21, scope: !7691)
!7691 = distinct !DILexicalBlock(scope: !7680, file: !7415, line: 268, column: 6)
!7692 = !DILocation(line: 268, column: 28, scope: !7691)
!7693 = !DILocation(line: 268, column: 6, scope: !7680)
!7694 = !DILocation(line: 280, column: 12, scope: !7695)
!7695 = distinct !DILexicalBlock(scope: !7691, file: !7415, line: 278, column: 9)
!7696 = !DILocation(line: 280, column: 3, scope: !7695)
!7697 = !DILocation(line: 275, column: 5, scope: !7698)
!7698 = distinct !DILexicalBlock(scope: !7699, file: !7415, line: 274, column: 17)
!7699 = distinct !DILexicalBlock(scope: !7691, file: !7415, line: 268, column: 33)
!7700 = !DILocation(line: 276, column: 14, scope: !7698)
!7701 = !DILocation(line: 276, column: 4, scope: !7698)
!7702 = !DILocation(line: 276, column: 12, scope: !7698)
!7703 = !DILocation(line: 274, column: 12, scope: !7699)
!7704 = !DILocation(line: 274, column: 3, scope: !7699)
!7705 = distinct !{!7705, !7704, !7706}
!7706 = !DILocation(line: 277, column: 3, scope: !7699)
!7707 = !DILocation(line: 281, column: 12, scope: !7708)
!7708 = distinct !DILexicalBlock(scope: !7695, file: !7415, line: 280, column: 17)
!7709 = !DILocation(line: 281, column: 10, scope: !7708)
!7710 = !DILocation(line: 282, column: 8, scope: !7708)
!7711 = !DILocation(line: 283, column: 7, scope: !7708)
!7712 = !DILocation(line: 284, column: 5, scope: !7708)
!7713 = distinct !{!7713, !7696, !7714}
!7714 = !DILocation(line: 285, column: 3, scope: !7695)
!7715 = !DILocation(line: 288, column: 2, scope: !7680)
!7716 = distinct !DISubprogram(name: "memcpy", scope: !7415, file: !7415, line: 298, type: !7717, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !7721)
!7717 = !DISubroutineType(types: !7718)
!7718 = !{!102, !7719, !7720, !120}
!7719 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!7720 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!7721 = !{!7722, !7723, !7724, !7725, !7726}
!7722 = !DILocalVariable(name: "d", arg: 1, scope: !7716, file: !7415, line: 298, type: !7719)
!7723 = !DILocalVariable(name: "s", arg: 2, scope: !7716, file: !7415, line: 298, type: !7720)
!7724 = !DILocalVariable(name: "n", arg: 3, scope: !7716, file: !7415, line: 298, type: !120)
!7725 = !DILocalVariable(name: "d_byte", scope: !7716, file: !7415, line: 302, type: !840)
!7726 = !DILocalVariable(name: "s_byte", scope: !7716, file: !7415, line: 303, type: !2614)
!7727 = !DILocation(line: 0, scope: !7716)
!7728 = !DILocation(line: 337, column: 11, scope: !7716)
!7729 = !DILocation(line: 337, column: 2, scope: !7716)
!7730 = !DILocation(line: 338, column: 25, scope: !7731)
!7731 = distinct !DILexicalBlock(scope: !7716, file: !7415, line: 337, column: 16)
!7732 = !DILocation(line: 338, column: 17, scope: !7731)
!7733 = !DILocation(line: 338, column: 11, scope: !7731)
!7734 = !DILocation(line: 338, column: 15, scope: !7731)
!7735 = !DILocation(line: 339, column: 4, scope: !7731)
!7736 = distinct !{!7736, !7729, !7737}
!7737 = !DILocation(line: 340, column: 2, scope: !7716)
!7738 = !DILocation(line: 342, column: 2, scope: !7716)
!7739 = distinct !DISubprogram(name: "memset", scope: !7415, file: !7415, line: 352, type: !7740, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !7742)
!7740 = !DISubroutineType(types: !7741)
!7741 = !{!102, !102, !103, !120}
!7742 = !{!7743, !7744, !7745, !7746, !7747}
!7743 = !DILocalVariable(name: "buf", arg: 1, scope: !7739, file: !7415, line: 352, type: !102)
!7744 = !DILocalVariable(name: "c", arg: 2, scope: !7739, file: !7415, line: 352, type: !103)
!7745 = !DILocalVariable(name: "n", arg: 3, scope: !7739, file: !7415, line: 352, type: !120)
!7746 = !DILocalVariable(name: "d_byte", scope: !7739, file: !7415, line: 356, type: !840)
!7747 = !DILocalVariable(name: "c_byte", scope: !7739, file: !7415, line: 357, type: !209)
!7748 = !DILocation(line: 0, scope: !7739)
!7749 = !DILocation(line: 357, column: 25, scope: !7739)
!7750 = !DILocation(line: 389, column: 11, scope: !7739)
!7751 = !DILocation(line: 389, column: 2, scope: !7739)
!7752 = !DILocation(line: 390, column: 11, scope: !7753)
!7753 = distinct !DILexicalBlock(scope: !7739, file: !7415, line: 389, column: 16)
!7754 = !DILocation(line: 390, column: 15, scope: !7753)
!7755 = !DILocation(line: 391, column: 4, scope: !7753)
!7756 = distinct !{!7756, !7751, !7757}
!7757 = !DILocation(line: 392, column: 2, scope: !7739)
!7758 = !DILocation(line: 394, column: 2, scope: !7739)
!7759 = distinct !DISubprogram(name: "memchr", scope: !7415, file: !7415, line: 404, type: !7760, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !7762)
!7760 = !DISubroutineType(types: !7761)
!7761 = !{!102, !13, !103, !120}
!7762 = !{!7763, !7764, !7765, !7766}
!7763 = !DILocalVariable(name: "s", arg: 1, scope: !7759, file: !7415, line: 404, type: !13)
!7764 = !DILocalVariable(name: "c", arg: 2, scope: !7759, file: !7415, line: 404, type: !103)
!7765 = !DILocalVariable(name: "n", arg: 3, scope: !7759, file: !7415, line: 404, type: !120)
!7766 = !DILocalVariable(name: "p", scope: !7767, file: !7415, line: 407, type: !2614)
!7767 = distinct !DILexicalBlock(scope: !7768, file: !7415, line: 406, column: 14)
!7768 = distinct !DILexicalBlock(scope: !7759, file: !7415, line: 406, column: 6)
!7769 = !DILocation(line: 0, scope: !7759)
!7770 = !DILocation(line: 406, column: 8, scope: !7768)
!7771 = !DILocation(line: 406, column: 6, scope: !7759)
!7772 = !DILocation(line: 409, column: 3, scope: !7767)
!7773 = !DILocation(line: 0, scope: !7767)
!7774 = !DILocation(line: 410, column: 8, scope: !7775)
!7775 = distinct !DILexicalBlock(scope: !7776, file: !7415, line: 410, column: 8)
!7776 = distinct !DILexicalBlock(scope: !7767, file: !7415, line: 409, column: 6)
!7777 = !DILocation(line: 410, column: 13, scope: !7775)
!7778 = !DILocation(line: 410, column: 8, scope: !7776)
!7779 = distinct !{!7779, !7772, !7780}
!7780 = !DILocation(line: 414, column: 20, scope: !7767)
!7781 = !DILocation(line: 417, column: 2, scope: !7759)
!7782 = !DILocation(line: 418, column: 1, scope: !7759)
!7783 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !440, file: !440, line: 23, type: !2996, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !433, retainedNodes: !7784)
!7784 = !{!7785}
!7785 = !DILocalVariable(name: "hook", arg: 1, scope: !7783, file: !440, line: 23, type: !128)
!7786 = !DILocation(line: 0, scope: !7783)
!7787 = !DILocation(line: 25, column: 15, scope: !7783)
!7788 = !DILocation(line: 26, column: 1, scope: !7783)
!7789 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !440, file: !440, line: 14, type: !129, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !433, retainedNodes: !7790)
!7790 = !{!7791}
!7791 = !DILocalVariable(name: "c", arg: 1, scope: !7789, file: !440, line: 14, type: !103)
!7792 = !DILocation(line: 0, scope: !7789)
!7793 = !DILocation(line: 18, column: 2, scope: !7789)
!7794 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !440, file: !440, line: 28, type: !7795, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !433, retainedNodes: !7797)
!7795 = !DISubroutineType(types: !7796)
!7796 = !{!103, !103, !436}
!7797 = !{!7798, !7799}
!7798 = !DILocalVariable(name: "c", arg: 1, scope: !7794, file: !440, line: 28, type: !103)
!7799 = !DILocalVariable(name: "stream", arg: 2, scope: !7794, file: !440, line: 28, type: !436)
!7800 = !DILocation(line: 0, scope: !7794)
!7801 = !DILocation(line: 30, column: 27, scope: !7794)
!7802 = !DILocation(line: 30, column: 50, scope: !7794)
!7803 = !DILocation(line: 30, column: 9, scope: !7794)
!7804 = !DILocation(line: 30, column: 2, scope: !7794)
!7805 = distinct !DISubprogram(name: "fputc", scope: !440, file: !440, line: 41, type: !7795, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !433, retainedNodes: !7806)
!7806 = !{!7807, !7808}
!7807 = !DILocalVariable(name: "c", arg: 1, scope: !7805, file: !440, line: 41, type: !103)
!7808 = !DILocalVariable(name: "stream", arg: 2, scope: !7805, file: !440, line: 41, type: !436)
!7809 = !DILocation(line: 0, scope: !7805)
!7810 = !DILocation(line: 43, column: 9, scope: !7805)
!7811 = !DILocation(line: 43, column: 2, scope: !7805)
!7812 = distinct !DISubprogram(name: "zephyr_fputc", scope: !7813, file: !7813, line: 72, type: !7795, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !433, retainedNodes: !7814)
!7813 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sys_heap")
!7814 = !{!7815, !7816}
!7815 = !DILocalVariable(name: "c", arg: 1, scope: !7812, file: !7813, line: 72, type: !103)
!7816 = !DILocalVariable(name: "stream", arg: 2, scope: !7812, file: !7813, line: 72, type: !436)
!7817 = !DILocation(line: 0, scope: !7812)
!7818 = !DILocation(line: 81, column: 2, scope: !7819)
!7819 = distinct !DILexicalBlock(scope: !7812, file: !7813, line: 81, column: 2)
!7820 = !{i64 2154212311}
!7821 = !DILocation(line: 82, column: 9, scope: !7812)
!7822 = !DILocation(line: 82, column: 2, scope: !7812)
!7823 = distinct !DISubprogram(name: "fputs", scope: !440, file: !440, line: 46, type: !7824, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !433, retainedNodes: !7827)
!7824 = !DISubroutineType(types: !7825)
!7825 = !{!103, !7419, !7826}
!7826 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !436)
!7827 = !{!7828, !7829, !7830, !7831}
!7828 = !DILocalVariable(name: "s", arg: 1, scope: !7823, file: !440, line: 46, type: !7419)
!7829 = !DILocalVariable(name: "stream", arg: 2, scope: !7823, file: !440, line: 46, type: !7826)
!7830 = !DILocalVariable(name: "len", scope: !7823, file: !440, line: 48, type: !103)
!7831 = !DILocalVariable(name: "ret", scope: !7823, file: !440, line: 49, type: !103)
!7832 = !DILocation(line: 0, scope: !7823)
!7833 = !DILocation(line: 48, column: 12, scope: !7823)
!7834 = !DILocation(line: 51, column: 8, scope: !7823)
!7835 = !DILocation(line: 53, column: 13, scope: !7823)
!7836 = !DILocation(line: 53, column: 9, scope: !7823)
!7837 = !DILocation(line: 53, column: 2, scope: !7823)
!7838 = distinct !DISubprogram(name: "fwrite", scope: !440, file: !440, line: 99, type: !7839, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !433, retainedNodes: !7841)
!7839 = !DISubroutineType(types: !7840)
!7840 = !{!120, !7720, !120, !120, !7826}
!7841 = !{!7842, !7843, !7844, !7845}
!7842 = !DILocalVariable(name: "ptr", arg: 1, scope: !7838, file: !440, line: 99, type: !7720)
!7843 = !DILocalVariable(name: "size", arg: 2, scope: !7838, file: !440, line: 99, type: !120)
!7844 = !DILocalVariable(name: "nitems", arg: 3, scope: !7838, file: !440, line: 99, type: !120)
!7845 = !DILocalVariable(name: "stream", arg: 4, scope: !7838, file: !440, line: 100, type: !7826)
!7846 = !DILocation(line: 0, scope: !7838)
!7847 = !DILocation(line: 102, column: 9, scope: !7838)
!7848 = !DILocation(line: 102, column: 2, scope: !7838)
!7849 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !7813, file: !7813, line: 96, type: !7839, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !433, retainedNodes: !7850)
!7850 = !{!7851, !7852, !7853, !7854}
!7851 = !DILocalVariable(name: "ptr", arg: 1, scope: !7849, file: !7813, line: 96, type: !7720)
!7852 = !DILocalVariable(name: "size", arg: 2, scope: !7849, file: !7813, line: 96, type: !120)
!7853 = !DILocalVariable(name: "nitems", arg: 3, scope: !7849, file: !7813, line: 96, type: !120)
!7854 = !DILocalVariable(name: "stream", arg: 4, scope: !7849, file: !7813, line: 96, type: !7826)
!7855 = !DILocation(line: 0, scope: !7849)
!7856 = !DILocation(line: 107, column: 2, scope: !7857)
!7857 = distinct !DILexicalBlock(scope: !7849, file: !7813, line: 107, column: 2)
!7858 = !{i64 2154212415}
!7859 = !DILocation(line: 108, column: 9, scope: !7849)
!7860 = !DILocation(line: 108, column: 2, scope: !7849)
!7861 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !440, file: !440, line: 56, type: !7839, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !433, retainedNodes: !7862)
!7862 = !{!7863, !7864, !7865, !7866, !7867, !7868, !7869, !7870}
!7863 = !DILocalVariable(name: "ptr", arg: 1, scope: !7861, file: !440, line: 56, type: !7720)
!7864 = !DILocalVariable(name: "size", arg: 2, scope: !7861, file: !440, line: 56, type: !120)
!7865 = !DILocalVariable(name: "nitems", arg: 3, scope: !7861, file: !440, line: 57, type: !120)
!7866 = !DILocalVariable(name: "stream", arg: 4, scope: !7861, file: !440, line: 57, type: !7826)
!7867 = !DILocalVariable(name: "i", scope: !7861, file: !440, line: 59, type: !120)
!7868 = !DILocalVariable(name: "j", scope: !7861, file: !440, line: 60, type: !120)
!7869 = !DILocalVariable(name: "p", scope: !7861, file: !440, line: 61, type: !2614)
!7870 = !DILabel(scope: !7861, name: "done", file: !440, line: 82)
!7871 = !DILocation(line: 0, scope: !7861)
!7872 = !DILocation(line: 63, column: 14, scope: !7873)
!7873 = distinct !DILexicalBlock(scope: !7861, file: !440, line: 63, column: 6)
!7874 = !DILocation(line: 63, column: 24, scope: !7873)
!7875 = !DILocation(line: 72, column: 3, scope: !7876)
!7876 = distinct !DILexicalBlock(scope: !7861, file: !440, line: 70, column: 5)
!7877 = !DILocation(line: 0, scope: !7876)
!7878 = !DILocation(line: 73, column: 8, scope: !7879)
!7879 = distinct !DILexicalBlock(scope: !7880, file: !440, line: 73, column: 8)
!7880 = distinct !DILexicalBlock(scope: !7876, file: !440, line: 72, column: 6)
!7881 = !DILocation(line: 73, column: 29, scope: !7879)
!7882 = !DILocation(line: 73, column: 27, scope: !7879)
!7883 = !DILocation(line: 73, column: 21, scope: !7879)
!7884 = !DILocation(line: 73, column: 33, scope: !7879)
!7885 = !DILocation(line: 73, column: 8, scope: !7880)
!7886 = !DILocation(line: 76, column: 5, scope: !7880)
!7887 = !DILocation(line: 77, column: 14, scope: !7876)
!7888 = !DILocation(line: 77, column: 3, scope: !7880)
!7889 = distinct !{!7889, !7875, !7890}
!7890 = !DILocation(line: 77, column: 17, scope: !7876)
!7891 = !DILocation(line: 79, column: 4, scope: !7876)
!7892 = !DILocation(line: 80, column: 13, scope: !7861)
!7893 = !DILocation(line: 80, column: 2, scope: !7876)
!7894 = distinct !{!7894, !7895, !7896}
!7895 = !DILocation(line: 70, column: 2, scope: !7861)
!7896 = !DILocation(line: 80, column: 16, scope: !7861)
!7897 = !DILocation(line: 82, column: 1, scope: !7861)
!7898 = !DILocation(line: 83, column: 17, scope: !7861)
!7899 = !DILocation(line: 83, column: 2, scope: !7861)
!7900 = !DILocation(line: 84, column: 1, scope: !7861)
!7901 = distinct !DISubprogram(name: "puts", scope: !440, file: !440, line: 106, type: !7902, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !433, retainedNodes: !7904)
!7902 = !DISubroutineType(types: !7903)
!7903 = !{!103, !199}
!7904 = !{!7905}
!7905 = !DILocalVariable(name: "s", arg: 1, scope: !7901, file: !440, line: 106, type: !199)
!7906 = !DILocation(line: 0, scope: !7901)
!7907 = !DILocation(line: 108, column: 6, scope: !7908)
!7908 = distinct !DILexicalBlock(scope: !7901, file: !440, line: 108, column: 6)
!7909 = !DILocation(line: 108, column: 23, scope: !7908)
!7910 = !DILocation(line: 108, column: 6, scope: !7901)
!7911 = !DILocation(line: 112, column: 9, scope: !7901)
!7912 = !DILocation(line: 112, column: 29, scope: !7901)
!7913 = !DILocation(line: 112, column: 2, scope: !7901)
!7914 = !DILocation(line: 113, column: 1, scope: !7901)
!7915 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !551, file: !551, line: 368, type: !604, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !7916)
!7916 = !{!7917}
!7917 = !DILocalVariable(name: "dev", arg: 1, scope: !7915, file: !551, line: 368, type: !580)
!7918 = !DILocation(line: 0, scope: !7915)
!7919 = !DILocation(line: 370, column: 2, scope: !7915)
!7920 = !DILocation(line: 371, column: 1, scope: !7915)
!7921 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !551, file: !551, line: 243, type: !7922, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !7924)
!7922 = !DISubroutineType(types: !7923)
!7923 = !{null, !103, !103, !580}
!7924 = !{!7925, !7926, !7927, !7928, !7930}
!7925 = !DILocalVariable(name: "min", arg: 1, scope: !7921, file: !551, line: 243, type: !103)
!7926 = !DILocalVariable(name: "max", arg: 2, scope: !7921, file: !551, line: 243, type: !103)
!7927 = !DILocalVariable(name: "dev", arg: 3, scope: !7921, file: !551, line: 243, type: !580)
!7928 = !DILocalVariable(name: "data", scope: !7921, file: !551, line: 245, type: !7929)
!7929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !584, size: 32)
!7930 = !DILocalVariable(name: "line", scope: !7921, file: !551, line: 246, type: !103)
!7931 = !DILocation(line: 0, scope: !7921)
!7932 = !DILocation(line: 245, column: 38, scope: !7921)
!7933 = !DILocation(line: 249, column: 24, scope: !7934)
!7934 = distinct !DILexicalBlock(scope: !7935, file: !551, line: 249, column: 2)
!7935 = distinct !DILexicalBlock(scope: !7921, file: !551, line: 249, column: 2)
!7936 = !DILocation(line: 249, column: 2, scope: !7935)
!7937 = !DILocation(line: 251, column: 7, scope: !7938)
!7938 = distinct !DILexicalBlock(scope: !7939, file: !551, line: 251, column: 7)
!7939 = distinct !DILexicalBlock(scope: !7934, file: !551, line: 249, column: 39)
!7940 = !DILocation(line: 251, column: 7, scope: !7939)
!7941 = !DILocation(line: 253, column: 4, scope: !7942)
!7942 = distinct !DILexicalBlock(scope: !7938, file: !551, line: 251, column: 36)
!7943 = !DILocation(line: 256, column: 24, scope: !7944)
!7944 = distinct !DILexicalBlock(scope: !7942, file: !551, line: 256, column: 8)
!7945 = !DILocation(line: 256, column: 9, scope: !7944)
!7946 = !DILocation(line: 256, column: 8, scope: !7942)
!7947 = !DILocation(line: 260, column: 43, scope: !7942)
!7948 = !DILocation(line: 260, column: 4, scope: !7942)
!7949 = !DILocation(line: 261, column: 3, scope: !7942)
!7950 = !DILocation(line: 249, column: 35, scope: !7934)
!7951 = distinct !{!7951, !7936, !7952}
!7952 = !DILocation(line: 262, column: 2, scope: !7935)
!7953 = !DILocation(line: 263, column: 1, scope: !7921)
!7954 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !551, file: !551, line: 158, type: !129, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !7955)
!7955 = !{!7956}
!7956 = !DILocalVariable(name: "line", arg: 1, scope: !7954, file: !551, line: 158, type: !103)
!7957 = !DILocation(line: 0, scope: !7954)
!7958 = !DILocation(line: 170, column: 38, scope: !7959)
!7959 = distinct !DILexicalBlock(scope: !7960, file: !551, line: 160, column: 17)
!7960 = distinct !DILexicalBlock(scope: !7954, file: !551, line: 160, column: 6)
!7961 = !DILocation(line: 170, column: 10, scope: !7959)
!7962 = !DILocation(line: 176, column: 1, scope: !7954)
!7963 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !551, file: !551, line: 183, type: !7964, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !7966)
!7964 = !DISubroutineType(types: !7965)
!7965 = !{null, !103}
!7966 = !{!7967}
!7967 = !DILocalVariable(name: "line", arg: 1, scope: !7963, file: !551, line: 183, type: !103)
!7968 = !DILocation(line: 0, scope: !7963)
!7969 = !DILocation(line: 195, column: 28, scope: !7970)
!7970 = distinct !DILexicalBlock(scope: !7971, file: !551, line: 185, column: 17)
!7971 = distinct !DILexicalBlock(scope: !7963, file: !551, line: 185, column: 6)
!7972 = !DILocation(line: 195, column: 3, scope: !7970)
!7973 = !DILocation(line: 200, column: 1, scope: !7963)
!7974 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !7975, file: !7975, line: 910, type: !6411, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !7976)
!7975 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7976 = !{!7977}
!7977 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7974, file: !7975, line: 910, type: !137)
!7978 = !DILocation(line: 0, scope: !7974)
!7979 = !DILocation(line: 912, column: 3, scope: !7974)
!7980 = !DILocation(line: 913, column: 1, scope: !7974)
!7981 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !7975, file: !7975, line: 834, type: !7327, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !7982)
!7982 = !{!7983}
!7983 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7981, file: !7975, line: 834, type: !137)
!7984 = !DILocation(line: 0, scope: !7981)
!7985 = !DILocation(line: 836, column: 11, scope: !7981)
!7986 = !DILocation(line: 836, column: 40, scope: !7981)
!7987 = !DILocation(line: 836, column: 3, scope: !7981)
!7988 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !551, file: !551, line: 304, type: !604, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !7989)
!7989 = !{!7990}
!7990 = !DILocalVariable(name: "dev", arg: 1, scope: !7988, file: !551, line: 304, type: !580)
!7991 = !DILocation(line: 0, scope: !7988)
!7992 = !DILocation(line: 306, column: 2, scope: !7988)
!7993 = !DILocation(line: 307, column: 1, scope: !7988)
!7994 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !551, file: !551, line: 299, type: !604, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !7995)
!7995 = !{!7996}
!7996 = !DILocalVariable(name: "dev", arg: 1, scope: !7994, file: !551, line: 299, type: !580)
!7997 = !DILocation(line: 0, scope: !7994)
!7998 = !DILocation(line: 301, column: 2, scope: !7994)
!7999 = !DILocation(line: 302, column: 1, scope: !7994)
!8000 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !551, file: !551, line: 294, type: !604, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8001)
!8001 = !{!8002}
!8002 = !DILocalVariable(name: "dev", arg: 1, scope: !8000, file: !551, line: 294, type: !580)
!8003 = !DILocation(line: 0, scope: !8000)
!8004 = !DILocation(line: 296, column: 2, scope: !8000)
!8005 = !DILocation(line: 297, column: 1, scope: !8000)
!8006 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !551, file: !551, line: 397, type: !604, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8007)
!8007 = !{!8008}
!8008 = !DILocalVariable(name: "dev", arg: 1, scope: !8006, file: !551, line: 397, type: !580)
!8009 = !DILocation(line: 0, scope: !8006)
!8010 = !DILocation(line: 399, column: 2, scope: !8006)
!8011 = !DILocation(line: 400, column: 1, scope: !8006)
!8012 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !551, file: !551, line: 392, type: !604, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8013)
!8013 = !{!8014}
!8014 = !DILocalVariable(name: "dev", arg: 1, scope: !8012, file: !551, line: 392, type: !580)
!8015 = !DILocation(line: 0, scope: !8012)
!8016 = !DILocation(line: 394, column: 2, scope: !8012)
!8017 = !DILocation(line: 395, column: 1, scope: !8012)
!8018 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !551, file: !551, line: 289, type: !604, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8019)
!8019 = !{!8020}
!8020 = !DILocalVariable(name: "dev", arg: 1, scope: !8018, file: !551, line: 289, type: !580)
!8021 = !DILocation(line: 0, scope: !8018)
!8022 = !DILocation(line: 291, column: 2, scope: !8018)
!8023 = !DILocation(line: 292, column: 1, scope: !8018)
!8024 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !551, file: !551, line: 387, type: !604, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8025)
!8025 = !{!8026}
!8026 = !DILocalVariable(name: "dev", arg: 1, scope: !8024, file: !551, line: 387, type: !580)
!8027 = !DILocation(line: 0, scope: !8024)
!8028 = !DILocation(line: 389, column: 2, scope: !8024)
!8029 = !DILocation(line: 390, column: 1, scope: !8024)
!8030 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !551, file: !551, line: 382, type: !604, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8031)
!8031 = !{!8032}
!8032 = !DILocalVariable(name: "dev", arg: 1, scope: !8030, file: !551, line: 382, type: !580)
!8033 = !DILocation(line: 0, scope: !8030)
!8034 = !DILocation(line: 384, column: 2, scope: !8030)
!8035 = !DILocation(line: 385, column: 1, scope: !8030)
!8036 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !551, file: !551, line: 373, type: !604, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8037)
!8037 = !{!8038}
!8038 = !DILocalVariable(name: "dev", arg: 1, scope: !8036, file: !551, line: 373, type: !580)
!8039 = !DILocation(line: 0, scope: !8036)
!8040 = !DILocation(line: 375, column: 2, scope: !8036)
!8041 = !DILocation(line: 376, column: 1, scope: !8036)
!8042 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !551, file: !551, line: 284, type: !604, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8043)
!8043 = !{!8044}
!8044 = !DILocalVariable(name: "dev", arg: 1, scope: !8042, file: !551, line: 284, type: !580)
!8045 = !DILocation(line: 0, scope: !8042)
!8046 = !DILocation(line: 286, column: 2, scope: !8042)
!8047 = !DILocation(line: 287, column: 1, scope: !8042)
!8048 = distinct !DISubprogram(name: "stm32_exti_init", scope: !551, file: !551, line: 416, type: !578, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8049)
!8049 = !{!8050}
!8050 = !DILocalVariable(name: "dev", arg: 1, scope: !8048, file: !551, line: 416, type: !580)
!8051 = !DILocation(line: 0, scope: !8048)
!8052 = !DILocation(line: 418, column: 2, scope: !8048)
!8053 = !DILocation(line: 420, column: 2, scope: !8048)
!8054 = !DILocation(line: 0, scope: !603)
!8055 = !DILocation(line: 493, column: 2, scope: !8056)
!8056 = distinct !DILexicalBlock(scope: !603, file: !551, line: 493, column: 2)
!8057 = !DILocation(line: 497, column: 2, scope: !8058)
!8058 = distinct !DILexicalBlock(scope: !603, file: !551, line: 497, column: 2)
!8059 = !DILocation(line: 507, column: 2, scope: !8060)
!8060 = distinct !DILexicalBlock(scope: !603, file: !551, line: 507, column: 2)
!8061 = !DILocation(line: 512, column: 2, scope: !8062)
!8062 = distinct !DILexicalBlock(scope: !603, file: !551, line: 512, column: 2)
!8063 = !DILocation(line: 516, column: 2, scope: !8064)
!8064 = distinct !DILexicalBlock(scope: !603, file: !551, line: 516, column: 2)
!8065 = !DILocation(line: 523, column: 2, scope: !8066)
!8066 = distinct !DILexicalBlock(scope: !603, file: !551, line: 523, column: 2)
!8067 = !DILocation(line: 527, column: 2, scope: !8068)
!8068 = distinct !DILexicalBlock(scope: !603, file: !551, line: 527, column: 2)
!8069 = !DILocation(line: 581, column: 2, scope: !8070)
!8070 = distinct !DILexicalBlock(scope: !603, file: !551, line: 581, column: 2)
!8071 = !DILocation(line: 586, column: 2, scope: !8072)
!8072 = distinct !DILexicalBlock(scope: !603, file: !551, line: 586, column: 2)
!8073 = !DILocation(line: 591, column: 2, scope: !8074)
!8074 = distinct !DILexicalBlock(scope: !603, file: !551, line: 591, column: 2)
!8075 = !DILocation(line: 595, column: 2, scope: !8076)
!8076 = distinct !DILexicalBlock(scope: !603, file: !551, line: 595, column: 2)
!8077 = !DILocation(line: 607, column: 1, scope: !603)
!8078 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !551, file: !551, line: 112, type: !7964, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8079)
!8079 = !{!8080, !8081}
!8080 = !DILocalVariable(name: "line", arg: 1, scope: !8078, file: !551, line: 112, type: !103)
!8081 = !DILocalVariable(name: "irqnum", scope: !8078, file: !551, line: 114, type: !103)
!8082 = !DILocation(line: 0, scope: !8078)
!8083 = !DILocation(line: 121, column: 11, scope: !8078)
!8084 = !DILocation(line: 130, column: 26, scope: !8078)
!8085 = !DILocation(line: 130, column: 2, scope: !8078)
!8086 = !DILocation(line: 134, column: 2, scope: !8078)
!8087 = !DILocation(line: 135, column: 1, scope: !8078)
!8088 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !7975, file: !7975, line: 268, type: !6411, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8089)
!8089 = !{!8090}
!8090 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8088, file: !7975, line: 268, type: !137)
!8091 = !DILocation(line: 0, scope: !8088)
!8092 = !DILocation(line: 270, column: 3, scope: !8088)
!8093 = !DILocation(line: 271, column: 1, scope: !8088)
!8094 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !551, file: !551, line: 137, type: !7964, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8095)
!8095 = !{!8096}
!8096 = !DILocalVariable(name: "line", arg: 1, scope: !8094, file: !551, line: 137, type: !103)
!8097 = !DILocation(line: 0, scope: !8094)
!8098 = !DILocation(line: 141, column: 11, scope: !8099)
!8099 = distinct !DILexicalBlock(scope: !8094, file: !551, line: 141, column: 6)
!8100 = !DILocation(line: 141, column: 6, scope: !8094)
!8101 = !DILocation(line: 145, column: 28, scope: !8102)
!8102 = distinct !DILexicalBlock(scope: !8099, file: !551, line: 141, column: 17)
!8103 = !DILocation(line: 145, column: 3, scope: !8102)
!8104 = !DILocation(line: 147, column: 2, scope: !8102)
!8105 = !DILocation(line: 151, column: 1, scope: !8094)
!8106 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !7975, file: !7975, line: 309, type: !6411, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8107)
!8107 = !{!8108}
!8108 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8106, file: !7975, line: 309, type: !137)
!8109 = !DILocation(line: 0, scope: !8106)
!8110 = !DILocation(line: 311, column: 3, scope: !8106)
!8111 = !DILocation(line: 312, column: 1, scope: !8106)
!8112 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !551, file: !551, line: 202, type: !8113, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8115)
!8113 = !DISubroutineType(types: !8114)
!8114 = !{null, !103, !103}
!8115 = !{!8116, !8117}
!8116 = !DILocalVariable(name: "line", arg: 1, scope: !8112, file: !551, line: 202, type: !103)
!8117 = !DILocalVariable(name: "trigger", arg: 2, scope: !8112, file: !551, line: 202, type: !103)
!8118 = !DILocation(line: 0, scope: !8112)
!8119 = !DILocation(line: 211, column: 2, scope: !8112)
!8120 = !DILocation(line: 213, column: 36, scope: !8121)
!8121 = distinct !DILexicalBlock(scope: !8112, file: !551, line: 211, column: 19)
!8122 = !DILocation(line: 213, column: 3, scope: !8121)
!8123 = !DILocation(line: 214, column: 3, scope: !8121)
!8124 = !DILocation(line: 215, column: 3, scope: !8121)
!8125 = !DILocation(line: 217, column: 35, scope: !8121)
!8126 = !DILocation(line: 217, column: 3, scope: !8121)
!8127 = !DILocation(line: 218, column: 3, scope: !8121)
!8128 = !DILocation(line: 219, column: 3, scope: !8121)
!8129 = !DILocation(line: 221, column: 36, scope: !8121)
!8130 = !DILocation(line: 221, column: 3, scope: !8121)
!8131 = !DILocation(line: 222, column: 3, scope: !8121)
!8132 = !DILocation(line: 223, column: 3, scope: !8121)
!8133 = !DILocation(line: 225, column: 35, scope: !8121)
!8134 = !DILocation(line: 225, column: 3, scope: !8121)
!8135 = !DILocation(line: 226, column: 3, scope: !8121)
!8136 = !DILocation(line: 227, column: 3, scope: !8121)
!8137 = !DILocation(line: 232, column: 1, scope: !8112)
!8138 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !7975, file: !7975, line: 573, type: !6411, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8139)
!8139 = !{!8140}
!8140 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8138, file: !7975, line: 573, type: !137)
!8141 = !DILocation(line: 0, scope: !8138)
!8142 = !DILocation(line: 575, column: 3, scope: !8138)
!8143 = !DILocation(line: 577, column: 1, scope: !8138)
!8144 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !7975, file: !7975, line: 703, type: !6411, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8145)
!8145 = !{!8146}
!8146 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8144, file: !7975, line: 703, type: !137)
!8147 = !DILocation(line: 0, scope: !8144)
!8148 = !DILocation(line: 705, column: 3, scope: !8144)
!8149 = !DILocation(line: 706, column: 1, scope: !8144)
!8150 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !7975, file: !7975, line: 529, type: !6411, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8151)
!8151 = !{!8152}
!8152 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8150, file: !7975, line: 529, type: !137)
!8153 = !DILocation(line: 0, scope: !8150)
!8154 = !DILocation(line: 531, column: 3, scope: !8150)
!8155 = !DILocation(line: 533, column: 1, scope: !8150)
!8156 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !7975, file: !7975, line: 661, type: !6411, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8157)
!8157 = !{!8158}
!8158 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8156, file: !7975, line: 661, type: !137)
!8159 = !DILocation(line: 0, scope: !8156)
!8160 = !DILocation(line: 663, column: 3, scope: !8156)
!8161 = !DILocation(line: 664, column: 1, scope: !8156)
!8162 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !551, file: !551, line: 433, type: !8163, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8165)
!8163 = !DISubroutineType(types: !8164)
!8164 = !{!103, !103, !591, !102}
!8165 = !{!8166, !8167, !8168, !8169, !8171}
!8166 = !DILocalVariable(name: "line", arg: 1, scope: !8162, file: !551, line: 433, type: !103)
!8167 = !DILocalVariable(name: "cb", arg: 2, scope: !8162, file: !551, line: 433, type: !591)
!8168 = !DILocalVariable(name: "arg", arg: 3, scope: !8162, file: !551, line: 433, type: !102)
!8169 = !DILocalVariable(name: "dev", scope: !8162, file: !551, line: 435, type: !8170)
!8170 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !580)
!8171 = !DILocalVariable(name: "data", scope: !8162, file: !551, line: 436, type: !7929)
!8172 = !DILocation(line: 0, scope: !8162)
!8173 = !DILocation(line: 438, column: 21, scope: !8174)
!8174 = distinct !DILexicalBlock(scope: !8162, file: !551, line: 438, column: 6)
!8175 = !DILocation(line: 438, column: 6, scope: !8174)
!8176 = !DILocation(line: 438, column: 6, scope: !8162)
!8177 = !DILocation(line: 442, column: 20, scope: !8162)
!8178 = !DILocation(line: 443, column: 17, scope: !8162)
!8179 = !DILocation(line: 443, column: 22, scope: !8162)
!8180 = !DILocation(line: 445, column: 2, scope: !8162)
!8181 = !DILocation(line: 446, column: 1, scope: !8162)
!8182 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !551, file: !551, line: 448, type: !7964, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8183)
!8183 = !{!8184, !8185, !8186}
!8184 = !DILocalVariable(name: "line", arg: 1, scope: !8182, file: !551, line: 448, type: !103)
!8185 = !DILocalVariable(name: "dev", scope: !8182, file: !551, line: 450, type: !8170)
!8186 = !DILocalVariable(name: "data", scope: !8182, file: !551, line: 451, type: !7929)
!8187 = !DILocation(line: 0, scope: !8182)
!8188 = !DILocation(line: 453, column: 17, scope: !8182)
!8189 = !DILocation(line: 453, column: 20, scope: !8182)
!8190 = !DILocation(line: 454, column: 17, scope: !8182)
!8191 = !DILocation(line: 454, column: 22, scope: !8182)
!8192 = !DILocation(line: 455, column: 1, scope: !8182)
!8193 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !739, file: !739, line: 183, type: !777, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !676, retainedNodes: !8194)
!8194 = !{!8195, !8196, !8197, !8198, !8199}
!8195 = !DILocalVariable(name: "dev", arg: 1, scope: !8193, file: !739, line: 183, type: !768)
!8196 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8193, file: !739, line: 184, type: !779)
!8197 = !DILocalVariable(name: "pclken", scope: !8193, file: !739, line: 186, type: !730)
!8198 = !DILocalVariable(name: "reg", scope: !8193, file: !739, line: 187, type: !1321)
!8199 = !DILocalVariable(name: "reg_val", scope: !8193, file: !739, line: 188, type: !137)
!8200 = !DILocation(line: 0, scope: !8193)
!8201 = !DILocation(line: 192, column: 6, scope: !8202)
!8202 = distinct !DILexicalBlock(scope: !8193, file: !739, line: 192, column: 6)
!8203 = !DILocation(line: 192, column: 6, scope: !8193)
!8204 = !DILocation(line: 197, column: 52, scope: !8193)
!8205 = !DILocation(line: 197, column: 8, scope: !8193)
!8206 = !DILocation(line: 198, column: 12, scope: !8193)
!8207 = !DILocation(line: 199, column: 21, scope: !8193)
!8208 = !DILocation(line: 199, column: 10, scope: !8193)
!8209 = !DILocation(line: 200, column: 7, scope: !8193)
!8210 = !DILocation(line: 202, column: 2, scope: !8193)
!8211 = !DILocation(line: 203, column: 1, scope: !8193)
!8212 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !739, file: !739, line: 205, type: !777, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !676, retainedNodes: !8213)
!8213 = !{!8214, !8215, !8216, !8217, !8218}
!8214 = !DILocalVariable(name: "dev", arg: 1, scope: !8212, file: !739, line: 205, type: !768)
!8215 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8212, file: !739, line: 206, type: !779)
!8216 = !DILocalVariable(name: "pclken", scope: !8212, file: !739, line: 208, type: !730)
!8217 = !DILocalVariable(name: "reg", scope: !8212, file: !739, line: 209, type: !1321)
!8218 = !DILocalVariable(name: "reg_val", scope: !8212, file: !739, line: 210, type: !137)
!8219 = !DILocation(line: 0, scope: !8212)
!8220 = !DILocation(line: 214, column: 6, scope: !8221)
!8221 = distinct !DILexicalBlock(scope: !8212, file: !739, line: 214, column: 6)
!8222 = !DILocation(line: 214, column: 6, scope: !8212)
!8223 = !DILocation(line: 219, column: 52, scope: !8212)
!8224 = !DILocation(line: 219, column: 8, scope: !8212)
!8225 = !DILocation(line: 220, column: 12, scope: !8212)
!8226 = !DILocation(line: 221, column: 22, scope: !8212)
!8227 = !DILocation(line: 221, column: 13, scope: !8212)
!8228 = !DILocation(line: 221, column: 10, scope: !8212)
!8229 = !DILocation(line: 222, column: 7, scope: !8212)
!8230 = !DILocation(line: 224, column: 2, scope: !8212)
!8231 = !DILocation(line: 225, column: 1, scope: !8212)
!8232 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !739, file: !739, line: 262, type: !793, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !676, retainedNodes: !8233)
!8233 = !{!8234, !8235, !8236, !8237, !8238, !8239, !8240, !8241}
!8234 = !DILocalVariable(name: "clock", arg: 1, scope: !8232, file: !739, line: 262, type: !768)
!8235 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8232, file: !739, line: 263, type: !779)
!8236 = !DILocalVariable(name: "rate", arg: 3, scope: !8232, file: !739, line: 264, type: !149)
!8237 = !DILocalVariable(name: "pclken", scope: !8232, file: !739, line: 266, type: !730)
!8238 = !DILocalVariable(name: "ahb_clock", scope: !8232, file: !739, line: 273, type: !137)
!8239 = !DILocalVariable(name: "apb1_clock", scope: !8232, file: !739, line: 274, type: !137)
!8240 = !DILocalVariable(name: "apb2_clock", scope: !8232, file: !739, line: 276, type: !137)
!8241 = !DILocalVariable(name: "ahb3_clock", scope: !8232, file: !739, line: 286, type: !137)
!8242 = !DILocation(line: 0, scope: !8232)
!8243 = !DILocation(line: 273, column: 23, scope: !8232)
!8244 = !DILocation(line: 299, column: 18, scope: !8232)
!8245 = !DILocation(line: 299, column: 2, scope: !8232)
!8246 = !DILocation(line: 274, column: 24, scope: !8232)
!8247 = !DILocation(line: 319, column: 3, scope: !8248)
!8248 = distinct !DILexicalBlock(scope: !8232, file: !739, line: 299, column: 23)
!8249 = !DILocation(line: 276, column: 24, scope: !8232)
!8250 = !DILocation(line: 323, column: 3, scope: !8248)
!8251 = !DILocation(line: 346, column: 33, scope: !8248)
!8252 = !DILocation(line: 346, column: 11, scope: !8248)
!8253 = !DILocation(line: 350, column: 3, scope: !8248)
!8254 = !DILocation(line: 354, column: 33, scope: !8248)
!8255 = !DILocation(line: 354, column: 11, scope: !8248)
!8256 = !DILocation(line: 358, column: 3, scope: !8248)
!8257 = !DILocation(line: 374, column: 3, scope: !8248)
!8258 = !DILocation(line: 379, column: 3, scope: !8248)
!8259 = !DILocation(line: 0, scope: !8248)
!8260 = !DILocation(line: 396, column: 1, scope: !8232)
!8261 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !739, file: !739, line: 227, type: !809, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !676, retainedNodes: !8262)
!8262 = !{!8263, !8264, !8265, !8266, !8267, !8268, !8269, !8270}
!8263 = !DILocalVariable(name: "dev", arg: 1, scope: !8261, file: !739, line: 227, type: !768)
!8264 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8261, file: !739, line: 228, type: !779)
!8265 = !DILocalVariable(name: "data", arg: 3, scope: !8261, file: !739, line: 229, type: !102)
!8266 = !DILocalVariable(name: "pclken", scope: !8261, file: !739, line: 233, type: !730)
!8267 = !DILocalVariable(name: "reg", scope: !8261, file: !739, line: 234, type: !1321)
!8268 = !DILocalVariable(name: "reg_val", scope: !8261, file: !739, line: 235, type: !137)
!8269 = !DILocalVariable(name: "dt_val", scope: !8261, file: !739, line: 235, type: !137)
!8270 = !DILocalVariable(name: "err", scope: !8261, file: !739, line: 236, type: !103)
!8271 = !DILocation(line: 0, scope: !8261)
!8272 = !DILocation(line: 241, column: 30, scope: !8261)
!8273 = !DILocation(line: 241, column: 8, scope: !8261)
!8274 = !DILocation(line: 242, column: 10, scope: !8275)
!8275 = distinct !DILexicalBlock(scope: !8261, file: !739, line: 242, column: 6)
!8276 = !DILocation(line: 242, column: 6, scope: !8261)
!8277 = !DILocation(line: 247, column: 11, scope: !8261)
!8278 = !DILocation(line: 248, column: 6, scope: !8261)
!8279 = !DILocation(line: 247, column: 44, scope: !8261)
!8280 = !DILocation(line: 250, column: 6, scope: !8261)
!8281 = !DILocation(line: 249, column: 52, scope: !8261)
!8282 = !DILocation(line: 249, column: 8, scope: !8261)
!8283 = !DILocation(line: 251, column: 12, scope: !8261)
!8284 = !DILocation(line: 252, column: 10, scope: !8261)
!8285 = !DILocation(line: 253, column: 7, scope: !8261)
!8286 = !DILocation(line: 255, column: 2, scope: !8261)
!8287 = !DILocation(line: 260, column: 1, scope: !8261)
!8288 = distinct !DISubprogram(name: "enabled_clock", scope: !739, file: !739, line: 100, type: !8289, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !676, retainedNodes: !8291)
!8289 = !DISubroutineType(types: !8290)
!8290 = !{!103, !137}
!8291 = !{!8292, !8293}
!8292 = !DILocalVariable(name: "src_clk", arg: 1, scope: !8288, file: !739, line: 100, type: !137)
!8293 = !DILocalVariable(name: "r", scope: !8288, file: !739, line: 102, type: !103)
!8294 = !DILocation(line: 0, scope: !8288)
!8295 = !DILocation(line: 104, column: 2, scope: !8288)
!8296 = !DILocation(line: 180, column: 2, scope: !8288)
!8297 = !DILocation(line: 181, column: 1, scope: !8288)
!8298 = distinct !DISubprogram(name: "get_bus_clock", scope: !739, file: !739, line: 79, type: !8299, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !676, retainedNodes: !8301)
!8299 = !DISubroutineType(types: !8300)
!8300 = !{!137, !137, !137}
!8301 = !{!8302, !8303}
!8302 = !DILocalVariable(name: "clock", arg: 1, scope: !8298, file: !739, line: 79, type: !137)
!8303 = !DILocalVariable(name: "prescaler", arg: 2, scope: !8298, file: !739, line: 79, type: !137)
!8304 = !DILocation(line: 0, scope: !8298)
!8305 = !DILocation(line: 81, column: 15, scope: !8298)
!8306 = !DILocation(line: 81, column: 2, scope: !8298)
!8307 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !739, file: !739, line: 68, type: !8308, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !676, retainedNodes: !8310)
!8308 = !DISubroutineType(types: !8309)
!8309 = !{!137, !137, !103, !103, !103}
!8310 = !{!8311, !8312, !8313, !8314}
!8311 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !8307, file: !739, line: 68, type: !137)
!8312 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !8307, file: !739, line: 69, type: !103)
!8313 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !8307, file: !739, line: 70, type: !103)
!8314 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !8307, file: !739, line: 71, type: !103)
!8315 = !DILocation(line: 0, scope: !8307)
!8316 = !DILocation(line: 75, column: 22, scope: !8307)
!8317 = !DILocation(line: 76, column: 13, scope: !8307)
!8318 = !DILocation(line: 75, column: 34, scope: !8307)
!8319 = !DILocation(line: 75, column: 2, scope: !8307)
!8320 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !739, file: !739, line: 641, type: !766, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !676, retainedNodes: !8321)
!8321 = !{!8322, !8323, !8324}
!8322 = !DILocalVariable(name: "dev", arg: 1, scope: !8320, file: !739, line: 641, type: !768)
!8323 = !DILocalVariable(name: "old_flash_freq", scope: !8320, file: !739, line: 664, type: !137)
!8324 = !DILocalVariable(name: "new_flash_freq", scope: !8320, file: !739, line: 665, type: !137)
!8325 = !DILocation(line: 0, scope: !8320)
!8326 = !DILocation(line: 646, column: 2, scope: !8320)
!8327 = !DILocation(line: 667, column: 19, scope: !8320)
!8328 = !DILocation(line: 674, column: 21, scope: !8329)
!8329 = distinct !DILexicalBlock(scope: !8320, file: !739, line: 674, column: 6)
!8330 = !DILocation(line: 674, column: 6, scope: !8320)
!8331 = !DILocation(line: 675, column: 3, scope: !8332)
!8332 = distinct !DILexicalBlock(scope: !8329, file: !739, line: 674, column: 59)
!8333 = !DILocation(line: 676, column: 2, scope: !8332)
!8334 = !DILocation(line: 680, column: 2, scope: !8320)
!8335 = !DILocation(line: 683, column: 2, scope: !8320)
!8336 = !DILocation(line: 690, column: 3, scope: !8337)
!8337 = distinct !DILexicalBlock(scope: !8338, file: !739, line: 689, column: 9)
!8338 = distinct !DILexicalBlock(scope: !8320, file: !739, line: 685, column: 6)
!8339 = !DILocation(line: 695, column: 2, scope: !8320)
!8340 = !DILocation(line: 696, column: 2, scope: !8320)
!8341 = !DILocation(line: 696, column: 9, scope: !8320)
!8342 = !DILocation(line: 696, column: 34, scope: !8320)
!8343 = distinct !{!8343, !8340, !8344}
!8344 = !DILocation(line: 697, column: 2, scope: !8320)
!8345 = !DILocation(line: 720, column: 21, scope: !8346)
!8346 = distinct !DILexicalBlock(scope: !8320, file: !739, line: 720, column: 6)
!8347 = !DILocation(line: 720, column: 6, scope: !8320)
!8348 = !DILocation(line: 721, column: 3, scope: !8349)
!8349 = distinct !DILexicalBlock(scope: !8346, file: !739, line: 720, column: 60)
!8350 = !DILocation(line: 722, column: 2, scope: !8349)
!8351 = !DILocation(line: 725, column: 18, scope: !8320)
!8352 = !DILocation(line: 728, column: 2, scope: !8320)
!8353 = !DILocation(line: 730, column: 2, scope: !8320)
!8354 = !DILocation(line: 745, column: 2, scope: !8320)
!8355 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !8356, file: !8356, line: 3275, type: !135, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !676, retainedNodes: !162)
!8356 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8357 = !DILocation(line: 3277, column: 21, scope: !8355)
!8358 = !DILocation(line: 3277, column: 3, scope: !8355)
!8359 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !739, file: !739, line: 507, type: !2848, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !676, retainedNodes: !162)
!8360 = !DILocation(line: 516, column: 4, scope: !8361)
!8361 = distinct !DILexicalBlock(scope: !8362, file: !739, line: 515, column: 10)
!8362 = distinct !DILexicalBlock(scope: !8363, file: !739, line: 513, column: 7)
!8363 = distinct !DILexicalBlock(scope: !8364, file: !739, line: 510, column: 37)
!8364 = distinct !DILexicalBlock(scope: !8359, file: !739, line: 510, column: 6)
!8365 = !DILocation(line: 526, column: 3, scope: !8363)
!8366 = !DILocation(line: 527, column: 3, scope: !8363)
!8367 = !DILocation(line: 527, column: 10, scope: !8363)
!8368 = !DILocation(line: 527, column: 31, scope: !8363)
!8369 = distinct !{!8369, !8366, !8370}
!8370 = !DILocation(line: 529, column: 3, scope: !8363)
!8371 = !DILocation(line: 583, column: 3, scope: !8372)
!8372 = distinct !DILexicalBlock(scope: !8373, file: !739, line: 577, column: 37)
!8373 = distinct !DILexicalBlock(scope: !8359, file: !739, line: 577, column: 6)
!8374 = !DILocation(line: 584, column: 3, scope: !8372)
!8375 = !DILocation(line: 584, column: 10, scope: !8372)
!8376 = !DILocation(line: 584, column: 31, scope: !8372)
!8377 = distinct !{!8377, !8374, !8378}
!8378 = !DILocation(line: 585, column: 3, scope: !8372)
!8379 = !DILocation(line: 627, column: 1, scope: !8359)
!8380 = distinct !DISubprogram(name: "set_up_plls", scope: !739, file: !739, line: 448, type: !2848, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !676, retainedNodes: !162)
!8381 = !DILocation(line: 460, column: 6, scope: !8382)
!8382 = distinct !DILexicalBlock(scope: !8380, file: !739, line: 460, column: 6)
!8383 = !DILocation(line: 460, column: 31, scope: !8382)
!8384 = !DILocation(line: 460, column: 6, scope: !8380)
!8385 = !DILocation(line: 461, column: 3, scope: !8386)
!8386 = distinct !DILexicalBlock(scope: !8382, file: !739, line: 460, column: 67)
!8387 = !DILocation(line: 462, column: 3, scope: !8386)
!8388 = !DILocation(line: 463, column: 2, scope: !8386)
!8389 = !DILocation(line: 464, column: 2, scope: !8380)
!8390 = !DILocation(line: 488, column: 2, scope: !8380)
!8391 = !DILocation(line: 492, column: 2, scope: !8380)
!8392 = !DILocation(line: 496, column: 2, scope: !8380)
!8393 = !DILocation(line: 499, column: 2, scope: !8380)
!8394 = !DILocation(line: 500, column: 2, scope: !8380)
!8395 = !DILocation(line: 500, column: 9, scope: !8380)
!8396 = !DILocation(line: 500, column: 30, scope: !8380)
!8397 = distinct !{!8397, !8394, !8398}
!8398 = !DILocation(line: 502, column: 2, scope: !8380)
!8399 = !DILocation(line: 505, column: 1, scope: !8380)
!8400 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8356, file: !8356, line: 3224, type: !6411, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !676, retainedNodes: !8401)
!8401 = !{!8402}
!8402 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8400, file: !8356, line: 3224, type: !137)
!8403 = !DILocation(line: 0, scope: !8400)
!8404 = !DILocation(line: 3226, column: 3, scope: !8400)
!8405 = !DILocation(line: 3227, column: 1, scope: !8400)
!8406 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8356, file: !8356, line: 3188, type: !6411, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !676, retainedNodes: !8407)
!8407 = !{!8408}
!8408 = !DILocalVariable(name: "Source", arg: 1, scope: !8406, file: !8356, line: 3188, type: !137)
!8409 = !DILocation(line: 0, scope: !8406)
!8410 = !DILocation(line: 3190, column: 3, scope: !8406)
!8411 = !DILocation(line: 3191, column: 1, scope: !8406)
!8412 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8356, file: !8356, line: 3204, type: !135, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !676, retainedNodes: !162)
!8413 = !DILocation(line: 3206, column: 21, scope: !8412)
!8414 = !DILocation(line: 3206, column: 3, scope: !8412)
!8415 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8356, file: !8356, line: 3240, type: !6411, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !676, retainedNodes: !8416)
!8416 = !{!8417}
!8417 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8415, file: !8356, line: 3240, type: !137)
!8418 = !DILocation(line: 0, scope: !8415)
!8419 = !DILocation(line: 3242, column: 3, scope: !8415)
!8420 = !DILocation(line: 3243, column: 1, scope: !8415)
!8421 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8356, file: !8356, line: 3256, type: !6411, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !676, retainedNodes: !8422)
!8422 = !{!8423}
!8423 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8421, file: !8356, line: 3256, type: !137)
!8424 = !DILocation(line: 0, scope: !8421)
!8425 = !DILocation(line: 3258, column: 3, scope: !8421)
!8426 = !DILocation(line: 3259, column: 1, scope: !8421)
!8427 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !739, file: !739, line: 409, type: !2848, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !676, retainedNodes: !162)
!8428 = !DILocation(line: 412, column: 6, scope: !8429)
!8429 = distinct !DILexicalBlock(scope: !8427, file: !739, line: 412, column: 6)
!8430 = !DILocation(line: 412, column: 27, scope: !8429)
!8431 = !DILocation(line: 412, column: 6, scope: !8427)
!8432 = !DILocation(line: 414, column: 3, scope: !8433)
!8433 = distinct !DILexicalBlock(scope: !8429, file: !739, line: 412, column: 33)
!8434 = !DILocation(line: 415, column: 3, scope: !8433)
!8435 = !DILocation(line: 415, column: 10, scope: !8433)
!8436 = !DILocation(line: 415, column: 31, scope: !8433)
!8437 = distinct !{!8437, !8434, !8438}
!8438 = !DILocation(line: 417, column: 3, scope: !8433)
!8439 = !DILocation(line: 421, column: 2, scope: !8427)
!8440 = !DILocation(line: 422, column: 2, scope: !8427)
!8441 = !DILocation(line: 422, column: 9, scope: !8427)
!8442 = !DILocation(line: 422, column: 34, scope: !8427)
!8443 = distinct !{!8443, !8440, !8444}
!8444 = !DILocation(line: 423, column: 2, scope: !8427)
!8445 = !DILocation(line: 424, column: 1, scope: !8427)
!8446 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !8356, file: !8356, line: 4195, type: !2848, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !676, retainedNodes: !162)
!8447 = !DILocation(line: 4197, column: 3, scope: !8446)
!8448 = !DILocation(line: 4198, column: 1, scope: !8446)
!8449 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8356, file: !8356, line: 4184, type: !2848, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !676, retainedNodes: !162)
!8450 = !DILocation(line: 4186, column: 3, scope: !8449)
!8451 = !DILocation(line: 4187, column: 1, scope: !8449)
!8452 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8356, file: !8356, line: 4205, type: !135, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !676, retainedNodes: !162)
!8453 = !DILocation(line: 4207, column: 11, scope: !8452)
!8454 = !DILocation(line: 4207, column: 44, scope: !8452)
!8455 = !DILocation(line: 4207, column: 3, scope: !8452)
!8456 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8356, file: !8356, line: 3007, type: !135, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !676, retainedNodes: !162)
!8457 = !DILocation(line: 3009, column: 11, scope: !8456)
!8458 = !DILocation(line: 3009, column: 44, scope: !8456)
!8459 = !DILocation(line: 3009, column: 3, scope: !8456)
!8460 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8356, file: !8356, line: 2987, type: !2848, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !676, retainedNodes: !162)
!8461 = !DILocation(line: 2989, column: 3, scope: !8460)
!8462 = !DILocation(line: 2990, column: 1, scope: !8460)
!8463 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8356, file: !8356, line: 2939, type: !2848, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !676, retainedNodes: !162)
!8464 = !DILocation(line: 2941, column: 3, scope: !8463)
!8465 = !DILocation(line: 2942, column: 1, scope: !8463)
!8466 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8356, file: !8356, line: 2949, type: !2848, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !676, retainedNodes: !162)
!8467 = !DILocation(line: 2951, column: 3, scope: !8466)
!8468 = !DILocation(line: 2952, column: 1, scope: !8466)
!8469 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8356, file: !8356, line: 2969, type: !135, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !676, retainedNodes: !162)
!8470 = !DILocation(line: 2971, column: 11, scope: !8469)
!8471 = !DILocation(line: 2971, column: 44, scope: !8469)
!8472 = !DILocation(line: 2971, column: 3, scope: !8469)
!8473 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !8356, file: !8356, line: 3143, type: !2848, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !676, retainedNodes: !162)
!8474 = !DILocation(line: 3145, column: 3, scope: !8473)
!8475 = !DILocation(line: 3146, column: 1, scope: !8473)
!8476 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !8356, file: !8356, line: 3163, type: !135, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !676, retainedNodes: !162)
!8477 = !DILocation(line: 3165, column: 11, scope: !8476)
!8478 = !DILocation(line: 3165, column: 46, scope: !8476)
!8479 = !DILocation(line: 3165, column: 3, scope: !8476)
!8480 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !8481, file: !8481, line: 40, type: !135, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2616, retainedNodes: !162)
!8481 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8482 = !DILocation(line: 45, column: 3, scope: !8483)
!8483 = distinct !DILexicalBlock(scope: !8484, file: !8481, line: 44, column: 44)
!8484 = distinct !DILexicalBlock(scope: !8485, file: !8481, line: 44, column: 13)
!8485 = distinct !DILexicalBlock(scope: !8480, file: !8481, line: 42, column: 6)
!8486 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !8481, file: !8481, line: 56, type: !2848, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2616, retainedNodes: !162)
!8487 = !DILocation(line: 58, column: 2, scope: !8486)
!8488 = !DILocation(line: 62, column: 1, scope: !8486)
!8489 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8356, file: !8356, line: 4304, type: !8490, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2616, retainedNodes: !8492)
!8490 = !DISubroutineType(types: !8491)
!8491 = !{null, !137, !137, !137, !137}
!8492 = !{!8493, !8494, !8495, !8496}
!8493 = !DILocalVariable(name: "Source", arg: 1, scope: !8489, file: !8356, line: 4304, type: !137)
!8494 = !DILocalVariable(name: "PLLM", arg: 2, scope: !8489, file: !8356, line: 4304, type: !137)
!8495 = !DILocalVariable(name: "PLLN", arg: 3, scope: !8489, file: !8356, line: 4304, type: !137)
!8496 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !8489, file: !8356, line: 4304, type: !137)
!8497 = !DILocation(line: 0, scope: !8489)
!8498 = !DILocation(line: 4306, column: 3, scope: !8489)
!8499 = !DILocation(line: 4308, column: 3, scope: !8489)
!8500 = !DILocation(line: 4312, column: 1, scope: !8489)
!8501 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !8481, file: !8481, line: 69, type: !2848, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2616, retainedNodes: !162)
!8502 = !DILocation(line: 72, column: 2, scope: !8501)
!8503 = !DILocation(line: 73, column: 1, scope: !8501)
!8504 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !8505, file: !8505, line: 1185, type: !6411, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2616, retainedNodes: !8506)
!8505 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8506 = !{!8507, !8508}
!8507 = !DILocalVariable(name: "Periphs", arg: 1, scope: !8504, file: !8505, line: 1185, type: !137)
!8508 = !DILocalVariable(name: "tmpreg", scope: !8504, file: !8505, line: 1187, type: !176)
!8509 = !DILocation(line: 0, scope: !8504)
!8510 = !DILocation(line: 1187, column: 3, scope: !8504)
!8511 = !DILocation(line: 1187, column: 17, scope: !8504)
!8512 = !DILocation(line: 1188, column: 3, scope: !8504)
!8513 = !DILocation(line: 1190, column: 12, scope: !8504)
!8514 = !DILocation(line: 1190, column: 10, scope: !8504)
!8515 = !DILocation(line: 1191, column: 9, scope: !8504)
!8516 = !DILocation(line: 1192, column: 1, scope: !8504)
!8517 = distinct !DISubprogram(name: "uart_console_init", scope: !870, file: !870, line: 588, type: !847, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !813, retainedNodes: !8518)
!8518 = !{!8519}
!8519 = !DILocalVariable(name: "arg", arg: 1, scope: !8517, file: !870, line: 588, type: !825)
!8520 = !DILocation(line: 0, scope: !8517)
!8521 = !DILocation(line: 593, column: 7, scope: !8522)
!8522 = distinct !DILexicalBlock(scope: !8517, file: !870, line: 593, column: 6)
!8523 = !DILocation(line: 593, column: 6, scope: !8517)
!8524 = !DILocation(line: 597, column: 2, scope: !8517)
!8525 = !DILocation(line: 599, column: 2, scope: !8517)
!8526 = !DILocation(line: 600, column: 1, scope: !8517)
!8527 = distinct !DISubprogram(name: "device_is_ready", scope: !8528, file: !8528, line: 47, type: !8529, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !813, retainedNodes: !8531)
!8528 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sys_heap")
!8529 = !DISubroutineType(types: !8530)
!8530 = !{!211, !825}
!8531 = !{!8532}
!8532 = !DILocalVariable(name: "dev", arg: 1, scope: !8527, file: !8528, line: 47, type: !825)
!8533 = !DILocation(line: 0, scope: !8527)
!8534 = !DILocation(line: 55, column: 2, scope: !8535)
!8535 = distinct !DILexicalBlock(scope: !8527, file: !8528, line: 55, column: 2)
!8536 = !{i64 2154364602}
!8537 = !DILocation(line: 56, column: 9, scope: !8527)
!8538 = !DILocation(line: 56, column: 2, scope: !8527)
!8539 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !870, file: !870, line: 573, type: !2848, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !813, retainedNodes: !162)
!8540 = !DILocation(line: 576, column: 2, scope: !8539)
!8541 = !DILocation(line: 579, column: 2, scope: !8539)
!8542 = !DILocation(line: 581, column: 1, scope: !8539)
!8543 = distinct !DISubprogram(name: "console_out", scope: !870, file: !870, line: 77, type: !129, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !813, retainedNodes: !8544)
!8544 = !{!8545}
!8545 = !DILocalVariable(name: "c", arg: 1, scope: !8543, file: !870, line: 77, type: !103)
!8546 = !DILocation(line: 0, scope: !8543)
!8547 = !DILocation(line: 89, column: 11, scope: !8548)
!8548 = distinct !DILexicalBlock(scope: !8543, file: !870, line: 89, column: 6)
!8549 = !DILocation(line: 89, column: 6, scope: !8543)
!8550 = !DILocation(line: 90, column: 3, scope: !8551)
!8551 = distinct !DILexicalBlock(scope: !8548, file: !870, line: 89, column: 17)
!8552 = !DILocation(line: 91, column: 2, scope: !8551)
!8553 = !DILocation(line: 92, column: 34, scope: !8543)
!8554 = !DILocation(line: 92, column: 2, scope: !8543)
!8555 = !DILocation(line: 94, column: 2, scope: !8543)
!8556 = distinct !DISubprogram(name: "uart_poll_out", scope: !8557, file: !8557, line: 95, type: !843, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !813, retainedNodes: !8558)
!8557 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/sys_heap")
!8558 = !{!8559, !8560}
!8559 = !DILocalVariable(name: "dev", arg: 1, scope: !8556, file: !8557, line: 95, type: !825)
!8560 = !DILocalVariable(name: "out_char", arg: 2, scope: !8556, file: !8557, line: 95, type: !209)
!8561 = !DILocation(line: 0, scope: !8556)
!8562 = !DILocation(line: 105, column: 2, scope: !8563)
!8563 = distinct !DILexicalBlock(scope: !8556, file: !8557, line: 105, column: 2)
!8564 = !{i64 2154447993}
!8565 = !DILocation(line: 106, column: 2, scope: !8556)
!8566 = !DILocation(line: 107, column: 1, scope: !8556)
!8567 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !819, file: !819, line: 574, type: !843, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !813, retainedNodes: !8568)
!8568 = !{!8569, !8570, !8571}
!8569 = !DILocalVariable(name: "dev", arg: 1, scope: !8567, file: !819, line: 574, type: !825)
!8570 = !DILocalVariable(name: "out_char", arg: 2, scope: !8567, file: !819, line: 575, type: !209)
!8571 = !DILocalVariable(name: "api", scope: !8567, file: !819, line: 577, type: !816)
!8572 = !DILocation(line: 0, scope: !8567)
!8573 = !DILocation(line: 578, column: 40, scope: !8567)
!8574 = !DILocation(line: 580, column: 7, scope: !8567)
!8575 = !DILocation(line: 580, column: 2, scope: !8567)
!8576 = !DILocation(line: 581, column: 1, scope: !8567)
!8577 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !196, file: !196, line: 730, type: !8529, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !813, retainedNodes: !8578)
!8578 = !{!8579}
!8579 = !DILocalVariable(name: "dev", arg: 1, scope: !8577, file: !196, line: 730, type: !825)
!8580 = !DILocation(line: 0, scope: !8577)
!8581 = !DILocation(line: 732, column: 9, scope: !8577)
!8582 = !DILocation(line: 732, column: 2, scope: !8577)
!8583 = distinct !DISubprogram(name: "uart_register_input", scope: !870, file: !870, line: 560, type: !8584, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !813, retainedNodes: !8629)
!8584 = !DISubroutineType(types: !8585)
!8585 = !{null, !8586, !8586, !8626}
!8586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8587, size: 32)
!8587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !357, line: 2208, size: 128, elements: !8588)
!8588 = !{!8589}
!8589 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !8587, file: !357, line: 2209, baseType: !8590, size: 128)
!8590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !357, line: 1709, size: 128, elements: !8591)
!8591 = !{!8592, !8605, !8607}
!8592 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !8590, file: !357, line: 1710, baseType: !8593, size: 64)
!8593 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !8594, line: 46, baseType: !8595)
!8594 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !8594, line: 41, size: 64, elements: !8596)
!8596 = !{!8597, !8604}
!8597 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8595, file: !8594, line: 42, baseType: !8598, size: 32)
!8598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8599, size: 32)
!8599 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !8594, line: 39, baseType: !8600)
!8600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !8594, line: 35, size: 32, elements: !8601)
!8601 = !{!8602}
!8602 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !8600, file: !8594, line: 36, baseType: !8603, size: 32)
!8603 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !8594, line: 32, baseType: !137)
!8604 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8595, file: !8594, line: 43, baseType: !8598, size: 32, offset: 32)
!8605 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8590, file: !357, line: 1711, baseType: !8606, offset: 64)
!8606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !368, line: 43, elements: !162)
!8607 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8590, file: !357, line: 1712, baseType: !8608, size: 64, offset: 64)
!8608 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !299, line: 233, baseType: !8609)
!8609 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !299, line: 231, size: 64, elements: !8610)
!8610 = !{!8611}
!8611 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8609, file: !299, line: 232, baseType: !8612, size: 64)
!8612 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !273, line: 48, baseType: !8613)
!8613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !273, line: 37, size: 64, elements: !8614)
!8614 = !{!8615, !8621}
!8615 = !DIDerivedType(tag: DW_TAG_member, scope: !8613, file: !273, line: 38, baseType: !8616, size: 32)
!8616 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8613, file: !273, line: 38, size: 32, elements: !8617)
!8617 = !{!8618, !8620}
!8618 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8616, file: !273, line: 39, baseType: !8619, size: 32)
!8619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8613, size: 32)
!8620 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8616, file: !273, line: 40, baseType: !8619, size: 32)
!8621 = !DIDerivedType(tag: DW_TAG_member, scope: !8613, file: !273, line: 42, baseType: !8622, size: 32, offset: 32)
!8622 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8613, file: !273, line: 42, size: 32, elements: !8623)
!8623 = !{!8624, !8625}
!8624 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8622, file: !273, line: 43, baseType: !8619, size: 32)
!8625 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8622, file: !273, line: 44, baseType: !8619, size: 32)
!8626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8627, size: 32)
!8627 = !DISubroutineType(types: !8628)
!8628 = !{!208, !1005, !208}
!8629 = !{!8630, !8631, !8632}
!8630 = !DILocalVariable(name: "avail", arg: 1, scope: !8583, file: !870, line: 560, type: !8586)
!8631 = !DILocalVariable(name: "lines", arg: 2, scope: !8583, file: !870, line: 560, type: !8586)
!8632 = !DILocalVariable(name: "completion", arg: 3, scope: !8583, file: !870, line: 561, type: !8626)
!8633 = !DILocation(line: 0, scope: !8583)
!8634 = !DILocation(line: 566, column: 1, scope: !8583)
!8635 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1049, file: !1049, line: 523, type: !906, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !879, retainedNodes: !8636)
!8636 = !{!8637, !8638, !8639, !8640, !8641}
!8637 = !DILocalVariable(name: "dev", arg: 1, scope: !8635, file: !1049, line: 523, type: !908)
!8638 = !DILocalVariable(name: "pin", arg: 2, scope: !8635, file: !1049, line: 524, type: !923)
!8639 = !DILocalVariable(name: "flags", arg: 3, scope: !8635, file: !1049, line: 524, type: !924)
!8640 = !DILocalVariable(name: "err", scope: !8635, file: !1049, line: 526, type: !103)
!8641 = !DILocalVariable(name: "pincfg", scope: !8635, file: !1049, line: 527, type: !103)
!8642 = !DILocation(line: 0, scope: !8635)
!8643 = !DILocation(line: 527, column: 2, scope: !8635)
!8644 = !DILocation(line: 532, column: 8, scope: !8635)
!8645 = !DILocation(line: 533, column: 10, scope: !8646)
!8646 = distinct !DILexicalBlock(scope: !8635, file: !1049, line: 533, column: 6)
!8647 = !DILocation(line: 533, column: 6, scope: !8635)
!8648 = !DILocation(line: 543, column: 13, scope: !8649)
!8649 = distinct !DILexicalBlock(scope: !8635, file: !1049, line: 543, column: 6)
!8650 = !DILocation(line: 543, column: 28, scope: !8649)
!8651 = !DILocation(line: 543, column: 6, scope: !8635)
!8652 = !DILocation(line: 544, column: 14, scope: !8653)
!8653 = distinct !DILexicalBlock(scope: !8654, file: !1049, line: 544, column: 7)
!8654 = distinct !DILexicalBlock(scope: !8649, file: !1049, line: 543, column: 34)
!8655 = !DILocation(line: 544, column: 39, scope: !8653)
!8656 = !DILocation(line: 544, column: 7, scope: !8654)
!8657 = !DILocation(line: 545, column: 38, scope: !8658)
!8658 = distinct !DILexicalBlock(scope: !8653, file: !1049, line: 544, column: 45)
!8659 = !DILocation(line: 545, column: 4, scope: !8658)
!8660 = !DILocation(line: 546, column: 3, scope: !8658)
!8661 = !DILocation(line: 546, column: 21, scope: !8662)
!8662 = distinct !DILexicalBlock(scope: !8653, file: !1049, line: 546, column: 14)
!8663 = !DILocation(line: 546, column: 45, scope: !8662)
!8664 = !DILocation(line: 546, column: 14, scope: !8653)
!8665 = !DILocation(line: 547, column: 40, scope: !8666)
!8666 = distinct !DILexicalBlock(scope: !8662, file: !1049, line: 546, column: 51)
!8667 = !DILocation(line: 547, column: 4, scope: !8666)
!8668 = !DILocation(line: 548, column: 3, scope: !8666)
!8669 = !DILocation(line: 551, column: 32, scope: !8635)
!8670 = !DILocation(line: 551, column: 37, scope: !8635)
!8671 = !DILocation(line: 551, column: 2, scope: !8635)
!8672 = !DILocation(line: 554, column: 6, scope: !8635)
!8673 = !DILocation(line: 562, column: 1, scope: !8635)
!8674 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1049, file: !1049, line: 410, type: !8675, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !879, retainedNodes: !8677)
!8675 = !DISubroutineType(types: !8676)
!8676 = !{!103, !908, !149}
!8677 = !{!8678, !8679, !8680, !8682}
!8678 = !DILocalVariable(name: "dev", arg: 1, scope: !8674, file: !1049, line: 410, type: !908)
!8679 = !DILocalVariable(name: "value", arg: 2, scope: !8674, file: !1049, line: 410, type: !149)
!8680 = !DILocalVariable(name: "cfg", scope: !8674, file: !1049, line: 412, type: !8681)
!8681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1161, size: 32)
!8682 = !DILocalVariable(name: "gpio", scope: !8674, file: !1049, line: 413, type: !981)
!8683 = !DILocation(line: 0, scope: !8674)
!8684 = !DILocation(line: 412, column: 45, scope: !8674)
!8685 = !DILocation(line: 413, column: 44, scope: !8674)
!8686 = !DILocation(line: 415, column: 11, scope: !8674)
!8687 = !DILocation(line: 415, column: 9, scope: !8674)
!8688 = !DILocation(line: 417, column: 2, scope: !8674)
!8689 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1049, file: !1049, line: 420, type: !933, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !879, retainedNodes: !8690)
!8690 = !{!8691, !8692, !8693, !8694, !8695, !8696}
!8691 = !DILocalVariable(name: "dev", arg: 1, scope: !8689, file: !1049, line: 420, type: !908)
!8692 = !DILocalVariable(name: "mask", arg: 2, scope: !8689, file: !1049, line: 421, type: !935)
!8693 = !DILocalVariable(name: "value", arg: 3, scope: !8689, file: !1049, line: 422, type: !930)
!8694 = !DILocalVariable(name: "cfg", scope: !8689, file: !1049, line: 424, type: !8681)
!8695 = !DILocalVariable(name: "gpio", scope: !8689, file: !1049, line: 425, type: !981)
!8696 = !DILocalVariable(name: "port_value", scope: !8689, file: !1049, line: 426, type: !137)
!8697 = !DILocation(line: 0, scope: !8689)
!8698 = !DILocation(line: 424, column: 45, scope: !8689)
!8699 = !DILocation(line: 425, column: 44, scope: !8689)
!8700 = !DILocation(line: 430, column: 15, scope: !8689)
!8701 = !DILocation(line: 431, column: 46, scope: !8689)
!8702 = !DILocation(line: 431, column: 44, scope: !8689)
!8703 = !DILocation(line: 431, column: 61, scope: !8689)
!8704 = !DILocation(line: 431, column: 53, scope: !8689)
!8705 = !DILocation(line: 431, column: 2, scope: !8689)
!8706 = !DILocation(line: 435, column: 2, scope: !8689)
!8707 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1049, file: !1049, line: 438, type: !938, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !879, retainedNodes: !8708)
!8708 = !{!8709, !8710, !8711, !8712}
!8709 = !DILocalVariable(name: "dev", arg: 1, scope: !8707, file: !1049, line: 438, type: !908)
!8710 = !DILocalVariable(name: "pins", arg: 2, scope: !8707, file: !1049, line: 439, type: !935)
!8711 = !DILocalVariable(name: "cfg", scope: !8707, file: !1049, line: 441, type: !8681)
!8712 = !DILocalVariable(name: "gpio", scope: !8707, file: !1049, line: 442, type: !981)
!8713 = !DILocation(line: 0, scope: !8707)
!8714 = !DILocation(line: 441, column: 45, scope: !8707)
!8715 = !DILocation(line: 442, column: 44, scope: !8707)
!8716 = !DILocation(line: 448, column: 2, scope: !8707)
!8717 = !DILocation(line: 450, column: 2, scope: !8707)
!8718 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1049, file: !1049, line: 453, type: !938, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !879, retainedNodes: !8719)
!8719 = !{!8720, !8721, !8722, !8723}
!8720 = !DILocalVariable(name: "dev", arg: 1, scope: !8718, file: !1049, line: 453, type: !908)
!8721 = !DILocalVariable(name: "pins", arg: 2, scope: !8718, file: !1049, line: 454, type: !935)
!8722 = !DILocalVariable(name: "cfg", scope: !8718, file: !1049, line: 456, type: !8681)
!8723 = !DILocalVariable(name: "gpio", scope: !8718, file: !1049, line: 457, type: !981)
!8724 = !DILocation(line: 0, scope: !8718)
!8725 = !DILocation(line: 456, column: 45, scope: !8718)
!8726 = !DILocation(line: 457, column: 44, scope: !8718)
!8727 = !DILocation(line: 467, column: 2, scope: !8718)
!8728 = !DILocation(line: 470, column: 2, scope: !8718)
!8729 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1049, file: !1049, line: 473, type: !938, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !879, retainedNodes: !8730)
!8730 = !{!8731, !8732, !8733, !8734}
!8731 = !DILocalVariable(name: "dev", arg: 1, scope: !8729, file: !1049, line: 473, type: !908)
!8732 = !DILocalVariable(name: "pins", arg: 2, scope: !8729, file: !1049, line: 474, type: !935)
!8733 = !DILocalVariable(name: "cfg", scope: !8729, file: !1049, line: 476, type: !8681)
!8734 = !DILocalVariable(name: "gpio", scope: !8729, file: !1049, line: 477, type: !981)
!8735 = !DILocation(line: 0, scope: !8729)
!8736 = !DILocation(line: 476, column: 45, scope: !8729)
!8737 = !DILocation(line: 477, column: 44, scope: !8729)
!8738 = !DILocation(line: 484, column: 2, scope: !8729)
!8739 = !DILocation(line: 487, column: 2, scope: !8729)
!8740 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1049, file: !1049, line: 594, type: !944, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !879, retainedNodes: !8741)
!8741 = !{!8742, !8743, !8744, !8745, !8746, !8747, !8749, !8750, !8751}
!8742 = !DILocalVariable(name: "dev", arg: 1, scope: !8740, file: !1049, line: 594, type: !908)
!8743 = !DILocalVariable(name: "pin", arg: 2, scope: !8740, file: !1049, line: 595, type: !923)
!8744 = !DILocalVariable(name: "mode", arg: 3, scope: !8740, file: !1049, line: 596, type: !882)
!8745 = !DILocalVariable(name: "trig", arg: 4, scope: !8740, file: !1049, line: 597, type: !888)
!8746 = !DILocalVariable(name: "cfg", scope: !8740, file: !1049, line: 599, type: !8681)
!8747 = !DILocalVariable(name: "data", scope: !8740, file: !1049, line: 600, type: !8748)
!8748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1115, size: 32)
!8749 = !DILocalVariable(name: "edge", scope: !8740, file: !1049, line: 601, type: !103)
!8750 = !DILocalVariable(name: "err", scope: !8740, file: !1049, line: 602, type: !103)
!8751 = !DILabel(scope: !8740, name: "exit", file: !1049, line: 643)
!8752 = !DILocation(line: 0, scope: !8740)
!8753 = !DILocation(line: 599, column: 45, scope: !8740)
!8754 = !DILocation(line: 604, column: 6, scope: !8740)
!8755 = !DILocation(line: 605, column: 34, scope: !8756)
!8756 = distinct !DILexicalBlock(scope: !8757, file: !1049, line: 605, column: 7)
!8757 = distinct !DILexicalBlock(scope: !8758, file: !1049, line: 604, column: 38)
!8758 = distinct !DILexicalBlock(scope: !8740, file: !1049, line: 604, column: 6)
!8759 = !DILocation(line: 605, column: 7, scope: !8756)
!8760 = !DILocation(line: 605, column: 47, scope: !8756)
!8761 = !DILocation(line: 605, column: 39, scope: !8756)
!8762 = !DILocation(line: 605, column: 7, scope: !8757)
!8763 = !DILocation(line: 606, column: 4, scope: !8764)
!8764 = distinct !DILexicalBlock(scope: !8756, file: !1049, line: 605, column: 53)
!8765 = !DILocation(line: 607, column: 4, scope: !8764)
!8766 = !DILocation(line: 608, column: 4, scope: !8764)
!8767 = !DILocation(line: 609, column: 3, scope: !8764)
!8768 = !DILocation(line: 600, column: 38, scope: !8740)
!8769 = !DILocation(line: 620, column: 30, scope: !8770)
!8770 = distinct !DILexicalBlock(scope: !8740, file: !1049, line: 620, column: 6)
!8771 = !DILocation(line: 620, column: 6, scope: !8770)
!8772 = !DILocation(line: 620, column: 57, scope: !8770)
!8773 = !DILocation(line: 620, column: 6, scope: !8740)
!8774 = !DILocation(line: 625, column: 29, scope: !8740)
!8775 = !DILocation(line: 625, column: 2, scope: !8740)
!8776 = !DILocation(line: 627, column: 2, scope: !8740)
!8777 = !DILocation(line: 630, column: 3, scope: !8778)
!8778 = distinct !DILexicalBlock(scope: !8740, file: !1049, line: 627, column: 16)
!8779 = !DILocation(line: 633, column: 3, scope: !8778)
!8780 = !DILocation(line: 636, column: 3, scope: !8778)
!8781 = !DILocation(line: 639, column: 2, scope: !8740)
!8782 = !DILocation(line: 641, column: 2, scope: !8740)
!8783 = !DILocation(line: 643, column: 1, scope: !8740)
!8784 = !DILocation(line: 644, column: 2, scope: !8740)
!8785 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1049, file: !1049, line: 647, type: !948, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !879, retainedNodes: !8786)
!8786 = !{!8787, !8788, !8789, !8790}
!8787 = !DILocalVariable(name: "dev", arg: 1, scope: !8785, file: !1049, line: 647, type: !908)
!8788 = !DILocalVariable(name: "callback", arg: 2, scope: !8785, file: !1049, line: 648, type: !950)
!8789 = !DILocalVariable(name: "set", arg: 3, scope: !8785, file: !1049, line: 649, type: !211)
!8790 = !DILocalVariable(name: "data", scope: !8785, file: !1049, line: 651, type: !8748)
!8791 = !DILocation(line: 0, scope: !8785)
!8792 = !DILocation(line: 651, column: 38, scope: !8785)
!8793 = !DILocation(line: 653, column: 37, scope: !8785)
!8794 = !DILocation(line: 653, column: 9, scope: !8785)
!8795 = !DILocation(line: 653, column: 2, scope: !8785)
!8796 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !8797, file: !8797, line: 38, type: !8798, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !879, retainedNodes: !8801)
!8797 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8798 = !DISubroutineType(types: !8799)
!8799 = !{!103, !8800, !950, !211}
!8800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1121, size: 32)
!8801 = !{!8802, !8803, !8804}
!8802 = !DILocalVariable(name: "callbacks", arg: 1, scope: !8796, file: !8797, line: 38, type: !8800)
!8803 = !DILocalVariable(name: "callback", arg: 2, scope: !8796, file: !8797, line: 39, type: !950)
!8804 = !DILocalVariable(name: "set", arg: 3, scope: !8796, file: !8797, line: 40, type: !211)
!8805 = !DILocation(line: 0, scope: !8796)
!8806 = !DILocation(line: 45, column: 7, scope: !8807)
!8807 = distinct !DILexicalBlock(scope: !8796, file: !8797, line: 45, column: 6)
!8808 = !DILocation(line: 45, column: 6, scope: !8796)
!8809 = !DILocation(line: 46, column: 56, scope: !8810)
!8810 = distinct !DILexicalBlock(scope: !8811, file: !8797, line: 46, column: 7)
!8811 = distinct !DILexicalBlock(scope: !8807, file: !8797, line: 45, column: 38)
!8812 = !DILocation(line: 46, column: 8, scope: !8810)
!8813 = !DILocation(line: 46, column: 7, scope: !8811)
!8814 = !DILocation(line: 51, column: 13, scope: !8807)
!8815 = !DILocation(line: 56, column: 43, scope: !8816)
!8816 = distinct !DILexicalBlock(scope: !8817, file: !8797, line: 55, column: 11)
!8817 = distinct !DILexicalBlock(scope: !8796, file: !8797, line: 55, column: 6)
!8818 = !DILocation(line: 56, column: 3, scope: !8816)
!8819 = !DILocation(line: 57, column: 2, scope: !8816)
!8820 = !DILocation(line: 60, column: 1, scope: !8796)
!8821 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !955, file: !955, line: 261, type: !8822, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !879, retainedNodes: !8824)
!8822 = !DISubroutineType(types: !8823)
!8823 = !{!211, !8800}
!8824 = !{!8825}
!8825 = !DILocalVariable(name: "list", arg: 1, scope: !8821, file: !955, line: 261, type: !8800)
!8826 = !DILocation(line: 0, scope: !8821)
!8827 = !DILocation(line: 261, column: 1, scope: !8821)
!8828 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !955, file: !955, line: 417, type: !8829, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !879, retainedNodes: !8831)
!8829 = !DISubroutineType(types: !8830)
!8830 = !{!211, !8800, !1125}
!8831 = !{!8832, !8833, !8834, !8835}
!8832 = !DILocalVariable(name: "list", arg: 1, scope: !8828, file: !955, line: 417, type: !8800)
!8833 = !DILocalVariable(name: "node", arg: 2, scope: !8828, file: !955, line: 417, type: !1125)
!8834 = !DILocalVariable(name: "prev", scope: !8828, file: !955, line: 417, type: !1125)
!8835 = !DILocalVariable(name: "test", scope: !8828, file: !955, line: 417, type: !1125)
!8836 = !DILocation(line: 0, scope: !8828)
!8837 = !DILocation(line: 417, column: 1, scope: !8838)
!8838 = distinct !DILexicalBlock(scope: !8828, file: !955, line: 417, column: 1)
!8839 = !DILocation(line: 417, column: 1, scope: !8840)
!8840 = distinct !DILexicalBlock(scope: !8838, file: !955, line: 417, column: 1)
!8841 = !DILocation(line: 417, column: 1, scope: !8842)
!8842 = distinct !DILexicalBlock(scope: !8843, file: !955, line: 417, column: 1)
!8843 = distinct !DILexicalBlock(scope: !8840, file: !955, line: 417, column: 1)
!8844 = !DILocation(line: 417, column: 1, scope: !8843)
!8845 = distinct !{!8845, !8837, !8837}
!8846 = !DILocation(line: 417, column: 1, scope: !8847)
!8847 = distinct !DILexicalBlock(scope: !8842, file: !955, line: 417, column: 1)
!8848 = !DILocation(line: 417, column: 1, scope: !8828)
!8849 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !955, file: !955, line: 298, type: !8850, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !879, retainedNodes: !8852)
!8850 = !DISubroutineType(types: !8851)
!8851 = !{null, !8800, !1125}
!8852 = !{!8853, !8854}
!8853 = !DILocalVariable(name: "list", arg: 1, scope: !8849, file: !955, line: 298, type: !8800)
!8854 = !DILocalVariable(name: "node", arg: 2, scope: !8849, file: !955, line: 298, type: !1125)
!8855 = !DILocation(line: 0, scope: !8849)
!8856 = !DILocation(line: 298, column: 1, scope: !8849)
!8857 = !DILocation(line: 298, column: 1, scope: !8858)
!8858 = distinct !DILexicalBlock(scope: !8849, file: !955, line: 298, column: 1)
!8859 = !DILocation(line: 298, column: 1, scope: !8860)
!8860 = distinct !DILexicalBlock(scope: !8858, file: !955, line: 298, column: 1)
!8861 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !955, file: !955, line: 231, type: !8862, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !879, retainedNodes: !8864)
!8862 = !DISubroutineType(types: !8863)
!8863 = !{!1125, !8800}
!8864 = !{!8865}
!8865 = !DILocalVariable(name: "list", arg: 1, scope: !8861, file: !955, line: 231, type: !8800)
!8866 = !DILocation(line: 0, scope: !8861)
!8867 = !DILocation(line: 233, column: 15, scope: !8861)
!8868 = !DILocation(line: 233, column: 2, scope: !8861)
!8869 = distinct !DISubprogram(name: "z_snode_next_set", scope: !955, file: !955, line: 209, type: !8870, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !879, retainedNodes: !8872)
!8870 = !DISubroutineType(types: !8871)
!8871 = !{null, !1125, !1125}
!8872 = !{!8873, !8874}
!8873 = !DILocalVariable(name: "parent", arg: 1, scope: !8869, file: !955, line: 209, type: !1125)
!8874 = !DILocalVariable(name: "child", arg: 2, scope: !8869, file: !955, line: 209, type: !1125)
!8875 = !DILocation(line: 0, scope: !8869)
!8876 = !DILocation(line: 211, column: 10, scope: !8869)
!8877 = !DILocation(line: 211, column: 15, scope: !8869)
!8878 = !DILocation(line: 212, column: 1, scope: !8869)
!8879 = distinct !DISubprogram(name: "z_slist_head_set", scope: !955, file: !955, line: 214, type: !8850, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !879, retainedNodes: !8880)
!8880 = !{!8881, !8882}
!8881 = !DILocalVariable(name: "list", arg: 1, scope: !8879, file: !955, line: 214, type: !8800)
!8882 = !DILocalVariable(name: "node", arg: 2, scope: !8879, file: !955, line: 214, type: !1125)
!8883 = !DILocation(line: 0, scope: !8879)
!8884 = !DILocation(line: 216, column: 8, scope: !8879)
!8885 = !DILocation(line: 216, column: 13, scope: !8879)
!8886 = !DILocation(line: 217, column: 1, scope: !8879)
!8887 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !955, file: !955, line: 243, type: !8862, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !879, retainedNodes: !8888)
!8888 = !{!8889}
!8889 = !DILocalVariable(name: "list", arg: 1, scope: !8887, file: !955, line: 243, type: !8800)
!8890 = !DILocation(line: 0, scope: !8887)
!8891 = !DILocation(line: 245, column: 15, scope: !8887)
!8892 = !DILocation(line: 245, column: 2, scope: !8887)
!8893 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !955, file: !955, line: 219, type: !8850, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !879, retainedNodes: !8894)
!8894 = !{!8895, !8896}
!8895 = !DILocalVariable(name: "list", arg: 1, scope: !8893, file: !955, line: 219, type: !8800)
!8896 = !DILocalVariable(name: "node", arg: 2, scope: !8893, file: !955, line: 219, type: !1125)
!8897 = !DILocation(line: 0, scope: !8893)
!8898 = !DILocation(line: 221, column: 8, scope: !8893)
!8899 = !DILocation(line: 221, column: 13, scope: !8893)
!8900 = !DILocation(line: 222, column: 1, scope: !8893)
!8901 = distinct !DISubprogram(name: "sys_slist_remove", scope: !955, file: !955, line: 401, type: !8902, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !879, retainedNodes: !8904)
!8902 = !DISubroutineType(types: !8903)
!8903 = !{null, !8800, !1125, !1125}
!8904 = !{!8905, !8906, !8907}
!8905 = !DILocalVariable(name: "list", arg: 1, scope: !8901, file: !955, line: 401, type: !8800)
!8906 = !DILocalVariable(name: "prev_node", arg: 2, scope: !8901, file: !955, line: 401, type: !1125)
!8907 = !DILocalVariable(name: "node", arg: 3, scope: !8901, file: !955, line: 401, type: !1125)
!8908 = !DILocation(line: 0, scope: !8901)
!8909 = !DILocation(line: 401, column: 1, scope: !8910)
!8910 = distinct !DILexicalBlock(scope: !8901, file: !955, line: 401, column: 1)
!8911 = !DILocation(line: 0, scope: !8910)
!8912 = !DILocation(line: 401, column: 1, scope: !8901)
!8913 = !DILocation(line: 401, column: 1, scope: !8914)
!8914 = distinct !DILexicalBlock(scope: !8910, file: !955, line: 401, column: 1)
!8915 = !DILocation(line: 401, column: 1, scope: !8916)
!8916 = distinct !DILexicalBlock(scope: !8914, file: !955, line: 401, column: 1)
!8917 = !DILocation(line: 401, column: 1, scope: !8918)
!8918 = distinct !DILexicalBlock(scope: !8916, file: !955, line: 401, column: 1)
!8919 = !DILocation(line: 401, column: 1, scope: !8920)
!8920 = distinct !DILexicalBlock(scope: !8910, file: !955, line: 401, column: 1)
!8921 = !DILocation(line: 401, column: 1, scope: !8922)
!8922 = distinct !DILexicalBlock(scope: !8920, file: !955, line: 401, column: 1)
!8923 = !DILocation(line: 401, column: 1, scope: !8924)
!8924 = distinct !DILexicalBlock(scope: !8922, file: !955, line: 401, column: 1)
!8925 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !955, file: !955, line: 285, type: !8926, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !879, retainedNodes: !8928)
!8926 = !DISubroutineType(types: !8927)
!8927 = !{!1125, !1125}
!8928 = !{!8929}
!8929 = !DILocalVariable(name: "node", arg: 1, scope: !8925, file: !955, line: 285, type: !1125)
!8930 = !DILocation(line: 0, scope: !8925)
!8931 = !DILocation(line: 285, column: 1, scope: !8925)
!8932 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !955, file: !955, line: 274, type: !8926, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !879, retainedNodes: !8933)
!8933 = !{!8934}
!8934 = !DILocalVariable(name: "node", arg: 1, scope: !8932, file: !955, line: 274, type: !1125)
!8935 = !DILocation(line: 0, scope: !8932)
!8936 = !DILocation(line: 274, column: 1, scope: !8932)
!8937 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !955, file: !955, line: 204, type: !8926, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !879, retainedNodes: !8938)
!8938 = !{!8939}
!8939 = !DILocalVariable(name: "node", arg: 1, scope: !8937, file: !955, line: 204, type: !1125)
!8940 = !DILocation(line: 0, scope: !8937)
!8941 = !DILocation(line: 206, column: 15, scope: !8937)
!8942 = !DILocation(line: 206, column: 2, scope: !8937)
!8943 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1049, file: !1049, line: 342, type: !129, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !879, retainedNodes: !8944)
!8944 = !{!8945, !8946, !8947}
!8945 = !DILocalVariable(name: "pin", arg: 1, scope: !8943, file: !1049, line: 342, type: !103)
!8946 = !DILocalVariable(name: "line", scope: !8943, file: !1049, line: 344, type: !137)
!8947 = !DILocalVariable(name: "port", scope: !8943, file: !1049, line: 345, type: !103)
!8948 = !DILocation(line: 0, scope: !8943)
!8949 = !DILocation(line: 344, column: 18, scope: !8943)
!8950 = !{i32 983040, i32 0}
!8951 = !DILocation(line: 356, column: 9, scope: !8943)
!8952 = !DILocation(line: 370, column: 2, scope: !8943)
!8953 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1049, file: !1049, line: 37, type: !594, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !879, retainedNodes: !8954)
!8954 = !{!8955, !8956, !8957}
!8955 = !DILocalVariable(name: "line", arg: 1, scope: !8953, file: !1049, line: 37, type: !103)
!8956 = !DILocalVariable(name: "arg", arg: 2, scope: !8953, file: !1049, line: 37, type: !102)
!8957 = !DILocalVariable(name: "data", scope: !8953, file: !1049, line: 39, type: !8748)
!8958 = !DILocation(line: 0, scope: !8953)
!8959 = !DILocation(line: 41, column: 29, scope: !8953)
!8960 = !DILocation(line: 41, column: 39, scope: !8953)
!8961 = !DILocation(line: 41, column: 44, scope: !8953)
!8962 = !DILocation(line: 41, column: 2, scope: !8953)
!8963 = !DILocation(line: 42, column: 1, scope: !8953)
!8964 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1049, file: !1049, line: 376, type: !8965, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !879, retainedNodes: !8967)
!8965 = !DISubroutineType(types: !8966)
!8966 = !{!103, !103, !103}
!8967 = !{!8968, !8969, !8970, !8972, !8973}
!8968 = !DILocalVariable(name: "port", arg: 1, scope: !8964, file: !1049, line: 376, type: !103)
!8969 = !DILocalVariable(name: "pin", arg: 2, scope: !8964, file: !1049, line: 376, type: !103)
!8970 = !DILocalVariable(name: "clk", scope: !8964, file: !1049, line: 386, type: !8971)
!8971 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !908)
!8972 = !DILocalVariable(name: "pclken", scope: !8964, file: !1049, line: 387, type: !1168)
!8973 = !DILocalVariable(name: "ret", scope: !8964, file: !1049, line: 396, type: !103)
!8974 = !DILocation(line: 0, scope: !8964)
!8975 = !DILocation(line: 387, column: 2, scope: !8964)
!8976 = !DILocation(line: 387, column: 22, scope: !8964)
!8977 = !DILocation(line: 399, column: 8, scope: !8964)
!8978 = !DILocation(line: 400, column: 10, scope: !8979)
!8979 = distinct !DILexicalBlock(scope: !8964, file: !1049, line: 400, column: 6)
!8980 = !DILocation(line: 400, column: 6, scope: !8964)
!8981 = !DILocation(line: 405, column: 2, scope: !8964)
!8982 = !DILocation(line: 407, column: 2, scope: !8964)
!8983 = !DILocation(line: 408, column: 1, scope: !8964)
!8984 = distinct !DISubprogram(name: "clock_control_on", scope: !685, file: !685, line: 123, type: !1014, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !879, retainedNodes: !8985)
!8985 = !{!8986, !8987, !8988}
!8986 = !DILocalVariable(name: "dev", arg: 1, scope: !8984, file: !685, line: 123, type: !908)
!8987 = !DILocalVariable(name: "sys", arg: 2, scope: !8984, file: !685, line: 124, type: !779)
!8988 = !DILocalVariable(name: "api", scope: !8984, file: !685, line: 126, type: !1007)
!8989 = !DILocation(line: 0, scope: !8984)
!8990 = !DILocation(line: 127, column: 49, scope: !8984)
!8991 = !DILocation(line: 129, column: 14, scope: !8984)
!8992 = !DILocation(line: 129, column: 9, scope: !8984)
!8993 = !DILocation(line: 129, column: 2, scope: !8984)
!8994 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1049, file: !1049, line: 311, type: !8113, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !879, retainedNodes: !8995)
!8995 = !{!8996, !8997, !8998}
!8996 = !DILocalVariable(name: "port", arg: 1, scope: !8994, file: !1049, line: 311, type: !103)
!8997 = !DILocalVariable(name: "pin", arg: 2, scope: !8994, file: !1049, line: 311, type: !103)
!8998 = !DILocalVariable(name: "line", scope: !8994, file: !1049, line: 313, type: !137)
!8999 = !DILocation(line: 0, scope: !8994)
!9000 = !DILocation(line: 313, column: 18, scope: !8994)
!9001 = !DILocation(line: 337, column: 2, scope: !8994)
!9002 = !DILocation(line: 340, column: 1, scope: !8994)
!9003 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1049, file: !1049, line: 295, type: !9004, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !879, retainedNodes: !9006)
!9004 = !DISubroutineType(types: !9005)
!9005 = !{!137, !103}
!9006 = !{!9007}
!9007 = !DILocalVariable(name: "pin", arg: 1, scope: !9003, file: !1049, line: 295, type: !103)
!9008 = !DILocation(line: 0, scope: !9003)
!9009 = !DILocation(line: 307, column: 46, scope: !9003)
!9010 = !DILocation(line: 307, column: 27, scope: !9003)
!9011 = !DILocation(line: 307, column: 32, scope: !9003)
!9012 = !DILocation(line: 307, column: 14, scope: !9003)
!9013 = !DILocation(line: 307, column: 39, scope: !9003)
!9014 = !DILocation(line: 307, column: 2, scope: !9003)
!9015 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !6169, file: !6169, line: 671, type: !9016, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !879, retainedNodes: !9018)
!9016 = !DISubroutineType(types: !9017)
!9017 = !{null, !137, !137}
!9018 = !{!9019, !9020}
!9019 = !DILocalVariable(name: "Port", arg: 1, scope: !9015, file: !6169, line: 671, type: !137)
!9020 = !DILocalVariable(name: "Line", arg: 2, scope: !9015, file: !6169, line: 671, type: !137)
!9021 = !DILocation(line: 0, scope: !9015)
!9022 = !DILocation(line: 673, column: 3, scope: !9015)
!9023 = !DILocalVariable(name: "value", arg: 1, scope: !9024, file: !6322, line: 373, type: !137)
!9024 = distinct !DISubprogram(name: "__RBIT", scope: !6322, file: !6322, line: 373, type: !7327, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !879, retainedNodes: !9025)
!9025 = !{!9023, !9026}
!9026 = !DILocalVariable(name: "result", scope: !9024, file: !6322, line: 375, type: !137)
!9027 = !DILocation(line: 0, scope: !9024, inlinedAt: !9028)
!9028 = distinct !DILocation(line: 673, column: 3, scope: !9015)
!9029 = !DILocation(line: 380, column: 4, scope: !9024, inlinedAt: !9028)
!9030 = !{i64 2917470}
!9031 = !DILocalVariable(name: "value", arg: 1, scope: !9032, file: !6322, line: 403, type: !137)
!9032 = distinct !DISubprogram(name: "__CLZ", scope: !6322, file: !6322, line: 403, type: !9033, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !879, retainedNodes: !9035)
!9033 = !DISubroutineType(types: !9034)
!9034 = !{!208, !137}
!9035 = !{!9031}
!9036 = !DILocation(line: 0, scope: !9032, inlinedAt: !9037)
!9037 = distinct !DILocation(line: 673, column: 3, scope: !9015)
!9038 = !DILocation(line: 414, column: 7, scope: !9032, inlinedAt: !9037)
!9039 = !DILocation(line: 674, column: 1, scope: !9015)
!9040 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !8797, file: !8797, line: 69, type: !9041, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !879, retainedNodes: !9043)
!9041 = !DISubroutineType(types: !9042)
!9042 = !{null, !8800, !908, !137}
!9043 = !{!9044, !9045, !9046, !9047, !9048}
!9044 = !DILocalVariable(name: "list", arg: 1, scope: !9040, file: !8797, line: 69, type: !8800)
!9045 = !DILocalVariable(name: "port", arg: 2, scope: !9040, file: !8797, line: 70, type: !908)
!9046 = !DILocalVariable(name: "pins", arg: 3, scope: !9040, file: !8797, line: 71, type: !137)
!9047 = !DILocalVariable(name: "cb", scope: !9040, file: !8797, line: 73, type: !950)
!9048 = !DILocalVariable(name: "tmp", scope: !9040, file: !8797, line: 73, type: !950)
!9049 = !DILocation(line: 0, scope: !9040)
!9050 = !DILocation(line: 75, column: 2, scope: !9051)
!9051 = distinct !DILexicalBlock(scope: !9040, file: !8797, line: 75, column: 2)
!9052 = !DILocation(line: 0, scope: !9051)
!9053 = !DILocation(line: 76, column: 11, scope: !9054)
!9054 = distinct !DILexicalBlock(scope: !9055, file: !8797, line: 76, column: 7)
!9055 = distinct !DILexicalBlock(scope: !9056, file: !8797, line: 75, column: 57)
!9056 = distinct !DILexicalBlock(scope: !9051, file: !8797, line: 75, column: 2)
!9057 = !DILocation(line: 76, column: 20, scope: !9054)
!9058 = !DILocation(line: 76, column: 7, scope: !9055)
!9059 = !DILocation(line: 78, column: 8, scope: !9060)
!9060 = distinct !DILexicalBlock(scope: !9054, file: !8797, line: 76, column: 28)
!9061 = !DILocation(line: 78, column: 4, scope: !9060)
!9062 = !DILocation(line: 79, column: 3, scope: !9060)
!9063 = !DILocation(line: 75, column: 2, scope: !9056)
!9064 = !DILocation(line: 81, column: 1, scope: !9040)
!9065 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !6169, file: !6169, line: 710, type: !7327, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !879, retainedNodes: !9066)
!9066 = !{!9067}
!9067 = !DILocalVariable(name: "Line", arg: 1, scope: !9065, file: !6169, line: 710, type: !137)
!9068 = !DILocation(line: 0, scope: !9065)
!9069 = !DILocation(line: 712, column: 21, scope: !9065)
!9070 = !DILocation(line: 0, scope: !9024, inlinedAt: !9071)
!9071 = distinct !DILocation(line: 712, column: 76, scope: !9065)
!9072 = !DILocation(line: 380, column: 4, scope: !9024, inlinedAt: !9071)
!9073 = !DILocation(line: 0, scope: !9032, inlinedAt: !9074)
!9074 = distinct !DILocation(line: 712, column: 76, scope: !9065)
!9075 = !DILocation(line: 414, column: 7, scope: !9032, inlinedAt: !9074)
!9076 = !DILocation(line: 712, column: 73, scope: !9065)
!9077 = !DILocation(line: 712, column: 3, scope: !9065)
!9078 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !9079, file: !9079, line: 910, type: !9080, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !879, retainedNodes: !9082)
!9079 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9080 = !DISubroutineType(types: !9081)
!9081 = !{null, !981, !137}
!9082 = !{!9083, !9084}
!9083 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9078, file: !9079, line: 910, type: !981)
!9084 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9078, file: !9079, line: 910, type: !137)
!9085 = !DILocation(line: 0, scope: !9078)
!9086 = !DILocation(line: 912, column: 3, scope: !9078)
!9087 = !DILocation(line: 913, column: 1, scope: !9078)
!9088 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !9079, file: !9079, line: 823, type: !9089, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !879, retainedNodes: !9091)
!9089 = !DISubroutineType(types: !9090)
!9090 = !{!137, !981}
!9091 = !{!9092}
!9092 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9088, file: !9079, line: 823, type: !981)
!9093 = !DILocation(line: 0, scope: !9088)
!9094 = !DILocation(line: 825, column: 21, scope: !9088)
!9095 = !DILocation(line: 825, column: 3, scope: !9088)
!9096 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !9079, file: !9079, line: 812, type: !9080, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !879, retainedNodes: !9097)
!9097 = !{!9098, !9099}
!9098 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9096, file: !9079, line: 812, type: !981)
!9099 = !DILocalVariable(name: "PortValue", arg: 2, scope: !9096, file: !9079, line: 812, type: !137)
!9100 = !DILocation(line: 0, scope: !9096)
!9101 = !DILocation(line: 814, column: 3, scope: !9096)
!9102 = !DILocation(line: 815, column: 1, scope: !9096)
!9103 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !9079, file: !9079, line: 771, type: !9089, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !879, retainedNodes: !9104)
!9104 = !{!9105}
!9105 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9103, file: !9079, line: 771, type: !981)
!9106 = !DILocation(line: 0, scope: !9103)
!9107 = !DILocation(line: 773, column: 21, scope: !9103)
!9108 = !DILocation(line: 773, column: 3, scope: !9103)
!9109 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1049, file: !1049, line: 47, type: !9110, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !879, retainedNodes: !9112)
!9110 = !DISubroutineType(types: !9111)
!9111 = !{!103, !924, !2297}
!9112 = !{!9113, !9114}
!9113 = !DILocalVariable(name: "flags", arg: 1, scope: !9109, file: !1049, line: 47, type: !924)
!9114 = !DILocalVariable(name: "pincfg", arg: 2, scope: !9109, file: !1049, line: 47, type: !2297)
!9115 = !DILocation(line: 0, scope: !9109)
!9116 = !DILocation(line: 50, column: 13, scope: !9117)
!9117 = distinct !DILexicalBlock(scope: !9109, file: !1049, line: 50, column: 6)
!9118 = !DILocation(line: 50, column: 28, scope: !9117)
!9119 = !DILocation(line: 50, column: 6, scope: !9109)
!9120 = !DILocation(line: 53, column: 11, scope: !9121)
!9121 = distinct !DILexicalBlock(scope: !9117, file: !1049, line: 50, column: 34)
!9122 = !DILocation(line: 55, column: 14, scope: !9123)
!9123 = distinct !DILexicalBlock(scope: !9121, file: !1049, line: 55, column: 7)
!9124 = !DILocation(line: 55, column: 35, scope: !9123)
!9125 = !DILocation(line: 55, column: 7, scope: !9121)
!9126 = !DILocation(line: 56, column: 14, scope: !9127)
!9127 = distinct !DILexicalBlock(scope: !9128, file: !1049, line: 56, column: 8)
!9128 = distinct !DILexicalBlock(scope: !9123, file: !1049, line: 55, column: 41)
!9129 = !DILocation(line: 56, column: 8, scope: !9128)
!9130 = !DILocation(line: 0, scope: !9123)
!9131 = !DILocation(line: 66, column: 14, scope: !9132)
!9132 = distinct !DILexicalBlock(scope: !9121, file: !1049, line: 66, column: 7)
!9133 = !DILocation(line: 66, column: 30, scope: !9132)
!9134 = !DILocation(line: 66, column: 7, scope: !9121)
!9135 = !DILocation(line: 67, column: 12, scope: !9136)
!9136 = distinct !DILexicalBlock(scope: !9132, file: !1049, line: 66, column: 36)
!9137 = !DILocation(line: 68, column: 3, scope: !9136)
!9138 = !DILocation(line: 68, column: 21, scope: !9139)
!9139 = distinct !DILexicalBlock(scope: !9132, file: !1049, line: 68, column: 14)
!9140 = !DILocation(line: 68, column: 39, scope: !9139)
!9141 = !DILocation(line: 68, column: 14, scope: !9132)
!9142 = !DILocation(line: 69, column: 12, scope: !9143)
!9143 = distinct !DILexicalBlock(scope: !9139, file: !1049, line: 68, column: 45)
!9144 = !DILocation(line: 70, column: 3, scope: !9143)
!9145 = !DILocation(line: 72, column: 21, scope: !9146)
!9146 = distinct !DILexicalBlock(scope: !9117, file: !1049, line: 72, column: 14)
!9147 = !DILocation(line: 72, column: 35, scope: !9146)
!9148 = !DILocation(line: 72, column: 14, scope: !9117)
!9149 = !DILocation(line: 77, column: 14, scope: !9150)
!9150 = distinct !DILexicalBlock(scope: !9151, file: !1049, line: 77, column: 7)
!9151 = distinct !DILexicalBlock(scope: !9146, file: !1049, line: 72, column: 41)
!9152 = !DILocation(line: 77, column: 30, scope: !9150)
!9153 = !DILocation(line: 77, column: 7, scope: !9151)
!9154 = !DILocation(line: 0, scope: !9117)
!9155 = !DILocation(line: 90, column: 1, scope: !9109)
!9156 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1049, file: !1049, line: 157, type: !9157, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !879, retainedNodes: !9159)
!9157 = !DISubroutineType(types: !9158)
!9158 = !{null, !908, !103, !103, !103}
!9159 = !{!9160, !9161, !9162, !9163, !9164, !9165, !9166, !9167, !9168, !9169, !9170}
!9160 = !DILocalVariable(name: "dev", arg: 1, scope: !9156, file: !1049, line: 157, type: !908)
!9161 = !DILocalVariable(name: "pin", arg: 2, scope: !9156, file: !1049, line: 157, type: !103)
!9162 = !DILocalVariable(name: "conf", arg: 3, scope: !9156, file: !1049, line: 158, type: !103)
!9163 = !DILocalVariable(name: "func", arg: 4, scope: !9156, file: !1049, line: 158, type: !103)
!9164 = !DILocalVariable(name: "cfg", scope: !9156, file: !1049, line: 160, type: !8681)
!9165 = !DILocalVariable(name: "gpio", scope: !9156, file: !1049, line: 161, type: !981)
!9166 = !DILocalVariable(name: "pin_ll", scope: !9156, file: !1049, line: 163, type: !103)
!9167 = !DILocalVariable(name: "mode", scope: !9156, file: !1049, line: 227, type: !32)
!9168 = !DILocalVariable(name: "otype", scope: !9156, file: !1049, line: 227, type: !32)
!9169 = !DILocalVariable(name: "ospeed", scope: !9156, file: !1049, line: 227, type: !32)
!9170 = !DILocalVariable(name: "pupd", scope: !9156, file: !1049, line: 227, type: !32)
!9171 = !DILocation(line: 0, scope: !9156)
!9172 = !DILocation(line: 160, column: 45, scope: !9156)
!9173 = !DILocation(line: 161, column: 44, scope: !9156)
!9174 = !DILocation(line: 163, column: 15, scope: !9156)
!9175 = !DILocation(line: 229, column: 14, scope: !9156)
!9176 = !DILocation(line: 246, column: 47, scope: !9156)
!9177 = !DILocation(line: 246, column: 2, scope: !9156)
!9178 = !DILocation(line: 248, column: 43, scope: !9156)
!9179 = !DILocation(line: 248, column: 2, scope: !9156)
!9180 = !DILocation(line: 250, column: 40, scope: !9156)
!9181 = !DILocation(line: 250, column: 2, scope: !9156)
!9182 = !DILocation(line: 252, column: 11, scope: !9183)
!9183 = distinct !DILexicalBlock(scope: !9156, file: !1049, line: 252, column: 6)
!9184 = !DILocation(line: 252, column: 6, scope: !9156)
!9185 = !DILocation(line: 253, column: 11, scope: !9186)
!9186 = distinct !DILexicalBlock(scope: !9187, file: !1049, line: 253, column: 7)
!9187 = distinct !DILexicalBlock(scope: !9183, file: !1049, line: 252, column: 36)
!9188 = !DILocation(line: 253, column: 7, scope: !9187)
!9189 = !DILocation(line: 254, column: 4, scope: !9190)
!9190 = distinct !DILexicalBlock(scope: !9186, file: !1049, line: 253, column: 16)
!9191 = !DILocation(line: 255, column: 3, scope: !9190)
!9192 = !DILocation(line: 256, column: 4, scope: !9193)
!9193 = distinct !DILexicalBlock(scope: !9186, file: !1049, line: 255, column: 10)
!9194 = !DILocation(line: 260, column: 40, scope: !9156)
!9195 = !DILocation(line: 260, column: 2, scope: !9156)
!9196 = !DILocation(line: 265, column: 1, scope: !9156)
!9197 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1049, file: !1049, line: 137, type: !9004, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !879, retainedNodes: !9198)
!9198 = !{!9199, !9200}
!9199 = !DILocalVariable(name: "pin", arg: 1, scope: !9197, file: !1049, line: 137, type: !103)
!9200 = !DILocalVariable(name: "pinval", scope: !9197, file: !1049, line: 139, type: !137)
!9201 = !DILocation(line: 0, scope: !9197)
!9202 = !DILocation(line: 149, column: 13, scope: !9197)
!9203 = !DILocation(line: 151, column: 2, scope: !9197)
!9204 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !9079, file: !9079, line: 342, type: !9205, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !879, retainedNodes: !9207)
!9205 = !DISubroutineType(types: !9206)
!9206 = !{null, !981, !137, !137}
!9207 = !{!9208, !9209, !9210}
!9208 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9204, file: !9079, line: 342, type: !981)
!9209 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9204, file: !9079, line: 342, type: !137)
!9210 = !DILocalVariable(name: "OutputType", arg: 3, scope: !9204, file: !9079, line: 342, type: !137)
!9211 = !DILocation(line: 0, scope: !9204)
!9212 = !DILocation(line: 344, column: 3, scope: !9204)
!9213 = !DILocation(line: 345, column: 1, scope: !9204)
!9214 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !9079, file: !9079, line: 413, type: !9205, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !879, retainedNodes: !9215)
!9215 = !{!9216, !9217, !9218}
!9216 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9214, file: !9079, line: 413, type: !981)
!9217 = !DILocalVariable(name: "Pin", arg: 2, scope: !9214, file: !9079, line: 413, type: !137)
!9218 = !DILocalVariable(name: "Speed", arg: 3, scope: !9214, file: !9079, line: 413, type: !137)
!9219 = !DILocation(line: 0, scope: !9214)
!9220 = !DILocation(line: 415, column: 3, scope: !9214)
!9221 = !DILocation(line: 0, scope: !9024, inlinedAt: !9222)
!9222 = distinct !DILocation(line: 415, column: 3, scope: !9214)
!9223 = !DILocation(line: 380, column: 4, scope: !9024, inlinedAt: !9222)
!9224 = !DILocation(line: 0, scope: !9032, inlinedAt: !9225)
!9225 = distinct !DILocation(line: 415, column: 3, scope: !9214)
!9226 = !DILocation(line: 414, column: 7, scope: !9032, inlinedAt: !9225)
!9227 = !DILocation(line: 0, scope: !9024, inlinedAt: !9228)
!9228 = distinct !DILocation(line: 415, column: 3, scope: !9214)
!9229 = !DILocation(line: 0, scope: !9032, inlinedAt: !9230)
!9230 = distinct !DILocation(line: 415, column: 3, scope: !9214)
!9231 = !DILocation(line: 417, column: 1, scope: !9214)
!9232 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !9079, file: !9079, line: 484, type: !9205, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !879, retainedNodes: !9233)
!9233 = !{!9234, !9235, !9236}
!9234 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9232, file: !9079, line: 484, type: !981)
!9235 = !DILocalVariable(name: "Pin", arg: 2, scope: !9232, file: !9079, line: 484, type: !137)
!9236 = !DILocalVariable(name: "Pull", arg: 3, scope: !9232, file: !9079, line: 484, type: !137)
!9237 = !DILocation(line: 0, scope: !9232)
!9238 = !DILocation(line: 486, column: 3, scope: !9232)
!9239 = !DILocation(line: 0, scope: !9024, inlinedAt: !9240)
!9240 = distinct !DILocation(line: 486, column: 3, scope: !9232)
!9241 = !DILocation(line: 380, column: 4, scope: !9024, inlinedAt: !9240)
!9242 = !DILocation(line: 0, scope: !9032, inlinedAt: !9243)
!9243 = distinct !DILocation(line: 486, column: 3, scope: !9232)
!9244 = !DILocation(line: 414, column: 7, scope: !9032, inlinedAt: !9243)
!9245 = !DILocation(line: 0, scope: !9024, inlinedAt: !9246)
!9246 = distinct !DILocation(line: 486, column: 3, scope: !9232)
!9247 = !DILocation(line: 0, scope: !9032, inlinedAt: !9248)
!9248 = distinct !DILocation(line: 486, column: 3, scope: !9232)
!9249 = !DILocation(line: 487, column: 1, scope: !9232)
!9250 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !9079, file: !9079, line: 556, type: !9205, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !879, retainedNodes: !9251)
!9251 = !{!9252, !9253, !9254}
!9252 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9250, file: !9079, line: 556, type: !981)
!9253 = !DILocalVariable(name: "Pin", arg: 2, scope: !9250, file: !9079, line: 556, type: !137)
!9254 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9250, file: !9079, line: 556, type: !137)
!9255 = !DILocation(line: 0, scope: !9250)
!9256 = !DILocation(line: 558, column: 3, scope: !9250)
!9257 = !DILocation(line: 0, scope: !9024, inlinedAt: !9258)
!9258 = distinct !DILocation(line: 558, column: 3, scope: !9250)
!9259 = !DILocation(line: 380, column: 4, scope: !9024, inlinedAt: !9258)
!9260 = !DILocation(line: 0, scope: !9032, inlinedAt: !9261)
!9261 = distinct !DILocation(line: 558, column: 3, scope: !9250)
!9262 = !DILocation(line: 414, column: 7, scope: !9032, inlinedAt: !9261)
!9263 = !DILocation(line: 0, scope: !9024, inlinedAt: !9264)
!9264 = distinct !DILocation(line: 558, column: 3, scope: !9250)
!9265 = !DILocation(line: 0, scope: !9032, inlinedAt: !9266)
!9266 = distinct !DILocation(line: 558, column: 3, scope: !9250)
!9267 = !DILocation(line: 560, column: 1, scope: !9250)
!9268 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !9079, file: !9079, line: 633, type: !9205, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !879, retainedNodes: !9269)
!9269 = !{!9270, !9271, !9272}
!9270 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9268, file: !9079, line: 633, type: !981)
!9271 = !DILocalVariable(name: "Pin", arg: 2, scope: !9268, file: !9079, line: 633, type: !137)
!9272 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9268, file: !9079, line: 633, type: !137)
!9273 = !DILocation(line: 0, scope: !9268)
!9274 = !DILocation(line: 635, column: 3, scope: !9268)
!9275 = !DILocation(line: 0, scope: !9024, inlinedAt: !9276)
!9276 = distinct !DILocation(line: 635, column: 3, scope: !9268)
!9277 = !DILocation(line: 380, column: 4, scope: !9024, inlinedAt: !9276)
!9278 = !DILocation(line: 0, scope: !9032, inlinedAt: !9279)
!9279 = distinct !DILocation(line: 635, column: 3, scope: !9268)
!9280 = !DILocation(line: 414, column: 7, scope: !9032, inlinedAt: !9279)
!9281 = !DILocation(line: 0, scope: !9024, inlinedAt: !9282)
!9282 = distinct !DILocation(line: 635, column: 3, scope: !9268)
!9283 = !DILocation(line: 0, scope: !9032, inlinedAt: !9284)
!9284 = distinct !DILocation(line: 635, column: 3, scope: !9268)
!9285 = !DILocation(line: 637, column: 1, scope: !9268)
!9286 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !9079, file: !9079, line: 273, type: !9205, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !879, retainedNodes: !9287)
!9287 = !{!9288, !9289, !9290}
!9288 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9286, file: !9079, line: 273, type: !981)
!9289 = !DILocalVariable(name: "Pin", arg: 2, scope: !9286, file: !9079, line: 273, type: !137)
!9290 = !DILocalVariable(name: "Mode", arg: 3, scope: !9286, file: !9079, line: 273, type: !137)
!9291 = !DILocation(line: 0, scope: !9286)
!9292 = !DILocation(line: 275, column: 3, scope: !9286)
!9293 = !DILocation(line: 0, scope: !9024, inlinedAt: !9294)
!9294 = distinct !DILocation(line: 275, column: 3, scope: !9286)
!9295 = !DILocation(line: 380, column: 4, scope: !9024, inlinedAt: !9294)
!9296 = !DILocation(line: 0, scope: !9032, inlinedAt: !9297)
!9297 = distinct !DILocation(line: 275, column: 3, scope: !9286)
!9298 = !DILocation(line: 414, column: 7, scope: !9032, inlinedAt: !9297)
!9299 = !DILocation(line: 0, scope: !9024, inlinedAt: !9300)
!9300 = distinct !DILocation(line: 275, column: 3, scope: !9286)
!9301 = !DILocation(line: 0, scope: !9032, inlinedAt: !9302)
!9302 = distinct !DILocation(line: 275, column: 3, scope: !9286)
!9303 = !DILocation(line: 276, column: 1, scope: !9286)
!9304 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1049, file: !1049, line: 698, type: !1062, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !879, retainedNodes: !9305)
!9305 = !{!9306, !9307, !9308}
!9306 = !DILocalVariable(name: "dev", arg: 1, scope: !9304, file: !1049, line: 698, type: !908)
!9307 = !DILocalVariable(name: "data", scope: !9304, file: !1049, line: 700, type: !8748)
!9308 = !DILocalVariable(name: "ret", scope: !9304, file: !1049, line: 701, type: !103)
!9309 = !DILocation(line: 0, scope: !9304)
!9310 = !DILocation(line: 700, column: 38, scope: !9304)
!9311 = !DILocation(line: 703, column: 8, scope: !9304)
!9312 = !DILocation(line: 703, column: 12, scope: !9304)
!9313 = !DILocation(line: 705, column: 7, scope: !9314)
!9314 = distinct !DILexicalBlock(scope: !9304, file: !1049, line: 705, column: 6)
!9315 = !DILocation(line: 705, column: 6, scope: !9304)
!9316 = !DILocation(line: 722, column: 8, scope: !9304)
!9317 = !DILocation(line: 723, column: 10, scope: !9318)
!9318 = distinct !DILexicalBlock(scope: !9304, file: !1049, line: 723, column: 6)
!9319 = !DILocation(line: 723, column: 6, scope: !9304)
!9320 = !DILocation(line: 731, column: 1, scope: !9304)
!9321 = distinct !DISubprogram(name: "device_is_ready", scope: !8528, file: !8528, line: 47, type: !9322, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !879, retainedNodes: !9324)
!9322 = !DISubroutineType(types: !9323)
!9323 = !{!211, !908}
!9324 = !{!9325}
!9325 = !DILocalVariable(name: "dev", arg: 1, scope: !9321, file: !8528, line: 47, type: !908)
!9326 = !DILocation(line: 0, scope: !9321)
!9327 = !DILocation(line: 55, column: 2, scope: !9328)
!9328 = distinct !DILexicalBlock(scope: !9321, file: !8528, line: 55, column: 2)
!9329 = !{i64 2154355809}
!9330 = !DILocation(line: 56, column: 9, scope: !9321)
!9331 = !DILocation(line: 56, column: 2, scope: !9321)
!9332 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1049, file: !1049, line: 270, type: !9333, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !879, retainedNodes: !9335)
!9333 = !DISubroutineType(types: !9334)
!9334 = !{!103, !908, !211}
!9335 = !{!9336, !9337, !9338, !9339, !9340}
!9336 = !DILocalVariable(name: "dev", arg: 1, scope: !9332, file: !1049, line: 270, type: !908)
!9337 = !DILocalVariable(name: "on", arg: 2, scope: !9332, file: !1049, line: 270, type: !211)
!9338 = !DILocalVariable(name: "cfg", scope: !9332, file: !1049, line: 272, type: !8681)
!9339 = !DILocalVariable(name: "ret", scope: !9332, file: !1049, line: 273, type: !103)
!9340 = !DILocalVariable(name: "clk", scope: !9332, file: !1049, line: 278, type: !8971)
!9341 = !DILocation(line: 0, scope: !9332)
!9342 = !DILocation(line: 272, column: 45, scope: !9332)
!9343 = !DILocation(line: 282, column: 38, scope: !9344)
!9344 = distinct !DILexicalBlock(scope: !9345, file: !1049, line: 280, column: 10)
!9345 = distinct !DILexicalBlock(scope: !9332, file: !1049, line: 280, column: 6)
!9346 = !DILocation(line: 282, column: 6, scope: !9344)
!9347 = !DILocation(line: 281, column: 9, scope: !9344)
!9348 = !DILocation(line: 293, column: 1, scope: !9332)
!9349 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !196, file: !196, line: 730, type: !9322, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !879, retainedNodes: !9350)
!9350 = !{!9351}
!9351 = !DILocalVariable(name: "dev", arg: 1, scope: !9349, file: !196, line: 730, type: !908)
!9352 = !DILocation(line: 0, scope: !9349)
!9353 = !DILocation(line: 732, column: 9, scope: !9349)
!9354 = !DILocation(line: 732, column: 2, scope: !9349)
!9355 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1049, file: !1049, line: 496, type: !9356, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !879, retainedNodes: !9358)
!9356 = !DISubroutineType(types: !9357)
!9357 = !{!103, !908, !103, !103, !103}
!9358 = !{!9359, !9360, !9361, !9362, !9363, !9364}
!9359 = !DILocalVariable(name: "dev", arg: 1, scope: !9355, file: !1049, line: 496, type: !908)
!9360 = !DILocalVariable(name: "pin", arg: 2, scope: !9355, file: !1049, line: 496, type: !103)
!9361 = !DILocalVariable(name: "conf", arg: 3, scope: !9355, file: !1049, line: 496, type: !103)
!9362 = !DILocalVariable(name: "func", arg: 4, scope: !9355, file: !1049, line: 496, type: !103)
!9363 = !DILocalVariable(name: "ret", scope: !9355, file: !1049, line: 498, type: !103)
!9364 = !DILocalVariable(name: "gpio_out", scope: !9365, file: !1049, line: 508, type: !137)
!9365 = distinct !DILexicalBlock(scope: !9366, file: !1049, line: 507, column: 27)
!9366 = distinct !DILexicalBlock(scope: !9355, file: !1049, line: 507, column: 6)
!9367 = !DILocation(line: 0, scope: !9355)
!9368 = !DILocation(line: 505, column: 2, scope: !9355)
!9369 = !DILocation(line: 507, column: 11, scope: !9366)
!9370 = !DILocation(line: 507, column: 6, scope: !9355)
!9371 = !DILocation(line: 508, column: 28, scope: !9365)
!9372 = !DILocation(line: 0, scope: !9365)
!9373 = !DILocation(line: 510, column: 16, scope: !9374)
!9374 = distinct !DILexicalBlock(scope: !9365, file: !1049, line: 510, column: 7)
!9375 = !DILocation(line: 0, scope: !9374)
!9376 = !DILocation(line: 510, column: 7, scope: !9365)
!9377 = !DILocation(line: 511, column: 4, scope: !9378)
!9378 = distinct !DILexicalBlock(scope: !9374, file: !1049, line: 510, column: 32)
!9379 = !DILocation(line: 512, column: 3, scope: !9378)
!9380 = !DILocation(line: 513, column: 4, scope: !9381)
!9381 = distinct !DILexicalBlock(scope: !9382, file: !1049, line: 512, column: 39)
!9382 = distinct !DILexicalBlock(scope: !9374, file: !1049, line: 512, column: 14)
!9383 = !DILocation(line: 514, column: 3, scope: !9381)
!9384 = !DILocation(line: 518, column: 1, scope: !9355)
!9385 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1325, file: !1325, line: 526, type: !1228, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !9386)
!9386 = !{!9387, !9388, !9389}
!9387 = !DILocalVariable(name: "dev", arg: 1, scope: !9385, file: !1325, line: 526, type: !1230)
!9388 = !DILocalVariable(name: "c", arg: 2, scope: !9385, file: !1325, line: 526, type: !840)
!9389 = !DILocalVariable(name: "config", scope: !9385, file: !1325, line: 528, type: !9390)
!9390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1402, size: 32)
!9391 = !DILocation(line: 0, scope: !9385)
!9392 = !DILocation(line: 528, column: 48, scope: !9385)
!9393 = !DILocation(line: 531, column: 40, scope: !9394)
!9394 = distinct !DILexicalBlock(scope: !9385, file: !1325, line: 531, column: 6)
!9395 = !DILocation(line: 531, column: 6, scope: !9394)
!9396 = !DILocation(line: 531, column: 6, scope: !9385)
!9397 = !DILocation(line: 532, column: 34, scope: !9398)
!9398 = distinct !DILexicalBlock(scope: !9394, file: !1325, line: 531, column: 48)
!9399 = !DILocation(line: 532, column: 3, scope: !9398)
!9400 = !DILocation(line: 533, column: 2, scope: !9398)
!9401 = !DILocation(line: 539, column: 42, scope: !9402)
!9402 = distinct !DILexicalBlock(scope: !9385, file: !1325, line: 539, column: 6)
!9403 = !DILocation(line: 539, column: 7, scope: !9402)
!9404 = !DILocation(line: 539, column: 6, scope: !9385)
!9405 = !DILocation(line: 543, column: 52, scope: !9385)
!9406 = !DILocation(line: 543, column: 22, scope: !9385)
!9407 = !DILocation(line: 543, column: 5, scope: !9385)
!9408 = !DILocation(line: 545, column: 2, scope: !9385)
!9409 = !DILocation(line: 546, column: 1, scope: !9385)
!9410 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1325, file: !1325, line: 548, type: !1247, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !9411)
!9411 = !{!9412, !9413, !9414, !9415}
!9412 = !DILocalVariable(name: "dev", arg: 1, scope: !9410, file: !1325, line: 548, type: !1230)
!9413 = !DILocalVariable(name: "c", arg: 2, scope: !9410, file: !1325, line: 549, type: !209)
!9414 = !DILocalVariable(name: "config", scope: !9410, file: !1325, line: 551, type: !9390)
!9415 = !DILocalVariable(name: "key", scope: !9410, file: !1325, line: 555, type: !32)
!9416 = !DILocation(line: 0, scope: !9410)
!9417 = !DILocation(line: 551, column: 48, scope: !9410)
!9418 = !DILocation(line: 562, column: 2, scope: !9410)
!9419 = !DILocation(line: 563, column: 41, scope: !9420)
!9420 = distinct !DILexicalBlock(scope: !9421, file: !1325, line: 563, column: 7)
!9421 = distinct !DILexicalBlock(scope: !9410, file: !1325, line: 562, column: 12)
!9422 = !DILocation(line: 563, column: 7, scope: !9420)
!9423 = !DILocation(line: 563, column: 7, scope: !9421)
!9424 = !DILocation(line: 55, column: 2, scope: !9425, inlinedAt: !9429)
!9425 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6148, file: !6148, line: 42, type: !6149, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !9426)
!9426 = !{!9427, !9428}
!9427 = !DILocalVariable(name: "key", scope: !9425, file: !6148, line: 44, type: !32)
!9428 = !DILocalVariable(name: "tmp", scope: !9425, file: !6148, line: 53, type: !32)
!9429 = distinct !DILocation(line: 564, column: 10, scope: !9430)
!9430 = distinct !DILexicalBlock(scope: !9420, file: !1325, line: 563, column: 49)
!9431 = !{i64 2086179}
!9432 = !DILocation(line: 0, scope: !9425, inlinedAt: !9429)
!9433 = !DILocation(line: 565, column: 42, scope: !9434)
!9434 = distinct !DILexicalBlock(scope: !9430, file: !1325, line: 565, column: 8)
!9435 = !DILocation(line: 565, column: 8, scope: !9434)
!9436 = !DILocation(line: 565, column: 8, scope: !9430)
!9437 = !DILocalVariable(name: "key", arg: 1, scope: !9438, file: !6148, line: 84, type: !32)
!9438 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6148, file: !6148, line: 84, type: !6159, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !9439)
!9439 = !{!9437}
!9440 = !DILocation(line: 0, scope: !9438, inlinedAt: !9441)
!9441 = distinct !DILocation(line: 568, column: 4, scope: !9430)
!9442 = !DILocation(line: 95, column: 2, scope: !9438, inlinedAt: !9441)
!9443 = !{i64 2086996}
!9444 = !DILocation(line: 569, column: 3, scope: !9430)
!9445 = distinct !{!9445, !9418, !9446}
!9446 = !DILocation(line: 570, column: 2, scope: !9410)
!9447 = !DILocation(line: 592, column: 33, scope: !9410)
!9448 = !DILocation(line: 592, column: 2, scope: !9410)
!9449 = !DILocation(line: 0, scope: !9438, inlinedAt: !9450)
!9450 = distinct !DILocation(line: 593, column: 2, scope: !9410)
!9451 = !DILocation(line: 95, column: 2, scope: !9438, inlinedAt: !9450)
!9452 = !DILocation(line: 594, column: 1, scope: !9410)
!9453 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1325, file: !1325, line: 596, type: !1251, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !9454)
!9454 = !{!9455, !9456, !9457}
!9455 = !DILocalVariable(name: "dev", arg: 1, scope: !9453, file: !1325, line: 596, type: !1230)
!9456 = !DILocalVariable(name: "config", scope: !9453, file: !1325, line: 598, type: !9390)
!9457 = !DILocalVariable(name: "err", scope: !9453, file: !1325, line: 599, type: !137)
!9458 = !DILocation(line: 0, scope: !9453)
!9459 = !DILocation(line: 598, column: 48, scope: !9453)
!9460 = !DILocation(line: 606, column: 40, scope: !9461)
!9461 = distinct !DILexicalBlock(scope: !9453, file: !1325, line: 606, column: 6)
!9462 = !DILocation(line: 606, column: 6, scope: !9461)
!9463 = !DILocation(line: 606, column: 6, scope: !9453)
!9464 = !DILocation(line: 610, column: 39, scope: !9465)
!9465 = distinct !DILexicalBlock(scope: !9453, file: !1325, line: 610, column: 6)
!9466 = !DILocation(line: 610, column: 6, scope: !9465)
!9467 = !DILocation(line: 610, column: 6, scope: !9453)
!9468 = !DILocation(line: 614, column: 39, scope: !9469)
!9469 = distinct !DILexicalBlock(scope: !9453, file: !1325, line: 614, column: 6)
!9470 = !DILocation(line: 614, column: 6, scope: !9469)
!9471 = !DILocation(line: 614, column: 6, scope: !9453)
!9472 = !DILocation(line: 619, column: 40, scope: !9473)
!9473 = distinct !DILexicalBlock(scope: !9453, file: !1325, line: 619, column: 6)
!9474 = !DILocation(line: 619, column: 6, scope: !9473)
!9475 = !DILocation(line: 619, column: 6, scope: !9453)
!9476 = !DILocation(line: 623, column: 10, scope: !9477)
!9477 = distinct !DILexicalBlock(scope: !9453, file: !1325, line: 623, column: 6)
!9478 = !DILocation(line: 623, column: 6, scope: !9453)
!9479 = !DILocation(line: 624, column: 34, scope: !9480)
!9480 = distinct !DILexicalBlock(scope: !9477, file: !1325, line: 623, column: 24)
!9481 = !DILocation(line: 624, column: 3, scope: !9480)
!9482 = !DILocation(line: 625, column: 2, scope: !9480)
!9483 = !DILocation(line: 632, column: 10, scope: !9484)
!9484 = distinct !DILexicalBlock(scope: !9453, file: !1325, line: 632, column: 6)
!9485 = !DILocation(line: 632, column: 6, scope: !9453)
!9486 = !DILocation(line: 633, column: 34, scope: !9487)
!9487 = distinct !DILexicalBlock(scope: !9484, file: !1325, line: 632, column: 32)
!9488 = !DILocation(line: 633, column: 3, scope: !9487)
!9489 = !DILocation(line: 634, column: 2, scope: !9487)
!9490 = !DILocation(line: 636, column: 10, scope: !9491)
!9491 = distinct !DILexicalBlock(scope: !9453, file: !1325, line: 636, column: 6)
!9492 = !DILocation(line: 636, column: 6, scope: !9453)
!9493 = !DILocation(line: 637, column: 33, scope: !9494)
!9494 = distinct !DILexicalBlock(scope: !9491, file: !1325, line: 636, column: 31)
!9495 = !DILocation(line: 637, column: 3, scope: !9494)
!9496 = !DILocation(line: 638, column: 2, scope: !9494)
!9497 = !DILocation(line: 640, column: 10, scope: !9498)
!9498 = distinct !DILexicalBlock(scope: !9453, file: !1325, line: 640, column: 6)
!9499 = !DILocation(line: 640, column: 6, scope: !9453)
!9500 = !DILocation(line: 641, column: 33, scope: !9501)
!9501 = distinct !DILexicalBlock(scope: !9498, file: !1325, line: 640, column: 32)
!9502 = !DILocation(line: 641, column: 3, scope: !9501)
!9503 = !DILocation(line: 642, column: 2, scope: !9501)
!9504 = !DILocation(line: 646, column: 32, scope: !9453)
!9505 = !DILocation(line: 646, column: 2, scope: !9453)
!9506 = !DILocation(line: 648, column: 2, scope: !9453)
!9507 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1325, file: !1325, line: 419, type: !1255, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !9508)
!9508 = !{!9509, !9510, !9511, !9512, !9514, !9515, !9516, !9517}
!9509 = !DILocalVariable(name: "dev", arg: 1, scope: !9507, file: !1325, line: 419, type: !1230)
!9510 = !DILocalVariable(name: "cfg", arg: 2, scope: !9507, file: !1325, line: 420, type: !1257)
!9511 = !DILocalVariable(name: "config", scope: !9507, file: !1325, line: 422, type: !9390)
!9512 = !DILocalVariable(name: "data", scope: !9507, file: !1325, line: 423, type: !9513)
!9513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1395, size: 32)
!9514 = !DILocalVariable(name: "parity", scope: !9507, file: !1325, line: 424, type: !6588)
!9515 = !DILocalVariable(name: "stopbits", scope: !9507, file: !1325, line: 425, type: !6588)
!9516 = !DILocalVariable(name: "databits", scope: !9507, file: !1325, line: 426, type: !6588)
!9517 = !DILocalVariable(name: "flowctrl", scope: !9507, file: !1325, line: 428, type: !6588)
!9518 = !DILocation(line: 0, scope: !9507)
!9519 = !DILocation(line: 422, column: 48, scope: !9507)
!9520 = !DILocation(line: 423, column: 38, scope: !9507)
!9521 = !DILocation(line: 424, column: 56, scope: !9507)
!9522 = !DILocation(line: 424, column: 51, scope: !9507)
!9523 = !DILocation(line: 424, column: 26, scope: !9507)
!9524 = !DILocation(line: 425, column: 60, scope: !9507)
!9525 = !DILocation(line: 425, column: 55, scope: !9507)
!9526 = !DILocation(line: 425, column: 28, scope: !9507)
!9527 = !DILocation(line: 426, column: 60, scope: !9507)
!9528 = !DILocation(line: 426, column: 55, scope: !9507)
!9529 = !DILocation(line: 426, column: 28, scope: !9507)
!9530 = !DILocation(line: 428, column: 58, scope: !9507)
!9531 = !DILocation(line: 428, column: 53, scope: !9507)
!9532 = !DILocation(line: 428, column: 28, scope: !9507)
!9533 = !DILocation(line: 431, column: 44, scope: !9534)
!9534 = distinct !DILexicalBlock(scope: !9507, file: !1325, line: 431, column: 6)
!9535 = !DILocation(line: 438, column: 22, scope: !9536)
!9536 = distinct !DILexicalBlock(scope: !9507, file: !1325, line: 437, column: 6)
!9537 = !DILocation(line: 437, column: 6, scope: !9507)
!9538 = !DILocation(line: 448, column: 6, scope: !9507)
!9539 = !DILocation(line: 465, column: 47, scope: !9540)
!9540 = distinct !DILexicalBlock(scope: !9507, file: !1325, line: 465, column: 6)
!9541 = !DILocation(line: 475, column: 21, scope: !9542)
!9542 = distinct !DILexicalBlock(scope: !9507, file: !1325, line: 475, column: 6)
!9543 = !DILocation(line: 475, column: 6, scope: !9507)
!9544 = !DILocation(line: 476, column: 8, scope: !9545)
!9545 = distinct !DILexicalBlock(scope: !9546, file: !1325, line: 476, column: 7)
!9546 = distinct !DILexicalBlock(scope: !9542, file: !1325, line: 475, column: 49)
!9547 = !DILocation(line: 477, column: 34, scope: !9545)
!9548 = !DILocation(line: 476, column: 7, scope: !9546)
!9549 = !DILocation(line: 482, column: 27, scope: !9507)
!9550 = !DILocation(line: 482, column: 2, scope: !9507)
!9551 = !DILocation(line: 484, column: 16, scope: !9552)
!9552 = distinct !DILexicalBlock(scope: !9507, file: !1325, line: 484, column: 6)
!9553 = !DILocation(line: 484, column: 13, scope: !9552)
!9554 = !DILocation(line: 484, column: 6, scope: !9507)
!9555 = !DILocation(line: 485, column: 3, scope: !9556)
!9556 = distinct !DILexicalBlock(scope: !9552, file: !1325, line: 484, column: 44)
!9557 = !DILocation(line: 486, column: 2, scope: !9556)
!9558 = !DILocation(line: 488, column: 18, scope: !9559)
!9559 = distinct !DILexicalBlock(scope: !9507, file: !1325, line: 488, column: 6)
!9560 = !DILocation(line: 488, column: 15, scope: !9559)
!9561 = !DILocation(line: 488, column: 6, scope: !9507)
!9562 = !DILocation(line: 489, column: 3, scope: !9563)
!9563 = distinct !DILexicalBlock(scope: !9559, file: !1325, line: 488, column: 48)
!9564 = !DILocation(line: 490, column: 2, scope: !9563)
!9565 = !DILocation(line: 492, column: 18, scope: !9566)
!9566 = distinct !DILexicalBlock(scope: !9507, file: !1325, line: 492, column: 6)
!9567 = !DILocation(line: 492, column: 15, scope: !9566)
!9568 = !DILocation(line: 492, column: 6, scope: !9507)
!9569 = !DILocation(line: 493, column: 3, scope: !9570)
!9570 = distinct !DILexicalBlock(scope: !9566, file: !1325, line: 492, column: 48)
!9571 = !DILocation(line: 494, column: 2, scope: !9570)
!9572 = !DILocation(line: 496, column: 18, scope: !9573)
!9573 = distinct !DILexicalBlock(scope: !9507, file: !1325, line: 496, column: 6)
!9574 = !DILocation(line: 496, column: 15, scope: !9573)
!9575 = !DILocation(line: 496, column: 6, scope: !9507)
!9576 = !DILocation(line: 497, column: 3, scope: !9577)
!9577 = distinct !DILexicalBlock(scope: !9573, file: !1325, line: 496, column: 46)
!9578 = !DILocation(line: 498, column: 2, scope: !9577)
!9579 = !DILocation(line: 500, column: 11, scope: !9580)
!9580 = distinct !DILexicalBlock(scope: !9507, file: !1325, line: 500, column: 6)
!9581 = !DILocation(line: 500, column: 29, scope: !9580)
!9582 = !DILocation(line: 500, column: 20, scope: !9580)
!9583 = !DILocation(line: 500, column: 6, scope: !9507)
!9584 = !DILocation(line: 501, column: 3, scope: !9585)
!9585 = distinct !DILexicalBlock(scope: !9580, file: !1325, line: 500, column: 40)
!9586 = !DILocation(line: 502, column: 26, scope: !9585)
!9587 = !DILocation(line: 502, column: 19, scope: !9585)
!9588 = !DILocation(line: 503, column: 2, scope: !9585)
!9589 = !DILocation(line: 505, column: 26, scope: !9507)
!9590 = !DILocation(line: 505, column: 2, scope: !9507)
!9591 = !DILocation(line: 506, column: 2, scope: !9507)
!9592 = !DILocation(line: 507, column: 1, scope: !9507)
!9593 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1325, file: !1325, line: 509, type: !1268, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !9594)
!9594 = !{!9595, !9596, !9597}
!9595 = !DILocalVariable(name: "dev", arg: 1, scope: !9593, file: !1325, line: 509, type: !1230)
!9596 = !DILocalVariable(name: "cfg", arg: 2, scope: !9593, file: !1325, line: 510, type: !1270)
!9597 = !DILocalVariable(name: "data", scope: !9593, file: !1325, line: 512, type: !9513)
!9598 = !DILocation(line: 0, scope: !9593)
!9599 = !DILocation(line: 512, column: 38, scope: !9593)
!9600 = !DILocation(line: 514, column: 24, scope: !9593)
!9601 = !DILocation(line: 514, column: 7, scope: !9593)
!9602 = !DILocation(line: 514, column: 16, scope: !9593)
!9603 = !DILocation(line: 515, column: 41, scope: !9593)
!9604 = !{i32 0, i32 1537}
!9605 = !DILocation(line: 515, column: 16, scope: !9593)
!9606 = !DILocation(line: 515, column: 7, scope: !9593)
!9607 = !DILocation(line: 515, column: 14, scope: !9593)
!9608 = !DILocation(line: 517, column: 3, scope: !9593)
!9609 = !{i32 0, i32 12289}
!9610 = !DILocation(line: 516, column: 19, scope: !9593)
!9611 = !DILocation(line: 516, column: 7, scope: !9593)
!9612 = !DILocation(line: 516, column: 17, scope: !9593)
!9613 = !DILocation(line: 519, column: 3, scope: !9593)
!9614 = !DILocation(line: 519, column: 33, scope: !9593)
!9615 = !DILocation(line: 518, column: 19, scope: !9593)
!9616 = !DILocation(line: 518, column: 7, scope: !9593)
!9617 = !DILocation(line: 518, column: 17, scope: !9593)
!9618 = !DILocation(line: 521, column: 3, scope: !9593)
!9619 = !{i32 0, i32 769}
!9620 = !DILocation(line: 520, column: 19, scope: !9593)
!9621 = !DILocation(line: 520, column: 7, scope: !9593)
!9622 = !DILocation(line: 520, column: 17, scope: !9593)
!9623 = !DILocation(line: 522, column: 2, scope: !9593)
!9624 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1325, file: !1325, line: 205, type: !9625, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !9627)
!9625 = !DISubroutineType(types: !9626)
!9626 = !{!137, !1230}
!9627 = !{!9628, !9629}
!9628 = !DILocalVariable(name: "dev", arg: 1, scope: !9624, file: !1325, line: 205, type: !1230)
!9629 = !DILocalVariable(name: "config", scope: !9624, file: !1325, line: 207, type: !9390)
!9630 = !DILocation(line: 0, scope: !9624)
!9631 = !DILocation(line: 207, column: 48, scope: !9624)
!9632 = !DILocation(line: 209, column: 36, scope: !9624)
!9633 = !DILocation(line: 209, column: 9, scope: !9624)
!9634 = !DILocation(line: 209, column: 2, scope: !9624)
!9635 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1325, file: !1325, line: 270, type: !9636, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !9638)
!9636 = !DISubroutineType(types: !9637)
!9637 = !{!1196, !137}
!9638 = !{!9639}
!9639 = !DILocalVariable(name: "parity", arg: 1, scope: !9635, file: !1325, line: 270, type: !137)
!9640 = !DILocation(line: 0, scope: !9635)
!9641 = !DILocation(line: 272, column: 2, scope: !9635)
!9642 = !DILocation(line: 281, column: 1, scope: !9635)
!9643 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1325, file: !1325, line: 220, type: !9625, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !9644)
!9644 = !{!9645, !9646}
!9645 = !DILocalVariable(name: "dev", arg: 1, scope: !9643, file: !1325, line: 220, type: !1230)
!9646 = !DILocalVariable(name: "config", scope: !9643, file: !1325, line: 222, type: !9390)
!9647 = !DILocation(line: 0, scope: !9643)
!9648 = !DILocation(line: 222, column: 48, scope: !9643)
!9649 = !DILocation(line: 224, column: 44, scope: !9643)
!9650 = !DILocation(line: 224, column: 9, scope: !9643)
!9651 = !DILocation(line: 224, column: 2, scope: !9643)
!9652 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1325, file: !1325, line: 304, type: !9653, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !9655)
!9653 = !DISubroutineType(types: !9654)
!9654 = !{!1210, !137}
!9655 = !{!9656}
!9656 = !DILocalVariable(name: "sb", arg: 1, scope: !9652, file: !1325, line: 304, type: !137)
!9657 = !DILocation(line: 0, scope: !9652)
!9658 = !DILocation(line: 306, column: 2, scope: !9652)
!9659 = !DILocation(line: 0, scope: !9660)
!9660 = distinct !DILexicalBlock(scope: !9652, file: !1325, line: 306, column: 14)
!9661 = !DILocation(line: 323, column: 1, scope: !9652)
!9662 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1325, file: !1325, line: 235, type: !9625, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !9663)
!9663 = !{!9664, !9665}
!9664 = !DILocalVariable(name: "dev", arg: 1, scope: !9662, file: !1325, line: 235, type: !1230)
!9665 = !DILocalVariable(name: "config", scope: !9662, file: !1325, line: 237, type: !9390)
!9666 = !DILocation(line: 0, scope: !9662)
!9667 = !DILocation(line: 237, column: 48, scope: !9662)
!9668 = !DILocation(line: 239, column: 39, scope: !9662)
!9669 = !DILocation(line: 239, column: 9, scope: !9662)
!9670 = !DILocation(line: 239, column: 2, scope: !9662)
!9671 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1325, file: !1325, line: 355, type: !9672, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !9674)
!9672 = !DISubroutineType(types: !9673)
!9673 = !{!1203, !137, !137}
!9674 = !{!9675, !9676}
!9675 = !DILocalVariable(name: "db", arg: 1, scope: !9671, file: !1325, line: 355, type: !137)
!9676 = !DILocalVariable(name: "p", arg: 2, scope: !9671, file: !1325, line: 356, type: !137)
!9677 = !DILocation(line: 0, scope: !9671)
!9678 = !DILocation(line: 358, column: 2, scope: !9671)
!9679 = !DILocation(line: 384, column: 1, scope: !9671)
!9680 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1325, file: !1325, line: 250, type: !9625, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !9681)
!9681 = !{!9682, !9683}
!9682 = !DILocalVariable(name: "dev", arg: 1, scope: !9680, file: !1325, line: 250, type: !1230)
!9683 = !DILocalVariable(name: "config", scope: !9680, file: !1325, line: 252, type: !9390)
!9684 = !DILocation(line: 0, scope: !9680)
!9685 = !DILocation(line: 252, column: 48, scope: !9680)
!9686 = !DILocation(line: 254, column: 40, scope: !9680)
!9687 = !DILocation(line: 254, column: 9, scope: !9680)
!9688 = !DILocation(line: 254, column: 2, scope: !9680)
!9689 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1325, file: !1325, line: 409, type: !9690, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !9692)
!9690 = !DISubroutineType(types: !9691)
!9691 = !{!1216, !137}
!9692 = !{!9693}
!9693 = !DILocalVariable(name: "fc", arg: 1, scope: !9689, file: !1325, line: 409, type: !137)
!9694 = !DILocation(line: 0, scope: !9689)
!9695 = !DILocation(line: 411, column: 9, scope: !9696)
!9696 = distinct !DILexicalBlock(scope: !9689, file: !1325, line: 411, column: 6)
!9697 = !DILocation(line: 416, column: 1, scope: !9689)
!9698 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !9699, file: !9699, line: 967, type: !9700, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !9702)
!9699 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9700 = !DISubroutineType(types: !9701)
!9701 = !{!137, !1271}
!9702 = !{!9703}
!9703 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9698, file: !9699, line: 967, type: !1271)
!9704 = !DILocation(line: 0, scope: !9698)
!9705 = !DILocation(line: 969, column: 21, scope: !9698)
!9706 = !DILocation(line: 969, column: 3, scope: !9698)
!9707 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !9699, file: !9699, line: 601, type: !9700, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !9708)
!9708 = !{!9709}
!9709 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9707, file: !9699, line: 601, type: !1271)
!9710 = !DILocation(line: 0, scope: !9707)
!9711 = !DILocation(line: 603, column: 21, scope: !9707)
!9712 = !DILocation(line: 603, column: 3, scope: !9707)
!9713 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !9699, file: !9699, line: 820, type: !9700, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !9714)
!9714 = !{!9715}
!9715 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9713, file: !9699, line: 820, type: !1271)
!9716 = !DILocation(line: 0, scope: !9713)
!9717 = !DILocation(line: 822, column: 21, scope: !9713)
!9718 = !DILocation(line: 822, column: 3, scope: !9713)
!9719 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !9699, file: !9699, line: 547, type: !9700, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !9720)
!9720 = !{!9721}
!9721 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9719, file: !9699, line: 547, type: !1271)
!9722 = !DILocation(line: 0, scope: !9719)
!9723 = !DILocation(line: 549, column: 21, scope: !9719)
!9724 = !DILocation(line: 549, column: 3, scope: !9719)
!9725 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1325, file: !1325, line: 257, type: !9726, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !9728)
!9726 = !DISubroutineType(types: !9727)
!9727 = !{!137, !1196}
!9728 = !{!9729}
!9729 = !DILocalVariable(name: "parity", arg: 1, scope: !9725, file: !1325, line: 257, type: !1196)
!9730 = !DILocation(line: 0, scope: !9725)
!9731 = !DILocation(line: 259, column: 2, scope: !9725)
!9732 = !DILocation(line: 268, column: 1, scope: !9725)
!9733 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1325, file: !1325, line: 283, type: !9734, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !9736)
!9734 = !DISubroutineType(types: !9735)
!9735 = !{!137, !1210}
!9736 = !{!9737}
!9737 = !DILocalVariable(name: "sb", arg: 1, scope: !9733, file: !1325, line: 283, type: !1210)
!9738 = !DILocation(line: 0, scope: !9733)
!9739 = !DILocation(line: 285, column: 2, scope: !9733)
!9740 = !DILocation(line: 0, scope: !9741)
!9741 = distinct !DILexicalBlock(scope: !9733, file: !1325, line: 285, column: 14)
!9742 = !DILocation(line: 302, column: 1, scope: !9733)
!9743 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1325, file: !1325, line: 325, type: !9744, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !9746)
!9744 = !DISubroutineType(types: !9745)
!9745 = !{!137, !1203, !1196}
!9746 = !{!9747, !9748}
!9747 = !DILocalVariable(name: "db", arg: 1, scope: !9743, file: !1325, line: 325, type: !1203)
!9748 = !DILocalVariable(name: "p", arg: 2, scope: !9743, file: !1325, line: 326, type: !1196)
!9749 = !DILocation(line: 0, scope: !9743)
!9750 = !DILocation(line: 328, column: 2, scope: !9743)
!9751 = !DILocation(line: 353, column: 1, scope: !9743)
!9752 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1325, file: !1325, line: 393, type: !9753, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !9755)
!9753 = !DISubroutineType(types: !9754)
!9754 = !{!137, !1216}
!9755 = !{!9756}
!9756 = !DILocalVariable(name: "fc", arg: 1, scope: !9752, file: !1325, line: 393, type: !1216)
!9757 = !DILocation(line: 0, scope: !9752)
!9758 = !DILocation(line: 395, column: 9, scope: !9759)
!9759 = distinct !DILexicalBlock(scope: !9752, file: !1325, line: 395, column: 6)
!9760 = !DILocation(line: 400, column: 1, scope: !9752)
!9761 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !9699, file: !9699, line: 424, type: !9762, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !9764)
!9762 = !DISubroutineType(types: !9763)
!9763 = !{null, !1271}
!9764 = !{!9765}
!9765 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9761, file: !9699, line: 424, type: !1271)
!9766 = !DILocation(line: 0, scope: !9761)
!9767 = !DILocation(line: 426, column: 3, scope: !9761)
!9768 = !DILocation(line: 427, column: 1, scope: !9761)
!9769 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1325, file: !1325, line: 197, type: !9770, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !9772)
!9770 = !DISubroutineType(types: !9771)
!9771 = !{null, !1230, !137}
!9772 = !{!9773, !9774, !9775}
!9773 = !DILocalVariable(name: "dev", arg: 1, scope: !9769, file: !1325, line: 197, type: !1230)
!9774 = !DILocalVariable(name: "parity", arg: 2, scope: !9769, file: !1325, line: 198, type: !137)
!9775 = !DILocalVariable(name: "config", scope: !9769, file: !1325, line: 200, type: !9390)
!9776 = !DILocation(line: 0, scope: !9769)
!9777 = !DILocation(line: 200, column: 48, scope: !9769)
!9778 = !DILocation(line: 202, column: 29, scope: !9769)
!9779 = !DILocation(line: 202, column: 2, scope: !9769)
!9780 = !DILocation(line: 203, column: 1, scope: !9769)
!9781 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1325, file: !1325, line: 212, type: !9770, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !9782)
!9782 = !{!9783, !9784, !9785}
!9783 = !DILocalVariable(name: "dev", arg: 1, scope: !9781, file: !1325, line: 212, type: !1230)
!9784 = !DILocalVariable(name: "stopbits", arg: 2, scope: !9781, file: !1325, line: 213, type: !137)
!9785 = !DILocalVariable(name: "config", scope: !9781, file: !1325, line: 215, type: !9390)
!9786 = !DILocation(line: 0, scope: !9781)
!9787 = !DILocation(line: 215, column: 48, scope: !9781)
!9788 = !DILocation(line: 217, column: 37, scope: !9781)
!9789 = !DILocation(line: 217, column: 2, scope: !9781)
!9790 = !DILocation(line: 218, column: 1, scope: !9781)
!9791 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1325, file: !1325, line: 227, type: !9770, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !9792)
!9792 = !{!9793, !9794, !9795}
!9793 = !DILocalVariable(name: "dev", arg: 1, scope: !9791, file: !1325, line: 227, type: !1230)
!9794 = !DILocalVariable(name: "databits", arg: 2, scope: !9791, file: !1325, line: 228, type: !137)
!9795 = !DILocalVariable(name: "config", scope: !9791, file: !1325, line: 230, type: !9390)
!9796 = !DILocation(line: 0, scope: !9791)
!9797 = !DILocation(line: 230, column: 48, scope: !9791)
!9798 = !DILocation(line: 232, column: 32, scope: !9791)
!9799 = !DILocation(line: 232, column: 2, scope: !9791)
!9800 = !DILocation(line: 233, column: 1, scope: !9791)
!9801 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1325, file: !1325, line: 242, type: !9770, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !9802)
!9802 = !{!9803, !9804, !9805}
!9803 = !DILocalVariable(name: "dev", arg: 1, scope: !9801, file: !1325, line: 242, type: !1230)
!9804 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !9801, file: !1325, line: 243, type: !137)
!9805 = !DILocalVariable(name: "config", scope: !9801, file: !1325, line: 245, type: !9390)
!9806 = !DILocation(line: 0, scope: !9801)
!9807 = !DILocation(line: 245, column: 48, scope: !9801)
!9808 = !DILocation(line: 247, column: 33, scope: !9801)
!9809 = !DILocation(line: 247, column: 2, scope: !9801)
!9810 = !DILocation(line: 248, column: 1, scope: !9801)
!9811 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1325, file: !1325, line: 107, type: !9770, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !9812)
!9812 = !{!9813, !9814, !9815, !9816, !9817}
!9813 = !DILocalVariable(name: "dev", arg: 1, scope: !9811, file: !1325, line: 107, type: !1230)
!9814 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !9811, file: !1325, line: 107, type: !137)
!9815 = !DILocalVariable(name: "config", scope: !9811, file: !1325, line: 109, type: !9390)
!9816 = !DILocalVariable(name: "data", scope: !9811, file: !1325, line: 110, type: !9513)
!9817 = !DILocalVariable(name: "clock_rate", scope: !9811, file: !1325, line: 112, type: !137)
!9818 = !DILocation(line: 0, scope: !9811)
!9819 = !DILocation(line: 109, column: 48, scope: !9811)
!9820 = !DILocation(line: 110, column: 38, scope: !9811)
!9821 = !DILocation(line: 112, column: 2, scope: !9811)
!9822 = !DILocation(line: 123, column: 36, scope: !9823)
!9823 = distinct !DILexicalBlock(scope: !9824, file: !1325, line: 123, column: 7)
!9824 = distinct !DILexicalBlock(scope: !9825, file: !1325, line: 122, column: 9)
!9825 = distinct !DILexicalBlock(scope: !9811, file: !1325, line: 115, column: 6)
!9826 = !DILocation(line: 124, column: 42, scope: !9823)
!9827 = !DILocation(line: 123, column: 7, scope: !9823)
!9828 = !DILocation(line: 125, column: 22, scope: !9823)
!9829 = !DILocation(line: 123, column: 7, scope: !9824)
!9830 = !DILocation(line: 176, column: 36, scope: !9811)
!9831 = !DILocation(line: 176, column: 3, scope: !9811)
!9832 = !DILocation(line: 179, column: 32, scope: !9811)
!9833 = !DILocation(line: 180, column: 10, scope: !9811)
!9834 = !DILocation(line: 179, column: 3, scope: !9811)
!9835 = !DILocation(line: 195, column: 1, scope: !9811)
!9836 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !9699, file: !9699, line: 410, type: !9762, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !9837)
!9837 = !{!9838}
!9838 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9836, file: !9699, line: 410, type: !1271)
!9839 = !DILocation(line: 0, scope: !9836)
!9840 = !DILocation(line: 412, column: 3, scope: !9836)
!9841 = !DILocation(line: 413, column: 1, scope: !9836)
!9842 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !685, file: !685, line: 216, type: !1304, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !9843)
!9843 = !{!9844, !9845, !9846, !9847}
!9844 = !DILocalVariable(name: "dev", arg: 1, scope: !9842, file: !685, line: 216, type: !1230)
!9845 = !DILocalVariable(name: "sys", arg: 2, scope: !9842, file: !685, line: 217, type: !779)
!9846 = !DILocalVariable(name: "rate", arg: 3, scope: !9842, file: !685, line: 218, type: !149)
!9847 = !DILocalVariable(name: "api", scope: !9842, file: !685, line: 220, type: !1282)
!9848 = !DILocation(line: 0, scope: !9842)
!9849 = !DILocation(line: 221, column: 49, scope: !9842)
!9850 = !DILocation(line: 223, column: 11, scope: !9851)
!9851 = distinct !DILexicalBlock(scope: !9842, file: !685, line: 223, column: 6)
!9852 = !DILocation(line: 223, column: 20, scope: !9851)
!9853 = !DILocation(line: 223, column: 6, scope: !9842)
!9854 = !DILocation(line: 227, column: 9, scope: !9842)
!9855 = !DILocation(line: 227, column: 2, scope: !9842)
!9856 = !DILocation(line: 228, column: 1, scope: !9842)
!9857 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !9699, file: !9699, line: 615, type: !9858, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !9860)
!9858 = !DISubroutineType(types: !9859)
!9859 = !{null, !1271, !137}
!9860 = !{!9861, !9862}
!9861 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9857, file: !9699, line: 615, type: !1271)
!9862 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !9857, file: !9699, line: 615, type: !137)
!9863 = !DILocation(line: 0, scope: !9857)
!9864 = !DILocation(line: 617, column: 3, scope: !9857)
!9865 = !DILocation(line: 618, column: 1, scope: !9857)
!9866 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !9699, file: !9699, line: 1020, type: !9867, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !9869)
!9867 = !DISubroutineType(types: !9868)
!9868 = !{null, !1271, !137, !137, !137}
!9869 = !{!9870, !9871, !9872, !9873}
!9870 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9866, file: !9699, line: 1020, type: !1271)
!9871 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !9866, file: !9699, line: 1020, type: !137)
!9872 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !9866, file: !9699, line: 1020, type: !137)
!9873 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !9866, file: !9699, line: 1021, type: !137)
!9874 = !DILocation(line: 0, scope: !9866)
!9875 = !DILocation(line: 1029, column: 30, scope: !9876)
!9876 = distinct !DILexicalBlock(scope: !9877, file: !9699, line: 1028, column: 3)
!9877 = distinct !DILexicalBlock(scope: !9866, file: !9699, line: 1023, column: 7)
!9878 = !DILocation(line: 1029, column: 19, scope: !9876)
!9879 = !DILocation(line: 1029, column: 13, scope: !9876)
!9880 = !DILocation(line: 1029, column: 17, scope: !9876)
!9881 = !DILocation(line: 1031, column: 1, scope: !9866)
!9882 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !9699, file: !9699, line: 949, type: !9858, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !9883)
!9883 = !{!9884, !9885}
!9884 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9882, file: !9699, line: 949, type: !1271)
!9885 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !9882, file: !9699, line: 949, type: !137)
!9886 = !DILocation(line: 0, scope: !9882)
!9887 = !DILocation(line: 951, column: 3, scope: !9882)
!9888 = !DILocation(line: 952, column: 1, scope: !9882)
!9889 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !9699, file: !9699, line: 588, type: !9858, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !9890)
!9890 = !{!9891, !9892}
!9891 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9889, file: !9699, line: 588, type: !1271)
!9892 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !9889, file: !9699, line: 588, type: !137)
!9893 = !DILocation(line: 0, scope: !9889)
!9894 = !DILocation(line: 590, column: 3, scope: !9889)
!9895 = !DILocation(line: 591, column: 1, scope: !9889)
!9896 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !9699, file: !9699, line: 805, type: !9858, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !9897)
!9897 = !{!9898, !9899}
!9898 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9896, file: !9699, line: 805, type: !1271)
!9899 = !DILocalVariable(name: "StopBits", arg: 2, scope: !9896, file: !9699, line: 805, type: !137)
!9900 = !DILocation(line: 0, scope: !9896)
!9901 = !DILocation(line: 807, column: 3, scope: !9896)
!9902 = !DILocation(line: 808, column: 1, scope: !9896)
!9903 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !9699, file: !9699, line: 532, type: !9858, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !9904)
!9904 = !{!9905, !9906}
!9905 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9903, file: !9699, line: 532, type: !1271)
!9906 = !DILocalVariable(name: "Parity", arg: 2, scope: !9903, file: !9699, line: 532, type: !137)
!9907 = !DILocation(line: 0, scope: !9903)
!9908 = !DILocation(line: 534, column: 3, scope: !9903)
!9909 = !DILocation(line: 535, column: 1, scope: !9903)
!9910 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !9699, file: !9699, line: 1770, type: !9700, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !9911)
!9911 = !{!9912}
!9912 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9910, file: !9699, line: 1770, type: !1271)
!9913 = !DILocation(line: 0, scope: !9910)
!9914 = !DILocation(line: 1772, column: 11, scope: !9910)
!9915 = !DILocation(line: 1772, column: 46, scope: !9910)
!9916 = !DILocation(line: 1772, column: 3, scope: !9910)
!9917 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !9699, file: !9699, line: 1737, type: !9700, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !9918)
!9918 = !{!9919}
!9919 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9917, file: !9699, line: 1737, type: !1271)
!9920 = !DILocation(line: 0, scope: !9917)
!9921 = !DILocation(line: 1739, column: 11, scope: !9917)
!9922 = !DILocation(line: 1739, column: 3, scope: !9917)
!9923 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !9699, file: !9699, line: 1748, type: !9700, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !9924)
!9924 = !{!9925}
!9925 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9923, file: !9699, line: 1748, type: !1271)
!9926 = !DILocation(line: 0, scope: !9923)
!9927 = !DILocation(line: 1750, column: 11, scope: !9923)
!9928 = !DILocation(line: 1750, column: 45, scope: !9923)
!9929 = !DILocation(line: 1750, column: 3, scope: !9923)
!9930 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !9699, file: !9699, line: 1827, type: !9700, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !9931)
!9931 = !{!9932}
!9932 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9930, file: !9699, line: 1827, type: !1271)
!9933 = !DILocation(line: 0, scope: !9930)
!9934 = !DILocation(line: 1829, column: 11, scope: !9930)
!9935 = !DILocation(line: 1829, column: 46, scope: !9930)
!9936 = !DILocation(line: 1829, column: 3, scope: !9930)
!9937 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !9699, file: !9699, line: 1992, type: !9762, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !9938)
!9938 = !{!9939}
!9939 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9937, file: !9699, line: 1992, type: !1271)
!9940 = !DILocation(line: 0, scope: !9937)
!9941 = !DILocation(line: 1994, column: 3, scope: !9937)
!9942 = !DILocation(line: 1995, column: 1, scope: !9937)
!9943 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !9699, file: !9699, line: 1934, type: !9762, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !9944)
!9944 = !{!9945, !9946}
!9945 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9943, file: !9699, line: 1934, type: !1271)
!9946 = !DILocalVariable(name: "tmpreg", scope: !9943, file: !9699, line: 1936, type: !176)
!9947 = !DILocation(line: 0, scope: !9943)
!9948 = !DILocation(line: 1936, column: 3, scope: !9943)
!9949 = !DILocation(line: 1936, column: 17, scope: !9943)
!9950 = !DILocation(line: 1937, column: 20, scope: !9943)
!9951 = !DILocation(line: 1937, column: 10, scope: !9943)
!9952 = !DILocation(line: 1938, column: 10, scope: !9943)
!9953 = !DILocation(line: 1939, column: 20, scope: !9943)
!9954 = !DILocation(line: 1939, column: 10, scope: !9943)
!9955 = !DILocation(line: 1940, column: 10, scope: !9943)
!9956 = !DILocation(line: 1941, column: 1, scope: !9943)
!9957 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !9699, file: !9699, line: 1877, type: !9762, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !9958)
!9958 = !{!9959, !9960}
!9959 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9957, file: !9699, line: 1877, type: !1271)
!9960 = !DILocalVariable(name: "tmpreg", scope: !9957, file: !9699, line: 1879, type: !176)
!9961 = !DILocation(line: 0, scope: !9957)
!9962 = !DILocation(line: 1879, column: 3, scope: !9957)
!9963 = !DILocation(line: 1879, column: 17, scope: !9957)
!9964 = !DILocation(line: 1880, column: 20, scope: !9957)
!9965 = !DILocation(line: 1880, column: 10, scope: !9957)
!9966 = !DILocation(line: 1881, column: 10, scope: !9957)
!9967 = !DILocation(line: 1882, column: 20, scope: !9957)
!9968 = !DILocation(line: 1882, column: 10, scope: !9957)
!9969 = !DILocation(line: 1883, column: 10, scope: !9957)
!9970 = !DILocation(line: 1884, column: 1, scope: !9957)
!9971 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !9699, file: !9699, line: 1896, type: !9762, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !9972)
!9972 = !{!9973, !9974}
!9973 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9971, file: !9699, line: 1896, type: !1271)
!9974 = !DILocalVariable(name: "tmpreg", scope: !9971, file: !9699, line: 1898, type: !176)
!9975 = !DILocation(line: 0, scope: !9971)
!9976 = !DILocation(line: 1898, column: 3, scope: !9971)
!9977 = !DILocation(line: 1898, column: 17, scope: !9971)
!9978 = !DILocation(line: 1899, column: 20, scope: !9971)
!9979 = !DILocation(line: 1899, column: 10, scope: !9971)
!9980 = !DILocation(line: 1900, column: 10, scope: !9971)
!9981 = !DILocation(line: 1901, column: 20, scope: !9971)
!9982 = !DILocation(line: 1901, column: 10, scope: !9971)
!9983 = !DILocation(line: 1902, column: 10, scope: !9971)
!9984 = !DILocation(line: 1903, column: 1, scope: !9971)
!9985 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !9699, file: !9699, line: 1915, type: !9762, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !9986)
!9986 = !{!9987, !9988}
!9987 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9985, file: !9699, line: 1915, type: !1271)
!9988 = !DILocalVariable(name: "tmpreg", scope: !9985, file: !9699, line: 1917, type: !176)
!9989 = !DILocation(line: 0, scope: !9985)
!9990 = !DILocation(line: 1917, column: 3, scope: !9985)
!9991 = !DILocation(line: 1917, column: 17, scope: !9985)
!9992 = !DILocation(line: 1918, column: 20, scope: !9985)
!9993 = !DILocation(line: 1918, column: 10, scope: !9985)
!9994 = !DILocation(line: 1919, column: 10, scope: !9985)
!9995 = !DILocation(line: 1920, column: 20, scope: !9985)
!9996 = !DILocation(line: 1920, column: 10, scope: !9985)
!9997 = !DILocation(line: 1921, column: 10, scope: !9985)
!9998 = !DILocation(line: 1922, column: 1, scope: !9985)
!9999 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !9699, file: !9699, line: 1814, type: !9700, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !10000)
!10000 = !{!10001}
!10001 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9999, file: !9699, line: 1814, type: !1271)
!10002 = !DILocation(line: 0, scope: !9999)
!10003 = !DILocation(line: 1816, column: 11, scope: !9999)
!10004 = !DILocation(line: 1816, column: 46, scope: !9999)
!10005 = !DILocation(line: 1816, column: 3, scope: !9999)
!10006 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !9699, file: !9699, line: 2426, type: !10007, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !10009)
!10007 = !DISubroutineType(types: !10008)
!10008 = !{null, !1271, !208}
!10009 = !{!10010, !10011}
!10010 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10006, file: !9699, line: 2426, type: !1271)
!10011 = !DILocalVariable(name: "Value", arg: 2, scope: !10006, file: !9699, line: 2426, type: !208)
!10012 = !DILocation(line: 0, scope: !10006)
!10013 = !DILocation(line: 2428, column: 16, scope: !10006)
!10014 = !DILocation(line: 2428, column: 11, scope: !10006)
!10015 = !DILocation(line: 2428, column: 14, scope: !10006)
!10016 = !DILocation(line: 2429, column: 1, scope: !10006)
!10017 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !9699, file: !9699, line: 1792, type: !9700, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !10018)
!10018 = !{!10019}
!10019 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10017, file: !9699, line: 1792, type: !1271)
!10020 = !DILocation(line: 0, scope: !10017)
!10021 = !DILocation(line: 1794, column: 11, scope: !10017)
!10022 = !DILocation(line: 1794, column: 47, scope: !10017)
!10023 = !DILocation(line: 1794, column: 3, scope: !10017)
!10024 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !9699, file: !9699, line: 2403, type: !10025, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !10027)
!10025 = !DISubroutineType(types: !10026)
!10026 = !{!208, !1271}
!10027 = !{!10028}
!10028 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10024, file: !9699, line: 2403, type: !1271)
!10029 = !DILocation(line: 0, scope: !10024)
!10030 = !DILocation(line: 2405, column: 20, scope: !10024)
!10031 = !DILocation(line: 2405, column: 10, scope: !10024)
!10032 = !DILocation(line: 2405, column: 3, scope: !10024)
!10033 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1325, file: !1325, line: 1583, type: !1251, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !10034)
!10034 = !{!10035, !10036, !10037, !10038, !10039, !10040}
!10035 = !DILocalVariable(name: "dev", arg: 1, scope: !10033, file: !1325, line: 1583, type: !1230)
!10036 = !DILocalVariable(name: "config", scope: !10033, file: !1325, line: 1585, type: !9390)
!10037 = !DILocalVariable(name: "data", scope: !10033, file: !1325, line: 1586, type: !9513)
!10038 = !DILocalVariable(name: "ll_parity", scope: !10033, file: !1325, line: 1587, type: !137)
!10039 = !DILocalVariable(name: "ll_datawidth", scope: !10033, file: !1325, line: 1588, type: !137)
!10040 = !DILocalVariable(name: "err", scope: !10033, file: !1325, line: 1589, type: !103)
!10041 = !DILocation(line: 0, scope: !10033)
!10042 = !DILocation(line: 1585, column: 48, scope: !10033)
!10043 = !DILocation(line: 1586, column: 38, scope: !10033)
!10044 = !DILocation(line: 1591, column: 2, scope: !10033)
!10045 = !DILocation(line: 1593, column: 29, scope: !10046)
!10046 = distinct !DILexicalBlock(scope: !10033, file: !1325, line: 1593, column: 6)
!10047 = !DILocation(line: 1593, column: 7, scope: !10046)
!10048 = !DILocation(line: 1593, column: 6, scope: !10033)
!10049 = !DILocation(line: 1599, column: 31, scope: !10033)
!10050 = !DILocation(line: 1599, column: 71, scope: !10033)
!10051 = !DILocation(line: 1599, column: 8, scope: !10033)
!10052 = !DILocation(line: 1600, column: 10, scope: !10053)
!10053 = distinct !DILexicalBlock(scope: !10033, file: !1325, line: 1600, column: 6)
!10054 = !DILocation(line: 1600, column: 6, scope: !10033)
!10055 = !DILocation(line: 1616, column: 36, scope: !10033)
!10056 = !DILocation(line: 1616, column: 8, scope: !10033)
!10057 = !DILocation(line: 1617, column: 10, scope: !10058)
!10058 = distinct !DILexicalBlock(scope: !10033, file: !1325, line: 1617, column: 6)
!10059 = !DILocation(line: 1617, column: 6, scope: !10033)
!10060 = !DILocation(line: 1621, column: 27, scope: !10033)
!10061 = !DILocation(line: 1621, column: 2, scope: !10033)
!10062 = !DILocation(line: 1624, column: 40, scope: !10033)
!10063 = !DILocation(line: 1624, column: 2, scope: !10033)
!10064 = !DILocation(line: 1630, column: 14, scope: !10065)
!10065 = distinct !DILexicalBlock(scope: !10033, file: !1325, line: 1630, column: 6)
!10066 = !DILocation(line: 1630, column: 6, scope: !10033)
!10067 = !DILocation(line: 1638, column: 2, scope: !10068)
!10068 = distinct !DILexicalBlock(scope: !10069, file: !1325, line: 1634, column: 34)
!10069 = distinct !DILexicalBlock(scope: !10065, file: !1325, line: 1634, column: 13)
!10070 = !DILocation(line: 0, scope: !10065)
!10071 = !DILocation(line: 1649, column: 35, scope: !10033)
!10072 = !DILocation(line: 1649, column: 2, scope: !10033)
!10073 = !DILocation(line: 1654, column: 14, scope: !10074)
!10074 = distinct !DILexicalBlock(scope: !10033, file: !1325, line: 1654, column: 6)
!10075 = !DILocation(line: 1654, column: 6, scope: !10033)
!10076 = !DILocation(line: 1655, column: 3, scope: !10077)
!10077 = distinct !DILexicalBlock(scope: !10074, file: !1325, line: 1654, column: 31)
!10078 = !DILocation(line: 1656, column: 2, scope: !10077)
!10079 = !DILocation(line: 1659, column: 37, scope: !10033)
!10080 = !DILocation(line: 1659, column: 2, scope: !10033)
!10081 = !DILocation(line: 1662, column: 14, scope: !10082)
!10082 = distinct !DILexicalBlock(scope: !10033, file: !1325, line: 1662, column: 6)
!10083 = !DILocation(line: 1662, column: 6, scope: !10033)
!10084 = !DILocation(line: 1663, column: 37, scope: !10085)
!10085 = distinct !DILexicalBlock(scope: !10082, file: !1325, line: 1662, column: 27)
!10086 = !DILocation(line: 1663, column: 3, scope: !10085)
!10087 = !DILocation(line: 1664, column: 2, scope: !10085)
!10088 = !DILocation(line: 1684, column: 26, scope: !10033)
!10089 = !DILocation(line: 1684, column: 2, scope: !10033)
!10090 = !DILocation(line: 1722, column: 2, scope: !10033)
!10091 = !DILocation(line: 1724, column: 1, scope: !10033)
!10092 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1325, file: !1325, line: 651, type: !10093, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !10095)
!10093 = !DISubroutineType(types: !10094)
!10094 = !{null, !1230}
!10095 = !{!10096, !10097, !10098}
!10096 = !DILocalVariable(name: "dev", arg: 1, scope: !10092, file: !1325, line: 651, type: !1230)
!10097 = !DILocalVariable(name: "data", scope: !10092, file: !1325, line: 653, type: !9513)
!10098 = !DILocalVariable(name: "clk", scope: !10092, file: !1325, line: 654, type: !10099)
!10099 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1230)
!10100 = !DILocation(line: 0, scope: !10092)
!10101 = !DILocation(line: 653, column: 38, scope: !10092)
!10102 = !DILocation(line: 656, column: 8, scope: !10092)
!10103 = !DILocation(line: 656, column: 14, scope: !10092)
!10104 = !DILocation(line: 657, column: 1, scope: !10092)
!10105 = distinct !DISubprogram(name: "device_is_ready", scope: !8528, file: !8528, line: 47, type: !10106, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !10108)
!10106 = !DISubroutineType(types: !10107)
!10107 = !{!211, !1230}
!10108 = !{!10109}
!10109 = !DILocalVariable(name: "dev", arg: 1, scope: !10105, file: !8528, line: 47, type: !1230)
!10110 = !DILocation(line: 0, scope: !10105)
!10111 = !DILocation(line: 55, column: 2, scope: !10112)
!10112 = distinct !DILexicalBlock(scope: !10105, file: !8528, line: 55, column: 2)
!10113 = !{i64 2154446972}
!10114 = !DILocation(line: 56, column: 9, scope: !10105)
!10115 = !DILocation(line: 56, column: 2, scope: !10105)
!10116 = distinct !DISubprogram(name: "clock_control_on", scope: !685, file: !685, line: 123, type: !1289, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !10117)
!10117 = !{!10118, !10119, !10120}
!10118 = !DILocalVariable(name: "dev", arg: 1, scope: !10116, file: !685, line: 123, type: !1230)
!10119 = !DILocalVariable(name: "sys", arg: 2, scope: !10116, file: !685, line: 124, type: !779)
!10120 = !DILocalVariable(name: "api", scope: !10116, file: !685, line: 126, type: !1282)
!10121 = !DILocation(line: 0, scope: !10116)
!10122 = !DILocation(line: 127, column: 49, scope: !10116)
!10123 = !DILocation(line: 129, column: 14, scope: !10116)
!10124 = !DILocation(line: 129, column: 9, scope: !10116)
!10125 = !DILocation(line: 129, column: 2, scope: !10116)
!10126 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1366, file: !1366, line: 342, type: !10127, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !10129)
!10127 = !DISubroutineType(types: !10128)
!10128 = !{!103, !1416, !208}
!10129 = !{!10130, !10131, !10132, !10133}
!10130 = !DILocalVariable(name: "config", arg: 1, scope: !10126, file: !1366, line: 342, type: !1416)
!10131 = !DILocalVariable(name: "id", arg: 2, scope: !10126, file: !1366, line: 343, type: !208)
!10132 = !DILocalVariable(name: "ret", scope: !10126, file: !1366, line: 345, type: !103)
!10133 = !DILocalVariable(name: "state", scope: !10126, file: !1366, line: 346, type: !1369)
!10134 = !DILocation(line: 0, scope: !10126)
!10135 = !DILocation(line: 346, column: 2, scope: !10126)
!10136 = !DILocation(line: 348, column: 8, scope: !10126)
!10137 = !DILocation(line: 349, column: 10, scope: !10138)
!10138 = distinct !DILexicalBlock(scope: !10126, file: !1366, line: 349, column: 6)
!10139 = !DILocation(line: 349, column: 6, scope: !10126)
!10140 = !DILocation(line: 353, column: 44, scope: !10126)
!10141 = !DILocation(line: 353, column: 9, scope: !10126)
!10142 = !DILocation(line: 353, column: 2, scope: !10126)
!10143 = !DILocation(line: 354, column: 1, scope: !10126)
!10144 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !9699, file: !9699, line: 497, type: !9858, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !10145)
!10145 = !{!10146, !10147, !10148}
!10146 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10144, file: !9699, line: 497, type: !1271)
!10147 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !10144, file: !9699, line: 497, type: !137)
!10148 = !DILocalVariable(name: "val", scope: !10149, file: !9699, line: 499, type: !137)
!10149 = distinct !DILexicalBlock(scope: !10144, file: !9699, line: 499, column: 3)
!10150 = !DILocation(line: 0, scope: !10144)
!10151 = !DILocation(line: 499, column: 3, scope: !10149)
!10152 = !DILocalVariable(name: "addr", arg: 1, scope: !10153, file: !6322, line: 476, type: !1321)
!10153 = distinct !DISubprogram(name: "__LDREXW", scope: !6322, file: !6322, line: 476, type: !10154, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !10156)
!10154 = !DISubroutineType(types: !10155)
!10155 = !{!137, !1321}
!10156 = !{!10152, !10157}
!10157 = !DILocalVariable(name: "result", scope: !10153, file: !6322, line: 478, type: !137)
!10158 = !DILocation(line: 0, scope: !10153, inlinedAt: !10159)
!10159 = distinct !DILocation(line: 499, column: 3, scope: !10160)
!10160 = distinct !DILexicalBlock(scope: !10149, file: !9699, line: 499, column: 3)
!10161 = !DILocation(line: 480, column: 4, scope: !10153, inlinedAt: !10159)
!10162 = !{i64 2945077}
!10163 = !DILocation(line: 499, column: 3, scope: !10160)
!10164 = !DILocation(line: 0, scope: !10149)
!10165 = !DILocalVariable(name: "value", arg: 1, scope: !10166, file: !6322, line: 527, type: !137)
!10166 = distinct !DISubprogram(name: "__STREXW", scope: !6322, file: !6322, line: 527, type: !10167, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !10169)
!10167 = !DISubroutineType(types: !10168)
!10168 = !{!137, !137, !1321}
!10169 = !{!10165, !10170, !10171}
!10170 = !DILocalVariable(name: "addr", arg: 2, scope: !10166, file: !6322, line: 527, type: !1321)
!10171 = !DILocalVariable(name: "result", scope: !10166, file: !6322, line: 529, type: !137)
!10172 = !DILocation(line: 0, scope: !10166, inlinedAt: !10173)
!10173 = distinct !DILocation(line: 499, column: 3, scope: !10149)
!10174 = !DILocation(line: 531, column: 4, scope: !10166, inlinedAt: !10173)
!10175 = !{i64 2946513}
!10176 = distinct !{!10176, !10151, !10151}
!10177 = !DILocation(line: 500, column: 1, scope: !10144)
!10178 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !9699, file: !9699, line: 850, type: !9867, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !10179)
!10179 = !{!10180, !10181, !10182, !10183}
!10180 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10178, file: !9699, line: 850, type: !1271)
!10181 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10178, file: !9699, line: 850, type: !137)
!10182 = !DILocalVariable(name: "Parity", arg: 3, scope: !10178, file: !9699, line: 850, type: !137)
!10183 = !DILocalVariable(name: "StopBits", arg: 4, scope: !10178, file: !9699, line: 851, type: !137)
!10184 = !DILocation(line: 0, scope: !10178)
!10185 = !DILocation(line: 853, column: 3, scope: !10178)
!10186 = !DILocation(line: 854, column: 3, scope: !10178)
!10187 = !DILocation(line: 855, column: 1, scope: !10178)
!10188 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !9699, file: !9699, line: 1337, type: !9762, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !10189)
!10189 = !{!10190}
!10190 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10188, file: !9699, line: 1337, type: !1271)
!10191 = !DILocation(line: 0, scope: !10188)
!10192 = !DILocation(line: 1339, column: 3, scope: !10188)
!10193 = !DILocation(line: 1340, column: 1, scope: !10188)
!10194 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1366, file: !1366, line: 316, type: !10195, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !10197)
!10195 = !DISubroutineType(types: !10196)
!10196 = !{!103, !1416, !1369}
!10197 = !{!10198, !10199, !10200}
!10198 = !DILocalVariable(name: "config", arg: 1, scope: !10194, file: !1366, line: 317, type: !1416)
!10199 = !DILocalVariable(name: "state", arg: 2, scope: !10194, file: !1366, line: 318, type: !1369)
!10200 = !DILocalVariable(name: "reg", scope: !10194, file: !1366, line: 320, type: !22)
!10201 = !DILocation(line: 0, scope: !10194)
!10202 = !DILocation(line: 329, column: 39, scope: !10194)
!10203 = !DILocation(line: 329, column: 52, scope: !10194)
!10204 = !DILocation(line: 329, column: 9, scope: !10194)
!10205 = !DILocation(line: 329, column: 2, scope: !10194)
!10206 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !196, file: !196, line: 730, type: !10106, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !10207)
!10207 = !{!10208}
!10208 = !DILocalVariable(name: "dev", arg: 1, scope: !10206, file: !196, line: 730, type: !1230)
!10209 = !DILocation(line: 0, scope: !10206)
!10210 = !DILocation(line: 732, column: 9, scope: !10206)
!10211 = !DILocation(line: 732, column: 2, scope: !10206)
!10212 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1521, file: !1521, line: 270, type: !1527, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1441, retainedNodes: !10213)
!10213 = !{!10214}
!10214 = !DILocalVariable(name: "dev", arg: 1, scope: !10212, file: !1521, line: 270, type: !1529)
!10215 = !DILocation(line: 0, scope: !10212)
!10216 = !DILocation(line: 274, column: 2, scope: !10212)
!10217 = !DILocation(line: 275, column: 12, scope: !10212)
!10218 = !DILocation(line: 276, column: 15, scope: !10212)
!10219 = !DILocation(line: 277, column: 16, scope: !10212)
!10220 = !DILocation(line: 278, column: 15, scope: !10212)
!10221 = !DILocation(line: 279, column: 16, scope: !10212)
!10222 = !DILocation(line: 282, column: 2, scope: !10212)
!10223 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !402, file: !402, line: 1814, type: !6356, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1441, retainedNodes: !10224)
!10224 = !{!10225, !10226}
!10225 = !DILocalVariable(name: "IRQn", arg: 1, scope: !10223, file: !402, line: 1814, type: !637)
!10226 = !DILocalVariable(name: "priority", arg: 2, scope: !10223, file: !402, line: 1814, type: !137)
!10227 = !DILocation(line: 0, scope: !10223)
!10228 = !DILocation(line: 1822, column: 46, scope: !10229)
!10229 = distinct !DILexicalBlock(scope: !10230, file: !402, line: 1821, column: 3)
!10230 = distinct !DILexicalBlock(scope: !10223, file: !402, line: 1816, column: 7)
!10231 = !DILocation(line: 1824, column: 1, scope: !10223)
!10232 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1521, file: !1521, line: 118, type: !6259, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1441, retainedNodes: !10233)
!10233 = !{!10234, !10235}
!10234 = !DILocalVariable(name: "arg", arg: 1, scope: !10232, file: !1521, line: 118, type: !102)
!10235 = !DILocalVariable(name: "dticks", scope: !10232, file: !1521, line: 121, type: !137)
!10236 = !DILocation(line: 0, scope: !10232)
!10237 = !DILocation(line: 124, column: 2, scope: !10232)
!10238 = !DILocation(line: 129, column: 17, scope: !10232)
!10239 = !DILocation(line: 129, column: 14, scope: !10232)
!10240 = !DILocation(line: 130, column: 15, scope: !10232)
!10241 = !DILocation(line: 145, column: 27, scope: !10242)
!10242 = distinct !DILexicalBlock(scope: !10243, file: !1521, line: 132, column: 16)
!10243 = distinct !DILexicalBlock(scope: !10232, file: !1521, line: 132, column: 6)
!10244 = !DILocation(line: 145, column: 25, scope: !10242)
!10245 = !DILocation(line: 145, column: 45, scope: !10242)
!10246 = !DILocation(line: 146, column: 30, scope: !10242)
!10247 = !DILocation(line: 146, column: 20, scope: !10242)
!10248 = !DILocation(line: 147, column: 3, scope: !10242)
!10249 = !DILocation(line: 151, column: 2, scope: !10232)
!10250 = !DILocation(line: 152, column: 1, scope: !10232)
!10251 = distinct !DISubprogram(name: "elapsed", scope: !1521, file: !1521, line: 85, type: !135, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1441, retainedNodes: !10252)
!10252 = !{!10253, !10254, !10255}
!10253 = !DILocalVariable(name: "val1", scope: !10251, file: !1521, line: 87, type: !137)
!10254 = !DILocalVariable(name: "ctrl", scope: !10251, file: !1521, line: 88, type: !137)
!10255 = !DILocalVariable(name: "val2", scope: !10251, file: !1521, line: 89, type: !137)
!10256 = !DILocation(line: 87, column: 27, scope: !10251)
!10257 = !DILocation(line: 0, scope: !10251)
!10258 = !DILocation(line: 88, column: 27, scope: !10251)
!10259 = !DILocation(line: 89, column: 27, scope: !10251)
!10260 = !DILocation(line: 105, column: 12, scope: !10261)
!10261 = distinct !DILexicalBlock(scope: !10251, file: !1521, line: 105, column: 6)
!10262 = !DILocation(line: 106, column: 6, scope: !10261)
!10263 = !DILocation(line: 107, column: 16, scope: !10264)
!10264 = distinct !DILexicalBlock(scope: !10261, file: !1521, line: 106, column: 24)
!10265 = !DILocation(line: 111, column: 18, scope: !10264)
!10266 = !DILocation(line: 112, column: 2, scope: !10264)
!10267 = !DILocation(line: 114, column: 20, scope: !10251)
!10268 = !DILocation(line: 114, column: 30, scope: !10251)
!10269 = !DILocation(line: 114, column: 28, scope: !10251)
!10270 = !DILocation(line: 114, column: 2, scope: !10251)
!10271 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1521, file: !1521, line: 154, type: !10272, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1441, retainedNodes: !10274)
!10272 = !DISubroutineType(types: !10273)
!10273 = !{null, !611, !211}
!10274 = !{!10275, !10276, !10277, !10278, !10279, !10280, !10281, !10286, !10287}
!10275 = !DILocalVariable(name: "ticks", arg: 1, scope: !10271, file: !1521, line: 154, type: !611)
!10276 = !DILocalVariable(name: "idle", arg: 2, scope: !10271, file: !1521, line: 154, type: !211)
!10277 = !DILocalVariable(name: "delay", scope: !10271, file: !1521, line: 169, type: !137)
!10278 = !DILocalVariable(name: "val1", scope: !10271, file: !1521, line: 170, type: !137)
!10279 = !DILocalVariable(name: "val2", scope: !10271, file: !1521, line: 170, type: !137)
!10280 = !DILocalVariable(name: "last_load_", scope: !10271, file: !1521, line: 171, type: !137)
!10281 = !DILocalVariable(name: "key", scope: !10271, file: !1521, line: 176, type: !10282)
!10282 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !368, line: 106, baseType: !10283)
!10283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !368, line: 32, size: 32, elements: !10284)
!10284 = !{!10285}
!10285 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !10283, file: !368, line: 33, baseType: !103, size: 32)
!10286 = !DILocalVariable(name: "pending", scope: !10271, file: !1521, line: 178, type: !137)
!10287 = !DILocalVariable(name: "unannounced", scope: !10271, file: !1521, line: 185, type: !137)
!10288 = !DILocation(line: 0, scope: !10271)
!10289 = !DILocation(line: 162, column: 49, scope: !10290)
!10290 = distinct !DILexicalBlock(scope: !10271, file: !1521, line: 162, column: 6)
!10291 = !DILocation(line: 163, column: 17, scope: !10292)
!10292 = distinct !DILexicalBlock(scope: !10290, file: !1521, line: 162, column: 78)
!10293 = !DILocation(line: 164, column: 13, scope: !10292)
!10294 = !DILocation(line: 165, column: 3, scope: !10292)
!10295 = !DILocation(line: 171, column: 24, scope: !10271)
!10296 = !DILocation(line: 173, column: 10, scope: !10271)
!10297 = !DILocation(line: 174, column: 10, scope: !10271)
!10298 = !DILocalVariable(name: "l", arg: 1, scope: !10299, file: !368, line: 136, type: !10302)
!10299 = distinct !DISubprogram(name: "k_spin_lock", scope: !368, file: !368, line: 136, type: !10300, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1441, retainedNodes: !10303)
!10300 = !DISubroutineType(types: !10301)
!10301 = !{!10282, !10302}
!10302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1547, size: 32)
!10303 = !{!10298, !10304}
!10304 = !DILocalVariable(name: "k", scope: !10299, file: !368, line: 139, type: !10282)
!10305 = !DILocation(line: 0, scope: !10299, inlinedAt: !10306)
!10306 = distinct !DILocation(line: 176, column: 25, scope: !10271)
!10307 = !DILocation(line: 55, column: 2, scope: !10308, inlinedAt: !10312)
!10308 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6148, file: !6148, line: 42, type: !6149, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1441, retainedNodes: !10309)
!10309 = !{!10310, !10311}
!10310 = !DILocalVariable(name: "key", scope: !10308, file: !6148, line: 44, type: !32)
!10311 = !DILocalVariable(name: "tmp", scope: !10308, file: !6148, line: 53, type: !32)
!10312 = distinct !DILocation(line: 145, column: 10, scope: !10299, inlinedAt: !10306)
!10313 = !{i64 2022925}
!10314 = !DILocation(line: 0, scope: !10308, inlinedAt: !10312)
!10315 = !DILocation(line: 178, column: 21, scope: !10271)
!10316 = !DILocation(line: 180, column: 18, scope: !10271)
!10317 = !DILocation(line: 182, column: 14, scope: !10271)
!10318 = !DILocation(line: 183, column: 15, scope: !10271)
!10319 = !DILocation(line: 185, column: 39, scope: !10271)
!10320 = !DILocation(line: 185, column: 37, scope: !10271)
!10321 = !DILocation(line: 187, column: 27, scope: !10322)
!10322 = distinct !DILexicalBlock(scope: !10271, file: !1521, line: 187, column: 6)
!10323 = !DILocation(line: 187, column: 6, scope: !10271)
!10324 = !DILocation(line: 202, column: 27, scope: !10325)
!10325 = distinct !DILexicalBlock(scope: !10322, file: !1521, line: 195, column: 9)
!10326 = !DILocation(line: 202, column: 48, scope: !10325)
!10327 = !DILocation(line: 203, column: 9, scope: !10325)
!10328 = !DILocation(line: 204, column: 11, scope: !10325)
!10329 = !DILocation(line: 205, column: 13, scope: !10330)
!10330 = distinct !DILexicalBlock(scope: !10325, file: !1521, line: 205, column: 7)
!10331 = !DILocation(line: 205, column: 7, scope: !10325)
!10332 = !DILocation(line: 0, scope: !10322)
!10333 = !DILocation(line: 212, column: 18, scope: !10271)
!10334 = !DILocation(line: 214, column: 28, scope: !10271)
!10335 = !DILocation(line: 214, column: 16, scope: !10271)
!10336 = !DILocation(line: 215, column: 15, scope: !10271)
!10337 = !DILocation(line: 227, column: 11, scope: !10338)
!10338 = distinct !DILexicalBlock(scope: !10271, file: !1521, line: 227, column: 6)
!10339 = !DILocation(line: 227, column: 6, scope: !10271)
!10340 = !DILocation(line: 228, column: 15, scope: !10341)
!10341 = distinct !DILexicalBlock(scope: !10338, file: !1521, line: 227, column: 19)
!10342 = !DILocation(line: 228, column: 38, scope: !10341)
!10343 = !DILocation(line: 228, column: 24, scope: !10341)
!10344 = !DILocation(line: 229, column: 2, scope: !10341)
!10345 = !DILocation(line: 230, column: 24, scope: !10346)
!10346 = distinct !DILexicalBlock(scope: !10338, file: !1521, line: 229, column: 9)
!10347 = !DILocation(line: 230, column: 15, scope: !10346)
!10348 = !DILocation(line: 0, scope: !10338)
!10349 = !DILocalVariable(name: "key", arg: 2, scope: !10350, file: !368, line: 190, type: !10282)
!10350 = distinct !DISubprogram(name: "k_spin_unlock", scope: !368, file: !368, line: 189, type: !10351, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1441, retainedNodes: !10353)
!10351 = !DISubroutineType(types: !10352)
!10352 = !{null, !10302, !10282}
!10353 = !{!10354, !10349}
!10354 = !DILocalVariable(name: "l", arg: 1, scope: !10350, file: !368, line: 189, type: !10302)
!10355 = !DILocation(line: 0, scope: !10350, inlinedAt: !10356)
!10356 = distinct !DILocation(line: 232, column: 2, scope: !10271)
!10357 = !DILocalVariable(name: "key", arg: 1, scope: !10358, file: !6148, line: 84, type: !32)
!10358 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6148, file: !6148, line: 84, type: !6159, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1441, retainedNodes: !10359)
!10359 = !{!10357}
!10360 = !DILocation(line: 0, scope: !10358, inlinedAt: !10361)
!10361 = distinct !DILocation(line: 215, column: 2, scope: !10350, inlinedAt: !10356)
!10362 = !DILocation(line: 95, column: 2, scope: !10358, inlinedAt: !10361)
!10363 = !{i64 2023742}
!10364 = !DILocation(line: 234, column: 1, scope: !10271)
!10365 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1521, file: !1521, line: 236, type: !135, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1441, retainedNodes: !10366)
!10366 = !{!10367, !10368}
!10367 = !DILocalVariable(name: "key", scope: !10365, file: !1521, line: 242, type: !10282)
!10368 = !DILocalVariable(name: "cyc", scope: !10365, file: !1521, line: 243, type: !137)
!10369 = !DILocation(line: 0, scope: !10299, inlinedAt: !10370)
!10370 = distinct !DILocation(line: 242, column: 25, scope: !10365)
!10371 = !DILocation(line: 55, column: 2, scope: !10308, inlinedAt: !10372)
!10372 = distinct !DILocation(line: 145, column: 10, scope: !10299, inlinedAt: !10370)
!10373 = !DILocation(line: 0, scope: !10308, inlinedAt: !10372)
!10374 = !DILocation(line: 0, scope: !10365)
!10375 = !DILocation(line: 243, column: 17, scope: !10365)
!10376 = !DILocation(line: 243, column: 29, scope: !10365)
!10377 = !DILocation(line: 243, column: 27, scope: !10365)
!10378 = !DILocation(line: 243, column: 43, scope: !10365)
!10379 = !DILocation(line: 243, column: 41, scope: !10365)
!10380 = !DILocation(line: 0, scope: !10350, inlinedAt: !10381)
!10381 = distinct !DILocation(line: 245, column: 2, scope: !10365)
!10382 = !DILocation(line: 0, scope: !10358, inlinedAt: !10383)
!10383 = distinct !DILocation(line: 215, column: 2, scope: !10350, inlinedAt: !10381)
!10384 = !DILocation(line: 95, column: 2, scope: !10358, inlinedAt: !10383)
!10385 = !DILocation(line: 246, column: 13, scope: !10365)
!10386 = !DILocation(line: 246, column: 2, scope: !10365)
!10387 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1521, file: !1521, line: 249, type: !135, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1441, retainedNodes: !10388)
!10388 = !{!10389, !10390}
!10389 = !DILocalVariable(name: "key", scope: !10387, file: !1521, line: 251, type: !10282)
!10390 = !DILocalVariable(name: "ret", scope: !10387, file: !1521, line: 252, type: !137)
!10391 = !DILocation(line: 0, scope: !10299, inlinedAt: !10392)
!10392 = distinct !DILocation(line: 251, column: 25, scope: !10387)
!10393 = !DILocation(line: 55, column: 2, scope: !10308, inlinedAt: !10394)
!10394 = distinct !DILocation(line: 145, column: 10, scope: !10299, inlinedAt: !10392)
!10395 = !DILocation(line: 0, scope: !10308, inlinedAt: !10394)
!10396 = !DILocation(line: 0, scope: !10387)
!10397 = !DILocation(line: 252, column: 17, scope: !10387)
!10398 = !DILocation(line: 252, column: 29, scope: !10387)
!10399 = !DILocation(line: 252, column: 27, scope: !10387)
!10400 = !DILocation(line: 0, scope: !10350, inlinedAt: !10401)
!10401 = distinct !DILocation(line: 254, column: 2, scope: !10387)
!10402 = !DILocation(line: 0, scope: !10358, inlinedAt: !10403)
!10403 = distinct !DILocation(line: 215, column: 2, scope: !10350, inlinedAt: !10401)
!10404 = !DILocation(line: 95, column: 2, scope: !10358, inlinedAt: !10403)
!10405 = !DILocation(line: 255, column: 2, scope: !10387)
!10406 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1521, file: !1521, line: 258, type: !2848, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1441, retainedNodes: !162)
!10407 = !DILocation(line: 260, column: 6, scope: !10408)
!10408 = distinct !DILexicalBlock(scope: !10406, file: !1521, line: 260, column: 6)
!10409 = !DILocation(line: 260, column: 16, scope: !10408)
!10410 = !DILocation(line: 260, column: 6, scope: !10406)
!10411 = !DILocation(line: 261, column: 17, scope: !10412)
!10412 = distinct !DILexicalBlock(scope: !10408, file: !1521, line: 260, column: 34)
!10413 = !DILocation(line: 262, column: 2, scope: !10412)
!10414 = !DILocation(line: 263, column: 1, scope: !10406)
!10415 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1521, file: !1521, line: 265, type: !2848, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1441, retainedNodes: !162)
!10416 = !DILocation(line: 267, column: 16, scope: !10415)
!10417 = !DILocation(line: 268, column: 1, scope: !10415)
!10418 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !10419, file: !10419, line: 9, type: !10420, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2655, retainedNodes: !10443)
!10419 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10420 = !DISubroutineType(types: !10421)
!10421 = !{!103, !10422, !208, !10442}
!10422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10423, size: 32)
!10423 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10424)
!10424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1366, line: 60, size: 64, elements: !10425)
!10425 = !{!10426, !10441}
!10426 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !10424, file: !1366, line: 69, baseType: !10427, size: 32)
!10427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10428, size: 32)
!10428 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10429)
!10429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1366, line: 50, size: 64, elements: !10430)
!10430 = !{!10431, !10439, !10440}
!10431 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !10429, file: !1366, line: 52, baseType: !10432, size: 32)
!10432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10433, size: 32)
!10433 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10434)
!10434 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1377, line: 37, baseType: !10435)
!10435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1377, line: 32, size: 64, elements: !10436)
!10436 = !{!10437, !10438}
!10437 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10435, file: !1377, line: 34, baseType: !137, size: 32)
!10438 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10435, file: !1377, line: 36, baseType: !137, size: 32, offset: 32)
!10439 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !10429, file: !1366, line: 54, baseType: !208, size: 8, offset: 32)
!10440 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10429, file: !1366, line: 56, baseType: !208, size: 8, offset: 40)
!10441 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !10424, file: !1366, line: 71, baseType: !208, size: 8, offset: 32)
!10442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10427, size: 32)
!10443 = !{!10444, !10445, !10446}
!10444 = !DILocalVariable(name: "config", arg: 1, scope: !10418, file: !10419, line: 9, type: !10422)
!10445 = !DILocalVariable(name: "id", arg: 2, scope: !10418, file: !10419, line: 9, type: !208)
!10446 = !DILocalVariable(name: "state", arg: 3, scope: !10418, file: !10419, line: 10, type: !10442)
!10447 = !DILocation(line: 0, scope: !10418)
!10448 = !DILocation(line: 12, column: 20, scope: !10418)
!10449 = !DILocation(line: 13, column: 27, scope: !10418)
!10450 = !DILocation(line: 13, column: 42, scope: !10418)
!10451 = !DILocation(line: 13, column: 19, scope: !10418)
!10452 = !DILocation(line: 13, column: 16, scope: !10418)
!10453 = !DILocation(line: 13, column: 2, scope: !10418)
!10454 = distinct !{!10454, !10453, !10455}
!10455 = !DILocation(line: 19, column: 2, scope: !10418)
!10456 = !DILocation(line: 14, column: 23, scope: !10457)
!10457 = distinct !DILexicalBlock(scope: !10458, file: !10419, line: 14, column: 7)
!10458 = distinct !DILexicalBlock(scope: !10418, file: !10419, line: 13, column: 54)
!10459 = !DILocation(line: 14, column: 10, scope: !10457)
!10460 = !DILocation(line: 18, column: 11, scope: !10458)
!10461 = !DILocation(line: 14, column: 7, scope: !10458)
!10462 = !DILocation(line: 22, column: 1, scope: !10418)
!10463 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1638, file: !1638, line: 193, type: !10464, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1556, retainedNodes: !10473)
!10464 = !DISubroutineType(types: !10465)
!10465 = !{!103, !10466, !208, !22}
!10466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10467, size: 32)
!10467 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10468)
!10468 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1377, line: 37, baseType: !10469)
!10469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1377, line: 32, size: 64, elements: !10470)
!10470 = !{!10471, !10472}
!10471 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10469, file: !1377, line: 34, baseType: !137, size: 32)
!10472 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10469, file: !1377, line: 36, baseType: !137, size: 32, offset: 32)
!10473 = !{!10474, !10475, !10476, !10477, !10478, !10479, !10480, !10481, !10483}
!10474 = !DILocalVariable(name: "pins", arg: 1, scope: !10463, file: !1638, line: 193, type: !10466)
!10475 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !10463, file: !1638, line: 193, type: !208)
!10476 = !DILocalVariable(name: "reg", arg: 3, scope: !10463, file: !1638, line: 194, type: !22)
!10477 = !DILocalVariable(name: "pin", scope: !10463, file: !1638, line: 196, type: !137)
!10478 = !DILocalVariable(name: "mux", scope: !10463, file: !1638, line: 196, type: !137)
!10479 = !DILocalVariable(name: "pin_cgf", scope: !10463, file: !1638, line: 197, type: !137)
!10480 = !DILocalVariable(name: "ret", scope: !10463, file: !1638, line: 198, type: !103)
!10481 = !DILocalVariable(name: "i", scope: !10482, file: !1638, line: 209, type: !208)
!10482 = distinct !DILexicalBlock(scope: !10463, file: !1638, line: 209, column: 2)
!10483 = !DILocalVariable(name: "gpio_out", scope: !10484, file: !1638, line: 239, type: !137)
!10484 = distinct !DILexicalBlock(scope: !10485, file: !1638, line: 238, column: 55)
!10485 = distinct !DILexicalBlock(scope: !10486, file: !1638, line: 238, column: 14)
!10486 = distinct !DILexicalBlock(scope: !10487, file: !1638, line: 236, column: 14)
!10487 = distinct !DILexicalBlock(scope: !10488, file: !1638, line: 234, column: 7)
!10488 = distinct !DILexicalBlock(scope: !10489, file: !1638, line: 209, column: 41)
!10489 = distinct !DILexicalBlock(scope: !10482, file: !1638, line: 209, column: 2)
!10490 = !DILocation(line: 0, scope: !10463)
!10491 = !DILocation(line: 0, scope: !10482)
!10492 = !DILocation(line: 209, column: 25, scope: !10489)
!10493 = !DILocation(line: 209, column: 2, scope: !10482)
!10494 = distinct !{!10494, !10493, !10495}
!10495 = !DILocation(line: 259, column: 2, scope: !10482)
!10496 = !DILocation(line: 210, column: 17, scope: !10488)
!10497 = !DILocation(line: 234, column: 7, scope: !10487)
!10498 = !DILocation(line: 234, column: 33, scope: !10487)
!10499 = !DILocation(line: 234, column: 7, scope: !10488)
!10500 = !DILocation(line: 235, column: 22, scope: !10501)
!10501 = distinct !DILexicalBlock(scope: !10487, file: !1638, line: 234, column: 49)
!10502 = !DILocation(line: 235, column: 29, scope: !10501)
!10503 = !DILocation(line: 236, column: 3, scope: !10501)
!10504 = !DILocation(line: 236, column: 14, scope: !10487)
!10505 = !DILocation(line: 239, column: 32, scope: !10484)
!10506 = !DILocation(line: 0, scope: !10484)
!10507 = !DILocation(line: 241, column: 8, scope: !10484)
!10508 = !DILocation(line: 246, column: 3, scope: !10484)
!10509 = !DILocation(line: 252, column: 9, scope: !10488)
!10510 = !DILocation(line: 255, column: 9, scope: !10488)
!10511 = !DILocation(line: 256, column: 11, scope: !10512)
!10512 = distinct !DILexicalBlock(scope: !10488, file: !1638, line: 256, column: 7)
!10513 = !DILocation(line: 209, column: 37, scope: !10489)
!10514 = !DILocation(line: 256, column: 7, scope: !10488)
!10515 = !DILocation(line: 262, column: 1, scope: !10463)
!10516 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1638, file: !1638, line: 176, type: !10517, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1556, retainedNodes: !10519)
!10517 = !DISubroutineType(types: !10518)
!10518 = !{!103, !137, !137, !137}
!10519 = !{!10520, !10521, !10522, !10523}
!10520 = !DILocalVariable(name: "pin", arg: 1, scope: !10516, file: !1638, line: 176, type: !137)
!10521 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !10516, file: !1638, line: 176, type: !137)
!10522 = !DILocalVariable(name: "pin_func", arg: 3, scope: !10516, file: !1638, line: 176, type: !137)
!10523 = !DILocalVariable(name: "port_device", scope: !10516, file: !1638, line: 178, type: !1568)
!10524 = !DILocation(line: 0, scope: !10516)
!10525 = !DILocation(line: 180, column: 22, scope: !10526)
!10526 = distinct !DILexicalBlock(scope: !10516, file: !1638, line: 180, column: 6)
!10527 = !DILocation(line: 180, column: 6, scope: !10516)
!10528 = !DILocation(line: 180, column: 6, scope: !10526)
!10529 = !DILocation(line: 184, column: 16, scope: !10516)
!10530 = !DILocation(line: 186, column: 19, scope: !10531)
!10531 = distinct !DILexicalBlock(scope: !10516, file: !1638, line: 186, column: 6)
!10532 = !DILocation(line: 186, column: 28, scope: !10531)
!10533 = !DILocation(line: 186, column: 33, scope: !10531)
!10534 = !DILocation(line: 186, column: 6, scope: !10516)
!10535 = !DILocation(line: 190, column: 43, scope: !10516)
!10536 = !DILocation(line: 190, column: 9, scope: !10516)
!10537 = !DILocation(line: 190, column: 2, scope: !10516)
!10538 = !DILocation(line: 191, column: 1, scope: !10516)
!10539 = distinct !DISubprogram(name: "device_is_ready", scope: !8528, file: !8528, line: 47, type: !10540, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1556, retainedNodes: !10542)
!10540 = !DISubroutineType(types: !10541)
!10541 = !{!211, !1568}
!10542 = !{!10543}
!10543 = !DILocalVariable(name: "dev", arg: 1, scope: !10539, file: !8528, line: 47, type: !1568)
!10544 = !DILocation(line: 0, scope: !10539)
!10545 = !DILocation(line: 55, column: 2, scope: !10546)
!10546 = distinct !DILexicalBlock(scope: !10539, file: !8528, line: 55, column: 2)
!10547 = !{i64 2149260995}
!10548 = !DILocation(line: 56, column: 9, scope: !10539)
!10549 = !DILocation(line: 56, column: 2, scope: !10539)
!10550 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !196, file: !196, line: 730, type: !10540, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1556, retainedNodes: !10551)
!10551 = !{!10552}
!10552 = !DILocalVariable(name: "dev", arg: 1, scope: !10550, file: !196, line: 730, type: !1568)
!10553 = !DILocation(line: 0, scope: !10550)
!10554 = !DILocation(line: 732, column: 9, scope: !10550)
!10555 = !DILocation(line: 732, column: 2, scope: !10550)
!10556 = distinct !DISubprogram(name: "SystemInit", scope: !1688, file: !1688, line: 167, type: !2848, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1646, retainedNodes: !162)
!10557 = !DILocation(line: 182, column: 1, scope: !10556)
!10558 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1688, file: !1688, line: 220, type: !2848, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1646, retainedNodes: !10559)
!10559 = !{!10560, !10561, !10562, !10563, !10564}
!10560 = !DILocalVariable(name: "tmp", scope: !10558, file: !1688, line: 222, type: !137)
!10561 = !DILocalVariable(name: "pllvco", scope: !10558, file: !1688, line: 222, type: !137)
!10562 = !DILocalVariable(name: "pllp", scope: !10558, file: !1688, line: 222, type: !137)
!10563 = !DILocalVariable(name: "pllsource", scope: !10558, file: !1688, line: 222, type: !137)
!10564 = !DILocalVariable(name: "pllm", scope: !10558, file: !1688, line: 222, type: !137)
!10565 = !DILocation(line: 0, scope: !10558)
!10566 = !DILocation(line: 225, column: 14, scope: !10558)
!10567 = !DILocation(line: 225, column: 19, scope: !10558)
!10568 = !DILocation(line: 227, column: 3, scope: !10558)
!10569 = !DILocation(line: 240, column: 25, scope: !10570)
!10570 = distinct !DILexicalBlock(scope: !10558, file: !1688, line: 228, column: 3)
!10571 = !DILocation(line: 241, column: 19, scope: !10570)
!10572 = !DILocation(line: 241, column: 27, scope: !10570)
!10573 = !DILocation(line: 0, scope: !10574)
!10574 = distinct !DILexicalBlock(scope: !10570, file: !1688, line: 243, column: 11)
!10575 = !DILocation(line: 254, column: 22, scope: !10570)
!10576 = !DILocation(line: 254, column: 62, scope: !10570)
!10577 = !DILocation(line: 255, column: 31, scope: !10570)
!10578 = !DILocation(line: 256, column: 7, scope: !10570)
!10579 = !DILocation(line: 0, scope: !10570)
!10580 = !DILocation(line: 263, column: 30, scope: !10558)
!10581 = !DILocation(line: 263, column: 52, scope: !10558)
!10582 = !DILocation(line: 263, column: 9, scope: !10558)
!10583 = !DILocation(line: 265, column: 19, scope: !10558)
!10584 = !DILocation(line: 266, column: 1, scope: !10558)
!10585 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !10586, file: !10586, line: 200, type: !10587, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2657, retainedNodes: !162)
!10586 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10587 = !DISubroutineType(types: !10588)
!10588 = !{!10589}
!10589 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !2661, line: 44, baseType: !2660)
!10590 = !DILocation(line: 202, column: 3, scope: !10585)
!10591 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !10586, file: !10586, line: 219, type: !10592, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2657, retainedNodes: !10616)
!10592 = !DISubroutineType(types: !10593)
!10593 = !{!10589, !10594}
!10594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10595, size: 32)
!10595 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !10596, line: 70, baseType: !10597)
!10596 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10597 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10596, line: 49, size: 384, elements: !10598)
!10598 = !{!10599, !10600, !10601, !10602, !10603, !10604, !10605}
!10599 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !10597, file: !10596, line: 51, baseType: !137, size: 32)
!10600 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !10597, file: !10596, line: 54, baseType: !137, size: 32, offset: 32)
!10601 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !10597, file: !10596, line: 57, baseType: !137, size: 32, offset: 64)
!10602 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !10597, file: !10596, line: 60, baseType: !137, size: 32, offset: 96)
!10603 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !10597, file: !10596, line: 63, baseType: !137, size: 32, offset: 128)
!10604 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !10597, file: !10596, line: 66, baseType: !137, size: 32, offset: 160)
!10605 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !10597, file: !10596, line: 69, baseType: !10606, size: 192, offset: 192)
!10606 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !10607, line: 73, baseType: !10608)
!10607 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10608 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10607, line: 45, size: 192, elements: !10609)
!10609 = !{!10610, !10611, !10612, !10613, !10614, !10615}
!10610 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !10608, file: !10607, line: 47, baseType: !137, size: 32)
!10611 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !10608, file: !10607, line: 50, baseType: !137, size: 32, offset: 32)
!10612 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !10608, file: !10607, line: 53, baseType: !137, size: 32, offset: 64)
!10613 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !10608, file: !10607, line: 56, baseType: !137, size: 32, offset: 96)
!10614 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !10608, file: !10607, line: 60, baseType: !137, size: 32, offset: 128)
!10615 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !10608, file: !10607, line: 63, baseType: !137, size: 32, offset: 160)
!10616 = !{!10617, !10618, !10619, !10620, !10624}
!10617 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !10591, file: !10586, line: 219, type: !10594)
!10618 = !DILocalVariable(name: "tickstart", scope: !10591, file: !10586, line: 221, type: !137)
!10619 = !DILocalVariable(name: "pll_config", scope: !10591, file: !10586, line: 221, type: !137)
!10620 = !DILocalVariable(name: "pwrclkchanged", scope: !10621, file: !10586, line: 391, type: !10623)
!10621 = distinct !DILexicalBlock(scope: !10622, file: !10586, line: 390, column: 3)
!10622 = distinct !DILexicalBlock(scope: !10591, file: !10586, line: 389, column: 6)
!10623 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !680, line: 188, baseType: !2667)
!10624 = !DILocalVariable(name: "tmpreg", scope: !10625, file: !10586, line: 400, type: !176)
!10625 = distinct !DILexicalBlock(scope: !10626, file: !10586, line: 400, column: 7)
!10626 = distinct !DILexicalBlock(scope: !10627, file: !10586, line: 399, column: 5)
!10627 = distinct !DILexicalBlock(scope: !10621, file: !10586, line: 398, column: 8)
!10628 = !DILocation(line: 0, scope: !10591)
!10629 = !DILocation(line: 224, column: 24, scope: !10630)
!10630 = distinct !DILexicalBlock(scope: !10591, file: !10586, line: 224, column: 6)
!10631 = !DILocation(line: 224, column: 6, scope: !10591)
!10632 = !DILocation(line: 232, column: 27, scope: !10633)
!10633 = distinct !DILexicalBlock(scope: !10591, file: !10586, line: 232, column: 6)
!10634 = !DILocation(line: 232, column: 43, scope: !10633)
!10635 = !DILocation(line: 232, column: 69, scope: !10633)
!10636 = !DILocation(line: 232, column: 6, scope: !10591)
!10637 = !DILocation(line: 237, column: 9, scope: !10638)
!10638 = distinct !DILexicalBlock(scope: !10639, file: !10586, line: 237, column: 8)
!10639 = distinct !DILexicalBlock(scope: !10633, file: !10586, line: 233, column: 3)
!10640 = !DILocation(line: 237, column: 39, scope: !10638)
!10641 = !DILocation(line: 237, column: 60, scope: !10638)
!10642 = !DILocation(line: 238, column: 9, scope: !10638)
!10643 = !DILocation(line: 238, column: 39, scope: !10638)
!10644 = !DILocation(line: 238, column: 60, scope: !10638)
!10645 = !DILocation(line: 238, column: 70, scope: !10638)
!10646 = !DILocation(line: 238, column: 78, scope: !10638)
!10647 = !DILocation(line: 238, column: 100, scope: !10638)
!10648 = !DILocation(line: 237, column: 8, scope: !10639)
!10649 = !DILocation(line: 240, column: 11, scope: !10650)
!10650 = distinct !DILexicalBlock(scope: !10651, file: !10586, line: 240, column: 10)
!10651 = distinct !DILexicalBlock(scope: !10638, file: !10586, line: 239, column: 5)
!10652 = !DILocation(line: 240, column: 57, scope: !10650)
!10653 = !DILocation(line: 240, column: 80, scope: !10650)
!10654 = !DILocation(line: 240, column: 89, scope: !10650)
!10655 = !DILocation(line: 240, column: 10, scope: !10651)
!10656 = !DILocation(line: 248, column: 7, scope: !10657)
!10657 = distinct !DILexicalBlock(scope: !10658, file: !10586, line: 248, column: 7)
!10658 = distinct !DILexicalBlock(scope: !10659, file: !10586, line: 248, column: 7)
!10659 = distinct !DILexicalBlock(scope: !10638, file: !10586, line: 246, column: 5)
!10660 = !DILocation(line: 248, column: 7, scope: !10658)
!10661 = !DILocation(line: 248, column: 7, scope: !10662)
!10662 = distinct !DILexicalBlock(scope: !10657, file: !10586, line: 248, column: 7)
!10663 = !DILocation(line: 248, column: 7, scope: !10664)
!10664 = distinct !DILexicalBlock(scope: !10665, file: !10586, line: 248, column: 7)
!10665 = distinct !DILexicalBlock(scope: !10657, file: !10586, line: 248, column: 7)
!10666 = !DILocation(line: 248, column: 7, scope: !10667)
!10667 = distinct !DILexicalBlock(scope: !10665, file: !10586, line: 248, column: 7)
!10668 = !DILocation(line: 0, scope: !10657)
!10669 = !DILocation(line: 251, column: 30, scope: !10670)
!10670 = distinct !DILexicalBlock(scope: !10659, file: !10586, line: 251, column: 10)
!10671 = !DILocation(line: 251, column: 40, scope: !10670)
!10672 = !DILocation(line: 0, scope: !10670)
!10673 = !DILocation(line: 251, column: 10, scope: !10659)
!10674 = !DILocation(line: 257, column: 15, scope: !10675)
!10675 = distinct !DILexicalBlock(scope: !10670, file: !10586, line: 252, column: 7)
!10676 = !DILocation(line: 257, column: 51, scope: !10675)
!10677 = !DILocation(line: 257, column: 9, scope: !10675)
!10678 = !DILocation(line: 259, column: 15, scope: !10679)
!10679 = distinct !DILexicalBlock(scope: !10680, file: !10586, line: 259, column: 14)
!10680 = distinct !DILexicalBlock(scope: !10675, file: !10586, line: 258, column: 9)
!10681 = !DILocation(line: 259, column: 29, scope: !10679)
!10682 = !DILocation(line: 259, column: 43, scope: !10679)
!10683 = !DILocation(line: 259, column: 14, scope: !10680)
!10684 = distinct !{!10684, !10677, !10685}
!10685 = !DILocation(line: 263, column: 9, scope: !10675)
!10686 = !DILocation(line: 271, column: 15, scope: !10687)
!10687 = distinct !DILexicalBlock(scope: !10670, file: !10586, line: 266, column: 7)
!10688 = !DILocation(line: 271, column: 9, scope: !10687)
!10689 = !DILocation(line: 273, column: 15, scope: !10690)
!10690 = distinct !DILexicalBlock(scope: !10691, file: !10586, line: 273, column: 14)
!10691 = distinct !DILexicalBlock(scope: !10687, file: !10586, line: 272, column: 9)
!10692 = !DILocation(line: 273, column: 29, scope: !10690)
!10693 = !DILocation(line: 273, column: 43, scope: !10690)
!10694 = !DILocation(line: 273, column: 14, scope: !10691)
!10695 = distinct !{!10695, !10688, !10696}
!10696 = !DILocation(line: 277, column: 9, scope: !10687)
!10697 = !DILocation(line: 282, column: 27, scope: !10698)
!10698 = distinct !DILexicalBlock(scope: !10591, file: !10586, line: 282, column: 6)
!10699 = !DILocation(line: 282, column: 43, scope: !10698)
!10700 = !DILocation(line: 282, column: 69, scope: !10698)
!10701 = !DILocation(line: 282, column: 6, scope: !10591)
!10702 = !DILocation(line: 289, column: 9, scope: !10703)
!10703 = distinct !DILexicalBlock(scope: !10704, file: !10586, line: 289, column: 8)
!10704 = distinct !DILexicalBlock(scope: !10698, file: !10586, line: 283, column: 3)
!10705 = !DILocation(line: 289, column: 39, scope: !10703)
!10706 = !DILocation(line: 289, column: 60, scope: !10703)
!10707 = !DILocation(line: 290, column: 9, scope: !10703)
!10708 = !DILocation(line: 290, column: 39, scope: !10703)
!10709 = !DILocation(line: 290, column: 60, scope: !10703)
!10710 = !DILocation(line: 290, column: 70, scope: !10703)
!10711 = !DILocation(line: 290, column: 78, scope: !10703)
!10712 = !DILocation(line: 290, column: 100, scope: !10703)
!10713 = !DILocation(line: 289, column: 8, scope: !10704)
!10714 = !DILocation(line: 293, column: 11, scope: !10715)
!10715 = distinct !DILexicalBlock(scope: !10716, file: !10586, line: 293, column: 10)
!10716 = distinct !DILexicalBlock(scope: !10703, file: !10586, line: 291, column: 5)
!10717 = !DILocation(line: 293, column: 57, scope: !10715)
!10718 = !DILocation(line: 293, column: 80, scope: !10715)
!10719 = !DILocation(line: 293, column: 89, scope: !10715)
!10720 = !DILocation(line: 293, column: 10, scope: !10716)
!10721 = !DILocation(line: 307, column: 30, scope: !10722)
!10722 = distinct !DILexicalBlock(scope: !10723, file: !10586, line: 307, column: 10)
!10723 = distinct !DILexicalBlock(scope: !10703, file: !10586, line: 305, column: 5)
!10724 = !DILocation(line: 307, column: 39, scope: !10722)
!10725 = !DILocation(line: 307, column: 10, scope: !10723)
!10726 = !DILocation(line: 310, column: 9, scope: !10727)
!10727 = distinct !DILexicalBlock(scope: !10722, file: !10586, line: 308, column: 7)
!10728 = !DILocation(line: 313, column: 21, scope: !10727)
!10729 = !DILocation(line: 316, column: 9, scope: !10727)
!10730 = !DILocation(line: 316, column: 15, scope: !10727)
!10731 = !DILocation(line: 316, column: 51, scope: !10727)
!10732 = !DILocation(line: 318, column: 15, scope: !10733)
!10733 = distinct !DILexicalBlock(scope: !10734, file: !10586, line: 318, column: 14)
!10734 = distinct !DILexicalBlock(scope: !10727, file: !10586, line: 317, column: 9)
!10735 = !DILocation(line: 318, column: 29, scope: !10733)
!10736 = !DILocation(line: 318, column: 43, scope: !10733)
!10737 = !DILocation(line: 318, column: 14, scope: !10734)
!10738 = distinct !{!10738, !10729, !10739}
!10739 = !DILocation(line: 322, column: 9, scope: !10727)
!10740 = !DILocation(line: 330, column: 9, scope: !10741)
!10741 = distinct !DILexicalBlock(scope: !10722, file: !10586, line: 328, column: 7)
!10742 = !DILocation(line: 333, column: 21, scope: !10741)
!10743 = !DILocation(line: 336, column: 9, scope: !10741)
!10744 = !DILocation(line: 336, column: 15, scope: !10741)
!10745 = !DILocation(line: 338, column: 15, scope: !10746)
!10746 = distinct !DILexicalBlock(scope: !10747, file: !10586, line: 338, column: 14)
!10747 = distinct !DILexicalBlock(scope: !10741, file: !10586, line: 337, column: 9)
!10748 = !DILocation(line: 338, column: 29, scope: !10746)
!10749 = !DILocation(line: 338, column: 43, scope: !10746)
!10750 = !DILocation(line: 338, column: 14, scope: !10747)
!10751 = distinct !{!10751, !10743, !10752}
!10752 = !DILocation(line: 342, column: 9, scope: !10741)
!10753 = !DILocation(line: 0, scope: !10703)
!10754 = !DILocation(line: 347, column: 27, scope: !10755)
!10755 = distinct !DILexicalBlock(scope: !10591, file: !10586, line: 347, column: 6)
!10756 = !DILocation(line: 347, column: 43, scope: !10755)
!10757 = !DILocation(line: 347, column: 69, scope: !10755)
!10758 = !DILocation(line: 347, column: 6, scope: !10591)
!10759 = !DILocation(line: 353, column: 28, scope: !10760)
!10760 = distinct !DILexicalBlock(scope: !10761, file: !10586, line: 353, column: 8)
!10761 = distinct !DILexicalBlock(scope: !10755, file: !10586, line: 348, column: 3)
!10762 = !DILocation(line: 353, column: 37, scope: !10760)
!10763 = !DILocation(line: 353, column: 8, scope: !10761)
!10764 = !DILocation(line: 356, column: 7, scope: !10765)
!10765 = distinct !DILexicalBlock(scope: !10760, file: !10586, line: 354, column: 5)
!10766 = !DILocation(line: 359, column: 19, scope: !10765)
!10767 = !DILocation(line: 362, column: 7, scope: !10765)
!10768 = !DILocation(line: 362, column: 13, scope: !10765)
!10769 = !DILocation(line: 362, column: 49, scope: !10765)
!10770 = !DILocation(line: 364, column: 13, scope: !10771)
!10771 = distinct !DILexicalBlock(scope: !10772, file: !10586, line: 364, column: 12)
!10772 = distinct !DILexicalBlock(scope: !10765, file: !10586, line: 363, column: 7)
!10773 = !DILocation(line: 364, column: 27, scope: !10771)
!10774 = !DILocation(line: 364, column: 41, scope: !10771)
!10775 = !DILocation(line: 364, column: 12, scope: !10772)
!10776 = distinct !{!10776, !10767, !10777}
!10777 = !DILocation(line: 368, column: 7, scope: !10765)
!10778 = !DILocation(line: 373, column: 7, scope: !10779)
!10779 = distinct !DILexicalBlock(scope: !10760, file: !10586, line: 371, column: 5)
!10780 = !DILocation(line: 376, column: 19, scope: !10779)
!10781 = !DILocation(line: 379, column: 7, scope: !10779)
!10782 = !DILocation(line: 379, column: 13, scope: !10779)
!10783 = !DILocation(line: 381, column: 13, scope: !10784)
!10784 = distinct !DILexicalBlock(scope: !10785, file: !10586, line: 381, column: 12)
!10785 = distinct !DILexicalBlock(scope: !10779, file: !10586, line: 380, column: 7)
!10786 = !DILocation(line: 381, column: 27, scope: !10784)
!10787 = !DILocation(line: 381, column: 41, scope: !10784)
!10788 = !DILocation(line: 381, column: 12, scope: !10785)
!10789 = distinct !{!10789, !10781, !10790}
!10790 = !DILocation(line: 385, column: 7, scope: !10779)
!10791 = !DILocation(line: 389, column: 27, scope: !10622)
!10792 = !DILocation(line: 389, column: 43, scope: !10622)
!10793 = !DILocation(line: 389, column: 69, scope: !10622)
!10794 = !DILocation(line: 389, column: 6, scope: !10591)
!10795 = !DILocation(line: 0, scope: !10621)
!10796 = !DILocation(line: 398, column: 8, scope: !10627)
!10797 = !DILocation(line: 398, column: 8, scope: !10621)
!10798 = !DILocation(line: 400, column: 7, scope: !10625)
!10799 = !DILocation(line: 400, column: 7, scope: !10626)
!10800 = !DILocation(line: 402, column: 5, scope: !10626)
!10801 = !DILocation(line: 404, column: 8, scope: !10802)
!10802 = distinct !DILexicalBlock(scope: !10621, file: !10586, line: 404, column: 8)
!10803 = !DILocation(line: 404, column: 8, scope: !10621)
!10804 = !DILocation(line: 407, column: 7, scope: !10805)
!10805 = distinct !DILexicalBlock(scope: !10802, file: !10586, line: 405, column: 5)
!10806 = !DILocation(line: 410, column: 19, scope: !10805)
!10807 = !DILocation(line: 412, column: 7, scope: !10805)
!10808 = !DILocation(line: 412, column: 13, scope: !10805)
!10809 = !DILocation(line: 414, column: 13, scope: !10810)
!10810 = distinct !DILexicalBlock(scope: !10811, file: !10586, line: 414, column: 12)
!10811 = distinct !DILexicalBlock(scope: !10805, file: !10586, line: 413, column: 7)
!10812 = !DILocation(line: 414, column: 27, scope: !10810)
!10813 = !DILocation(line: 414, column: 40, scope: !10810)
!10814 = !DILocation(line: 414, column: 12, scope: !10811)
!10815 = distinct !{!10815, !10807, !10816}
!10816 = !DILocation(line: 418, column: 7, scope: !10805)
!10817 = !DILocation(line: 422, column: 5, scope: !10818)
!10818 = distinct !DILexicalBlock(scope: !10819, file: !10586, line: 422, column: 5)
!10819 = distinct !DILexicalBlock(scope: !10621, file: !10586, line: 422, column: 5)
!10820 = !DILocation(line: 422, column: 5, scope: !10819)
!10821 = !DILocation(line: 422, column: 5, scope: !10822)
!10822 = distinct !DILexicalBlock(scope: !10818, file: !10586, line: 422, column: 5)
!10823 = !DILocation(line: 422, column: 5, scope: !10824)
!10824 = distinct !DILexicalBlock(scope: !10825, file: !10586, line: 422, column: 5)
!10825 = distinct !DILexicalBlock(scope: !10818, file: !10586, line: 422, column: 5)
!10826 = !DILocation(line: 422, column: 5, scope: !10827)
!10827 = distinct !DILexicalBlock(scope: !10825, file: !10586, line: 422, column: 5)
!10828 = !DILocation(line: 0, scope: !10818)
!10829 = !DILocation(line: 424, column: 28, scope: !10830)
!10830 = distinct !DILexicalBlock(scope: !10621, file: !10586, line: 424, column: 8)
!10831 = !DILocation(line: 424, column: 38, scope: !10830)
!10832 = !DILocation(line: 0, scope: !10830)
!10833 = !DILocation(line: 424, column: 8, scope: !10621)
!10834 = !DILocation(line: 430, column: 13, scope: !10835)
!10835 = distinct !DILexicalBlock(scope: !10830, file: !10586, line: 425, column: 5)
!10836 = !DILocation(line: 430, column: 49, scope: !10835)
!10837 = !DILocation(line: 430, column: 7, scope: !10835)
!10838 = !DILocation(line: 432, column: 13, scope: !10839)
!10839 = distinct !DILexicalBlock(scope: !10840, file: !10586, line: 432, column: 12)
!10840 = distinct !DILexicalBlock(scope: !10835, file: !10586, line: 431, column: 7)
!10841 = !DILocation(line: 432, column: 27, scope: !10839)
!10842 = !DILocation(line: 432, column: 41, scope: !10839)
!10843 = !DILocation(line: 432, column: 12, scope: !10840)
!10844 = distinct !{!10844, !10837, !10845}
!10845 = !DILocation(line: 436, column: 7, scope: !10835)
!10846 = !DILocation(line: 444, column: 13, scope: !10847)
!10847 = distinct !DILexicalBlock(scope: !10830, file: !10586, line: 439, column: 5)
!10848 = !DILocation(line: 444, column: 7, scope: !10847)
!10849 = !DILocation(line: 446, column: 13, scope: !10850)
!10850 = distinct !DILexicalBlock(scope: !10851, file: !10586, line: 446, column: 12)
!10851 = distinct !DILexicalBlock(scope: !10847, file: !10586, line: 445, column: 7)
!10852 = !DILocation(line: 446, column: 27, scope: !10850)
!10853 = !DILocation(line: 446, column: 41, scope: !10850)
!10854 = !DILocation(line: 446, column: 12, scope: !10851)
!10855 = distinct !{!10855, !10848, !10856}
!10856 = !DILocation(line: 450, column: 7, scope: !10847)
!10857 = !DILocation(line: 454, column: 8, scope: !10621)
!10858 = !DILocation(line: 456, column: 7, scope: !10859)
!10859 = distinct !DILexicalBlock(scope: !10860, file: !10586, line: 455, column: 5)
!10860 = distinct !DILexicalBlock(scope: !10621, file: !10586, line: 454, column: 8)
!10861 = !DILocation(line: 457, column: 5, scope: !10859)
!10862 = !DILocation(line: 462, column: 31, scope: !10863)
!10863 = distinct !DILexicalBlock(scope: !10591, file: !10586, line: 462, column: 7)
!10864 = !DILocation(line: 462, column: 41, scope: !10863)
!10865 = !DILocation(line: 462, column: 7, scope: !10591)
!10866 = !DILocation(line: 465, column: 8, scope: !10867)
!10867 = distinct !DILexicalBlock(scope: !10868, file: !10586, line: 465, column: 8)
!10868 = distinct !DILexicalBlock(scope: !10863, file: !10586, line: 463, column: 3)
!10869 = !DILocation(line: 465, column: 38, scope: !10867)
!10870 = !DILocation(line: 465, column: 8, scope: !10868)
!10871 = !DILocation(line: 467, column: 44, scope: !10872)
!10872 = distinct !DILexicalBlock(scope: !10873, file: !10586, line: 467, column: 10)
!10873 = distinct !DILexicalBlock(scope: !10867, file: !10586, line: 466, column: 5)
!10874 = !DILocation(line: 0, scope: !10872)
!10875 = !DILocation(line: 467, column: 10, scope: !10873)
!10876 = !DILocation(line: 483, column: 15, scope: !10877)
!10877 = distinct !DILexicalBlock(scope: !10872, file: !10586, line: 468, column: 7)
!10878 = !DILocation(line: 483, column: 9, scope: !10877)
!10879 = !DILocation(line: 485, column: 15, scope: !10880)
!10880 = distinct !DILexicalBlock(scope: !10881, file: !10586, line: 485, column: 14)
!10881 = distinct !DILexicalBlock(scope: !10877, file: !10586, line: 484, column: 9)
!10882 = !DILocation(line: 485, column: 29, scope: !10880)
!10883 = !DILocation(line: 485, column: 43, scope: !10880)
!10884 = !DILocation(line: 485, column: 14, scope: !10881)
!10885 = distinct !{!10885, !10878, !10886}
!10886 = !DILocation(line: 489, column: 9, scope: !10877)
!10887 = !DILocation(line: 492, column: 9, scope: !10877)
!10888 = !DILocation(line: 498, column: 9, scope: !10877)
!10889 = !DILocation(line: 501, column: 21, scope: !10877)
!10890 = !DILocation(line: 504, column: 9, scope: !10877)
!10891 = !DILocation(line: 504, column: 15, scope: !10877)
!10892 = !DILocation(line: 504, column: 51, scope: !10877)
!10893 = !DILocation(line: 506, column: 15, scope: !10894)
!10894 = distinct !DILexicalBlock(scope: !10895, file: !10586, line: 506, column: 14)
!10895 = distinct !DILexicalBlock(scope: !10877, file: !10586, line: 505, column: 9)
!10896 = !DILocation(line: 506, column: 29, scope: !10894)
!10897 = !DILocation(line: 506, column: 43, scope: !10894)
!10898 = !DILocation(line: 506, column: 14, scope: !10895)
!10899 = distinct !{!10899, !10890, !10900}
!10900 = !DILocation(line: 510, column: 9, scope: !10877)
!10901 = !DILocation(line: 521, column: 15, scope: !10902)
!10902 = distinct !DILexicalBlock(scope: !10872, file: !10586, line: 513, column: 7)
!10903 = !DILocation(line: 521, column: 9, scope: !10902)
!10904 = !DILocation(line: 523, column: 15, scope: !10905)
!10905 = distinct !DILexicalBlock(scope: !10906, file: !10586, line: 523, column: 14)
!10906 = distinct !DILexicalBlock(scope: !10902, file: !10586, line: 522, column: 9)
!10907 = !DILocation(line: 523, column: 29, scope: !10905)
!10908 = !DILocation(line: 523, column: 43, scope: !10905)
!10909 = !DILocation(line: 523, column: 14, scope: !10906)
!10910 = distinct !{!10910, !10903, !10911}
!10911 = !DILocation(line: 527, column: 9, scope: !10902)
!10912 = !DILocation(line: 533, column: 44, scope: !10913)
!10913 = distinct !DILexicalBlock(scope: !10914, file: !10586, line: 533, column: 10)
!10914 = distinct !DILexicalBlock(scope: !10867, file: !10586, line: 531, column: 5)
!10915 = !DILocation(line: 533, column: 10, scope: !10914)
!10916 = !DILocation(line: 540, column: 27, scope: !10917)
!10917 = distinct !DILexicalBlock(scope: !10913, file: !10586, line: 538, column: 7)
!10918 = !DILocation(line: 551, column: 14, scope: !10919)
!10919 = distinct !DILexicalBlock(scope: !10917, file: !10586, line: 550, column: 13)
!10920 = !DILocation(line: 551, column: 81, scope: !10919)
!10921 = !DILocation(line: 551, column: 55, scope: !10919)
!10922 = !DILocation(line: 551, column: 92, scope: !10919)
!10923 = !DILocation(line: 552, column: 14, scope: !10919)
!10924 = !DILocation(line: 552, column: 80, scope: !10919)
!10925 = !DILocation(line: 552, column: 53, scope: !10919)
!10926 = !DILocation(line: 552, column: 111, scope: !10919)
!10927 = !DILocation(line: 553, column: 14, scope: !10919)
!10928 = !DILocation(line: 553, column: 80, scope: !10919)
!10929 = !DILocation(line: 553, column: 86, scope: !10919)
!10930 = !DILocation(line: 553, column: 53, scope: !10919)
!10931 = !DILocation(line: 553, column: 111, scope: !10919)
!10932 = !DILocation(line: 554, column: 14, scope: !10919)
!10933 = !DILocation(line: 554, column: 82, scope: !10919)
!10934 = !DILocation(line: 554, column: 101, scope: !10919)
!10935 = !DILocation(line: 554, column: 53, scope: !10919)
!10936 = !DILocation(line: 554, column: 126, scope: !10919)
!10937 = !DILocation(line: 555, column: 14, scope: !10919)
!10938 = !DILocation(line: 555, column: 80, scope: !10919)
!10939 = !DILocation(line: 555, column: 85, scope: !10919)
!10940 = !DILocation(line: 555, column: 53, scope: !10919)
!10941 = !DILocation(line: 550, column: 13, scope: !10917)
!10942 = !DILocation(line: 563, column: 3, scope: !10591)
!10943 = !DILocation(line: 564, column: 1, scope: !10591)
!10944 = !DISubprogram(name: "HAL_GetTick", scope: !10945, file: !10945, line: 234, type: !135, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!10945 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10946 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !10586, file: !10586, line: 591, type: !10947, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2657, retainedNodes: !10958)
!10947 = !DISubroutineType(types: !10948)
!10948 = !{!10589, !10949, !137}
!10949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10950, size: 32)
!10950 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !10596, line: 92, baseType: !10951)
!10951 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10596, line: 75, size: 160, elements: !10952)
!10952 = !{!10953, !10954, !10955, !10956, !10957}
!10953 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !10951, file: !10596, line: 77, baseType: !137, size: 32)
!10954 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !10951, file: !10596, line: 80, baseType: !137, size: 32, offset: 32)
!10955 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !10951, file: !10596, line: 83, baseType: !137, size: 32, offset: 64)
!10956 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !10951, file: !10596, line: 86, baseType: !137, size: 32, offset: 96)
!10957 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !10951, file: !10596, line: 89, baseType: !137, size: 32, offset: 128)
!10958 = !{!10959, !10960, !10961}
!10959 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !10946, file: !10586, line: 591, type: !10949)
!10960 = !DILocalVariable(name: "FLatency", arg: 2, scope: !10946, file: !10586, line: 591, type: !137)
!10961 = !DILocalVariable(name: "tickstart", scope: !10946, file: !10586, line: 593, type: !137)
!10962 = !DILocation(line: 0, scope: !10946)
!10963 = !DILocation(line: 596, column: 24, scope: !10964)
!10964 = distinct !DILexicalBlock(scope: !10946, file: !10586, line: 596, column: 6)
!10965 = !DILocation(line: 596, column: 6, scope: !10946)
!10966 = !DILocation(line: 610, column: 17, scope: !10967)
!10967 = distinct !DILexicalBlock(scope: !10946, file: !10586, line: 610, column: 6)
!10968 = !DILocation(line: 610, column: 15, scope: !10967)
!10969 = !DILocation(line: 610, column: 6, scope: !10946)
!10970 = !DILocation(line: 613, column: 5, scope: !10971)
!10971 = distinct !DILexicalBlock(scope: !10967, file: !10586, line: 611, column: 3)
!10972 = !DILocation(line: 617, column: 8, scope: !10973)
!10973 = distinct !DILexicalBlock(scope: !10971, file: !10586, line: 617, column: 8)
!10974 = !DILocation(line: 617, column: 34, scope: !10973)
!10975 = !DILocation(line: 617, column: 8, scope: !10971)
!10976 = !DILocation(line: 624, column: 27, scope: !10977)
!10977 = distinct !DILexicalBlock(scope: !10946, file: !10586, line: 624, column: 6)
!10978 = !DILocation(line: 624, column: 38, scope: !10977)
!10979 = !DILocation(line: 624, column: 60, scope: !10977)
!10980 = !DILocation(line: 624, column: 6, scope: !10946)
!10981 = !DILocation(line: 628, column: 40, scope: !10982)
!10982 = distinct !DILexicalBlock(scope: !10983, file: !10586, line: 628, column: 8)
!10983 = distinct !DILexicalBlock(scope: !10977, file: !10586, line: 625, column: 3)
!10984 = !DILocation(line: 628, column: 63, scope: !10982)
!10985 = !DILocation(line: 628, column: 8, scope: !10983)
!10986 = !DILocation(line: 630, column: 7, scope: !10987)
!10987 = distinct !DILexicalBlock(scope: !10982, file: !10586, line: 629, column: 5)
!10988 = !DILocation(line: 633, column: 29, scope: !10989)
!10989 = distinct !DILexicalBlock(scope: !10983, file: !10586, line: 633, column: 8)
!10990 = !DILocation(line: 631, column: 5, scope: !10987)
!10991 = !DILocation(line: 633, column: 40, scope: !10989)
!10992 = !DILocation(line: 633, column: 63, scope: !10989)
!10993 = !DILocation(line: 633, column: 8, scope: !10983)
!10994 = !DILocation(line: 635, column: 7, scope: !10995)
!10995 = distinct !DILexicalBlock(scope: !10989, file: !10586, line: 634, column: 5)
!10996 = !DILocation(line: 636, column: 5, scope: !10995)
!10997 = !DILocation(line: 639, column: 5, scope: !10983)
!10998 = !DILocation(line: 643, column: 27, scope: !10999)
!10999 = distinct !DILexicalBlock(scope: !10946, file: !10586, line: 643, column: 6)
!11000 = !DILocation(line: 640, column: 3, scope: !10983)
!11001 = !DILocation(line: 643, column: 38, scope: !10999)
!11002 = !DILocation(line: 643, column: 62, scope: !10999)
!11003 = !DILocation(line: 643, column: 6, scope: !10946)
!11004 = !DILocation(line: 648, column: 27, scope: !11005)
!11005 = distinct !DILexicalBlock(scope: !11006, file: !10586, line: 648, column: 8)
!11006 = distinct !DILexicalBlock(scope: !10999, file: !10586, line: 644, column: 3)
!11007 = !DILocation(line: 648, column: 8, scope: !11006)
!11008 = !DILocation(line: 651, column: 10, scope: !11009)
!11009 = distinct !DILexicalBlock(scope: !11010, file: !10586, line: 651, column: 10)
!11010 = distinct !DILexicalBlock(scope: !11005, file: !10586, line: 649, column: 5)
!11011 = !DILocation(line: 651, column: 46, scope: !11009)
!11012 = !DILocation(line: 651, column: 10, scope: !11010)
!11013 = !DILocation(line: 661, column: 10, scope: !11014)
!11014 = distinct !DILexicalBlock(scope: !11015, file: !10586, line: 661, column: 10)
!11015 = distinct !DILexicalBlock(scope: !11016, file: !10586, line: 659, column: 5)
!11016 = distinct !DILexicalBlock(scope: !11005, file: !10586, line: 657, column: 13)
!11017 = !DILocation(line: 661, column: 46, scope: !11014)
!11018 = !DILocation(line: 661, column: 10, scope: !11015)
!11019 = !DILocation(line: 670, column: 10, scope: !11020)
!11020 = distinct !DILexicalBlock(scope: !11021, file: !10586, line: 670, column: 10)
!11021 = distinct !DILexicalBlock(scope: !11016, file: !10586, line: 668, column: 5)
!11022 = !DILocation(line: 670, column: 46, scope: !11020)
!11023 = !DILocation(line: 670, column: 10, scope: !11021)
!11024 = !DILocation(line: 676, column: 5, scope: !11006)
!11025 = !DILocation(line: 679, column: 17, scope: !11006)
!11026 = !DILocation(line: 681, column: 5, scope: !11006)
!11027 = !DILocation(line: 681, column: 12, scope: !11006)
!11028 = !DILocation(line: 681, column: 65, scope: !11006)
!11029 = !DILocation(line: 681, column: 78, scope: !11006)
!11030 = !DILocation(line: 681, column: 42, scope: !11006)
!11031 = !DILocation(line: 683, column: 12, scope: !11032)
!11032 = distinct !DILexicalBlock(scope: !11033, file: !10586, line: 683, column: 11)
!11033 = distinct !DILexicalBlock(scope: !11006, file: !10586, line: 682, column: 5)
!11034 = !DILocation(line: 683, column: 26, scope: !11032)
!11035 = !DILocation(line: 683, column: 39, scope: !11032)
!11036 = !DILocation(line: 683, column: 11, scope: !11033)
!11037 = distinct !{!11037, !11026, !11038}
!11038 = !DILocation(line: 687, column: 5, scope: !11006)
!11039 = !DILocation(line: 691, column: 17, scope: !11040)
!11040 = distinct !DILexicalBlock(scope: !10946, file: !10586, line: 691, column: 6)
!11041 = !DILocation(line: 691, column: 15, scope: !11040)
!11042 = !DILocation(line: 691, column: 6, scope: !10946)
!11043 = !DILocation(line: 694, column: 5, scope: !11044)
!11044 = distinct !DILexicalBlock(scope: !11040, file: !10586, line: 692, column: 3)
!11045 = !DILocation(line: 698, column: 8, scope: !11046)
!11046 = distinct !DILexicalBlock(scope: !11044, file: !10586, line: 698, column: 8)
!11047 = !DILocation(line: 698, column: 34, scope: !11046)
!11048 = !DILocation(line: 698, column: 8, scope: !11044)
!11049 = !DILocation(line: 705, column: 27, scope: !11050)
!11050 = distinct !DILexicalBlock(scope: !10946, file: !10586, line: 705, column: 6)
!11051 = !DILocation(line: 705, column: 38, scope: !11050)
!11052 = !DILocation(line: 705, column: 61, scope: !11050)
!11053 = !DILocation(line: 705, column: 6, scope: !10946)
!11054 = !DILocation(line: 708, column: 5, scope: !11055)
!11055 = distinct !DILexicalBlock(scope: !11050, file: !10586, line: 706, column: 3)
!11056 = !DILocation(line: 712, column: 27, scope: !11057)
!11057 = distinct !DILexicalBlock(scope: !10946, file: !10586, line: 712, column: 6)
!11058 = !DILocation(line: 709, column: 3, scope: !11055)
!11059 = !DILocation(line: 712, column: 38, scope: !11057)
!11060 = !DILocation(line: 712, column: 61, scope: !11057)
!11061 = !DILocation(line: 712, column: 6, scope: !10946)
!11062 = !DILocation(line: 715, column: 5, scope: !11063)
!11063 = distinct !DILexicalBlock(scope: !11057, file: !10586, line: 713, column: 3)
!11064 = !DILocation(line: 716, column: 3, scope: !11063)
!11065 = !DILocation(line: 719, column: 21, scope: !10946)
!11066 = !DILocation(line: 719, column: 70, scope: !10946)
!11067 = !DILocation(line: 719, column: 91, scope: !10946)
!11068 = !DILocation(line: 719, column: 50, scope: !10946)
!11069 = !DILocation(line: 719, column: 47, scope: !10946)
!11070 = !DILocation(line: 719, column: 19, scope: !10946)
!11071 = !DILocation(line: 722, column: 17, scope: !10946)
!11072 = !DILocation(line: 722, column: 3, scope: !10946)
!11073 = !DILocation(line: 724, column: 3, scope: !10946)
!11074 = !DILocation(line: 725, column: 1, scope: !10946)
!11075 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !10586, file: !10586, line: 885, type: !135, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2657, retainedNodes: !11076)
!11076 = !{!11077, !11078, !11079, !11080}
!11077 = !DILocalVariable(name: "pllm", scope: !11075, file: !10586, line: 887, type: !137)
!11078 = !DILocalVariable(name: "pllvco", scope: !11075, file: !10586, line: 887, type: !137)
!11079 = !DILocalVariable(name: "pllp", scope: !11075, file: !10586, line: 887, type: !137)
!11080 = !DILocalVariable(name: "sysclockfreq", scope: !11075, file: !10586, line: 888, type: !137)
!11081 = !DILocation(line: 0, scope: !11075)
!11082 = !DILocation(line: 891, column: 16, scope: !11075)
!11083 = !DILocation(line: 891, column: 21, scope: !11075)
!11084 = !DILocation(line: 891, column: 3, scope: !11075)
!11085 = !DILocation(line: 907, column: 19, scope: !11086)
!11086 = distinct !DILexicalBlock(scope: !11087, file: !10586, line: 904, column: 5)
!11087 = distinct !DILexicalBlock(scope: !11075, file: !10586, line: 892, column: 3)
!11088 = !DILocation(line: 907, column: 27, scope: !11086)
!11089 = !DILocation(line: 908, column: 10, scope: !11090)
!11090 = distinct !DILexicalBlock(scope: !11086, file: !10586, line: 908, column: 10)
!11091 = !DILocation(line: 0, scope: !11090)
!11092 = !DILocation(line: 918, column: 23, scope: !11086)
!11093 = !DILocation(line: 918, column: 82, scope: !11086)
!11094 = !DILocation(line: 920, column: 28, scope: !11086)
!11095 = !DILocation(line: 921, column: 7, scope: !11086)
!11096 = !DILocation(line: 0, scope: !11087)
!11097 = !DILocation(line: 929, column: 3, scope: !11075)
!11098 = !DISubprogram(name: "HAL_InitTick", scope: !10945, file: !10945, line: 223, type: !11099, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!11099 = !DISubroutineType(types: !11100)
!11100 = !{!10589, !137}
!11101 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !10586, file: !10586, line: 775, type: !11102, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2657, retainedNodes: !11104)
!11102 = !DISubroutineType(types: !11103)
!11103 = !{null, !137, !137, !137}
!11104 = !{!11105, !11106, !11107, !11108, !11118, !11122}
!11105 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !11101, file: !10586, line: 775, type: !137)
!11106 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !11101, file: !10586, line: 775, type: !137)
!11107 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !11101, file: !10586, line: 775, type: !137)
!11108 = !DILocalVariable(name: "GPIO_InitStruct", scope: !11101, file: !10586, line: 777, type: !11109)
!11109 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !11110, line: 62, baseType: !11111)
!11110 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11111 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11110, line: 46, size: 160, elements: !11112)
!11112 = !{!11113, !11114, !11115, !11116, !11117}
!11113 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !11111, file: !11110, line: 48, baseType: !137, size: 32)
!11114 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !11111, file: !11110, line: 51, baseType: !137, size: 32, offset: 32)
!11115 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !11111, file: !11110, line: 54, baseType: !137, size: 32, offset: 64)
!11116 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !11111, file: !11110, line: 57, baseType: !137, size: 32, offset: 96)
!11117 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !11111, file: !11110, line: 60, baseType: !137, size: 32, offset: 128)
!11118 = !DILocalVariable(name: "tmpreg", scope: !11119, file: !10586, line: 787, type: !176)
!11119 = distinct !DILexicalBlock(scope: !11120, file: !10586, line: 787, column: 5)
!11120 = distinct !DILexicalBlock(scope: !11121, file: !10586, line: 783, column: 3)
!11121 = distinct !DILexicalBlock(scope: !11101, file: !10586, line: 782, column: 6)
!11122 = !DILocalVariable(name: "tmpreg", scope: !11123, file: !10586, line: 811, type: !176)
!11123 = distinct !DILexicalBlock(scope: !11124, file: !10586, line: 811, column: 5)
!11124 = distinct !DILexicalBlock(scope: !11121, file: !10586, line: 807, column: 3)
!11125 = !DILocation(line: 0, scope: !11101)
!11126 = !DILocation(line: 777, column: 3, scope: !11101)
!11127 = !DILocation(line: 777, column: 20, scope: !11101)
!11128 = !DILocation(line: 782, column: 15, scope: !11121)
!11129 = !DILocation(line: 782, column: 6, scope: !11101)
!11130 = !DILocation(line: 787, column: 5, scope: !11119)
!11131 = !DILocation(line: 787, column: 5, scope: !11120)
!11132 = !DILocation(line: 790, column: 21, scope: !11120)
!11133 = !DILocation(line: 790, column: 25, scope: !11120)
!11134 = !DILocation(line: 791, column: 21, scope: !11120)
!11135 = !DILocation(line: 791, column: 26, scope: !11120)
!11136 = !DILocation(line: 792, column: 21, scope: !11120)
!11137 = !DILocation(line: 792, column: 27, scope: !11120)
!11138 = !DILocation(line: 793, column: 21, scope: !11120)
!11139 = !DILocation(line: 793, column: 26, scope: !11120)
!11140 = !DILocation(line: 794, column: 21, scope: !11120)
!11141 = !DILocation(line: 794, column: 31, scope: !11120)
!11142 = !DILocation(line: 795, column: 5, scope: !11120)
!11143 = !DILocation(line: 798, column: 5, scope: !11120)
!11144 = !DILocation(line: 804, column: 3, scope: !11120)
!11145 = !DILocation(line: 811, column: 5, scope: !11123)
!11146 = !DILocation(line: 811, column: 5, scope: !11124)
!11147 = !DILocation(line: 814, column: 21, scope: !11124)
!11148 = !DILocation(line: 814, column: 25, scope: !11124)
!11149 = !DILocation(line: 815, column: 21, scope: !11124)
!11150 = !DILocation(line: 815, column: 26, scope: !11124)
!11151 = !DILocation(line: 816, column: 21, scope: !11124)
!11152 = !DILocation(line: 816, column: 27, scope: !11124)
!11153 = !DILocation(line: 817, column: 21, scope: !11124)
!11154 = !DILocation(line: 817, column: 26, scope: !11124)
!11155 = !DILocation(line: 818, column: 21, scope: !11124)
!11156 = !DILocation(line: 818, column: 31, scope: !11124)
!11157 = !DILocation(line: 819, column: 5, scope: !11124)
!11158 = !DILocation(line: 822, column: 5, scope: !11124)
!11159 = !DILocation(line: 0, scope: !11121)
!11160 = !DILocation(line: 830, column: 1, scope: !11101)
!11161 = !DISubprogram(name: "HAL_GPIO_Init", scope: !11110, file: !11110, line: 224, type: !11162, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!11162 = !DISubroutineType(types: !11163)
!11163 = !{null, !2730, !11164}
!11164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11109, size: 32)
!11165 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !10586, file: !10586, line: 841, type: !2848, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2657, retainedNodes: !162)
!11166 = !DILocation(line: 843, column: 38, scope: !11165)
!11167 = !DILocation(line: 844, column: 1, scope: !11165)
!11168 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !10586, file: !10586, line: 850, type: !2848, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2657, retainedNodes: !162)
!11169 = !DILocation(line: 852, column: 38, scope: !11168)
!11170 = !DILocation(line: 853, column: 1, scope: !11168)
!11171 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !10586, file: !10586, line: 941, type: !135, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2657, retainedNodes: !162)
!11172 = !DILocation(line: 943, column: 10, scope: !11171)
!11173 = !DILocation(line: 943, column: 3, scope: !11171)
!11174 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !10586, file: !10586, line: 952, type: !135, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2657, retainedNodes: !162)
!11175 = !DILocation(line: 955, column: 11, scope: !11174)
!11176 = !DILocation(line: 955, column: 56, scope: !11174)
!11177 = !DILocation(line: 955, column: 78, scope: !11174)
!11178 = !DILocation(line: 955, column: 36, scope: !11174)
!11179 = !DILocation(line: 955, column: 33, scope: !11174)
!11180 = !DILocation(line: 955, column: 3, scope: !11174)
!11181 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !10586, file: !10586, line: 964, type: !135, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2657, retainedNodes: !162)
!11182 = !DILocation(line: 967, column: 11, scope: !11181)
!11183 = !DILocation(line: 967, column: 55, scope: !11181)
!11184 = !DILocation(line: 967, column: 77, scope: !11181)
!11185 = !DILocation(line: 967, column: 35, scope: !11181)
!11186 = !DILocation(line: 967, column: 32, scope: !11181)
!11187 = !DILocation(line: 967, column: 3, scope: !11181)
!11188 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !10586, file: !10586, line: 977, type: !11189, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2657, retainedNodes: !11191)
!11189 = !DISubroutineType(types: !11190)
!11190 = !{null, !10594}
!11191 = !{!11192}
!11192 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11188, file: !10586, line: 977, type: !10594)
!11193 = !DILocation(line: 0, scope: !11188)
!11194 = !DILocation(line: 980, column: 22, scope: !11188)
!11195 = !DILocation(line: 980, column: 37, scope: !11188)
!11196 = !DILocation(line: 983, column: 12, scope: !11197)
!11197 = distinct !DILexicalBlock(scope: !11188, file: !10586, line: 983, column: 6)
!11198 = !DILocation(line: 983, column: 15, scope: !11197)
!11199 = !DILocation(line: 983, column: 31, scope: !11197)
!11200 = !DILocation(line: 983, column: 6, scope: !11188)
!11201 = !DILocation(line: 985, column: 24, scope: !11202)
!11202 = distinct !DILexicalBlock(scope: !11197, file: !10586, line: 984, column: 3)
!11203 = !DILocation(line: 985, column: 33, scope: !11202)
!11204 = !DILocation(line: 986, column: 3, scope: !11202)
!11205 = !DILocation(line: 987, column: 17, scope: !11206)
!11206 = distinct !DILexicalBlock(scope: !11197, file: !10586, line: 987, column: 11)
!11207 = !DILocation(line: 987, column: 20, scope: !11206)
!11208 = !DILocation(line: 987, column: 35, scope: !11206)
!11209 = !DILocation(line: 0, scope: !11206)
!11210 = !DILocation(line: 987, column: 11, scope: !11197)
!11211 = !DILocation(line: 989, column: 33, scope: !11212)
!11212 = distinct !DILexicalBlock(scope: !11206, file: !10586, line: 988, column: 3)
!11213 = !DILocation(line: 990, column: 3, scope: !11212)
!11214 = !DILocation(line: 993, column: 33, scope: !11215)
!11215 = distinct !DILexicalBlock(scope: !11206, file: !10586, line: 992, column: 3)
!11216 = !DILocation(line: 997, column: 12, scope: !11217)
!11217 = distinct !DILexicalBlock(scope: !11188, file: !10586, line: 997, column: 6)
!11218 = !DILocation(line: 997, column: 15, scope: !11217)
!11219 = !DILocation(line: 1003, column: 24, scope: !11220)
!11220 = distinct !DILexicalBlock(scope: !11217, file: !10586, line: 1002, column: 3)
!11221 = !DILocation(line: 1003, column: 33, scope: !11220)
!11222 = !DILocation(line: 1006, column: 61, scope: !11188)
!11223 = !DILocation(line: 1006, column: 81, scope: !11188)
!11224 = !DILocation(line: 1006, column: 22, scope: !11188)
!11225 = !DILocation(line: 1006, column: 42, scope: !11188)
!11226 = !DILocation(line: 1009, column: 12, scope: !11227)
!11227 = distinct !DILexicalBlock(scope: !11188, file: !10586, line: 1009, column: 6)
!11228 = !DILocation(line: 1009, column: 17, scope: !11227)
!11229 = !DILocation(line: 1009, column: 35, scope: !11227)
!11230 = !DILocation(line: 1009, column: 6, scope: !11188)
!11231 = !DILocation(line: 1011, column: 24, scope: !11232)
!11232 = distinct !DILexicalBlock(scope: !11227, file: !10586, line: 1010, column: 3)
!11233 = !DILocation(line: 1011, column: 33, scope: !11232)
!11234 = !DILocation(line: 1012, column: 3, scope: !11232)
!11235 = !DILocation(line: 1013, column: 17, scope: !11236)
!11236 = distinct !DILexicalBlock(scope: !11227, file: !10586, line: 1013, column: 11)
!11237 = !DILocation(line: 1013, column: 22, scope: !11236)
!11238 = !DILocation(line: 1013, column: 39, scope: !11236)
!11239 = !DILocation(line: 0, scope: !11236)
!11240 = !DILocation(line: 1013, column: 11, scope: !11227)
!11241 = !DILocation(line: 1015, column: 33, scope: !11242)
!11242 = distinct !DILexicalBlock(scope: !11236, file: !10586, line: 1014, column: 3)
!11243 = !DILocation(line: 1016, column: 3, scope: !11242)
!11244 = !DILocation(line: 1019, column: 33, scope: !11245)
!11245 = distinct !DILexicalBlock(scope: !11236, file: !10586, line: 1018, column: 3)
!11246 = !DILocation(line: 1023, column: 12, scope: !11247)
!11247 = distinct !DILexicalBlock(scope: !11188, file: !10586, line: 1023, column: 6)
!11248 = !DILocation(line: 1023, column: 16, scope: !11247)
!11249 = !DILocation(line: 1029, column: 24, scope: !11250)
!11250 = distinct !DILexicalBlock(scope: !11247, file: !10586, line: 1028, column: 3)
!11251 = !DILocation(line: 1029, column: 33, scope: !11250)
!11252 = !DILocation(line: 1033, column: 12, scope: !11253)
!11253 = distinct !DILexicalBlock(scope: !11188, file: !10586, line: 1033, column: 6)
!11254 = !DILocation(line: 1033, column: 15, scope: !11253)
!11255 = !DILocation(line: 1033, column: 30, scope: !11253)
!11256 = !DILocation(line: 1033, column: 6, scope: !11188)
!11257 = !DILocation(line: 1039, column: 28, scope: !11258)
!11258 = distinct !DILexicalBlock(scope: !11253, file: !10586, line: 1038, column: 3)
!11259 = !DILocation(line: 1039, column: 37, scope: !11258)
!11260 = !DILocation(line: 1041, column: 54, scope: !11188)
!11261 = !DILocation(line: 1041, column: 62, scope: !11188)
!11262 = !DILocation(line: 1041, column: 26, scope: !11188)
!11263 = !DILocation(line: 1041, column: 36, scope: !11188)
!11264 = !DILocation(line: 1042, column: 49, scope: !11188)
!11265 = !DILocation(line: 1042, column: 57, scope: !11188)
!11266 = !DILocation(line: 1042, column: 26, scope: !11188)
!11267 = !DILocation(line: 1042, column: 31, scope: !11188)
!11268 = !DILocation(line: 1043, column: 50, scope: !11188)
!11269 = !DILocation(line: 1043, column: 78, scope: !11188)
!11270 = !DILocation(line: 1043, column: 26, scope: !11188)
!11271 = !DILocation(line: 1043, column: 31, scope: !11188)
!11272 = !DILocation(line: 1044, column: 52, scope: !11188)
!11273 = !DILocation(line: 1044, column: 102, scope: !11188)
!11274 = !DILocation(line: 1044, column: 109, scope: !11188)
!11275 = !DILocation(line: 1044, column: 26, scope: !11188)
!11276 = !DILocation(line: 1044, column: 31, scope: !11188)
!11277 = !DILocation(line: 1045, column: 50, scope: !11188)
!11278 = !DILocation(line: 1045, column: 78, scope: !11188)
!11279 = !DILocation(line: 1045, column: 26, scope: !11188)
!11280 = !DILocation(line: 1045, column: 31, scope: !11188)
!11281 = !DILocation(line: 1046, column: 1, scope: !11188)
!11282 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !10586, file: !10586, line: 1056, type: !11283, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2657, retainedNodes: !11285)
!11283 = !DISubroutineType(types: !11284)
!11284 = !{null, !10949, !149}
!11285 = !{!11286, !11287}
!11286 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !11282, file: !10586, line: 1056, type: !10949)
!11287 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !11282, file: !10586, line: 1056, type: !149)
!11288 = !DILocation(line: 0, scope: !11282)
!11289 = !DILocation(line: 1059, column: 22, scope: !11282)
!11290 = !DILocation(line: 1059, column: 32, scope: !11282)
!11291 = !DILocation(line: 1062, column: 53, scope: !11282)
!11292 = !DILocation(line: 1062, column: 58, scope: !11282)
!11293 = !DILocation(line: 1062, column: 22, scope: !11282)
!11294 = !DILocation(line: 1062, column: 35, scope: !11282)
!11295 = !DILocation(line: 1065, column: 54, scope: !11282)
!11296 = !DILocation(line: 1065, column: 59, scope: !11282)
!11297 = !DILocation(line: 1065, column: 22, scope: !11282)
!11298 = !DILocation(line: 1065, column: 36, scope: !11282)
!11299 = !DILocation(line: 1068, column: 55, scope: !11282)
!11300 = !DILocation(line: 1068, column: 60, scope: !11282)
!11301 = !DILocation(line: 1068, column: 22, scope: !11282)
!11302 = !DILocation(line: 1068, column: 37, scope: !11282)
!11303 = !DILocation(line: 1071, column: 56, scope: !11282)
!11304 = !DILocation(line: 1071, column: 79, scope: !11282)
!11305 = !DILocation(line: 1071, column: 22, scope: !11282)
!11306 = !DILocation(line: 1071, column: 37, scope: !11282)
!11307 = !DILocation(line: 1074, column: 34, scope: !11282)
!11308 = !DILocation(line: 1074, column: 38, scope: !11282)
!11309 = !DILocation(line: 1074, column: 14, scope: !11282)
!11310 = !DILocation(line: 1075, column: 1, scope: !11282)
!11311 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !10586, file: !10586, line: 1082, type: !2848, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2657, retainedNodes: !162)
!11312 = !DILocation(line: 1085, column: 6, scope: !11313)
!11313 = distinct !DILexicalBlock(scope: !11311, file: !10586, line: 1085, column: 6)
!11314 = !DILocation(line: 1085, column: 6, scope: !11311)
!11315 = !DILocation(line: 1088, column: 5, scope: !11316)
!11316 = distinct !DILexicalBlock(scope: !11313, file: !10586, line: 1086, column: 3)
!11317 = !DILocation(line: 1091, column: 5, scope: !11316)
!11318 = !DILocation(line: 1092, column: 3, scope: !11316)
!11319 = !DILocation(line: 1093, column: 1, scope: !11311)
!11320 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !10586, file: !10586, line: 1099, type: !2848, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2657, retainedNodes: !162)
!11321 = !DILocation(line: 1104, column: 1, scope: !11320)
!11322 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !11323, file: !11323, line: 257, type: !6411, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2743, retainedNodes: !11324)
!11323 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11324 = !{!11325}
!11325 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11322, file: !11323, line: 257, type: !137)
!11326 = !DILocation(line: 0, scope: !11322)
!11327 = !DILocation(line: 260, column: 3, scope: !11322)
!11328 = !DILocation(line: 261, column: 1, scope: !11322)
!11329 = distinct !DISubprogram(name: "LL_InitTick", scope: !11330, file: !11330, line: 260, type: !9016, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2743, retainedNodes: !11331)
!11330 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11331 = !{!11332, !11333}
!11332 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11329, file: !11330, line: 260, type: !137)
!11333 = !DILocalVariable(name: "Ticks", arg: 2, scope: !11329, file: !11330, line: 260, type: !137)
!11334 = !DILocation(line: 0, scope: !11329)
!11335 = !DILocation(line: 263, column: 46, scope: !11329)
!11336 = !DILocation(line: 263, column: 55, scope: !11329)
!11337 = !DILocation(line: 263, column: 18, scope: !11329)
!11338 = !DILocation(line: 264, column: 18, scope: !11329)
!11339 = !DILocation(line: 265, column: 18, scope: !11329)
!11340 = !DILocation(line: 267, column: 1, scope: !11329)
!11341 = distinct !DISubprogram(name: "LL_mDelay", scope: !11323, file: !11323, line: 273, type: !6411, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2743, retainedNodes: !11342)
!11342 = !{!11343, !11344}
!11343 = !DILocalVariable(name: "Delay", arg: 1, scope: !11341, file: !11323, line: 273, type: !137)
!11344 = !DILocalVariable(name: "tmp", scope: !11341, file: !11323, line: 275, type: !176)
!11345 = !DILocation(line: 0, scope: !11341)
!11346 = !DILocation(line: 275, column: 3, scope: !11341)
!11347 = !DILocation(line: 275, column: 18, scope: !11341)
!11348 = !DILocation(line: 275, column: 33, scope: !11341)
!11349 = !DILocation(line: 277, column: 10, scope: !11341)
!11350 = !DILocation(line: 280, column: 12, scope: !11351)
!11351 = distinct !DILexicalBlock(scope: !11341, file: !11323, line: 280, column: 6)
!11352 = !DILocation(line: 285, column: 3, scope: !11341)
!11353 = !DILocation(line: 287, column: 18, scope: !11354)
!11354 = distinct !DILexicalBlock(scope: !11355, file: !11323, line: 287, column: 8)
!11355 = distinct !DILexicalBlock(scope: !11341, file: !11323, line: 286, column: 3)
!11356 = !DILocation(line: 292, column: 1, scope: !11341)
!11357 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !11323, file: !11323, line: 323, type: !6411, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2743, retainedNodes: !11358)
!11358 = !{!11359}
!11359 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11357, file: !11323, line: 323, type: !137)
!11360 = !DILocation(line: 0, scope: !11357)
!11361 = !DILocation(line: 326, column: 19, scope: !11357)
!11362 = !DILocation(line: 327, column: 1, scope: !11357)
!11363 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !11323, file: !11323, line: 338, type: !11364, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2743, retainedNodes: !11367)
!11364 = !DISubroutineType(types: !11365)
!11365 = !{!11366, !137}
!11366 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !680, line: 201, baseType: !679)
!11367 = !{!11368, !11369, !11370, !11371, !11372}
!11368 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !11363, file: !11323, line: 338, type: !137)
!11369 = !DILocalVariable(name: "timeout", scope: !11363, file: !11323, line: 340, type: !137)
!11370 = !DILocalVariable(name: "getlatency", scope: !11363, file: !11323, line: 341, type: !137)
!11371 = !DILocalVariable(name: "latency", scope: !11363, file: !11323, line: 342, type: !137)
!11372 = !DILocalVariable(name: "status", scope: !11363, file: !11323, line: 343, type: !11366)
!11373 = !DILocation(line: 0, scope: !11363)
!11374 = !DILocation(line: 347, column: 21, scope: !11375)
!11375 = distinct !DILexicalBlock(scope: !11363, file: !11323, line: 347, column: 6)
!11376 = !DILocation(line: 347, column: 6, scope: !11363)
!11377 = !DILocation(line: 353, column: 8, scope: !11378)
!11378 = distinct !DILexicalBlock(scope: !11379, file: !11323, line: 353, column: 8)
!11379 = distinct !DILexicalBlock(scope: !11375, file: !11323, line: 352, column: 3)
!11380 = !DILocation(line: 387, column: 8, scope: !11381)
!11381 = distinct !DILexicalBlock(scope: !11379, file: !11323, line: 387, column: 8)
!11382 = !DILocation(line: 387, column: 40, scope: !11381)
!11383 = !DILocation(line: 387, column: 8, scope: !11379)
!11384 = !DILocation(line: 407, column: 26, scope: !11385)
!11385 = distinct !DILexicalBlock(scope: !11386, file: !11323, line: 407, column: 10)
!11386 = distinct !DILexicalBlock(scope: !11381, file: !11323, line: 388, column: 5)
!11387 = !DILocation(line: 407, column: 55, scope: !11385)
!11388 = !DILocation(line: 413, column: 28, scope: !11389)
!11389 = distinct !DILexicalBlock(scope: !11390, file: !11323, line: 413, column: 12)
!11390 = distinct !DILexicalBlock(scope: !11385, file: !11323, line: 412, column: 7)
!11391 = !DILocation(line: 413, column: 57, scope: !11389)
!11392 = !DILocation(line: 420, column: 8, scope: !11393)
!11393 = distinct !DILexicalBlock(scope: !11379, file: !11323, line: 420, column: 8)
!11394 = !DILocation(line: 420, column: 40, scope: !11393)
!11395 = !DILocation(line: 420, column: 8, scope: !11379)
!11396 = !DILocation(line: 429, column: 26, scope: !11397)
!11397 = distinct !DILexicalBlock(scope: !11398, file: !11323, line: 429, column: 10)
!11398 = distinct !DILexicalBlock(scope: !11393, file: !11323, line: 421, column: 5)
!11399 = !DILocation(line: 429, column: 55, scope: !11397)
!11400 = !DILocation(line: 435, column: 28, scope: !11401)
!11401 = distinct !DILexicalBlock(scope: !11402, file: !11323, line: 435, column: 12)
!11402 = distinct !DILexicalBlock(scope: !11397, file: !11323, line: 434, column: 7)
!11403 = !DILocation(line: 435, column: 57, scope: !11401)
!11404 = !DILocation(line: 0, scope: !11379)
!11405 = !DILocation(line: 444, column: 5, scope: !11379)
!11406 = !DILocation(line: 448, column: 5, scope: !11379)
!11407 = !DILocation(line: 451, column: 18, scope: !11408)
!11408 = distinct !DILexicalBlock(scope: !11379, file: !11323, line: 449, column: 5)
!11409 = !DILocation(line: 452, column: 12, scope: !11408)
!11410 = !DILocation(line: 453, column: 26, scope: !11379)
!11411 = !DILocation(line: 453, column: 38, scope: !11379)
!11412 = !DILocation(line: 453, column: 5, scope: !11408)
!11413 = distinct !{!11413, !11406, !11414}
!11414 = !DILocation(line: 453, column: 54, scope: !11379)
!11415 = !DILocation(line: 0, scope: !11375)
!11416 = !DILocation(line: 464, column: 3, scope: !11363)
!11417 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !11418, file: !11418, line: 519, type: !135, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2743, retainedNodes: !162)
!11418 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11419 = !DILocation(line: 521, column: 21, scope: !11417)
!11420 = !DILocation(line: 521, column: 3, scope: !11417)
!11421 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !6169, file: !6169, line: 1543, type: !6411, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2743, retainedNodes: !11422)
!11422 = !{!11423}
!11423 = !DILocalVariable(name: "Latency", arg: 1, scope: !11421, file: !6169, line: 1543, type: !137)
!11424 = !DILocation(line: 0, scope: !11421)
!11425 = !DILocation(line: 1545, column: 3, scope: !11421)
!11426 = !DILocation(line: 1546, column: 1, scope: !11421)
!11427 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !6169, file: !6169, line: 1569, type: !135, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2743, retainedNodes: !162)
!11428 = !DILocation(line: 1571, column: 21, scope: !11427)
!11429 = !DILocation(line: 1571, column: 3, scope: !11427)
!11430 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !11323, file: !11323, line: 483, type: !11431, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2743, retainedNodes: !11447)
!11431 = !DISubroutineType(types: !11432)
!11432 = !{!11366, !11433, !11440}
!11433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11434, size: 32)
!11434 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !11330, line: 114, baseType: !11435)
!11435 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11330, line: 94, size: 96, elements: !11436)
!11436 = !{!11437, !11438, !11439}
!11437 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !11435, file: !11330, line: 96, baseType: !137, size: 32)
!11438 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !11435, file: !11330, line: 102, baseType: !137, size: 32, offset: 32)
!11439 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !11435, file: !11330, line: 109, baseType: !137, size: 32, offset: 64)
!11440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11441, size: 32)
!11441 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !11330, line: 139, baseType: !11442)
!11442 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11330, line: 119, size: 96, elements: !11443)
!11443 = !{!11444, !11445, !11446}
!11444 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !11442, file: !11330, line: 121, baseType: !137, size: 32)
!11445 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !11442, file: !11330, line: 127, baseType: !137, size: 32, offset: 32)
!11446 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !11442, file: !11330, line: 133, baseType: !137, size: 32, offset: 64)
!11447 = !{!11448, !11449, !11450, !11451}
!11448 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !11430, file: !11323, line: 483, type: !11433)
!11449 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !11430, file: !11323, line: 484, type: !11440)
!11450 = !DILocalVariable(name: "status", scope: !11430, file: !11323, line: 486, type: !11366)
!11451 = !DILocalVariable(name: "pllfreq", scope: !11430, file: !11323, line: 487, type: !137)
!11452 = !DILocation(line: 0, scope: !11430)
!11453 = !DILocation(line: 490, column: 6, scope: !11454)
!11454 = distinct !DILexicalBlock(scope: !11430, file: !11323, line: 490, column: 6)
!11455 = !DILocation(line: 490, column: 25, scope: !11454)
!11456 = !DILocation(line: 490, column: 6, scope: !11430)
!11457 = !DILocation(line: 493, column: 15, scope: !11458)
!11458 = distinct !DILexicalBlock(scope: !11454, file: !11323, line: 491, column: 3)
!11459 = !DILocation(line: 496, column: 8, scope: !11460)
!11460 = distinct !DILexicalBlock(scope: !11458, file: !11323, line: 496, column: 8)
!11461 = !DILocation(line: 496, column: 29, scope: !11460)
!11462 = !DILocation(line: 496, column: 8, scope: !11458)
!11463 = !DILocation(line: 498, column: 7, scope: !11464)
!11464 = distinct !DILexicalBlock(scope: !11460, file: !11323, line: 497, column: 5)
!11465 = !DILocation(line: 499, column: 7, scope: !11464)
!11466 = !DILocation(line: 499, column: 14, scope: !11464)
!11467 = !DILocation(line: 499, column: 35, scope: !11464)
!11468 = distinct !{!11468, !11465, !11469}
!11469 = !DILocation(line: 502, column: 7, scope: !11464)
!11470 = !DILocation(line: 506, column: 76, scope: !11458)
!11471 = !DILocation(line: 506, column: 103, scope: !11458)
!11472 = !DILocation(line: 507, column: 54, scope: !11458)
!11473 = !DILocation(line: 506, column: 5, scope: !11458)
!11474 = !DILocation(line: 510, column: 14, scope: !11458)
!11475 = !DILocation(line: 511, column: 3, scope: !11458)
!11476 = !DILocation(line: 0, scope: !11454)
!11477 = !DILocation(line: 518, column: 3, scope: !11430)
!11478 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !11323, file: !11323, line: 642, type: !11479, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2743, retainedNodes: !11481)
!11479 = !DISubroutineType(types: !11480)
!11480 = !{!11366}
!11481 = !{!11482}
!11482 = !DILocalVariable(name: "status", scope: !11478, file: !11323, line: 644, type: !11366)
!11483 = !DILocation(line: 0, scope: !11478)
!11484 = !DILocation(line: 647, column: 6, scope: !11485)
!11485 = distinct !DILexicalBlock(scope: !11478, file: !11323, line: 647, column: 6)
!11486 = !DILocation(line: 647, column: 27, scope: !11485)
!11487 = !DILocation(line: 663, column: 6, scope: !11488)
!11488 = distinct !DILexicalBlock(scope: !11478, file: !11323, line: 663, column: 6)
!11489 = !DILocation(line: 663, column: 30, scope: !11488)
!11490 = !DILocation(line: 663, column: 6, scope: !11478)
!11491 = !DILocation(line: 669, column: 3, scope: !11478)
!11492 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !11323, file: !11323, line: 611, type: !11493, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2743, retainedNodes: !11495)
!11493 = !DISubroutineType(types: !11494)
!11494 = !{!137, !137, !11433}
!11495 = !{!11496, !11497, !11498}
!11496 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !11492, file: !11323, line: 611, type: !137)
!11497 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !11492, file: !11323, line: 611, type: !11433)
!11498 = !DILocalVariable(name: "pllfreq", scope: !11492, file: !11323, line: 613, type: !137)
!11499 = !DILocation(line: 0, scope: !11492)
!11500 = !DILocation(line: 622, column: 56, scope: !11492)
!11501 = !DILocation(line: 622, column: 61, scope: !11492)
!11502 = !DILocation(line: 622, column: 32, scope: !11492)
!11503 = !DILocation(line: 626, column: 45, scope: !11492)
!11504 = !DILocation(line: 626, column: 50, scope: !11492)
!11505 = !DILocation(line: 626, column: 21, scope: !11492)
!11506 = !DILocation(line: 630, column: 47, scope: !11492)
!11507 = !DILocation(line: 630, column: 82, scope: !11492)
!11508 = !DILocation(line: 630, column: 21, scope: !11492)
!11509 = !DILocation(line: 633, column: 3, scope: !11492)
!11510 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8356, file: !8356, line: 3007, type: !135, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2743, retainedNodes: !162)
!11511 = !DILocation(line: 3009, column: 11, scope: !11510)
!11512 = !DILocation(line: 3009, column: 44, scope: !11510)
!11513 = !DILocation(line: 3009, column: 3, scope: !11510)
!11514 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8356, file: !8356, line: 2987, type: !2848, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2743, retainedNodes: !162)
!11515 = !DILocation(line: 2989, column: 3, scope: !11514)
!11516 = !DILocation(line: 2990, column: 1, scope: !11514)
!11517 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8356, file: !8356, line: 4304, type: !8490, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2743, retainedNodes: !11518)
!11518 = !{!11519, !11520, !11521, !11522}
!11519 = !DILocalVariable(name: "Source", arg: 1, scope: !11517, file: !8356, line: 4304, type: !137)
!11520 = !DILocalVariable(name: "PLLM", arg: 2, scope: !11517, file: !8356, line: 4304, type: !137)
!11521 = !DILocalVariable(name: "PLLN", arg: 3, scope: !11517, file: !8356, line: 4304, type: !137)
!11522 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !11517, file: !8356, line: 4304, type: !137)
!11523 = !DILocation(line: 0, scope: !11517)
!11524 = !DILocation(line: 4306, column: 3, scope: !11517)
!11525 = !DILocation(line: 4308, column: 3, scope: !11517)
!11526 = !DILocation(line: 4312, column: 1, scope: !11517)
!11527 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !11323, file: !11323, line: 681, type: !11528, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2743, retainedNodes: !11530)
!11528 = !DISubroutineType(types: !11529)
!11529 = !{!11366, !137, !11440}
!11530 = !{!11531, !11532, !11533, !11534}
!11531 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !11527, file: !11323, line: 681, type: !137)
!11532 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !11527, file: !11323, line: 681, type: !11440)
!11533 = !DILocalVariable(name: "status", scope: !11527, file: !11323, line: 683, type: !11366)
!11534 = !DILocalVariable(name: "hclk_frequency", scope: !11527, file: !11323, line: 684, type: !137)
!11535 = !DILocation(line: 0, scope: !11527)
!11536 = !DILocation(line: 691, column: 20, scope: !11527)
!11537 = !DILocation(line: 694, column: 6, scope: !11538)
!11538 = distinct !DILexicalBlock(scope: !11527, file: !11323, line: 694, column: 6)
!11539 = !DILocation(line: 694, column: 22, scope: !11538)
!11540 = !DILocation(line: 694, column: 6, scope: !11527)
!11541 = !DILocation(line: 697, column: 14, scope: !11542)
!11542 = distinct !DILexicalBlock(scope: !11538, file: !11323, line: 695, column: 3)
!11543 = !DILocation(line: 701, column: 13, scope: !11544)
!11544 = distinct !DILexicalBlock(scope: !11527, file: !11323, line: 701, column: 6)
!11545 = !DILocation(line: 701, column: 6, scope: !11527)
!11546 = !DILocation(line: 704, column: 5, scope: !11547)
!11547 = distinct !DILexicalBlock(scope: !11544, file: !11323, line: 702, column: 3)
!11548 = !DILocation(line: 705, column: 5, scope: !11547)
!11549 = !DILocation(line: 705, column: 12, scope: !11547)
!11550 = !DILocation(line: 705, column: 33, scope: !11547)
!11551 = distinct !{!11551, !11548, !11552}
!11552 = !DILocation(line: 708, column: 5, scope: !11547)
!11553 = !DILocation(line: 711, column: 49, scope: !11547)
!11554 = !DILocation(line: 711, column: 5, scope: !11547)
!11555 = !DILocation(line: 712, column: 5, scope: !11547)
!11556 = !DILocation(line: 713, column: 5, scope: !11547)
!11557 = !DILocation(line: 713, column: 12, scope: !11547)
!11558 = !DILocation(line: 713, column: 37, scope: !11547)
!11559 = distinct !{!11559, !11556, !11560}
!11560 = !DILocation(line: 716, column: 5, scope: !11547)
!11561 = !DILocation(line: 719, column: 50, scope: !11547)
!11562 = !DILocation(line: 719, column: 5, scope: !11547)
!11563 = !DILocation(line: 720, column: 50, scope: !11547)
!11564 = !DILocation(line: 720, column: 5, scope: !11547)
!11565 = !DILocation(line: 721, column: 3, scope: !11547)
!11566 = !DILocation(line: 724, column: 6, scope: !11567)
!11567 = distinct !DILexicalBlock(scope: !11527, file: !11323, line: 724, column: 6)
!11568 = !DILocation(line: 724, column: 22, scope: !11567)
!11569 = !DILocation(line: 724, column: 6, scope: !11527)
!11570 = !DILocation(line: 727, column: 14, scope: !11571)
!11571 = distinct !DILexicalBlock(scope: !11567, file: !11323, line: 725, column: 3)
!11572 = !DILocation(line: 728, column: 3, scope: !11571)
!11573 = !DILocation(line: 731, column: 13, scope: !11574)
!11574 = distinct !DILexicalBlock(scope: !11527, file: !11323, line: 731, column: 6)
!11575 = !DILocation(line: 731, column: 6, scope: !11527)
!11576 = !DILocation(line: 733, column: 5, scope: !11577)
!11577 = distinct !DILexicalBlock(scope: !11574, file: !11323, line: 732, column: 3)
!11578 = !DILocation(line: 734, column: 3, scope: !11577)
!11579 = !DILocation(line: 736, column: 3, scope: !11527)
!11580 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8356, file: !8356, line: 4184, type: !2848, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2743, retainedNodes: !162)
!11581 = !DILocation(line: 4186, column: 3, scope: !11580)
!11582 = !DILocation(line: 4187, column: 1, scope: !11580)
!11583 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8356, file: !8356, line: 4205, type: !135, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2743, retainedNodes: !162)
!11584 = !DILocation(line: 4207, column: 11, scope: !11583)
!11585 = !DILocation(line: 4207, column: 44, scope: !11583)
!11586 = !DILocation(line: 4207, column: 3, scope: !11583)
!11587 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8356, file: !8356, line: 3224, type: !6411, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2743, retainedNodes: !11588)
!11588 = !{!11589}
!11589 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !11587, file: !8356, line: 3224, type: !137)
!11590 = !DILocation(line: 0, scope: !11587)
!11591 = !DILocation(line: 3226, column: 3, scope: !11587)
!11592 = !DILocation(line: 3227, column: 1, scope: !11587)
!11593 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8356, file: !8356, line: 3188, type: !6411, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2743, retainedNodes: !11594)
!11594 = !{!11595}
!11595 = !DILocalVariable(name: "Source", arg: 1, scope: !11593, file: !8356, line: 3188, type: !137)
!11596 = !DILocation(line: 0, scope: !11593)
!11597 = !DILocation(line: 3190, column: 3, scope: !11593)
!11598 = !DILocation(line: 3191, column: 1, scope: !11593)
!11599 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8356, file: !8356, line: 3204, type: !135, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2743, retainedNodes: !162)
!11600 = !DILocation(line: 3206, column: 21, scope: !11599)
!11601 = !DILocation(line: 3206, column: 3, scope: !11599)
!11602 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8356, file: !8356, line: 3240, type: !6411, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2743, retainedNodes: !11603)
!11603 = !{!11604}
!11604 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !11602, file: !8356, line: 3240, type: !137)
!11605 = !DILocation(line: 0, scope: !11602)
!11606 = !DILocation(line: 3242, column: 3, scope: !11602)
!11607 = !DILocation(line: 3243, column: 1, scope: !11602)
!11608 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8356, file: !8356, line: 3256, type: !6411, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2743, retainedNodes: !11609)
!11609 = !{!11610}
!11610 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !11608, file: !8356, line: 3256, type: !137)
!11611 = !DILocation(line: 0, scope: !11608)
!11612 = !DILocation(line: 3258, column: 3, scope: !11608)
!11613 = !DILocation(line: 3259, column: 1, scope: !11608)
!11614 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !8356, file: !8356, line: 5153, type: !135, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2743, retainedNodes: !162)
!11615 = !DILocation(line: 5155, column: 11, scope: !11614)
!11616 = !DILocation(line: 5155, column: 47, scope: !11614)
!11617 = !DILocation(line: 5155, column: 3, scope: !11614)
!11618 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !11323, file: !11323, line: 540, type: !11619, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2743, retainedNodes: !11621)
!11619 = !DISubroutineType(types: !11620)
!11620 = !{!11366, !137, !137, !11433, !11440}
!11621 = !{!11622, !11623, !11624, !11625, !11626, !11627}
!11622 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !11618, file: !11323, line: 540, type: !137)
!11623 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !11618, file: !11323, line: 540, type: !137)
!11624 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !11618, file: !11323, line: 541, type: !11433)
!11625 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !11618, file: !11323, line: 541, type: !11440)
!11626 = !DILocalVariable(name: "status", scope: !11618, file: !11323, line: 543, type: !11366)
!11627 = !DILocalVariable(name: "pllfreq", scope: !11618, file: !11323, line: 544, type: !137)
!11628 = !DILocation(line: 0, scope: !11618)
!11629 = !DILocation(line: 551, column: 6, scope: !11630)
!11630 = distinct !DILexicalBlock(scope: !11618, file: !11323, line: 551, column: 6)
!11631 = !DILocation(line: 551, column: 25, scope: !11630)
!11632 = !DILocation(line: 551, column: 6, scope: !11618)
!11633 = !DILocation(line: 554, column: 15, scope: !11634)
!11634 = distinct !DILexicalBlock(scope: !11630, file: !11323, line: 552, column: 3)
!11635 = !DILocation(line: 557, column: 8, scope: !11636)
!11636 = distinct !DILexicalBlock(scope: !11634, file: !11323, line: 557, column: 8)
!11637 = !DILocation(line: 557, column: 29, scope: !11636)
!11638 = !DILocation(line: 557, column: 8, scope: !11634)
!11639 = !DILocation(line: 560, column: 20, scope: !11640)
!11640 = distinct !DILexicalBlock(scope: !11641, file: !11323, line: 560, column: 10)
!11641 = distinct !DILexicalBlock(scope: !11636, file: !11323, line: 558, column: 5)
!11642 = !DILocation(line: 560, column: 10, scope: !11641)
!11643 = !DILocation(line: 562, column: 9, scope: !11644)
!11644 = distinct !DILexicalBlock(scope: !11640, file: !11323, line: 561, column: 7)
!11645 = !DILocation(line: 563, column: 7, scope: !11644)
!11646 = !DILocation(line: 566, column: 9, scope: !11647)
!11647 = distinct !DILexicalBlock(scope: !11640, file: !11323, line: 565, column: 7)
!11648 = !DILocation(line: 570, column: 7, scope: !11641)
!11649 = !DILocation(line: 571, column: 7, scope: !11641)
!11650 = !DILocation(line: 571, column: 14, scope: !11641)
!11651 = !DILocation(line: 571, column: 35, scope: !11641)
!11652 = distinct !{!11652, !11649, !11653}
!11653 = !DILocation(line: 574, column: 7, scope: !11641)
!11654 = !DILocation(line: 578, column: 76, scope: !11634)
!11655 = !DILocation(line: 578, column: 103, scope: !11634)
!11656 = !DILocation(line: 579, column: 54, scope: !11634)
!11657 = !DILocation(line: 578, column: 5, scope: !11634)
!11658 = !DILocation(line: 582, column: 14, scope: !11634)
!11659 = !DILocation(line: 583, column: 3, scope: !11634)
!11660 = !DILocation(line: 0, scope: !11630)
!11661 = !DILocation(line: 590, column: 3, scope: !11618)
!11662 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8356, file: !8356, line: 2969, type: !135, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2743, retainedNodes: !162)
!11663 = !DILocation(line: 2971, column: 11, scope: !11662)
!11664 = !DILocation(line: 2971, column: 44, scope: !11662)
!11665 = !DILocation(line: 2971, column: 3, scope: !11662)
!11666 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !8356, file: !8356, line: 2929, type: !2848, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2743, retainedNodes: !162)
!11667 = !DILocation(line: 2931, column: 3, scope: !11666)
!11668 = !DILocation(line: 2932, column: 1, scope: !11666)
!11669 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8356, file: !8356, line: 2939, type: !2848, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2743, retainedNodes: !162)
!11670 = !DILocation(line: 2941, column: 3, scope: !11669)
!11671 = !DILocation(line: 2942, column: 1, scope: !11669)
!11672 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8356, file: !8356, line: 2949, type: !2848, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2743, retainedNodes: !162)
!11673 = !DILocation(line: 2951, column: 3, scope: !11672)
!11674 = !DILocation(line: 2952, column: 1, scope: !11672)
!11675 = distinct !DISubprogram(name: "z_device_state_init", scope: !11676, file: !11676, line: 23, type: !2848, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !11677)
!11676 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11677 = !{!11678}
!11678 = !DILocalVariable(name: "dev", scope: !11675, file: !11676, line: 25, type: !11679)
!11679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11680, size: 32)
!11680 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11681)
!11681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !196, line: 378, size: 192, elements: !11682)
!11682 = !{!11683, !11684, !11685, !11686, !11692, !11693}
!11683 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !11681, file: !196, line: 380, baseType: !199, size: 32)
!11684 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !11681, file: !196, line: 382, baseType: !13, size: 32, offset: 32)
!11685 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !11681, file: !196, line: 384, baseType: !13, size: 32, offset: 64)
!11686 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !11681, file: !196, line: 386, baseType: !11687, size: 32, offset: 96)
!11687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11688, size: 32)
!11688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !196, line: 351, size: 16, elements: !11689)
!11689 = !{!11690, !11691}
!11690 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !11688, file: !196, line: 359, baseType: !208, size: 8)
!11691 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !11688, file: !196, line: 364, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!11692 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !11681, file: !196, line: 388, baseType: !102, size: 32, offset: 128)
!11693 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !11681, file: !196, line: 396, baseType: !214, size: 32, offset: 160)
!11694 = !DILocation(line: 0, scope: !11675)
!11695 = !DILocation(line: 31, column: 1, scope: !11675)
!11696 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !11676, file: !11676, line: 33, type: !11697, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !11699)
!11697 = !DISubroutineType(types: !11698)
!11698 = !{!11679, !199}
!11699 = !{!11700, !11701}
!11700 = !DILocalVariable(name: "name", arg: 1, scope: !11696, file: !11676, line: 33, type: !199)
!11701 = !DILocalVariable(name: "dev", scope: !11696, file: !11676, line: 35, type: !11679)
!11702 = !DILocation(line: 0, scope: !11696)
!11703 = !DILocation(line: 40, column: 12, scope: !11704)
!11704 = distinct !DILexicalBlock(scope: !11696, file: !11676, line: 40, column: 6)
!11705 = !DILocation(line: 40, column: 21, scope: !11704)
!11706 = !DILocation(line: 40, column: 25, scope: !11704)
!11707 = !DILocation(line: 40, column: 33, scope: !11704)
!11708 = !DILocation(line: 40, column: 6, scope: !11696)
!11709 = !DILocation(line: 55, column: 2, scope: !11710)
!11710 = distinct !DILexicalBlock(scope: !11696, file: !11676, line: 55, column: 2)
!11711 = !DILocation(line: 50, column: 7, scope: !11712)
!11712 = distinct !DILexicalBlock(scope: !11713, file: !11676, line: 50, column: 7)
!11713 = distinct !DILexicalBlock(scope: !11714, file: !11676, line: 49, column: 57)
!11714 = distinct !DILexicalBlock(scope: !11715, file: !11676, line: 49, column: 2)
!11715 = distinct !DILexicalBlock(scope: !11696, file: !11676, line: 49, column: 2)
!11716 = !DILocation(line: 50, column: 30, scope: !11712)
!11717 = !DILocation(line: 50, column: 39, scope: !11712)
!11718 = !DILocation(line: 50, column: 44, scope: !11712)
!11719 = !DILocation(line: 50, column: 7, scope: !11713)
!11720 = !DILocation(line: 49, column: 53, scope: !11714)
!11721 = !DILocation(line: 49, column: 33, scope: !11714)
!11722 = !DILocation(line: 49, column: 2, scope: !11715)
!11723 = distinct !{!11723, !11722, !11724}
!11724 = !DILocation(line: 53, column: 2, scope: !11715)
!11725 = !DILocation(line: 56, column: 7, scope: !11726)
!11726 = distinct !DILexicalBlock(scope: !11727, file: !11676, line: 56, column: 7)
!11727 = distinct !DILexicalBlock(scope: !11728, file: !11676, line: 55, column: 57)
!11728 = distinct !DILexicalBlock(scope: !11710, file: !11676, line: 55, column: 2)
!11729 = !DILocation(line: 56, column: 30, scope: !11726)
!11730 = !DILocation(line: 56, column: 52, scope: !11726)
!11731 = !DILocation(line: 56, column: 34, scope: !11726)
!11732 = !DILocation(line: 56, column: 58, scope: !11726)
!11733 = !DILocation(line: 56, column: 7, scope: !11727)
!11734 = !DILocation(line: 55, column: 53, scope: !11728)
!11735 = !DILocation(line: 55, column: 33, scope: !11728)
!11736 = distinct !{!11736, !11709, !11737}
!11737 = !DILocation(line: 59, column: 2, scope: !11710)
!11738 = !DILocation(line: 62, column: 1, scope: !11696)
!11739 = distinct !DISubprogram(name: "z_device_is_ready", scope: !11676, file: !11676, line: 93, type: !11740, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !11742)
!11740 = !DISubroutineType(types: !11741)
!11741 = !{!211, !11679}
!11742 = !{!11743}
!11743 = !DILocalVariable(name: "dev", arg: 1, scope: !11739, file: !11676, line: 93, type: !11679)
!11744 = !DILocation(line: 0, scope: !11739)
!11745 = !DILocation(line: 99, column: 10, scope: !11746)
!11746 = distinct !DILexicalBlock(scope: !11739, file: !11676, line: 99, column: 6)
!11747 = !DILocation(line: 99, column: 6, scope: !11739)
!11748 = !DILocation(line: 103, column: 14, scope: !11739)
!11749 = !DILocation(line: 103, column: 21, scope: !11739)
!11750 = !DILocation(line: 103, column: 33, scope: !11739)
!11751 = !DILocation(line: 103, column: 49, scope: !11739)
!11752 = !DILocation(line: 103, column: 58, scope: !11739)
!11753 = !DILocation(line: 104, column: 1, scope: !11739)
!11754 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !11676, file: !11676, line: 87, type: !11755, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !11758)
!11755 = !DISubroutineType(types: !11756)
!11756 = !{!120, !11757}
!11757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11679, size: 32)
!11758 = !{!11759}
!11759 = !DILocalVariable(name: "devices", arg: 1, scope: !11754, file: !11676, line: 87, type: !11757)
!11760 = !DILocation(line: 0, scope: !11754)
!11761 = !DILocation(line: 89, column: 11, scope: !11754)
!11762 = !DILocation(line: 90, column: 2, scope: !11754)
!11763 = distinct !DISubprogram(name: "device_required_foreach", scope: !11676, file: !11676, line: 125, type: !11764, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !11770)
!11764 = !DISubroutineType(types: !11765)
!11765 = !{!103, !11679, !11766, !102}
!11766 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !196, line: 471, baseType: !11767)
!11767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11768, size: 32)
!11768 = !DISubroutineType(types: !11769)
!11769 = !{!103, !11679, !102}
!11770 = !{!11771, !11772, !11773, !11774, !11775}
!11771 = !DILocalVariable(name: "dev", arg: 1, scope: !11763, file: !11676, line: 125, type: !11679)
!11772 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !11763, file: !11676, line: 126, type: !11766)
!11773 = !DILocalVariable(name: "context", arg: 3, scope: !11763, file: !11676, line: 127, type: !102)
!11774 = !DILocalVariable(name: "handle_count", scope: !11763, file: !11676, line: 129, type: !120)
!11775 = !DILocalVariable(name: "handles", scope: !11763, file: !11676, line: 130, type: !214)
!11776 = !DILocation(line: 0, scope: !11763)
!11777 = !DILocation(line: 129, column: 2, scope: !11763)
!11778 = !DILocation(line: 129, column: 9, scope: !11763)
!11779 = !DILocation(line: 130, column: 35, scope: !11763)
!11780 = !DILocation(line: 132, column: 33, scope: !11763)
!11781 = !DILocation(line: 132, column: 9, scope: !11763)
!11782 = !DILocation(line: 133, column: 1, scope: !11763)
!11783 = !DILocation(line: 132, column: 2, scope: !11763)
!11784 = distinct !DISubprogram(name: "device_required_handles_get", scope: !196, file: !196, line: 493, type: !11785, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !11787)
!11785 = !DISubroutineType(types: !11786)
!11786 = !{!214, !11679, !2304}
!11787 = !{!11788, !11789, !11790, !11791}
!11788 = !DILocalVariable(name: "dev", arg: 1, scope: !11784, file: !196, line: 493, type: !11679)
!11789 = !DILocalVariable(name: "count", arg: 2, scope: !11784, file: !196, line: 493, type: !2304)
!11790 = !DILocalVariable(name: "rv", scope: !11784, file: !196, line: 495, type: !214)
!11791 = !DILocalVariable(name: "i", scope: !11792, file: !196, line: 498, type: !120)
!11792 = distinct !DILexicalBlock(scope: !11793, file: !196, line: 497, column: 18)
!11793 = distinct !DILexicalBlock(scope: !11784, file: !196, line: 497, column: 6)
!11794 = !DILocation(line: 0, scope: !11784)
!11795 = !DILocation(line: 495, column: 35, scope: !11784)
!11796 = !DILocation(line: 497, column: 9, scope: !11793)
!11797 = !DILocation(line: 497, column: 6, scope: !11784)
!11798 = !DILocation(line: 0, scope: !11792)
!11799 = !DILocation(line: 500, column: 11, scope: !11792)
!11800 = !DILocation(line: 500, column: 40, scope: !11792)
!11801 = !DILocation(line: 502, column: 4, scope: !11802)
!11802 = distinct !DILexicalBlock(scope: !11792, file: !196, line: 501, column: 40)
!11803 = distinct !{!11803, !11804, !11805}
!11804 = !DILocation(line: 500, column: 3, scope: !11792)
!11805 = !DILocation(line: 503, column: 3, scope: !11792)
!11806 = !DILocation(line: 504, column: 10, scope: !11792)
!11807 = !DILocation(line: 505, column: 2, scope: !11792)
!11808 = !DILocation(line: 507, column: 2, scope: !11784)
!11809 = distinct !DISubprogram(name: "device_visitor", scope: !11676, file: !11676, line: 106, type: !11810, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !11812)
!11810 = !DISubroutineType(types: !11811)
!11811 = !{!103, !214, !120, !11766, !102}
!11812 = !{!11813, !11814, !11815, !11816, !11817, !11819, !11822, !11823}
!11813 = !DILocalVariable(name: "handles", arg: 1, scope: !11809, file: !11676, line: 106, type: !214)
!11814 = !DILocalVariable(name: "handle_count", arg: 2, scope: !11809, file: !11676, line: 107, type: !120)
!11815 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !11809, file: !11676, line: 108, type: !11766)
!11816 = !DILocalVariable(name: "context", arg: 4, scope: !11809, file: !11676, line: 109, type: !102)
!11817 = !DILocalVariable(name: "i", scope: !11818, file: !11676, line: 112, type: !120)
!11818 = distinct !DILexicalBlock(scope: !11809, file: !11676, line: 112, column: 2)
!11819 = !DILocalVariable(name: "dh", scope: !11820, file: !11676, line: 113, type: !216)
!11820 = distinct !DILexicalBlock(scope: !11821, file: !11676, line: 112, column: 44)
!11821 = distinct !DILexicalBlock(scope: !11818, file: !11676, line: 112, column: 2)
!11822 = !DILocalVariable(name: "rdev", scope: !11820, file: !11676, line: 114, type: !11679)
!11823 = !DILocalVariable(name: "rc", scope: !11820, file: !11676, line: 115, type: !103)
!11824 = !DILocation(line: 0, scope: !11809)
!11825 = !DILocation(line: 0, scope: !11818)
!11826 = !DILocation(line: 112, column: 23, scope: !11821)
!11827 = !DILocation(line: 112, column: 2, scope: !11818)
!11828 = distinct !{!11828, !11827, !11829}
!11829 = !DILocation(line: 120, column: 2, scope: !11818)
!11830 = !DILocation(line: 113, column: 24, scope: !11820)
!11831 = !DILocation(line: 0, scope: !11820)
!11832 = !DILocation(line: 114, column: 31, scope: !11820)
!11833 = !DILocation(line: 115, column: 12, scope: !11820)
!11834 = !DILocation(line: 117, column: 10, scope: !11835)
!11835 = distinct !DILexicalBlock(scope: !11820, file: !11676, line: 117, column: 7)
!11836 = !DILocation(line: 112, column: 39, scope: !11821)
!11837 = !DILocation(line: 123, column: 1, scope: !11809)
!11838 = distinct !DISubprogram(name: "device_from_handle", scope: !196, file: !196, line: 439, type: !11839, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !11841)
!11839 = !DISubroutineType(types: !11840)
!11840 = !{!11679, !216}
!11841 = !{!11842, !11843, !11844}
!11842 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !11838, file: !196, line: 439, type: !216)
!11843 = !DILocalVariable(name: "dev", scope: !11838, file: !196, line: 443, type: !11679)
!11844 = !DILocalVariable(name: "numdev", scope: !11838, file: !196, line: 444, type: !120)
!11845 = !DILocation(line: 0, scope: !11838)
!11846 = !DILocation(line: 446, column: 7, scope: !11847)
!11847 = distinct !DILexicalBlock(scope: !11838, file: !196, line: 446, column: 6)
!11848 = !DILocation(line: 446, column: 18, scope: !11847)
!11849 = !DILocation(line: 446, column: 23, scope: !11847)
!11850 = !DILocation(line: 450, column: 2, scope: !11838)
!11851 = distinct !DISubprogram(name: "device_supported_foreach", scope: !11676, file: !11676, line: 135, type: !11764, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !11852)
!11852 = !{!11853, !11854, !11855, !11856, !11857}
!11853 = !DILocalVariable(name: "dev", arg: 1, scope: !11851, file: !11676, line: 135, type: !11679)
!11854 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !11851, file: !11676, line: 136, type: !11766)
!11855 = !DILocalVariable(name: "context", arg: 3, scope: !11851, file: !11676, line: 137, type: !102)
!11856 = !DILocalVariable(name: "handle_count", scope: !11851, file: !11676, line: 139, type: !120)
!11857 = !DILocalVariable(name: "handles", scope: !11851, file: !11676, line: 140, type: !214)
!11858 = !DILocation(line: 0, scope: !11851)
!11859 = !DILocation(line: 139, column: 2, scope: !11851)
!11860 = !DILocation(line: 139, column: 9, scope: !11851)
!11861 = !DILocation(line: 140, column: 35, scope: !11851)
!11862 = !DILocation(line: 142, column: 33, scope: !11851)
!11863 = !DILocation(line: 142, column: 9, scope: !11851)
!11864 = !DILocation(line: 143, column: 1, scope: !11851)
!11865 = !DILocation(line: 142, column: 2, scope: !11851)
!11866 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !196, file: !196, line: 573, type: !11785, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !11867)
!11867 = !{!11868, !11869, !11870, !11871, !11872}
!11868 = !DILocalVariable(name: "dev", arg: 1, scope: !11866, file: !196, line: 573, type: !11679)
!11869 = !DILocalVariable(name: "count", arg: 2, scope: !11866, file: !196, line: 573, type: !2304)
!11870 = !DILocalVariable(name: "rv", scope: !11866, file: !196, line: 575, type: !214)
!11871 = !DILocalVariable(name: "region", scope: !11866, file: !196, line: 576, type: !120)
!11872 = !DILocalVariable(name: "i", scope: !11866, file: !196, line: 577, type: !120)
!11873 = !DILocation(line: 0, scope: !11866)
!11874 = !DILocation(line: 575, column: 35, scope: !11866)
!11875 = !DILocation(line: 579, column: 9, scope: !11876)
!11876 = distinct !DILexicalBlock(scope: !11866, file: !196, line: 579, column: 6)
!11877 = !DILocation(line: 579, column: 6, scope: !11866)
!11878 = !DILocation(line: 582, column: 8, scope: !11879)
!11879 = distinct !DILexicalBlock(scope: !11880, file: !196, line: 582, column: 8)
!11880 = distinct !DILexicalBlock(scope: !11881, file: !196, line: 581, column: 23)
!11881 = distinct !DILexicalBlock(scope: !11876, file: !196, line: 579, column: 18)
!11882 = !DILocation(line: 582, column: 12, scope: !11879)
!11883 = !DILocation(line: 585, column: 6, scope: !11880)
!11884 = !DILocation(line: 0, scope: !11881)
!11885 = !DILocation(line: 581, column: 17, scope: !11881)
!11886 = !DILocation(line: 581, column: 3, scope: !11881)
!11887 = !DILocation(line: 588, column: 10, scope: !11881)
!11888 = !DILocation(line: 588, column: 16, scope: !11881)
!11889 = !DILocation(line: 589, column: 4, scope: !11890)
!11890 = distinct !DILexicalBlock(scope: !11881, file: !196, line: 588, column: 39)
!11891 = !DILocation(line: 588, column: 3, scope: !11881)
!11892 = distinct !{!11892, !11891, !11893}
!11893 = !DILocation(line: 590, column: 3, scope: !11881)
!11894 = !DILocation(line: 591, column: 10, scope: !11881)
!11895 = !DILocation(line: 592, column: 2, scope: !11881)
!11896 = !DILocation(line: 575, column: 25, scope: !11866)
!11897 = !DILocation(line: 594, column: 2, scope: !11866)
!11898 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1701, file: !1701, line: 49, type: !11899, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1698, retainedNodes: !162)
!11899 = !DISubroutineType(types: !11900)
!11900 = !{!2297}
!11901 = !DILocation(line: 51, column: 10, scope: !11898)
!11902 = !DILocation(line: 51, column: 20, scope: !11898)
!11903 = !DILocation(line: 51, column: 2, scope: !11898)
!11904 = distinct !DISubprogram(name: "coredump", scope: !2815, file: !2815, line: 209, type: !11905, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2811, retainedNodes: !12051)
!11905 = !DISubroutineType(types: !11906)
!11906 = !{null, !32, !11907, !11951}
!11907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11908, size: 32)
!11908 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11909)
!11909 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2429, line: 141, baseType: !11910)
!11910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2429, line: 97, size: 256, elements: !11911)
!11911 = !{!11912}
!11912 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !11910, file: !2429, line: 107, baseType: !11913, size: 256)
!11913 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2429, line: 98, size: 256, elements: !11914)
!11914 = !{!11915, !11920, !11925, !11930, !11935, !11940, !11945, !11950}
!11915 = !DIDerivedType(tag: DW_TAG_member, scope: !11913, file: !2429, line: 99, baseType: !11916, size: 32)
!11916 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11913, file: !2429, line: 99, size: 32, elements: !11917)
!11917 = !{!11918, !11919}
!11918 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !11916, file: !2429, line: 99, baseType: !137, size: 32)
!11919 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !11916, file: !2429, line: 99, baseType: !137, size: 32)
!11920 = !DIDerivedType(tag: DW_TAG_member, scope: !11913, file: !2429, line: 100, baseType: !11921, size: 32, offset: 32)
!11921 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11913, file: !2429, line: 100, size: 32, elements: !11922)
!11922 = !{!11923, !11924}
!11923 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !11921, file: !2429, line: 100, baseType: !137, size: 32)
!11924 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !11921, file: !2429, line: 100, baseType: !137, size: 32)
!11925 = !DIDerivedType(tag: DW_TAG_member, scope: !11913, file: !2429, line: 101, baseType: !11926, size: 32, offset: 64)
!11926 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11913, file: !2429, line: 101, size: 32, elements: !11927)
!11927 = !{!11928, !11929}
!11928 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !11926, file: !2429, line: 101, baseType: !137, size: 32)
!11929 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !11926, file: !2429, line: 101, baseType: !137, size: 32)
!11930 = !DIDerivedType(tag: DW_TAG_member, scope: !11913, file: !2429, line: 102, baseType: !11931, size: 32, offset: 96)
!11931 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11913, file: !2429, line: 102, size: 32, elements: !11932)
!11932 = !{!11933, !11934}
!11933 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !11931, file: !2429, line: 102, baseType: !137, size: 32)
!11934 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !11931, file: !2429, line: 102, baseType: !137, size: 32)
!11935 = !DIDerivedType(tag: DW_TAG_member, scope: !11913, file: !2429, line: 103, baseType: !11936, size: 32, offset: 128)
!11936 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11913, file: !2429, line: 103, size: 32, elements: !11937)
!11937 = !{!11938, !11939}
!11938 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !11936, file: !2429, line: 103, baseType: !137, size: 32)
!11939 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !11936, file: !2429, line: 103, baseType: !137, size: 32)
!11940 = !DIDerivedType(tag: DW_TAG_member, scope: !11913, file: !2429, line: 104, baseType: !11941, size: 32, offset: 160)
!11941 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11913, file: !2429, line: 104, size: 32, elements: !11942)
!11942 = !{!11943, !11944}
!11943 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !11941, file: !2429, line: 104, baseType: !137, size: 32)
!11944 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !11941, file: !2429, line: 104, baseType: !137, size: 32)
!11945 = !DIDerivedType(tag: DW_TAG_member, scope: !11913, file: !2429, line: 105, baseType: !11946, size: 32, offset: 192)
!11946 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11913, file: !2429, line: 105, size: 32, elements: !11947)
!11947 = !{!11948, !11949}
!11948 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !11946, file: !2429, line: 105, baseType: !137, size: 32)
!11949 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !11946, file: !2429, line: 105, baseType: !137, size: 32)
!11950 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !11913, file: !2429, line: 106, baseType: !137, size: 32, offset: 224)
!11951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11952, size: 32)
!11952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !263, line: 245, size: 1024, elements: !11953)
!11953 = !{!11954, !12012, !12024, !12025, !12026, !12027, !12033, !12046}
!11954 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !11952, file: !263, line: 247, baseType: !11955, size: 384)
!11955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !263, line: 57, size: 384, elements: !11956)
!11956 = !{!11957, !11981, !11988, !11989, !11990, !11999, !12000, !12001}
!11957 = !DIDerivedType(tag: DW_TAG_member, scope: !11955, file: !263, line: 60, baseType: !11958, size: 64)
!11958 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11955, file: !263, line: 60, size: 64, elements: !11959)
!11959 = !{!11960, !11975}
!11960 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !11958, file: !263, line: 61, baseType: !11961, size: 64)
!11961 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !273, line: 49, baseType: !11962)
!11962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !273, line: 37, size: 64, elements: !11963)
!11963 = !{!11964, !11970}
!11964 = !DIDerivedType(tag: DW_TAG_member, scope: !11962, file: !273, line: 38, baseType: !11965, size: 32)
!11965 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11962, file: !273, line: 38, size: 32, elements: !11966)
!11966 = !{!11967, !11969}
!11967 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !11965, file: !273, line: 39, baseType: !11968, size: 32)
!11968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11962, size: 32)
!11969 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !11965, file: !273, line: 40, baseType: !11968, size: 32)
!11970 = !DIDerivedType(tag: DW_TAG_member, scope: !11962, file: !273, line: 42, baseType: !11971, size: 32, offset: 32)
!11971 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11962, file: !273, line: 42, size: 32, elements: !11972)
!11972 = !{!11973, !11974}
!11973 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !11971, file: !273, line: 43, baseType: !11968, size: 32)
!11974 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !11971, file: !273, line: 44, baseType: !11968, size: 32)
!11975 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !11958, file: !263, line: 62, baseType: !11976, size: 64)
!11976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !289, line: 49, size: 64, elements: !11977)
!11977 = !{!11978}
!11978 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !11976, file: !289, line: 50, baseType: !11979, size: 64)
!11979 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11980, size: 64, elements: !294)
!11980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11976, size: 32)
!11981 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !11955, file: !263, line: 68, baseType: !11982, size: 32, offset: 64)
!11982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11983, size: 32)
!11983 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !299, line: 233, baseType: !11984)
!11984 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !299, line: 231, size: 64, elements: !11985)
!11985 = !{!11986}
!11986 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !11984, file: !299, line: 232, baseType: !11987, size: 64)
!11987 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !273, line: 48, baseType: !11962)
!11988 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !11955, file: !263, line: 71, baseType: !208, size: 8, offset: 96)
!11989 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !11955, file: !263, line: 74, baseType: !208, size: 8, offset: 104)
!11990 = !DIDerivedType(tag: DW_TAG_member, scope: !11955, file: !263, line: 90, baseType: !11991, size: 16, offset: 112)
!11991 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11955, file: !263, line: 90, size: 16, elements: !11992)
!11992 = !{!11993, !11998}
!11993 = !DIDerivedType(tag: DW_TAG_member, scope: !11991, file: !263, line: 91, baseType: !11994, size: 16)
!11994 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !11991, file: !263, line: 91, size: 16, elements: !11995)
!11995 = !{!11996, !11997}
!11996 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !11994, file: !263, line: 96, baseType: !313, size: 8)
!11997 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !11994, file: !263, line: 97, baseType: !208, size: 8, offset: 8)
!11998 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !11991, file: !263, line: 100, baseType: !151, size: 16)
!11999 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !11955, file: !263, line: 107, baseType: !137, size: 32, offset: 128)
!12000 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !11955, file: !263, line: 127, baseType: !102, size: 32, offset: 160)
!12001 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !11955, file: !263, line: 131, baseType: !12002, size: 192, offset: 192)
!12002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !299, line: 244, size: 192, elements: !12003)
!12003 = !{!12004, !12005, !12011}
!12004 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !12002, file: !299, line: 245, baseType: !11961, size: 64)
!12005 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !12002, file: !299, line: 246, baseType: !12006, size: 32, offset: 64)
!12006 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !299, line: 242, baseType: !12007)
!12007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12008, size: 32)
!12008 = !DISubroutineType(types: !12009)
!12009 = !{null, !12010}
!12010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12002, size: 32)
!12011 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !12002, file: !299, line: 249, baseType: !330, size: 64, offset: 128)
!12012 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !11952, file: !263, line: 250, baseType: !12013, size: 288, offset: 384)
!12013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !334, line: 25, size: 288, elements: !12014)
!12014 = !{!12015, !12016, !12017, !12018, !12019, !12020, !12021, !12022, !12023}
!12015 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !12013, file: !334, line: 26, baseType: !137, size: 32)
!12016 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !12013, file: !334, line: 27, baseType: !137, size: 32, offset: 32)
!12017 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !12013, file: !334, line: 28, baseType: !137, size: 32, offset: 64)
!12018 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !12013, file: !334, line: 29, baseType: !137, size: 32, offset: 96)
!12019 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !12013, file: !334, line: 30, baseType: !137, size: 32, offset: 128)
!12020 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !12013, file: !334, line: 31, baseType: !137, size: 32, offset: 160)
!12021 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !12013, file: !334, line: 32, baseType: !137, size: 32, offset: 192)
!12022 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !12013, file: !334, line: 33, baseType: !137, size: 32, offset: 224)
!12023 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !12013, file: !334, line: 34, baseType: !137, size: 32, offset: 256)
!12024 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !11952, file: !263, line: 253, baseType: !102, size: 32, offset: 672)
!12025 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !11952, file: !263, line: 256, baseType: !11983, size: 64, offset: 704)
!12026 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !11952, file: !263, line: 294, baseType: !103, size: 32, offset: 768)
!12027 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !11952, file: !263, line: 300, baseType: !12028, size: 96, offset: 800)
!12028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !263, line: 149, size: 96, elements: !12029)
!12029 = !{!12030, !12031, !12032}
!12030 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !12028, file: !263, line: 153, baseType: !22, size: 32)
!12031 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !12028, file: !263, line: 162, baseType: !120, size: 32, offset: 32)
!12032 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !12028, file: !263, line: 168, baseType: !120, size: 32, offset: 64)
!12033 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !11952, file: !263, line: 325, baseType: !12034, size: 32, offset: 896)
!12034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12035, size: 32)
!12035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !357, line: 5073, size: 160, elements: !12036)
!12036 = !{!12037, !12043, !12044}
!12037 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12035, file: !357, line: 5074, baseType: !12038, size: 96)
!12038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !12039)
!12039 = !{!12040, !12041, !12042}
!12040 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12038, file: !113, line: 57, baseType: !116, size: 32)
!12041 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !12038, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!12042 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !12038, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!12043 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !12035, file: !357, line: 5075, baseType: !11983, size: 64, offset: 96)
!12044 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !12035, file: !357, line: 5076, baseType: !12045, offset: 160)
!12045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !368, line: 43, elements: !162)
!12046 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !11952, file: !263, line: 343, baseType: !12047, size: 64, offset: 928)
!12047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !334, line: 60, size: 64, elements: !12048)
!12048 = !{!12049, !12050}
!12049 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !12047, file: !334, line: 63, baseType: !137, size: 32)
!12050 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !12047, file: !334, line: 66, baseType: !137, size: 32, offset: 32)
!12051 = !{!12052, !12053, !12054}
!12052 = !DILocalVariable(name: "reason", arg: 1, scope: !11904, file: !2815, line: 209, type: !32)
!12053 = !DILocalVariable(name: "esf", arg: 2, scope: !11904, file: !2815, line: 209, type: !11907)
!12054 = !DILocalVariable(name: "thread", arg: 3, scope: !11904, file: !2815, line: 210, type: !11951)
!12055 = !DILocation(line: 0, scope: !11904)
!12056 = !DILocation(line: 212, column: 1, scope: !11904)
!12057 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !2815, file: !2815, line: 214, type: !12058, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2811, retainedNodes: !12060)
!12058 = !DISubroutineType(types: !12059)
!12059 = !{null, !22, !22}
!12060 = !{!12061, !12062}
!12061 = !DILocalVariable(name: "start_addr", arg: 1, scope: !12057, file: !2815, line: 214, type: !22)
!12062 = !DILocalVariable(name: "end_addr", arg: 2, scope: !12057, file: !2815, line: 214, type: !22)
!12063 = !DILocation(line: 0, scope: !12057)
!12064 = !DILocation(line: 216, column: 1, scope: !12057)
!12065 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !2815, file: !2815, line: 218, type: !12066, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2811, retainedNodes: !12068)
!12066 = !DISubroutineType(types: !12067)
!12067 = !{null, !1742, !120}
!12068 = !{!12069, !12070}
!12069 = !DILocalVariable(name: "buf", arg: 1, scope: !12065, file: !2815, line: 218, type: !1742)
!12070 = !DILocalVariable(name: "buflen", arg: 2, scope: !12065, file: !2815, line: 218, type: !120)
!12071 = !DILocation(line: 0, scope: !12065)
!12072 = !DILocation(line: 220, column: 1, scope: !12065)
!12073 = distinct !DISubprogram(name: "coredump_query", scope: !2815, file: !2815, line: 222, type: !12074, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2811, retainedNodes: !12076)
!12074 = !DISubroutineType(types: !12075)
!12075 = !{!103, !2814, !102}
!12076 = !{!12077, !12078}
!12077 = !DILocalVariable(name: "query_id", arg: 1, scope: !12073, file: !2815, line: 222, type: !2814)
!12078 = !DILocalVariable(name: "arg", arg: 2, scope: !12073, file: !2815, line: 222, type: !102)
!12079 = !DILocation(line: 0, scope: !12073)
!12080 = !DILocation(line: 224, column: 2, scope: !12073)
!12081 = distinct !DISubprogram(name: "coredump_cmd", scope: !2815, file: !2815, line: 227, type: !12082, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2811, retainedNodes: !12084)
!12082 = !DISubroutineType(types: !12083)
!12083 = !{!103, !2821, !102}
!12084 = !{!12085, !12086}
!12085 = !DILocalVariable(name: "query_id", arg: 1, scope: !12081, file: !2815, line: 227, type: !2821)
!12086 = !DILocalVariable(name: "arg", arg: 2, scope: !12081, file: !2815, line: 227, type: !102)
!12087 = !DILocation(line: 0, scope: !12081)
!12088 = !DILocation(line: 229, column: 2, scope: !12081)
!12089 = distinct !DISubprogram(name: "arch_system_halt", scope: !12090, file: !12090, line: 23, type: !6159, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2811, retainedNodes: !12091)
!12090 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12091 = !{!12092}
!12092 = !DILocalVariable(name: "reason", arg: 1, scope: !12089, file: !12090, line: 23, type: !32)
!12093 = !DILocation(line: 0, scope: !12089)
!12094 = !DILocation(line: 55, column: 2, scope: !12095, inlinedAt: !12099)
!12095 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6148, file: !6148, line: 42, type: !6149, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2811, retainedNodes: !12096)
!12096 = !{!12097, !12098}
!12097 = !DILocalVariable(name: "key", scope: !12095, file: !6148, line: 44, type: !32)
!12098 = !DILocalVariable(name: "tmp", scope: !12095, file: !6148, line: 53, type: !32)
!12099 = distinct !DILocation(line: 31, column: 8, scope: !12089)
!12100 = !{i64 2038739}
!12101 = !DILocation(line: 0, scope: !12095, inlinedAt: !12099)
!12102 = !DILocation(line: 32, column: 2, scope: !12089)
!12103 = !DILocation(line: 32, column: 2, scope: !12104)
!12104 = distinct !DILexicalBlock(scope: !12105, file: !12090, line: 32, column: 2)
!12105 = distinct !DILexicalBlock(scope: !12089, file: !12090, line: 32, column: 2)
!12106 = distinct !{!12106, !12107, !12108}
!12107 = !DILocation(line: 32, column: 2, scope: !12105)
!12108 = !DILocation(line: 34, column: 2, scope: !12105)
!12109 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !12090, file: !12090, line: 39, type: !12110, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2811, retainedNodes: !12112)
!12110 = !DISubroutineType(types: !12111)
!12111 = !{null, !32, !11907}
!12112 = !{!12113, !12114}
!12113 = !DILocalVariable(name: "reason", arg: 1, scope: !12109, file: !12090, line: 39, type: !32)
!12114 = !DILocalVariable(name: "esf", arg: 2, scope: !12109, file: !12090, line: 40, type: !11907)
!12115 = !DILocation(line: 0, scope: !12109)
!12116 = !DILocation(line: 46, column: 2, scope: !12109)
!12117 = distinct !DISubprogram(name: "k_fatal_halt", scope: !12090, file: !12090, line: 81, type: !6159, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2811, retainedNodes: !12118)
!12118 = !{!12119}
!12119 = !DILocalVariable(name: "reason", arg: 1, scope: !12117, file: !12090, line: 81, type: !32)
!12120 = !DILocation(line: 0, scope: !12117)
!12121 = !DILocation(line: 83, column: 2, scope: !12117)
!12122 = distinct !DISubprogram(name: "z_fatal_error", scope: !12090, file: !12090, line: 96, type: !12110, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2811, retainedNodes: !12123)
!12123 = !{!12124, !12125, !12126, !12127}
!12124 = !DILocalVariable(name: "reason", arg: 1, scope: !12122, file: !12090, line: 96, type: !32)
!12125 = !DILocalVariable(name: "esf", arg: 2, scope: !12122, file: !12090, line: 96, type: !11907)
!12126 = !DILocalVariable(name: "key", scope: !12122, file: !12090, line: 102, type: !32)
!12127 = !DILocalVariable(name: "thread", scope: !12122, file: !12090, line: 103, type: !11951)
!12128 = !DILocation(line: 0, scope: !12122)
!12129 = !DILocation(line: 55, column: 2, scope: !12095, inlinedAt: !12130)
!12130 = distinct !DILocation(line: 102, column: 21, scope: !12122)
!12131 = !DILocation(line: 0, scope: !12095, inlinedAt: !12130)
!12132 = !DILocation(line: 119, column: 11, scope: !12133)
!12133 = distinct !DILexicalBlock(scope: !12122, file: !12090, line: 119, column: 6)
!12134 = !DILocation(line: 119, column: 20, scope: !12133)
!12135 = !DILocation(line: 131, column: 2, scope: !12122)
!12136 = !DILocation(line: 151, column: 7, scope: !12137)
!12137 = distinct !DILexicalBlock(scope: !12138, file: !12090, line: 146, column: 32)
!12138 = distinct !DILexicalBlock(scope: !12122, file: !12090, line: 146, column: 6)
!12139 = !DILocation(line: 151, column: 21, scope: !12140)
!12140 = distinct !DILexicalBlock(scope: !12137, file: !12090, line: 151, column: 7)
!12141 = !DILocation(line: 104, column: 4, scope: !12122)
!12142 = !DILocalVariable(name: "key", arg: 1, scope: !12143, file: !6148, line: 84, type: !32)
!12143 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6148, file: !6148, line: 84, type: !6159, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2811, retainedNodes: !12144)
!12144 = !{!12142}
!12145 = !DILocation(line: 0, scope: !12143, inlinedAt: !12146)
!12146 = distinct !DILocation(line: 186, column: 2, scope: !12122)
!12147 = !DILocation(line: 95, column: 2, scope: !12143, inlinedAt: !12146)
!12148 = !{i64 2039556}
!12149 = !DILocation(line: 189, column: 3, scope: !12150)
!12150 = distinct !DILexicalBlock(scope: !12151, file: !12090, line: 188, column: 41)
!12151 = distinct !DILexicalBlock(scope: !12122, file: !12090, line: 188, column: 6)
!12152 = !DILocation(line: 191, column: 1, scope: !12122)
!12153 = distinct !DISubprogram(name: "k_current_get", scope: !357, file: !357, line: 530, type: !12154, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2811, retainedNodes: !162)
!12154 = !DISubroutineType(types: !12155)
!12155 = !{!12156}
!12156 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !263, line: 347, baseType: !11951)
!12157 = !DILocation(line: 535, column: 9, scope: !12153)
!12158 = !DILocation(line: 535, column: 2, scope: !12153)
!12159 = distinct !DISubprogram(name: "k_thread_abort", scope: !3298, file: !3298, line: 188, type: !12160, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2811, retainedNodes: !12162)
!12160 = !DISubroutineType(types: !12161)
!12161 = !{null, !12156}
!12162 = !{!12163}
!12163 = !DILocalVariable(name: "thread", arg: 1, scope: !12159, file: !3298, line: 188, type: !12156)
!12164 = !DILocation(line: 0, scope: !12159)
!12165 = !DILocation(line: 197, column: 2, scope: !12166)
!12166 = distinct !DILexicalBlock(scope: !12159, file: !3298, line: 197, column: 2)
!12167 = !{i64 2154150467}
!12168 = !DILocation(line: 198, column: 2, scope: !12159)
!12169 = !DILocation(line: 199, column: 1, scope: !12159)
!12170 = distinct !DISubprogram(name: "z_current_get", scope: !3298, file: !3298, line: 173, type: !12154, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2811, retainedNodes: !162)
!12171 = !DILocation(line: 180, column: 2, scope: !12172)
!12172 = distinct !DILexicalBlock(scope: !12170, file: !3298, line: 180, column: 2)
!12173 = !{i64 2154150399}
!12174 = !DILocation(line: 181, column: 9, scope: !12170)
!12175 = !DILocation(line: 181, column: 2, scope: !12170)
!12176 = distinct !DISubprogram(name: "z_early_memset", scope: !1709, file: !1709, line: 108, type: !12177, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1705, retainedNodes: !12179)
!12177 = !DISubroutineType(types: !12178)
!12178 = !{null, !102, !103, !120}
!12179 = !{!12180, !12181, !12182}
!12180 = !DILocalVariable(name: "dst", arg: 1, scope: !12176, file: !1709, line: 108, type: !102)
!12181 = !DILocalVariable(name: "c", arg: 2, scope: !12176, file: !1709, line: 108, type: !103)
!12182 = !DILocalVariable(name: "n", arg: 3, scope: !12176, file: !1709, line: 108, type: !120)
!12183 = !DILocation(line: 0, scope: !12176)
!12184 = !DILocation(line: 110, column: 9, scope: !12176)
!12185 = !DILocation(line: 111, column: 1, scope: !12176)
!12186 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1709, file: !1709, line: 121, type: !12187, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1705, retainedNodes: !12189)
!12187 = !DISubroutineType(types: !12188)
!12188 = !{null, !102, !13, !120}
!12189 = !{!12190, !12191, !12192}
!12190 = !DILocalVariable(name: "dst", arg: 1, scope: !12186, file: !1709, line: 121, type: !102)
!12191 = !DILocalVariable(name: "src", arg: 2, scope: !12186, file: !1709, line: 121, type: !13)
!12192 = !DILocalVariable(name: "n", arg: 3, scope: !12186, file: !1709, line: 121, type: !120)
!12193 = !DILocation(line: 0, scope: !12186)
!12194 = !DILocation(line: 123, column: 9, scope: !12186)
!12195 = !DILocation(line: 124, column: 1, scope: !12186)
!12196 = distinct !DISubprogram(name: "z_bss_zero", scope: !1709, file: !1709, line: 132, type: !2848, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1705, retainedNodes: !162)
!12197 = !DILocation(line: 143, column: 2, scope: !12196)
!12198 = !DILocation(line: 168, column: 1, scope: !12196)
!12199 = distinct !DISubprogram(name: "z_init_cpu", scope: !1709, file: !1709, line: 372, type: !7964, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1705, retainedNodes: !12200)
!12200 = !{!12201}
!12201 = !DILocalVariable(name: "id", arg: 1, scope: !12199, file: !1709, line: 372, type: !103)
!12202 = !DILocation(line: 0, scope: !12199)
!12203 = !DILocation(line: 374, column: 2, scope: !12199)
!12204 = !DILocation(line: 375, column: 34, scope: !12199)
!12205 = !DILocation(line: 375, column: 19, scope: !12199)
!12206 = !DILocation(line: 375, column: 31, scope: !12199)
!12207 = !DILocation(line: 376, column: 24, scope: !12199)
!12208 = !DILocation(line: 376, column: 19, scope: !12199)
!12209 = !DILocation(line: 376, column: 22, scope: !12199)
!12210 = !DILocation(line: 378, column: 26, scope: !12199)
!12211 = !DILocation(line: 378, column: 4, scope: !12199)
!12212 = !DILocation(line: 378, column: 50, scope: !12199)
!12213 = !DILocation(line: 377, column: 19, scope: !12199)
!12214 = !DILocation(line: 377, column: 29, scope: !12199)
!12215 = !DILocation(line: 384, column: 1, scope: !12199)
!12216 = distinct !DISubprogram(name: "init_idle_thread", scope: !1709, file: !1709, line: 343, type: !7964, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1705, retainedNodes: !12217)
!12217 = !{!12218, !12219, !12220, !12223}
!12218 = !DILocalVariable(name: "i", arg: 1, scope: !12216, file: !1709, line: 343, type: !103)
!12219 = !DILocalVariable(name: "thread", scope: !12216, file: !1709, line: 345, type: !1802)
!12220 = !DILocalVariable(name: "stack", scope: !12216, file: !1709, line: 346, type: !12221)
!12221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12222, size: 32)
!12222 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3177, line: 44, baseType: !1916)
!12223 = !DILocalVariable(name: "tname", scope: !12216, file: !1709, line: 358, type: !1005)
!12224 = !DILocation(line: 0, scope: !12216)
!12225 = !DILocation(line: 345, column: 29, scope: !12216)
!12226 = !DILocation(line: 346, column: 28, scope: !12216)
!12227 = !DILocation(line: 362, column: 37, scope: !12216)
!12228 = !DILocation(line: 362, column: 36, scope: !12216)
!12229 = !DILocation(line: 361, column: 2, scope: !12216)
!12230 = !DILocation(line: 365, column: 2, scope: !12216)
!12231 = !DILocation(line: 370, column: 1, scope: !12216)
!12232 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !1917, file: !1917, line: 331, type: !12233, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1705, retainedNodes: !12235)
!12233 = !DISubroutineType(types: !12234)
!12234 = !{!1005, !12221}
!12235 = !{!12236}
!12236 = !DILocalVariable(name: "sym", arg: 1, scope: !12232, file: !1917, line: 331, type: !12221)
!12237 = !DILocation(line: 0, scope: !12232)
!12238 = !DILocation(line: 333, column: 21, scope: !12232)
!12239 = !DILocation(line: 333, column: 2, scope: !12232)
!12240 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12241, file: !12241, line: 155, type: !12242, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1705, retainedNodes: !12244)
!12241 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12242 = !DISubroutineType(types: !12243)
!12243 = !{null, !1802}
!12244 = !{!12245}
!12245 = !DILocalVariable(name: "thread", arg: 1, scope: !12240, file: !12241, line: 155, type: !1802)
!12246 = !DILocation(line: 0, scope: !12240)
!12247 = !DILocation(line: 157, column: 15, scope: !12240)
!12248 = !DILocation(line: 157, column: 28, scope: !12240)
!12249 = !DILocation(line: 158, column: 1, scope: !12240)
!12250 = distinct !DISubprogram(name: "z_cstart", scope: !1709, file: !1709, line: 501, type: !2848, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1705, retainedNodes: !12251)
!12251 = !{!12252}
!12252 = !DILocalVariable(name: "dummy_thread", scope: !12250, file: !1709, line: 518, type: !1803)
!12253 = !DILocation(line: 507, column: 2, scope: !12250)
!12254 = !DILocation(line: 43, column: 14, scope: !12255, inlinedAt: !12259)
!12255 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !12256, file: !12256, line: 40, type: !2848, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1705, retainedNodes: !12257)
!12256 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12257 = !{!12258}
!12258 = !DILocalVariable(name: "msp", scope: !12255, file: !12256, line: 42, type: !137)
!12259 = distinct !DILocation(line: 44, column: 2, scope: !12260, inlinedAt: !12262)
!12260 = distinct !DISubprogram(name: "arch_kernel_init", scope: !12261, file: !12261, line: 42, type: !2848, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1705, retainedNodes: !162)
!12261 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12262 = distinct !DILocation(line: 510, column: 2, scope: !12250)
!12263 = !DILocation(line: 43, column: 3, scope: !12255, inlinedAt: !12259)
!12264 = !DILocation(line: 43, column: 60, scope: !12255, inlinedAt: !12259)
!12265 = !DILocation(line: 0, scope: !12255, inlinedAt: !12259)
!12266 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !12267, file: !6322, line: 1153, type: !137)
!12267 = distinct !DISubprogram(name: "__set_MSP", scope: !6322, file: !6322, line: 1153, type: !6411, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1705, retainedNodes: !12268)
!12268 = !{!12266}
!12269 = !DILocation(line: 0, scope: !12267, inlinedAt: !12270)
!12270 = distinct !DILocation(line: 46, column: 2, scope: !12255, inlinedAt: !12259)
!12271 = !DILocation(line: 1155, column: 3, scope: !12267, inlinedAt: !12270)
!12272 = !{i64 2932819}
!12273 = !DILocation(line: 62, column: 11, scope: !12255, inlinedAt: !12259)
!12274 = !DILocation(line: 102, column: 2, scope: !12275, inlinedAt: !12276)
!12275 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !7114, file: !7114, line: 97, type: !2848, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1705, retainedNodes: !162)
!12276 = distinct !DILocation(line: 45, column: 2, scope: !12260, inlinedAt: !12262)
!12277 = !DILocation(line: 108, column: 2, scope: !12275, inlinedAt: !12276)
!12278 = !DILocation(line: 112, column: 2, scope: !12275, inlinedAt: !12276)
!12279 = !DILocation(line: 113, column: 2, scope: !12275, inlinedAt: !12276)
!12280 = !DILocation(line: 114, column: 2, scope: !12275, inlinedAt: !12276)
!12281 = !DILocation(line: 116, column: 2, scope: !12275, inlinedAt: !12276)
!12282 = !DILocation(line: 123, column: 13, scope: !12275, inlinedAt: !12276)
!12283 = !DILocation(line: 46, column: 2, scope: !12260, inlinedAt: !12262)
!12284 = !DILocation(line: 47, column: 2, scope: !12260, inlinedAt: !12262)
!12285 = !DILocation(line: 174, column: 12, scope: !12286, inlinedAt: !12287)
!12286 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !7114, file: !7114, line: 169, type: !2848, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1705, retainedNodes: !162)
!12287 = distinct !DILocation(line: 48, column: 2, scope: !12260, inlinedAt: !12262)
!12288 = !DILocation(line: 179, column: 12, scope: !12286, inlinedAt: !12287)
!12289 = !DILocation(line: 50, column: 2, scope: !12260, inlinedAt: !12262)
!12290 = !DILocation(line: 57, column: 2, scope: !12260, inlinedAt: !12262)
!12291 = !DILocation(line: 518, column: 2, scope: !12250)
!12292 = !DILocation(line: 518, column: 18, scope: !12250)
!12293 = !DILocation(line: 520, column: 2, scope: !12250)
!12294 = !DILocation(line: 523, column: 2, scope: !12250)
!12295 = !DILocation(line: 526, column: 2, scope: !12250)
!12296 = !DILocation(line: 527, column: 2, scope: !12250)
!12297 = !DILocation(line: 543, column: 24, scope: !12250)
!12298 = !DILocation(line: 543, column: 2, scope: !12250)
!12299 = !DILocation(line: 0, scope: !1936)
!12300 = !DILocation(line: 246, column: 15, scope: !1954)
!12301 = !DILocation(line: 246, column: 36, scope: !1953)
!12302 = !DILocation(line: 246, column: 2, scope: !1954)
!12303 = !DILocation(line: 247, column: 37, scope: !1952)
!12304 = !DILocation(line: 0, scope: !1952)
!12305 = !DILocation(line: 248, column: 19, scope: !1952)
!12306 = !DILocation(line: 248, column: 12, scope: !1952)
!12307 = !DILocation(line: 250, column: 11, scope: !12308)
!12308 = distinct !DILexicalBlock(scope: !1952, file: !1709, line: 250, column: 7)
!12309 = !DILocation(line: 250, column: 7, scope: !1952)
!12310 = !DILocation(line: 254, column: 11, scope: !12311)
!12311 = distinct !DILexicalBlock(scope: !12312, file: !1709, line: 254, column: 8)
!12312 = distinct !DILexicalBlock(scope: !12308, file: !1709, line: 250, column: 20)
!12313 = !DILocation(line: 254, column: 8, scope: !12312)
!12314 = !DILocation(line: 255, column: 9, scope: !12315)
!12315 = distinct !DILexicalBlock(scope: !12311, file: !1709, line: 254, column: 17)
!12316 = !DILocation(line: 258, column: 9, scope: !12315)
!12317 = !DILocation(line: 261, column: 28, scope: !12315)
!12318 = !DILocation(line: 261, column: 10, scope: !12315)
!12319 = !DILocation(line: 261, column: 17, scope: !12315)
!12320 = !DILocation(line: 261, column: 26, scope: !12315)
!12321 = !DILocation(line: 262, column: 4, scope: !12315)
!12322 = !DILocation(line: 263, column: 9, scope: !12312)
!12323 = !DILocation(line: 263, column: 16, scope: !12312)
!12324 = !DILocation(line: 263, column: 28, scope: !12312)
!12325 = !DILocation(line: 264, column: 3, scope: !12312)
!12326 = !DILocation(line: 246, column: 60, scope: !1953)
!12327 = distinct !{!12327, !12302, !12328}
!12328 = !DILocation(line: 265, column: 2, scope: !1954)
!12329 = !DILocation(line: 266, column: 1, scope: !1936)
!12330 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !402, file: !402, line: 1814, type: !6356, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1705, retainedNodes: !12331)
!12331 = !{!12332, !12333}
!12332 = !DILocalVariable(name: "IRQn", arg: 1, scope: !12330, file: !402, line: 1814, type: !637)
!12333 = !DILocalVariable(name: "priority", arg: 2, scope: !12330, file: !402, line: 1814, type: !137)
!12334 = !DILocation(line: 0, scope: !12330)
!12335 = !DILocation(line: 1822, column: 48, scope: !12336)
!12336 = distinct !DILexicalBlock(scope: !12337, file: !402, line: 1821, column: 3)
!12337 = distinct !DILexicalBlock(scope: !12330, file: !402, line: 1816, column: 7)
!12338 = !DILocation(line: 1822, column: 32, scope: !12336)
!12339 = !DILocation(line: 1822, column: 40, scope: !12336)
!12340 = !DILocation(line: 1822, column: 5, scope: !12336)
!12341 = !DILocation(line: 1822, column: 46, scope: !12336)
!12342 = !DILocation(line: 1824, column: 1, scope: !12330)
!12343 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !12261, file: !12261, line: 32, type: !2848, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!12344 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !12345, file: !12345, line: 215, type: !12242, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1705, retainedNodes: !12346)
!12345 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12346 = !{!12347}
!12347 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !12344, file: !12345, line: 215, type: !1802)
!12348 = !DILocation(line: 0, scope: !12344)
!12349 = !DILocation(line: 217, column: 21, scope: !12344)
!12350 = !DILocation(line: 217, column: 34, scope: !12344)
!12351 = !DILocation(line: 221, column: 21, scope: !12344)
!12352 = !DILocation(line: 221, column: 34, scope: !12344)
!12353 = !DILocation(line: 223, column: 27, scope: !12344)
!12354 = !DILocation(line: 223, column: 33, scope: !12344)
!12355 = !DILocation(line: 224, column: 27, scope: !12344)
!12356 = !DILocation(line: 224, column: 32, scope: !12344)
!12357 = !DILocation(line: 232, column: 16, scope: !12344)
!12358 = !DILocation(line: 232, column: 30, scope: !12344)
!12359 = !DILocation(line: 239, column: 24, scope: !12344)
!12360 = !DILocation(line: 240, column: 1, scope: !12344)
!12361 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1709, file: !1709, line: 399, type: !12362, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1705, retainedNodes: !12364)
!12362 = !DISubroutineType(types: !12363)
!12363 = !{!1005}
!12364 = !{!12365}
!12365 = !DILocalVariable(name: "stack_ptr", scope: !12361, file: !1709, line: 401, type: !1005)
!12366 = !DILocation(line: 404, column: 2, scope: !12361)
!12367 = !DILocation(line: 416, column: 24, scope: !12361)
!12368 = !DILocation(line: 418, column: 14, scope: !12361)
!12369 = !DILocation(line: 0, scope: !12361)
!12370 = !DILocation(line: 423, column: 2, scope: !12361)
!12371 = !DILocation(line: 424, column: 2, scope: !12361)
!12372 = !DILocation(line: 426, column: 2, scope: !12361)
!12373 = !DILocation(line: 428, column: 2, scope: !12361)
!12374 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1709, file: !1709, line: 432, type: !12375, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1705, retainedNodes: !12377)
!12375 = !DISubroutineType(types: !12376)
!12376 = !{null, !1005}
!12377 = !{!12378}
!12378 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !12374, file: !1709, line: 432, type: !1005)
!12379 = !DILocation(line: 0, scope: !12374)
!12380 = !DILocation(line: 435, column: 2, scope: !12374)
!12381 = !DILocation(line: 445, column: 2, scope: !12374)
!12382 = distinct !DISubprogram(name: "bg_thread_main", scope: !1709, file: !1709, line: 277, type: !3179, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1705, retainedNodes: !12383)
!12383 = !{!12384, !12385, !12386}
!12384 = !DILocalVariable(name: "unused1", arg: 1, scope: !12382, file: !1709, line: 277, type: !102)
!12385 = !DILocalVariable(name: "unused2", arg: 2, scope: !12382, file: !1709, line: 277, type: !102)
!12386 = !DILocalVariable(name: "unused3", arg: 3, scope: !12382, file: !1709, line: 277, type: !102)
!12387 = !DILocation(line: 0, scope: !12382)
!12388 = !DILocation(line: 291, column: 20, scope: !12382)
!12389 = !DILocation(line: 293, column: 2, scope: !12382)
!12390 = !DILocation(line: 297, column: 2, scope: !12382)
!12391 = !DILocation(line: 305, column: 2, scope: !12382)
!12392 = !DILocation(line: 307, column: 2, scope: !12382)
!12393 = !DILocation(line: 330, column: 8, scope: !12382)
!12394 = !DILocation(line: 333, column: 34, scope: !12382)
!12395 = !DILocation(line: 339, column: 1, scope: !12382)
!12396 = distinct !DISubprogram(name: "k_thread_foreach", scope: !1963, file: !1963, line: 45, type: !12397, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2067, retainedNodes: !12405)
!12397 = !DISubroutineType(types: !12398)
!12398 = !{null, !12399, !102}
!12399 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !357, line: 103, baseType: !12400)
!12400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12401, size: 32)
!12401 = !DISubroutineType(types: !12402)
!12402 = !{null, !12403, !102}
!12403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12404, size: 32)
!12404 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1968)
!12405 = !{!12406, !12407}
!12406 = !DILocalVariable(name: "user_cb", arg: 1, scope: !12396, file: !1963, line: 45, type: !12399)
!12407 = !DILocalVariable(name: "user_data", arg: 2, scope: !12396, file: !1963, line: 45, type: !102)
!12408 = !DILocation(line: 0, scope: !12396)
!12409 = !DILocation(line: 71, column: 1, scope: !12396)
!12410 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !1963, file: !1963, line: 73, type: !12397, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2067, retainedNodes: !12411)
!12411 = !{!12412, !12413}
!12412 = !DILocalVariable(name: "user_cb", arg: 1, scope: !12410, file: !1963, line: 73, type: !12399)
!12413 = !DILocalVariable(name: "user_data", arg: 2, scope: !12410, file: !1963, line: 73, type: !102)
!12414 = !DILocation(line: 0, scope: !12410)
!12415 = !DILocation(line: 95, column: 1, scope: !12410)
!12416 = distinct !DISubprogram(name: "k_is_in_isr", scope: !1963, file: !1963, line: 97, type: !7115, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2067, retainedNodes: !162)
!12417 = !DILocation(line: 1031, column: 3, scope: !12418, inlinedAt: !12421)
!12418 = distinct !DISubprogram(name: "__get_IPSR", scope: !6322, file: !6322, line: 1027, type: !135, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2067, retainedNodes: !12419)
!12419 = !{!12420}
!12420 = !DILocalVariable(name: "result", scope: !12418, file: !6322, line: 1029, type: !137)
!12421 = distinct !DILocation(line: 48, column: 10, scope: !12422, inlinedAt: !12423)
!12422 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7114, file: !7114, line: 46, type: !7115, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2067, retainedNodes: !162)
!12423 = distinct !DILocation(line: 99, column: 9, scope: !12416)
!12424 = !{i64 2938470}
!12425 = !DILocation(line: 0, scope: !12418, inlinedAt: !12421)
!12426 = !DILocation(line: 48, column: 9, scope: !12422, inlinedAt: !12423)
!12427 = !DILocation(line: 99, column: 2, scope: !12416)
!12428 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !1963, file: !1963, line: 106, type: !2848, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2067, retainedNodes: !162)
!12429 = !DILocation(line: 108, column: 2, scope: !12428)
!12430 = !DILocation(line: 108, column: 17, scope: !12428)
!12431 = !DILocation(line: 108, column: 30, scope: !12428)
!12432 = !DILocation(line: 109, column: 1, scope: !12428)
!12433 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !1963, file: !1963, line: 116, type: !2848, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2067, retainedNodes: !162)
!12434 = !DILocation(line: 118, column: 2, scope: !12433)
!12435 = !DILocation(line: 118, column: 17, scope: !12433)
!12436 = !DILocation(line: 118, column: 30, scope: !12433)
!12437 = !DILocation(line: 119, column: 1, scope: !12433)
!12438 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !1963, file: !1963, line: 126, type: !7115, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2067, retainedNodes: !162)
!12439 = !DILocation(line: 128, column: 10, scope: !12438)
!12440 = !DILocation(line: 128, column: 25, scope: !12438)
!12441 = !DILocation(line: 128, column: 38, scope: !12438)
!12442 = !DILocation(line: 128, column: 53, scope: !12438)
!12443 = !DILocation(line: 128, column: 2, scope: !12438)
!12444 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !1963, file: !1963, line: 187, type: !12445, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2067, retainedNodes: !12447)
!12445 = !DISubroutineType(types: !12446)
!12446 = !{!103, !1967, !199}
!12447 = !{!12448, !12449}
!12448 = !DILocalVariable(name: "thread", arg: 1, scope: !12444, file: !1963, line: 187, type: !1967)
!12449 = !DILocalVariable(name: "value", arg: 2, scope: !12444, file: !1963, line: 187, type: !199)
!12450 = !DILocation(line: 0, scope: !12444)
!12451 = !DILocation(line: 206, column: 2, scope: !12444)
!12452 = distinct !DISubprogram(name: "k_thread_name_get", scope: !1963, file: !1963, line: 238, type: !12453, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2067, retainedNodes: !12455)
!12453 = !DISubroutineType(types: !12454)
!12454 = !{!199, !1967}
!12455 = !{!12456}
!12456 = !DILocalVariable(name: "thread", arg: 1, scope: !12452, file: !1963, line: 238, type: !1967)
!12457 = !DILocation(line: 0, scope: !12452)
!12458 = !DILocation(line: 244, column: 2, scope: !12452)
!12459 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !1963, file: !1963, line: 248, type: !12460, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2067, retainedNodes: !12462)
!12460 = !DISubroutineType(types: !12461)
!12461 = !{!103, !1966, !1005, !120}
!12462 = !{!12463, !12464, !12465}
!12463 = !DILocalVariable(name: "thread", arg: 1, scope: !12459, file: !1963, line: 248, type: !1966)
!12464 = !DILocalVariable(name: "buf", arg: 2, scope: !12459, file: !1963, line: 248, type: !1005)
!12465 = !DILocalVariable(name: "size", arg: 3, scope: !12459, file: !1963, line: 248, type: !120)
!12466 = !DILocation(line: 0, scope: !12459)
!12467 = !DILocation(line: 257, column: 2, scope: !12459)
!12468 = !DILocation(line: 0, scope: !1962)
!12469 = !DILocation(line: 281, column: 11, scope: !12470)
!12470 = distinct !DILexicalBlock(scope: !1962, file: !1963, line: 281, column: 6)
!12471 = !DILocation(line: 281, column: 20, scope: !12470)
!12472 = !DILocation(line: 275, column: 45, scope: !1962)
!12473 = !DILocation(line: 285, column: 10, scope: !1962)
!12474 = !DILocation(line: 0, scope: !2083)
!12475 = !DILocation(line: 293, column: 39, scope: !12476)
!12476 = distinct !DILexicalBlock(scope: !2083, file: !1963, line: 293, column: 2)
!12477 = !DILocation(line: 293, column: 2, scope: !2083)
!12478 = !DILocation(line: 273, column: 14, scope: !1962)
!12479 = !DILocation(line: 309, column: 2, scope: !1962)
!12480 = !DILocation(line: 309, column: 11, scope: !1962)
!12481 = !DILocation(line: 311, column: 2, scope: !1962)
!12482 = !DILocation(line: 293, column: 26, scope: !12476)
!12483 = !DILocation(line: 294, column: 9, scope: !12484)
!12484 = distinct !DILexicalBlock(scope: !12476, file: !1963, line: 293, column: 54)
!12485 = !DILocation(line: 295, column: 21, scope: !12486)
!12486 = distinct !DILexicalBlock(scope: !12484, file: !1963, line: 295, column: 7)
!12487 = !DILocation(line: 295, column: 28, scope: !12486)
!12488 = !DILocation(line: 295, column: 7, scope: !12484)
!12489 = !DILocation(line: 299, column: 25, scope: !12484)
!12490 = !DILocation(line: 299, column: 41, scope: !12484)
!12491 = !DILocation(line: 300, column: 7, scope: !12484)
!12492 = !DILocation(line: 300, column: 26, scope: !12484)
!12493 = !DILocation(line: 299, column: 10, scope: !12484)
!12494 = !DILocation(line: 299, column: 7, scope: !12484)
!12495 = !DILocation(line: 302, column: 16, scope: !12484)
!12496 = !DILocation(line: 304, column: 20, scope: !12497)
!12497 = distinct !DILexicalBlock(scope: !12484, file: !1963, line: 304, column: 7)
!12498 = !DILocation(line: 304, column: 7, scope: !12484)
!12499 = !DILocation(line: 305, column: 26, scope: !12500)
!12500 = distinct !DILexicalBlock(scope: !12497, file: !1963, line: 304, column: 26)
!12501 = !DILocation(line: 305, column: 42, scope: !12500)
!12502 = !DILocation(line: 305, column: 11, scope: !12500)
!12503 = !DILocation(line: 305, column: 8, scope: !12500)
!12504 = !DILocation(line: 306, column: 3, scope: !12500)
!12505 = !DILocation(line: 293, column: 50, scope: !12476)
!12506 = !DILocation(line: 312, column: 1, scope: !1962)
!12507 = distinct !DISubprogram(name: "copy_bytes", scope: !1963, file: !1963, line: 261, type: !12508, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2067, retainedNodes: !12510)
!12508 = !DISubroutineType(types: !12509)
!12509 = !{!120, !1005, !120, !199, !120}
!12510 = !{!12511, !12512, !12513, !12514, !12515}
!12511 = !DILocalVariable(name: "dest", arg: 1, scope: !12507, file: !1963, line: 261, type: !1005)
!12512 = !DILocalVariable(name: "dest_size", arg: 2, scope: !12507, file: !1963, line: 261, type: !120)
!12513 = !DILocalVariable(name: "src", arg: 3, scope: !12507, file: !1963, line: 261, type: !199)
!12514 = !DILocalVariable(name: "src_size", arg: 4, scope: !12507, file: !1963, line: 261, type: !120)
!12515 = !DILocalVariable(name: "bytes_to_copy", scope: !12507, file: !1963, line: 263, type: !120)
!12516 = !DILocation(line: 0, scope: !12507)
!12517 = !DILocation(line: 265, column: 18, scope: !12507)
!12518 = !DILocation(line: 266, column: 2, scope: !12507)
!12519 = !DILocation(line: 268, column: 2, scope: !12507)
!12520 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !1963, file: !1963, line: 383, type: !12521, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2067, retainedNodes: !12523)
!12521 = !DISubroutineType(types: !12522)
!12522 = !{null, !1967}
!12523 = !{!12524}
!12524 = !DILocalVariable(name: "thread", arg: 1, scope: !12520, file: !1963, line: 383, type: !1967)
!12525 = !DILocation(line: 0, scope: !12520)
!12526 = !DILocation(line: 387, column: 2, scope: !12520)
!12527 = !DILocation(line: 388, column: 1, scope: !12520)
!12528 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !1963, file: !1963, line: 528, type: !12529, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2067, retainedNodes: !12536)
!12529 = !DISubroutineType(types: !12530)
!12530 = !{!1005, !1967, !12531, !120, !3176, !102, !102, !102, !103, !137, !199}
!12531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12532, size: 32)
!12532 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3177, line: 44, baseType: !12533)
!12533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !1917, line: 47, size: 8, elements: !12534)
!12534 = !{!12535}
!12535 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12533, file: !1917, line: 48, baseType: !109, size: 8)
!12536 = !{!12537, !12538, !12539, !12540, !12541, !12542, !12543, !12544, !12545, !12546, !12547}
!12537 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12528, file: !1963, line: 528, type: !1967)
!12538 = !DILocalVariable(name: "stack", arg: 2, scope: !12528, file: !1963, line: 529, type: !12531)
!12539 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12528, file: !1963, line: 529, type: !120)
!12540 = !DILocalVariable(name: "entry", arg: 4, scope: !12528, file: !1963, line: 530, type: !3176)
!12541 = !DILocalVariable(name: "p1", arg: 5, scope: !12528, file: !1963, line: 531, type: !102)
!12542 = !DILocalVariable(name: "p2", arg: 6, scope: !12528, file: !1963, line: 531, type: !102)
!12543 = !DILocalVariable(name: "p3", arg: 7, scope: !12528, file: !1963, line: 531, type: !102)
!12544 = !DILocalVariable(name: "prio", arg: 8, scope: !12528, file: !1963, line: 532, type: !103)
!12545 = !DILocalVariable(name: "options", arg: 9, scope: !12528, file: !1963, line: 532, type: !137)
!12546 = !DILocalVariable(name: "name", arg: 10, scope: !12528, file: !1963, line: 532, type: !199)
!12547 = !DILocalVariable(name: "stack_ptr", scope: !12528, file: !1963, line: 534, type: !1005)
!12548 = !DILocation(line: 0, scope: !12528)
!12549 = !DILocation(line: 550, column: 28, scope: !12528)
!12550 = !DILocation(line: 550, column: 2, scope: !12528)
!12551 = !DILocation(line: 553, column: 34, scope: !12528)
!12552 = !DILocation(line: 553, column: 2, scope: !12528)
!12553 = !DILocation(line: 554, column: 14, scope: !12528)
!12554 = !DILocation(line: 564, column: 2, scope: !12528)
!12555 = !DILocation(line: 567, column: 14, scope: !12528)
!12556 = !DILocation(line: 567, column: 24, scope: !12528)
!12557 = !DILocation(line: 612, column: 7, scope: !12558)
!12558 = distinct !DILexicalBlock(scope: !12528, file: !1963, line: 612, column: 6)
!12559 = !DILocation(line: 612, column: 6, scope: !12528)
!12560 = !DILocation(line: 627, column: 40, scope: !12528)
!12561 = !DILocation(line: 637, column: 2, scope: !12528)
!12562 = !DILocation(line: 613, column: 15, scope: !12563)
!12563 = distinct !DILexicalBlock(scope: !12558, file: !1963, line: 612, column: 17)
!12564 = !DILocation(line: 613, column: 29, scope: !12563)
!12565 = !DILocation(line: 638, column: 1, scope: !12528)
!12566 = distinct !DISubprogram(name: "z_waitq_init", scope: !12567, file: !12567, line: 47, type: !12568, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2067, retainedNodes: !12570)
!12567 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12568 = !DISubroutineType(types: !12569)
!12569 = !{null, !1998}
!12570 = !{!12571}
!12571 = !DILocalVariable(name: "w", arg: 1, scope: !12566, file: !12567, line: 47, type: !1998)
!12572 = !DILocation(line: 0, scope: !12566)
!12573 = !DILocation(line: 49, column: 21, scope: !12566)
!12574 = !DILocation(line: 49, column: 2, scope: !12566)
!12575 = !DILocation(line: 50, column: 1, scope: !12566)
!12576 = distinct !DISubprogram(name: "z_init_thread_base", scope: !1963, file: !1963, line: 791, type: !12577, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2067, retainedNodes: !12580)
!12577 = !DISubroutineType(types: !12578)
!12578 = !{null, !12579, !103, !137, !32}
!12579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1971, size: 32)
!12580 = !{!12581, !12582, !12583, !12584}
!12581 = !DILocalVariable(name: "thread_base", arg: 1, scope: !12576, file: !1963, line: 791, type: !12579)
!12582 = !DILocalVariable(name: "priority", arg: 2, scope: !12576, file: !1963, line: 791, type: !103)
!12583 = !DILocalVariable(name: "initial_state", arg: 3, scope: !12576, file: !1963, line: 792, type: !137)
!12584 = !DILocalVariable(name: "options", arg: 4, scope: !12576, file: !1963, line: 792, type: !32)
!12585 = !DILocation(line: 0, scope: !12576)
!12586 = !DILocation(line: 795, column: 15, scope: !12576)
!12587 = !DILocation(line: 795, column: 25, scope: !12576)
!12588 = !DILocation(line: 796, column: 30, scope: !12576)
!12589 = !DILocation(line: 796, column: 15, scope: !12576)
!12590 = !DILocation(line: 796, column: 28, scope: !12576)
!12591 = !DILocation(line: 797, column: 30, scope: !12576)
!12592 = !DILocation(line: 797, column: 15, scope: !12576)
!12593 = !DILocation(line: 797, column: 28, scope: !12576)
!12594 = !DILocation(line: 799, column: 22, scope: !12576)
!12595 = !DILocation(line: 799, column: 15, scope: !12576)
!12596 = !DILocation(line: 799, column: 20, scope: !12576)
!12597 = !DILocation(line: 801, column: 15, scope: !12576)
!12598 = !DILocation(line: 801, column: 28, scope: !12576)
!12599 = !DILocation(line: 814, column: 2, scope: !12576)
!12600 = !DILocation(line: 815, column: 1, scope: !12576)
!12601 = distinct !DISubprogram(name: "setup_thread_stack", scope: !1963, file: !1963, line: 449, type: !12602, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2067, retainedNodes: !12604)
!12602 = !DISubroutineType(types: !12603)
!12603 = !{!1005, !1967, !12531, !120}
!12604 = !{!12605, !12606, !12607, !12608, !12609, !12610, !12611, !12612}
!12605 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12601, file: !1963, line: 449, type: !1967)
!12606 = !DILocalVariable(name: "stack", arg: 2, scope: !12601, file: !1963, line: 450, type: !12531)
!12607 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12601, file: !1963, line: 450, type: !120)
!12608 = !DILocalVariable(name: "stack_obj_size", scope: !12601, file: !1963, line: 452, type: !120)
!12609 = !DILocalVariable(name: "stack_buf_size", scope: !12601, file: !1963, line: 452, type: !120)
!12610 = !DILocalVariable(name: "stack_ptr", scope: !12601, file: !1963, line: 453, type: !1005)
!12611 = !DILocalVariable(name: "stack_buf_start", scope: !12601, file: !1963, line: 453, type: !1005)
!12612 = !DILocalVariable(name: "delta", scope: !12601, file: !1963, line: 454, type: !120)
!12613 = !DILocation(line: 0, scope: !12601)
!12614 = !DILocation(line: 465, column: 20, scope: !12615)
!12615 = distinct !DILexicalBlock(scope: !12601, file: !1963, line: 463, column: 2)
!12616 = !DILocation(line: 466, column: 21, scope: !12615)
!12617 = !DILocation(line: 473, column: 28, scope: !12601)
!12618 = !DILocation(line: 514, column: 33, scope: !12601)
!12619 = !DILocation(line: 514, column: 25, scope: !12601)
!12620 = !DILocation(line: 514, column: 31, scope: !12601)
!12621 = !DILocation(line: 515, column: 25, scope: !12601)
!12622 = !DILocation(line: 515, column: 30, scope: !12601)
!12623 = !DILocation(line: 516, column: 25, scope: !12601)
!12624 = !DILocation(line: 516, column: 31, scope: !12601)
!12625 = !DILocation(line: 520, column: 2, scope: !12601)
!12626 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !1917, file: !1917, line: 331, type: !12627, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2067, retainedNodes: !12629)
!12627 = !DISubroutineType(types: !12628)
!12628 = !{!1005, !12531}
!12629 = !{!12630}
!12630 = !DILocalVariable(name: "sym", arg: 1, scope: !12626, file: !1917, line: 331, type: !12531)
!12631 = !DILocation(line: 0, scope: !12626)
!12632 = !DILocation(line: 333, column: 21, scope: !12626)
!12633 = !DILocation(line: 333, column: 2, scope: !12626)
!12634 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !12635, file: !12635, line: 40, type: !12636, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2067, retainedNodes: !12638)
!12635 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12636 = !DISubroutineType(types: !12637)
!12637 = !{null, !12579}
!12638 = !{!12639}
!12639 = !DILocalVariable(name: "thread_base", arg: 1, scope: !12634, file: !12635, line: 40, type: !12579)
!12640 = !DILocation(line: 0, scope: !12634)
!12641 = !DILocation(line: 42, column: 31, scope: !12634)
!12642 = !DILocation(line: 42, column: 2, scope: !12634)
!12643 = !DILocation(line: 43, column: 1, scope: !12634)
!12644 = distinct !DISubprogram(name: "z_init_timeout", scope: !12635, file: !12635, line: 25, type: !2024, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2067, retainedNodes: !12645)
!12645 = !{!12646}
!12646 = !DILocalVariable(name: "to", arg: 1, scope: !12644, file: !12635, line: 25, type: !2026)
!12647 = !DILocation(line: 0, scope: !12644)
!12648 = !DILocation(line: 27, column: 22, scope: !12644)
!12649 = !DILocation(line: 27, column: 2, scope: !12644)
!12650 = !DILocation(line: 28, column: 1, scope: !12644)
!12651 = distinct !DISubprogram(name: "sys_dnode_init", scope: !273, file: !273, line: 211, type: !12652, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2067, retainedNodes: !12654)
!12652 = !DISubroutineType(types: !12653)
!12653 = !{null, !2070}
!12654 = !{!12655}
!12655 = !DILocalVariable(name: "node", arg: 1, scope: !12651, file: !273, line: 211, type: !2070)
!12656 = !DILocation(line: 0, scope: !12651)
!12657 = !DILocation(line: 213, column: 8, scope: !12651)
!12658 = !DILocation(line: 213, column: 13, scope: !12651)
!12659 = !DILocation(line: 214, column: 8, scope: !12651)
!12660 = !DILocation(line: 214, column: 13, scope: !12651)
!12661 = !DILocation(line: 215, column: 1, scope: !12651)
!12662 = distinct !DISubprogram(name: "sys_dlist_init", scope: !273, file: !273, line: 197, type: !12663, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2067, retainedNodes: !12666)
!12663 = !DISubroutineType(types: !12664)
!12664 = !{null, !12665}
!12665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2003, size: 32)
!12666 = !{!12667}
!12667 = !DILocalVariable(name: "list", arg: 1, scope: !12662, file: !273, line: 197, type: !12665)
!12668 = !DILocation(line: 0, scope: !12662)
!12669 = !DILocation(line: 199, column: 8, scope: !12662)
!12670 = !DILocation(line: 199, column: 13, scope: !12662)
!12671 = !DILocation(line: 200, column: 8, scope: !12662)
!12672 = !DILocation(line: 200, column: 13, scope: !12662)
!12673 = !DILocation(line: 201, column: 1, scope: !12662)
!12674 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !1963, file: !1963, line: 641, type: !12675, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2067, retainedNodes: !12681)
!12675 = !DISubroutineType(types: !12676)
!12676 = !{!1966, !1967, !12531, !120, !3176, !102, !102, !102, !103, !137, !12677}
!12677 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1446, line: 67, baseType: !12678)
!12678 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1446, line: 65, size: 64, elements: !12679)
!12679 = !{!12680}
!12680 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !12678, file: !1446, line: 66, baseType: !1445, size: 64)
!12681 = !{!12682, !12683, !12684, !12685, !12686, !12687, !12688, !12689, !12690, !12691}
!12682 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12674, file: !1963, line: 641, type: !1967)
!12683 = !DILocalVariable(name: "stack", arg: 2, scope: !12674, file: !1963, line: 642, type: !12531)
!12684 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12674, file: !1963, line: 643, type: !120)
!12685 = !DILocalVariable(name: "entry", arg: 4, scope: !12674, file: !1963, line: 643, type: !3176)
!12686 = !DILocalVariable(name: "p1", arg: 5, scope: !12674, file: !1963, line: 644, type: !102)
!12687 = !DILocalVariable(name: "p2", arg: 6, scope: !12674, file: !1963, line: 644, type: !102)
!12688 = !DILocalVariable(name: "p3", arg: 7, scope: !12674, file: !1963, line: 644, type: !102)
!12689 = !DILocalVariable(name: "prio", arg: 8, scope: !12674, file: !1963, line: 645, type: !103)
!12690 = !DILocalVariable(name: "options", arg: 9, scope: !12674, file: !1963, line: 645, type: !137)
!12691 = !DILocalVariable(name: "delay", arg: 10, scope: !12674, file: !1963, line: 645, type: !12677)
!12692 = !DILocation(line: 0, scope: !12674)
!12693 = !DILocation(line: 649, column: 2, scope: !12674)
!12694 = !DILocation(line: 652, column: 7, scope: !12695)
!12695 = distinct !DILexicalBlock(scope: !12674, file: !1963, line: 652, column: 6)
!12696 = !DILocation(line: 652, column: 6, scope: !12674)
!12697 = !DILocation(line: 653, column: 3, scope: !12698)
!12698 = distinct !DILexicalBlock(scope: !12695, file: !1963, line: 652, column: 39)
!12699 = !DILocation(line: 654, column: 2, scope: !12698)
!12700 = !DILocation(line: 656, column: 2, scope: !12674)
!12701 = distinct !DISubprogram(name: "schedule_new_thread", scope: !1963, file: !1963, line: 401, type: !12702, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2067, retainedNodes: !12704)
!12702 = !DISubroutineType(types: !12703)
!12703 = !{null, !1967, !12677}
!12704 = !{!12705, !12706}
!12705 = !DILocalVariable(name: "thread", arg: 1, scope: !12701, file: !1963, line: 401, type: !1967)
!12706 = !DILocalVariable(name: "delay", arg: 2, scope: !12701, file: !1963, line: 401, type: !12677)
!12707 = !DILocation(line: 0, scope: !12701)
!12708 = !DILocation(line: 404, column: 6, scope: !12709)
!12709 = distinct !DILexicalBlock(scope: !12701, file: !1963, line: 404, column: 6)
!12710 = !DILocation(line: 404, column: 6, scope: !12701)
!12711 = !DILocation(line: 405, column: 3, scope: !12712)
!12712 = distinct !DILexicalBlock(scope: !12709, file: !1963, line: 404, column: 38)
!12713 = !DILocation(line: 406, column: 2, scope: !12712)
!12714 = !DILocation(line: 407, column: 3, scope: !12715)
!12715 = distinct !DILexicalBlock(scope: !12709, file: !1963, line: 406, column: 9)
!12716 = !DILocation(line: 413, column: 1, scope: !12701)
!12717 = distinct !DISubprogram(name: "k_thread_start", scope: !3298, file: !3298, line: 205, type: !12718, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2067, retainedNodes: !12720)
!12718 = !DISubroutineType(types: !12719)
!12719 = !{null, !1966}
!12720 = !{!12721}
!12721 = !DILocalVariable(name: "thread", arg: 1, scope: !12717, file: !3298, line: 205, type: !1966)
!12722 = !DILocation(line: 0, scope: !12717)
!12723 = !DILocation(line: 214, column: 2, scope: !12724)
!12724 = distinct !DILexicalBlock(scope: !12717, file: !3298, line: 214, column: 2)
!12725 = !{i64 2154175691}
!12726 = !DILocation(line: 215, column: 2, scope: !12717)
!12727 = !DILocation(line: 216, column: 1, scope: !12717)
!12728 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !12635, file: !12635, line: 47, type: !12702, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2067, retainedNodes: !12729)
!12729 = !{!12730, !12731}
!12730 = !DILocalVariable(name: "thread", arg: 1, scope: !12728, file: !12635, line: 47, type: !1967)
!12731 = !DILocalVariable(name: "ticks", arg: 2, scope: !12728, file: !12635, line: 47, type: !12677)
!12732 = !DILocation(line: 0, scope: !12728)
!12733 = !DILocation(line: 49, column: 30, scope: !12728)
!12734 = !DILocation(line: 49, column: 2, scope: !12728)
!12735 = !DILocation(line: 50, column: 1, scope: !12728)
!12736 = distinct !DISubprogram(name: "z_init_static_threads", scope: !1963, file: !1963, line: 748, type: !2848, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2067, retainedNodes: !12737)
!12737 = !{!12738, !12756}
!12738 = !DILocalVariable(name: "thread_data", scope: !12739, file: !1963, line: 750, type: !12740)
!12739 = distinct !DILexicalBlock(scope: !12736, file: !1963, line: 750, column: 2)
!12740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12741, size: 32)
!12741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !357, line: 620, size: 384, elements: !12742)
!12742 = !{!12743, !12744, !12745, !12746, !12747, !12748, !12749, !12750, !12751, !12752, !12753, !12755}
!12743 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !12741, file: !357, line: 621, baseType: !1967, size: 32)
!12744 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !12741, file: !357, line: 622, baseType: !12531, size: 32, offset: 32)
!12745 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !12741, file: !357, line: 623, baseType: !32, size: 32, offset: 64)
!12746 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !12741, file: !357, line: 624, baseType: !3176, size: 32, offset: 96)
!12747 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !12741, file: !357, line: 625, baseType: !102, size: 32, offset: 128)
!12748 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !12741, file: !357, line: 626, baseType: !102, size: 32, offset: 160)
!12749 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !12741, file: !357, line: 627, baseType: !102, size: 32, offset: 192)
!12750 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !12741, file: !357, line: 628, baseType: !103, size: 32, offset: 224)
!12751 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !12741, file: !357, line: 629, baseType: !137, size: 32, offset: 256)
!12752 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !12741, file: !357, line: 630, baseType: !611, size: 32, offset: 288)
!12753 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !12741, file: !357, line: 631, baseType: !12754, size: 32, offset: 320)
!12754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2848, size: 32)
!12755 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !12741, file: !357, line: 632, baseType: !199, size: 32, offset: 352)
!12756 = !DILocalVariable(name: "thread_data", scope: !12757, file: !1963, line: 781, type: !12740)
!12757 = distinct !DILexicalBlock(scope: !12736, file: !1963, line: 781, column: 2)
!12758 = !DILocation(line: 0, scope: !12739)
!12759 = !DILocation(line: 750, column: 2, scope: !12739)
!12760 = !DILocation(line: 780, column: 2, scope: !12736)
!12761 = !DILocation(line: 0, scope: !12757)
!12762 = !DILocation(line: 781, column: 2, scope: !12757)
!12763 = !DILocation(line: 752, column: 17, scope: !12764)
!12764 = distinct !DILexicalBlock(scope: !12765, file: !1963, line: 750, column: 38)
!12765 = distinct !DILexicalBlock(scope: !12739, file: !1963, line: 750, column: 2)
!12766 = !DILocation(line: 753, column: 17, scope: !12764)
!12767 = !DILocation(line: 754, column: 17, scope: !12764)
!12768 = !DILocation(line: 755, column: 17, scope: !12764)
!12769 = !DILocation(line: 756, column: 17, scope: !12764)
!12770 = !DILocation(line: 757, column: 17, scope: !12764)
!12771 = !DILocation(line: 758, column: 17, scope: !12764)
!12772 = !DILocation(line: 759, column: 17, scope: !12764)
!12773 = !DILocation(line: 760, column: 17, scope: !12764)
!12774 = !DILocation(line: 751, column: 3, scope: !12764)
!12775 = !DILocation(line: 763, column: 16, scope: !12764)
!12776 = !DILocation(line: 763, column: 29, scope: !12764)
!12777 = !DILocation(line: 763, column: 39, scope: !12764)
!12778 = !DILocation(line: 750, column: 2, scope: !12765)
!12779 = !DILocation(line: 750, column: 2, scope: !12780)
!12780 = distinct !DILexicalBlock(scope: !12765, file: !1963, line: 750, column: 2)
!12781 = distinct !{!12781, !12759, !12782}
!12782 = !DILocation(line: 764, column: 2, scope: !12739)
!12783 = !DILocation(line: 787, column: 2, scope: !12736)
!12784 = !DILocation(line: 788, column: 1, scope: !12736)
!12785 = !DILocation(line: 782, column: 20, scope: !12786)
!12786 = distinct !DILexicalBlock(scope: !12787, file: !1963, line: 782, column: 7)
!12787 = distinct !DILexicalBlock(scope: !12788, file: !1963, line: 781, column: 38)
!12788 = distinct !DILexicalBlock(scope: !12757, file: !1963, line: 781, column: 2)
!12789 = !DILocation(line: 782, column: 31, scope: !12786)
!12790 = !DILocation(line: 782, column: 7, scope: !12787)
!12791 = !DILocation(line: 783, column: 37, scope: !12792)
!12792 = distinct !DILexicalBlock(scope: !12786, file: !1963, line: 782, column: 51)
!12793 = !DILocation(line: 784, column: 10, scope: !12792)
!12794 = !DILocation(line: 783, column: 4, scope: !12792)
!12795 = !DILocation(line: 785, column: 3, scope: !12792)
!12796 = !DILocation(line: 781, column: 2, scope: !12788)
!12797 = !DILocation(line: 781, column: 2, scope: !12798)
!12798 = distinct !DILexicalBlock(scope: !12788, file: !1963, line: 781, column: 2)
!12799 = distinct !{!12799, !12762, !12800}
!12800 = !DILocation(line: 786, column: 2, scope: !12757)
!12801 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !12802, file: !12802, line: 403, type: !12803, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2067, retainedNodes: !12805)
!12802 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12803 = !DISubroutineType(types: !12804)
!12804 = !{!163, !163}
!12805 = !{!12806}
!12806 = !DILocalVariable(name: "t", arg: 1, scope: !12801, file: !12802, line: 403, type: !163)
!12807 = !DILocation(line: 0, scope: !12801)
!12808 = !DILocalVariable(name: "t", arg: 1, scope: !12809, file: !12802, line: 102, type: !163)
!12809 = distinct !DISubprogram(name: "z_tmcvt", scope: !12802, file: !12802, line: 102, type: !12810, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2067, retainedNodes: !12812)
!12810 = !DISubroutineType(types: !12811)
!12811 = !{!163, !163, !137, !137, !211, !211, !211, !211}
!12812 = !{!12808, !12813, !12814, !12815, !12816, !12817, !12818, !12819, !12820, !12821, !12822}
!12813 = !DILocalVariable(name: "from_hz", arg: 2, scope: !12809, file: !12802, line: 102, type: !137)
!12814 = !DILocalVariable(name: "to_hz", arg: 3, scope: !12809, file: !12802, line: 103, type: !137)
!12815 = !DILocalVariable(name: "const_hz", arg: 4, scope: !12809, file: !12802, line: 103, type: !211)
!12816 = !DILocalVariable(name: "result32", arg: 5, scope: !12809, file: !12802, line: 104, type: !211)
!12817 = !DILocalVariable(name: "round_up", arg: 6, scope: !12809, file: !12802, line: 104, type: !211)
!12818 = !DILocalVariable(name: "round_off", arg: 7, scope: !12809, file: !12802, line: 105, type: !211)
!12819 = !DILocalVariable(name: "mul_ratio", scope: !12809, file: !12802, line: 107, type: !211)
!12820 = !DILocalVariable(name: "div_ratio", scope: !12809, file: !12802, line: 109, type: !211)
!12821 = !DILocalVariable(name: "off", scope: !12809, file: !12802, line: 116, type: !163)
!12822 = !DILocalVariable(name: "rdivisor", scope: !12823, file: !12802, line: 119, type: !137)
!12823 = distinct !DILexicalBlock(scope: !12824, file: !12802, line: 118, column: 18)
!12824 = distinct !DILexicalBlock(scope: !12809, file: !12802, line: 118, column: 6)
!12825 = !DILocation(line: 0, scope: !12809, inlinedAt: !12826)
!12826 = distinct !DILocation(line: 406, column: 9, scope: !12801)
!12827 = !DILocation(line: 145, column: 13, scope: !12828, inlinedAt: !12826)
!12828 = distinct !DILexicalBlock(scope: !12829, file: !12802, line: 144, column: 10)
!12829 = distinct !DILexicalBlock(scope: !12830, file: !12802, line: 142, column: 7)
!12830 = distinct !DILexicalBlock(scope: !12831, file: !12802, line: 141, column: 24)
!12831 = distinct !DILexicalBlock(scope: !12832, file: !12802, line: 141, column: 13)
!12832 = distinct !DILexicalBlock(scope: !12809, file: !12802, line: 134, column: 6)
!12833 = !DILocation(line: 406, column: 2, scope: !12801)
!12834 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !1963, file: !1963, line: 817, type: !3174, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2067, retainedNodes: !12835)
!12835 = !{!12836, !12837, !12838, !12839}
!12836 = !DILocalVariable(name: "entry", arg: 1, scope: !12834, file: !1963, line: 817, type: !3176)
!12837 = !DILocalVariable(name: "p1", arg: 2, scope: !12834, file: !1963, line: 818, type: !102)
!12838 = !DILocalVariable(name: "p2", arg: 3, scope: !12834, file: !1963, line: 818, type: !102)
!12839 = !DILocalVariable(name: "p3", arg: 4, scope: !12834, file: !1963, line: 818, type: !102)
!12840 = !DILocation(line: 0, scope: !12834)
!12841 = !DILocation(line: 822, column: 2, scope: !12834)
!12842 = !DILocation(line: 822, column: 17, scope: !12834)
!12843 = !DILocation(line: 822, column: 30, scope: !12834)
!12844 = !DILocation(line: 823, column: 2, scope: !12834)
!12845 = !DILocation(line: 845, column: 2, scope: !12834)
!12846 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !1963, file: !1963, line: 888, type: !12847, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2067, retainedNodes: !12849)
!12847 = !DISubroutineType(types: !12848)
!12848 = !{!103, !1967}
!12849 = !{!12850}
!12850 = !DILocalVariable(name: "thread", arg: 1, scope: !12846, file: !1963, line: 888, type: !1967)
!12851 = !DILocation(line: 0, scope: !12846)
!12852 = !DILocation(line: 893, column: 2, scope: !12846)
!12853 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !1963, file: !1963, line: 897, type: !12854, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2067, retainedNodes: !12856)
!12854 = !DISubroutineType(types: !12855)
!12855 = !{!103, !1967, !32}
!12856 = !{!12857, !12858}
!12857 = !DILocalVariable(name: "thread", arg: 1, scope: !12853, file: !1963, line: 897, type: !1967)
!12858 = !DILocalVariable(name: "options", arg: 2, scope: !12853, file: !1963, line: 897, type: !32)
!12859 = !DILocation(line: 0, scope: !12853)
!12860 = !DILocation(line: 902, column: 2, scope: !12853)
!12861 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !1963, file: !1963, line: 1072, type: !12862, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2067, retainedNodes: !12867)
!12862 = !DISubroutineType(types: !12863)
!12863 = !{!103, !1966, !12864}
!12864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12865, size: 32)
!12865 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !263, line: 234, baseType: !12866)
!12866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !263, line: 192, elements: !162)
!12867 = !{!12868, !12869}
!12868 = !DILocalVariable(name: "thread", arg: 1, scope: !12861, file: !1963, line: 1072, type: !1966)
!12869 = !DILocalVariable(name: "stats", arg: 2, scope: !12861, file: !1963, line: 1073, type: !12864)
!12870 = !DILocation(line: 0, scope: !12861)
!12871 = !DILocation(line: 1075, column: 14, scope: !12872)
!12872 = distinct !DILexicalBlock(scope: !12861, file: !1963, line: 1075, column: 6)
!12873 = !DILocation(line: 1075, column: 23, scope: !12872)
!12874 = !DILocation(line: 1086, column: 1, scope: !12861)
!12875 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !1963, file: !1963, line: 1088, type: !12876, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2067, retainedNodes: !12878)
!12876 = !DISubroutineType(types: !12877)
!12877 = !{!103, !12864}
!12878 = !{!12879}
!12879 = !DILocalVariable(name: "stats", arg: 1, scope: !12875, file: !1963, line: 1088, type: !12864)
!12880 = !DILocation(line: 0, scope: !12875)
!12881 = !DILocation(line: 1094, column: 12, scope: !12882)
!12882 = distinct !DILexicalBlock(scope: !12875, file: !1963, line: 1094, column: 6)
!12883 = !DILocation(line: 1120, column: 1, scope: !12875)
!12884 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !12885, file: !12885, line: 20, type: !2848, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2829, retainedNodes: !162)
!12885 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12886 = !DILocation(line: 30, column: 2, scope: !12884)
!12887 = !DILocation(line: 31, column: 1, scope: !12884)
!12888 = distinct !DISubprogram(name: "idle", scope: !12885, file: !12885, line: 33, type: !3179, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2829, retainedNodes: !12889)
!12889 = !{!12890, !12891, !12892}
!12890 = !DILocalVariable(name: "unused1", arg: 1, scope: !12888, file: !12885, line: 33, type: !102)
!12891 = !DILocalVariable(name: "unused2", arg: 2, scope: !12888, file: !12885, line: 33, type: !102)
!12892 = !DILocalVariable(name: "unused3", arg: 3, scope: !12888, file: !12885, line: 33, type: !102)
!12893 = !DILocation(line: 0, scope: !12888)
!12894 = !DILocation(line: 41, column: 2, scope: !12888)
!12895 = !DILocation(line: 55, column: 2, scope: !12896, inlinedAt: !12900)
!12896 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6148, file: !6148, line: 42, type: !6149, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2829, retainedNodes: !12897)
!12897 = !{!12898, !12899}
!12898 = !DILocalVariable(name: "key", scope: !12896, file: !6148, line: 44, type: !32)
!12899 = !DILocalVariable(name: "tmp", scope: !12896, file: !6148, line: 53, type: !32)
!12900 = distinct !DILocation(line: 62, column: 10, scope: !12901)
!12901 = distinct !DILexicalBlock(scope: !12888, file: !12885, line: 41, column: 15)
!12902 = !{i64 2037081}
!12903 = !DILocation(line: 0, scope: !12896, inlinedAt: !12900)
!12904 = !DILocation(line: 86, column: 3, scope: !12901)
!12905 = distinct !{!12905, !12894, !12906}
!12906 = !DILocation(line: 105, column: 2, scope: !12888)
!12907 = distinct !DISubprogram(name: "k_cpu_idle", scope: !357, file: !357, line: 5627, type: !2848, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2829, retainedNodes: !162)
!12908 = !DILocation(line: 5629, column: 2, scope: !12907)
!12909 = !DILocation(line: 5630, column: 1, scope: !12907)
!12910 = !DISubprogram(name: "arch_cpu_idle", scope: !3177, file: !3177, line: 167, type: !2848, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!12911 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2195, file: !2195, line: 93, type: !12912, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !12914)
!12912 = !DISubroutineType(types: !12913)
!12913 = !{!611, !2090, !2090}
!12914 = !{!12915, !12916, !12917, !12918}
!12915 = !DILocalVariable(name: "thread_1", arg: 1, scope: !12911, file: !2195, line: 93, type: !2090)
!12916 = !DILocalVariable(name: "thread_2", arg: 2, scope: !12911, file: !2195, line: 94, type: !2090)
!12917 = !DILocalVariable(name: "b1", scope: !12911, file: !2195, line: 97, type: !611)
!12918 = !DILocalVariable(name: "b2", scope: !12911, file: !2195, line: 98, type: !611)
!12919 = !DILocation(line: 0, scope: !12911)
!12920 = !DILocation(line: 97, column: 30, scope: !12911)
!12921 = !DILocation(line: 98, column: 30, scope: !12911)
!12922 = !DILocation(line: 100, column: 9, scope: !12923)
!12923 = distinct !DILexicalBlock(scope: !12911, file: !2195, line: 100, column: 6)
!12924 = !DILocation(line: 100, column: 6, scope: !12911)
!12925 = !DILocation(line: 125, column: 1, scope: !12911)
!12926 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2195, file: !2195, line: 428, type: !12927, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !12929)
!12927 = !DISubroutineType(types: !12928)
!12928 = !{null, !2090}
!12929 = !{!12930}
!12930 = !DILocalVariable(name: "curr", arg: 1, scope: !12926, file: !2195, line: 428, type: !2090)
!12931 = !DILocation(line: 0, scope: !12926)
!12932 = !DILocation(line: 434, column: 6, scope: !12933)
!12933 = distinct !DILexicalBlock(scope: !12926, file: !2195, line: 434, column: 6)
!12934 = !DILocation(line: 434, column: 23, scope: !12933)
!12935 = !DILocation(line: 434, column: 6, scope: !12926)
!12936 = !DILocation(line: 435, column: 50, scope: !12937)
!12937 = distinct !DILexicalBlock(scope: !12933, file: !2195, line: 434, column: 29)
!12938 = !DILocation(line: 435, column: 48, scope: !12937)
!12939 = !DILocation(line: 435, column: 29, scope: !12937)
!12940 = !DILocation(line: 436, column: 24, scope: !12937)
!12941 = !DILocation(line: 436, column: 3, scope: !12937)
!12942 = !DILocation(line: 437, column: 2, scope: !12937)
!12943 = !DILocation(line: 438, column: 1, scope: !12926)
!12944 = distinct !DISubprogram(name: "slice_time", scope: !2195, file: !2195, line: 407, type: !12945, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !12947)
!12945 = !DISubroutineType(types: !12946)
!12946 = !{!103, !2090}
!12947 = !{!12948, !12949}
!12948 = !DILocalVariable(name: "curr", arg: 1, scope: !12944, file: !2195, line: 407, type: !2090)
!12949 = !DILocalVariable(name: "ret", scope: !12944, file: !2195, line: 409, type: !103)
!12950 = !DILocation(line: 0, scope: !12944)
!12951 = !DILocation(line: 409, column: 12, scope: !12944)
!12952 = !DILocation(line: 416, column: 2, scope: !12944)
!12953 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2195, file: !2195, line: 440, type: !12954, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !12956)
!12954 = !DISubroutineType(types: !12955)
!12955 = !{null, !611, !103}
!12956 = !{!12957, !12958, !12959, !12965}
!12957 = !DILocalVariable(name: "slice", arg: 1, scope: !12953, file: !2195, line: 440, type: !611)
!12958 = !DILocalVariable(name: "prio", arg: 2, scope: !12953, file: !2195, line: 440, type: !103)
!12959 = !DILocalVariable(name: "__i", scope: !12960, file: !2195, line: 442, type: !12961)
!12960 = distinct !DILexicalBlock(scope: !12953, file: !2195, line: 442, column: 2)
!12961 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !368, line: 106, baseType: !12962)
!12962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !368, line: 32, size: 32, elements: !12963)
!12963 = !{!12964}
!12964 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !12962, file: !368, line: 33, baseType: !103, size: 32)
!12965 = !DILocalVariable(name: "__key", scope: !12960, file: !2195, line: 442, type: !12961)
!12966 = !DILocation(line: 0, scope: !12953)
!12967 = !DILocation(line: 0, scope: !12960)
!12968 = !DILocalVariable(name: "l", arg: 1, scope: !12969, file: !368, line: 136, type: !12972)
!12969 = distinct !DISubprogram(name: "k_spin_lock", scope: !368, file: !368, line: 136, type: !12970, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !12973)
!12970 = !DISubroutineType(types: !12971)
!12971 = !{!12961, !12972}
!12972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2184, size: 32)
!12973 = !{!12968, !12974}
!12974 = !DILocalVariable(name: "k", scope: !12969, file: !368, line: 139, type: !12961)
!12975 = !DILocation(line: 0, scope: !12969, inlinedAt: !12976)
!12976 = distinct !DILocation(line: 442, column: 2, scope: !12960)
!12977 = !DILocation(line: 55, column: 2, scope: !12978, inlinedAt: !12982)
!12978 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6148, file: !6148, line: 42, type: !6149, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !12979)
!12979 = !{!12980, !12981}
!12980 = !DILocalVariable(name: "key", scope: !12978, file: !6148, line: 44, type: !32)
!12981 = !DILocalVariable(name: "tmp", scope: !12978, file: !6148, line: 53, type: !32)
!12982 = distinct !DILocation(line: 145, column: 10, scope: !12969, inlinedAt: !12976)
!12983 = !{i64 2081052}
!12984 = !DILocation(line: 0, scope: !12978, inlinedAt: !12982)
!12985 = !DILocation(line: 443, column: 29, scope: !12986)
!12986 = distinct !DILexicalBlock(scope: !12987, file: !2195, line: 442, column: 26)
!12987 = distinct !DILexicalBlock(scope: !12960, file: !2195, line: 442, column: 2)
!12988 = !DILocation(line: 444, column: 17, scope: !12986)
!12989 = !DILocation(line: 445, column: 51, scope: !12990)
!12990 = distinct !DILexicalBlock(scope: !12986, file: !2195, line: 445, column: 7)
!12991 = !DILocation(line: 445, column: 7, scope: !12986)
!12992 = !DILocation(line: 0, scope: !12986)
!12993 = !DILocation(line: 451, column: 18, scope: !12986)
!12994 = !DILocation(line: 452, column: 3, scope: !12986)
!12995 = !DILocalVariable(name: "key", arg: 2, scope: !12996, file: !368, line: 190, type: !12961)
!12996 = distinct !DISubprogram(name: "k_spin_unlock", scope: !368, file: !368, line: 189, type: !12997, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !12999)
!12997 = !DISubroutineType(types: !12998)
!12998 = !{null, !12972, !12961}
!12999 = !{!13000, !12995}
!13000 = !DILocalVariable(name: "l", arg: 1, scope: !12996, file: !368, line: 189, type: !12972)
!13001 = !DILocation(line: 0, scope: !12996, inlinedAt: !13002)
!13002 = distinct !DILocation(line: 442, column: 2, scope: !12987)
!13003 = !DILocalVariable(name: "key", arg: 1, scope: !13004, file: !6148, line: 84, type: !32)
!13004 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6148, file: !6148, line: 84, type: !6159, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !13005)
!13005 = !{!13003}
!13006 = !DILocation(line: 0, scope: !13004, inlinedAt: !13007)
!13007 = distinct !DILocation(line: 215, column: 2, scope: !12996, inlinedAt: !13002)
!13008 = !DILocation(line: 95, column: 2, scope: !13004, inlinedAt: !13007)
!13009 = !{i64 2081869}
!13010 = !DILocation(line: 454, column: 1, scope: !12953)
!13011 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !12802, file: !12802, line: 389, type: !7327, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !13012)
!13012 = !{!13013}
!13013 = !DILocalVariable(name: "t", arg: 1, scope: !13011, file: !12802, line: 389, type: !137)
!13014 = !DILocation(line: 0, scope: !13011)
!13015 = !DILocalVariable(name: "t", arg: 1, scope: !13016, file: !12802, line: 102, type: !163)
!13016 = distinct !DISubprogram(name: "z_tmcvt", scope: !12802, file: !12802, line: 102, type: !12810, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !13017)
!13017 = !{!13015, !13018, !13019, !13020, !13021, !13022, !13023, !13024, !13025, !13026, !13027}
!13018 = !DILocalVariable(name: "from_hz", arg: 2, scope: !13016, file: !12802, line: 102, type: !137)
!13019 = !DILocalVariable(name: "to_hz", arg: 3, scope: !13016, file: !12802, line: 103, type: !137)
!13020 = !DILocalVariable(name: "const_hz", arg: 4, scope: !13016, file: !12802, line: 103, type: !211)
!13021 = !DILocalVariable(name: "result32", arg: 5, scope: !13016, file: !12802, line: 104, type: !211)
!13022 = !DILocalVariable(name: "round_up", arg: 6, scope: !13016, file: !12802, line: 104, type: !211)
!13023 = !DILocalVariable(name: "round_off", arg: 7, scope: !13016, file: !12802, line: 105, type: !211)
!13024 = !DILocalVariable(name: "mul_ratio", scope: !13016, file: !12802, line: 107, type: !211)
!13025 = !DILocalVariable(name: "div_ratio", scope: !13016, file: !12802, line: 109, type: !211)
!13026 = !DILocalVariable(name: "off", scope: !13016, file: !12802, line: 116, type: !163)
!13027 = !DILocalVariable(name: "rdivisor", scope: !13028, file: !12802, line: 119, type: !137)
!13028 = distinct !DILexicalBlock(scope: !13029, file: !12802, line: 118, column: 18)
!13029 = distinct !DILexicalBlock(scope: !13016, file: !12802, line: 118, column: 6)
!13030 = !DILocation(line: 0, scope: !13016, inlinedAt: !13031)
!13031 = distinct !DILocation(line: 392, column: 9, scope: !13011)
!13032 = !DILocation(line: 143, column: 25, scope: !13033, inlinedAt: !13031)
!13033 = distinct !DILexicalBlock(scope: !13034, file: !12802, line: 142, column: 17)
!13034 = distinct !DILexicalBlock(scope: !13035, file: !12802, line: 142, column: 7)
!13035 = distinct !DILexicalBlock(scope: !13036, file: !12802, line: 141, column: 24)
!13036 = distinct !DILexicalBlock(scope: !13037, file: !12802, line: 141, column: 13)
!13037 = distinct !DILexicalBlock(scope: !13016, file: !12802, line: 134, column: 6)
!13038 = !DILocation(line: 392, column: 2, scope: !13011)
!13039 = distinct !DISubprogram(name: "z_time_slice", scope: !2195, file: !2195, line: 502, type: !7964, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !13040)
!13040 = !{!13041, !13042}
!13041 = !DILocalVariable(name: "ticks", arg: 1, scope: !13039, file: !2195, line: 502, type: !103)
!13042 = !DILocalVariable(name: "key", scope: !13039, file: !2195, line: 511, type: !12961)
!13043 = !DILocation(line: 0, scope: !13039)
!13044 = !DILocation(line: 0, scope: !12969, inlinedAt: !13045)
!13045 = distinct !DILocation(line: 511, column: 25, scope: !13039)
!13046 = !DILocation(line: 55, column: 2, scope: !12978, inlinedAt: !13047)
!13047 = distinct !DILocation(line: 145, column: 10, scope: !12969, inlinedAt: !13045)
!13048 = !DILocation(line: 0, scope: !12978, inlinedAt: !13047)
!13049 = !DILocation(line: 514, column: 6, scope: !13050)
!13050 = distinct !DILexicalBlock(scope: !13039, file: !2195, line: 514, column: 6)
!13051 = !DILocation(line: 514, column: 25, scope: !13050)
!13052 = !DILocation(line: 514, column: 22, scope: !13050)
!13053 = !DILocation(line: 514, column: 6, scope: !13039)
!13054 = !DILocation(line: 515, column: 3, scope: !13055)
!13055 = distinct !DILexicalBlock(scope: !13050, file: !2195, line: 514, column: 35)
!13056 = !DILocation(line: 0, scope: !12996, inlinedAt: !13057)
!13057 = distinct !DILocation(line: 516, column: 3, scope: !13055)
!13058 = !DILocation(line: 0, scope: !13004, inlinedAt: !13059)
!13059 = distinct !DILocation(line: 215, column: 2, scope: !12996, inlinedAt: !13057)
!13060 = !DILocation(line: 95, column: 2, scope: !13004, inlinedAt: !13059)
!13061 = !DILocation(line: 517, column: 3, scope: !13055)
!13062 = !DILocation(line: 519, column: 18, scope: !13039)
!13063 = !DILocation(line: 522, column: 6, scope: !13064)
!13064 = distinct !DILexicalBlock(scope: !13039, file: !2195, line: 522, column: 6)
!13065 = !DILocation(line: 522, column: 27, scope: !13064)
!13066 = !DILocation(line: 522, column: 30, scope: !13064)
!13067 = !DILocation(line: 522, column: 6, scope: !13039)
!13068 = !DILocation(line: 523, column: 30, scope: !13069)
!13069 = distinct !DILexicalBlock(scope: !13070, file: !2195, line: 523, column: 7)
!13070 = distinct !DILexicalBlock(scope: !13064, file: !2195, line: 522, column: 51)
!13071 = !DILocation(line: 523, column: 13, scope: !13069)
!13072 = !DILocation(line: 523, column: 7, scope: !13070)
!13073 = !DILocation(line: 530, column: 10, scope: !13074)
!13074 = distinct !DILexicalBlock(scope: !13069, file: !2195, line: 523, column: 43)
!13075 = !DILocation(line: 531, column: 3, scope: !13074)
!13076 = !DILocation(line: 532, column: 30, scope: !13077)
!13077 = distinct !DILexicalBlock(scope: !13069, file: !2195, line: 531, column: 10)
!13078 = !DILocation(line: 535, column: 29, scope: !13079)
!13079 = distinct !DILexicalBlock(scope: !13064, file: !2195, line: 534, column: 9)
!13080 = !DILocation(line: 0, scope: !12996, inlinedAt: !13081)
!13081 = distinct !DILocation(line: 537, column: 2, scope: !13039)
!13082 = !DILocation(line: 0, scope: !13004, inlinedAt: !13083)
!13083 = distinct !DILocation(line: 215, column: 2, scope: !12996, inlinedAt: !13081)
!13084 = !DILocation(line: 95, column: 2, scope: !13004, inlinedAt: !13083)
!13085 = !DILocation(line: 538, column: 1, scope: !13039)
!13086 = distinct !DISubprogram(name: "sliceable", scope: !2195, file: !2195, line: 468, type: !13087, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !13089)
!13087 = !DISubroutineType(types: !13088)
!13088 = !{!211, !2090}
!13089 = !{!13090, !13091}
!13090 = !DILocalVariable(name: "thread", arg: 1, scope: !13086, file: !2195, line: 468, type: !2090)
!13091 = !DILocalVariable(name: "ret", scope: !13086, file: !2195, line: 470, type: !211)
!13092 = !DILocation(line: 0, scope: !13086)
!13093 = !DILocation(line: 470, column: 13, scope: !13086)
!13094 = !DILocation(line: 471, column: 3, scope: !13086)
!13095 = !DILocation(line: 471, column: 7, scope: !13086)
!13096 = !DILocation(line: 472, column: 3, scope: !13086)
!13097 = !DILocation(line: 472, column: 37, scope: !13086)
!13098 = !DILocation(line: 472, column: 24, scope: !13086)
!13099 = !DILocation(line: 472, column: 43, scope: !13086)
!13100 = !DILocation(line: 472, column: 7, scope: !13086)
!13101 = !DILocation(line: 473, column: 3, scope: !13086)
!13102 = !DILocation(line: 473, column: 7, scope: !13086)
!13103 = !DILocation(line: 473, column: 6, scope: !13086)
!13104 = !DILocation(line: 479, column: 2, scope: !13086)
!13105 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2195, file: !2195, line: 482, type: !13106, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !13108)
!13106 = !DISubroutineType(types: !13107)
!13107 = !{!12961, !12961}
!13108 = !{!13109, !13110}
!13109 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !13105, file: !2195, line: 482, type: !12961)
!13110 = !DILocalVariable(name: "curr", scope: !13105, file: !2195, line: 484, type: !2090)
!13111 = !DILocation(line: 0, scope: !13105)
!13112 = !DILocation(line: 484, column: 26, scope: !13105)
!13113 = !DILocation(line: 493, column: 7, scope: !13114)
!13114 = distinct !DILexicalBlock(scope: !13105, file: !2195, line: 493, column: 6)
!13115 = !DILocation(line: 493, column: 6, scope: !13105)
!13116 = !DILocation(line: 494, column: 3, scope: !13117)
!13117 = distinct !DILexicalBlock(scope: !13114, file: !2195, line: 493, column: 49)
!13118 = !DILocation(line: 495, column: 2, scope: !13117)
!13119 = !DILocation(line: 496, column: 2, scope: !13105)
!13120 = !DILocation(line: 499, column: 1, scope: !13105)
!13121 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !12241, file: !12241, line: 106, type: !13087, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !13122)
!13122 = !{!13123, !13124}
!13123 = !DILocalVariable(name: "thread", arg: 1, scope: !13121, file: !12241, line: 106, type: !2090)
!13124 = !DILocalVariable(name: "state", scope: !13121, file: !12241, line: 108, type: !208)
!13125 = !DILocation(line: 0, scope: !13121)
!13126 = !DILocation(line: 108, column: 31, scope: !13121)
!13127 = !DILocation(line: 110, column: 16, scope: !13121)
!13128 = !DILocation(line: 111, column: 41, scope: !13121)
!13129 = !DILocation(line: 110, column: 2, scope: !13121)
!13130 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2195, file: !2195, line: 393, type: !12927, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !13131)
!13131 = !{!13132}
!13132 = !DILocalVariable(name: "thread", arg: 1, scope: !13130, file: !2195, line: 393, type: !2090)
!13133 = !DILocation(line: 0, scope: !13130)
!13134 = !DILocation(line: 395, column: 6, scope: !13135)
!13135 = distinct !DILexicalBlock(scope: !13130, file: !2195, line: 395, column: 6)
!13136 = !DILocation(line: 395, column: 6, scope: !13130)
!13137 = !DILocalVariable(name: "thread", arg: 1, scope: !13138, file: !2195, line: 264, type: !2090)
!13138 = distinct !DISubprogram(name: "dequeue_thread", scope: !2195, file: !2195, line: 264, type: !12927, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !13139)
!13139 = !{!13137}
!13140 = !DILocation(line: 0, scope: !13138, inlinedAt: !13141)
!13141 = distinct !DILocation(line: 396, column: 3, scope: !13142)
!13142 = distinct !DILexicalBlock(scope: !13135, file: !2195, line: 395, column: 34)
!13143 = !DILocation(line: 266, column: 15, scope: !13138, inlinedAt: !13141)
!13144 = !DILocation(line: 266, column: 28, scope: !13138, inlinedAt: !13141)
!13145 = !DILocalVariable(name: "thread", arg: 1, scope: !13146, file: !2195, line: 232, type: !2090)
!13146 = distinct !DISubprogram(name: "runq_remove", scope: !2195, file: !2195, line: 232, type: !12927, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !13147)
!13147 = !{!13145}
!13148 = !DILocation(line: 0, scope: !13146, inlinedAt: !13149)
!13149 = distinct !DILocation(line: 268, column: 3, scope: !13150, inlinedAt: !13141)
!13150 = distinct !DILexicalBlock(scope: !13151, file: !2195, line: 267, column: 35)
!13151 = distinct !DILexicalBlock(scope: !13138, file: !2195, line: 267, column: 6)
!13152 = !DILocation(line: 234, column: 2, scope: !13146, inlinedAt: !13149)
!13153 = !DILocation(line: 397, column: 2, scope: !13142)
!13154 = !DILocalVariable(name: "thread", arg: 1, scope: !13155, file: !2195, line: 250, type: !2090)
!13155 = distinct !DISubprogram(name: "queue_thread", scope: !2195, file: !2195, line: 250, type: !12927, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !13156)
!13156 = !{!13154}
!13157 = !DILocation(line: 0, scope: !13155, inlinedAt: !13158)
!13158 = distinct !DILocation(line: 398, column: 2, scope: !13130)
!13159 = !DILocation(line: 252, column: 15, scope: !13155, inlinedAt: !13158)
!13160 = !DILocation(line: 252, column: 28, scope: !13155, inlinedAt: !13158)
!13161 = !DILocalVariable(name: "thread", arg: 1, scope: !13162, file: !2195, line: 227, type: !2090)
!13162 = distinct !DISubprogram(name: "runq_add", scope: !2195, file: !2195, line: 227, type: !12927, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !13163)
!13163 = !{!13161}
!13164 = !DILocation(line: 0, scope: !13162, inlinedAt: !13165)
!13165 = distinct !DILocation(line: 254, column: 3, scope: !13166, inlinedAt: !13158)
!13166 = distinct !DILexicalBlock(scope: !13167, file: !2195, line: 253, column: 35)
!13167 = distinct !DILexicalBlock(scope: !13155, file: !2195, line: 253, column: 6)
!13168 = !DILocalVariable(name: "pq", arg: 1, scope: !13169, file: !2195, line: 181, type: !13172)
!13169 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2195, file: !2195, line: 181, type: !13170, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !13173)
!13170 = !DISubroutineType(types: !13171)
!13171 = !{null, !13172, !2090}
!13172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2126, size: 32)
!13173 = !{!13168, !13174, !13175}
!13174 = !DILocalVariable(name: "thread", arg: 2, scope: !13169, file: !2195, line: 182, type: !2090)
!13175 = !DILocalVariable(name: "t", scope: !13169, file: !2195, line: 184, type: !2090)
!13176 = !DILocation(line: 0, scope: !13169, inlinedAt: !13177)
!13177 = distinct !DILocation(line: 229, column: 2, scope: !13162, inlinedAt: !13165)
!13178 = !DILocation(line: 188, column: 2, scope: !13179, inlinedAt: !13177)
!13179 = distinct !DILexicalBlock(scope: !13169, file: !2195, line: 188, column: 2)
!13180 = !DILocation(line: 188, column: 2, scope: !13181, inlinedAt: !13177)
!13181 = distinct !DILexicalBlock(scope: !13179, file: !2195, line: 188, column: 2)
!13182 = !DILocation(line: 0, scope: !13179, inlinedAt: !13177)
!13183 = !DILocation(line: 189, column: 7, scope: !13184, inlinedAt: !13177)
!13184 = distinct !DILexicalBlock(scope: !13185, file: !2195, line: 189, column: 7)
!13185 = distinct !DILexicalBlock(scope: !13181, file: !2195, line: 188, column: 56)
!13186 = !DILocation(line: 189, column: 35, scope: !13184, inlinedAt: !13177)
!13187 = !DILocation(line: 189, column: 7, scope: !13185, inlinedAt: !13177)
!13188 = !DILocation(line: 191, column: 21, scope: !13189, inlinedAt: !13177)
!13189 = distinct !DILexicalBlock(scope: !13184, file: !2195, line: 189, column: 40)
!13190 = !DILocation(line: 190, column: 4, scope: !13189, inlinedAt: !13177)
!13191 = !DILocation(line: 192, column: 4, scope: !13189, inlinedAt: !13177)
!13192 = distinct !{!13192, !13178, !13193}
!13193 = !DILocation(line: 194, column: 2, scope: !13179, inlinedAt: !13177)
!13194 = !DILocation(line: 196, column: 37, scope: !13169, inlinedAt: !13177)
!13195 = !DILocation(line: 196, column: 2, scope: !13169, inlinedAt: !13177)
!13196 = !DILocation(line: 197, column: 1, scope: !13169, inlinedAt: !13177)
!13197 = !DILocation(line: 399, column: 25, scope: !13130)
!13198 = !DILocation(line: 399, column: 22, scope: !13130)
!13199 = !DILocation(line: 399, column: 2, scope: !13130)
!13200 = !DILocation(line: 400, column: 1, scope: !13130)
!13201 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !12241, file: !12241, line: 136, type: !13087, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !13202)
!13202 = !{!13203}
!13203 = !DILocalVariable(name: "thread", arg: 1, scope: !13201, file: !12241, line: 136, type: !2090)
!13204 = !DILocation(line: 0, scope: !13201)
!13205 = !DILocation(line: 138, column: 9, scope: !13201)
!13206 = !DILocation(line: 138, column: 2, scope: !13201)
!13207 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2195, file: !2195, line: 1137, type: !13170, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !13208)
!13208 = !{!13209, !13210}
!13209 = !DILocalVariable(name: "pq", arg: 1, scope: !13207, file: !2195, line: 1137, type: !13172)
!13210 = !DILocalVariable(name: "thread", arg: 2, scope: !13207, file: !2195, line: 1137, type: !2090)
!13211 = !DILocation(line: 0, scope: !13207)
!13212 = !DILocation(line: 1141, column: 33, scope: !13207)
!13213 = !DILocation(line: 1141, column: 2, scope: !13207)
!13214 = !DILocation(line: 1142, column: 1, scope: !13207)
!13215 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !273, file: !273, line: 294, type: !13216, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !13218)
!13216 = !DISubroutineType(types: !13217)
!13217 = !{!2191, !13172}
!13218 = !{!13219}
!13219 = !DILocalVariable(name: "list", arg: 1, scope: !13215, file: !273, line: 294, type: !13172)
!13220 = !DILocation(line: 0, scope: !13215)
!13221 = !DILocation(line: 296, column: 9, scope: !13215)
!13222 = !DILocation(line: 296, column: 49, scope: !13215)
!13223 = !DILocation(line: 296, column: 2, scope: !13215)
!13224 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !273, file: !273, line: 443, type: !13225, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !13227)
!13225 = !DISubroutineType(types: !13226)
!13226 = !{null, !2191, !2191}
!13227 = !{!13228, !13229, !13230}
!13228 = !DILocalVariable(name: "successor", arg: 1, scope: !13224, file: !273, line: 443, type: !2191)
!13229 = !DILocalVariable(name: "node", arg: 2, scope: !13224, file: !273, line: 443, type: !2191)
!13230 = !DILocalVariable(name: "prev", scope: !13224, file: !273, line: 445, type: !13231)
!13231 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2191)
!13232 = !DILocation(line: 0, scope: !13224)
!13233 = !DILocation(line: 445, column: 39, scope: !13224)
!13234 = !DILocation(line: 447, column: 8, scope: !13224)
!13235 = !DILocation(line: 447, column: 13, scope: !13224)
!13236 = !DILocation(line: 448, column: 8, scope: !13224)
!13237 = !DILocation(line: 448, column: 13, scope: !13224)
!13238 = !DILocation(line: 449, column: 8, scope: !13224)
!13239 = !DILocation(line: 449, column: 13, scope: !13224)
!13240 = !DILocation(line: 450, column: 18, scope: !13224)
!13241 = !DILocation(line: 451, column: 1, scope: !13224)
!13242 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !273, file: !273, line: 341, type: !13243, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !13245)
!13243 = !DISubroutineType(types: !13244)
!13244 = !{!2191, !13172, !2191}
!13245 = !{!13246, !13247}
!13246 = !DILocalVariable(name: "list", arg: 1, scope: !13242, file: !273, line: 341, type: !13172)
!13247 = !DILocalVariable(name: "node", arg: 2, scope: !13242, file: !273, line: 342, type: !2191)
!13248 = !DILocation(line: 0, scope: !13242)
!13249 = !DILocation(line: 344, column: 15, scope: !13242)
!13250 = !DILocation(line: 344, column: 9, scope: !13242)
!13251 = !DILocation(line: 344, column: 26, scope: !13242)
!13252 = !DILocation(line: 344, column: 2, scope: !13242)
!13253 = distinct !DISubprogram(name: "sys_dlist_append", scope: !273, file: !273, line: 404, type: !13254, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !13256)
!13254 = !DISubroutineType(types: !13255)
!13255 = !{null, !13172, !2191}
!13256 = !{!13257, !13258, !13259}
!13257 = !DILocalVariable(name: "list", arg: 1, scope: !13253, file: !273, line: 404, type: !13172)
!13258 = !DILocalVariable(name: "node", arg: 2, scope: !13253, file: !273, line: 404, type: !2191)
!13259 = !DILocalVariable(name: "tail", scope: !13253, file: !273, line: 406, type: !13231)
!13260 = !DILocation(line: 0, scope: !13253)
!13261 = !DILocation(line: 406, column: 34, scope: !13253)
!13262 = !DILocation(line: 408, column: 8, scope: !13253)
!13263 = !DILocation(line: 408, column: 13, scope: !13253)
!13264 = !DILocation(line: 409, column: 8, scope: !13253)
!13265 = !DILocation(line: 409, column: 13, scope: !13253)
!13266 = !DILocation(line: 411, column: 8, scope: !13253)
!13267 = !DILocation(line: 411, column: 13, scope: !13253)
!13268 = !DILocation(line: 412, column: 13, scope: !13253)
!13269 = !DILocation(line: 413, column: 1, scope: !13253)
!13270 = distinct !DISubprogram(name: "update_cache", scope: !2195, file: !2195, line: 559, type: !7964, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !13271)
!13271 = !{!13272, !13273}
!13272 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !13270, file: !2195, line: 559, type: !103)
!13273 = !DILocalVariable(name: "thread", scope: !13270, file: !2195, line: 562, type: !2090)
!13274 = !DILocation(line: 0, scope: !13270)
!13275 = !DILocation(line: 239, column: 9, scope: !13276, inlinedAt: !13279)
!13276 = distinct !DISubprogram(name: "runq_best", scope: !2195, file: !2195, line: 237, type: !13277, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !162)
!13277 = !DISubroutineType(types: !13278)
!13278 = !{!2090}
!13279 = distinct !DILocation(line: 314, column: 28, scope: !13280, inlinedAt: !13283)
!13280 = distinct !DISubprogram(name: "next_up", scope: !2195, file: !2195, line: 312, type: !13277, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !13281)
!13281 = !{!13282}
!13282 = !DILocalVariable(name: "thread", scope: !13280, file: !2195, line: 314, type: !2090)
!13283 = distinct !DILocation(line: 562, column: 28, scope: !13270)
!13284 = !DILocation(line: 0, scope: !13280, inlinedAt: !13283)
!13285 = !DILocation(line: 340, column: 17, scope: !13280, inlinedAt: !13283)
!13286 = !DILocation(line: 340, column: 9, scope: !13280, inlinedAt: !13283)
!13287 = !DILocalVariable(name: "thread", arg: 1, scope: !13288, file: !2195, line: 127, type: !2090)
!13288 = distinct !DISubprogram(name: "should_preempt", scope: !2195, file: !2195, line: 127, type: !13289, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !13291)
!13289 = !DISubroutineType(types: !13290)
!13290 = !{!211, !2090, !103}
!13291 = !{!13287, !13292}
!13292 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !13288, file: !2195, line: 128, type: !103)
!13293 = !DILocation(line: 0, scope: !13288, inlinedAt: !13294)
!13294 = distinct !DILocation(line: 564, column: 6, scope: !13295)
!13295 = distinct !DILexicalBlock(scope: !13270, file: !2195, line: 564, column: 6)
!13296 = !DILocation(line: 133, column: 17, scope: !13297, inlinedAt: !13294)
!13297 = distinct !DILexicalBlock(scope: !13288, file: !2195, line: 133, column: 6)
!13298 = !DILocation(line: 0, scope: !13295)
!13299 = !DILocation(line: 133, column: 6, scope: !13288, inlinedAt: !13294)
!13300 = !DILocation(line: 140, column: 6, scope: !13301, inlinedAt: !13294)
!13301 = distinct !DILexicalBlock(scope: !13288, file: !2195, line: 140, column: 6)
!13302 = !DILocation(line: 140, column: 6, scope: !13288, inlinedAt: !13294)
!13303 = !DILocation(line: 150, column: 9, scope: !13304, inlinedAt: !13294)
!13304 = distinct !DILexicalBlock(scope: !13288, file: !2195, line: 149, column: 6)
!13305 = !DILocation(line: 149, column: 6, scope: !13288, inlinedAt: !13294)
!13306 = !DILocation(line: 157, column: 6, scope: !13307, inlinedAt: !13294)
!13307 = distinct !DILexicalBlock(scope: !13288, file: !2195, line: 157, column: 6)
!13308 = !DILocation(line: 564, column: 6, scope: !13270)
!13309 = !DILocation(line: 566, column: 14, scope: !13310)
!13310 = distinct !DILexicalBlock(scope: !13311, file: !2195, line: 566, column: 7)
!13311 = distinct !DILexicalBlock(scope: !13295, file: !2195, line: 564, column: 42)
!13312 = !DILocation(line: 566, column: 7, scope: !13311)
!13313 = !DILocation(line: 567, column: 4, scope: !13314)
!13314 = distinct !DILexicalBlock(scope: !13310, file: !2195, line: 566, column: 27)
!13315 = !DILocation(line: 568, column: 3, scope: !13314)
!13316 = !DILocation(line: 585, column: 1, scope: !13270)
!13317 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2195, file: !2195, line: 1144, type: !13318, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !13320)
!13318 = !DISubroutineType(types: !13319)
!13319 = !{!2090, !13172}
!13320 = !{!13321, !13322, !13323}
!13321 = !DILocalVariable(name: "pq", arg: 1, scope: !13317, file: !2195, line: 1144, type: !13172)
!13322 = !DILocalVariable(name: "thread", scope: !13317, file: !2195, line: 1146, type: !2090)
!13323 = !DILocalVariable(name: "n", scope: !13317, file: !2195, line: 1147, type: !2191)
!13324 = !DILocation(line: 0, scope: !13317)
!13325 = !DILocation(line: 1147, column: 19, scope: !13317)
!13326 = !DILocation(line: 1152, column: 2, scope: !13317)
!13327 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !12241, file: !12241, line: 115, type: !13087, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !13328)
!13328 = !{!13329}
!13329 = !DILocalVariable(name: "thread", arg: 1, scope: !13327, file: !12241, line: 115, type: !2090)
!13330 = !DILocation(line: 0, scope: !13327)
!13331 = !DILocation(line: 117, column: 46, scope: !13327)
!13332 = !DILocation(line: 117, column: 10, scope: !13327)
!13333 = !DILocation(line: 117, column: 9, scope: !13327)
!13334 = !DILocation(line: 117, column: 2, scope: !13327)
!13335 = distinct !DISubprogram(name: "is_preempt", scope: !2195, file: !2195, line: 62, type: !12945, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !13336)
!13336 = !{!13337}
!13337 = !DILocalVariable(name: "thread", arg: 1, scope: !13335, file: !2195, line: 62, type: !2090)
!13338 = !DILocation(line: 0, scope: !13335)
!13339 = !DILocation(line: 65, column: 22, scope: !13335)
!13340 = !DILocation(line: 65, column: 30, scope: !13335)
!13341 = !DILocation(line: 65, column: 2, scope: !13335)
!13342 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !12635, file: !12635, line: 35, type: !13343, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !13347)
!13343 = !DISubroutineType(types: !13344)
!13344 = !{!211, !13345}
!13345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13346, size: 32)
!13346 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2141)
!13347 = !{!13348}
!13348 = !DILocalVariable(name: "to", arg: 1, scope: !13342, file: !12635, line: 35, type: !13345)
!13349 = !DILocation(line: 0, scope: !13342)
!13350 = !DILocation(line: 37, column: 35, scope: !13342)
!13351 = !DILocation(line: 37, column: 10, scope: !13342)
!13352 = !DILocation(line: 37, column: 9, scope: !13342)
!13353 = !DILocation(line: 37, column: 2, scope: !13342)
!13354 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !273, file: !273, line: 225, type: !13355, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !13359)
!13355 = !DISubroutineType(types: !13356)
!13356 = !{!211, !13357}
!13357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13358, size: 32)
!13358 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2100)
!13359 = !{!13360}
!13360 = !DILocalVariable(name: "node", arg: 1, scope: !13354, file: !273, line: 225, type: !13357)
!13361 = !DILocation(line: 0, scope: !13354)
!13362 = !DILocation(line: 227, column: 15, scope: !13354)
!13363 = !DILocation(line: 227, column: 20, scope: !13354)
!13364 = !DILocation(line: 227, column: 2, scope: !13354)
!13365 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !273, file: !273, line: 325, type: !13243, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !13366)
!13366 = !{!13367, !13368}
!13367 = !DILocalVariable(name: "list", arg: 1, scope: !13365, file: !273, line: 325, type: !13172)
!13368 = !DILocalVariable(name: "node", arg: 2, scope: !13365, file: !273, line: 326, type: !2191)
!13369 = !DILocation(line: 0, scope: !13365)
!13370 = !DILocation(line: 328, column: 24, scope: !13365)
!13371 = !DILocation(line: 328, column: 15, scope: !13365)
!13372 = !DILocation(line: 328, column: 9, scope: !13365)
!13373 = !DILocation(line: 328, column: 45, scope: !13365)
!13374 = !DILocation(line: 328, column: 2, scope: !13365)
!13375 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !273, file: !273, line: 266, type: !13376, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !13378)
!13376 = !DISubroutineType(types: !13377)
!13377 = !{!211, !13172}
!13378 = !{!13379}
!13379 = !DILocalVariable(name: "list", arg: 1, scope: !13375, file: !273, line: 266, type: !13172)
!13380 = !DILocation(line: 0, scope: !13375)
!13381 = !DILocation(line: 268, column: 15, scope: !13375)
!13382 = !DILocation(line: 268, column: 20, scope: !13375)
!13383 = !DILocation(line: 268, column: 2, scope: !13375)
!13384 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !273, file: !273, line: 496, type: !13385, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !13387)
!13385 = !DISubroutineType(types: !13386)
!13386 = !{null, !2191}
!13387 = !{!13388, !13389, !13390}
!13388 = !DILocalVariable(name: "node", arg: 1, scope: !13384, file: !273, line: 496, type: !2191)
!13389 = !DILocalVariable(name: "prev", scope: !13384, file: !273, line: 498, type: !13231)
!13390 = !DILocalVariable(name: "next", scope: !13384, file: !273, line: 499, type: !13231)
!13391 = !DILocation(line: 0, scope: !13384)
!13392 = !DILocation(line: 498, column: 34, scope: !13384)
!13393 = !DILocation(line: 499, column: 34, scope: !13384)
!13394 = !DILocation(line: 501, column: 8, scope: !13384)
!13395 = !DILocation(line: 501, column: 13, scope: !13384)
!13396 = !DILocation(line: 502, column: 8, scope: !13384)
!13397 = !DILocation(line: 502, column: 13, scope: !13384)
!13398 = !DILocation(line: 503, column: 2, scope: !13384)
!13399 = !DILocation(line: 504, column: 1, scope: !13384)
!13400 = distinct !DISubprogram(name: "sys_dnode_init", scope: !273, file: !273, line: 211, type: !13385, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !13401)
!13401 = !{!13402}
!13402 = !DILocalVariable(name: "node", arg: 1, scope: !13400, file: !273, line: 211, type: !2191)
!13403 = !DILocation(line: 0, scope: !13400)
!13404 = !DILocation(line: 213, column: 8, scope: !13400)
!13405 = !DILocation(line: 213, column: 13, scope: !13400)
!13406 = !DILocation(line: 214, column: 8, scope: !13400)
!13407 = !DILocation(line: 214, column: 13, scope: !13400)
!13408 = !DILocation(line: 215, column: 1, scope: !13400)
!13409 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !12241, file: !12241, line: 131, type: !13410, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !13412)
!13410 = !DISubroutineType(types: !13411)
!13411 = !{!211, !2090, !137}
!13412 = !{!13413, !13414}
!13413 = !DILocalVariable(name: "thread", arg: 1, scope: !13409, file: !12241, line: 131, type: !2090)
!13414 = !DILocalVariable(name: "state", arg: 2, scope: !13409, file: !12241, line: 131, type: !137)
!13415 = !DILocation(line: 0, scope: !13409)
!13416 = !DILocation(line: 133, column: 23, scope: !13409)
!13417 = !DILocation(line: 133, column: 45, scope: !13409)
!13418 = !DILocation(line: 133, column: 2, scope: !13409)
!13419 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !12241, file: !12241, line: 211, type: !13420, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !13422)
!13420 = !DISubroutineType(types: !13421)
!13421 = !{!211, !103, !103}
!13422 = !{!13423, !13424}
!13423 = !DILocalVariable(name: "prio", arg: 1, scope: !13419, file: !12241, line: 211, type: !103)
!13424 = !DILocalVariable(name: "test_prio", arg: 2, scope: !13419, file: !12241, line: 211, type: !103)
!13425 = !DILocation(line: 0, scope: !13419)
!13426 = !DILocation(line: 213, column: 9, scope: !13419)
!13427 = !DILocation(line: 213, column: 2, scope: !13419)
!13428 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !12241, file: !12241, line: 83, type: !13087, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !13429)
!13429 = !{!13430}
!13430 = !DILocalVariable(name: "thread", arg: 1, scope: !13428, file: !12241, line: 83, type: !2090)
!13431 = !DILocation(line: 0, scope: !13428)
!13432 = !DILocation(line: 89, column: 16, scope: !13428)
!13433 = !DILocation(line: 89, column: 2, scope: !13428)
!13434 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !12241, file: !12241, line: 206, type: !13420, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !13435)
!13435 = !{!13436, !13437}
!13436 = !DILocalVariable(name: "prio1", arg: 1, scope: !13434, file: !12241, line: 206, type: !103)
!13437 = !DILocalVariable(name: "prio2", arg: 2, scope: !13434, file: !12241, line: 206, type: !103)
!13438 = !DILocation(line: 0, scope: !13434)
!13439 = !DILocation(line: 208, column: 15, scope: !13434)
!13440 = !DILocation(line: 208, column: 2, scope: !13434)
!13441 = distinct !DISubprogram(name: "z_ready_thread", scope: !2195, file: !2195, line: 635, type: !12927, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !13442)
!13442 = !{!13443, !13444, !13446}
!13443 = !DILocalVariable(name: "thread", arg: 1, scope: !13441, file: !2195, line: 635, type: !2090)
!13444 = !DILocalVariable(name: "__i", scope: !13445, file: !2195, line: 637, type: !12961)
!13445 = distinct !DILexicalBlock(scope: !13441, file: !2195, line: 637, column: 2)
!13446 = !DILocalVariable(name: "__key", scope: !13445, file: !2195, line: 637, type: !12961)
!13447 = !DILocation(line: 0, scope: !13441)
!13448 = !DILocation(line: 0, scope: !13445)
!13449 = !DILocation(line: 0, scope: !12969, inlinedAt: !13450)
!13450 = distinct !DILocation(line: 637, column: 2, scope: !13445)
!13451 = !DILocation(line: 55, column: 2, scope: !12978, inlinedAt: !13452)
!13452 = distinct !DILocation(line: 145, column: 10, scope: !12969, inlinedAt: !13450)
!13453 = !DILocation(line: 0, scope: !12978, inlinedAt: !13452)
!13454 = !DILocation(line: 639, column: 4, scope: !13455)
!13455 = distinct !DILexicalBlock(scope: !13456, file: !2195, line: 638, column: 41)
!13456 = distinct !DILexicalBlock(scope: !13457, file: !2195, line: 638, column: 7)
!13457 = distinct !DILexicalBlock(scope: !13458, file: !2195, line: 637, column: 26)
!13458 = distinct !DILexicalBlock(scope: !13445, file: !2195, line: 637, column: 2)
!13459 = !DILocation(line: 0, scope: !12996, inlinedAt: !13460)
!13460 = distinct !DILocation(line: 637, column: 2, scope: !13458)
!13461 = !DILocation(line: 0, scope: !13004, inlinedAt: !13462)
!13462 = distinct !DILocation(line: 215, column: 2, scope: !12996, inlinedAt: !13460)
!13463 = !DILocation(line: 95, column: 2, scope: !13004, inlinedAt: !13462)
!13464 = !DILocation(line: 642, column: 1, scope: !13441)
!13465 = distinct !DISubprogram(name: "ready_thread", scope: !2195, file: !2195, line: 617, type: !12927, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !13466)
!13466 = !{!13467}
!13467 = !DILocalVariable(name: "thread", arg: 1, scope: !13465, file: !2195, line: 617, type: !2090)
!13468 = !DILocation(line: 0, scope: !13465)
!13469 = !DILocation(line: 626, column: 7, scope: !13470)
!13470 = distinct !DILexicalBlock(scope: !13465, file: !2195, line: 626, column: 6)
!13471 = !DILocation(line: 626, column: 34, scope: !13470)
!13472 = !DILocation(line: 626, column: 37, scope: !13470)
!13473 = !DILocation(line: 626, column: 6, scope: !13465)
!13474 = !DILocation(line: 0, scope: !13155, inlinedAt: !13475)
!13475 = distinct !DILocation(line: 629, column: 3, scope: !13476)
!13476 = distinct !DILexicalBlock(scope: !13470, file: !2195, line: 626, column: 64)
!13477 = !DILocation(line: 252, column: 15, scope: !13155, inlinedAt: !13475)
!13478 = !DILocation(line: 252, column: 28, scope: !13155, inlinedAt: !13475)
!13479 = !DILocation(line: 0, scope: !13162, inlinedAt: !13480)
!13480 = distinct !DILocation(line: 254, column: 3, scope: !13166, inlinedAt: !13475)
!13481 = !DILocation(line: 0, scope: !13169, inlinedAt: !13482)
!13482 = distinct !DILocation(line: 229, column: 2, scope: !13162, inlinedAt: !13480)
!13483 = !DILocation(line: 188, column: 2, scope: !13179, inlinedAt: !13482)
!13484 = !DILocation(line: 188, column: 2, scope: !13181, inlinedAt: !13482)
!13485 = !DILocation(line: 0, scope: !13179, inlinedAt: !13482)
!13486 = !DILocation(line: 189, column: 7, scope: !13184, inlinedAt: !13482)
!13487 = !DILocation(line: 189, column: 35, scope: !13184, inlinedAt: !13482)
!13488 = !DILocation(line: 189, column: 7, scope: !13185, inlinedAt: !13482)
!13489 = !DILocation(line: 191, column: 21, scope: !13189, inlinedAt: !13482)
!13490 = !DILocation(line: 190, column: 4, scope: !13189, inlinedAt: !13482)
!13491 = !DILocation(line: 192, column: 4, scope: !13189, inlinedAt: !13482)
!13492 = distinct !{!13492, !13483, !13493}
!13493 = !DILocation(line: 194, column: 2, scope: !13179, inlinedAt: !13482)
!13494 = !DILocation(line: 196, column: 37, scope: !13169, inlinedAt: !13482)
!13495 = !DILocation(line: 196, column: 2, scope: !13169, inlinedAt: !13482)
!13496 = !DILocation(line: 197, column: 1, scope: !13169, inlinedAt: !13482)
!13497 = !DILocation(line: 630, column: 3, scope: !13476)
!13498 = !DILocation(line: 632, column: 2, scope: !13476)
!13499 = !DILocation(line: 633, column: 1, scope: !13465)
!13500 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !12241, file: !12241, line: 120, type: !13087, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !13501)
!13501 = !{!13502}
!13502 = !DILocalVariable(name: "thread", arg: 1, scope: !13500, file: !12241, line: 120, type: !2090)
!13503 = !DILocation(line: 0, scope: !13500)
!13504 = !DILocation(line: 122, column: 12, scope: !13500)
!13505 = !DILocation(line: 122, column: 62, scope: !13500)
!13506 = !DILocation(line: 123, column: 4, scope: !13500)
!13507 = !DILocation(line: 122, column: 2, scope: !13500)
!13508 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2195, file: !2195, line: 644, type: !12927, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !13509)
!13509 = !{!13510, !13511, !13513}
!13510 = !DILocalVariable(name: "thread", arg: 1, scope: !13508, file: !2195, line: 644, type: !2090)
!13511 = !DILocalVariable(name: "__i", scope: !13512, file: !2195, line: 646, type: !12961)
!13512 = distinct !DILexicalBlock(scope: !13508, file: !2195, line: 646, column: 2)
!13513 = !DILocalVariable(name: "__key", scope: !13512, file: !2195, line: 646, type: !12961)
!13514 = !DILocation(line: 0, scope: !13508)
!13515 = !DILocation(line: 0, scope: !13512)
!13516 = !DILocation(line: 0, scope: !12969, inlinedAt: !13517)
!13517 = distinct !DILocation(line: 646, column: 2, scope: !13512)
!13518 = !DILocation(line: 55, column: 2, scope: !12978, inlinedAt: !13519)
!13519 = distinct !DILocation(line: 145, column: 10, scope: !12969, inlinedAt: !13517)
!13520 = !DILocation(line: 0, scope: !12978, inlinedAt: !13519)
!13521 = !DILocation(line: 647, column: 3, scope: !13522)
!13522 = distinct !DILexicalBlock(scope: !13523, file: !2195, line: 646, column: 26)
!13523 = distinct !DILexicalBlock(scope: !13512, file: !2195, line: 646, column: 2)
!13524 = !DILocation(line: 0, scope: !12996, inlinedAt: !13525)
!13525 = distinct !DILocation(line: 646, column: 2, scope: !13523)
!13526 = !DILocation(line: 0, scope: !13004, inlinedAt: !13527)
!13527 = distinct !DILocation(line: 215, column: 2, scope: !12996, inlinedAt: !13525)
!13528 = !DILocation(line: 95, column: 2, scope: !13004, inlinedAt: !13527)
!13529 = !DILocation(line: 649, column: 1, scope: !13508)
!13530 = distinct !DISubprogram(name: "z_sched_start", scope: !2195, file: !2195, line: 651, type: !12927, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !13531)
!13531 = !{!13532, !13533}
!13532 = !DILocalVariable(name: "thread", arg: 1, scope: !13530, file: !2195, line: 651, type: !2090)
!13533 = !DILocalVariable(name: "key", scope: !13530, file: !2195, line: 653, type: !12961)
!13534 = !DILocation(line: 0, scope: !13530)
!13535 = !DILocation(line: 0, scope: !12969, inlinedAt: !13536)
!13536 = distinct !DILocation(line: 653, column: 25, scope: !13530)
!13537 = !DILocation(line: 55, column: 2, scope: !12978, inlinedAt: !13538)
!13538 = distinct !DILocation(line: 145, column: 10, scope: !12969, inlinedAt: !13536)
!13539 = !DILocation(line: 0, scope: !12978, inlinedAt: !13538)
!13540 = !DILocation(line: 655, column: 6, scope: !13541)
!13541 = distinct !DILexicalBlock(scope: !13530, file: !2195, line: 655, column: 6)
!13542 = !DILocation(line: 655, column: 6, scope: !13530)
!13543 = !DILocation(line: 0, scope: !12996, inlinedAt: !13544)
!13544 = distinct !DILocation(line: 656, column: 3, scope: !13545)
!13545 = distinct !DILexicalBlock(scope: !13541, file: !2195, line: 655, column: 36)
!13546 = !DILocation(line: 0, scope: !13004, inlinedAt: !13547)
!13547 = distinct !DILocation(line: 215, column: 2, scope: !12996, inlinedAt: !13544)
!13548 = !DILocation(line: 95, column: 2, scope: !13004, inlinedAt: !13547)
!13549 = !DILocation(line: 657, column: 3, scope: !13545)
!13550 = !DILocation(line: 660, column: 2, scope: !13530)
!13551 = !DILocation(line: 661, column: 2, scope: !13530)
!13552 = !DILocation(line: 662, column: 2, scope: !13530)
!13553 = !DILocation(line: 663, column: 1, scope: !13530)
!13554 = distinct !DISubprogram(name: "z_has_thread_started", scope: !12241, file: !12241, line: 126, type: !13087, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !13555)
!13555 = !{!13556}
!13556 = !DILocalVariable(name: "thread", arg: 1, scope: !13554, file: !12241, line: 126, type: !2090)
!13557 = !DILocation(line: 0, scope: !13554)
!13558 = !DILocation(line: 128, column: 23, scope: !13554)
!13559 = !DILocation(line: 128, column: 36, scope: !13554)
!13560 = !DILocation(line: 128, column: 56, scope: !13554)
!13561 = !DILocation(line: 128, column: 2, scope: !13554)
!13562 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12241, file: !12241, line: 155, type: !12927, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !13563)
!13563 = !{!13564}
!13564 = !DILocalVariable(name: "thread", arg: 1, scope: !13562, file: !12241, line: 155, type: !2090)
!13565 = !DILocation(line: 0, scope: !13562)
!13566 = !DILocation(line: 157, column: 15, scope: !13562)
!13567 = !DILocation(line: 157, column: 28, scope: !13562)
!13568 = !DILocation(line: 158, column: 1, scope: !13562)
!13569 = distinct !DISubprogram(name: "z_reschedule", scope: !2195, file: !2195, line: 967, type: !12997, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !13570)
!13570 = !{!13571, !13572}
!13571 = !DILocalVariable(name: "lock", arg: 1, scope: !13569, file: !2195, line: 967, type: !12972)
!13572 = !DILocalVariable(name: "key", arg: 2, scope: !13569, file: !2195, line: 967, type: !12961)
!13573 = !DILocation(line: 0, scope: !13569)
!13574 = !DILocation(line: 969, column: 6, scope: !13575)
!13575 = distinct !DILexicalBlock(scope: !13569, file: !2195, line: 969, column: 6)
!13576 = !DILocation(line: 969, column: 23, scope: !13575)
!13577 = !DILocation(line: 969, column: 26, scope: !13575)
!13578 = !DILocation(line: 969, column: 6, scope: !13569)
!13579 = !DILocalVariable(name: "key", arg: 2, scope: !13580, file: !12345, line: 193, type: !12961)
!13580 = distinct !DISubprogram(name: "z_swap", scope: !12345, file: !12345, line: 193, type: !13581, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !13583)
!13581 = !DISubroutineType(types: !13582)
!13582 = !{!103, !12972, !12961}
!13583 = !{!13584, !13579}
!13584 = !DILocalVariable(name: "lock", arg: 1, scope: !13580, file: !12345, line: 193, type: !12972)
!13585 = !DILocation(line: 0, scope: !13580, inlinedAt: !13586)
!13586 = distinct !DILocation(line: 970, column: 3, scope: !13587)
!13587 = distinct !DILexicalBlock(scope: !13575, file: !2195, line: 969, column: 39)
!13588 = !DILocation(line: 196, column: 9, scope: !13580, inlinedAt: !13586)
!13589 = !DILocation(line: 971, column: 2, scope: !13587)
!13590 = !DILocation(line: 0, scope: !12996, inlinedAt: !13591)
!13591 = distinct !DILocation(line: 972, column: 3, scope: !13592)
!13592 = distinct !DILexicalBlock(scope: !13575, file: !2195, line: 971, column: 9)
!13593 = !DILocation(line: 0, scope: !13004, inlinedAt: !13594)
!13594 = distinct !DILocation(line: 215, column: 2, scope: !12996, inlinedAt: !13591)
!13595 = !DILocation(line: 95, column: 2, scope: !13004, inlinedAt: !13594)
!13596 = !DILocation(line: 975, column: 1, scope: !13569)
!13597 = distinct !DISubprogram(name: "resched", scope: !2195, file: !2195, line: 940, type: !13598, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !13600)
!13598 = !DISubroutineType(types: !13599)
!13599 = !{!211, !137}
!13600 = !{!13601}
!13601 = !DILocalVariable(name: "key", arg: 1, scope: !13597, file: !2195, line: 940, type: !137)
!13602 = !DILocation(line: 0, scope: !13597)
!13603 = !DILocalVariable(name: "key", arg: 1, scope: !13604, file: !6148, line: 112, type: !32)
!13604 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !6148, file: !6148, line: 112, type: !13605, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !13607)
!13605 = !DISubroutineType(types: !13606)
!13606 = !{!211, !32}
!13607 = !{!13603}
!13608 = !DILocation(line: 0, scope: !13604, inlinedAt: !13609)
!13609 = distinct !DILocation(line: 946, column: 9, scope: !13597)
!13610 = !DILocation(line: 115, column: 13, scope: !13604, inlinedAt: !13609)
!13611 = !DILocation(line: 946, column: 32, scope: !13597)
!13612 = !DILocation(line: 1031, column: 3, scope: !13613, inlinedAt: !13616)
!13613 = distinct !DISubprogram(name: "__get_IPSR", scope: !6322, file: !6322, line: 1027, type: !135, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !13614)
!13614 = !{!13615}
!13615 = !DILocalVariable(name: "result", scope: !13613, file: !6322, line: 1029, type: !137)
!13616 = distinct !DILocation(line: 48, column: 10, scope: !13617, inlinedAt: !13618)
!13617 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7114, file: !7114, line: 46, type: !7115, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !162)
!13618 = distinct !DILocation(line: 946, column: 36, scope: !13597)
!13619 = !{i64 2955627}
!13620 = !DILocation(line: 0, scope: !13613, inlinedAt: !13616)
!13621 = !DILocation(line: 48, column: 9, scope: !13617, inlinedAt: !13618)
!13622 = !DILocation(line: 946, column: 2, scope: !13597)
!13623 = distinct !DISubprogram(name: "need_swap", scope: !2195, file: !2195, line: 953, type: !7115, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !13624)
!13624 = !{!13625}
!13625 = !DILocalVariable(name: "new_thread", scope: !13623, file: !2195, line: 959, type: !2090)
!13626 = !DILocation(line: 962, column: 31, scope: !13623)
!13627 = !DILocation(line: 0, scope: !13623)
!13628 = !DILocation(line: 963, column: 23, scope: !13623)
!13629 = !DILocation(line: 963, column: 20, scope: !13623)
!13630 = !DILocation(line: 963, column: 2, scope: !13623)
!13631 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !12345, file: !12345, line: 181, type: !6332, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !13632)
!13632 = !{!13633, !13634}
!13633 = !DILocalVariable(name: "key", arg: 1, scope: !13631, file: !12345, line: 181, type: !32)
!13634 = !DILocalVariable(name: "ret", scope: !13631, file: !12345, line: 183, type: !103)
!13635 = !DILocation(line: 0, scope: !13631)
!13636 = !DILocation(line: 185, column: 8, scope: !13631)
!13637 = !DILocation(line: 186, column: 2, scope: !13631)
!13638 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2195, file: !2195, line: 665, type: !12927, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !13639)
!13639 = !{!13640, !13641, !13643}
!13640 = !DILocalVariable(name: "thread", arg: 1, scope: !13638, file: !2195, line: 665, type: !2090)
!13641 = !DILocalVariable(name: "__i", scope: !13642, file: !2195, line: 671, type: !12961)
!13642 = distinct !DILexicalBlock(scope: !13638, file: !2195, line: 671, column: 2)
!13643 = !DILocalVariable(name: "__key", scope: !13642, file: !2195, line: 671, type: !12961)
!13644 = !DILocation(line: 0, scope: !13638)
!13645 = !DILocation(line: 669, column: 8, scope: !13638)
!13646 = !DILocation(line: 0, scope: !13642)
!13647 = !DILocation(line: 0, scope: !12969, inlinedAt: !13648)
!13648 = distinct !DILocation(line: 671, column: 2, scope: !13642)
!13649 = !DILocation(line: 55, column: 2, scope: !12978, inlinedAt: !13650)
!13650 = distinct !DILocation(line: 145, column: 10, scope: !12969, inlinedAt: !13648)
!13651 = !DILocation(line: 0, scope: !12978, inlinedAt: !13650)
!13652 = !DILocation(line: 672, column: 7, scope: !13653)
!13653 = distinct !DILexicalBlock(scope: !13654, file: !2195, line: 672, column: 7)
!13654 = distinct !DILexicalBlock(scope: !13655, file: !2195, line: 671, column: 26)
!13655 = distinct !DILexicalBlock(scope: !13642, file: !2195, line: 671, column: 2)
!13656 = !DILocation(line: 672, column: 7, scope: !13654)
!13657 = !DILocation(line: 0, scope: !13138, inlinedAt: !13658)
!13658 = distinct !DILocation(line: 673, column: 4, scope: !13659)
!13659 = distinct !DILexicalBlock(scope: !13653, file: !2195, line: 672, column: 35)
!13660 = !DILocation(line: 266, column: 15, scope: !13138, inlinedAt: !13658)
!13661 = !DILocation(line: 266, column: 28, scope: !13138, inlinedAt: !13658)
!13662 = !DILocation(line: 0, scope: !13146, inlinedAt: !13663)
!13663 = distinct !DILocation(line: 268, column: 3, scope: !13150, inlinedAt: !13658)
!13664 = !DILocation(line: 234, column: 2, scope: !13146, inlinedAt: !13663)
!13665 = !DILocation(line: 674, column: 3, scope: !13659)
!13666 = !DILocation(line: 675, column: 3, scope: !13654)
!13667 = !DILocation(line: 676, column: 26, scope: !13654)
!13668 = !DILocation(line: 676, column: 23, scope: !13654)
!13669 = !DILocation(line: 676, column: 3, scope: !13654)
!13670 = !DILocation(line: 0, scope: !12996, inlinedAt: !13671)
!13671 = distinct !DILocation(line: 671, column: 2, scope: !13655)
!13672 = !DILocation(line: 0, scope: !13004, inlinedAt: !13673)
!13673 = distinct !DILocation(line: 215, column: 2, scope: !12996, inlinedAt: !13671)
!13674 = !DILocation(line: 95, column: 2, scope: !13004, inlinedAt: !13673)
!13675 = !DILocation(line: 679, column: 16, scope: !13676)
!13676 = distinct !DILexicalBlock(scope: !13638, file: !2195, line: 679, column: 6)
!13677 = !DILocation(line: 679, column: 13, scope: !13676)
!13678 = !DILocation(line: 679, column: 6, scope: !13638)
!13679 = !DILocation(line: 680, column: 3, scope: !13680)
!13680 = distinct !DILexicalBlock(scope: !13676, file: !2195, line: 679, column: 26)
!13681 = !DILocation(line: 681, column: 2, scope: !13680)
!13682 = !DILocation(line: 684, column: 1, scope: !13638)
!13683 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !12635, file: !12635, line: 52, type: !12945, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !13684)
!13684 = !{!13685}
!13685 = !DILocalVariable(name: "thread", arg: 1, scope: !13683, file: !12635, line: 52, type: !2090)
!13686 = !DILocation(line: 0, scope: !13683)
!13687 = !DILocation(line: 54, column: 39, scope: !13683)
!13688 = !DILocation(line: 54, column: 9, scope: !13683)
!13689 = !DILocation(line: 54, column: 2, scope: !13683)
!13690 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !12241, file: !12241, line: 141, type: !12927, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !13691)
!13691 = !{!13692}
!13692 = !DILocalVariable(name: "thread", arg: 1, scope: !13690, file: !12241, line: 141, type: !2090)
!13693 = !DILocation(line: 0, scope: !13690)
!13694 = !DILocation(line: 143, column: 15, scope: !13690)
!13695 = !DILocation(line: 143, column: 28, scope: !13690)
!13696 = !DILocation(line: 146, column: 1, scope: !13690)
!13697 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !12241, file: !12241, line: 73, type: !2848, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !162)
!13698 = !DILocation(line: 55, column: 2, scope: !12978, inlinedAt: !13699)
!13699 = distinct !DILocation(line: 75, column: 30, scope: !13697)
!13700 = !DILocation(line: 0, scope: !12978, inlinedAt: !13699)
!13701 = !DILocation(line: 75, column: 9, scope: !13697)
!13702 = !DILocation(line: 76, column: 1, scope: !13697)
!13703 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2195, file: !2195, line: 977, type: !6411, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !13704)
!13704 = !{!13705}
!13705 = !DILocalVariable(name: "key", arg: 1, scope: !13703, file: !2195, line: 977, type: !137)
!13706 = !DILocation(line: 0, scope: !13703)
!13707 = !DILocation(line: 979, column: 6, scope: !13708)
!13708 = distinct !DILexicalBlock(scope: !13703, file: !2195, line: 979, column: 6)
!13709 = !DILocation(line: 979, column: 6, scope: !13703)
!13710 = !DILocation(line: 980, column: 3, scope: !13711)
!13711 = distinct !DILexicalBlock(scope: !13708, file: !2195, line: 979, column: 20)
!13712 = !DILocation(line: 981, column: 2, scope: !13711)
!13713 = !DILocation(line: 0, scope: !13004, inlinedAt: !13714)
!13714 = distinct !DILocation(line: 982, column: 3, scope: !13715)
!13715 = distinct !DILexicalBlock(scope: !13708, file: !2195, line: 981, column: 9)
!13716 = !DILocation(line: 95, column: 2, scope: !13004, inlinedAt: !13714)
!13717 = !DILocation(line: 985, column: 1, scope: !13703)
!13718 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2195, file: !2195, line: 695, type: !12927, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !13719)
!13719 = !{!13720, !13721}
!13720 = !DILocalVariable(name: "thread", arg: 1, scope: !13718, file: !2195, line: 695, type: !2090)
!13721 = !DILocalVariable(name: "key", scope: !13718, file: !2195, line: 699, type: !12961)
!13722 = !DILocation(line: 0, scope: !13718)
!13723 = !DILocation(line: 0, scope: !12969, inlinedAt: !13724)
!13724 = distinct !DILocation(line: 699, column: 25, scope: !13718)
!13725 = !DILocation(line: 55, column: 2, scope: !12978, inlinedAt: !13726)
!13726 = distinct !DILocation(line: 145, column: 10, scope: !12969, inlinedAt: !13724)
!13727 = !DILocation(line: 0, scope: !12978, inlinedAt: !13726)
!13728 = !DILocation(line: 702, column: 7, scope: !13729)
!13729 = distinct !DILexicalBlock(scope: !13718, file: !2195, line: 702, column: 6)
!13730 = !DILocation(line: 702, column: 6, scope: !13718)
!13731 = !DILocation(line: 0, scope: !12996, inlinedAt: !13732)
!13732 = distinct !DILocation(line: 703, column: 3, scope: !13733)
!13733 = distinct !DILexicalBlock(scope: !13729, file: !2195, line: 702, column: 38)
!13734 = !DILocation(line: 0, scope: !13004, inlinedAt: !13735)
!13735 = distinct !DILocation(line: 215, column: 2, scope: !12996, inlinedAt: !13732)
!13736 = !DILocation(line: 95, column: 2, scope: !13004, inlinedAt: !13735)
!13737 = !DILocation(line: 704, column: 3, scope: !13733)
!13738 = !DILocation(line: 707, column: 2, scope: !13718)
!13739 = !DILocation(line: 708, column: 2, scope: !13718)
!13740 = !DILocation(line: 710, column: 2, scope: !13718)
!13741 = !DILocation(line: 713, column: 1, scope: !13718)
!13742 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !12241, file: !12241, line: 96, type: !13087, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !13743)
!13743 = !{!13744}
!13744 = !DILocalVariable(name: "thread", arg: 1, scope: !13742, file: !12241, line: 96, type: !2090)
!13745 = !DILocation(line: 0, scope: !13742)
!13746 = !DILocation(line: 98, column: 23, scope: !13742)
!13747 = !DILocation(line: 98, column: 36, scope: !13742)
!13748 = !DILocation(line: 98, column: 57, scope: !13742)
!13749 = !DILocation(line: 98, column: 2, scope: !13742)
!13750 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !12241, file: !12241, line: 148, type: !12927, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !13751)
!13751 = !{!13752}
!13752 = !DILocalVariable(name: "thread", arg: 1, scope: !13750, file: !12241, line: 148, type: !2090)
!13753 = !DILocation(line: 0, scope: !13750)
!13754 = !DILocation(line: 150, column: 15, scope: !13750)
!13755 = !DILocation(line: 150, column: 28, scope: !13750)
!13756 = !DILocation(line: 153, column: 1, scope: !13750)
!13757 = distinct !DISubprogram(name: "z_pend_thread", scope: !2195, file: !2195, line: 770, type: !13758, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !13764)
!13758 = !DISubroutineType(types: !13759)
!13759 = !{null, !2090, !2121, !13760}
!13760 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1446, line: 67, baseType: !13761)
!13761 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1446, line: 65, size: 64, elements: !13762)
!13762 = !{!13763}
!13763 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13761, file: !1446, line: 66, baseType: !1445, size: 64)
!13764 = !{!13765, !13766, !13767, !13768, !13770}
!13765 = !DILocalVariable(name: "thread", arg: 1, scope: !13757, file: !2195, line: 770, type: !2090)
!13766 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13757, file: !2195, line: 770, type: !2121)
!13767 = !DILocalVariable(name: "timeout", arg: 3, scope: !13757, file: !2195, line: 771, type: !13760)
!13768 = !DILocalVariable(name: "__i", scope: !13769, file: !2195, line: 774, type: !12961)
!13769 = distinct !DILexicalBlock(scope: !13757, file: !2195, line: 774, column: 2)
!13770 = !DILocalVariable(name: "__key", scope: !13769, file: !2195, line: 774, type: !12961)
!13771 = !DILocation(line: 0, scope: !13757)
!13772 = !DILocation(line: 0, scope: !13769)
!13773 = !DILocation(line: 0, scope: !12969, inlinedAt: !13774)
!13774 = distinct !DILocation(line: 774, column: 2, scope: !13769)
!13775 = !DILocation(line: 55, column: 2, scope: !12978, inlinedAt: !13776)
!13776 = distinct !DILocation(line: 145, column: 10, scope: !12969, inlinedAt: !13774)
!13777 = !DILocation(line: 0, scope: !12978, inlinedAt: !13776)
!13778 = !DILocation(line: 775, column: 3, scope: !13779)
!13779 = distinct !DILexicalBlock(scope: !13780, file: !2195, line: 774, column: 26)
!13780 = distinct !DILexicalBlock(scope: !13769, file: !2195, line: 774, column: 2)
!13781 = !DILocation(line: 0, scope: !12996, inlinedAt: !13782)
!13782 = distinct !DILocation(line: 774, column: 2, scope: !13780)
!13783 = !DILocation(line: 0, scope: !13004, inlinedAt: !13784)
!13784 = distinct !DILocation(line: 215, column: 2, scope: !12996, inlinedAt: !13782)
!13785 = !DILocation(line: 95, column: 2, scope: !13004, inlinedAt: !13784)
!13786 = !DILocation(line: 777, column: 1, scope: !13757)
!13787 = distinct !DISubprogram(name: "pend_locked", scope: !2195, file: !2195, line: 760, type: !13758, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !13788)
!13788 = !{!13789, !13790, !13791}
!13789 = !DILocalVariable(name: "thread", arg: 1, scope: !13787, file: !2195, line: 760, type: !2090)
!13790 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13787, file: !2195, line: 760, type: !2121)
!13791 = !DILocalVariable(name: "timeout", arg: 3, scope: !13787, file: !2195, line: 761, type: !13760)
!13792 = !DILocation(line: 0, scope: !13787)
!13793 = !DILocation(line: 766, column: 2, scope: !13787)
!13794 = !DILocation(line: 767, column: 2, scope: !13787)
!13795 = !DILocation(line: 768, column: 1, scope: !13787)
!13796 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2195, file: !2195, line: 740, type: !13797, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !13799)
!13797 = !DISubroutineType(types: !13798)
!13798 = !{null, !2090, !2121}
!13799 = !{!13800, !13801}
!13800 = !DILocalVariable(name: "thread", arg: 1, scope: !13796, file: !2195, line: 740, type: !2090)
!13801 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13796, file: !2195, line: 740, type: !2121)
!13802 = !DILocation(line: 0, scope: !13796)
!13803 = !DILocation(line: 742, column: 2, scope: !13796)
!13804 = !DILocation(line: 743, column: 2, scope: !13796)
!13805 = !DILocation(line: 747, column: 13, scope: !13806)
!13806 = distinct !DILexicalBlock(scope: !13796, file: !2195, line: 747, column: 6)
!13807 = !DILocation(line: 747, column: 6, scope: !13796)
!13808 = !DILocation(line: 748, column: 16, scope: !13809)
!13809 = distinct !DILexicalBlock(scope: !13806, file: !2195, line: 747, column: 22)
!13810 = !DILocation(line: 748, column: 26, scope: !13809)
!13811 = !DILocation(line: 749, column: 28, scope: !13809)
!13812 = !DILocation(line: 0, scope: !13169, inlinedAt: !13813)
!13813 = distinct !DILocation(line: 749, column: 3, scope: !13809)
!13814 = !DILocation(line: 188, column: 2, scope: !13179, inlinedAt: !13813)
!13815 = !DILocation(line: 188, column: 2, scope: !13181, inlinedAt: !13813)
!13816 = !DILocation(line: 0, scope: !13179, inlinedAt: !13813)
!13817 = !DILocation(line: 189, column: 7, scope: !13184, inlinedAt: !13813)
!13818 = !DILocation(line: 189, column: 35, scope: !13184, inlinedAt: !13813)
!13819 = !DILocation(line: 189, column: 7, scope: !13185, inlinedAt: !13813)
!13820 = !DILocation(line: 191, column: 21, scope: !13189, inlinedAt: !13813)
!13821 = !DILocation(line: 190, column: 4, scope: !13189, inlinedAt: !13813)
!13822 = !DILocation(line: 192, column: 4, scope: !13189, inlinedAt: !13813)
!13823 = distinct !{!13823, !13814, !13824}
!13824 = !DILocation(line: 194, column: 2, scope: !13179, inlinedAt: !13813)
!13825 = !DILocation(line: 196, column: 37, scope: !13169, inlinedAt: !13813)
!13826 = !DILocation(line: 196, column: 2, scope: !13169, inlinedAt: !13813)
!13827 = !DILocation(line: 197, column: 1, scope: !13169, inlinedAt: !13813)
!13828 = !DILocation(line: 751, column: 1, scope: !13796)
!13829 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2195, file: !2195, line: 753, type: !13830, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !13832)
!13830 = !DISubroutineType(types: !13831)
!13831 = !{null, !2090, !13760}
!13832 = !{!13833, !13834}
!13833 = !DILocalVariable(name: "thread", arg: 1, scope: !13829, file: !2195, line: 753, type: !2090)
!13834 = !DILocalVariable(name: "timeout", arg: 2, scope: !13829, file: !2195, line: 753, type: !13760)
!13835 = !DILocation(line: 0, scope: !13829)
!13836 = !DILocation(line: 755, column: 7, scope: !13837)
!13837 = distinct !DILexicalBlock(scope: !13829, file: !2195, line: 755, column: 6)
!13838 = !DILocation(line: 755, column: 6, scope: !13829)
!13839 = !DILocation(line: 756, column: 3, scope: !13840)
!13840 = distinct !DILexicalBlock(scope: !13837, file: !2195, line: 755, column: 41)
!13841 = !DILocation(line: 757, column: 2, scope: !13840)
!13842 = !DILocation(line: 758, column: 1, scope: !13829)
!13843 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !12635, file: !12635, line: 47, type: !13830, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !13844)
!13844 = !{!13845, !13846}
!13845 = !DILocalVariable(name: "thread", arg: 1, scope: !13843, file: !12635, line: 47, type: !2090)
!13846 = !DILocalVariable(name: "ticks", arg: 2, scope: !13843, file: !12635, line: 47, type: !13760)
!13847 = !DILocation(line: 0, scope: !13843)
!13848 = !DILocation(line: 49, column: 30, scope: !13843)
!13849 = !DILocation(line: 49, column: 2, scope: !13843)
!13850 = !DILocation(line: 50, column: 1, scope: !13843)
!13851 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2195, file: !2195, line: 795, type: !2147, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !13852)
!13852 = !{!13853, !13854, !13855, !13857, !13858}
!13853 = !DILocalVariable(name: "timeout", arg: 1, scope: !13851, file: !2195, line: 795, type: !2149)
!13854 = !DILocalVariable(name: "thread", scope: !13851, file: !2195, line: 797, type: !2090)
!13855 = !DILocalVariable(name: "__i", scope: !13856, file: !2195, line: 800, type: !12961)
!13856 = distinct !DILexicalBlock(scope: !13851, file: !2195, line: 800, column: 2)
!13857 = !DILocalVariable(name: "__key", scope: !13856, file: !2195, line: 800, type: !12961)
!13858 = !DILocalVariable(name: "killed", scope: !13859, file: !2195, line: 801, type: !211)
!13859 = distinct !DILexicalBlock(scope: !13860, file: !2195, line: 800, column: 26)
!13860 = distinct !DILexicalBlock(scope: !13856, file: !2195, line: 800, column: 2)
!13861 = !DILocation(line: 0, scope: !13851)
!13862 = !DILocation(line: 797, column: 28, scope: !13851)
!13863 = !DILocation(line: 0, scope: !13856)
!13864 = !DILocation(line: 0, scope: !12969, inlinedAt: !13865)
!13865 = distinct !DILocation(line: 800, column: 2, scope: !13856)
!13866 = !DILocation(line: 55, column: 2, scope: !12978, inlinedAt: !13867)
!13867 = distinct !DILocation(line: 145, column: 10, scope: !12969, inlinedAt: !13865)
!13868 = !DILocation(line: 0, scope: !12978, inlinedAt: !13867)
!13869 = !DILocation(line: 801, column: 27, scope: !13859)
!13870 = !DILocation(line: 801, column: 32, scope: !13859)
!13871 = !DILocation(line: 801, column: 61, scope: !13859)
!13872 = !DILocation(line: 0, scope: !13859)
!13873 = !DILocation(line: 804, column: 7, scope: !13859)
!13874 = !DILocation(line: 805, column: 21, scope: !13875)
!13875 = distinct !DILexicalBlock(scope: !13876, file: !2195, line: 805, column: 8)
!13876 = distinct !DILexicalBlock(scope: !13877, file: !2195, line: 804, column: 16)
!13877 = distinct !DILexicalBlock(scope: !13859, file: !2195, line: 804, column: 7)
!13878 = !DILocation(line: 805, column: 31, scope: !13875)
!13879 = !DILocation(line: 805, column: 8, scope: !13876)
!13880 = !DILocation(line: 806, column: 5, scope: !13881)
!13881 = distinct !DILexicalBlock(scope: !13875, file: !2195, line: 805, column: 40)
!13882 = !DILocation(line: 807, column: 4, scope: !13881)
!13883 = !DILocation(line: 808, column: 4, scope: !13876)
!13884 = !DILocation(line: 809, column: 4, scope: !13876)
!13885 = !DILocation(line: 810, column: 4, scope: !13876)
!13886 = !DILocation(line: 811, column: 3, scope: !13876)
!13887 = !DILocation(line: 0, scope: !12996, inlinedAt: !13888)
!13888 = distinct !DILocation(line: 800, column: 2, scope: !13860)
!13889 = !DILocation(line: 0, scope: !13004, inlinedAt: !13890)
!13890 = distinct !DILocation(line: 215, column: 2, scope: !12996, inlinedAt: !13888)
!13891 = !DILocation(line: 95, column: 2, scope: !13004, inlinedAt: !13890)
!13892 = !DILocation(line: 813, column: 1, scope: !13851)
!13893 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2195, file: !2195, line: 779, type: !12927, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !13894)
!13894 = !{!13895}
!13895 = !DILocalVariable(name: "thread", arg: 1, scope: !13893, file: !2195, line: 779, type: !2090)
!13896 = !DILocation(line: 0, scope: !13893)
!13897 = !DILocation(line: 781, column: 2, scope: !13893)
!13898 = !DILocation(line: 782, column: 2, scope: !13893)
!13899 = !DILocation(line: 783, column: 15, scope: !13893)
!13900 = !DILocation(line: 783, column: 25, scope: !13893)
!13901 = !DILocation(line: 784, column: 1, scope: !13893)
!13902 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !12241, file: !12241, line: 165, type: !12927, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !13903)
!13903 = !{!13904}
!13904 = !DILocalVariable(name: "thread", arg: 1, scope: !13902, file: !12241, line: 165, type: !2090)
!13905 = !DILocation(line: 0, scope: !13902)
!13906 = !DILocation(line: 167, column: 15, scope: !13902)
!13907 = !DILocation(line: 167, column: 28, scope: !13902)
!13908 = !DILocation(line: 168, column: 1, scope: !13902)
!13909 = distinct !DISubprogram(name: "unready_thread", scope: !2195, file: !2195, line: 731, type: !12927, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !13910)
!13910 = !{!13911}
!13911 = !DILocalVariable(name: "thread", arg: 1, scope: !13909, file: !2195, line: 731, type: !2090)
!13912 = !DILocation(line: 0, scope: !13909)
!13913 = !DILocation(line: 733, column: 6, scope: !13914)
!13914 = distinct !DILexicalBlock(scope: !13909, file: !2195, line: 733, column: 6)
!13915 = !DILocation(line: 733, column: 6, scope: !13909)
!13916 = !DILocation(line: 0, scope: !13138, inlinedAt: !13917)
!13917 = distinct !DILocation(line: 734, column: 3, scope: !13918)
!13918 = distinct !DILexicalBlock(scope: !13914, file: !2195, line: 733, column: 34)
!13919 = !DILocation(line: 266, column: 15, scope: !13138, inlinedAt: !13917)
!13920 = !DILocation(line: 266, column: 28, scope: !13138, inlinedAt: !13917)
!13921 = !DILocation(line: 0, scope: !13146, inlinedAt: !13922)
!13922 = distinct !DILocation(line: 268, column: 3, scope: !13150, inlinedAt: !13917)
!13923 = !DILocation(line: 234, column: 2, scope: !13146, inlinedAt: !13922)
!13924 = !DILocation(line: 735, column: 2, scope: !13918)
!13925 = !DILocation(line: 736, column: 25, scope: !13909)
!13926 = !DILocation(line: 736, column: 22, scope: !13909)
!13927 = !DILocation(line: 736, column: 2, scope: !13909)
!13928 = !DILocation(line: 737, column: 1, scope: !13909)
!13929 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !12241, file: !12241, line: 160, type: !12927, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !13930)
!13930 = !{!13931}
!13931 = !DILocalVariable(name: "thread", arg: 1, scope: !13929, file: !12241, line: 160, type: !2090)
!13932 = !DILocation(line: 0, scope: !13929)
!13933 = !DILocation(line: 162, column: 15, scope: !13929)
!13934 = !DILocation(line: 162, column: 28, scope: !13929)
!13935 = !DILocation(line: 163, column: 1, scope: !13929)
!13936 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2195, file: !2195, line: 786, type: !12927, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !13937)
!13937 = !{!13938, !13939, !13941}
!13938 = !DILocalVariable(name: "thread", arg: 1, scope: !13936, file: !2195, line: 786, type: !2090)
!13939 = !DILocalVariable(name: "__i", scope: !13940, file: !2195, line: 788, type: !12961)
!13940 = distinct !DILexicalBlock(scope: !13936, file: !2195, line: 788, column: 2)
!13941 = !DILocalVariable(name: "__key", scope: !13940, file: !2195, line: 788, type: !12961)
!13942 = !DILocation(line: 0, scope: !13936)
!13943 = !DILocation(line: 0, scope: !13940)
!13944 = !DILocation(line: 0, scope: !12969, inlinedAt: !13945)
!13945 = distinct !DILocation(line: 788, column: 2, scope: !13940)
!13946 = !DILocation(line: 55, column: 2, scope: !12978, inlinedAt: !13947)
!13947 = distinct !DILocation(line: 145, column: 10, scope: !12969, inlinedAt: !13945)
!13948 = !DILocation(line: 0, scope: !12978, inlinedAt: !13947)
!13949 = !DILocation(line: 789, column: 3, scope: !13950)
!13950 = distinct !DILexicalBlock(scope: !13951, file: !2195, line: 788, column: 26)
!13951 = distinct !DILexicalBlock(scope: !13940, file: !2195, line: 788, column: 2)
!13952 = !DILocation(line: 0, scope: !12996, inlinedAt: !13953)
!13953 = distinct !DILocation(line: 788, column: 2, scope: !13951)
!13954 = !DILocation(line: 0, scope: !13004, inlinedAt: !13955)
!13955 = distinct !DILocation(line: 215, column: 2, scope: !12996, inlinedAt: !13953)
!13956 = !DILocation(line: 95, column: 2, scope: !13004, inlinedAt: !13955)
!13957 = !DILocation(line: 791, column: 1, scope: !13936)
!13958 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2195, file: !2195, line: 816, type: !13959, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !13961)
!13959 = !DISubroutineType(types: !13960)
!13960 = !{!103, !137, !2121, !13760}
!13961 = !{!13962, !13963, !13964, !13965, !13966, !13968}
!13962 = !DILocalVariable(name: "key", arg: 1, scope: !13958, file: !2195, line: 816, type: !137)
!13963 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13958, file: !2195, line: 816, type: !2121)
!13964 = !DILocalVariable(name: "timeout", arg: 3, scope: !13958, file: !2195, line: 816, type: !13760)
!13965 = !DILocalVariable(name: "ret", scope: !13958, file: !2195, line: 828, type: !103)
!13966 = !DILocalVariable(name: "__i", scope: !13967, file: !2195, line: 829, type: !12961)
!13967 = distinct !DILexicalBlock(scope: !13958, file: !2195, line: 829, column: 2)
!13968 = !DILocalVariable(name: "__key", scope: !13967, file: !2195, line: 829, type: !12961)
!13969 = !DILocation(line: 0, scope: !13958)
!13970 = !DILocation(line: 823, column: 14, scope: !13958)
!13971 = !DILocation(line: 823, column: 2, scope: !13958)
!13972 = !DILocation(line: 826, column: 20, scope: !13958)
!13973 = !DILocation(line: 826, column: 18, scope: !13958)
!13974 = !DILocation(line: 828, column: 12, scope: !13958)
!13975 = !DILocation(line: 0, scope: !13967)
!13976 = !DILocation(line: 0, scope: !12969, inlinedAt: !13977)
!13977 = distinct !DILocation(line: 829, column: 2, scope: !13967)
!13978 = !DILocation(line: 55, column: 2, scope: !12978, inlinedAt: !13979)
!13979 = distinct !DILocation(line: 145, column: 10, scope: !12969, inlinedAt: !13977)
!13980 = !DILocation(line: 0, scope: !12978, inlinedAt: !13979)
!13981 = !DILocation(line: 830, column: 7, scope: !13982)
!13982 = distinct !DILexicalBlock(scope: !13983, file: !2195, line: 830, column: 7)
!13983 = distinct !DILexicalBlock(scope: !13984, file: !2195, line: 829, column: 26)
!13984 = distinct !DILexicalBlock(scope: !13967, file: !2195, line: 829, column: 2)
!13985 = !DILocation(line: 830, column: 26, scope: !13982)
!13986 = !DILocation(line: 830, column: 23, scope: !13982)
!13987 = !DILocation(line: 830, column: 7, scope: !13983)
!13988 = !DILocation(line: 831, column: 20, scope: !13989)
!13989 = distinct !DILexicalBlock(scope: !13982, file: !2195, line: 830, column: 36)
!13990 = !DILocation(line: 832, column: 3, scope: !13989)
!13991 = !DILocation(line: 0, scope: !12996, inlinedAt: !13992)
!13992 = distinct !DILocation(line: 829, column: 2, scope: !13984)
!13993 = !DILocation(line: 0, scope: !13004, inlinedAt: !13994)
!13994 = distinct !DILocation(line: 215, column: 2, scope: !12996, inlinedAt: !13992)
!13995 = !DILocation(line: 95, column: 2, scope: !13004, inlinedAt: !13994)
!13996 = !DILocation(line: 834, column: 2, scope: !13958)
!13997 = distinct !DISubprogram(name: "z_pend_curr", scope: !2195, file: !2195, line: 840, type: !13998, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !14000)
!13998 = !DISubroutineType(types: !13999)
!13999 = !{!103, !12972, !12961, !2121, !13760}
!14000 = !{!14001, !14002, !14003, !14004}
!14001 = !DILocalVariable(name: "lock", arg: 1, scope: !13997, file: !2195, line: 840, type: !12972)
!14002 = !DILocalVariable(name: "key", arg: 2, scope: !13997, file: !2195, line: 840, type: !12961)
!14003 = !DILocalVariable(name: "wait_q", arg: 3, scope: !13997, file: !2195, line: 841, type: !2121)
!14004 = !DILocalVariable(name: "timeout", arg: 4, scope: !13997, file: !2195, line: 841, type: !13760)
!14005 = !DILocation(line: 0, scope: !13997)
!14006 = !DILocation(line: 844, column: 20, scope: !13997)
!14007 = !DILocation(line: 844, column: 18, scope: !13997)
!14008 = !DILocation(line: 0, scope: !12969, inlinedAt: !14009)
!14009 = distinct !DILocation(line: 856, column: 9, scope: !13997)
!14010 = !DILocation(line: 55, column: 2, scope: !12978, inlinedAt: !14011)
!14011 = distinct !DILocation(line: 145, column: 10, scope: !12969, inlinedAt: !14009)
!14012 = !DILocation(line: 0, scope: !12978, inlinedAt: !14011)
!14013 = !DILocation(line: 857, column: 14, scope: !13997)
!14014 = !DILocation(line: 857, column: 2, scope: !13997)
!14015 = !DILocation(line: 0, scope: !13580, inlinedAt: !14016)
!14016 = distinct !DILocation(line: 859, column: 9, scope: !13997)
!14017 = !DILocation(line: 196, column: 9, scope: !13580, inlinedAt: !14016)
!14018 = !DILocation(line: 859, column: 2, scope: !13997)
!14019 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2195, file: !2195, line: 862, type: !14020, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !14022)
!14020 = !DISubroutineType(types: !14021)
!14021 = !{!2090, !2121}
!14022 = !{!14023, !14024, !14025, !14027}
!14023 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14019, file: !2195, line: 862, type: !2121)
!14024 = !DILocalVariable(name: "thread", scope: !14019, file: !2195, line: 864, type: !2090)
!14025 = !DILocalVariable(name: "__i", scope: !14026, file: !2195, line: 866, type: !12961)
!14026 = distinct !DILexicalBlock(scope: !14019, file: !2195, line: 866, column: 2)
!14027 = !DILocalVariable(name: "__key", scope: !14026, file: !2195, line: 866, type: !12961)
!14028 = !DILocation(line: 0, scope: !14019)
!14029 = !DILocation(line: 0, scope: !14026)
!14030 = !DILocation(line: 0, scope: !12969, inlinedAt: !14031)
!14031 = distinct !DILocation(line: 866, column: 2, scope: !14026)
!14032 = !DILocation(line: 55, column: 2, scope: !12978, inlinedAt: !14033)
!14033 = distinct !DILocation(line: 145, column: 10, scope: !12969, inlinedAt: !14031)
!14034 = !DILocation(line: 0, scope: !12978, inlinedAt: !14033)
!14035 = !DILocation(line: 867, column: 12, scope: !14036)
!14036 = distinct !DILexicalBlock(scope: !14037, file: !2195, line: 866, column: 26)
!14037 = distinct !DILexicalBlock(scope: !14026, file: !2195, line: 866, column: 2)
!14038 = !DILocation(line: 869, column: 14, scope: !14039)
!14039 = distinct !DILexicalBlock(scope: !14036, file: !2195, line: 869, column: 7)
!14040 = !DILocation(line: 869, column: 7, scope: !14036)
!14041 = !DILocation(line: 870, column: 4, scope: !14042)
!14042 = distinct !DILexicalBlock(scope: !14039, file: !2195, line: 869, column: 23)
!14043 = !DILocation(line: 871, column: 3, scope: !14042)
!14044 = !DILocation(line: 0, scope: !12996, inlinedAt: !14045)
!14045 = distinct !DILocation(line: 866, column: 2, scope: !14037)
!14046 = !DILocation(line: 0, scope: !13004, inlinedAt: !14047)
!14047 = distinct !DILocation(line: 215, column: 2, scope: !12996, inlinedAt: !14045)
!14048 = !DILocation(line: 95, column: 2, scope: !13004, inlinedAt: !14047)
!14049 = !DILocation(line: 874, column: 2, scope: !14019)
!14050 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2195, file: !2195, line: 877, type: !14020, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !14051)
!14051 = !{!14052, !14053, !14054, !14056}
!14052 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14050, file: !2195, line: 877, type: !2121)
!14053 = !DILocalVariable(name: "thread", scope: !14050, file: !2195, line: 879, type: !2090)
!14054 = !DILocalVariable(name: "__i", scope: !14055, file: !2195, line: 881, type: !12961)
!14055 = distinct !DILexicalBlock(scope: !14050, file: !2195, line: 881, column: 2)
!14056 = !DILocalVariable(name: "__key", scope: !14055, file: !2195, line: 881, type: !12961)
!14057 = !DILocation(line: 0, scope: !14050)
!14058 = !DILocation(line: 0, scope: !14055)
!14059 = !DILocation(line: 0, scope: !12969, inlinedAt: !14060)
!14060 = distinct !DILocation(line: 881, column: 2, scope: !14055)
!14061 = !DILocation(line: 55, column: 2, scope: !12978, inlinedAt: !14062)
!14062 = distinct !DILocation(line: 145, column: 10, scope: !12969, inlinedAt: !14060)
!14063 = !DILocation(line: 0, scope: !12978, inlinedAt: !14062)
!14064 = !DILocation(line: 882, column: 12, scope: !14065)
!14065 = distinct !DILexicalBlock(scope: !14066, file: !2195, line: 881, column: 26)
!14066 = distinct !DILexicalBlock(scope: !14055, file: !2195, line: 881, column: 2)
!14067 = !DILocation(line: 884, column: 14, scope: !14068)
!14068 = distinct !DILexicalBlock(scope: !14065, file: !2195, line: 884, column: 7)
!14069 = !DILocation(line: 884, column: 7, scope: !14065)
!14070 = !DILocation(line: 885, column: 4, scope: !14071)
!14071 = distinct !DILexicalBlock(scope: !14068, file: !2195, line: 884, column: 23)
!14072 = !DILocation(line: 886, column: 10, scope: !14071)
!14073 = !DILocation(line: 887, column: 3, scope: !14071)
!14074 = !DILocation(line: 0, scope: !12996, inlinedAt: !14075)
!14075 = distinct !DILocation(line: 881, column: 2, scope: !14066)
!14076 = !DILocation(line: 0, scope: !13004, inlinedAt: !14077)
!14077 = distinct !DILocation(line: 215, column: 2, scope: !12996, inlinedAt: !14075)
!14078 = !DILocation(line: 95, column: 2, scope: !13004, inlinedAt: !14077)
!14079 = !DILocation(line: 890, column: 2, scope: !14050)
!14080 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2195, file: !2195, line: 893, type: !12927, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !14081)
!14081 = !{!14082}
!14082 = !DILocalVariable(name: "thread", arg: 1, scope: !14080, file: !2195, line: 893, type: !2090)
!14083 = !DILocation(line: 0, scope: !14080)
!14084 = !DILocation(line: 0, scope: !13936, inlinedAt: !14085)
!14085 = distinct !DILocation(line: 895, column: 2, scope: !14080)
!14086 = !DILocation(line: 0, scope: !13940, inlinedAt: !14085)
!14087 = !DILocation(line: 0, scope: !12969, inlinedAt: !14088)
!14088 = distinct !DILocation(line: 788, column: 2, scope: !13940, inlinedAt: !14085)
!14089 = !DILocation(line: 55, column: 2, scope: !12978, inlinedAt: !14090)
!14090 = distinct !DILocation(line: 145, column: 10, scope: !12969, inlinedAt: !14088)
!14091 = !DILocation(line: 0, scope: !12978, inlinedAt: !14090)
!14092 = !DILocation(line: 789, column: 3, scope: !13950, inlinedAt: !14085)
!14093 = !DILocation(line: 0, scope: !12996, inlinedAt: !14094)
!14094 = distinct !DILocation(line: 788, column: 2, scope: !13951, inlinedAt: !14085)
!14095 = !DILocation(line: 0, scope: !13004, inlinedAt: !14096)
!14096 = distinct !DILocation(line: 215, column: 2, scope: !12996, inlinedAt: !14094)
!14097 = !DILocation(line: 95, column: 2, scope: !13004, inlinedAt: !14096)
!14098 = !DILocation(line: 896, column: 8, scope: !14080)
!14099 = !DILocation(line: 897, column: 1, scope: !14080)
!14100 = distinct !DISubprogram(name: "z_set_prio", scope: !2195, file: !2195, line: 902, type: !13289, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !14101)
!14101 = !{!14102, !14103, !14104, !14105, !14107}
!14102 = !DILocalVariable(name: "thread", arg: 1, scope: !14100, file: !2195, line: 902, type: !2090)
!14103 = !DILocalVariable(name: "prio", arg: 2, scope: !14100, file: !2195, line: 902, type: !103)
!14104 = !DILocalVariable(name: "need_sched", scope: !14100, file: !2195, line: 904, type: !211)
!14105 = !DILocalVariable(name: "__i", scope: !14106, file: !2195, line: 906, type: !12961)
!14106 = distinct !DILexicalBlock(scope: !14100, file: !2195, line: 906, column: 2)
!14107 = !DILocalVariable(name: "__key", scope: !14106, file: !2195, line: 906, type: !12961)
!14108 = !DILocation(line: 0, scope: !14100)
!14109 = !DILocation(line: 0, scope: !14106)
!14110 = !DILocation(line: 0, scope: !12969, inlinedAt: !14111)
!14111 = distinct !DILocation(line: 906, column: 2, scope: !14106)
!14112 = !DILocation(line: 55, column: 2, scope: !12978, inlinedAt: !14113)
!14113 = distinct !DILocation(line: 145, column: 10, scope: !12969, inlinedAt: !14111)
!14114 = !DILocation(line: 0, scope: !12978, inlinedAt: !14113)
!14115 = !DILocation(line: 907, column: 16, scope: !14116)
!14116 = distinct !DILexicalBlock(scope: !14117, file: !2195, line: 906, column: 26)
!14117 = distinct !DILexicalBlock(scope: !14106, file: !2195, line: 906, column: 2)
!14118 = !DILocation(line: 909, column: 7, scope: !14116)
!14119 = !DILocation(line: 0, scope: !13138, inlinedAt: !14120)
!14120 = distinct !DILocation(line: 912, column: 5, scope: !14121)
!14121 = distinct !DILexicalBlock(scope: !14122, file: !2195, line: 911, column: 63)
!14122 = distinct !DILexicalBlock(scope: !14123, file: !2195, line: 911, column: 8)
!14123 = distinct !DILexicalBlock(scope: !14124, file: !2195, line: 909, column: 19)
!14124 = distinct !DILexicalBlock(scope: !14116, file: !2195, line: 909, column: 7)
!14125 = !DILocation(line: 266, column: 28, scope: !13138, inlinedAt: !14120)
!14126 = !DILocation(line: 0, scope: !13146, inlinedAt: !14127)
!14127 = distinct !DILocation(line: 268, column: 3, scope: !13150, inlinedAt: !14120)
!14128 = !DILocation(line: 234, column: 2, scope: !13146, inlinedAt: !14127)
!14129 = !DILocation(line: 913, column: 23, scope: !14121)
!14130 = !DILocation(line: 0, scope: !13155, inlinedAt: !14131)
!14131 = distinct !DILocation(line: 914, column: 5, scope: !14121)
!14132 = !DILocation(line: 252, column: 28, scope: !13155, inlinedAt: !14131)
!14133 = !DILocation(line: 0, scope: !13162, inlinedAt: !14134)
!14134 = distinct !DILocation(line: 254, column: 3, scope: !13166, inlinedAt: !14131)
!14135 = !DILocation(line: 0, scope: !13169, inlinedAt: !14136)
!14136 = distinct !DILocation(line: 229, column: 2, scope: !13162, inlinedAt: !14134)
!14137 = !DILocation(line: 188, column: 2, scope: !13179, inlinedAt: !14136)
!14138 = !DILocation(line: 188, column: 2, scope: !13181, inlinedAt: !14136)
!14139 = !DILocation(line: 0, scope: !13179, inlinedAt: !14136)
!14140 = !DILocation(line: 189, column: 7, scope: !13184, inlinedAt: !14136)
!14141 = !DILocation(line: 189, column: 35, scope: !13184, inlinedAt: !14136)
!14142 = !DILocation(line: 189, column: 7, scope: !13185, inlinedAt: !14136)
!14143 = !DILocation(line: 190, column: 4, scope: !13189, inlinedAt: !14136)
!14144 = !DILocation(line: 192, column: 4, scope: !13189, inlinedAt: !14136)
!14145 = distinct !{!14145, !14137, !14146}
!14146 = !DILocation(line: 194, column: 2, scope: !13179, inlinedAt: !14136)
!14147 = !DILocation(line: 196, column: 2, scope: !13169, inlinedAt: !14136)
!14148 = !DILocation(line: 197, column: 1, scope: !13169, inlinedAt: !14136)
!14149 = !DILocation(line: 918, column: 4, scope: !14123)
!14150 = !DILocation(line: 919, column: 3, scope: !14123)
!14151 = !DILocation(line: 920, column: 22, scope: !14152)
!14152 = distinct !DILexicalBlock(scope: !14124, file: !2195, line: 919, column: 10)
!14153 = !DILocation(line: 0, scope: !12996, inlinedAt: !14154)
!14154 = distinct !DILocation(line: 906, column: 2, scope: !14117)
!14155 = !DILocation(line: 0, scope: !13004, inlinedAt: !14156)
!14156 = distinct !DILocation(line: 215, column: 2, scope: !12996, inlinedAt: !14154)
!14157 = !DILocation(line: 95, column: 2, scope: !13004, inlinedAt: !14156)
!14158 = !DILocation(line: 926, column: 2, scope: !14100)
!14159 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2195, file: !2195, line: 929, type: !14160, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !14162)
!14160 = !DISubroutineType(types: !14161)
!14161 = !{null, !2090, !103}
!14162 = !{!14163, !14164, !14165}
!14163 = !DILocalVariable(name: "thread", arg: 1, scope: !14159, file: !2195, line: 929, type: !2090)
!14164 = !DILocalVariable(name: "prio", arg: 2, scope: !14159, file: !2195, line: 929, type: !103)
!14165 = !DILocalVariable(name: "need_sched", scope: !14159, file: !2195, line: 931, type: !211)
!14166 = !DILocation(line: 0, scope: !14159)
!14167 = !DILocation(line: 931, column: 20, scope: !14159)
!14168 = !DILocation(line: 935, column: 17, scope: !14169)
!14169 = distinct !DILexicalBlock(scope: !14159, file: !2195, line: 935, column: 6)
!14170 = !DILocation(line: 935, column: 20, scope: !14169)
!14171 = !DILocation(line: 935, column: 35, scope: !14169)
!14172 = !DILocation(line: 935, column: 48, scope: !14169)
!14173 = !DILocation(line: 935, column: 6, scope: !14159)
!14174 = !DILocation(line: 936, column: 3, scope: !14175)
!14175 = distinct !DILexicalBlock(scope: !14169, file: !2195, line: 935, column: 55)
!14176 = !DILocation(line: 937, column: 2, scope: !14175)
!14177 = !DILocation(line: 938, column: 1, scope: !14159)
!14178 = distinct !DISubprogram(name: "k_sched_lock", scope: !2195, file: !2195, line: 987, type: !2848, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !14179)
!14179 = !{!14180, !14182}
!14180 = !DILocalVariable(name: "__i", scope: !14181, file: !2195, line: 989, type: !12961)
!14181 = distinct !DILexicalBlock(scope: !14178, file: !2195, line: 989, column: 2)
!14182 = !DILocalVariable(name: "__key", scope: !14181, file: !2195, line: 989, type: !12961)
!14183 = !DILocation(line: 0, scope: !14181)
!14184 = !DILocation(line: 0, scope: !12969, inlinedAt: !14185)
!14185 = distinct !DILocation(line: 989, column: 2, scope: !14181)
!14186 = !DILocation(line: 55, column: 2, scope: !12978, inlinedAt: !14187)
!14187 = distinct !DILocation(line: 145, column: 10, scope: !12969, inlinedAt: !14185)
!14188 = !DILocation(line: 0, scope: !12978, inlinedAt: !14187)
!14189 = !DILocation(line: 992, column: 3, scope: !14190)
!14190 = distinct !DILexicalBlock(scope: !14191, file: !2195, line: 989, column: 26)
!14191 = distinct !DILexicalBlock(scope: !14181, file: !2195, line: 989, column: 2)
!14192 = !DILocation(line: 0, scope: !12996, inlinedAt: !14193)
!14193 = distinct !DILocation(line: 989, column: 2, scope: !14191)
!14194 = !DILocation(line: 0, scope: !13004, inlinedAt: !14195)
!14195 = distinct !DILocation(line: 215, column: 2, scope: !12996, inlinedAt: !14193)
!14196 = !DILocation(line: 95, column: 2, scope: !13004, inlinedAt: !14195)
!14197 = !DILocation(line: 994, column: 1, scope: !14178)
!14198 = distinct !DISubprogram(name: "z_sched_lock", scope: !12241, file: !12241, line: 251, type: !2848, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !162)
!14199 = !DILocation(line: 256, column: 4, scope: !14198)
!14200 = !DILocation(line: 256, column: 19, scope: !14198)
!14201 = !DILocation(line: 256, column: 2, scope: !14198)
!14202 = !DILocation(line: 258, column: 2, scope: !14203)
!14203 = distinct !DILexicalBlock(scope: !14198, file: !12241, line: 258, column: 2)
!14204 = !{i64 2154274867}
!14205 = !DILocation(line: 259, column: 1, scope: !14198)
!14206 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2195, file: !2195, line: 996, type: !2848, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !14207)
!14207 = !{!14208, !14210}
!14208 = !DILocalVariable(name: "__i", scope: !14209, file: !2195, line: 998, type: !12961)
!14209 = distinct !DILexicalBlock(scope: !14206, file: !2195, line: 998, column: 2)
!14210 = !DILocalVariable(name: "__key", scope: !14209, file: !2195, line: 998, type: !12961)
!14211 = !DILocation(line: 0, scope: !14209)
!14212 = !DILocation(line: 0, scope: !12969, inlinedAt: !14213)
!14213 = distinct !DILocation(line: 998, column: 2, scope: !14209)
!14214 = !DILocation(line: 55, column: 2, scope: !12978, inlinedAt: !14215)
!14215 = distinct !DILocation(line: 145, column: 10, scope: !12969, inlinedAt: !14213)
!14216 = !DILocation(line: 0, scope: !12978, inlinedAt: !14215)
!14217 = !DILocation(line: 1002, column: 5, scope: !14218)
!14218 = distinct !DILexicalBlock(scope: !14219, file: !2195, line: 998, column: 26)
!14219 = distinct !DILexicalBlock(scope: !14209, file: !2195, line: 998, column: 2)
!14220 = !DILocation(line: 1002, column: 20, scope: !14218)
!14221 = !DILocation(line: 1002, column: 3, scope: !14218)
!14222 = !DILocation(line: 1003, column: 3, scope: !14218)
!14223 = !DILocation(line: 0, scope: !12996, inlinedAt: !14224)
!14224 = distinct !DILocation(line: 998, column: 2, scope: !14219)
!14225 = !DILocation(line: 0, scope: !13004, inlinedAt: !14226)
!14226 = distinct !DILocation(line: 215, column: 2, scope: !12996, inlinedAt: !14224)
!14227 = !DILocation(line: 95, column: 2, scope: !13004, inlinedAt: !14226)
!14228 = !DILocation(line: 1011, column: 2, scope: !14206)
!14229 = !DILocation(line: 1012, column: 1, scope: !14206)
!14230 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2195, file: !2195, line: 1014, type: !13277, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !162)
!14231 = !DILocation(line: 1028, column: 25, scope: !14230)
!14232 = !DILocation(line: 1028, column: 2, scope: !14230)
!14233 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2195, file: !2195, line: 1155, type: !14234, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !14236)
!14234 = !DISubroutineType(types: !14235)
!14235 = !{!211, !2119, !2119}
!14236 = !{!14237, !14238, !14239, !14240, !14241}
!14237 = !DILocalVariable(name: "a", arg: 1, scope: !14233, file: !2195, line: 1155, type: !2119)
!14238 = !DILocalVariable(name: "b", arg: 2, scope: !14233, file: !2195, line: 1155, type: !2119)
!14239 = !DILocalVariable(name: "thread_a", scope: !14233, file: !2195, line: 1157, type: !2090)
!14240 = !DILocalVariable(name: "thread_b", scope: !14233, file: !2195, line: 1157, type: !2090)
!14241 = !DILocalVariable(name: "cmp", scope: !14233, file: !2195, line: 1158, type: !611)
!14242 = !DILocation(line: 0, scope: !14233)
!14243 = !DILocation(line: 1160, column: 13, scope: !14233)
!14244 = !DILocation(line: 1161, column: 13, scope: !14233)
!14245 = !DILocation(line: 1163, column: 8, scope: !14233)
!14246 = !DILocation(line: 1165, column: 10, scope: !14247)
!14247 = distinct !DILexicalBlock(scope: !14233, file: !2195, line: 1165, column: 6)
!14248 = !DILocation(line: 1165, column: 6, scope: !14233)
!14249 = !DILocation(line: 1167, column: 17, scope: !14250)
!14250 = distinct !DILexicalBlock(scope: !14247, file: !2195, line: 1167, column: 13)
!14251 = !DILocation(line: 1167, column: 13, scope: !14247)
!14252 = !DILocation(line: 1170, column: 25, scope: !14253)
!14253 = distinct !DILexicalBlock(scope: !14250, file: !2195, line: 1169, column: 9)
!14254 = !DILocation(line: 1170, column: 52, scope: !14253)
!14255 = !DILocation(line: 1170, column: 35, scope: !14253)
!14256 = !DILocation(line: 1170, column: 3, scope: !14253)
!14257 = !DILocation(line: 0, scope: !14247)
!14258 = !DILocation(line: 1173, column: 1, scope: !14233)
!14259 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2195, file: !2195, line: 1175, type: !14260, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !14275)
!14260 = !DISubroutineType(types: !14261)
!14261 = !{null, !14262, !2090}
!14262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14263, size: 32)
!14263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !14264, line: 37, size: 128, elements: !14265)
!14264 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14265 = !{!14266, !14274}
!14266 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !14263, file: !14264, line: 38, baseType: !14267, size: 96)
!14267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !289, line: 83, size: 96, elements: !14268)
!14268 = !{!14269, !14270, !14273}
!14269 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !14267, file: !289, line: 84, baseType: !2119, size: 32)
!14270 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !14267, file: !289, line: 85, baseType: !14271, size: 32, offset: 32)
!14271 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !289, line: 81, baseType: !14272)
!14272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14234, size: 32)
!14273 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !14267, file: !289, line: 86, baseType: !103, size: 32, offset: 64)
!14274 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !14263, file: !14264, line: 39, baseType: !103, size: 32, offset: 96)
!14275 = !{!14276, !14277, !14278, !14279, !14288}
!14276 = !DILocalVariable(name: "pq", arg: 1, scope: !14259, file: !2195, line: 1175, type: !14262)
!14277 = !DILocalVariable(name: "thread", arg: 2, scope: !14259, file: !2195, line: 1175, type: !2090)
!14278 = !DILocalVariable(name: "t", scope: !14259, file: !2195, line: 1177, type: !2090)
!14279 = !DILocalVariable(name: "__f", scope: !14280, file: !2195, line: 1190, type: !14283)
!14280 = distinct !DILexicalBlock(scope: !14281, file: !2195, line: 1190, column: 3)
!14281 = distinct !DILexicalBlock(scope: !14282, file: !2195, line: 1189, column: 27)
!14282 = distinct !DILexicalBlock(scope: !14259, file: !2195, line: 1189, column: 6)
!14283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !289, line: 155, size: 96, elements: !14284)
!14284 = !{!14285, !14286, !14287}
!14285 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !14283, file: !289, line: 156, baseType: !2190, size: 32)
!14286 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !14283, file: !289, line: 157, baseType: !1742, size: 32, offset: 32)
!14287 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !14283, file: !289, line: 158, baseType: !611, size: 32, offset: 64)
!14288 = !DILocalVariable(name: "n", scope: !14289, file: !2195, line: 1190, type: !2119)
!14289 = distinct !DILexicalBlock(scope: !14290, file: !2195, line: 1190, column: 3)
!14290 = distinct !DILexicalBlock(scope: !14280, file: !2195, line: 1190, column: 3)
!14291 = !DILocation(line: 0, scope: !14259)
!14292 = !DILocation(line: 1181, column: 31, scope: !14259)
!14293 = !DILocation(line: 1181, column: 45, scope: !14259)
!14294 = !DILocation(line: 1181, column: 15, scope: !14259)
!14295 = !DILocation(line: 1181, column: 25, scope: !14259)
!14296 = !DILocation(line: 1189, column: 11, scope: !14282)
!14297 = !DILocation(line: 1189, column: 7, scope: !14282)
!14298 = !DILocation(line: 1189, column: 6, scope: !14259)
!14299 = !DILocation(line: 1190, column: 3, scope: !14280)
!14300 = !DILocation(line: 1190, column: 3, scope: !14289)
!14301 = !DILocation(line: 0, scope: !14289)
!14302 = !DILocation(line: 1190, column: 3, scope: !14290)
!14303 = !DILocation(line: 1193, column: 2, scope: !14281)
!14304 = !DILocation(line: 1191, column: 42, scope: !14305)
!14305 = distinct !DILexicalBlock(scope: !14290, file: !2195, line: 1190, column: 54)
!14306 = !DILocation(line: 1191, column: 12, scope: !14305)
!14307 = !DILocation(line: 1191, column: 22, scope: !14305)
!14308 = distinct !{!14308, !14299, !14309}
!14309 = !DILocation(line: 1192, column: 3, scope: !14280)
!14310 = !DILocation(line: 1195, column: 17, scope: !14259)
!14311 = !DILocation(line: 1195, column: 37, scope: !14259)
!14312 = !DILocation(line: 1195, column: 2, scope: !14259)
!14313 = !DILocation(line: 1196, column: 1, scope: !14259)
!14314 = !DISubprogram(name: "z_rb_foreach_next", scope: !289, file: !289, line: 176, type: !14315, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!14315 = !DISubroutineType(types: !14316)
!14316 = !{!2119, !14317, !14318}
!14317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14267, size: 32)
!14318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14283, size: 32)
!14319 = !DISubprogram(name: "rb_insert", scope: !289, file: !289, line: 105, type: !14320, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!14320 = !DISubroutineType(types: !14321)
!14321 = !{null, !14317, !2119}
!14322 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2195, file: !2195, line: 1198, type: !14260, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !14323)
!14323 = !{!14324, !14325}
!14324 = !DILocalVariable(name: "pq", arg: 1, scope: !14322, file: !2195, line: 1198, type: !14262)
!14325 = !DILocalVariable(name: "thread", arg: 2, scope: !14322, file: !2195, line: 1198, type: !2090)
!14326 = !DILocation(line: 0, scope: !14322)
!14327 = !DILocation(line: 1202, column: 17, scope: !14322)
!14328 = !DILocation(line: 1202, column: 37, scope: !14322)
!14329 = !DILocation(line: 1202, column: 2, scope: !14322)
!14330 = !DILocation(line: 1204, column: 16, scope: !14331)
!14331 = distinct !DILexicalBlock(scope: !14322, file: !2195, line: 1204, column: 6)
!14332 = !DILocation(line: 1204, column: 7, scope: !14331)
!14333 = !DILocation(line: 1204, column: 6, scope: !14322)
!14334 = !DILocation(line: 1205, column: 7, scope: !14335)
!14335 = distinct !DILexicalBlock(scope: !14331, file: !2195, line: 1204, column: 22)
!14336 = !DILocation(line: 1205, column: 22, scope: !14335)
!14337 = !DILocation(line: 1206, column: 2, scope: !14335)
!14338 = !DILocation(line: 1207, column: 1, scope: !14322)
!14339 = !DISubprogram(name: "rb_remove", scope: !289, file: !289, line: 110, type: !14320, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!14340 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2195, file: !2195, line: 1209, type: !14341, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !14343)
!14341 = !DISubroutineType(types: !14342)
!14342 = !{!2090, !14262}
!14343 = !{!14344, !14345, !14346}
!14344 = !DILocalVariable(name: "pq", arg: 1, scope: !14340, file: !2195, line: 1209, type: !14262)
!14345 = !DILocalVariable(name: "thread", scope: !14340, file: !2195, line: 1211, type: !2090)
!14346 = !DILocalVariable(name: "n", scope: !14340, file: !2195, line: 1212, type: !2119)
!14347 = !DILocation(line: 0, scope: !14340)
!14348 = !DILocation(line: 1212, column: 37, scope: !14340)
!14349 = !DILocation(line: 1212, column: 21, scope: !14340)
!14350 = !DILocation(line: 1217, column: 2, scope: !14340)
!14351 = distinct !DISubprogram(name: "rb_get_min", scope: !289, file: !289, line: 115, type: !14352, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !14354)
!14352 = !DISubroutineType(types: !14353)
!14353 = !{!2119, !14317}
!14354 = !{!14355}
!14355 = !DILocalVariable(name: "tree", arg: 1, scope: !14351, file: !289, line: 115, type: !14317)
!14356 = !DILocation(line: 0, scope: !14351)
!14357 = !DILocation(line: 117, column: 9, scope: !14351)
!14358 = !DILocation(line: 117, column: 2, scope: !14351)
!14359 = !DISubprogram(name: "z_rb_get_minmax", scope: !289, file: !289, line: 100, type: !14360, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!14360 = !DISubroutineType(types: !14361)
!14361 = !{!2119, !14317, !208}
!14362 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2195, file: !2195, line: 1246, type: !14363, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !14373)
!14363 = !DISubroutineType(types: !14364)
!14364 = !{!2090, !14365}
!14365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14366, size: 32)
!14366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !14264, line: 53, size: 2080, elements: !14367)
!14367 = !{!14368, !14372}
!14368 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !14366, file: !14264, line: 54, baseType: !14369, size: 2048)
!14369 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2126, size: 2048, elements: !14370)
!14370 = !{!14371}
!14371 = !DISubrange(count: 32)
!14372 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !14366, file: !14264, line: 55, baseType: !32, size: 32, offset: 2048)
!14373 = !{!14374, !14375, !14376, !14377}
!14374 = !DILocalVariable(name: "pq", arg: 1, scope: !14362, file: !2195, line: 1246, type: !14365)
!14375 = !DILocalVariable(name: "thread", scope: !14362, file: !2195, line: 1252, type: !2090)
!14376 = !DILocalVariable(name: "l", scope: !14362, file: !2195, line: 1253, type: !13172)
!14377 = !DILocalVariable(name: "n", scope: !14362, file: !2195, line: 1254, type: !2191)
!14378 = !DILocation(line: 0, scope: !14362)
!14379 = !DILocation(line: 1248, column: 11, scope: !14380)
!14380 = distinct !DILexicalBlock(scope: !14362, file: !2195, line: 1248, column: 6)
!14381 = !DILocation(line: 1248, column: 7, scope: !14380)
!14382 = !DILocation(line: 1248, column: 6, scope: !14362)
!14383 = !DILocation(line: 1253, column: 31, scope: !14362)
!14384 = !DILocation(line: 1253, column: 20, scope: !14362)
!14385 = !DILocation(line: 1254, column: 19, scope: !14362)
!14386 = !DILocation(line: 1260, column: 1, scope: !14362)
!14387 = distinct !DISubprogram(name: "z_unpend_all", scope: !2195, file: !2195, line: 1262, type: !14388, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !14390)
!14388 = !DISubroutineType(types: !14389)
!14389 = !{!103, !2121}
!14390 = !{!14391, !14392, !14393}
!14391 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14387, file: !2195, line: 1262, type: !2121)
!14392 = !DILocalVariable(name: "need_sched", scope: !14387, file: !2195, line: 1264, type: !103)
!14393 = !DILocalVariable(name: "thread", scope: !14387, file: !2195, line: 1265, type: !2090)
!14394 = !DILocation(line: 0, scope: !14387)
!14395 = !DILocation(line: 1267, column: 19, scope: !14387)
!14396 = !DILocation(line: 1267, column: 41, scope: !14387)
!14397 = !DILocation(line: 1267, column: 2, scope: !14387)
!14398 = !DILocation(line: 1268, column: 3, scope: !14399)
!14399 = distinct !DILexicalBlock(scope: !14387, file: !2195, line: 1267, column: 50)
!14400 = !DILocation(line: 1269, column: 3, scope: !14399)
!14401 = distinct !{!14401, !14397, !14402}
!14402 = !DILocation(line: 1271, column: 2, scope: !14387)
!14403 = !DILocation(line: 1273, column: 2, scope: !14387)
!14404 = distinct !DISubprogram(name: "z_waitq_head", scope: !12567, file: !12567, line: 52, type: !14020, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !14405)
!14405 = !{!14406}
!14406 = !DILocalVariable(name: "w", arg: 1, scope: !14404, file: !12567, line: 52, type: !2121)
!14407 = !DILocation(line: 0, scope: !14404)
!14408 = !DILocation(line: 54, column: 52, scope: !14404)
!14409 = !DILocation(line: 54, column: 28, scope: !14404)
!14410 = !DILocation(line: 54, column: 9, scope: !14404)
!14411 = !DILocation(line: 54, column: 2, scope: !14404)
!14412 = distinct !DISubprogram(name: "init_ready_q", scope: !2195, file: !2195, line: 1276, type: !14413, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !14420)
!14413 = !DISubroutineType(types: !14414)
!14414 = !{null, !14415}
!14415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14416, size: 32)
!14416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !299, line: 83, size: 96, elements: !14417)
!14417 = !{!14418, !14419}
!14418 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !14416, file: !299, line: 86, baseType: !2090, size: 32)
!14419 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !14416, file: !299, line: 90, baseType: !2126, size: 64, offset: 32)
!14420 = !{!14421}
!14421 = !DILocalVariable(name: "rq", arg: 1, scope: !14412, file: !2195, line: 1276, type: !14415)
!14422 = !DILocation(line: 0, scope: !14412)
!14423 = !DILocation(line: 1289, column: 22, scope: !14412)
!14424 = !DILocation(line: 1289, column: 2, scope: !14412)
!14425 = !DILocation(line: 1291, column: 1, scope: !14412)
!14426 = distinct !DISubprogram(name: "sys_dlist_init", scope: !273, file: !273, line: 197, type: !14427, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !14429)
!14427 = !DISubroutineType(types: !14428)
!14428 = !{null, !13172}
!14429 = !{!14430}
!14430 = !DILocalVariable(name: "list", arg: 1, scope: !14426, file: !273, line: 197, type: !13172)
!14431 = !DILocation(line: 0, scope: !14426)
!14432 = !DILocation(line: 199, column: 8, scope: !14426)
!14433 = !DILocation(line: 199, column: 13, scope: !14426)
!14434 = !DILocation(line: 200, column: 8, scope: !14426)
!14435 = !DILocation(line: 200, column: 13, scope: !14426)
!14436 = !DILocation(line: 201, column: 1, scope: !14426)
!14437 = distinct !DISubprogram(name: "z_sched_init", scope: !2195, file: !2195, line: 1293, type: !2848, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !162)
!14438 = !DILocation(line: 1302, column: 2, scope: !14437)
!14439 = !DILocation(line: 1306, column: 2, scope: !14437)
!14440 = !DILocation(line: 1309, column: 1, scope: !14437)
!14441 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2195, file: !2195, line: 1311, type: !14442, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !14445)
!14442 = !DISubroutineType(types: !14443)
!14443 = !{!103, !14444}
!14444 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !263, line: 347, baseType: !2090)
!14445 = !{!14446}
!14446 = !DILocalVariable(name: "thread", arg: 1, scope: !14441, file: !2195, line: 1311, type: !14444)
!14447 = !DILocation(line: 0, scope: !14441)
!14448 = !DILocation(line: 1313, column: 22, scope: !14441)
!14449 = !DILocation(line: 1313, column: 9, scope: !14441)
!14450 = !DILocation(line: 1313, column: 2, scope: !14441)
!14451 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2195, file: !2195, line: 1325, type: !14452, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !14454)
!14452 = !DISubroutineType(types: !14453)
!14453 = !{null, !14444, !103}
!14454 = !{!14455, !14456, !14457}
!14455 = !DILocalVariable(name: "thread", arg: 1, scope: !14451, file: !2195, line: 1325, type: !14444)
!14456 = !DILocalVariable(name: "prio", arg: 2, scope: !14451, file: !2195, line: 1325, type: !103)
!14457 = !DILocalVariable(name: "th", scope: !14451, file: !2195, line: 1334, type: !2090)
!14458 = !DILocation(line: 0, scope: !14451)
!14459 = !DILocation(line: 1336, column: 2, scope: !14451)
!14460 = !DILocation(line: 1337, column: 1, scope: !14451)
!14461 = distinct !DISubprogram(name: "k_can_yield", scope: !2195, file: !2195, line: 1384, type: !7115, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !162)
!14462 = !DILocation(line: 1386, column: 11, scope: !14461)
!14463 = !DILocation(line: 1386, column: 29, scope: !14461)
!14464 = !DILocation(line: 1386, column: 32, scope: !14461)
!14465 = !DILocation(line: 1386, column: 46, scope: !14461)
!14466 = !DILocation(line: 1387, column: 28, scope: !14461)
!14467 = !DILocation(line: 1387, column: 4, scope: !14461)
!14468 = !DILocation(line: 1386, column: 2, scope: !14461)
!14469 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !357, file: !357, line: 989, type: !7115, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !162)
!14470 = !DILocation(line: 993, column: 10, scope: !14469)
!14471 = !DILocation(line: 993, column: 2, scope: !14469)
!14472 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2195, file: !2195, line: 1390, type: !2848, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !14473)
!14473 = !{!14474}
!14474 = !DILocalVariable(name: "key", scope: !14472, file: !2195, line: 1396, type: !12961)
!14475 = !DILocation(line: 0, scope: !12969, inlinedAt: !14476)
!14476 = distinct !DILocation(line: 1396, column: 25, scope: !14472)
!14477 = !DILocation(line: 55, column: 2, scope: !12978, inlinedAt: !14478)
!14478 = distinct !DILocation(line: 145, column: 10, scope: !12969, inlinedAt: !14476)
!14479 = !DILocation(line: 0, scope: !12978, inlinedAt: !14478)
!14480 = !DILocation(line: 0, scope: !14472)
!14481 = !DILocation(line: 1400, column: 18, scope: !14482)
!14482 = distinct !DILexicalBlock(scope: !14483, file: !2195, line: 1399, column: 36)
!14483 = distinct !DILexicalBlock(scope: !14472, file: !2195, line: 1398, column: 6)
!14484 = !DILocation(line: 0, scope: !13138, inlinedAt: !14485)
!14485 = distinct !DILocation(line: 1400, column: 3, scope: !14482)
!14486 = !DILocation(line: 266, column: 15, scope: !13138, inlinedAt: !14485)
!14487 = !DILocation(line: 266, column: 28, scope: !13138, inlinedAt: !14485)
!14488 = !DILocation(line: 0, scope: !13146, inlinedAt: !14489)
!14489 = distinct !DILocation(line: 268, column: 3, scope: !13150, inlinedAt: !14485)
!14490 = !DILocation(line: 234, column: 2, scope: !13146, inlinedAt: !14489)
!14491 = !DILocation(line: 1402, column: 15, scope: !14472)
!14492 = !DILocation(line: 0, scope: !13155, inlinedAt: !14493)
!14493 = distinct !DILocation(line: 1402, column: 2, scope: !14472)
!14494 = !DILocation(line: 252, column: 15, scope: !13155, inlinedAt: !14493)
!14495 = !DILocation(line: 252, column: 28, scope: !13155, inlinedAt: !14493)
!14496 = !DILocation(line: 0, scope: !13162, inlinedAt: !14497)
!14497 = distinct !DILocation(line: 254, column: 3, scope: !13166, inlinedAt: !14493)
!14498 = !DILocation(line: 0, scope: !13169, inlinedAt: !14499)
!14499 = distinct !DILocation(line: 229, column: 2, scope: !13162, inlinedAt: !14497)
!14500 = !DILocation(line: 188, column: 2, scope: !13179, inlinedAt: !14499)
!14501 = !DILocation(line: 188, column: 2, scope: !13181, inlinedAt: !14499)
!14502 = !DILocation(line: 0, scope: !13179, inlinedAt: !14499)
!14503 = !DILocation(line: 189, column: 7, scope: !13184, inlinedAt: !14499)
!14504 = !DILocation(line: 189, column: 35, scope: !13184, inlinedAt: !14499)
!14505 = !DILocation(line: 189, column: 7, scope: !13185, inlinedAt: !14499)
!14506 = !DILocation(line: 191, column: 21, scope: !13189, inlinedAt: !14499)
!14507 = !DILocation(line: 190, column: 4, scope: !13189, inlinedAt: !14499)
!14508 = !DILocation(line: 192, column: 4, scope: !13189, inlinedAt: !14499)
!14509 = distinct !{!14509, !14500, !14510}
!14510 = !DILocation(line: 194, column: 2, scope: !13179, inlinedAt: !14499)
!14511 = !DILocation(line: 196, column: 37, scope: !13169, inlinedAt: !14499)
!14512 = !DILocation(line: 196, column: 2, scope: !13169, inlinedAt: !14499)
!14513 = !DILocation(line: 197, column: 1, scope: !13169, inlinedAt: !14499)
!14514 = !DILocation(line: 1403, column: 2, scope: !14472)
!14515 = !DILocation(line: 0, scope: !13580, inlinedAt: !14516)
!14516 = distinct !DILocation(line: 1404, column: 2, scope: !14472)
!14517 = !DILocation(line: 196, column: 9, scope: !13580, inlinedAt: !14516)
!14518 = !DILocation(line: 1405, column: 1, scope: !14472)
!14519 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2195, file: !2195, line: 1459, type: !14520, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !14522)
!14520 = !DISubroutineType(types: !14521)
!14521 = !{!611, !13760}
!14522 = !{!14523, !14524, !14525}
!14523 = !DILocalVariable(name: "timeout", arg: 1, scope: !14519, file: !2195, line: 1459, type: !13760)
!14524 = !DILocalVariable(name: "ticks", scope: !14519, file: !2195, line: 1461, type: !1445)
!14525 = !DILocalVariable(name: "ret", scope: !14519, file: !2195, line: 1480, type: !611)
!14526 = !DILocation(line: 0, scope: !14519)
!14527 = !DILocation(line: 1468, column: 6, scope: !14528)
!14528 = distinct !DILexicalBlock(scope: !14519, file: !2195, line: 1468, column: 6)
!14529 = !DILocation(line: 1468, column: 6, scope: !14519)
!14530 = !DILocation(line: 1469, column: 20, scope: !14531)
!14531 = distinct !DILexicalBlock(scope: !14528, file: !2195, line: 1468, column: 40)
!14532 = !DILocation(line: 1469, column: 3, scope: !14531)
!14533 = !DILocation(line: 1473, column: 3, scope: !14531)
!14534 = !DILocation(line: 1478, column: 10, scope: !14519)
!14535 = !DILocation(line: 1480, column: 16, scope: !14519)
!14536 = !DILocation(line: 1485, column: 1, scope: !14519)
!14537 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3298, file: !3298, line: 310, type: !14538, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !14540)
!14538 = !DISubroutineType(types: !14539)
!14539 = !{null, !14444}
!14540 = !{!14541}
!14541 = !DILocalVariable(name: "thread", arg: 1, scope: !14537, file: !3298, line: 310, type: !14444)
!14542 = !DILocation(line: 0, scope: !14537)
!14543 = !DILocation(line: 319, column: 2, scope: !14544)
!14544 = distinct !DILexicalBlock(scope: !14537, file: !3298, line: 319, column: 2)
!14545 = !{i64 2154193256}
!14546 = !DILocation(line: 320, column: 2, scope: !14537)
!14547 = !DILocation(line: 321, column: 1, scope: !14537)
!14548 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2195, file: !2195, line: 1415, type: !14549, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !14551)
!14549 = !DISubroutineType(types: !14550)
!14550 = !{!611, !1445}
!14551 = !{!14552, !14553, !14554, !14555}
!14552 = !DILocalVariable(name: "ticks", arg: 1, scope: !14548, file: !2195, line: 1415, type: !1445)
!14553 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !14548, file: !2195, line: 1418, type: !137)
!14554 = !DILocalVariable(name: "timeout", scope: !14548, file: !2195, line: 1430, type: !13760)
!14555 = !DILocalVariable(name: "key", scope: !14548, file: !2195, line: 1437, type: !12961)
!14556 = !DILocation(line: 0, scope: !14548)
!14557 = !DILocation(line: 1425, column: 12, scope: !14558)
!14558 = distinct !DILexicalBlock(scope: !14548, file: !2195, line: 1425, column: 6)
!14559 = !DILocation(line: 1425, column: 6, scope: !14548)
!14560 = !DILocation(line: 1426, column: 3, scope: !14561)
!14561 = distinct !DILexicalBlock(scope: !14558, file: !2195, line: 1425, column: 18)
!14562 = !DILocation(line: 1427, column: 3, scope: !14561)
!14563 = !DILocation(line: 1431, column: 24, scope: !14564)
!14564 = distinct !DILexicalBlock(scope: !14548, file: !2195, line: 1431, column: 6)
!14565 = !DILocation(line: 1431, column: 6, scope: !14548)
!14566 = !DILocation(line: 1432, column: 35, scope: !14567)
!14567 = distinct !DILexicalBlock(scope: !14564, file: !2195, line: 1431, column: 30)
!14568 = !DILocation(line: 1432, column: 27, scope: !14567)
!14569 = !DILocation(line: 1433, column: 2, scope: !14567)
!14570 = !DILocation(line: 1434, column: 27, scope: !14571)
!14571 = distinct !DILexicalBlock(scope: !14564, file: !2195, line: 1433, column: 9)
!14572 = !DILocation(line: 0, scope: !14564)
!14573 = !DILocation(line: 0, scope: !12969, inlinedAt: !14574)
!14574 = distinct !DILocation(line: 1437, column: 25, scope: !14548)
!14575 = !DILocation(line: 55, column: 2, scope: !12978, inlinedAt: !14576)
!14576 = distinct !DILocation(line: 145, column: 10, scope: !12969, inlinedAt: !14574)
!14577 = !DILocation(line: 0, scope: !12978, inlinedAt: !14576)
!14578 = !DILocation(line: 1440, column: 20, scope: !14548)
!14579 = !DILocation(line: 1440, column: 18, scope: !14548)
!14580 = !DILocation(line: 1442, column: 2, scope: !14548)
!14581 = !DILocation(line: 1443, column: 23, scope: !14548)
!14582 = !DILocation(line: 1443, column: 2, scope: !14548)
!14583 = !DILocation(line: 1444, column: 29, scope: !14548)
!14584 = !DILocation(line: 1444, column: 2, scope: !14548)
!14585 = !DILocation(line: 0, scope: !13580, inlinedAt: !14586)
!14586 = distinct !DILocation(line: 1446, column: 8, scope: !14548)
!14587 = !DILocation(line: 196, column: 9, scope: !13580, inlinedAt: !14586)
!14588 = !DILocation(line: 1450, column: 10, scope: !14548)
!14589 = !DILocation(line: 1450, column: 45, scope: !14548)
!14590 = !DILocation(line: 1450, column: 43, scope: !14548)
!14591 = !DILocation(line: 1451, column: 6, scope: !14548)
!14592 = !DILocation(line: 1457, column: 1, scope: !14548)
!14593 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !12802, file: !12802, line: 1103, type: !12803, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !14594)
!14594 = !{!14595}
!14595 = !DILocalVariable(name: "t", arg: 1, scope: !14593, file: !12802, line: 1103, type: !163)
!14596 = !DILocation(line: 0, scope: !14593)
!14597 = !DILocation(line: 0, scope: !13016, inlinedAt: !14598)
!14598 = distinct !DILocation(line: 1106, column: 9, scope: !14593)
!14599 = !DILocation(line: 139, column: 13, scope: !14600, inlinedAt: !14598)
!14600 = distinct !DILexicalBlock(scope: !14601, file: !12802, line: 138, column: 10)
!14601 = distinct !DILexicalBlock(scope: !14602, file: !12802, line: 136, column: 7)
!14602 = distinct !DILexicalBlock(scope: !13037, file: !12802, line: 134, column: 17)
!14603 = !DILocation(line: 1106, column: 2, scope: !14593)
!14604 = distinct !DISubprogram(name: "k_yield", scope: !3298, file: !3298, line: 140, type: !2848, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !162)
!14605 = !DILocation(line: 148, column: 2, scope: !14606)
!14606 = distinct !DILexicalBlock(scope: !14604, file: !3298, line: 148, column: 2)
!14607 = !{i64 2154192576}
!14608 = !DILocation(line: 149, column: 2, scope: !14604)
!14609 = !DILocation(line: 150, column: 1, scope: !14604)
!14610 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2195, file: !2195, line: 1495, type: !14611, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !14613)
!14611 = !DISubroutineType(types: !14612)
!14612 = !{!611, !103}
!14613 = !{!14614, !14615}
!14614 = !DILocalVariable(name: "us", arg: 1, scope: !14610, file: !2195, line: 1495, type: !103)
!14615 = !DILocalVariable(name: "ticks", scope: !14610, file: !2195, line: 1497, type: !611)
!14616 = !DILocation(line: 0, scope: !14610)
!14617 = !DILocation(line: 1501, column: 31, scope: !14610)
!14618 = !DILocation(line: 1501, column: 10, scope: !14610)
!14619 = !DILocation(line: 1502, column: 23, scope: !14610)
!14620 = !DILocation(line: 1502, column: 10, scope: !14610)
!14621 = !DILocation(line: 1506, column: 31, scope: !14610)
!14622 = !DILocation(line: 1506, column: 9, scope: !14610)
!14623 = !DILocation(line: 1506, column: 2, scope: !14610)
!14624 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !12802, file: !12802, line: 571, type: !12803, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !14625)
!14625 = !{!14626}
!14626 = !DILocalVariable(name: "t", arg: 1, scope: !14624, file: !12802, line: 571, type: !163)
!14627 = !DILocation(line: 0, scope: !14624)
!14628 = !DILocation(line: 0, scope: !13016, inlinedAt: !14629)
!14629 = distinct !DILocation(line: 574, column: 9, scope: !14624)
!14630 = !DILocation(line: 135, column: 5, scope: !14602, inlinedAt: !14629)
!14631 = !DILocation(line: 139, column: 13, scope: !14600, inlinedAt: !14629)
!14632 = !DILocation(line: 574, column: 2, scope: !14624)
!14633 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !12802, file: !12802, line: 1187, type: !12803, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !14634)
!14634 = !{!14635}
!14635 = !DILocalVariable(name: "t", arg: 1, scope: !14633, file: !12802, line: 1187, type: !163)
!14636 = !DILocation(line: 0, scope: !14633)
!14637 = !DILocation(line: 0, scope: !13016, inlinedAt: !14638)
!14638 = distinct !DILocation(line: 1190, column: 9, scope: !14633)
!14639 = !DILocation(line: 145, column: 13, scope: !14640, inlinedAt: !14638)
!14640 = distinct !DILexicalBlock(scope: !13034, file: !12802, line: 144, column: 10)
!14641 = !DILocation(line: 1190, column: 2, scope: !14633)
!14642 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2195, file: !2195, line: 1517, type: !14538, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !14643)
!14643 = !{!14644}
!14644 = !DILocalVariable(name: "thread", arg: 1, scope: !14642, file: !2195, line: 1517, type: !14444)
!14645 = !DILocation(line: 0, scope: !14642)
!14646 = !DILocation(line: 1521, column: 6, scope: !14647)
!14647 = distinct !DILexicalBlock(scope: !14642, file: !2195, line: 1521, column: 6)
!14648 = !DILocation(line: 1521, column: 6, scope: !14642)
!14649 = !DILocation(line: 1525, column: 6, scope: !14650)
!14650 = distinct !DILexicalBlock(scope: !14642, file: !2195, line: 1525, column: 6)
!14651 = !DILocation(line: 1525, column: 37, scope: !14650)
!14652 = !DILocation(line: 1525, column: 6, scope: !14642)
!14653 = !DILocation(line: 1527, column: 20, scope: !14654)
!14654 = distinct !DILexicalBlock(scope: !14655, file: !2195, line: 1527, column: 7)
!14655 = distinct !DILexicalBlock(scope: !14650, file: !2195, line: 1525, column: 42)
!14656 = !DILocation(line: 1527, column: 33, scope: !14654)
!14657 = !DILocation(line: 1527, column: 7, scope: !14655)
!14658 = !DILocation(line: 1532, column: 2, scope: !14642)
!14659 = !DILocation(line: 1533, column: 2, scope: !14642)
!14660 = !DILocation(line: 1031, column: 3, scope: !13613, inlinedAt: !14661)
!14661 = distinct !DILocation(line: 48, column: 10, scope: !13617, inlinedAt: !14662)
!14662 = distinct !DILocation(line: 1537, column: 7, scope: !14663)
!14663 = distinct !DILexicalBlock(scope: !14642, file: !2195, line: 1537, column: 6)
!14664 = !DILocation(line: 0, scope: !13613, inlinedAt: !14661)
!14665 = !DILocation(line: 48, column: 9, scope: !13617, inlinedAt: !14662)
!14666 = !DILocation(line: 1537, column: 6, scope: !14642)
!14667 = !DILocation(line: 1538, column: 3, scope: !14668)
!14668 = distinct !DILexicalBlock(scope: !14663, file: !2195, line: 1537, column: 25)
!14669 = !DILocation(line: 1539, column: 2, scope: !14668)
!14670 = !DILocation(line: 1540, column: 1, scope: !14642)
!14671 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !12241, file: !12241, line: 101, type: !13087, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !14672)
!14672 = !{!14673}
!14673 = !DILocalVariable(name: "thread", arg: 1, scope: !14671, file: !12241, line: 101, type: !2090)
!14674 = !DILocation(line: 0, scope: !14671)
!14675 = !DILocation(line: 103, column: 23, scope: !14671)
!14676 = !DILocation(line: 103, column: 36, scope: !14671)
!14677 = !DILocation(line: 103, column: 55, scope: !14671)
!14678 = !DILocation(line: 103, column: 2, scope: !14671)
!14679 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2195, file: !2195, line: 1567, type: !14680, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !14682)
!14680 = !DISubroutineType(types: !14681)
!14681 = !{!14444}
!14682 = !{!14683}
!14683 = !DILocalVariable(name: "ret", scope: !14679, file: !2195, line: 1577, type: !14444)
!14684 = !DILocation(line: 1577, column: 30, scope: !14679)
!14685 = !DILocation(line: 0, scope: !14679)
!14686 = !DILocation(line: 1582, column: 2, scope: !14679)
!14687 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2195, file: !2195, line: 1593, type: !7389, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !162)
!14688 = !DILocation(line: 1031, column: 3, scope: !13613, inlinedAt: !14689)
!14689 = distinct !DILocation(line: 48, column: 10, scope: !13617, inlinedAt: !14690)
!14690 = distinct !DILocation(line: 1595, column: 10, scope: !14687)
!14691 = !DILocation(line: 0, scope: !13613, inlinedAt: !14689)
!14692 = !DILocation(line: 48, column: 9, scope: !13617, inlinedAt: !14690)
!14693 = !DILocation(line: 1595, column: 27, scope: !14687)
!14694 = !DILocation(line: 1595, column: 41, scope: !14687)
!14695 = !DILocation(line: 1595, column: 30, scope: !14687)
!14696 = !DILocation(line: 1595, column: 2, scope: !14687)
!14697 = distinct !DISubprogram(name: "z_thread_abort", scope: !2195, file: !2195, line: 1725, type: !12927, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !14698)
!14698 = !{!14699, !14700}
!14699 = !DILocalVariable(name: "thread", arg: 1, scope: !14697, file: !2195, line: 1725, type: !2090)
!14700 = !DILocalVariable(name: "key", scope: !14697, file: !2195, line: 1727, type: !12961)
!14701 = !DILocation(line: 0, scope: !14697)
!14702 = !DILocation(line: 0, scope: !12969, inlinedAt: !14703)
!14703 = distinct !DILocation(line: 1727, column: 25, scope: !14697)
!14704 = !DILocation(line: 55, column: 2, scope: !12978, inlinedAt: !14705)
!14705 = distinct !DILocation(line: 145, column: 10, scope: !12969, inlinedAt: !14703)
!14706 = !DILocation(line: 0, scope: !12978, inlinedAt: !14705)
!14707 = !DILocation(line: 1729, column: 20, scope: !14708)
!14708 = distinct !DILexicalBlock(scope: !14697, file: !2195, line: 1729, column: 6)
!14709 = !DILocation(line: 1729, column: 33, scope: !14708)
!14710 = !DILocation(line: 1729, column: 48, scope: !14708)
!14711 = !DILocation(line: 1729, column: 6, scope: !14697)
!14712 = !DILocation(line: 0, scope: !12996, inlinedAt: !14713)
!14713 = distinct !DILocation(line: 1730, column: 3, scope: !14714)
!14714 = distinct !DILexicalBlock(scope: !14708, file: !2195, line: 1729, column: 54)
!14715 = !DILocation(line: 0, scope: !13004, inlinedAt: !14716)
!14716 = distinct !DILocation(line: 215, column: 2, scope: !12996, inlinedAt: !14713)
!14717 = !DILocation(line: 95, column: 2, scope: !13004, inlinedAt: !14716)
!14718 = !DILocation(line: 1732, column: 3, scope: !14719)
!14719 = distinct !DILexicalBlock(scope: !14714, file: !2195, line: 1732, column: 3)
!14720 = !{i64 2154929986, i64 2154930002, i64 2154930028, i64 2154930056, i64 2154930076}
!14721 = !DILocation(line: 1733, column: 3, scope: !14714)
!14722 = !DILocation(line: 1736, column: 20, scope: !14723)
!14723 = distinct !DILexicalBlock(scope: !14697, file: !2195, line: 1736, column: 6)
!14724 = !DILocation(line: 1736, column: 33, scope: !14723)
!14725 = !DILocation(line: 1736, column: 49, scope: !14723)
!14726 = !DILocation(line: 1736, column: 6, scope: !14697)
!14727 = !DILocation(line: 0, scope: !12996, inlinedAt: !14728)
!14728 = distinct !DILocation(line: 1737, column: 3, scope: !14729)
!14729 = distinct !DILexicalBlock(scope: !14723, file: !2195, line: 1736, column: 56)
!14730 = !DILocation(line: 0, scope: !13004, inlinedAt: !14731)
!14731 = distinct !DILocation(line: 215, column: 2, scope: !12996, inlinedAt: !14728)
!14732 = !DILocation(line: 95, column: 2, scope: !13004, inlinedAt: !14731)
!14733 = !DILocation(line: 1738, column: 3, scope: !14729)
!14734 = !DILocation(line: 1775, column: 2, scope: !14697)
!14735 = !DILocation(line: 1776, column: 16, scope: !14736)
!14736 = distinct !DILexicalBlock(scope: !14697, file: !2195, line: 1776, column: 6)
!14737 = !DILocation(line: 1776, column: 13, scope: !14736)
!14738 = !DILocation(line: 1776, column: 25, scope: !14736)
!14739 = !DILocation(line: 1031, column: 3, scope: !13613, inlinedAt: !14740)
!14740 = distinct !DILocation(line: 48, column: 10, scope: !13617, inlinedAt: !14741)
!14741 = distinct !DILocation(line: 1776, column: 29, scope: !14736)
!14742 = !DILocation(line: 0, scope: !13613, inlinedAt: !14740)
!14743 = !DILocation(line: 48, column: 9, scope: !13617, inlinedAt: !14741)
!14744 = !DILocation(line: 1776, column: 6, scope: !14697)
!14745 = !DILocation(line: 0, scope: !13580, inlinedAt: !14746)
!14746 = distinct !DILocation(line: 1777, column: 3, scope: !14747)
!14747 = distinct !DILexicalBlock(scope: !14736, file: !2195, line: 1776, column: 47)
!14748 = !DILocation(line: 196, column: 9, scope: !13580, inlinedAt: !14746)
!14749 = !DILocation(line: 1779, column: 2, scope: !14747)
!14750 = !DILocation(line: 0, scope: !12996, inlinedAt: !14751)
!14751 = distinct !DILocation(line: 1780, column: 2, scope: !14697)
!14752 = !DILocation(line: 0, scope: !13004, inlinedAt: !14753)
!14753 = distinct !DILocation(line: 215, column: 2, scope: !12996, inlinedAt: !14751)
!14754 = !DILocation(line: 95, column: 2, scope: !13004, inlinedAt: !14753)
!14755 = !DILocation(line: 1781, column: 1, scope: !14697)
!14756 = distinct !DISubprogram(name: "end_thread", scope: !2195, file: !2195, line: 1690, type: !12927, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !14757)
!14757 = !{!14758}
!14758 = !DILocalVariable(name: "thread", arg: 1, scope: !14756, file: !2195, line: 1690, type: !2090)
!14759 = !DILocation(line: 0, scope: !14756)
!14760 = !DILocation(line: 1695, column: 20, scope: !14761)
!14761 = distinct !DILexicalBlock(scope: !14756, file: !2195, line: 1695, column: 6)
!14762 = !DILocation(line: 1695, column: 33, scope: !14761)
!14763 = !DILocation(line: 1695, column: 49, scope: !14761)
!14764 = !DILocation(line: 1695, column: 6, scope: !14756)
!14765 = !DILocation(line: 1697, column: 29, scope: !14766)
!14766 = distinct !DILexicalBlock(scope: !14761, file: !2195, line: 1695, column: 56)
!14767 = !DILocation(line: 1698, column: 7, scope: !14768)
!14768 = distinct !DILexicalBlock(scope: !14766, file: !2195, line: 1698, column: 7)
!14769 = !DILocation(line: 1698, column: 7, scope: !14766)
!14770 = !DILocation(line: 0, scope: !13138, inlinedAt: !14771)
!14771 = distinct !DILocation(line: 1699, column: 4, scope: !14772)
!14772 = distinct !DILexicalBlock(scope: !14768, file: !2195, line: 1698, column: 35)
!14773 = !DILocation(line: 266, column: 28, scope: !13138, inlinedAt: !14771)
!14774 = !DILocation(line: 0, scope: !13146, inlinedAt: !14775)
!14775 = distinct !DILocation(line: 268, column: 3, scope: !13150, inlinedAt: !14771)
!14776 = !DILocation(line: 234, column: 2, scope: !13146, inlinedAt: !14775)
!14777 = !DILocation(line: 1700, column: 3, scope: !14772)
!14778 = !DILocation(line: 1701, column: 20, scope: !14779)
!14779 = distinct !DILexicalBlock(scope: !14766, file: !2195, line: 1701, column: 7)
!14780 = !DILocation(line: 1701, column: 30, scope: !14779)
!14781 = !DILocation(line: 1701, column: 7, scope: !14766)
!14782 = !DILocation(line: 1702, column: 4, scope: !14783)
!14783 = distinct !DILexicalBlock(scope: !14779, file: !2195, line: 1701, column: 39)
!14784 = !DILocation(line: 1703, column: 3, scope: !14783)
!14785 = !DILocation(line: 1704, column: 9, scope: !14766)
!14786 = !DILocation(line: 1705, column: 23, scope: !14766)
!14787 = !DILocation(line: 1705, column: 3, scope: !14766)
!14788 = !DILocation(line: 1706, column: 3, scope: !14766)
!14789 = !DILocation(line: 1722, column: 2, scope: !14766)
!14790 = !DILocation(line: 1723, column: 1, scope: !14756)
!14791 = distinct !DISubprogram(name: "unpend_all", scope: !2195, file: !2195, line: 1674, type: !14792, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !14794)
!14792 = !DISubroutineType(types: !14793)
!14793 = !{null, !2121}
!14794 = !{!14795, !14796}
!14795 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14791, file: !2195, line: 1674, type: !2121)
!14796 = !DILocalVariable(name: "thread", scope: !14791, file: !2195, line: 1676, type: !2090)
!14797 = !DILocation(line: 0, scope: !14791)
!14798 = !DILocation(line: 1678, column: 19, scope: !14791)
!14799 = !DILocation(line: 1678, column: 41, scope: !14791)
!14800 = !DILocation(line: 1678, column: 2, scope: !14791)
!14801 = !DILocation(line: 1679, column: 3, scope: !14802)
!14802 = distinct !DILexicalBlock(scope: !14791, file: !2195, line: 1678, column: 50)
!14803 = !DILocation(line: 1680, column: 9, scope: !14802)
!14804 = !DILocalVariable(name: "thread", arg: 1, scope: !14805, file: !12261, line: 65, type: !2090)
!14805 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12261, file: !12261, line: 65, type: !14806, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !14808)
!14806 = !DISubroutineType(types: !14807)
!14807 = !{null, !2090, !32}
!14808 = !{!14804, !14809}
!14809 = !DILocalVariable(name: "value", arg: 2, scope: !14805, file: !12261, line: 65, type: !32)
!14810 = !DILocation(line: 0, scope: !14805, inlinedAt: !14811)
!14811 = distinct !DILocation(line: 1681, column: 3, scope: !14802)
!14812 = !DILocation(line: 67, column: 15, scope: !14805, inlinedAt: !14811)
!14813 = !DILocation(line: 67, column: 33, scope: !14805, inlinedAt: !14811)
!14814 = !DILocation(line: 1682, column: 3, scope: !14802)
!14815 = distinct !{!14815, !14800, !14816}
!14816 = !DILocation(line: 1683, column: 2, scope: !14791)
!14817 = !DILocation(line: 1684, column: 1, scope: !14791)
!14818 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2195, file: !2195, line: 1794, type: !14819, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !14821)
!14819 = !DISubroutineType(types: !14820)
!14820 = !{!103, !2090, !13760}
!14821 = !{!14822, !14823, !14824, !14825}
!14822 = !DILocalVariable(name: "thread", arg: 1, scope: !14818, file: !2195, line: 1794, type: !2090)
!14823 = !DILocalVariable(name: "timeout", arg: 2, scope: !14818, file: !2195, line: 1794, type: !13760)
!14824 = !DILocalVariable(name: "key", scope: !14818, file: !2195, line: 1796, type: !12961)
!14825 = !DILocalVariable(name: "ret", scope: !14818, file: !2195, line: 1797, type: !103)
!14826 = !DILocation(line: 0, scope: !14818)
!14827 = !DILocation(line: 0, scope: !12969, inlinedAt: !14828)
!14828 = distinct !DILocation(line: 1796, column: 25, scope: !14818)
!14829 = !DILocation(line: 55, column: 2, scope: !12978, inlinedAt: !14830)
!14830 = distinct !DILocation(line: 145, column: 10, scope: !12969, inlinedAt: !14828)
!14831 = !DILocation(line: 0, scope: !12978, inlinedAt: !14830)
!14832 = !DILocation(line: 1801, column: 20, scope: !14833)
!14833 = distinct !DILexicalBlock(scope: !14818, file: !2195, line: 1801, column: 6)
!14834 = !DILocation(line: 1801, column: 33, scope: !14833)
!14835 = !DILocation(line: 1801, column: 49, scope: !14833)
!14836 = !DILocation(line: 1801, column: 6, scope: !14818)
!14837 = !DILocation(line: 1803, column: 13, scope: !14838)
!14838 = distinct !DILexicalBlock(scope: !14833, file: !2195, line: 1803, column: 13)
!14839 = !DILocation(line: 1803, column: 13, scope: !14833)
!14840 = !DILocation(line: 1805, column: 24, scope: !14841)
!14841 = distinct !DILexicalBlock(scope: !14838, file: !2195, line: 1805, column: 13)
!14842 = !DILocation(line: 1805, column: 21, scope: !14841)
!14843 = !DILocation(line: 1805, column: 34, scope: !14841)
!14844 = !DILocation(line: 1806, column: 20, scope: !14841)
!14845 = !DILocation(line: 1806, column: 44, scope: !14841)
!14846 = !DILocation(line: 1806, column: 30, scope: !14841)
!14847 = !DILocation(line: 1805, column: 13, scope: !14838)
!14848 = !DILocation(line: 1810, column: 42, scope: !14849)
!14849 = distinct !DILexicalBlock(scope: !14841, file: !2195, line: 1808, column: 9)
!14850 = !DILocation(line: 1810, column: 3, scope: !14849)
!14851 = !DILocation(line: 1811, column: 22, scope: !14849)
!14852 = !DILocation(line: 1811, column: 3, scope: !14849)
!14853 = !DILocation(line: 0, scope: !13580, inlinedAt: !14854)
!14854 = distinct !DILocation(line: 1814, column: 9, scope: !14849)
!14855 = !DILocation(line: 196, column: 9, scope: !13580, inlinedAt: !14854)
!14856 = !DILocation(line: 1817, column: 3, scope: !14849)
!14857 = !DILocation(line: 0, scope: !14833)
!14858 = !DILocation(line: 0, scope: !12996, inlinedAt: !14859)
!14859 = distinct !DILocation(line: 1822, column: 2, scope: !14818)
!14860 = !DILocation(line: 0, scope: !13004, inlinedAt: !14861)
!14861 = distinct !DILocation(line: 215, column: 2, scope: !12996, inlinedAt: !14859)
!14862 = !DILocation(line: 95, column: 2, scope: !13004, inlinedAt: !14861)
!14863 = !DILocation(line: 1823, column: 2, scope: !14818)
!14864 = !DILocation(line: 1824, column: 1, scope: !14818)
!14865 = distinct !DISubprogram(name: "z_sched_wake", scope: !2195, file: !2195, line: 1882, type: !14866, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !14868)
!14866 = !DISubroutineType(types: !14867)
!14867 = !{!211, !2121, !103, !102}
!14868 = !{!14869, !14870, !14871, !14872, !14873, !14874, !14876}
!14869 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14865, file: !2195, line: 1882, type: !2121)
!14870 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !14865, file: !2195, line: 1882, type: !103)
!14871 = !DILocalVariable(name: "swap_data", arg: 3, scope: !14865, file: !2195, line: 1882, type: !102)
!14872 = !DILocalVariable(name: "thread", scope: !14865, file: !2195, line: 1884, type: !2090)
!14873 = !DILocalVariable(name: "ret", scope: !14865, file: !2195, line: 1885, type: !211)
!14874 = !DILocalVariable(name: "__i", scope: !14875, file: !2195, line: 1887, type: !12961)
!14875 = distinct !DILexicalBlock(scope: !14865, file: !2195, line: 1887, column: 2)
!14876 = !DILocalVariable(name: "__key", scope: !14875, file: !2195, line: 1887, type: !12961)
!14877 = !DILocation(line: 0, scope: !14865)
!14878 = !DILocation(line: 0, scope: !14875)
!14879 = !DILocation(line: 0, scope: !12969, inlinedAt: !14880)
!14880 = distinct !DILocation(line: 1887, column: 2, scope: !14875)
!14881 = !DILocation(line: 55, column: 2, scope: !12978, inlinedAt: !14882)
!14882 = distinct !DILocation(line: 145, column: 10, scope: !12969, inlinedAt: !14880)
!14883 = !DILocation(line: 0, scope: !12978, inlinedAt: !14882)
!14884 = !DILocation(line: 1888, column: 12, scope: !14885)
!14885 = distinct !DILexicalBlock(scope: !14886, file: !2195, line: 1887, column: 26)
!14886 = distinct !DILexicalBlock(scope: !14875, file: !2195, line: 1887, column: 2)
!14887 = !DILocation(line: 1890, column: 14, scope: !14888)
!14888 = distinct !DILexicalBlock(scope: !14885, file: !2195, line: 1890, column: 7)
!14889 = !DILocation(line: 1890, column: 7, scope: !14885)
!14890 = !DILocalVariable(name: "thread", arg: 1, scope: !14891, file: !14892, line: 134, type: !2090)
!14891 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !14892, file: !14892, line: 134, type: !14893, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !14895)
!14892 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14893 = !DISubroutineType(types: !14894)
!14894 = !{null, !2090, !32, !102}
!14895 = !{!14890, !14896, !14897}
!14896 = !DILocalVariable(name: "value", arg: 2, scope: !14891, file: !14892, line: 135, type: !32)
!14897 = !DILocalVariable(name: "data", arg: 3, scope: !14891, file: !14892, line: 136, type: !102)
!14898 = !DILocation(line: 0, scope: !14891, inlinedAt: !14899)
!14899 = distinct !DILocation(line: 1891, column: 4, scope: !14900)
!14900 = distinct !DILexicalBlock(scope: !14888, file: !2195, line: 1890, column: 23)
!14901 = !DILocation(line: 0, scope: !14805, inlinedAt: !14902)
!14902 = distinct !DILocation(line: 138, column: 2, scope: !14891, inlinedAt: !14899)
!14903 = !DILocation(line: 67, column: 15, scope: !14805, inlinedAt: !14902)
!14904 = !DILocation(line: 67, column: 33, scope: !14805, inlinedAt: !14902)
!14905 = !DILocation(line: 139, column: 15, scope: !14891, inlinedAt: !14899)
!14906 = !DILocation(line: 139, column: 25, scope: !14891, inlinedAt: !14899)
!14907 = !DILocation(line: 1894, column: 4, scope: !14900)
!14908 = !DILocation(line: 1895, column: 10, scope: !14900)
!14909 = !DILocation(line: 1896, column: 4, scope: !14900)
!14910 = !DILocation(line: 1898, column: 3, scope: !14900)
!14911 = !DILocation(line: 0, scope: !12996, inlinedAt: !14912)
!14912 = distinct !DILocation(line: 1887, column: 2, scope: !14886)
!14913 = !DILocation(line: 0, scope: !13004, inlinedAt: !14914)
!14914 = distinct !DILocation(line: 215, column: 2, scope: !12996, inlinedAt: !14912)
!14915 = !DILocation(line: 95, column: 2, scope: !13004, inlinedAt: !14914)
!14916 = !DILocation(line: 1901, column: 2, scope: !14865)
!14917 = distinct !DISubprogram(name: "z_sched_wait", scope: !2195, file: !2195, line: 1904, type: !14918, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2087, retainedNodes: !14921)
!14918 = !DISubroutineType(types: !14919)
!14919 = !{!103, !12972, !12961, !2121, !13760, !14920}
!14920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!14921 = !{!14922, !14923, !14924, !14925, !14926, !14927}
!14922 = !DILocalVariable(name: "lock", arg: 1, scope: !14917, file: !2195, line: 1904, type: !12972)
!14923 = !DILocalVariable(name: "key", arg: 2, scope: !14917, file: !2195, line: 1904, type: !12961)
!14924 = !DILocalVariable(name: "wait_q", arg: 3, scope: !14917, file: !2195, line: 1905, type: !2121)
!14925 = !DILocalVariable(name: "timeout", arg: 4, scope: !14917, file: !2195, line: 1905, type: !13760)
!14926 = !DILocalVariable(name: "data", arg: 5, scope: !14917, file: !2195, line: 1905, type: !14920)
!14927 = !DILocalVariable(name: "ret", scope: !14917, file: !2195, line: 1907, type: !103)
!14928 = !DILocation(line: 0, scope: !14917)
!14929 = !DILocation(line: 1907, column: 12, scope: !14917)
!14930 = !DILocation(line: 1909, column: 11, scope: !14931)
!14931 = distinct !DILexicalBlock(scope: !14917, file: !2195, line: 1909, column: 6)
!14932 = !DILocation(line: 1909, column: 6, scope: !14917)
!14933 = !DILocation(line: 1910, column: 11, scope: !14934)
!14934 = distinct !DILexicalBlock(scope: !14931, file: !2195, line: 1909, column: 20)
!14935 = !DILocation(line: 1910, column: 26, scope: !14934)
!14936 = !DILocation(line: 1910, column: 9, scope: !14934)
!14937 = !DILocation(line: 1911, column: 2, scope: !14934)
!14938 = !DILocation(line: 1912, column: 2, scope: !14917)
!14939 = distinct !DISubprogram(name: "z_data_copy", scope: !14940, file: !14940, line: 22, type: !2848, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2831, retainedNodes: !162)
!14940 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14941 = !DILocation(line: 24, column: 2, scope: !14939)
!14942 = !DILocation(line: 27, column: 2, scope: !14939)
!14943 = !DILocation(line: 71, column: 1, scope: !14939)
!14944 = distinct !DISubprogram(name: "z_add_timeout", scope: !2232, file: !2232, line: 88, type: !14945, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !14951)
!14945 = !DISubroutineType(types: !14946)
!14946 = !{null, !2205, !2224, !14947}
!14947 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1446, line: 67, baseType: !14948)
!14948 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1446, line: 65, size: 64, elements: !14949)
!14949 = !{!14950}
!14950 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14948, file: !1446, line: 66, baseType: !1445, size: 64)
!14951 = !{!14952, !14953, !14954, !14955, !14961, !14962, !14965, !14968}
!14952 = !DILocalVariable(name: "to", arg: 1, scope: !14944, file: !2232, line: 88, type: !2205)
!14953 = !DILocalVariable(name: "fn", arg: 2, scope: !14944, file: !2232, line: 88, type: !2224)
!14954 = !DILocalVariable(name: "timeout", arg: 3, scope: !14944, file: !2232, line: 89, type: !14947)
!14955 = !DILocalVariable(name: "__i", scope: !14956, file: !2232, line: 102, type: !14957)
!14956 = distinct !DILexicalBlock(scope: !14944, file: !2232, line: 102, column: 2)
!14957 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !368, line: 106, baseType: !14958)
!14958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !368, line: 32, size: 32, elements: !14959)
!14959 = !{!14960}
!14960 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14958, file: !368, line: 33, baseType: !103, size: 32)
!14961 = !DILocalVariable(name: "__key", scope: !14956, file: !2232, line: 102, type: !14957)
!14962 = !DILocalVariable(name: "t", scope: !14963, file: !2232, line: 103, type: !2205)
!14963 = distinct !DILexicalBlock(scope: !14964, file: !2232, line: 102, column: 24)
!14964 = distinct !DILexicalBlock(scope: !14956, file: !2232, line: 102, column: 2)
!14965 = !DILocalVariable(name: "ticks", scope: !14966, file: !2232, line: 107, type: !1445)
!14966 = distinct !DILexicalBlock(scope: !14967, file: !2232, line: 106, column: 39)
!14967 = distinct !DILexicalBlock(scope: !14963, file: !2232, line: 105, column: 7)
!14968 = !DILocalVariable(name: "next_time", scope: !14969, file: !2232, line: 137, type: !611)
!14969 = distinct !DILexicalBlock(scope: !14970, file: !2232, line: 127, column: 22)
!14970 = distinct !DILexicalBlock(scope: !14963, file: !2232, line: 127, column: 7)
!14971 = !DILocation(line: 0, scope: !14944)
!14972 = !DILocation(line: 91, column: 6, scope: !14973)
!14973 = distinct !DILexicalBlock(scope: !14944, file: !2232, line: 91, column: 6)
!14974 = !DILocation(line: 91, column: 6, scope: !14944)
!14975 = !DILocation(line: 100, column: 6, scope: !14944)
!14976 = !DILocation(line: 100, column: 9, scope: !14944)
!14977 = !DILocation(line: 0, scope: !14956)
!14978 = !DILocalVariable(name: "l", arg: 1, scope: !14979, file: !368, line: 136, type: !14982)
!14979 = distinct !DISubprogram(name: "k_spin_lock", scope: !368, file: !368, line: 136, type: !14980, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !14983)
!14980 = !DISubroutineType(types: !14981)
!14981 = !{!14957, !14982}
!14982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2233, size: 32)
!14983 = !{!14978, !14984}
!14984 = !DILocalVariable(name: "k", scope: !14979, file: !368, line: 139, type: !14957)
!14985 = !DILocation(line: 0, scope: !14979, inlinedAt: !14986)
!14986 = distinct !DILocation(line: 102, column: 2, scope: !14956)
!14987 = !DILocation(line: 55, column: 2, scope: !14988, inlinedAt: !14992)
!14988 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6148, file: !6148, line: 42, type: !6149, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !14989)
!14989 = !{!14990, !14991}
!14990 = !DILocalVariable(name: "key", scope: !14988, file: !6148, line: 44, type: !32)
!14991 = !DILocalVariable(name: "tmp", scope: !14988, file: !6148, line: 53, type: !32)
!14992 = distinct !DILocation(line: 145, column: 10, scope: !14979, inlinedAt: !14986)
!14993 = !{i64 2042594}
!14994 = !DILocation(line: 0, scope: !14988, inlinedAt: !14992)
!14995 = !DILocation(line: 106, column: 33, scope: !14967)
!14996 = !DILocation(line: 105, column: 7, scope: !14963)
!14997 = !DILocation(line: 107, column: 50, scope: !14966)
!14998 = !DILocation(line: 107, column: 48, scope: !14966)
!14999 = !DILocation(line: 0, scope: !14966)
!15000 = !DILocation(line: 109, column: 17, scope: !14966)
!15001 = !DILocation(line: 110, column: 3, scope: !14966)
!15002 = !DILocation(line: 111, column: 31, scope: !15003)
!15003 = distinct !DILexicalBlock(scope: !14967, file: !2232, line: 110, column: 10)
!15004 = !DILocation(line: 111, column: 37, scope: !15003)
!15005 = !DILocation(line: 111, column: 35, scope: !15003)
!15006 = !DILocation(line: 0, scope: !14967)
!15007 = !DILocation(line: 109, column: 8, scope: !14966)
!15008 = !DILocation(line: 109, column: 15, scope: !14966)
!15009 = !DILocation(line: 114, column: 12, scope: !15010)
!15010 = distinct !DILexicalBlock(scope: !14963, file: !2232, line: 114, column: 3)
!15011 = !DILocation(line: 0, scope: !14963)
!15012 = !DILocation(line: 114, column: 3, scope: !15010)
!15013 = !DILocation(line: 115, column: 24, scope: !15014)
!15014 = distinct !DILexicalBlock(scope: !15015, file: !2232, line: 115, column: 8)
!15015 = distinct !DILexicalBlock(scope: !15016, file: !2232, line: 114, column: 45)
!15016 = distinct !DILexicalBlock(scope: !15010, file: !2232, line: 114, column: 3)
!15017 = !DILocation(line: 115, column: 11, scope: !15014)
!15018 = !DILocation(line: 115, column: 18, scope: !15014)
!15019 = !DILocation(line: 115, column: 8, scope: !15015)
!15020 = !DILocation(line: 116, column: 15, scope: !15021)
!15021 = distinct !DILexicalBlock(scope: !15014, file: !2232, line: 115, column: 32)
!15022 = !DILocation(line: 117, column: 26, scope: !15021)
!15023 = !DILocation(line: 117, column: 37, scope: !15021)
!15024 = !DILocation(line: 117, column: 5, scope: !15021)
!15025 = !DILocation(line: 123, column: 7, scope: !14963)
!15026 = !DILocation(line: 120, column: 15, scope: !15015)
!15027 = !DILocation(line: 114, column: 36, scope: !15016)
!15028 = distinct !{!15028, !15012, !15029}
!15029 = !DILocation(line: 121, column: 3, scope: !15010)
!15030 = !DILocation(line: 124, column: 41, scope: !15031)
!15031 = distinct !DILexicalBlock(scope: !15032, file: !2232, line: 123, column: 18)
!15032 = distinct !DILexicalBlock(scope: !14963, file: !2232, line: 123, column: 7)
!15033 = !DILocation(line: 124, column: 4, scope: !15031)
!15034 = !DILocation(line: 125, column: 3, scope: !15031)
!15035 = !DILocation(line: 127, column: 13, scope: !14970)
!15036 = !DILocation(line: 127, column: 10, scope: !14970)
!15037 = !DILocation(line: 127, column: 7, scope: !14963)
!15038 = !DILocation(line: 137, column: 24, scope: !14969)
!15039 = !DILocation(line: 0, scope: !14969)
!15040 = !DILocation(line: 139, column: 18, scope: !15041)
!15041 = distinct !DILexicalBlock(scope: !14969, file: !2232, line: 139, column: 8)
!15042 = !DILocation(line: 139, column: 23, scope: !15041)
!15043 = !DILocation(line: 141, column: 5, scope: !15044)
!15044 = distinct !DILexicalBlock(scope: !15041, file: !2232, line: 140, column: 48)
!15045 = !DILocation(line: 142, column: 4, scope: !15044)
!15046 = !DILocalVariable(name: "key", arg: 2, scope: !15047, file: !368, line: 190, type: !14957)
!15047 = distinct !DISubprogram(name: "k_spin_unlock", scope: !368, file: !368, line: 189, type: !15048, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !15050)
!15048 = !DISubroutineType(types: !15049)
!15049 = !{null, !14982, !14957}
!15050 = !{!15051, !15046}
!15051 = !DILocalVariable(name: "l", arg: 1, scope: !15047, file: !368, line: 189, type: !14982)
!15052 = !DILocation(line: 0, scope: !15047, inlinedAt: !15053)
!15053 = distinct !DILocation(line: 102, column: 2, scope: !14964)
!15054 = !DILocalVariable(name: "key", arg: 1, scope: !15055, file: !6148, line: 84, type: !32)
!15055 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6148, file: !6148, line: 84, type: !6159, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !15056)
!15056 = !{!15054}
!15057 = !DILocation(line: 0, scope: !15055, inlinedAt: !15058)
!15058 = distinct !DILocation(line: 215, column: 2, scope: !15047, inlinedAt: !15053)
!15059 = !DILocation(line: 95, column: 2, scope: !15055, inlinedAt: !15058)
!15060 = !{i64 2043411}
!15061 = !DILocation(line: 148, column: 1, scope: !14944)
!15062 = distinct !DISubprogram(name: "elapsed", scope: !2232, file: !2232, line: 62, type: !15063, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !162)
!15063 = !DISubroutineType(types: !15064)
!15064 = !{!611}
!15065 = !DILocation(line: 64, column: 9, scope: !15062)
!15066 = !DILocation(line: 64, column: 28, scope: !15062)
!15067 = !DILocation(line: 64, column: 35, scope: !15062)
!15068 = !DILocation(line: 64, column: 2, scope: !15062)
!15069 = distinct !DISubprogram(name: "first", scope: !2232, file: !2232, line: 39, type: !15070, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !15072)
!15070 = !DISubroutineType(types: !15071)
!15071 = !{!2205}
!15072 = !{!15073}
!15073 = !DILocalVariable(name: "t", scope: !15069, file: !2232, line: 41, type: !15074)
!15074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2209, size: 32)
!15075 = !DILocation(line: 41, column: 19, scope: !15069)
!15076 = !DILocation(line: 0, scope: !15069)
!15077 = !DILocation(line: 43, column: 9, scope: !15069)
!15078 = !DILocation(line: 43, column: 2, scope: !15069)
!15079 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !273, file: !273, line: 443, type: !15080, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !15082)
!15080 = !DISubroutineType(types: !15081)
!15081 = !{null, !15074, !15074}
!15082 = !{!15083, !15084, !15085}
!15083 = !DILocalVariable(name: "successor", arg: 1, scope: !15079, file: !273, line: 443, type: !15074)
!15084 = !DILocalVariable(name: "node", arg: 2, scope: !15079, file: !273, line: 443, type: !15074)
!15085 = !DILocalVariable(name: "prev", scope: !15079, file: !273, line: 445, type: !15086)
!15086 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !15074)
!15087 = !DILocation(line: 0, scope: !15079)
!15088 = !DILocation(line: 445, column: 39, scope: !15079)
!15089 = !DILocation(line: 447, column: 8, scope: !15079)
!15090 = !DILocation(line: 447, column: 13, scope: !15079)
!15091 = !DILocation(line: 448, column: 8, scope: !15079)
!15092 = !DILocation(line: 448, column: 13, scope: !15079)
!15093 = !DILocation(line: 449, column: 8, scope: !15079)
!15094 = !DILocation(line: 449, column: 13, scope: !15079)
!15095 = !DILocation(line: 450, column: 18, scope: !15079)
!15096 = !DILocation(line: 451, column: 1, scope: !15079)
!15097 = distinct !DISubprogram(name: "next", scope: !2232, file: !2232, line: 46, type: !15098, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !15100)
!15098 = !DISubroutineType(types: !15099)
!15099 = !{!2205, !2205}
!15100 = !{!15101, !15102}
!15101 = !DILocalVariable(name: "t", arg: 1, scope: !15097, file: !2232, line: 46, type: !2205)
!15102 = !DILocalVariable(name: "n", scope: !15097, file: !2232, line: 48, type: !15074)
!15103 = !DILocation(line: 0, scope: !15097)
!15104 = !DILocation(line: 48, column: 58, scope: !15097)
!15105 = !DILocation(line: 48, column: 19, scope: !15097)
!15106 = !DILocation(line: 50, column: 9, scope: !15097)
!15107 = !DILocation(line: 50, column: 2, scope: !15097)
!15108 = distinct !DISubprogram(name: "sys_dlist_append", scope: !273, file: !273, line: 404, type: !15109, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !15112)
!15109 = !DISubroutineType(types: !15110)
!15110 = !{null, !15111, !15074}
!15111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2238, size: 32)
!15112 = !{!15113, !15114, !15115}
!15113 = !DILocalVariable(name: "list", arg: 1, scope: !15108, file: !273, line: 404, type: !15111)
!15114 = !DILocalVariable(name: "node", arg: 2, scope: !15108, file: !273, line: 404, type: !15074)
!15115 = !DILocalVariable(name: "tail", scope: !15108, file: !273, line: 406, type: !15086)
!15116 = !DILocation(line: 0, scope: !15108)
!15117 = !DILocation(line: 406, column: 34, scope: !15108)
!15118 = !DILocation(line: 408, column: 8, scope: !15108)
!15119 = !DILocation(line: 408, column: 13, scope: !15108)
!15120 = !DILocation(line: 409, column: 8, scope: !15108)
!15121 = !DILocation(line: 409, column: 13, scope: !15108)
!15122 = !DILocation(line: 411, column: 8, scope: !15108)
!15123 = !DILocation(line: 411, column: 13, scope: !15108)
!15124 = !DILocation(line: 412, column: 13, scope: !15108)
!15125 = !DILocation(line: 413, column: 1, scope: !15108)
!15126 = distinct !DISubprogram(name: "next_timeout", scope: !2232, file: !2232, line: 67, type: !15063, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !15127)
!15127 = !{!15128, !15129, !15130}
!15128 = !DILocalVariable(name: "to", scope: !15126, file: !2232, line: 69, type: !2205)
!15129 = !DILocalVariable(name: "ticks_elapsed", scope: !15126, file: !2232, line: 70, type: !611)
!15130 = !DILocalVariable(name: "ret", scope: !15126, file: !2232, line: 71, type: !611)
!15131 = !DILocation(line: 69, column: 24, scope: !15126)
!15132 = !DILocation(line: 0, scope: !15126)
!15133 = !DILocation(line: 70, column: 26, scope: !15126)
!15134 = !DILocation(line: 73, column: 10, scope: !15135)
!15135 = distinct !DILexicalBlock(scope: !15126, file: !2232, line: 73, column: 6)
!15136 = !DILocation(line: 73, column: 19, scope: !15135)
!15137 = !DILocation(line: 74, column: 21, scope: !15135)
!15138 = !DILocation(line: 74, column: 30, scope: !15135)
!15139 = !DILocation(line: 74, column: 28, scope: !15135)
!15140 = !DILocation(line: 74, column: 45, scope: !15135)
!15141 = !DILocation(line: 73, column: 6, scope: !15126)
!15142 = !DILocation(line: 77, column: 9, scope: !15143)
!15143 = distinct !DILexicalBlock(scope: !15135, file: !2232, line: 76, column: 9)
!15144 = !DILocation(line: 0, scope: !15135)
!15145 = !DILocation(line: 81, column: 20, scope: !15146)
!15146 = distinct !DILexicalBlock(scope: !15126, file: !2232, line: 81, column: 6)
!15147 = !DILocation(line: 81, column: 6, scope: !15146)
!15148 = !DILocation(line: 81, column: 32, scope: !15146)
!15149 = !DILocation(line: 85, column: 2, scope: !15126)
!15150 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !273, file: !273, line: 341, type: !15151, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !15153)
!15151 = !DISubroutineType(types: !15152)
!15152 = !{!15074, !15111, !15074}
!15153 = !{!15154, !15155}
!15154 = !DILocalVariable(name: "list", arg: 1, scope: !15150, file: !273, line: 341, type: !15111)
!15155 = !DILocalVariable(name: "node", arg: 2, scope: !15150, file: !273, line: 342, type: !15074)
!15156 = !DILocation(line: 0, scope: !15150)
!15157 = !DILocation(line: 344, column: 15, scope: !15150)
!15158 = !DILocation(line: 344, column: 9, scope: !15150)
!15159 = !DILocation(line: 344, column: 26, scope: !15150)
!15160 = !DILocation(line: 344, column: 2, scope: !15150)
!15161 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !273, file: !273, line: 325, type: !15151, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !15162)
!15162 = !{!15163, !15164}
!15163 = !DILocalVariable(name: "list", arg: 1, scope: !15161, file: !273, line: 325, type: !15111)
!15164 = !DILocalVariable(name: "node", arg: 2, scope: !15161, file: !273, line: 326, type: !15074)
!15165 = !DILocation(line: 0, scope: !15161)
!15166 = !DILocation(line: 328, column: 24, scope: !15161)
!15167 = !DILocation(line: 328, column: 15, scope: !15161)
!15168 = !DILocation(line: 328, column: 9, scope: !15161)
!15169 = !DILocation(line: 328, column: 45, scope: !15161)
!15170 = !DILocation(line: 328, column: 2, scope: !15161)
!15171 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !273, file: !273, line: 294, type: !15172, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !15174)
!15172 = !DISubroutineType(types: !15173)
!15173 = !{!15074, !15111}
!15174 = !{!15175}
!15175 = !DILocalVariable(name: "list", arg: 1, scope: !15171, file: !273, line: 294, type: !15111)
!15176 = !DILocation(line: 0, scope: !15171)
!15177 = !DILocation(line: 296, column: 9, scope: !15171)
!15178 = !DILocation(line: 296, column: 2, scope: !15171)
!15179 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !273, file: !273, line: 266, type: !15180, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !15182)
!15180 = !DISubroutineType(types: !15181)
!15181 = !{!211, !15111}
!15182 = !{!15183}
!15183 = !DILocalVariable(name: "list", arg: 1, scope: !15179, file: !273, line: 266, type: !15111)
!15184 = !DILocation(line: 0, scope: !15179)
!15185 = !DILocation(line: 268, column: 15, scope: !15179)
!15186 = !DILocation(line: 268, column: 20, scope: !15179)
!15187 = !DILocation(line: 268, column: 2, scope: !15179)
!15188 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2232, file: !2232, line: 150, type: !15189, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !15191)
!15189 = !DISubroutineType(types: !15190)
!15190 = !{!103, !2205}
!15191 = !{!15192, !15193, !15194, !15196}
!15192 = !DILocalVariable(name: "to", arg: 1, scope: !15188, file: !2232, line: 150, type: !2205)
!15193 = !DILocalVariable(name: "ret", scope: !15188, file: !2232, line: 152, type: !103)
!15194 = !DILocalVariable(name: "__i", scope: !15195, file: !2232, line: 154, type: !14957)
!15195 = distinct !DILexicalBlock(scope: !15188, file: !2232, line: 154, column: 2)
!15196 = !DILocalVariable(name: "__key", scope: !15195, file: !2232, line: 154, type: !14957)
!15197 = !DILocation(line: 0, scope: !15188)
!15198 = !DILocation(line: 0, scope: !15195)
!15199 = !DILocation(line: 0, scope: !14979, inlinedAt: !15200)
!15200 = distinct !DILocation(line: 154, column: 2, scope: !15195)
!15201 = !DILocation(line: 55, column: 2, scope: !14988, inlinedAt: !15202)
!15202 = distinct !DILocation(line: 145, column: 10, scope: !14979, inlinedAt: !15200)
!15203 = !DILocation(line: 0, scope: !14988, inlinedAt: !15202)
!15204 = !DILocation(line: 155, column: 7, scope: !15205)
!15205 = distinct !DILexicalBlock(scope: !15206, file: !2232, line: 155, column: 7)
!15206 = distinct !DILexicalBlock(scope: !15207, file: !2232, line: 154, column: 24)
!15207 = distinct !DILexicalBlock(scope: !15195, file: !2232, line: 154, column: 2)
!15208 = !DILocation(line: 155, column: 7, scope: !15206)
!15209 = !DILocation(line: 156, column: 4, scope: !15210)
!15210 = distinct !DILexicalBlock(scope: !15205, file: !2232, line: 155, column: 39)
!15211 = !DILocation(line: 158, column: 3, scope: !15210)
!15212 = !DILocation(line: 0, scope: !15047, inlinedAt: !15213)
!15213 = distinct !DILocation(line: 154, column: 2, scope: !15207)
!15214 = !DILocation(line: 0, scope: !15055, inlinedAt: !15215)
!15215 = distinct !DILocation(line: 215, column: 2, scope: !15047, inlinedAt: !15213)
!15216 = !DILocation(line: 95, column: 2, scope: !15055, inlinedAt: !15215)
!15217 = !DILocation(line: 161, column: 2, scope: !15188)
!15218 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !273, file: !273, line: 225, type: !15219, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !15223)
!15219 = !DISubroutineType(types: !15220)
!15220 = !{!211, !15221}
!15221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15222, size: 32)
!15222 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2209)
!15223 = !{!15224}
!15224 = !DILocalVariable(name: "node", arg: 1, scope: !15218, file: !273, line: 225, type: !15221)
!15225 = !DILocation(line: 0, scope: !15218)
!15226 = !DILocation(line: 227, column: 15, scope: !15218)
!15227 = !DILocation(line: 227, column: 20, scope: !15218)
!15228 = !DILocation(line: 227, column: 2, scope: !15218)
!15229 = distinct !DISubprogram(name: "remove_timeout", scope: !2232, file: !2232, line: 53, type: !2226, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !15230)
!15230 = !{!15231}
!15231 = !DILocalVariable(name: "t", arg: 1, scope: !15229, file: !2232, line: 53, type: !2205)
!15232 = !DILocation(line: 0, scope: !15229)
!15233 = !DILocation(line: 55, column: 6, scope: !15234)
!15234 = distinct !DILexicalBlock(scope: !15229, file: !2232, line: 55, column: 6)
!15235 = !DILocation(line: 55, column: 14, scope: !15234)
!15236 = !DILocation(line: 55, column: 6, scope: !15229)
!15237 = !DILocation(line: 56, column: 25, scope: !15238)
!15238 = distinct !DILexicalBlock(scope: !15234, file: !2232, line: 55, column: 23)
!15239 = !DILocation(line: 56, column: 12, scope: !15238)
!15240 = !DILocation(line: 56, column: 19, scope: !15238)
!15241 = !DILocation(line: 57, column: 2, scope: !15238)
!15242 = !DILocation(line: 59, column: 23, scope: !15229)
!15243 = !DILocation(line: 59, column: 2, scope: !15229)
!15244 = !DILocation(line: 60, column: 1, scope: !15229)
!15245 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !273, file: !273, line: 496, type: !15246, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !15248)
!15246 = !DISubroutineType(types: !15247)
!15247 = !{null, !15074}
!15248 = !{!15249, !15250, !15251}
!15249 = !DILocalVariable(name: "node", arg: 1, scope: !15245, file: !273, line: 496, type: !15074)
!15250 = !DILocalVariable(name: "prev", scope: !15245, file: !273, line: 498, type: !15086)
!15251 = !DILocalVariable(name: "next", scope: !15245, file: !273, line: 499, type: !15086)
!15252 = !DILocation(line: 0, scope: !15245)
!15253 = !DILocation(line: 498, column: 34, scope: !15245)
!15254 = !DILocation(line: 499, column: 34, scope: !15245)
!15255 = !DILocation(line: 501, column: 8, scope: !15245)
!15256 = !DILocation(line: 501, column: 13, scope: !15245)
!15257 = !DILocation(line: 502, column: 8, scope: !15245)
!15258 = !DILocation(line: 502, column: 13, scope: !15245)
!15259 = !DILocation(line: 503, column: 2, scope: !15245)
!15260 = !DILocation(line: 504, column: 1, scope: !15245)
!15261 = distinct !DISubprogram(name: "sys_dnode_init", scope: !273, file: !273, line: 211, type: !15246, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !15262)
!15262 = !{!15263}
!15263 = !DILocalVariable(name: "node", arg: 1, scope: !15261, file: !273, line: 211, type: !15074)
!15264 = !DILocation(line: 0, scope: !15261)
!15265 = !DILocation(line: 213, column: 8, scope: !15261)
!15266 = !DILocation(line: 213, column: 13, scope: !15261)
!15267 = !DILocation(line: 214, column: 8, scope: !15261)
!15268 = !DILocation(line: 214, column: 13, scope: !15261)
!15269 = !DILocation(line: 215, column: 1, scope: !15261)
!15270 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2232, file: !2232, line: 183, type: !15271, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !15275)
!15271 = !DISubroutineType(types: !15272)
!15272 = !{!1445, !15273}
!15273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15274, size: 32)
!15274 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2206)
!15275 = !{!15276, !15277, !15278, !15280}
!15276 = !DILocalVariable(name: "timeout", arg: 1, scope: !15270, file: !2232, line: 183, type: !15273)
!15277 = !DILocalVariable(name: "ticks", scope: !15270, file: !2232, line: 185, type: !1445)
!15278 = !DILocalVariable(name: "__i", scope: !15279, file: !2232, line: 187, type: !14957)
!15279 = distinct !DILexicalBlock(scope: !15270, file: !2232, line: 187, column: 2)
!15280 = !DILocalVariable(name: "__key", scope: !15279, file: !2232, line: 187, type: !14957)
!15281 = !DILocation(line: 0, scope: !15270)
!15282 = !DILocation(line: 0, scope: !15279)
!15283 = !DILocation(line: 0, scope: !14979, inlinedAt: !15284)
!15284 = distinct !DILocation(line: 187, column: 2, scope: !15279)
!15285 = !DILocation(line: 55, column: 2, scope: !14988, inlinedAt: !15286)
!15286 = distinct !DILocation(line: 145, column: 10, scope: !14979, inlinedAt: !15284)
!15287 = !DILocation(line: 0, scope: !14988, inlinedAt: !15286)
!15288 = !DILocation(line: 188, column: 11, scope: !15289)
!15289 = distinct !DILexicalBlock(scope: !15290, file: !2232, line: 187, column: 24)
!15290 = distinct !DILexicalBlock(scope: !15279, file: !2232, line: 187, column: 2)
!15291 = !DILocation(line: 0, scope: !15047, inlinedAt: !15292)
!15292 = distinct !DILocation(line: 187, column: 2, scope: !15290)
!15293 = !DILocation(line: 0, scope: !15055, inlinedAt: !15294)
!15294 = distinct !DILocation(line: 215, column: 2, scope: !15047, inlinedAt: !15292)
!15295 = !DILocation(line: 95, column: 2, scope: !15055, inlinedAt: !15294)
!15296 = !DILocation(line: 191, column: 2, scope: !15270)
!15297 = distinct !DISubprogram(name: "timeout_rem", scope: !2232, file: !2232, line: 165, type: !15271, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !15298)
!15298 = !{!15299, !15300, !15301}
!15299 = !DILocalVariable(name: "timeout", arg: 1, scope: !15297, file: !2232, line: 165, type: !15273)
!15300 = !DILocalVariable(name: "ticks", scope: !15297, file: !2232, line: 167, type: !1445)
!15301 = !DILocalVariable(name: "t", scope: !15302, file: !2232, line: 173, type: !2205)
!15302 = distinct !DILexicalBlock(scope: !15297, file: !2232, line: 173, column: 2)
!15303 = !DILocation(line: 0, scope: !15297)
!15304 = !DILocation(line: 169, column: 6, scope: !15305)
!15305 = distinct !DILexicalBlock(scope: !15297, file: !2232, line: 169, column: 6)
!15306 = !DILocation(line: 169, column: 6, scope: !15297)
!15307 = !DILocation(line: 173, column: 28, scope: !15302)
!15308 = !DILocation(line: 0, scope: !15302)
!15309 = !DILocation(line: 173, column: 39, scope: !15310)
!15310 = distinct !DILexicalBlock(scope: !15302, file: !2232, line: 173, column: 2)
!15311 = !DILocation(line: 173, column: 2, scope: !15302)
!15312 = !DILocation(line: 174, column: 15, scope: !15313)
!15313 = distinct !DILexicalBlock(scope: !15310, file: !2232, line: 173, column: 61)
!15314 = !DILocation(line: 174, column: 9, scope: !15313)
!15315 = !DILocation(line: 175, column: 15, scope: !15316)
!15316 = distinct !DILexicalBlock(scope: !15313, file: !2232, line: 175, column: 7)
!15317 = !DILocation(line: 175, column: 7, scope: !15313)
!15318 = !DILocation(line: 173, column: 52, scope: !15310)
!15319 = distinct !{!15319, !15311, !15320}
!15320 = !DILocation(line: 178, column: 2, scope: !15302)
!15321 = !DILocation(line: 180, column: 17, scope: !15297)
!15322 = !DILocation(line: 180, column: 15, scope: !15297)
!15323 = !DILocation(line: 180, column: 2, scope: !15297)
!15324 = !DILocation(line: 181, column: 1, scope: !15297)
!15325 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !12635, file: !12635, line: 35, type: !15326, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !15328)
!15326 = !DISubroutineType(types: !15327)
!15327 = !{!211, !15273}
!15328 = !{!15329}
!15329 = !DILocalVariable(name: "to", arg: 1, scope: !15325, file: !12635, line: 35, type: !15273)
!15330 = !DILocation(line: 0, scope: !15325)
!15331 = !DILocation(line: 37, column: 35, scope: !15325)
!15332 = !DILocation(line: 37, column: 10, scope: !15325)
!15333 = !DILocation(line: 37, column: 9, scope: !15325)
!15334 = !DILocation(line: 37, column: 2, scope: !15325)
!15335 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2232, file: !2232, line: 194, type: !15271, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !15336)
!15336 = !{!15337, !15338, !15339, !15341}
!15337 = !DILocalVariable(name: "timeout", arg: 1, scope: !15335, file: !2232, line: 194, type: !15273)
!15338 = !DILocalVariable(name: "ticks", scope: !15335, file: !2232, line: 196, type: !1445)
!15339 = !DILocalVariable(name: "__i", scope: !15340, file: !2232, line: 198, type: !14957)
!15340 = distinct !DILexicalBlock(scope: !15335, file: !2232, line: 198, column: 2)
!15341 = !DILocalVariable(name: "__key", scope: !15340, file: !2232, line: 198, type: !14957)
!15342 = !DILocation(line: 0, scope: !15335)
!15343 = !DILocation(line: 0, scope: !15340)
!15344 = !DILocation(line: 0, scope: !14979, inlinedAt: !15345)
!15345 = distinct !DILocation(line: 198, column: 2, scope: !15340)
!15346 = !DILocation(line: 55, column: 2, scope: !14988, inlinedAt: !15347)
!15347 = distinct !DILocation(line: 145, column: 10, scope: !14979, inlinedAt: !15345)
!15348 = !DILocation(line: 0, scope: !14988, inlinedAt: !15347)
!15349 = !DILocation(line: 199, column: 11, scope: !15350)
!15350 = distinct !DILexicalBlock(scope: !15351, file: !2232, line: 198, column: 24)
!15351 = distinct !DILexicalBlock(scope: !15340, file: !2232, line: 198, column: 2)
!15352 = !DILocation(line: 199, column: 23, scope: !15350)
!15353 = !DILocation(line: 0, scope: !15047, inlinedAt: !15354)
!15354 = distinct !DILocation(line: 198, column: 2, scope: !15351)
!15355 = !DILocation(line: 0, scope: !15055, inlinedAt: !15356)
!15356 = distinct !DILocation(line: 215, column: 2, scope: !15047, inlinedAt: !15354)
!15357 = !DILocation(line: 95, column: 2, scope: !15055, inlinedAt: !15356)
!15358 = !DILocation(line: 199, column: 21, scope: !15350)
!15359 = !DILocation(line: 202, column: 2, scope: !15335)
!15360 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2232, file: !2232, line: 205, type: !15063, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !15361)
!15361 = !{!15362, !15363, !15365}
!15362 = !DILocalVariable(name: "ret", scope: !15360, file: !2232, line: 207, type: !611)
!15363 = !DILocalVariable(name: "__i", scope: !15364, file: !2232, line: 209, type: !14957)
!15364 = distinct !DILexicalBlock(scope: !15360, file: !2232, line: 209, column: 2)
!15365 = !DILocalVariable(name: "__key", scope: !15364, file: !2232, line: 209, type: !14957)
!15366 = !DILocation(line: 0, scope: !15360)
!15367 = !DILocation(line: 0, scope: !15364)
!15368 = !DILocation(line: 0, scope: !14979, inlinedAt: !15369)
!15369 = distinct !DILocation(line: 209, column: 2, scope: !15364)
!15370 = !DILocation(line: 55, column: 2, scope: !14988, inlinedAt: !15371)
!15371 = distinct !DILocation(line: 145, column: 10, scope: !14979, inlinedAt: !15369)
!15372 = !DILocation(line: 0, scope: !14988, inlinedAt: !15371)
!15373 = !DILocation(line: 210, column: 9, scope: !15374)
!15374 = distinct !DILexicalBlock(scope: !15375, file: !2232, line: 209, column: 24)
!15375 = distinct !DILexicalBlock(scope: !15364, file: !2232, line: 209, column: 2)
!15376 = !DILocation(line: 0, scope: !15047, inlinedAt: !15377)
!15377 = distinct !DILocation(line: 209, column: 2, scope: !15375)
!15378 = !DILocation(line: 0, scope: !15055, inlinedAt: !15379)
!15379 = distinct !DILocation(line: 215, column: 2, scope: !15047, inlinedAt: !15377)
!15380 = !DILocation(line: 95, column: 2, scope: !15055, inlinedAt: !15379)
!15381 = !DILocation(line: 212, column: 2, scope: !15360)
!15382 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2232, file: !2232, line: 215, type: !10272, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !15383)
!15383 = !{!15384, !15385, !15386, !15388, !15389, !15392, !15393}
!15384 = !DILocalVariable(name: "ticks", arg: 1, scope: !15382, file: !2232, line: 215, type: !611)
!15385 = !DILocalVariable(name: "is_idle", arg: 2, scope: !15382, file: !2232, line: 215, type: !211)
!15386 = !DILocalVariable(name: "__i", scope: !15387, file: !2232, line: 217, type: !14957)
!15387 = distinct !DILexicalBlock(scope: !15382, file: !2232, line: 217, column: 2)
!15388 = !DILocalVariable(name: "__key", scope: !15387, file: !2232, line: 217, type: !14957)
!15389 = !DILocalVariable(name: "next_to", scope: !15390, file: !2232, line: 218, type: !103)
!15390 = distinct !DILexicalBlock(scope: !15391, file: !2232, line: 217, column: 24)
!15391 = distinct !DILexicalBlock(scope: !15387, file: !2232, line: 217, column: 2)
!15392 = !DILocalVariable(name: "sooner", scope: !15390, file: !2232, line: 219, type: !211)
!15393 = !DILocalVariable(name: "imminent", scope: !15390, file: !2232, line: 221, type: !211)
!15394 = !DILocation(line: 0, scope: !15382)
!15395 = !DILocation(line: 0, scope: !15387)
!15396 = !DILocation(line: 0, scope: !14979, inlinedAt: !15397)
!15397 = distinct !DILocation(line: 217, column: 2, scope: !15387)
!15398 = !DILocation(line: 55, column: 2, scope: !14988, inlinedAt: !15399)
!15399 = distinct !DILocation(line: 145, column: 10, scope: !14979, inlinedAt: !15397)
!15400 = !DILocation(line: 0, scope: !14988, inlinedAt: !15399)
!15401 = !DILocation(line: 218, column: 17, scope: !15390)
!15402 = !DILocation(line: 0, scope: !15390)
!15403 = !DILocation(line: 221, column: 27, scope: !15390)
!15404 = !DILocation(line: 233, column: 17, scope: !15405)
!15405 = distinct !DILexicalBlock(scope: !15390, file: !2232, line: 233, column: 7)
!15406 = !DILocation(line: 234, column: 26, scope: !15407)
!15407 = distinct !DILexicalBlock(scope: !15405, file: !2232, line: 233, column: 56)
!15408 = !DILocation(line: 234, column: 4, scope: !15407)
!15409 = !DILocation(line: 235, column: 3, scope: !15407)
!15410 = !DILocation(line: 0, scope: !15047, inlinedAt: !15411)
!15411 = distinct !DILocation(line: 217, column: 2, scope: !15391)
!15412 = !DILocation(line: 0, scope: !15055, inlinedAt: !15413)
!15413 = distinct !DILocation(line: 215, column: 2, scope: !15047, inlinedAt: !15411)
!15414 = !DILocation(line: 95, column: 2, scope: !15055, inlinedAt: !15413)
!15415 = !DILocation(line: 237, column: 1, scope: !15382)
!15416 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2232, file: !2232, line: 239, type: !15417, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !15419)
!15417 = !DISubroutineType(types: !15418)
!15418 = !{null, !611}
!15419 = !{!15420, !15421, !15422, !15424}
!15420 = !DILocalVariable(name: "ticks", arg: 1, scope: !15416, file: !2232, line: 239, type: !611)
!15421 = !DILocalVariable(name: "key", scope: !15416, file: !2232, line: 245, type: !14957)
!15422 = !DILocalVariable(name: "t", scope: !15423, file: !2232, line: 262, type: !2205)
!15423 = distinct !DILexicalBlock(scope: !15416, file: !2232, line: 261, column: 67)
!15424 = !DILocalVariable(name: "dt", scope: !15423, file: !2232, line: 263, type: !103)
!15425 = !DILocation(line: 0, scope: !15416)
!15426 = !DILocation(line: 242, column: 2, scope: !15416)
!15427 = !DILocation(line: 0, scope: !14979, inlinedAt: !15428)
!15428 = distinct !DILocation(line: 245, column: 25, scope: !15416)
!15429 = !DILocation(line: 55, column: 2, scope: !14988, inlinedAt: !15430)
!15430 = distinct !DILocation(line: 145, column: 10, scope: !14979, inlinedAt: !15428)
!15431 = !DILocation(line: 0, scope: !14988, inlinedAt: !15430)
!15432 = !DILocation(line: 261, column: 9, scope: !15416)
!15433 = !DILocation(line: 261, column: 17, scope: !15416)
!15434 = !DILocation(line: 261, column: 25, scope: !15416)
!15435 = !DILocation(line: 261, column: 37, scope: !15416)
!15436 = !DILocation(line: 261, column: 47, scope: !15416)
!15437 = !DILocation(line: 261, column: 44, scope: !15416)
!15438 = !DILocation(line: 261, column: 2, scope: !15416)
!15439 = !DILocation(line: 0, scope: !15423)
!15440 = !DILocation(line: 263, column: 12, scope: !15423)
!15441 = !DILocation(line: 265, column: 16, scope: !15423)
!15442 = !DILocation(line: 265, column: 13, scope: !15423)
!15443 = !DILocation(line: 266, column: 13, scope: !15423)
!15444 = !DILocation(line: 267, column: 3, scope: !15423)
!15445 = !DILocation(line: 0, scope: !15047, inlinedAt: !15446)
!15446 = distinct !DILocation(line: 269, column: 3, scope: !15423)
!15447 = !DILocation(line: 0, scope: !15055, inlinedAt: !15448)
!15448 = distinct !DILocation(line: 215, column: 2, scope: !15047, inlinedAt: !15446)
!15449 = !DILocation(line: 95, column: 2, scope: !15055, inlinedAt: !15448)
!15450 = !DILocation(line: 270, column: 6, scope: !15423)
!15451 = !DILocation(line: 270, column: 3, scope: !15423)
!15452 = !DILocation(line: 0, scope: !14979, inlinedAt: !15453)
!15453 = distinct !DILocation(line: 271, column: 9, scope: !15423)
!15454 = !DILocation(line: 55, column: 2, scope: !14988, inlinedAt: !15455)
!15455 = distinct !DILocation(line: 145, column: 10, scope: !14979, inlinedAt: !15453)
!15456 = !DILocation(line: 0, scope: !14988, inlinedAt: !15455)
!15457 = !DILocation(line: 272, column: 22, scope: !15423)
!15458 = distinct !{!15458, !15438, !15459}
!15459 = !DILocation(line: 273, column: 2, scope: !15416)
!15460 = !DILocation(line: 276, column: 19, scope: !15461)
!15461 = distinct !DILexicalBlock(scope: !15462, file: !2232, line: 275, column: 23)
!15462 = distinct !DILexicalBlock(scope: !15416, file: !2232, line: 275, column: 6)
!15463 = !DILocation(line: 277, column: 2, scope: !15461)
!15464 = !DILocation(line: 279, column: 15, scope: !15416)
!15465 = !DILocation(line: 279, column: 12, scope: !15416)
!15466 = !DILocation(line: 280, column: 21, scope: !15416)
!15467 = !DILocation(line: 282, column: 24, scope: !15416)
!15468 = !DILocation(line: 282, column: 2, scope: !15416)
!15469 = !DILocation(line: 0, scope: !15047, inlinedAt: !15470)
!15470 = distinct !DILocation(line: 284, column: 2, scope: !15416)
!15471 = !DILocation(line: 0, scope: !15055, inlinedAt: !15472)
!15472 = distinct !DILocation(line: 215, column: 2, scope: !15047, inlinedAt: !15470)
!15473 = !DILocation(line: 95, column: 2, scope: !15055, inlinedAt: !15472)
!15474 = !DILocation(line: 285, column: 1, scope: !15416)
!15475 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2232, file: !2232, line: 287, type: !15476, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !15478)
!15476 = !DISubroutineType(types: !15477)
!15477 = !{!330}
!15478 = !{!15479, !15480, !15482}
!15479 = !DILocalVariable(name: "t", scope: !15475, file: !2232, line: 289, type: !163)
!15480 = !DILocalVariable(name: "__i", scope: !15481, file: !2232, line: 291, type: !14957)
!15481 = distinct !DILexicalBlock(scope: !15475, file: !2232, line: 291, column: 2)
!15482 = !DILocalVariable(name: "__key", scope: !15481, file: !2232, line: 291, type: !14957)
!15483 = !DILocation(line: 0, scope: !15475)
!15484 = !DILocation(line: 0, scope: !15481)
!15485 = !DILocation(line: 0, scope: !14979, inlinedAt: !15486)
!15486 = distinct !DILocation(line: 291, column: 2, scope: !15481)
!15487 = !DILocation(line: 55, column: 2, scope: !14988, inlinedAt: !15488)
!15488 = distinct !DILocation(line: 145, column: 10, scope: !14979, inlinedAt: !15486)
!15489 = !DILocation(line: 0, scope: !14988, inlinedAt: !15488)
!15490 = !DILocation(line: 292, column: 7, scope: !15491)
!15491 = distinct !DILexicalBlock(scope: !15492, file: !2232, line: 291, column: 24)
!15492 = distinct !DILexicalBlock(scope: !15481, file: !2232, line: 291, column: 2)
!15493 = !DILocation(line: 292, column: 19, scope: !15491)
!15494 = !DILocation(line: 0, scope: !15047, inlinedAt: !15495)
!15495 = distinct !DILocation(line: 291, column: 2, scope: !15492)
!15496 = !DILocation(line: 0, scope: !15055, inlinedAt: !15497)
!15497 = distinct !DILocation(line: 215, column: 2, scope: !15047, inlinedAt: !15495)
!15498 = !DILocation(line: 95, column: 2, scope: !15055, inlinedAt: !15497)
!15499 = !DILocation(line: 292, column: 17, scope: !15491)
!15500 = !DILocation(line: 294, column: 2, scope: !15475)
!15501 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2232, file: !2232, line: 297, type: !135, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !162)
!15502 = !DILocation(line: 300, column: 19, scope: !15501)
!15503 = !DILocation(line: 300, column: 9, scope: !15501)
!15504 = !DILocation(line: 300, column: 2, scope: !15501)
!15505 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2232, file: !2232, line: 306, type: !15476, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !162)
!15506 = !DILocation(line: 308, column: 9, scope: !15505)
!15507 = !DILocation(line: 308, column: 2, scope: !15505)
!15508 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2232, file: !2232, line: 319, type: !6411, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !15509)
!15509 = !{!15510, !15511, !15512, !15513}
!15510 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !15508, file: !2232, line: 319, type: !137)
!15511 = !DILocalVariable(name: "start_cycles", scope: !15508, file: !2232, line: 328, type: !137)
!15512 = !DILocalVariable(name: "cycles_to_wait", scope: !15508, file: !2232, line: 331, type: !137)
!15513 = !DILocalVariable(name: "current_cycles", scope: !15514, file: !2232, line: 338, type: !137)
!15514 = distinct !DILexicalBlock(scope: !15515, file: !2232, line: 337, column: 11)
!15515 = distinct !DILexicalBlock(scope: !15516, file: !2232, line: 337, column: 2)
!15516 = distinct !DILexicalBlock(scope: !15508, file: !2232, line: 337, column: 2)
!15517 = !DILocation(line: 0, scope: !15508)
!15518 = !DILocation(line: 322, column: 19, scope: !15519)
!15519 = distinct !DILexicalBlock(scope: !15508, file: !2232, line: 322, column: 6)
!15520 = !DILocation(line: 322, column: 6, scope: !15508)
!15521 = !DILocation(line: 328, column: 26, scope: !15508)
!15522 = !DILocation(line: 333, column: 43, scope: !15508)
!15523 = !DILocation(line: 337, column: 2, scope: !15508)
!15524 = !DILocation(line: 338, column: 29, scope: !15514)
!15525 = !DILocation(line: 0, scope: !15514)
!15526 = !DILocation(line: 341, column: 23, scope: !15527)
!15527 = distinct !DILexicalBlock(scope: !15514, file: !2232, line: 341, column: 7)
!15528 = !DILocation(line: 341, column: 39, scope: !15527)
!15529 = !DILocation(line: 349, column: 1, scope: !15508)
!15530 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !357, file: !357, line: 1675, type: !135, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !162)
!15531 = !DILocation(line: 1677, column: 9, scope: !15530)
!15532 = !DILocation(line: 1677, column: 2, scope: !15530)
!15533 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !15534, file: !15534, line: 24, type: !135, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !162)
!15534 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15535 = !DILocation(line: 26, column: 9, scope: !15533)
!15536 = !DILocation(line: 26, column: 2, scope: !15533)
!15537 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2232, file: !2232, line: 364, type: !15538, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2202, retainedNodes: !15540)
!15538 = !DISubroutineType(types: !15539)
!15539 = !{!163, !14947}
!15540 = !{!15541, !15542}
!15541 = !DILocalVariable(name: "timeout", arg: 1, scope: !15537, file: !2232, line: 364, type: !14947)
!15542 = !DILocalVariable(name: "dt", scope: !15537, file: !2232, line: 366, type: !1445)
!15543 = !DILocation(line: 0, scope: !15537)
!15544 = !DILocation(line: 368, column: 6, scope: !15537)
!15545 = !DILocation(line: 371, column: 10, scope: !15546)
!15546 = distinct !DILexicalBlock(scope: !15547, file: !2232, line: 370, column: 47)
!15547 = distinct !DILexicalBlock(scope: !15548, file: !2232, line: 370, column: 13)
!15548 = distinct !DILexicalBlock(scope: !15537, file: !2232, line: 368, column: 6)
!15549 = !DILocation(line: 371, column: 3, scope: !15546)
!15550 = !DILocation(line: 376, column: 58, scope: !15551)
!15551 = distinct !DILexicalBlock(scope: !15552, file: !2232, line: 376, column: 7)
!15552 = distinct !DILexicalBlock(scope: !15547, file: !2232, line: 372, column: 9)
!15553 = !DILocation(line: 376, column: 7, scope: !15552)
!15554 = !DILocation(line: 376, column: 43, scope: !15551)
!15555 = !DILocation(line: 377, column: 4, scope: !15556)
!15556 = distinct !DILexicalBlock(scope: !15551, file: !2232, line: 376, column: 64)
!15557 = !DILocation(line: 379, column: 10, scope: !15552)
!15558 = !DILocation(line: 379, column: 33, scope: !15552)
!15559 = !DILocation(line: 379, column: 31, scope: !15552)
!15560 = !DILocation(line: 379, column: 3, scope: !15552)
!15561 = !DILocation(line: 0, scope: !15548)
!15562 = !DILocation(line: 381, column: 1, scope: !15537)
!15563 = distinct !DISubprogram(name: "boot_banner", scope: !15564, file: !15564, line: 26, type: !2848, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2834, retainedNodes: !162)
!15564 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15565 = !DILocation(line: 34, column: 2, scope: !15563)
!15566 = !DILocation(line: 36, column: 1, scope: !15563)
